<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldSurface" vsli:raw="The design surface that is losing activation.">これからアクティブでなくなるデザイン サーフェイス。</param>
      <param name="newSurface" vsli:raw="The design surface that is gaining activation.">これからアクティブになるデザイン サーフェイス。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary vsli:raw="Gets the design surface that is gaining activation.">これからアクティブになるデザイン サーフェイスを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is gaining activation.">これからアクティブになる <see cref="T:System.ComponentModel.Design.DesignSurface" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary vsli:raw="Gets the design surface that is losing activation.">これからアクティブでなくなるデザイン サーフェイスを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is losing activation.">これからアクティブでなくなる <see cref="T:System.ComponentModel.Design.DesignSurface" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> の <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> イベントを処理するメソッドを表します。 このクラスは継承できません。</summary>
      <param name="sender" vsli:raw="The source of the event, the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;.">イベントのソースである <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary vsli:raw="Provides a user interface for editing arrays at design time.">デザイン時に配列を編集するためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.Design.ArrayEditor&quot; /&gt; using the specified data type for the array.">配列に対して指定したデータ型を使用して、<see cref="T:System.ComponentModel.Design.ArrayEditor" /> の新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The data type of the items in the array.">配列の項目のデータ型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary vsli:raw="Gets the data type that this collection is designed to contain.">コレクションに格納するように指定されているデータ型を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates the data type that the collection is designed to contain.">コレクションに格納するように指定されているデータ型を示す <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary vsli:raw="Gets the items in the array.">配列の項目を取得します。</summary>
      <param name="editValue" vsli:raw="The array from which to retrieve the items.">項目の取得元となる配列。</param>
      <returns vsli:raw="An array consisting of the items within the specified array. If the object specified in the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is not an array, a new empty object is returned.">指定された配列内の項目で構成される配列。 <paramref name="editValue" /> パラメーターで指定されたオブジェクトが配列でない場合は、新しい空のオブジェクトが返されます。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary vsli:raw="Sets the items in the array.">配列の項目を設定します。</summary>
      <param name="editValue" vsli:raw="The array to set the items to.">項目を設定する対象の配列。</param>
      <param name="value" vsli:raw="The array of objects to set as the items of the array.">配列の項目として設定するオブジェクトの配列。</param>
      <returns vsli:raw="An instance of the new array. If the object specified by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is not an array, the object specified by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is returned.">新しい配列のインスタンス。 <paramref name="editValue" /> パラメーターで指定されたオブジェクトが配列でない場合は、<paramref name="editValue" /> パラメーターで指定されたオブジェクトが返されます。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary vsli:raw="Provides a user interface for editing binary data.">バイナリ データを編集するためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.BinaryEditor&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.BinaryEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">指定したサービス プロバイダーおよびコンテキストを使用して、指定したオブジェクトの値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">編集サービスを取得するために使用するサービス プロバイダー オブジェクト。</param>
      <param name="value" vsli:raw="The object to edit the value of.">値を編集する対象のオブジェクト。</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合、このメソッドは、渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> メソッドで使用するエディター スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="An &lt;code data-dev-comment-type=&quot;langword&quot;&gt;enum&lt;/code&gt; value indicating the provided editing style.">提供されている編集スタイルを示す <see langword="enum" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary vsli:raw="Displays byte arrays in hexadecimal, ANSI, and Unicode formats.">バイト配列を 16 進、ANSI、Unicode の各形式で表示します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ByteViewer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary vsli:raw="Gets the bytes in the buffer.">バッファー内のバイトを取得します。</summary>
      <returns vsli:raw="The unsigned byte array reference.">符号なしバイト配列参照。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary vsli:raw="Gets the display mode for the control.">コントロールの表示モードを取得します。</summary>
      <returns vsli:raw="The display mode that this control uses. The returned value is defined in &lt;see cref=&quot;T:System.ComponentModel.Design.DisplayMode&quot; /&gt;.">コントロールが使用する表示モード。 返される値は <see cref="T:System.ComponentModel.Design.DisplayMode" /> で定義されています。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyDown&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.KeyEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.Layout" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Paint&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.Paint" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary vsli:raw="Writes the raw data from the data buffer to a file.">バッファーから生データをファイルに書き込みます。</summary>
      <param name="path" vsli:raw="The file path to save to.">保存先のファイル パス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string (&quot;&quot;), contains only white space, or contains one or more invalid characters.">
        <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file write failed.">ファイルへの書き込みに失敗しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The access requested is not permitted by the operating system for the specified &lt;paramref name=&quot;path&quot; /&gt;, such as when access is &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;ReadWrite&quot; /&gt; and the file or directory is set for read-only access.">アクセスが <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用アクセスに設定されているなど、指定した <paramref name="path" /> に対するアクセス要求がオペレーティング システムで許可されません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary vsli:raw="Handles the &lt;see cref=&quot;E:System.Windows.Forms.ScrollBar.ValueChanged&quot; /&gt; event on the &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt; control's &lt;see cref=&quot;T:System.Windows.Forms.ScrollBar&quot; /&gt;.">
        <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> コントロールの <see cref="T:System.ComponentModel.Design.ByteViewer" /> で <see cref="T:System.Windows.Forms.ScrollBar" /> イベントを処理します。</summary>
      <param name="source" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary vsli:raw="Sets the byte array to display in the viewer.">ビューアーに表示するバイト配列を設定します。</summary>
      <param name="bytes" vsli:raw="The byte array to display.">表示するバイト配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The specified byte array is &lt;see langword=&quot;null&quot; /&gt;.">指定されたバイト配列が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary vsli:raw="Sets the current display mode.">現在の表示モードを設定します。</summary>
      <param name="mode" vsli:raw="The display mode to set.">設定する表示モード。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The specified display mode is not from the &lt;see cref=&quot;T:System.ComponentModel.Design.DisplayMode&quot; /&gt; enumeration.">指定された表示モードが <see cref="T:System.ComponentModel.Design.DisplayMode" /> 列挙体の値ではありません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary vsli:raw="Sets the file to display in the viewer.">ビューアーに表示するファイルを設定します。</summary>
      <param name="path" vsli:raw="The file path to load from.">読み込み元のファイル パス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string (&quot;&quot;), contains only white space, or contains one or more invalid characters.">
        <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">マップされていないドライブにあるなど、指定されたパスが無効です。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file load failed.">ファイルの読み込みに失敗しました。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The access requested is not permitted by the operating system for the specified &lt;paramref name=&quot;path&quot; /&gt;, such as when access is &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;ReadWrite&quot; /&gt; and the file or directory is set for read-only access.">アクセスが <see langword="Write" /> または <see langword="ReadWrite" /> であるのに、ファイルまたはディレクトリが読み取り専用アクセスに設定されているなど、指定した <paramref name="path" /> に対するアクセス要求がオペレーティング システムで許可されません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary vsli:raw="Sets the current line for the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Hexdump&quot; /&gt; view.">
        <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> ビューの現在の行を設定します。</summary>
      <param name="line" vsli:raw="The current line to display from.">表示開始行となる現在の行。</param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary vsli:raw="Provides a user interface that can edit most types of collections at design time.">ほとんどの型のコレクションを編集するためにデザイン時に利用できるユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; class using the specified collection type.">指定したコレクション型を使用して、<see cref="T:System.ComponentModel.Design.CollectionEditor" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The type of the collection for this editor to edit.">エディターで編集するコレクションの型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary vsli:raw="Cancels changes to the collection.">コレクションへの変更をキャンセルします。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary vsli:raw="Indicates whether original members of the collection can be removed.">コレクションの元のメンバーを削除できるかどうかを示します。</summary>
      <param name="value" vsli:raw="The value to remove.">削除する値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is permissible to remove this value from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default implementation always returns &lt;see langword=&quot;true&quot; /&gt;.">コレクションからこの値を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定の実装では、常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary vsli:raw="Indicates whether multiple collection items can be selected at once.">複数のコレクション項目を同時に選択できるかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it multiple collection members can be selected at the same time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this returns &lt;see langword=&quot;true&quot; /&gt;.">複数のコレクション メンバーを同時に選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、<see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary vsli:raw="Creates a new form to display and edit the current collection.">現在のコレクションを表示および編集するための新しいフォームを作成します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor.CollectionForm&quot; /&gt; to provide as the user interface for editing the collection.">コレクションを編集するためのユーザー インターフェイスとして提供する <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary vsli:raw="Gets the data type that this collection contains.">コレクションに格納されているデータ型を取得します。</summary>
      <returns vsli:raw="The data type of the items in the collection, or an &lt;see cref=&quot;T:System.Object&quot; /&gt; if no &lt;see langword=&quot;Item&quot; /&gt; property can be located on the collection.">コレクション内の項目のデータ型。コレクションで <see langword="Item" /> プロパティが見つからない場合は <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified collection item type.">指定したコレクション項目の型の新しいインスタンスを作成します。</summary>
      <param name="itemType" vsli:raw="The type of item to create.">作成するアイテムの型。</param>
      <returns vsli:raw="A new instance of the specified object.">指定したオブジェクトの新しいインスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary vsli:raw="Gets the data types that this collection editor can contain.">コレクション エディターでコレクションに格納できるデータ型を取得します。</summary>
      <returns vsli:raw="An array of data types that this collection can contain.">コレクションに格納できるデータ型の配列。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary vsli:raw="Destroys the specified instance of the object.">オブジェクトの指定されたインスタンスを破棄します。</summary>
      <param name="instance" vsli:raw="The object to destroy.">破棄するオブジェクト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">指定したサービス プロバイダーおよびコンテキストを使用して、指定したオブジェクトの値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services can be obtained.">編集サービスを取得するために使用するサービス プロバイダー オブジェクト。</param>
      <param name="value" vsli:raw="The object to edit the value of.">値を編集する対象のオブジェクト。</param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program did not succeed.">ソース コード管理プログラムにチェックインされているファイルのチェックアウトの試行が失敗しました。</exception>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合は、このメソッドは渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary vsli:raw="Retrieves the display text for the given list item.">特定のリスト項目の表示テキストを取得します。</summary>
      <param name="value" vsli:raw="The list item for which to retrieve display text.">表示テキストを取得する対象のリスト項目。</param>
      <returns vsli:raw="The display text for &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> の表示テキスト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the edit style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> メソッドで使用する編集スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; enumeration value indicating the provided editing style. If the method is not supported in the specified context, this method will return the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt; identifier.">提供されている編集スタイルを示す <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 列挙値。 指定したコンテキストでメソッドがサポートされていない場合、このメソッドは <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> 識別子を返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary vsli:raw="Gets an array of objects containing the specified collection.">指定したコレクションを格納しているオブジェクト配列を取得します。</summary>
      <param name="editValue" vsli:raw="The collection to edit.">編集対象のコレクション。</param>
      <returns vsli:raw="An array containing the collection objects, or an empty object array if the specified collection does not inherit from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">コレクション オブジェクトを格納している配列。指定したコレクションが <see cref="T:System.Collections.ICollection" /> から継承していない場合は空のオブジェクト配列。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary vsli:raw="Returns a list containing the given object.">特定のオブジェクトを含むリストを返します。</summary>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; returned as an object.">オブジェクトとして返される <see cref="T:System.Collections.ArrayList" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; which contains the individual objects to be created.">作成する個別のオブジェクトを含む <see cref="T:System.Collections.ArrayList" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service, if it is available.">要求されたサービスがある場合は、そのサービスを取得します。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">取得するサービスの型。</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be found.">サービスのインスタンス。サービスが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary vsli:raw="Sets the specified array as the items of the collection.">指定した配列をコレクション内の項目として設定します。</summary>
      <param name="editValue" vsli:raw="The collection to edit.">編集対象のコレクション。</param>
      <param name="value" vsli:raw="An array of objects to set as the collection items.">コレクション項目として設定するオブジェクト配列。</param>
      <returns vsli:raw="The newly created collection object or, otherwise, the collection indicated by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter.">新しく作成されたコレクション オブジェクト。新規コレクション オブジェクトがない場合は、<paramref name="editValue" /> パラメーターで示されるコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary vsli:raw="Displays the default Help topic for the collection editor.">コレクション エディターの既定のヘルプ トピックを表示します。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary vsli:raw="Gets the data type of each item in the collection.">コレクション内の各項目のデータ型を取得します。</summary>
      <returns vsli:raw="The data type of the collection items.">コレクション項目のデータ型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary vsli:raw="Gets the data type of the collection object.">コレクション オブジェクトのデータ型を取得します。</summary>
      <returns vsli:raw="The data type of the collection object.">コレクション オブジェクトのデータ型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary vsli:raw="Gets a type descriptor that indicates the current context.">現在のコンテキストを示す型記述子を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that indicates the context currently in use, or &lt;see langword=&quot;null&quot; /&gt; if no context is available.">現在使用中のコンテキストを示す <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。コンテキストがない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary vsli:raw="Gets the Help keyword to display the Help topic or topic list for when the editor's dialog box Help button or the F1 key is pressed.">エディターのダイアログ ボックスの [ヘルプ] ボタンまたは F1 キーが押されたときにヘルプ トピックまたはトピック リストを表示するためのヘルプ キーワードを取得します。</summary>
      <returns vsli:raw="The Help keyword to display the Help topic or topic list for when Help is requested from the editor.">エディターからヘルプが要求された場合にヘルプ トピックまたはトピック リストを表示するためのヘルプ キーワード。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary vsli:raw="Gets the available types of items that can be created for this collection.">コレクションに対して作成できる項目の有効な型を取得します。</summary>
      <returns vsli:raw="The types of items that can be created.">作成できる項目の型。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary vsli:raw="Provides a modal dialog box for editing the contents of a collection using a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditor" /> を使用してコレクションの内容を編集するためのモーダル ダイアログ ボックスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor.CollectionForm&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; to use for editing the collection.">コレクションの編集に使用する <see cref="T:System.ComponentModel.Design.CollectionEditor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary vsli:raw="Indicates whether you can remove the original members of the collection.">コレクションの元のメンバーを削除できるかどうかを示します。</summary>
      <param name="value" vsli:raw="The value to remove.">削除する値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is permissible to remove this value from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this method returns the value from &lt;see cref=&quot;M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; for this form.">コレクションからこの値を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、このメソッドは、フォームの <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> の <see cref="T:System.ComponentModel.Design.CollectionEditor" /> から値を返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary vsli:raw="Indicates whether multiple collection items can be selected at once.">複数のコレクション項目を同時に選択できるかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it multiple collection members can be selected at the same time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this method returns the value from &lt;see cref=&quot;M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; for this form.">複数のコレクション メンバーを同時に選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、このメソッドは、フォームの <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> の <see cref="T:System.ComponentModel.Design.CollectionEditor" /> から値を返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified collection item type.">指定したコレクション項目の型の新しいインスタンスを作成します。</summary>
      <param name="itemType" vsli:raw="The type of item to create.">作成するアイテムの型。</param>
      <returns vsli:raw="A new instance of the specified object, or &lt;see langword=&quot;null&quot; /&gt; if the user chose to cancel the creation of this instance.">指定したオブジェクトの新しいインスタンス。インスタンスの作成がユーザーによりキャンセルされた場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary vsli:raw="Destroys the specified instance of the object.">オブジェクトの指定されたインスタンスを破棄します。</summary>
      <param name="instance" vsli:raw="The object to destroy.">破棄するオブジェクト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary vsli:raw="Displays the specified exception to the user.">指定した例外をユーザーに対して表示します。</summary>
      <param name="e" vsli:raw="The exception to display.">表示する例外。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service, if it is available.">要求されたサービスがある場合は、そのサービスを取得します。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">取得するサービスの型。</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be found.">サービスのインスタンス。サービスが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary vsli:raw="Provides an opportunity to perform processing when a collection value has changed.">コレクション値が変更された場合に、処理を実行できるようにします。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary vsli:raw="Shows the dialog box for the collection editor using the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.IWindowsFormsEditorService&quot; /&gt; object.">指定した <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> オブジェクトを使用してコレクション エディターのダイアログ ボックスを表示します。</summary>
      <param name="edSvc" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.IWindowsFormsEditorService&quot; /&gt; that can be used to show the dialog box.">ダイアログ ボックスを表示するために使用できる <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; that indicates the result code returned from the dialog box.">ダイアログ ボックスから返された結果コードを示す <see cref="T:System.Windows.Forms.DialogResult" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary vsli:raw="Gets the data type of each item in the collection.">コレクション内の各項目のデータ型を取得します。</summary>
      <returns vsli:raw="The data type of the collection items.">コレクション項目のデータ型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary vsli:raw="Gets the data type of the collection object.">コレクション オブジェクトのデータ型を取得します。</summary>
      <returns vsli:raw="The data type of the collection object.">コレクション オブジェクトのデータ型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary vsli:raw="Gets a type descriptor that indicates the current context.">現在のコンテキストを示す型記述子を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that indicates the context currently in use, or &lt;see langword=&quot;null&quot; /&gt; if no context is available.">現在使用中のコンテキストを示す <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。コンテキストがない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary vsli:raw="Gets or sets the collection object to edit.">編集するコレクション オブジェクトを取得または設定します。</summary>
      <returns vsli:raw="The collection object to edit.">編集対象のコレクション オブジェクト。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary vsli:raw="Gets or sets the array of items for this form to display.">フォームに表示する項目の配列を取得または設定します。</summary>
      <returns vsli:raw="An array of objects for the form to display.">フォームに表示するオブジェクトの配列。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary vsli:raw="Gets the available item types that can be created for this collection.">コレクションに対して作成できる項目の有効な型を取得します。</summary>
      <returns vsli:raw="The types of items that can be created.">作成できる項目の型。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary vsli:raw="Extends the design mode behavior of a component.">コンポーネントのデザイン モードの動作を拡張します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary vsli:raw="Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.">コンポーネントの既定イベントに対するメソッド シグネチャをソース コード ファイル内に作成し、コード内のその位置にカーソルを移動します。</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program failed.">ソース コード管理プログラムにチェックインされているファイルのチェックアウトの試行が失敗しました。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary vsli:raw="Attempts to retrieve the specified type of service from the design mode site of the designer's component.">デザイナーのコンポーネントのデザイン モード サイトから、指定した型のサービスの取得を試みます。</summary>
      <param name="serviceType" vsli:raw="The type of service to request.">要求するサービスの型。</param>
      <returns vsli:raw="An object implementing the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">要求したサービスを実装しているオブジェクト。サービスを解決できない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Prepares the designer to view, edit, and design the specified component.">指定したコンポーネントをデザイナーで表示、編集、デザインできるように準備します。</summary>
      <param name="component" vsli:raw="The component for this designer.">デザイナーで操作する対象のコンポーネント。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Reinitializes an existing component.">既存のコンポーネントを再初期化します。</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">プロパティに適用する既定値の名前/値のディクショナリ。 既定値が指定されていない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">新たに作成されたコンポーネントを初期化します。</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">プロパティに適用する既定値の名前/値のディクショナリ。 既定値が指定されていない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary vsli:raw="Initializes the settings for an imported component that is already initialized to settings other than the defaults.">既定値以外の値に既に初期化されている、インポートされたコンポーネントの設定値を初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">指定した <see cref="T:System.ComponentModel.InheritanceAttribute" /> の <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> を取得します。</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; whose inheritance attribute to retrieve.">継承属性を取得する対象の <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified designer.">指定したデザイナーの <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Sets the default properties for the component.">コンポーネントの既定のプロパティを設定します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性から、項目を変更または削除できるようにします。</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">コンポーネントのクラスの属性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントから、項目を変更または削除できるようにします。</summary>
      <param name="events" vsli:raw="The events for the class of the component.">コンポーネントのクラスのイベント。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティから、項目を変更または削除できるようにします。</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">コンポーネントのクラスのプロパティ。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連の属性に項目を追加できるようにします。</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">コンポーネントのクラスの属性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のイベントに項目を追加できるようにします。</summary>
      <param name="events" vsli:raw="The events for the class of the component.">コンポーネントのクラスのイベント。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">デザイナーが、<see cref="T:System.ComponentModel.TypeDescriptor" /> を通じて公開する一連のプロパティに項目を追加できるようにします。</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">コンポーネントのクラスのプロパティ。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component has been changed.">コンポーネントが変更されたことを <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> に通知します。</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that has been changed.">変更されたメンバーを示す <see cref="T:System.ComponentModel.MemberDescriptor" />。</param>
      <param name="oldValue" vsli:raw="The old value of the member.">変更前のメンバーの値。</param>
      <param name="newValue" vsli:raw="The new value of the member.">変更後のメンバーの値。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component is about to be changed.">コンポーネントが変更されようとしていることを <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> に通知します。</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that is about to be changed.">変更されようとしているメンバーを示す <see cref="T:System.ComponentModel.MemberDescriptor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。 属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。 イベントのディクショナリ内でのキーは、イベント名です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。 プロパティのディクショナリ内でのキーは、プロパティ名です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">コンポーネントのクラスの <see cref="T:System.Attribute" /> オブジェクト。 属性のディクショナリ内でのキーは、属性の <see cref="P:System.Attribute.TypeId" /> 値です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">コンポーネントのクラスのイベントを表す <see cref="T:System.ComponentModel.EventDescriptor" /> オブジェクト。 イベントのディクショナリ内でのキーは、イベント名です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> メソッドのトピックを参照してください。</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">コンポーネントのクラスのプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクト。 プロパティのディクショナリ内でのキーは、プロパティ名です。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary vsli:raw="Gets the design-time action lists supported by the component associated with the designer.">デザイナーに関連付けられているコンポーネントでサポートされているデザイン時アクション リストを取得します。</summary>
      <returns vsli:raw="The design-time action lists supported by the component associated with the designer.">デザイナーに関連付けられているコンポーネントでサポートされているデザイン時アクション リスト。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">デザイナーで管理されているコンポーネントに関連付けられているコンポーネントのコレクションを取得します。</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">デザイナーで管理されているコンポーネントに関連付けられているコンポーネント。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary vsli:raw="Gets the component this designer is designing.">デザイナーがデザインするコンポーネントを取得します。</summary>
      <returns vsli:raw="The component managed by the designer.">デザイナーで管理されているコンポーネント。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets an attribute that indicates the type of inheritance of the associated component.">関連付けられているコンポーネントの継承の種類を示す属性を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; for the associated component.">関連付けられているコンポーネントの <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary vsli:raw="Gets a value indicating whether this component is inherited.">コンポーネントが継承されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is inherited; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンポーネントが継承されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for this designer.">このデザイナーの親コンポーネントを取得します。</summary>
      <returns vsli:raw="The parent component for this designer, or &lt;see langword=&quot;null&quot; /&gt; if this designer is the root component.">このデザイナーの親コンポーネント。このデザイナーがルート コンポーネントでない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary vsli:raw="Gets a collection of property values that override user settings.">ユーザー設定値をオーバーライドするプロパティ値のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection&quot; /&gt; that indicates the shadow properties of the design document.">デザイン ドキュメントのシャドウ プロパティを示す <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Children&quot; /&gt; property.">このメンバーの説明については、<see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> プロパティを参照してください。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; designers contained in the current parent designer.">現在の親デザイナーに格納された <see cref="T:System.Collections.ICollection" /> デザイナーのコレクションを含む <see cref="T:System.ComponentModel.Design.IDesigner" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Parent&quot; /&gt; property.">このメンバーの説明については、<see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> プロパティを参照してください。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; representing the parent designer, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent.">親デザイナーを表す <see cref="T:System.ComponentModel.Design.IDesigner" />。または、親がないときは <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary vsli:raw="Gets the design-time verbs supported by the component that is associated with the designer.">デサイナに関連付けられているコンポーネントがサポートしているデザイン時の動詞を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; objects, or &lt;see langword=&quot;null&quot; /&gt; if no designer verbs are available. This default implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> オブジェクトの <see cref="T:System.ComponentModel.Design.DesignerVerb" />。デザイナー動詞がない場合は <see langword="null" />。 この既定の実装は、常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary vsli:raw="Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.">特定のプロパティに対して継承された既定値や割り当てられた値をオーバーライドするシャドウ プロパティのコレクションを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a property matching the specified name exists in the collection.">指定した名前と一致するプロパティがコレクション内にあるかどうかを示します。</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for in the collection.">コレクション内にあるかどうかを調べるプロパティの名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">プロパティがコレクション内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the object at the specified index.">指定したインデックスにあるオブジェクトを取得または設定します。</summary>
      <param name="propertyName" vsli:raw="The name of the property to access in the collection.">コレクション内にあるかどうかを調べるプロパティの名前。</param>
      <returns vsli:raw="The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.">指定したプロパティの値がコレクション内にある場合は、その値。 それ以外の場合、シャドウ プロパティ値が適用されないプロパティの現在の値が取得されます。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary vsli:raw="This date time editor is a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; suitable for visually editing &lt;see cref=&quot;T:System.DateTime&quot; /&gt; objects.">この日時エディターは、<see cref="T:System.Drawing.Design.UITypeEditor" /> オブジェクト視覚的に編集する場合に適した <see cref="T:System.DateTime" /> です。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DateTimeEditor&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DateTimeEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.">GetEditorStyle によって提供された編集スタイルを使用して、指定したオブジェクト値を編集します。 必要な任意の編集サービスを取得できるように、サービス プロバイダーが提供されます。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">追加のコンテキスト情報を提供する際に使用可能な型記述子のコンテキスト。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">編集サービスを取得するために使用するサービス プロバイダー オブジェクト。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">編集する値のインスタンス。</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合、このメソッドは、渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.DateTimeEditor.EditValue*&quot;&gt;&lt;/xref&gt; method. If the method is not supported, this will return None.">
        <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" /> メソッドの編集スタイルを取得します。 このメソッドがサポートされていない場合は、None が返されます。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">追加のコンテキスト情報を提供する際に使用可能な型記述子のコンテキスト。</param>
      <returns vsli:raw="An &lt;code data-dev-comment-type=&quot;langword&quot;&gt;enum&lt;/code&gt; value indicating the provided editing style.">提供されている編集スタイルを示す <see langword="enum" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary vsli:raw="Represents a static header item on a smart tag panel. This class cannot be inherited.">スマート タグ パネルの静的ヘッダー項目を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name string.">指定した名前文字列を使用して、<see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">ヘッダーで表示されるテキスト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name and category strings.">指定した名前とカテゴリ文字列を使用して、<see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">ヘッダーで表示されるテキスト。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">パネル エントリのグループ化を定義する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary vsli:raw="Provides the base class for types that represent a panel item on a smart tag panel.">スマート タグ パネルのパネル項目を表す型の基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">パネル エントリのグループ化を定義する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
      <param name="description" vsli:raw="Supplemental text for this item, potentially used in ToolTips or the status bar.">ツールヒントやステータス バーで使用する可能性がある、この項目の補足テキスト。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary vsli:raw="Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionItem.Category&quot; /&gt; property value.">この項目を同じ <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> プロパティ値を持つ項目のグループに配置できるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item can be grouped; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">項目をグループ化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary vsli:raw="Gets the group name for an item.">項目のグループ名を取得します。</summary>
      <returns vsli:raw="A string that represents the group that the item is a member of.">項目がメンバーとなっているグループを表す文字列。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary vsli:raw="Gets the supplemental text for the item.">項目の補足テキストを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the descriptive text for the item.">項目を説明するテキストを格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary vsli:raw="Gets the text for this item.">この項目のテキストを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the display text for the item.">項目の表示テキストを格納している <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary vsli:raw="Gets a reference to a collection that can be used to store programmer-defined key/value pairs.">プログラマ定義のキーと値のペアを格納するために使用できるコレクションへの参照を取得します。</summary>
      <returns vsli:raw="A collection that implements &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">
        <see cref="T:System.Collections.IDictionary" /> を実装するコレクションです。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary vsli:raw="Gets or sets a value that indicates whether this item appears in source code view.">この項目がソース コード ビューに表示されるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this item appears in source code view; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">この項目がソース コード ビューに表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to the current collection.">指定した <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> を現在のコレクションに追加します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to add.">追加する <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; index at which the value has been added.">値が追加された位置の <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> ‏インデックス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains a specific element.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> に特定の要素が格納されているかどうかを判断します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 内で検索される <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> に指定した値が含まれている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">指定した配列インデックスを開始位置として、現在のコレクションの要素を指定した配列にコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">現在のコレクションから要素がコピーされる 1 次元の <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">コレクション内での指定した項目のインデックスを調べます。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the collection.">コレクション内で検索する <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;, if found; otherwise, -1.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 全体を対象に <paramref name="value" /> を検索し、見つかった場合は、インデックス番号の最も小さい要素の 0 から始まるインデックス番号、それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 内の指定したインデックスの位置に要素を挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to insert.">挿入する <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">特定のオブジェクトが <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 内にあるときに、最初に出現したものを削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> から削除する <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">要素の 0 から始まるインデックス。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; at the specified index.">指定したインデックスにある <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> です。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary vsli:raw="Provides the base class for types that define a list of items used to create a smart tag panel.">スマート タグ パネルの作成に使用する項目のリストを定義する型の基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="component" vsli:raw="A component related to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> に関連するコンポーネント。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the component associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> に関連付けられたコンポーネントが提供するサービスを表すオブジェクトを返します。</summary>
      <param name="serviceType" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Component" /> が提供するサービス。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;. This value is &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">
        <see cref="T:System.Object" /> で提供されるサービスを表す <see cref="T:System.ComponentModel.Component" />。 <see cref="T:System.ComponentModel.Component" /> が指定されたサービスを提供しない場合、この値は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary vsli:raw="Returns the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects contained in the list.">リストに含まれる <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> オブジェクトのコレクションを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that contains the items in this list.">このリスト内の項目を含む <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 配列。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary vsli:raw="Gets or sets a value indicating whether the smart tag panel should automatically be displayed when it is created.">スマート タグ パネルの作成時に、スマート タグ パネルを自動的に表示する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the panel should be shown when the owning component is created; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">所有側のコンポーネントの作成時に、パネルを表示する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary vsli:raw="Gets the component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> に関連するコンポーネントを取得します。</summary>
      <returns vsli:raw="A component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> に関連するコンポーネント。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with default settings.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> クラスの新しいインスタンスを既定の設定で初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with the specified panel items.">指定したパネル項目を使用して、<see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to populate the collection.">コレクションに読み込む <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection.">指定した <see cref="T:System.ComponentModel.Design.DesignerActionList" /> を現在のコレクションに追加します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to add.">追加する <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns vsli:raw="The position into which the new element is inserted into the collection's internal list.">コレクションの内部リストで新しい要素を挿入する位置。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; array to the end of the current collection.">指定した <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 配列の要素を現在のコレクションの末尾に追加します。</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to add.">追加する <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the end of the current collection.">指定した <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> の要素を現在のコレクションの末尾に追加します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to add.">追加する <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Indicates whether the collection contains a specific value.">特定の値がコレクションに含まれているかどうかを示します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to search for.">検索対象の <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した値がコレクションに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">指定した配列インデックスを開始位置として、現在のコレクションの要素を指定した配列にコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional array of type &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">現在のコレクションからコピーされる要素のコピー先である <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 型の 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the current collection is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">
        <paramref name="array" /> が多次元です。  
  
- または - 
現在のコレクションの要素数が、<paramref name="index" /> からコピー先の配列の末尾までに格納できる数を超えています。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A problem occurred casting the elements of the current collection to the type of the destination array, perhaps as the result of a failed downcast.">現在のコレクションの要素をコピー先配列の型にキャストする際に問題が発生しました。ダウンキャストの失敗が原因と思われます。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">コレクション内での指定した項目のインデックスを調べます。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to locate in the collection.">コレクション内で検索する <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the internal list; otherwise, -1.">内部リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Inserts the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; into the collection at the specified position.">コレクション内の指定した位置に、指定した <see cref="T:System.ComponentModel.Design.DesignerActionList" /> を挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to insert into the collection.">コレクションに挿入する <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the count of elements in the current collection.">
        <paramref name="index" /> が 0 未満か、現在のコレクションの要素数を超える値です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">値を検証するときに、追加のカスタム プロセスを実行します。</summary>
      <param name="value" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the first occurrence of a specific &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; from the collection.">最初に見つかった特定の <see cref="T:System.ComponentModel.Design.DesignerActionList" /> をコレクションから削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to remove from the current collection.">現在のコレクションから削除する <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">要素の 0 から始まるインデックス。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; at the specified index.">指定したインデックスにある <see cref="T:System.ComponentModel.Design.DesignerActionList" /> です。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the collection.">コレクションに関連付けられたオブジェクト。</param>
      <param name="changeType" vsli:raw="A value that specifies whether a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; has been added or removed from the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> がコレクションに追加されたのか、またはコレクションから削除されたのかを指定する値。</param>
      <param name="actionLists" vsli:raw="The collection of list elements after the action has been applied.">アクションが適用された後のリスト要素のコレクション。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects associated with this event.">このイベントに関連付けられている <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトのコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that represents the current state of the collection.">コレクションの現在の状態を表す <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether an element has been added or removed from the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">要素が <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトのコレクションに追加されたのか、またはコレクションから削除されたのかを示すフラグを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedType&quot; /&gt; that indicates the type of change.">変更の種類を示す <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトのコレクションに関連付けられたオブジェクトを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the managed &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt;.">管理されている <see cref="T:System.Object" /> に関連付けられている <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt;. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> の <see cref="T:System.ComponentModel.Design.DesignerActionService" /> イベントを処理するメソッドを表します。 このクラスは継承できません。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary vsli:raw="Specifies the type of change occurring in a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトのコレクションで発生する変更の種類を指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been added to the collection.">1 つ以上の <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトがコレクションに追加されました。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been removed from the collection.">1 つ以上の <see cref="T:System.ComponentModel.Design.DesignerActionList" /> オブジェクトがコレクションから削除されました。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary vsli:raw="Represents a smart tag panel item that is associated with a method in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスのメソッドに関連付けられているスマート タグ パネル項目を表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names.">メソッド名と表示名を指定して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names, and a flag that indicates whether the item should appear in other user interface contexts.">指定したメソッド名と表示名、および項目が他のユーザー インターフェイスのコンテキストで表示されるかどうかを示すフラグを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb.">関連付けられたメソッドもデザイナー動詞として扱うかどうかを指定するフラグ。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names.">メソッド名、表示名、およびカテゴリ名を指定して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names, and a flag that indicates whether the item should appear in other user interface contexts.">指定したメソッド名、表示名、およびカテゴリ名と、項目が他のユーザー インターフェイスのコンテキストで表示されるかどうかを示すフラグを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">関連付けられたメソッドも、関連付けられたコンポーネントのデザイナー動詞として扱うかどうかを指定するフラグ。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, and display and description text.">指定したメソッド名とカテゴリ名、および表示テキストと説明テキストを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">ツールヒントやステータス バーで使用する、この項目の補足テキスト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, display and description text, and a flag that indicates whether the item should appear in other user interface contexts.">指定したメソッド名とカテゴリ名、表示テキストと説明テキスト、および項目が他のユーザー インターフェイスのコンテキストで表示されるかどうかを示すフラグを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">この項目に関連付けられたメソッドを持つ <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">パネル項目を通じて呼び出す、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラスでのメソッド名 (大文字と小文字は区別される)。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">ツールヒントやステータス バーで使用する、この項目の補足テキスト。</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">関連付けられたメソッドも、関連付けられたコンポーネントのデザイナー動詞として扱うかどうかを指定するフラグ。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary vsli:raw="Programmatically executes the method associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> に関連付けられているメソッドをプログラムによって実行します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The method, named in &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName&quot; /&gt; cannot be found.">
        <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> で指定されたメソッドが見つかりません。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary vsli:raw="Gets a value that indicates the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; should appear in other user interface contexts.">
        <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> が他のユーザー インターフェイスのコンテキストで表示されることを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is to be used in shortcut menus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">項目がショートカット メニューで使用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary vsli:raw="Gets the name of the method that this &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; is associated with.">この <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> が関連付けられているメソッドの名前を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated method.">関連付けられているメソッドの名前を格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; objects to the current panel.">現在のパネルに <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> オブジェクトを提供するコンポーネントを取得または設定します。</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies items.">項目を提供するコンポーネント。このコンポーネントには、項目を提供するデザイナーが関連付けられている必要があります。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary vsli:raw="Represents a panel item that is associated with a property in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;. This class cannot be inherited.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> から派生したクラス内のプロパティに関連付けられているパネル項目を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and display names.">プロパティ名と表示名を指定して、<see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">このパネル項目に関連付けられているプロパティの、大文字と小文字が区別される名前。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display text.">指定したプロパティ名とカテゴリ名、および表示テキストを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">このパネル項目に関連付けられているプロパティの、大文字と小文字が区別される名前。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display and description text.">指定したプロパティ名とカテゴリ名、および表示テキストと説明テキストを使用して、<see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">このパネル項目に関連付けられているプロパティの、大文字と小文字が区別される名前。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">パネル上の同様の項目をグループ化するために使用する、大文字と小文字が区別される <see cref="T:System.String" />。</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">ツールヒントやステータス バーで使用する、この項目の補足テキスト。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary vsli:raw="Gets the name of the property that this item is associated with.">この項目が関連付けられているプロパティの名前を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated property.">関連付けられているプロパティの名前を格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its items to the current panel.">現在のパネルに項目を提供するコンポーネントを取得または設定します。</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">項目を提供するコンポーネント。このコンポーネントには、<see cref="T:System.ComponentModel.Design.DesignerActionItem" /> オブジェクトを提供する、関連付けられたデザイナーが必要です。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary vsli:raw="Establishes a design-time service that manages the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects for components.">コンポーネントの <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> オブジェクトのコレクションを管理するデザイン時サービスを確立します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; is removed or added for any component.">コンポーネントの <see cref="T:System.ComponentModel.Design.DesignerActionList" /> が削除または追加されたときに発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serviceProvider" vsli:raw="The service provider for the current design-time environment.">現在のデザイン時環境のサービス プロバイダー。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection of managed smart tags.">管理されているスマート タグの現在のコレクションに、<see cref="T:System.ComponentModel.Design.DesignerActionList" /> を追加します。</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">スマート タグを関連付ける <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the new smart tag items to be added.">追加した新しいスマート タグ項目を格納する <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">一方または両方のパラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the current collection of managed smart tags.">管理されているスマート タグの現在のコレクションに、<see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> を追加します。</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">スマート タグを関連付ける <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="designerActionListCollection" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the new smart tag items to be added.">追加した新しいスマート タグ項目を格納する <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">一方または両方のパラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary vsli:raw="Releases all components from management and clears all push-model smart tag lists.">すべてのコンポーネントを管理対象から外し、プッシュ モデルのすべてのスマート タグ リストを消去します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary vsli:raw="Determines whether the current smart tag service manages the action lists for the specified component.">現在のスマート タグ サービスが、指定したコンポーネントのアクション リストを管理しているかどうかを判断します。</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to search for.">検索対象の <see cref="T:System.ComponentModel.IComponent" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is managed by the current service; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンポーネントが現在のサービスによって管理されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionService" /> クラスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.ComponentModel.Design.DesignerActionService" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary vsli:raw="Returns the collection of smart tag item lists associated with a component.">コンポーネントに関連付けられているスマート タグ項目リストのコレクションを返します。</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">スマート タグが関連付けられているコンポーネント。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The collection of smart tags for the specified component.">指定したコンポーネントのスマート タグのコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <summary vsli:raw="Returns the collection of designer action item lists of the specified type associated with a component.">コンポーネントに関連付けられている、指定した型のデザイナーアクション項目リストのコレクションを返します。</summary>
      <param name="component" vsli:raw="The component that the DesignerActions are associated with.">デザイナーアクションが関連付けられているコンポーネント。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentActionsType&quot; /&gt; to filter the associated designer actions with.">
        <see cref="T:System.ComponentModel.Design.ComponentActionsType" />関連付けられたデザイナーアクションをフィルター処理するための。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The collection of designer actions of the specified type for the specified component.">指定したコンポーネントの、指定した型のデザイナーアクションのコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the pull-model smart tags associated with a component.">コンポーネントに関連付けられているプル モデルのスマート タグを取得します。</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">スマート タグが関連付けられているコンポーネント。</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">関連付けられているスマート タグの追加先となるコレクション。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">一方または両方のパラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the push-model smart tags associated with a component.">コンポーネントに関連付けられているプッシュ モデルのスマート タグを取得します。</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">スマート タグが関連付けられているコンポーネント。</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">関連付けられているスマート タグの追加先となるコレクション。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">一方または両方のパラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from all components managed by the current service.">現在のサービスによって管理されているすべてのコンポーネントから、指定したスマート タグ リストを削除します。</summary>
      <param name="actionList" vsli:raw="The list of smart tags to be removed.">削除するスマート タグのリスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;actionList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actionList" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes all the smart tag lists associated with the specified component.">指定したコンポーネントに関連付けられているすべてのスマート タグ リストを削除します。</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">スマート タグの関連付けを解除するコンポーネント。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from the specified component.">指定したコンポーネントから、指定したスマート タグ リストを削除します。</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">スマート タグの関連付けを解除するコンポーネント。</param>
      <param name="actionList" vsli:raw="The smart tag list to remove.">削除するスマート タグ リスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">一方または両方のパラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary vsli:raw="Represents a static text item on a smart tag panel.">スマート タグ パネルの静的テキスト項目を表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionTextItem&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">この項目のパネル テキスト。</param>
      <param name="category" vsli:raw="The category used to group similar items on the panel.">パネル上の同様のアイテムをグループ化するために使用するカテゴリ。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary vsli:raw="Manages the user interface (UI) for a smart tag panel. This class cannot be inherited.">スマート タグ パネルのユーザー インターフェイス (UI) を管理します。 このクラスは継承できません。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary vsli:raw="Occurs when a request is made to show or hide a smart tag panel.">スマート タグ パネルの表示または非表示が要求された場合に発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> クラスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Hides the smart tag panel for a component.">コンポーネントのスマート タグ パネルを非表示にします。</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be hidden.">スマート タグ パネルを非表示にするコンポーネント。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary vsli:raw="Updates the smart tag panel.">スマート タグ パネルを更新します。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to refresh.">更新する <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to automatically show the smart tag panel.">スマート タグ パネルを自動的に表示するかどうかを示します。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to automatically show.">自動的に表示する <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically show the smart tag panel; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">スマート タグ パネルを自動的に表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Displays the smart tag panel for a component.">コンポーネントのスマート タグ パネルを表示します。</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be displayed.">スマート タグ パネルを表示するコンポーネント。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the panel.">パネルに関連付けられたオブジェクト。</param>
      <param name="changeType" vsli:raw="A value that specifies whether the panel is being displayed or hidden.">パネルが表示されているかまたは非表示になっているかを指定する値。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether the smart tag panel is being displayed or hidden.">スマート タグ パネルが表示されているかまたは非表示になっているかを示すフラグを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeType&quot; /&gt; that indicates the state of the panel.">パネルの状態を示す <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the smart tag panel.">スマート タグ パネルに関連付けられたオブジェクトを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the smart tag panel.">スマート タグ パネルに関連付けられた <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt;.">
        <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> の <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that raised the event.">イベントの発生元の <see cref="T:System.Object" />。</param>
      <param name="e" vsli:raw="The event-specific information.">イベント固有の情報。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary vsli:raw="Specifies the display state of a smart tag panel.">スマート タグ パネルの表示状態を指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary vsli:raw="The smart tag panel is being hidden.">スマート タグ パネルが非表示にされます。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary vsli:raw="The smart tag panel is being refreshed.">スマート タグ パネルが再表示されます。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary vsli:raw="The smart tag panel is being displayed.">スマート タグ パネルが表示されます。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary vsli:raw="Represents a base class for design-time tools, not derived from &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;, that provide smart tag or designer verb capabilities.">スマート タグ機能またはデザイナー動詞機能を提供する、<see cref="T:System.ComponentModel.Design.ComponentDesigner" /> から派生していないデザイン時ツールの基本クラスを表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerCommandSet&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerCommandSet" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary vsli:raw="Returns a collection of command objects.">コマンド オブジェクトのコレクションを返します。</summary>
      <param name="name" vsli:raw="The type of collection to return, indicating either a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; or a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> または <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> を示す、返すコレクションの型。</param>
      <returns vsli:raw="A collection that contains the specified type - either &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; or &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; - of command objects. The base implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">指定された型 (<see cref="T:System.ComponentModel.Design.DesignerActionList" /> または <see cref="T:System.ComponentModel.Design.DesignerVerb" />) のコマンド オブジェクトを格納するコレクション。 基本実装では、常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary vsli:raw="Gets the collection of all the smart tags associated with the designed component.">デザインされるコンポーネントに関連付けられたすべてのスマート タグのコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the smart tags for the associated designed component.">デザインされるコンポーネントに関連付けられたスマート タグを格納する <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary vsli:raw="Gets the collection of all the designer verbs associated with the designed component.">デザインされるコンポーネントに関連付けられたすべてのデザイナー動詞のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; that contains the designer verbs for the associated designed component.">デザインされるコンポーネントに関連付けられたデザイナー動詞を格納する <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary vsli:raw="Presents a user interface for designing components.">コンポーネントをデザインするためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary vsli:raw="Occurs when the design surface is disposed.">デザイン サーフェイスが破棄されたときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary vsli:raw="Occurs when a call is made to the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurface.Flush&quot; /&gt; method of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> の <see cref="T:System.ComponentModel.Design.DesignSurface" /> メソッドが呼び出されたときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary vsli:raw="Occurs when the designer load has completed.">デザイナーの読み込みが完了したときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary vsli:raw="Occurs when the designer is about to be loaded.">デザイナーの読み込みを開始する直前に発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary vsli:raw="Occurs when a designer has finished unloading.">デザイナーのアンロードを終了したときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary vsli:raw="Occurs when a designer is about to unload.">デザイナーのアンロードを開始する直前に発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerHost.Activate&quot; /&gt; method has been called on &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> メソッドが <see cref="T:System.ComponentModel.Design.IDesignerHost" /> に対して呼び出されたときに発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">親サービス プロバイダー。サービスの解決に使用する親が存在しない場合は <see langword="null" />。</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">親サービス プロバイダー。サービスの解決に使用する親が存在しない場合は <see langword="null" />。</param>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">作成するルート コンポーネントの型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">作成するルート コンポーネントの型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary vsli:raw="Begins the loading process with the given designer loader.">指定したデザイナー ローダーを使用して、読み込みプロセスを開始します。</summary>
      <param name="loader" vsli:raw="The designer loader to use for loading the designer.">デザイナーの読み込みに使用するデザイナー ローダー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loader" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary vsli:raw="Begins the loading process.">読み込みプロセスを開始します。</summary>
      <param name="rootComponentType" vsli:raw="The type of component to create in design mode.">デザイン モードで作成するコンポーネントの型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponentType" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary vsli:raw="Creates an instance of a component.">コンポーネントのインスタンスを作成します。</summary>
      <param name="componentType" vsli:raw="The type of component to create.">作成するコンポーネントの型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;componentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="componentType" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
      <returns vsli:raw="The newly created component.">新規作成したコンポーネント。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Creates a designer when a component is added to the container.">コンテナーにコンポーネントが追加されたときに、デザイナーを作成します。</summary>
      <param name="component" vsli:raw="The component for which the designer should be created.">デザイナーを作成する必要のあるコンポーネント。</param>
      <param name="rootDesigner" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a root designer; &lt;see langword=&quot;false&quot; /&gt; to create a normal designer.">ルート デザイナーを作成する場合は <see langword="true" />。通常のデザイナーを作成する場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
      <returns vsli:raw="An instance of the requested designer, or &lt;see langword=&quot;null&quot; /&gt; if no matching designer could be found.">要求したデザイナーのインスタンス。一致するデザイナーが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary vsli:raw="Creates an instance of the given type.">指定された型のインスタンスを作成します。</summary>
      <param name="type" vsli:raw="The type to create.">作成する型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
      <returns vsli:raw="The newly created object.">新しく作成されたオブジェクト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">コントロールまたはコンポーネントの入れ子に適したコンテナーを作成します。</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">入れ子になったコンテナーを管理するコンポーネント。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
      <returns vsli:raw="The nested container.">入れ子になったコンテナー。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">コントロールまたはコンポーネントの入れ子に適したコンテナーを作成します。</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">入れ子になったコンテナーを管理するコンポーネント。</param>
      <param name="containerName" vsli:raw="An additional name for the nested container.">入れ子になったコンテナーの追加の名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
      <returns vsli:raw="The nested container.">入れ子になったコンテナー。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> で使用したリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> で使用したリソースを解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary vsli:raw="Serializes changes to the design surface.">デザイン サーフェイスへの変更をシリアル化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary vsli:raw="Gets a service from the service container.">サービス コンテナーからサービスを取得します。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">取得するサービスの型。</param>
      <returns vsli:raw="An object that implements, or is a derived class of, &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">
        <paramref name="serviceType" /> を実装するオブジェクト、または serviceType の派生クラスであるオブジェクト。サービス コンテナーにサービスが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loading&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloaded&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloading&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.ViewActivated&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">デザイン サーフェイス内の <see cref="T:System.ComponentModel.IContainer" /> 実装を取得します。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">デザイン サーフェイス内の <see cref="T:System.ComponentModel.IContainer" /> 実装。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary vsli:raw="Gets a value indicating whether the Design-time Error List is loading.">デザイン時エラー一覧が読み込まれているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Design-time Error List is loading; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />デザイン時エラー一覧が読み込まれている場合は。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary vsli:raw="Gets a value indicating whether the design surface is currently loaded.">デザイン サーフェイスが現在読み込まれているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the design surface is currently loaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">デザイン サーフェイスが現在読み込まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary vsli:raw="Returns a collection of loading errors or a void collection.">読み込みエラーのコレクションまたは void コレクションを返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of loading errors.">読み込みエラーの <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary vsli:raw="Gets the service container.">サービス コンテナーを取得します。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
      <returns vsli:raw="The service container that provides all services to designers contained within the design surface.">デザイン サーフェイスに含まれるデザイナーにすべてのサービスを提供するサービス コンテナー。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary vsli:raw="Gets the view for the root designer.">ルート デザイナーのビューを取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">デザイン サーフェイスが読み込まれていないか、デザイナー ローダーがルート デザイナーをまだ作成していません。または、デザイン サーフェイスの読み込みは終了しましたが、読み込みに失敗しました。 詳細については、<see cref="P:System.Exception.InnerException" /> のトピックを参照してください。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The designer loaded, but it does not offer a view compatible with this design surface.">デザイナーは読み込まれましたが、このデザイン サーフェイスと互換性のあるビューを提供しません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> にアタッチした <see cref="T:System.ComponentModel.Design.IDesignerHost" /> は破棄されています。</exception>
      <returns vsli:raw="The view for the root designer.">ルート デザイナーのビュー。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary vsli:raw="Contains a collection of design surfaces. This class cannot be inherited.">デザイン サーフェイスのコレクションを格納します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary vsli:raw="Copies the collection members to the specified &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; array beginning at the specified destination index.">指定したインデックスを開始位置として、指定した <see cref="T:System.ComponentModel.Design.DesignSurface" /> 配列にコレクション メンバーをコピーします。</summary>
      <param name="array" vsli:raw="The array to copy collection members to.">コレクション メンバーのコピー先の配列。</param>
      <param name="index" vsli:raw="The destination index to begin copying to.">コピーの開始位置を示す、コピー先の配列内のインデックス。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> インスタンスを反復処理できる列挙子を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> インスタンスの <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> メソッドのトピックを参照してください。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> からコピーされる値のコピー先となる 1 次元 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">
        <paramref name="array" /> 内のコピー開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.Collections.IEnumerable.GetEnumerator" /> メソッドのトピックを参照してください。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> インスタンスの <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary vsli:raw="Gets the total number of design surfaces in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 内のデザイン サーフェイスの合計数を取得します。</summary>
      <returns vsli:raw="The total number of elements in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 内の要素の合計数。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the design surface at the specified index.">指定したインデックスにあるデザイン サーフェイスを取得します。</summary>
      <param name="index" vsli:raw="The index of the design surface to return.">返されるデザイン サーフェイスのインデックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The design surface specified by &lt;paramref name=&quot;index&quot; /&gt; is not supported.">
        <paramref name="index" /> で指定したデザイン サーフェイスはサポートされていません。</exception>
      <returns vsli:raw="The design surface at the specified index.">指定したインデックスにあるデザイン サーフェイス。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt; property.">このメンバーの説明については、<see cref="P:System.Collections.ICollection.Count" /> プロパティを参照してください。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> に格納されている要素の数。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt; property.">このメンバーの説明については、<see cref="P:System.Collections.ICollection.IsSynchronized" /> プロパティを参照してください。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt; property.">このメンバーの説明については、<see cref="P:System.Collections.ICollection.SyncRoot" /> プロパティを参照してください。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> へのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="surface" vsli:raw="The design surface that is being created.">作成されるデザイン サーフェイス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;surface&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="surface" /> が <see langword="null" />です。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary vsli:raw="Gets the design surface that is being created.">作成されるデザイン サーフェイスを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is being created.">作成される <see cref="T:System.ComponentModel.Design.DesignSurface" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> クラスの <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> イベントを処理するメソッドを表します。 このクラスは継承できません。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary vsli:raw="Manages a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> オブジェクトのコレクションを管理します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary vsli:raw="Occurs when the currently active designer changes.">現在のアクティブ デザイナーが変更されたときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary vsli:raw="Occurs when a designer is created.">デザイナーが作成されたときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary vsli:raw="Occurs when a designer is disposed.">デザイナーが破棄されたときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary vsli:raw="Occurs when the global selection changes.">グローバルに選択されている対象が変更されたときに発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parentProvider" vsli:raw="A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.">親サービス プロバイダー。 デザイン サーフェイス マネージャーがサービス要求を解決できない場合、サービス要求はこのプロバイダーに転送されます。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary vsli:raw="Creates an instance of a design surface.">デザイン サーフェイスのインスタンスを作成します。</summary>
      <returns vsli:raw="A new design surface instance.">デザイン サーフェイスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary vsli:raw="Creates an instance of a design surface.">デザイン サーフェイスのインスタンスを作成します。</summary>
      <param name="parentProvider" vsli:raw="A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)&quot; /&gt; method.">親サービス プロバイダー。 マージされた新しいサービス プロバイダーが作成されると、まずこのプロバイダーにサービスを要求します。すべてのエラーの処理は、デザイン サーフェイス マネージャー オブジェクトに任されます。 このマージされたプロバイダーは、<see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> メソッドに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;parentProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="parentProvider" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A new design surface instance.">デザイン サーフェイスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary vsli:raw="Implementation that creates the design surface.">デザイン サーフェイスを作成する実装です。</summary>
      <param name="parentProvider" vsli:raw="A service provider to pass to the design surface. This is either an instance of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; or an object that implements &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;, and represents a merge between the service provider of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class and an externally passed provider.">デザイン サーフェイスに渡すサービス プロバイダー。 これは、<see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> のインスタンス、または <see cref="T:System.IServiceProvider" /> を実装するオブジェクトのいずれかであり、<see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> クラスのサービス プロバイダーと外部で渡されたプロバイダー間のマージを表します。</param>
      <returns vsli:raw="A new design surface instance.">デザイン サーフェイスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> で使用したリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary vsli:raw="Gets a service in the design surface manager's service container.">デザイン サーフェイス マネージャーのサービス コンテナーのサービスを取得します。</summary>
      <param name="serviceType" vsli:raw="The service type to retrieve.">取得するサービスの型。</param>
      <returns vsli:raw="An object that implements, or is a derived class of, the given service type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">指定されたサービスの型を実装するオブジェクト、または指定されたサービスの型の派生クラスであるオブジェクト。サービス コンテナーにサービスが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary vsli:raw="Gets or sets the active designer.">アクティブなデザイナーを取得または設定します。</summary>
      <returns vsli:raw="The active designer.">アクティブなデザイナー。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary vsli:raw="Gets a collection of design surfaces.">デザイン サーフェイスのコレクションを取得します。</summary>
      <returns vsli:raw="A collection of design surfaces that are currently hosted by the design surface manager.">デザイン サーフェイス マネージャーによって現在ホストされているデザイン サーフェイスのコレクション。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary vsli:raw="Gets the design surface manager's &lt;see cref=&quot;P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer&quot; /&gt;.">デザイン サーフェイス マネージャーの <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> を取得します。</summary>
      <returns vsli:raw="The design surface manager's &lt;see cref=&quot;P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer&quot; /&gt;.">デザイン サーフェイス マネージャーの <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary vsli:raw="Defines identifiers that indicate the display modes used by &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ByteViewer" /> で使用される表示モードを示す識別子を定義します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary vsli:raw="An ANSI format display.">ANSI 形式の表示。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary vsli:raw="A display mode that automatically selects a display mode. In this mode, the bytes are examined to determine if they are hexadecimal or printable. If the bytes are in hexadecimal format, the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Hexdump&quot; /&gt; mode is selected. If the characters match a printable character set, a test is run to automatically select either the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Ansi&quot; /&gt; or &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Unicode&quot; /&gt; display mode.">表示モードを自動的に選択するモード。 このモードでは、バイトが 16 進数か印刷可能な文字かを判別するためにチェックされます。 バイトが 16 進形式である場合は、<see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> モードが選択されます。 文字が印刷可能な文字セットと一致すると、テストが実行され、<see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> 表示モードまたは <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" /> 表示モードのいずれかが自動的に選択されます。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary vsli:raw="A hexadecimal format display.">16 進形式の表示。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary vsli:raw="A Unicode format display.">Unicode 形式の表示。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary vsli:raw="A default implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; interface.">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> インターフェイスの既定の実装。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.EventBindingService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.EventBindingService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider" vsli:raw="The service provider from which &lt;see cref=&quot;T:System.ComponentModel.Design.EventBindingService&quot; /&gt; will query for services.">
        <see cref="T:System.ComponentModel.Design.EventBindingService" /> がサービスを問い合わせる元となるサービス プロバイダー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Creates a unique method name.">一意のメソッド名を作成します。</summary>
      <param name="component" vsli:raw="The component for which the method name will be created.">メソッド名の作成対象となるコンポーネント。</param>
      <param name="e" vsli:raw="The event to create a name for.">名前を作成する対象のイベント。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; or &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> または <paramref name="e" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="The unique method name.">一意のメソッド名。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Provides a notification that a particular method is no longer being used by an event handler.">特定のメソッドがイベント ハンドラーによって使用されていないという通知を出します。</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">メソッドのバインド先となるコンポーネント。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">イベント ハンドラーの <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <param name="methodName" vsli:raw="The name of the method to be freed.">解放するメソッドの名前。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Returns a collection of names of compatible methods.">互換性のあるメソッドの名前のコレクションを返します。</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; containing the compatible delegate.">互換性のあるデリゲートを格納する <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A collection of strings that are names of compatible methods.">互換性のあるメソッドの名前である文字列のコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service from the service provider.">要求されたサービスをサービス プロバイダーから取得します。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">取得するサービスの型。</param>
      <returns vsli:raw="A reference to the service specified by &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not available.">
        <paramref name="serviceType" /> によって指定されたサービスへの参照。要求されたサービスが使用できない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary vsli:raw="Displays user code.">ユーザー コードを表示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コードを表示できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Displays the user code for the specified method.">指定したメソッドのユーザー コードを表示します。</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">メソッドのバインド先となるコンポーネント。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">イベント ハンドラーの <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <param name="methodName" vsli:raw="The name of the method for which to display code.">コードを表示するメソッドの名前。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コードを表示できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary vsli:raw="Displays the user code at the given line number.">指定した行番号にあるユーザー コードを表示します。</summary>
      <param name="lineNumber" vsli:raw="The line number to show.">表示する行番号。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コードを表示できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Creates a unique name for an event-handler method for the specified component and event.">指定したコンポーネントおよびイベントのイベント ハンドラー メソッドに対して一意の名前を作成します。</summary>
      <param name="component" vsli:raw="The component instance the event is connected to.">イベントを関連付ける対象のコンポーネント インスタンス。</param>
      <param name="e" vsli:raw="The event to create a name for.">名前を作成する対象のイベント。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; or &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> または <paramref name="e" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="The recommended name for the event-handler method for this event.">指定したイベントのイベント ハンドラー メソッドに推奨される名前。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Gets a collection of event-handler methods that have a method signature compatible with the specified event.">指定したイベントと互換性のあるメソッド シグネチャを持つイベント ハンドラー メソッドのコレクションを取得します。</summary>
      <param name="e" vsli:raw="The event to get the compatible event-handler methods for.">互換性のあるイベント ハンドラー メソッドを取得する対象のイベント。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A collection of strings that are names of compatible methods.">互換性のあるメソッドの名前である文字列のコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event that the specified property descriptor represents, if it represents an event.">指定したプロパティ記述子がイベントを表す場合、そのイベントの <see cref="T:System.ComponentModel.EventDescriptor" /> を取得します。</summary>
      <param name="property" vsli:raw="The property that represents an event.">イベントを表すプロパティ。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event that the property represents, or &lt;see langword=&quot;null&quot; /&gt; if the property does not represent an event.">プロパティが表すイベントの <see cref="T:System.ComponentModel.EventDescriptor" />。プロパティがイベントを表さない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary vsli:raw="Converts a set of event descriptors to a set of property descriptors.">一連のイベント記述子を一連のプロパティ記述子に変換します。</summary>
      <param name="events" vsli:raw="The events to convert to properties.">プロパティに変換する対象のイベント。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;events&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="events" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that describe the event set.">一連のイベントを説明する <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Converts a single event descriptor to a property descriptor.">単一のイベント記述子をプロパティ記述子に変換します。</summary>
      <param name="e" vsli:raw="The event to convert.">変換対象のイベント。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that describes the event.">イベントを説明する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary vsli:raw="Displays the user code for the designer.">デザイナーに関連するコードを表示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コードが表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Displays the user code for the specified event.">指定したイベントに関連するコードを表示します。</summary>
      <param name="component" vsli:raw="The component that the event is connected to.">イベントを関連付ける対象のコンポーネント。</param>
      <param name="e" vsli:raw="The event to display.">表示するイベント。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;events&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="events" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コードが表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary vsli:raw="Displays the user code for the designer at the specified line.">デザイナーに関連するコードの指定した行を表示します。</summary>
      <param name="lineNumber" vsli:raw="The line number to place the caret on.">カレット (＾) を配置する行番号。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コードが表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Provides a notification that a particular method is being used by an event handler.">特定のメソッドがイベント ハンドラーによって使用されているという通知を出します。</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">メソッドのバインド先となるコンポーネント。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">イベント ハンドラーの <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <param name="methodName" vsli:raw="The name of the method.">メソッドの名前。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary vsli:raw="Validates that the provided method name is valid for the language or script being used.">指定したメソッド名が使用する言語またはスクリプトに対して有効であるかを検証します。</summary>
      <param name="methodName" vsli:raw="The method name to validate.">検証するメソッド名です。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary vsli:raw="Represents the collection of exceptions.">例外のコレクションを表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="exceptions" vsli:raw="An array of type &lt;see cref=&quot;T:System.Exception&quot; /&gt;, containing the objects to populate the collection.">コレクションに読み込むオブジェクトを格納している <see cref="T:System.Exception" /> 型の配列。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、<see cref="T:System.ComponentModel.Design.ExceptionCollection" /> をシリアル化するために必要なデータを設定します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> が <see langword="null" />です。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary vsli:raw="Gets the array of &lt;see cref=&quot;T:System.Exception&quot; /&gt; objects that represent the collection of exceptions.">例外のコレクションを表す <see cref="T:System.Exception" /> オブジェクトの配列を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; array that represent the collection of exceptions.">例外のコレクションを表す <see cref="T:System.Exception" /> 配列。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary vsli:raw="Defines multi-target type name resolution services in a design-time environment.">デザイン時環境のマルチ ターゲットの型名解決サービスを定義します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary vsli:raw="Resolves a type for the target framework to an assembly-qualified name.">ターゲット フレームワークの型をアセンブリ修飾名に解決します。</summary>
      <param name="type" vsli:raw="The type to resolve.">解決する型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; for &lt;paramref name=&quot;type&quot; /&gt; in the target framework.">ターゲット フレームワークにおける <paramref name="type" /> の <see cref="P:System.Type.AssemblyQualifiedName" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary vsli:raw="Provides a set of methods for identifying inherited components.">継承されたコンポーネントを識別するための一連のメソッドを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.InheritanceService" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">指定したコンポーネントによって継承されたコンポーネントを <see cref="T:System.ComponentModel.Design.InheritanceService" /> に追加します。</summary>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">指定したコンテナーに追加する継承されたコンポーネントの検索対象となるコンポーネント。</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">継承されたコンポーネントの追加対象となるコンテナー。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components of the specified type that are inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">指定したコンポーネントによって継承された指定した型のコンポーネントを <see cref="T:System.ComponentModel.Design.InheritanceService" /> に追加します。</summary>
      <param name="type" vsli:raw="The base type to search for.">検索対象となる基本型。</param>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">指定したコンテナーに追加する継承されたコンポーネントの検索対象となるコンポーネント。</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">継承されたコンポーネントの追加対象となるコンテナー。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.InheritanceService" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.ComponentModel.Design.InheritanceService" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the inheritance attribute of the specified component.">指定したコンポーネントの継承属性を取得します。</summary>
      <param name="component" vsli:raw="The component to retrieve the inheritance attribute for.">継承属性の取得対象となるコンポーネント。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; that describes the level of inheritance that this component comes from.">このコンポーネントの作成元の継承レベルを記述する <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to ignore the specified member.">指定したメンバーを無視するかどうかを示します。</summary>
      <param name="member" vsli:raw="The member to check. This member is either a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; or a &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;.">確認対象となるメンバー。 このメンバーは、<see cref="T:System.Reflection.FieldInfo" /> または <see cref="T:System.Reflection.MethodInfo" /> のいずれかです。</param>
      <param name="component" vsli:raw="The component instance this member is bound to.">このメンバーのバインド先となるコンポーネント インスタンス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified member should be included in the set of inherited components; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したメンバーを、継承されたコンポーネントのセットに含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> イベントのデータを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="succeeded" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">デザイナーの読み込みが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="errors" vsli:raw="A collection of errors that occurred while the designer was loading.">デザイナーが読み込みを実行している最中に発生したエラーのコレクション。</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary vsli:raw="Gets a collection of errors that occurred while the designer was loading.">デザイナーが読み込みを実行している最中に発生したエラーのコレクションを取得します。</summary>
      <returns vsli:raw="A collection of errors that occurred while the designer was loading.">デザイナーが読み込みを実行している最中に発生したエラーのコレクション。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary vsli:raw="Gets a value that indicates whether the designer load was successful.">デザイナーの読み込みが正常に実行されたかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">デザイナーの読み込みが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> クラスの <see cref="T:System.ComponentModel.Design.DesignSurface" /> イベントを処理するメソッドを表します。 このクラスは継承できません。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="changeType" vsli:raw="The type of change.">変更の種類。</param>
      <param name="command" vsli:raw="The menu command.">メニュー コマンド。</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets the type of change that caused &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; to be raised.">
        <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> を発生させる原因となった変更の種類を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedType&quot; /&gt; that caused &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; to be raised.">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" /> を発生させる原因となった <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary vsli:raw="Gets the command that was added, removed, or changed.">追加、削除、または変更されたコマンドを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; that was added, removed, or changed.">追加、削除、または変更された <see cref="T:System.ComponentModel.Design.MenuCommand" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> の <see cref="T:System.ComponentModel.Design.MenuCommandService" /> イベントを処理するメソッドを表します。 このクラスは継承できません。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary vsli:raw="Specifies the type of action that occurred to the related object's &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; collection.">関連オブジェクトの <see cref="T:System.Windows.Forms.Design.MenuCommands" /> コレクションに発生したアクションの種類を指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary vsli:raw="Specifies that one or more command objects were added.">1 つ以上のコマンド オブジェクトが追加されたことを指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary vsli:raw="Specifies that one or more commands have changed their status.">1 つ以上のコマンドの状態が変更されたことを指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary vsli:raw="Specifies that one or more commands were removed.">1 つ以上のコマンドが削除されたことを指定します。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.ComponentModel.Design.IMenuCommandService&quot; /&gt; interface.">
        <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> インターフェイスを実装します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary vsli:raw="Occurs when the status of a menu command has changed.">メニュー コマンドのステータスが変更されたときに発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.MenuCommandService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serviceProvider" vsli:raw="The service provider that this service uses to obtain other services.">このサービスが他のサービスを取得する際に使用するサービス プロバイダー。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Adds a command handler to the menu command service.">メニュー コマンド サービスにコマンド ハンドラーを追加します。</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; to add.">追加する <see cref="T:System.ComponentModel.Design.MenuCommand" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;command&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="command" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A command handler &lt;paramref name=&quot;command&quot; /&gt; already exists.">コマンド ハンドラー <paramref name="command" /> は既に存在します。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary vsli:raw="Adds a verb to the verb table of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.MenuCommandService" /> の動詞テーブルに動詞を追加します。</summary>
      <param name="verb" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; to add.">追加する <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;verb&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="verb" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.MenuCommandService" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.MenuCommandService" /> によって使用されているすべてのリソースを解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary vsli:raw="Ensures that the verb list has been created.">動詞リストが作成されていることを保証します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Searches for the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command ID.">指定したコマンド ID に関連付けられた <see cref="T:System.ComponentModel.Design.MenuCommand" /> を検索します。</summary>
      <param name="commandID" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; to find.">検索する <see cref="T:System.ComponentModel.Design.CommandID" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the command is not found.">指定したコマンドに関連付けられた <see cref="T:System.ComponentModel.Design.MenuCommand" />。コマンドが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary vsli:raw="Searches for the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command.">指定されたコマンドに関連付けられた <see cref="T:System.ComponentModel.Design.MenuCommand" /> を検索します。</summary>
      <param name="guid" vsli:raw="The GUID of the command.">コマンドの GUID。</param>
      <param name="id" vsli:raw="The ID of the command.">コマンドの ID。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the command is not found.">指定したコマンドに関連付けられた <see cref="T:System.ComponentModel.Design.MenuCommand" />。コマンドが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary vsli:raw="Gets the command list for a given GUID.">指定した GUID に対応するコマンド リストを取得します。</summary>
      <param name="guid" vsli:raw="The GUID of the command list.">コマンド リストの GUID。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of commands.">コマンドの <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary vsli:raw="Gets a reference to the requested service.">要求されたサービスへの参照を取得します。</summary>
      <param name="serviceType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the service to retrieve.">取得するサービスの <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A reference to &lt;paramref name=&quot;serviceType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the service is not found.">
        <paramref name="serviceType" /> への参照。サービスが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Invokes the given command on the local form or in the global environment.">ローカル フォームまたはグローバル環境で、指定したコマンドを呼び出します。</summary>
      <param name="commandID" vsli:raw="The command to invoke.">呼び出すコマンド。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コマンドが見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary vsli:raw="Invokes the given command with the given parameter on the local form or in the global environment.">ローカル フォームまたはグローバル環境で、指定したパラメーターを使用して指定したコマンドを呼び出します。</summary>
      <param name="commandId" vsli:raw="The command to invoke.">呼び出すコマンド。</param>
      <param name="arg" vsli:raw="A parameter for the invocation.">呼び出し対象のパラメーター。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コマンドが見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Removes the given menu command from the document.">指定されたメニュー コマンドをドキュメントから削除します。</summary>
      <param name="command" vsli:raw="The command to remove.">削除するコマンド。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;command&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="command" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary vsli:raw="Removes the given verb from the document.">指定した動詞をドキュメントから削除します。</summary>
      <param name="verb" vsli:raw="The verb to remove.">削除する動詞。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;verb&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="verb" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary vsli:raw="Shows the shortcut menu with the given command ID at the given location.">指定したコマンド ID を持つショートカット メニューを指定した位置に表示します。</summary>
      <param name="menuID" vsli:raw="The shortcut menu to display.">表示するショートカット メニュー。</param>
      <param name="x" vsli:raw="The x-coordinate of the shortcut menu's location.">ショートカット メニューの位置の x 座標。</param>
      <param name="y" vsli:raw="The y-coordinate of the shortcut menu's location.">ショートカット メニューの位置の y 座標。</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary vsli:raw="Gets a collection of the designer verbs that are currently available.">現在使用できるデザイナー動詞のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of the designer verbs that are currently available.">現在使用できるデザイナー動詞の <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary vsli:raw="Displays a dialog for editing multi-line strings in design mode.">デザイン モードで複数行文字列を編集するためのダイアログを表示します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MultilineStringEditor&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.MultilineStringEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot;&gt;&lt;/xref&gt;.">
        <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> によって提供された編集スタイルを使用して、指定したオブジェクト値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services can be obtained.">編集サービスを取得するために使用するサービス プロバイダー オブジェクト。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">編集する値のインスタンス。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this method should return the same object passed to it.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合、このメソッドは渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> メソッドの編集スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; enumeration value indicating the supported editing style.">サポートされている編集スタイルを示す <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 列挙値。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">エディターでオブジェクトの値の視覚的な表現を描画できるかどうかを示す値を取得します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, indicating that this &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; does not display a visual representation in the Properties Window.">この <see cref="T:System.Drawing.Design.UITypeEditor" /> が [プロパティ ウィンドウ] でビジュアル表現を表示しないことを示す場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary vsli:raw="Implements the basic functionality that can be used to design value editors. These editors can, in turn, provide a user interface for representing and editing the values of objects of the supported data types.">値エディターのデザインに使用できる基本機能を実装します。 これらのエディターは、サポートされているデータ型のオブジェクトの値を表したり編集したりするためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary vsli:raw="Represents the current value of &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> の現在の値を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary vsli:raw="Represents the previous value of &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> の前の値を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary vsli:raw="Controls whether or not the nodes within the hierarchical collection of labeled items are accessible.">ラベル付けされた項目の階層コレクション内のノードにアクセスできるかどうかを制御します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="subObjectSelector" vsli:raw="The specified sub-object selector value.">指定したサブオブジェクト セレクター値。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.ApplyTreeViewThemeStyles(System.Windows.Forms.TreeView)">
      <summary vsli:raw="Modify a Windows Forms &lt;see cref=&quot;T:System.Windows.Forms.TreeView&quot; /&gt; control to use the new Explorer style theme.">
        <see cref="T:System.Windows.Forms.TreeView" />新しいエクスプローラースタイルのテーマを使用するように Windows フォームコントロールを変更します。</summary>
      <param name="treeView" vsli:raw="The tree view control to modify.">変更するツリービューコントロール。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the editor style indicated by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle*&quot;&gt;&lt;/xref&gt;.">
        <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" /> で示されたエディター スタイルを使用して、指定したオブジェクトの値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.IServiceProvider&quot;&gt;&lt;/xref&gt; that this editor can use to obtain services.">このエディターがサービスを取得するために使用できる <see cref="T:System.IServiceProvider" />。</param>
      <param name="value" vsli:raw="The object to edit.">編集対象のオブジェクト。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, the method should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合、このメソッドは渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在の <see cref="T:System.Object" /> と等しいかどうかを示します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">現在の <see cref="T:System.Object" /> と比較する <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see langword="true" /> が現在の <see cref="T:System.Object" /> と等しい場合は <see cref="T:System.Object" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary vsli:raw="Fills a hierarchical collection of labeled items, with each item represented by a &lt;see cref=&quot;T:System.Windows.Forms.TreeNode&quot; /&gt;.">ラベル付けされた項目の階層コレクションを設定します。各項目は、<see cref="T:System.Windows.Forms.TreeNode" /> によって表されます。</summary>
      <param name="selector" vsli:raw="A hierarchical collection of labeled items.">ラベル付けされた項目の階層コレクション。</param>
      <param name="context" vsli:raw="The context information for a component.">コンポーネントの文脈情報。</param>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method of this interface that obtains the object that provides the service.">サービスを提供するオブジェクトを取得する、このインターフェイスの <see cref="M:System.IServiceProvider.GetService(System.Type)" /> メソッド。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;see cref=&quot;Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue&quot; /&gt; method.">
        <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> メソッドで使用するエディター スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; value that indicates the style of editor used by &lt;see cref=&quot;Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> で使用するエディター スタイルを示す <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 値。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary vsli:raw="Sets the current &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.ObjectSelectorEditor&quot;&gt;&lt;/xref&gt; to the specified value.">現在の <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> を、指定した値に設定します。</summary>
      <param name="value" vsli:raw="The specified value.">指定した値。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary vsli:raw="Displays a hierarchical collection of labeled items, each represented by a &lt;see cref=&quot;T:System.Windows.Forms.TreeNode&quot; /&gt;.">それぞれが <see cref="T:System.Windows.Forms.TreeNode" /> で表される、ラベル付けされた項目の階層コレクションを表示します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary vsli:raw="This field is for internal use only.">このフィールドは、内部でだけ使用します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.Selector&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary vsli:raw="Adds a new tree node to the collection.">新しいツリー ノードをコレクションに追加します。</summary>
      <param name="label" vsli:raw="The label for the node.">ノードのラベル。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the value for the node.">ノードの値を表す <see cref="T:System.Object" />。</param>
      <param name="parent" vsli:raw="The parent of the node.">ノードの親。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode&quot; /&gt; added to the collection.">コレクションに追加する <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary vsli:raw="Removes all tree nodes from the collection.">コレクションからすべてのツリー ノードを削除します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary vsli:raw="Occurs after the tree node is selected.">ツリー ノードが選択された後に発生します。</summary>
      <param name="sender" vsli:raw="The source of an event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.TreeViewEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.TreeViewEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary vsli:raw="Occurs when a key is pressed while the control has focus.">コントロールにフォーカスがあるときにキーが押されると発生します。</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyDown&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントのデータを提供します。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary vsli:raw="Occurs when a key is pressed while the control has focus.">コントロールにフォーカスがあるときにキーが押されると発生します。</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyPress&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントのデータを提供します。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary vsli:raw="Occurs when the mouse pointer is over the control and a mouse button is clicked.">マウス ポインターがコントロール上にあり、マウス ボタンがクリックされると発生します。</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseUp&quot; /&gt;, &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseDown&quot; /&gt;, and &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseMove&quot; /&gt; events.">
        <see cref="E:System.Windows.Forms.Control.MouseUp" />、<see cref="E:System.Windows.Forms.Control.MouseDown" />、<see cref="E:System.Windows.Forms.Control.MouseMove" /> の各イベントのデータを提供します。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary vsli:raw="Sets the collection nodes to a specific value.">コレクションのノードを特定の値に設定します。</summary>
      <param name="value" vsli:raw="The value to be set.">設定される値です。</param>
      <param name="nodes" vsli:raw="The nodes collection.">ノードのコレクション。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection nodes were set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コレクション ノードが設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary vsli:raw="Initializes the editor service.">エディター サービスを初期化します。</summary>
      <param name="edSvc" vsli:raw="The editor service.">エディター サービス。</param>
      <param name="value" vsli:raw="The value to be set.">設定される値です。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary vsli:raw="Removes the editor service.">エディター サービスを削除します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Windows メッセージを処理します。</summary>
      <param name="m" vsli:raw="The Windows &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">処理対象の Windows <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary vsli:raw="Represents a node of a &lt;see cref=&quot;T:System.Windows.Forms.TreeView&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.TreeView" /> のノードを表します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary vsli:raw="Represents the value for the node.">ノードの値を表します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="label" vsli:raw="The label for the node.">ノードのラベル。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the value for the node.">ノードの値を表す <see cref="T:System.Object" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary vsli:raw="Specifies the target framework for a project.">プロジェクトのターゲット フレームワークを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="targetFrameworkMoniker" vsli:raw="The target framework for the project.">プロジェクトのターゲット フレームワーク。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary vsli:raw="Gets the target framework for the project.">プロジェクトのターゲット フレームワークを取得します。</summary>
      <returns vsli:raw="The target framework for the project.">プロジェクトのターゲット フレームワーク。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot; /&gt; interface.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> インターフェイスの実装を提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary vsli:raw="Starts the loading process.">読み込みプロセスを開始します。</summary>
      <param name="host" vsli:raw="The designer loader host to load.">読み込むデザイナー ローダー ホスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The designer is already loaded, or &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)&quot; /&gt; has been called with a different designer loader host.">デザイナーが既に読み込まれているか、<see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> が別のデザイナー ローダー ホストで呼び出されています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; has been disposed.">
        <paramref name="host" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> で使用したリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary vsli:raw="Enables or disables component notification with the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> によるコンポーネントの通知を有効または無効にします。</summary>
      <param name="enable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable component notification by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to disable component notification by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> によるコンポーネントの通知を有効にする場合は <see langword="true" />。<see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> によるコンポーネントの通知を無効にする場合は <see langword="false" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component notification was enabled prior to this call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンポーネントの通知がこの呼び出しの前に有効になっていた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary vsli:raw="Flushes pending changes to the designer loader.">保留中の変更をデザイナー ローダーにフラッシュします。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">要求したサービスを取得します。</summary>
      <param name="serviceType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the service.">サービスの <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service cannot be found.">要求したサービス。要求したサービスが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary vsli:raw="Initializes services.">サービスを初期化します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary vsli:raw="Indicates whether the designer should be reloaded.">デザイナーの再読み込みが必要かどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer should be reloaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default implementation always returns &lt;see langword=&quot;true&quot; /&gt;.">デザイナーの再読み込みが必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定の実装では、常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary vsli:raw="Notifies the designer loader that loading is about to begin.">これから読み込みを開始することをデザイナー ローダーに通知します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary vsli:raw="Notifies the designer loader that unloading is about to begin.">これからアンロードを開始することをデザイナー ローダーに通知します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Notifies the designer loader that loading is complete.">読み込みが完了したことをデザイナー ローダーに通知します。</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the load completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">読み込みが正常に完了した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing objects (usually exceptions) that were reported as errors.">エラーとして報告されたオブジェクト (通常は例外) を格納している <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary vsli:raw="Notifies the designer loader that the state of the document is about to be modified.">ドキュメントの状態が変更されようとしていることをデザイナー ローダーに通知します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Flushes all changes to the designer.">すべての変更をデザイナーにフラッシュします。</summary>
      <param name="serializationManager" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for persisting the state of loaded designers.">読み込まれたデザイナーの状態を永続化する際に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Loads a designer from persistence.">永続化データからデザイナーを読み込みます。</summary>
      <param name="serializationManager" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for loading state for the designers.">デザイナーの状態を読み込む際に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary vsli:raw="Queues a reload of the designer.">デザイナーの再読み込みをキューに配置します。</summary>
      <param name="flags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions&quot; /&gt; values.">
        <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 値のビットごとの組み合わせ。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary vsli:raw="Reports errors that occurred while flushing changes.">変更をフラッシュしているときに発生したエラーを報告します。</summary>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing error objects, usually exceptions.">エラー オブジェクト (通常は例外) を格納している <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="One or more errors occurred while flushing changes.">変更をフラッシュしているときに、1 つ以上のエラーが発生しました。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary vsli:raw="Sets the full class name of the base component.">基本コンポーネントの完全クラス名を設定します。</summary>
      <param name="name" vsli:raw="A string representing the full name of the component to be designed.">デザインするコンポーネントの完全名を表す文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary vsli:raw="Registers an external component as part of the load process managed by &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> が管理する読み込みプロセスの一部として、外部コンポーネントを登録します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Signals that a dependent load has finished.">依存読み込みプロセスの 1 つが終了したことを示します。</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to load successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">読み込みが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="errorCollection" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing errors that occurred during the load.">読み込み中に発生したエラーを格納している <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No load dependencies have been added by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency&quot; /&gt;, or the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> によって読み込み依存関係が追加されていないか、<see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary vsli:raw="Reloads the design document.">デザイン ドキュメントを再読み込みします。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reload request is accepted; &lt;see langword=&quot;false&quot; /&gt; if the loader does not allow the reload.">再読み込み要求が受け入れられた場合は <see langword="true" />。ローダーが再読み込みを許可しない場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary vsli:raw="Gets the loader host.">ローダー ホストを取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; that was passed to the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)&quot; /&gt; method.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> メソッドに渡された <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary vsli:raw="Gets a value indicating whether the designer loader is loading the design surface.">デザイナー ローダーがデザイン サーフェイスを読み込み中かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer loader is currently loading the design surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">デザイナー ローダーがデザイン サーフェイスを現在読み込み中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary vsli:raw="Gets or sets a value indicating whether the designer has been modified.">デザイナーが変更されているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">デザイナーが変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary vsli:raw="Gets or sets the property provider for the serialization manager being used by the loader.">ローダーが使用するシリアル化マネージャーのプロパティ プロバイダーを取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
      <returns vsli:raw="An object whose properties are to be provided to the serialization manager.">シリアル化マネージャーにプロパティを提供するオブジェクト。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary vsli:raw="Gets a value indicating whether a reload has been queued.">再読み込みがキューに配置されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a call to &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)&quot; /&gt; has queued a reload request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> の呼び出しによって、再読み込み要求がキューに配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary vsli:raw="Defines the behavior of the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)&quot; /&gt; method. These flags can be combined using the bitwise &lt;see langword=&quot;OR&quot; /&gt; operator.">
        <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> メソッドの動作を定義します。 これらのフラグは、ビット単位の <see langword="OR" /> 演算子を使用して組み合わせることができます。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary vsli:raw="The designer loader flushes changes before reloading, but it does not force a reload, and it also does not set the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt; if load errors occur.">デザイナー ローダーは、再読み込みの前に変更をフラッシュしますが、強制的に再読み込みを行うことはありません。また、読み込みエラーが発生した場合、<see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> プロパティを <see langword="true" /> に設定しません。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary vsli:raw="The designer loader forces the reload to occur. Normally, a reload occurs only if the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded&quot; /&gt; method returns &lt;see langword=&quot;true&quot; /&gt;. This flag bypasses calling this method and always performs the reload.">デザイナー ローダーは、強制的に再読み込みを行います。 再読み込みは通常、<see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> メソッドが <see langword="true" /> を返した場合のみ行われます。 このフラグは、このメソッドの呼び出しをバイパスし、常に再読み込みを実行します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary vsli:raw="The designer loader will set the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt; if load errors occur. This flag is useful if you want a flush of the loader to overwrite persistent state that had errors.">デザイナー ローダーは、読み込みエラーが発生した場合、<see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> プロパティを <see langword="true" /> に設定します。 このフラグは、ローダーのフラッシュによって、エラーが含まれる永続的な状態を上書きする場合に便利です。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary vsli:raw="The designer loader abandons any changes before reloading.">デザイナー ローダーは、再読み込み前にすべての変更を破棄します。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary vsli:raw="Serializes a set of components into a serialization store.">コンポーネントのセットをシリアル化ストアにシリアル化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class using the given service provider to resolve services.">サービスを解決するサービス プロバイダーを指定して、<see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; to use for resolving services.">サービスの解決に使用する <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">新しい <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> を作成します。</summary>
      <returns vsli:raw="A new serialization store.">新しいシリアル化ストア。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary vsli:raw="Deserializes the given store to produce a collection of objects.">指定したストアを逆シリアル化し、オブジェクトのコレクションを生成します。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">オブジェクトの逆シリアル化元である <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
      <returns vsli:raw="A collection of deserialized components.">逆シリアル化されたコンポーネントのコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary vsli:raw="Deserializes the given store and populates the given &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; with deserialized &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">指定したストアを逆シリアル化し、逆シリアル化された <see cref="T:System.ComponentModel.IContainer" /> オブジェクトを指定した <see cref="T:System.ComponentModel.IComponent" /> に追加します。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">オブジェクトの逆シリアル化元である <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="container" vsli:raw="A container to which &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects will be added.">
        <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの追加先となるコンテナー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> または <paramref name="container" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
      <returns vsli:raw="A collection of deserialized components.">逆シリアル化されたコンポーネントのコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary vsli:raw="Deserializes the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to the given container, optionally applying default property values.">指定した <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> を指定したコンテナーに逆シリアル化します。オプションで、既定のプロパティ値を適用することもできます。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which the objects will be deserialized.">オブジェクトの逆シリアル化元である <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="container" vsli:raw="A container of objects to which data will be applied.">データの適用先であるオブジェクトのコンテナー。</param>
      <param name="validateRecycledTypes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the recycled type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">再利用される型を検証する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="applyDefaults" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to apply default property values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">既定のプロパティ値を適用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> または <paramref name="container" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from the given stream.">指定したストリームから <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> を読み込みます。</summary>
      <param name="stream" vsli:raw="The stream from which to load the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> の読み取り元のストリーム。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; supports seeking, but its length is 0.">
        <paramref name="stream" /> はシークをサポートしていますが、長さが 0 です。</exception>
      <returns vsli:raw="The loaded &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">読み込まれた <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object to the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">指定したオブジェクトを指定した <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> にシリアル化します。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <paramref name="value" /> をシリアル化した結果を格納する <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> が閉じられているか、<paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default property values.">既定のプロパティ値から成る、指定したオブジェクトをシリアル化します。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <paramref name="value" /> をシリアル化した結果を格納する <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> が閉じられているか、<paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">指定されたオブジェクトの指定されたメンバーをシリアル化します。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <paramref name="member" /> をシリアル化した結果を格納する <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">
        <paramref name="member" /> を所有するオブジェクト。</param>
      <param name="member" vsli:raw="The given member.">指定したメンバー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />、<paramref name="owningObject" />、または <paramref name="member" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> が閉じられているか、<paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object, but also serializes the member if it contains the default property value.">指定したオブジェクトの指定したメンバーをシリアル化しますが、既定のプロパティ値を含むメンバーもシリアル化します。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <paramref name="member" /> をシリアル化した結果を格納する <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">
        <paramref name="member" /> を所有するオブジェクト。</param>
      <param name="member" vsli:raw="The given member.">指定したメンバー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />、<paramref name="owningObject" />、または <paramref name="member" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> が閉じられているか、<paramref name="store" /> がサポートされている型のシリアル化ストアではありません。 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> によって返されたストアを使用してください。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary vsli:raw="Provides the base class for implementing a CodeDOM-based designer loader.">CodeDOM ベースのデザイナー ローダーを実装するための基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> クラスによって使用されているリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary vsli:raw="Initializes services.">サービスを初期化します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていないか、デザイナー ローダーが CodeDom シリアル化に必要な型の解決サービスを提供していません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary vsli:raw="Returns a value indicating whether a reload is required.">再読み込みが必要かどうかを示す値を返します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">この言語は、このファイルのコード パーサーを提供していません。このファイルの種類は、デザイナーをサポートしていない可能性があります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">このクラスをデザインすることはできますが、ファイル内の最初のクラスではありません。または、このファイルにはデザインできるクラスがないため、デザイナーを表示できませんでした。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; decides a reload is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> によって再読み込みが必要であると判断された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary vsli:raw="Notifies the designer loader that loading is about to begin.">これから読み込みを開始することをデザイナー ローダーに通知します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary vsli:raw="Notifies the designer loader that unloading is about to begin.">これからアンロードを開始することをデザイナー ローダーに通知します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> イベントを発生させます。</summary>
      <param name="component" vsli:raw="The component to rename.">名前を変更するコンポーネント。</param>
      <param name="oldName" vsli:raw="The original name of the component.">コンポーネントの元の名前。</param>
      <param name="newName" vsli:raw="The new name of the component.">コンポーネントの変更後の名前。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Notifies the designer loader that loading is complete.">読み込みが完了したことをデザイナー ローダーに通知します。</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the load completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">読み込みが正常に完了したことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of objects (usually exceptions) that were reported as errors.">エラーとして報告されたオブジェクト (通常は例外) の <see cref="T:System.Collections.ICollection" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary vsli:raw="Parses the text or other persistent storage and returns a &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt;.">テキストまたは他の永続ストレージを解析し、<see cref="T:System.CodeDom.CodeCompileUnit" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; resulting from a parse operation.">解析操作の結果である <see cref="T:System.CodeDom.CodeCompileUnit" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Requests serialization of the root component of the designer.">デザイナーのルート コンポーネントのシリアル化を要求します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; from which to request the serializer.">シリアライザーの要求元である <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">この言語は、このファイルのコード パーサーを提供していません。このファイルの種類は、デザイナーをサポートしていない可能性があります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">このクラスをデザインすることはできますが、ファイル内の最初のクラスではありません。または、このファイルにはデザインできるクラスがないため、デザイナーを表示できませんでした。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Parses code from a CodeDOM provider.">CodeDOM プロバイダーからコードを解析します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; from which to request the serializer.">シリアライザーの要求元である <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">この言語は、このファイルのコード パーサーを提供していません。このファイルの種類は、デザイナーをサポートしていない可能性があります。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">このクラスをデザインすることはできますが、ファイル内の最初のクラスではありません。または、このファイルにはデザインできるクラスがないため、デザイナーを表示できませんでした。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary vsli:raw="Deserializes the specified serialization data object and returns a collection of objects represented by that data.">指定したシリアル化データ オブジェクトを逆シリアル化し、そのデータと等価なオブジェクトのコレクションを返します。</summary>
      <param name="serializationData" vsli:raw="An object consisting of serialized data.">シリアル化されたデータから構成されるオブジェクト。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;serializationData&quot; /&gt; is not a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">
        <paramref name="serializationData" /> が <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> ではありません。</exception>
      <returns vsli:raw="A collection of objects represented by &lt;paramref name=&quot;serializationData&quot; /&gt;.">
        <paramref name="serializationData" /> によって表されるオブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary vsli:raw="Serializes the specified collection of objects and stores them in a serialization data object.">指定したオブジェクトのコレクションをシリアル化し、シリアル化されたデータをシリアル化データ オブジェクトに格納します。</summary>
      <param name="objects" vsli:raw="A collection of objects to serialize.">シリアル化するオブジェクトのコレクション。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ComponentSerializationService&quot; /&gt; was not found.">
        <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> は見つかりませんでした。</exception>
      <returns vsli:raw="An object that contains the serialized state of the specified collection of objects.">指定したオブジェクトのコレクションのシリアル化された状態を格納するオブジェクト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary vsli:raw="Creates a new name that is unique to all components in the specified container.">指定したコンテナー内でどのコンポーネントとも重複しない新しい名前を作成します。</summary>
      <param name="container" vsli:raw="The container where the new object is added.">新しいオブジェクトが追加される先のコンテナー。</param>
      <param name="dataType" vsli:raw="The data type of the object that receives the name.">名前を受け取るオブジェクトのデータ型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataType" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A unique name for the data type.">データ型の一意の名前。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary vsli:raw="Gets a value indicating whether the specified name is valid.">指定した名前が有効かどうかを示す値を取得します。</summary>
      <param name="name" vsli:raw="The name to validate.">検証対象の名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">名前が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary vsli:raw="Gets a value indicating whether the specified name is valid.">指定した名前が有効かどうかを示す値を取得します。</summary>
      <param name="name" vsli:raw="The name to validate.">検証対象の名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid identifier, or there is already a component with the same name.">
        <paramref name="name" /> が有効な識別子ではないか、同じ名前のコンポーネントが既に存在しています。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary vsli:raw="Writes compile-unit changes to persistent storage.">コンパイル単位の変更を永続ストレージに書き込みます。</summary>
      <param name="unit" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; to be persisted.">永続化する <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; this designer loader will use.">このデザイナー ローダーが使用する <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; this designer loader will use.">このデザイナー ローダーが使用する <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary vsli:raw="Gets the type resolution service to be used with this designer loader.">このデザイナー ローダーで使用する型の解決サービスを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt; that the CodeDOM serializers will use when resolving types.">型を解決するときに CodeDOM シリアライザーが使用する <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary vsli:raw="Determines the localization model to be used by the CodeDom resource adapter.">CodeDom リソース アダプターで使用されるローカリゼーション モデルを決定します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary vsli:raw="The localization provider should ignore localized properties. It will still write out resources for objects that do not support code generation and are serializable.">ローカリゼーション プロバイダーは、ローカライズされたプロパティを無視します。 コード生成をサポートしない、シリアル化可能なオブジェクトに対応するリソースは、引き続き出力されます。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary vsli:raw="The localization provider will write out localized properties by assigning a resource to each property. This model is fast when the number of properties is small, but it scales poorly as the number of properties containing default values grows.">ローカリゼーション プロバイダーは、各プロパティにリソースを割り当てることにより、ローカライズされたプロパティを出力します。 このモデルは、プロパティの数が少ない場合は高速ですが、既定値を持つプロパティの数が増えるにつれて、パフォーマンスが悪化します。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary vsli:raw="The localization provider will write localized property values into a resource file and use the &lt;see cref=&quot;T:System.ComponentModel.ComponentResourceManager&quot; /&gt; class to reflect on properties by name to fill them at runtime. This uses reflection at runtime so it can be slow, but it scales better for large numbers of properties with default values.">ローカリゼーション プロバイダーは、ローカライズされたプロパティ値をリソース ファイルに出力し、<see cref="T:System.ComponentModel.ComponentResourceManager" /> クラスを使用して名前でプロパティをリフレクションして、実行時に値を設定します。 このモデルでは、実行時にリフレクションを使用するため低速になる可能性がありますが、既定値を持つプロパティが大量に存在する場合にパフォーマンスを維持できます。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary vsli:raw="Provides CodeDOM resource serialization services. This class cannot be inherited.">CodeDOM リソース シリアル化サービスを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; used by the localization provider to add its extender properties.">ローカリゼーション プロバイダーがそのエクステンダー プロパティを追加するために使用する <see cref="T:System.IServiceProvider" />。</param>
      <param name="model" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel&quot; /&gt; value indicating the localization model to be used by the CodeDOM resource adapter.">CodeDom リソース アダプターで使用されるローカリゼーション モデルを示す <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 値。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; used by the localization provider to add its extender properties.">ローカリゼーション プロバイダーがそのエクステンダー プロパティを追加するために使用する <see cref="T:System.IServiceProvider" />。</param>
      <param name="model" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel&quot; /&gt; value indicating the localization model to be used by the CodeDOM resource adapter.">CodeDom リソース アダプターで使用されるローカリゼーション モデルを示す <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 値。</param>
      <param name="supportedCultures" vsli:raw="An array of cultures that this resource adapter should support.">このリソース アダプターがサポートするカルチャの配列。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />」をご覧ください。</summary>
      <param name="manager" vsli:raw="The serialization manager requesting the serializer.">シリアライザーを要求しているシリアル化マネージャー。</param>
      <param name="currentSerializer" vsli:raw="An instance of the current serializer of the specified type. This can be &lt;see langword=&quot;null&quot; /&gt; if no serializer of the specified type exists.">指定した型の現在のシリアライザーのインスタンス。 指定した型のシリアライザーがない場合、この値は <see langword="null" /> になります。</param>
      <param name="objectType" vsli:raw="The data type of the object to serialize.">シリアル化するオブジェクトのデータ型。</param>
      <param name="serializerType" vsli:raw="The data type of the serializer to create.">作成するシリアライザーのデータ型。</param>
      <returns vsli:raw="An instance of a serializer of the type requested, or &lt;see langword=&quot;null&quot; /&gt; if the request cannot be satisfied.">要求された型のシリアライザーのインスタンス。要求を満たすシリアライザーがない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary vsli:raw="Serializes an object graph to a series of CodeDOM statements. This class provides an abstract base class for a serializer.">オブジェクト グラフを一連の CodeDOM ステートメントにシリアル化します。 このクラスは、シリアライザーの抽象基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized CodeDOM object into an object.">指定したシリアル化された CodeDOM オブジェクトを逆シリアル化してオブジェクトに戻します。</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">逆シリアル化処理中に使用されるシリアル化マネージャー インターフェイス。</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">逆シリアル化の対象となる、シリアル化された CodeDOM オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="codeObject" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;codeObject&quot; /&gt; is an unsupported code element.">
        <paramref name="codeObject" /> はサポートされないコード要素です。</exception>
      <returns vsli:raw="The deserialized CodeDOM object.">逆シリアル化された CodeDOM オブジェクト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a single statement.">1 つのステートメントを逆シリアル化します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="statement" vsli:raw="The statement to deserialize.">逆シリアル化するステートメント。</param>
      <returns vsli:raw="An object instance resulting from deserializing &lt;paramref name=&quot;statement&quot; /&gt;.">
        <paramref name="statement" /> の逆シリアル化の結果のオブジェクト インスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary vsli:raw="Determines which statement group the given statement should belong to.">特定のステートメントが属する必要のあるステートメント グループを決定します。</summary>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; for which to determine the group.">グループを決定する対象の <see cref="T:System.CodeDom.CodeStatement" />。</param>
      <param name="expression" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that &lt;paramref name=&quot;statement&quot; /&gt; has been reduced to.">
        <paramref name="statement" /> が削減された対象の <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of &lt;paramref name=&quot;statement&quot; /&gt;.">
        <see cref="T:System.Type" /> の <paramref name="statement" />。</param>
      <returns vsli:raw="The name of the component with which &lt;paramref name=&quot;statement&quot; /&gt; should be grouped.">
        <paramref name="statement" /> をグループ化する必要がある対象のコンポーネントの名前。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a CodeDOM object.">特定のオブジェクトをシリアル化して、CodeDOM オブジェクトを生成します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">シリアル化時に使用するシリアル化マネージャー。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">シリアル化されたオブジェクトを表す CodeDOM オブジェクト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default values.">既定値を考慮して特定のオブジェクトをシリアル化します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> を表す CodeDom オブジェクト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">指定されたオブジェクトの指定されたメンバーをシリアル化します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">
        <paramref name="member" /> がアタッチされているオブジェクト。</param>
      <param name="member" vsli:raw="The member to serialize.">シリアル化するメンバー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="owningObject" />、または <paramref name="member" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> がシリアル化可能な型ではありません。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; representing the serialized state of &lt;paramref name=&quot;member&quot; /&gt;.">
        <paramref name="member" /> のシリアル化された状態を表す <see cref="T:System.CodeDom.CodeStatementCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member, accounting for default values.">既定値を考慮して、指定されたメンバーをシリアル化します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">
        <paramref name="member" /> がアタッチされているオブジェクト。</param>
      <param name="member" vsli:raw="The member to serialize.">シリアル化するメンバー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="owningObject" />、または <paramref name="member" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> がシリアル化可能な型ではありません。</exception>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;member&quot; /&gt;.">
        <paramref name="member" /> を表す CodeDom オブジェクト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified value to a CodeDOM expression.">指定した値を CodeDOM 式にシリアル化します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">シリアル化時に使用するシリアル化マネージャー。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <returns vsli:raw="The serialized value. This returns &lt;see langword=&quot;null&quot; /&gt; if no reference expression can be obtained for the specified value, or the value cannot be serialized.">シリアル化された値。 このメソッドは、指定した値の参照式を取得できない場合、または値をシリアル化できない場合に <see langword="null" /> を返します。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary vsli:raw="Provides a base class for &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; classes.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> の各クラスの基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Deserializes the given expression into an in-memory object.">指定した式をメモリ内オブジェクトに逆シリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="name" vsli:raw="The name of the object that results from the expression. Can be &lt;see langword=&quot;null&quot; /&gt; if there is no need to name the object.">式の結果として作成されるオブジェクトの名前。 オブジェクトに名前を付ける必要がない場合は、<see langword="null" /> でもかまいません。</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; to interpret.">解釈する <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <returns vsli:raw="An object resulting from interpretation of &lt;paramref name=&quot;expression&quot; /&gt;.">
        <paramref name="expression" /> の解釈の結果として作成されたオブジェクト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary vsli:raw="Returns an instance of the given type.">指定した型のインスタンスを返します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the instance to return.">返されるインスタンスの <see cref="T:System.Type" />。</param>
      <param name="parameters" vsli:raw="The parameters to pass to the constructor for &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="type" /> のコンストラクターに渡すパラメーター。</param>
      <param name="name" vsli:raw="The name of the deserialized object.">逆シリアル化されたオブジェクトの名前。</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">このオブジェクトをデザイン コンテナーに追加する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 この値を有効にするには、オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装していることが必要です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="type" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="An instance of &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="type" /> のインスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Deserializes properties on the given object from the invariant culture's resource bundle.">インバリアント カルチャのリソース バンドルから、指定したオブジェクトのプロパティを逆シリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object from which the properties are to be deserialized.">プロパティを逆シリアル化する対象となるオブジェクト。</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be deserialized.">逆シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a statement by interpreting and executing a CodeDOM statement.">CodeDOM ステートメントを解釈して実行することにより、ステートメントを逆シリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; to deserialize.">逆シリアル化を行う対象の <see cref="T:System.CodeDom.CodeStatement" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクションを取得します。</summary>
      <param name="manager" vsli:raw="The serialization manager.">シリアル化マネージャー。</param>
      <param name="type" vsli:raw="The target type.">対象の型。</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクションを取得します。</summary>
      <param name="manager" vsli:raw="The serialization manager.">シリアル化マネージャー。</param>
      <param name="instance" vsli:raw="An object of the target type.">対象の型のオブジェクト。</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of events as defined in the project's target version of .NET.">プロジェクトのターゲット バージョンの .NET Framework で定義されているイベントのコレクションを取得します。</summary>
      <param name="manager" vsli:raw="The serialization manager.">シリアル化マネージャー。</param>
      <param name="instance" vsli:raw="An object of the target type.">対象の型のオブジェクト。</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">ターゲット バージョンの .NET Framework に渡す属性の配列。</param>
      <returns vsli:raw="A collection of events as defined in the project's target version of .NET.">プロジェクトのターゲット バージョンの .NET Framework で定義されているイベントのコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns an expression for the given object.">指定したオブジェクトの式を返します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object for which to get an expression.">式の取得対象となるオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no existing expression for &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> を表す <see cref="T:System.CodeDom.CodeExpression" />。<paramref name="value" /> の既存の式が存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of properties as defined in the project's target version of .NET.">プロジェクトのターゲット バージョンの .NET Framework で定義されているプロパティのコレクションを取得します。</summary>
      <param name="manager" vsli:raw="The serialization manager.">シリアル化マネージャー。</param>
      <param name="instance" vsli:raw="An object of the target type.">対象の型のオブジェクト。</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">ターゲット バージョンの .NET Framework に渡す属性の配列。</param>
      <returns vsli:raw="A collection of properties as defined in the project's target version of .NET.">プロジェクトのターゲット バージョンの .NET Framework で定義されているプロパティのコレクション。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a reflection type generated from type metadata.">型のメタデータから生成されたリフレクション型を取得します。</summary>
      <param name="manager" vsli:raw="The serialization manager.">シリアル化マネージャー。</param>
      <param name="type" vsli:raw="The type to use metadata from.">使用するメタデータを持つ型。</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="type" /> のメタデータから生成されたリフレクション型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a reflection type generated from object metadata.">オブジェクトのメタデータから生成されたリフレクション型を取得します。</summary>
      <param name="manager" vsli:raw="The serialization manager.">シリアル化マネージャー。</param>
      <param name="instance" vsli:raw="The object to use metadata from.">使用するメタデータを持つオブジェクト。</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;object&quot; /&gt;.">
        <paramref name="object" /> のメタデータから生成されたリフレクション型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Locates a serializer for the given object value.">指定したオブジェクト値のシリアライザーを検索します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object specifying the serializer to retrieve.">取得するシリアライザーを指定するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> に適合する <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Locates a serializer for the given type.">指定した型のシリアライザーを検索します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="valueType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; specifying the serializer to retrieve.">取得するシリアライザーを指定する <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;valueType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="valueType" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;valueType&quot; /&gt;.">
        <paramref name="valueType" /> に適合する <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptionProvider&quot; /&gt; that is aware of the target version of .NET, for use in type filtering.">型のフィルター処理に使用できる、ターゲット バージョンの .NET Framework を認識する <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> を取得します。</summary>
      <param name="provider" vsli:raw="The type description provider service.">型説明のプロバイダー サービス。</param>
      <param name="instance" vsli:raw="An object from which the type description provider service can be derived, if &lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> が <see langword="null" /> の場合に、型説明のプロバイダー サービスの派生元にすることができるオブジェクト。</param>
      <returns vsli:raw="A .NET-aware type description provider.">.NET Framework を認識する型説明のプロバイダー。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a unique name for the given object.">指定したオブジェクトの一意の名前を返します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object for which the name will be retrieved.">名前の取得対象となるオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A unique name for &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> の一意の名前。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized.">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">以前のシリアル化のテスト対象となるオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> がシリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。オプションで、あらかじめ設定された式を考慮することもできます。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">以前のシリアル化のテスト対象となるオブジェクト。</param>
      <param name="honorPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include preset expressions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">あらかじめ設定された式を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> がシリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary vsli:raw="Returns an expression representing the creation of the given object.">指定したオブジェクトの作成を表す式を返します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <param name="isComplete" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was fully serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> が完全にシリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="An expression representing the creation of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> の作成を表す式。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Serializes the given event into the given statement collection.">指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">イベントをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value" vsli:raw="The object to which &lt;paramref name=&quot;descriptor&quot; /&gt; is bound.">
        <paramref name="descriptor" /> のバインド先となるオブジェクト。</param>
      <param name="descriptor" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; specifying the event to serialize.">シリアル化するイベントを指定する <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" />、または <paramref name="descriptor" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" vsli:raw="&lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; is not available.">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> が使用できません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the specified events into the given statement collection.">指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">イベントをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value" vsli:raw="The object on which events will be serialized.">イベントをシリアル化する対象となるオブジェクト。</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which events will be serialized.">シリアル化するイベントをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the given statement collection.">指定されたオブジェクトのプロパティを指定されたステートメントのコレクションにシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the properties will be serialized.">プロパティをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value" vsli:raw="The object on which the properties will be serialized.">プロパティをシリアル化する対象となるオブジェクト。</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the invariant culture's resource bundle.">指定されたオブジェクトのプロパティをインバリアント カルチャのリソース バンドルにシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements" vsli:raw="Not used.">使用しません。</param>
      <param name="value" vsli:raw="The object whose properties will be serialized.">プロパティがシリアル化されるオブジェクト。</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Serializes a property on the given object.">指定したオブジェクトのプロパティをシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the property will be serialized.">プロパティをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value" vsli:raw="The object on which the property will be serialized.">プロパティをシリアル化する対象となるオブジェクト。</param>
      <param name="propertyToSerialize" vsli:raw="The property to serialize.">シリアル化するプロパティ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;propertyToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" />、または <paramref name="propertyToSerialize" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">指定したオブジェクトを、指定したリソース名のリソース バンドルにシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <paramref name="value" /> をシリアル化した結果を格納するリソース バンドルの名前。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">指定したオブジェクトを、指定したリソース名のリソース バンドルにシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <paramref name="value" /> をシリアル化した結果を格納するリソース バンドルの名前。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">指定したオブジェクトを式にシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize. Can be &lt;see langword=&quot;null&quot; /&gt;.">シリアル化するオブジェクト。 <see langword="null" /> の可能性があります。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; object if &lt;paramref name=&quot;value&quot; /&gt; can be serialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> をシリアル化できる場合は <see cref="T:System.CodeDom.CodeExpression" /> オブジェクト。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">指定したオブジェクトを式にシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">シリアル化された式として <paramref name="value" /> を格納している <see cref="T:System.CodeDom.CodeExpression" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Serializes the given object into an expression appropriate for the invariant culture.">指定したオブジェクトをインバリアント カルチャに適した式にシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <param name="ensureInvariant" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize into the invariant culture; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">インバリアント カルチャにシリアル化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">シリアル化された式として <paramref name="value" /> を格納している <see cref="T:System.CodeDom.CodeExpression" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Associates an object with an expression.">オブジェクトを式に関連付けます。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> を関連付ける <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;expression&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" />、または <paramref name="expression" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary vsli:raw="Associates an object with an expression, optionally specifying a preset expression.">必要に応じて事前設定された式を指定し、オブジェクトを式に関連付けます。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> を関連付ける <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="isPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify a preset expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">あらかじめ設定された式を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary vsli:raw="The exception that is thrown when line number information is available for a serialization error.">シリアル化エラーの行番号情報を取得できる場合にスローされる例外。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified exception and line information.">例外と行情報を指定して、<see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="ex" vsli:raw="The exception to throw.">スローされる例外。</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">例外が発生した位置を示す <see cref="T:System.CodeDom.CodeLinePragma" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="ex" vsli:raw="The exception to throw.">スローされる例外。</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">内容の抽出対象となる <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified message and line information.">メッセージと行情報を指定して、<see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A message describing the exception.">例外を説明するメッセージ。</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">例外が発生した位置を示す <see cref="T:System.CodeDom.CodeLinePragma" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A message describing the exception.">例外を説明するメッセージ。</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">内容の抽出対象となる <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the parameter name and additional exception information.">パラメーター名と追加の例外情報を使用して <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</summary>
      <param name="info" vsli:raw="Stores the data that was being used to serialize or deserialize the object that the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; was serializing or deserializing.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> がシリアル化または逆シリアル化していたオブジェクトを、シリアル化または逆シリアル化するために使用したデータを格納します。</param>
      <param name="context" vsli:raw="Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context.">例外を生成したストリームの転送元および転送先を記述し、そのコンテキストと追加の呼び出し元定義のコンテキストを保持するためのシリアル化の手段を提供します。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary vsli:raw="Gets or sets the line information for the error associated with this exception.">この例外に関連付けられているエラーの行情報を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates the line information for the error.">エラーの行情報を示す <see cref="T:System.CodeDom.CodeLinePragma" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary vsli:raw="Serializes collections.">コレクションをシリアル化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary vsli:raw="Verifies serialization support by the &lt;paramref name=&quot;method&quot; /&gt;.">
        <paramref name="method" /> によるシリアル化のサポートを検証します。</summary>
      <param name="method" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; to check for serialization attributes.">シリアル化属性を確認する対象の <see cref="T:System.Reflection.MethodInfo" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;method&quot; /&gt; supports serialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="method" /> がシリアル化をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given collection into a CodeDOM object.">指定したコレクションをシリアル化して、CodeDOM オブジェクトを生成します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">シリアル化時に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A CodeDOM object representing &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> を表す CodeDOM オブジェクト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the given collection.">指定されたコレクションをシリアル化します。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">シリアル化時に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="targetExpression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that refers to the collection.">コレクションを参照する <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the collection.">コレクションの <see cref="T:System.Type" />。</param>
      <param name="originalCollection" vsli:raw="The collection to serialize.">シリアル化するコレクション。</param>
      <param name="valuesToSerialize" vsli:raw="The values to serialize.">シリアル化する値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;targetType&quot; /&gt;, &lt;paramref name=&quot;originalCollection&quot; /&gt;, or &lt;paramref name=&quot;valuesToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="targetType" />、<paramref name="originalCollection" />、または <paramref name="valuesToSerialize" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="Serialized collection if the serialization process succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">シリアル化プロセスが正常に実行された場合はシリアル化されたコレクション。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; interface.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> インターフェイスの実装を提供します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary vsli:raw="Occurs when a session is created.">セッションが作成されるときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary vsli:raw="Occurs when a session is disposed.">セッションが破棄されるときに発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)&quot; /&gt; cannot locate the specified name in the serialization manager's name table.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> が、指定した名前をシリアル化マネージャーの名前テーブルで見つけることができない場合に発生します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">シリアル化マネージャーにアクティブなシリアル化セッションが存在しません。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary vsli:raw="Occurs when serialization is complete.">シリアル化が完了したときに発生します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">シリアル化マネージャーにアクティブなシリアル化セッションが存在しません。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class with the given service provider.">指定したサービス プロバイダーで <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;.">
        <see cref="T:System.IServiceProvider" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of a type.">型のインスタンスを作成します。</summary>
      <param name="type" vsli:raw="The type to create an instance of.">作成するインスタンスの型。</param>
      <param name="arguments" vsli:raw="The parameters of the type's constructor. This can be &lt;see langword=&quot;null&quot; /&gt; or an empty collection to invoke the parameterless constructor.">型のコンストラクターのパラメーター。 パラメーターなしのコンストラクターを呼び出すには、これが <see langword="null" /> でも空のコレクションでもかまいません。</param>
      <param name="name" vsli:raw="A name to give the object. If &lt;see langword=&quot;null&quot; /&gt;, the object will not be given a name, unless the object is added to a container and the container gives the object a name.">オブジェクトに付ける名前。 <see langword="null" /> の場合、オブジェクトに名前は付けられません。ただし、オブジェクトをコンテナーに追加し、そのコンテナーによってオブジェクトに名前が付けられる場合を除きます。</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add the object to the container if the object implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装しているときに、コンテナーにオブジェクトを追加する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; does not have a constructor that takes parameters contained in &lt;paramref name=&quot;arguments&quot; /&gt;.">
        <paramref name="type" /> は、<paramref name="arguments" /> に格納されたパラメーターを取得するコンストラクターを持ちません。</exception>
      <returns vsli:raw="A new instance of the type specified by &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="type" /> で指定した型の新しいインスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary vsli:raw="Creates a new serialization session.">新しいシリアル化セッションを作成します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager is already within a session. This version of &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; does not support simultaneous sessions.">シリアル化マネージャーは、既にセッション内に存在します。 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> のこのバージョンは、同時セッションをサポートしていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; that represents a new serialization session.">新しいシリアル化セッションを表す <see cref="T:System.IDisposable" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary vsli:raw="Gets the type corresponding to the specified type name.">指定された型名に対応する型を取得します。</summary>
      <param name="typeName" vsli:raw="The name of the type to get.">取得する型の名前。</param>
      <returns vsli:raw="The specified type.">指定された型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets the serializer for the given object type.">指定したオブジェクト型のシリアライザーを取得します。</summary>
      <param name="objectType" vsli:raw="The type of object for which to retrieve the serializer.">シリアライザーの取得対象となるオブジェクトの型。</param>
      <param name="serializerType" vsli:raw="The type of serializer to retrieve.">取得するシリアライザーの型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;objectType&quot; /&gt; or &lt;paramref name=&quot;serializerType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectType" /> または <paramref name="serializerType" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="The serializer for &lt;paramref name=&quot;objectType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;, if not found.">
        <paramref name="objectType" /> のシリアライザー。見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">要求したサービスを取得します。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">取得するサービスの型。</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">要求したサービス。サービスを解決できない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary vsli:raw="Gets the requested type.">要求された型を取得します。</summary>
      <param name="typeName" vsli:raw="The name of the type to retrieve.">取得する型の名前。</param>
      <returns vsli:raw="The requested type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be resolved.">要求された型。型を解決できない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Adds a custom serialization provider to the serialization manager.">シリアル化マネージャーにカスタムのシリアル化プロバイダーを追加します。</summary>
      <param name="provider" vsli:raw="The serialization provider to add.">追加するシリアル化プロバイダー。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method.">
        <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドを実装します。</summary>
      <param name="type" vsli:raw="The data type to create.">作成するデータ型。</param>
      <param name="arguments" vsli:raw="The arguments to pass to the constructor for this type.">型のコンストラクターに渡す引数。</param>
      <param name="name" vsli:raw="The name of the object. This name can be used to access the object later through &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; is passed, the object is still created but cannot be accessed by name.">オブジェクトの名前。 この名前は、<see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> を使用して後からオブジェクトにアクセスするときに使用できます。 <see langword="null" /> が渡された場合でもオブジェクトは作成されますが、そのオブジェクトには名前を指定する方法ではアクセスできません。</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">このオブジェクトをデザイン コンテナーに追加する場合は <see langword="true" />。 この値を有効にするには、オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装していることが必要です。</param>
      <returns vsli:raw="The newly created object instance.">新しく作成したオブジェクト インスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary vsli:raw="Retrieves an instance of a created object of the specified name.">指定した名前の作成済みオブジェクトのインスタンスを取得します。</summary>
      <param name="name" vsli:raw="The name of the object to retrieve.">取得するオブジェクトの名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
      <returns vsli:raw="An instance of the object with the given name, or &lt;see langword=&quot;null&quot; /&gt; if no object by that name can be found.">指定した名前を持つオブジェクトのインスタンス。その名前のオブジェクトが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary vsli:raw="Retrieves a name for the specified object.">指定したオブジェクトの名前を取得します。</summary>
      <param name="value" vsli:raw="The object for which to retrieve the name.">名前の取得対象となるオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object is unnamed.">オブジェクトの名前。オブジェクトに名前がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets a serializer of the requested type for the specified object type.">指定したオブジェクト型に対応する、要求された型のシリアライザーを取得します。</summary>
      <param name="objectType" vsli:raw="The type of the object to get the serializer for.">シリアライザーを取得する対象のオブジェクトの型。</param>
      <param name="serializerType" vsli:raw="The type of the serializer to retrieve.">取得するシリアライザーの型。</param>
      <returns vsli:raw="An instance of the requested serializer, or &lt;see langword=&quot;null&quot; /&gt; if no appropriate serializer can be located.">要求されたシリアライザーのインスタンス。該当するシリアライザーが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary vsli:raw="Gets a type of the specified name.">指定した名前の型を取得します。</summary>
      <param name="typeName" vsli:raw="The fully qualified name of the type to load.">読み込まれる型の完全修飾名。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
      <returns vsli:raw="An instance of the type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be loaded.">型のインスタンス。型を読み込めない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Removes a previously added serialization provider.">以前に追加したシリアル化プロバイダーを削除します。</summary>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot; /&gt; to remove.">削除する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary vsli:raw="Used to report a recoverable error in serialization.">シリアル化における回復可能なエラーの報告に使用します。</summary>
      <param name="errorInformation" vsli:raw="An object containing the error information, usually of type &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">エラー情報を格納しているオブジェクト。通常は、<see cref="T:System.String" /> 型または <see cref="T:System.Exception" /> 型のオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary vsli:raw="Sets the name for the specified object.">指定したオブジェクトの名前を設定します。</summary>
      <param name="instance" vsli:raw="The object to set the name.">名前を設定するオブジェクト。</param>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used as the name of the object.">オブジェクトの名前として使用する <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">一方または両方のパラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified by instance already has a name, or &lt;paramref name=&quot;name&quot; /&gt; is already used by another named object.">インスタンスによって指定されたオブジェクトに既に名前が付いているか、<paramref name="name" /> が別の名前付きオブジェクトによって既に使用されています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.IServiceProvider.GetService(System.Type)" /> メソッドのトピックを参照してください。</summary>
      <param name="serviceType" vsli:raw="An object that specifies the type of service object to get.">取得対象となるサービスの型を指定するオブジェクト。</param>
      <returns vsli:raw="A service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; if there is no service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.">
        <paramref name="serviceType" /> 型のサービス オブジェクト。  
  
- または - 
 <paramref name="serviceType" /> 型のサービス オブジェクトが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary vsli:raw="Gets or sets to the container for this serialization manager.">このシリアル化マネージャーのコンテナーを取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; to which the serialization manager will add components.">シリアル化マネージャーがコンポーネントを追加する <see cref="T:System.ComponentModel.IContainer" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary vsli:raw="Gets the list of errors that occurred during serialization or deserialization.">シリアル化または逆シリアル化の実行時に発生したエラーのリストを取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
      <returns vsli:raw="The list of errors that occurred during serialization or deserialization.">シリアル化または逆シリアル化の実行時に発生したエラーのリスト。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method should check for the presence of the given name in the container.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドが、コンテナーに指定した名前が存在することをチェックする必要があるかどうかを示す値を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was changed from within a serialization session.">このプロパティは、シリアル化セッション内から変更されました。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will pass the given component name; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will check for the presence of the given name in the container. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が指定したコンポーネント名を渡す場合は <see langword="true" />。<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> がコンテナーに指定した名前が存在するかどうかチェックする場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary vsli:raw="Gets the object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">シリアル化マネージャーの <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティにプロパティを提供する際に使用する必要のあるオブジェクトを取得します。</summary>
      <returns vsli:raw="The object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">シリアル化マネージャーの <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティにプロパティを提供する際に使用する必要のあるオブジェクト。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will always create a new instance of a type.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が型の新しいインスタンスを常に作成するかどうかを示す値が取得または設定されます。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will return the existing instance; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will create a new instance of a type. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が既存のインスタンスを返す場合は <see langword="true" />。<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が型の新しいインスタンスを作成する場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary vsli:raw="Gets the context stack for this serialization session.">このシリアル化セッションのコンテキスト スタックを取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">このプロパティは、シリアル化セッション外部でアクセスされました。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ContextStack&quot; /&gt; that stores data.">データを格納する <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary vsli:raw="Implements the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティを実装します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; containing the properties to be serialized.">シリアル化されるプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method will verify that matching names refer to the same type.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドによって、一致する名前が同じ型を参照していることが検査されるかどうかを示す値が取得または設定されます。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; verifies types; otherwise, &lt;see langword=&quot;false&quot; /&gt; if it does not. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が型を検査する場合は <see langword="true" />。検査しない場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary vsli:raw="Provides a means of passing context state among serializers. This class cannot be inherited.">シリアライザー間でコンテキストの状態を渡す方法を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with the given expression and owner.">指定した式と所有者を使用して、<see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="expression" vsli:raw="The given code expression.">指定したコード式。</param>
      <param name="expressionType" vsli:raw="The given code expression type.">指定したコード式の型。</param>
      <param name="owner" vsli:raw="The given code expression owner.">指定したコード式の所有者。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />、<paramref name="expressionType" />、または <paramref name="owner" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with a current value.">現在の値を指定して、<see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="expression" vsli:raw="The given code expression.">指定したコード式。</param>
      <param name="expressionType" vsli:raw="The given code expression type.">指定したコード式の型。</param>
      <param name="owner" vsli:raw="The given code expression owner.">指定したコード式の所有者。</param>
      <param name="presetValue" vsli:raw="The given code expression preset value.">指定したコード式の事前定義された値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />、<paramref name="expressionType" />、または <paramref name="owner" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary vsli:raw="Gets the expression this context represents.">このコンテキストが表す式を取得します。</summary>
      <returns vsli:raw="The expression this context represents.">このコンテキストが表す式。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">式の <see cref="T:System.Type" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">式の <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary vsli:raw="Gets the object owning this expression.">この式を所有するオブジェクトを取得します。</summary>
      <returns vsli:raw="The object owning this expression.">この式を所有するオブジェクト。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary vsli:raw="Gets the preset value of an expression.">式の事前定義された値を取得します。</summary>
      <returns vsli:raw="The preset value of this expression, or &lt;see langword=&quot;null&quot; /&gt; if not assigned.">式の事前定義された値。割り当てられていない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary vsli:raw="Provides an interface that can be used to optimize the reloading of a designer.">デザイナーの再読み込みを最適化するために使用するインターフェイスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary vsli:raw="Indicates whether the designer should reload in order to import the specified compile unit correctly.">指定したコンパイル単位を正しくインポートするために、デザイナーの再読み込みが必要かどうかを示します。</summary>
      <param name="newTree" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; containing the designer document code.">デザイナー ドキュメント コードを格納する <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer should reload; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">デザイナーの再読み込みが必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary vsli:raw="Provides the base class for serializing a reflection primitive within the object graph.">オブジェクト グラフ内のリフレクション プリミティブをシリアル化するための基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary vsli:raw="Serializes the given member descriptor on the given value to a statement collection.">指定した値にあるメンバー記述子をシリアル化してステートメント コレクションにします。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="value" vsli:raw="The object to which the member is bound.">メンバーのバインド先となるオブジェクト。</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">シリアル化するメンバーの記述子。</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which &lt;paramref name=&quot;descriptor&quot; /&gt; is serialized.">
        <paramref name="descriptor" /> のシリアル化先の <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Determines if the given member should be serialized.">指定したメンバーをシリアル化する必要があるかどうかを判断します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="value" vsli:raw="The object to which the member is bound.">メンバーのバインド先となるオブジェクト。</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">シリアル化するメンバーの記述子。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member described by &lt;paramref name=&quot;descriptor&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="descriptor" /> によって記述されているメンバーをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary vsli:raw="Holds a table of statements that is offered by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt;. This class cannot be inherited.">
        <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> によって提供されるステートメントのテーブルを保持します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether the table contains the given statement owner.">指定したステートメントの所有者がテーブルに格納されているかどうかを判断します。</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">ステートメント コレクションの所有者。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is in the table; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">テーブル内に <paramref name="statementOwner" /> が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary vsli:raw="Populates the statement table with a collection of statement owners.">ステートメント テーブルに、ステートメントの所有者のコレクションを設定します。</summary>
      <param name="statementOwners" vsli:raw="A collection of statement owners to add to the table.">テーブルに追加するステートメントの所有者のコレクション。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary vsli:raw="Populates the statement table with a statement owner.">ステートメント テーブルに、ステートメントの所有者を設定します。</summary>
      <param name="owner" vsli:raw="The statement owner to add to the table.">テーブルに追加するステートメントの所有者。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.Collections.IEnumerable.GetEnumerator" /> メソッドのトピックを参照してください。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary vsli:raw="Gets the statement collection for the given owner.">指定した所有者のステートメント コレクションを取得します。</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">ステートメント コレクションの所有者。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The statement collection for &lt;paramref name=&quot;statementOwner&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is not in the table.">
        <paramref name="statementOwner" /> のステートメント コレクション。テーブル内に <paramref name="statementOwner" /> がない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; adds a root context to provide a definition of the root object. This class cannot be inherited.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> は、ルート コンテキストを追加して、ルート オブジェクトの定義を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.RootContext&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.RootContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="expression" vsli:raw="The expression representing the root object in the object graph.">オブジェクト グラフのルート オブジェクトを表す式。</param>
      <param name="value" vsli:raw="The root object of the object graph.">オブジェクト グラフのルート オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary vsli:raw="Gets the expression representing the root object in the object graph.">オブジェクト グラフのルート オブジェクトを表す式を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing the root object in the object graph.">オブジェクト グラフのルート オブジェクトを表す <see cref="T:System.CodeDom.CodeExpression" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary vsli:raw="Gets the root object of the object graph.">オブジェクト グラフのルート オブジェクトを取得します。</summary>
      <returns vsli:raw="The root object of the object graph.">オブジェクト グラフのルート オブジェクト。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary vsli:raw="Specifies that serializers should handle default values. This class cannot be inherited.">シリアライザーが既定値を処理する必要があるかどうかを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class with the option of binding to a specific member.">特定のメンバーにバインドするオプションを指定して、<see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="member" vsli:raw="The member to which this context is bound. Can be &lt;see langword=&quot;null&quot; /&gt;.">このコンテキストのバインド先となるメンバー。 <see langword="null" /> の可能性があります。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Gets a value indicating whether the given member should be serialized in this context.">指定したメンバーをこのコンテキストでシリアル化するかどうかを示す値を取得します。</summary>
      <param name="member" vsli:raw="The member to be examined for serialization.">シリアル化のためにチェックされるメンバー。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given member should be serialized in this context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したメンバーをこのコンテキストでシリアル化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary vsli:raw="Gets the member to which this context is bound.">このコンテキストのバインド先となるメンバーを取得します。</summary>
      <returns vsli:raw="The member to which this context is bound, or &lt;see langword=&quot;null&quot; /&gt; if the context is bound to all members of an object.">このコンテキストのバインド先となるメンバー。このコンテキストがオブジェクトのすべてのメンバーにバインドされる場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary vsli:raw="Provides a location into which statements can be serialized. This class cannot be inherited.">ステートメントのシリアル化先となる場所を提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary vsli:raw="Gets a collection of statements offered by the statement context.">ステートメント コンテキストが提供するステートメントのコレクションを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt; containing statements offered by the statement context.">ステートメント コンテキストが提供するステートメントを格納している <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary vsli:raw="Serializes an object to a new type.">オブジェクトを新しい型にシリアル化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Deserializes the given type declaration.">指定した型宣言を逆シリアル化します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="declaration" vsli:raw="Type declaration to use for serialization.">シリアル化に使用する型宣言。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="typeDecl" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="The root object.">ルート オブジェクト。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary vsli:raw="Returns the method where statements used to serialize a member are stored.">メンバーのシリアル化に使用するステートメントが格納されたメソッドを返します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">シリアル化に使用する型宣言。</param>
      <param name="value" vsli:raw="The value to use for serialization.">シリアル化に使用する値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;typeDecl&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="typeDecl" />、または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="The method used to emit all of the initialization code for the given member.">指定したメンバーのすべての初期化コードを出力するために使用されるメソッド。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Returns an array of methods to be interpreted during deserialization.">逆シリアル化中に解釈されるメソッドの配列を返します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">シリアル化に使用する型宣言。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="typeDecl" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeMemberMethod&quot; /&gt; array of methods to be interpreted during deserialization.">逆シリアル化中に解釈されるメソッドの <see cref="T:System.CodeDom.CodeMemberMethod" /> 配列。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the object root by creating a new type declaration that defines root.">ルートを定義する新しい型宣言を作成することによって、オブジェクト ルートをシリアル化します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">シリアル化に使用するシリアル化マネージャー。</param>
      <param name="root" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <param name="members" vsli:raw="Optional collection of members. Can be &lt;see langword=&quot;null&quot; /&gt; or empty.">省略可能なメンバーのコレクション。 <see langword="null" /> または空になる場合があります。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;root&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="root" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeTypeDeclaration&quot; /&gt; that defines the root object.">ルート オブジェクトを定義する <see cref="T:System.CodeDom.CodeTypeDeclaration" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary vsli:raw="Specifies generic undo/redo functionality at design time.">標準の元に戻したりやり直したりするデザイン時の機能を指定します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary vsli:raw="Occurs immediately before an undo action is performed.">元に戻す操作が実行される直前に発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary vsli:raw="Occurs immediately after an undo action is performed.">元に戻す操作が実行された直後に発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider" vsli:raw="A parenting service provider.">親サービス プロバイダー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A required service cannot be found. See &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; for required services. If you have removed this service, ensure that you provide a replacement.">必要なサービスが見つかりません。 必要なサービスについては、<see cref="T:System.ComponentModel.Design.UndoEngine" /> のトピックを参照してください。 このサービスが削除されている場合は、必ず代わりのサービスを提供します。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; to the undo stack.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> を、元に戻すスタックに追加します。</summary>
      <param name="unit" vsli:raw="The undo unit to add.">追加する取り消し単位。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">新しい <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> を作成します。</summary>
      <param name="name" vsli:raw="The name of the unit to create.">作成する単位の名前。</param>
      <param name="primary" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create the first of a series of nested units; &lt;see langword=&quot;false&quot; /&gt; to create subsequent nested units.">入れ子になっている一連の単位のうち最初の単位を作成する場合は <see langword="true" />。以降の入れ子になっている単位を作成する場合は <see langword="false" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; with a specified name.">指定した名前の新しい <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Discards an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> を破棄します。</summary>
      <param name="unit" vsli:raw="The unit to discard.">破棄する単位。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary vsli:raw="Gets the requested service.">要求したサービスを取得します。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">取得するサービスの型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is required but cannot be found. If you have removed this service, ensure that you provide a replacement.">
        <paramref name="serviceType" /> が要求されましたが、見つかりません。 このサービスが削除されている場合は、必ず代わりのサービスを提供します。</exception>
      <returns vsli:raw="The requested service, if found.">見つかった場合には、要求されたサービス。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">要求したサービスを取得します。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">取得するサービスの型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not found.">要求されたサービス。要求されたサービスが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undoing&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undone&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> イベントを発生させます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary vsli:raw="Enables or disables the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> を有効または無効にします。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> が有効な場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary vsli:raw="Indicates if an undo action is in progress.">元に戻す操作が実行中であることを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an undo action is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">元に戻す操作を実行中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary vsli:raw="Encapsulates a unit of work that a user can undo.">ユーザーが元に戻すことができる処理の単位をカプセル化します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="engine" vsli:raw="The undo engine that owns this undo unit.">この取り消し単位を所有するアンドゥ エンジン。</param>
      <param name="name" vsli:raw="The name for this undo unit.">この取り消し単位の名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;engine&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="engine" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary vsli:raw="Receives a call from the undo engine to close this unit.">アンドゥ エンジンから呼び出しを受け取ってこの単位を閉じます。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> からの呼び出しを受け取ります。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> からの呼び出しを受け取ります。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> からの呼び出しを受け取ります。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> からの呼び出しを受け取ります。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> からの呼び出しを受け取ります。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> からの呼び出しを受け取ります。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> イベントに応答し、<see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> からの呼び出しを受け取ります。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentRenameEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary vsli:raw="Gets an instance of the requested service.">要求したサービスのインスタンスを取得します。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">取得するサービスの型。</param>
      <returns vsli:raw="An instance of the given service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">指定したサービスのインスタンス。サービスを解決できない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">単位の現在の名前を表す <see cref="T:System.String" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">単位の現在の名前を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary vsli:raw="Performs an undo or redo action.">元に戻す操作またはやり直し操作を実行します。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary vsli:raw="Called by &lt;see cref=&quot;M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo&quot; /&gt; to perform an undo action.">元に戻す操作を実行するために <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> によって呼び出されます。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> にイベントが格納されていないかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> にイベントが格納されていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> の名前を取得します。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> の名前。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt;.">親 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt; to which this &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; is attached.">
        <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> の割り当て先である <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.BitmapEditor">
      <summary vsli:raw="Provides a user interface for selecting bitmap files in a property browser.">プロパティ ブラウザーでビットマップ ファイルを選択するためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="F:System.Drawing.Design.BitmapEditor.BitmapExtensions">
      <summary vsli:raw="Provides the list of default file extensions used to filter the file list.">ファイル一覧のフィルター処理に使用される既定のファイル拡張子の一覧を提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.BitmapEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.BitmapEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file list filter that the bitmap editor will initially use to filter the file list.">ファイル リストにフィルターを適用するために、ビットマップ エディターが最初に使用するファイル リスト フィルターの拡張子を取得します。</summary>
      <returns vsli:raw="The default set of file extensions used to filter the file list.">ファイル リストにフィルターを適用するために使用する既定のファイル拡張子セット。</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file list filter provided by this editor.">エディターによって提供される既定のファイル リスト フィルターの説明を取得します。</summary>
      <returns vsli:raw="The description for the default type of files to filter the file list for.">ファイル リストに適用するフィルターとして使用する既定のファイルの種類に関する説明。</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">指定したストリームから画像を読み込みます。</summary>
      <param name="stream" vsli:raw="The stream from which to load the image.">イメージの読み取り元のストリーム。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; loaded from the stream.">ストリームから読み込まれた <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ColorEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually picking a color.">色を視覚的に選択するための <see cref="T:System.Drawing.Design.UITypeEditor" /> を提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ColorEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ColorEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> メソッドによって提供されるエディター スタイルを使用して、特定のオブジェクト値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">編集サービスを取得するために使用される <see cref="T:System.IServiceProvider" />。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">編集する値のインスタンス。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合は、このメソッドは渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the Edit method. If the method is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Edit メソッドの編集スタイルを取得します。 このメソッドがサポートされていない場合は、<see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> が返されます。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="An enum value indicating the provided editing style.">提供されている編集スタイルを示す列挙値。</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating if this editor supports the painting of a representation of an object's value.">エディターでオブジェクトの値の視覚的な表現を描画できるかどうかを示す値を取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ColorEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see cref="Overload:System.Drawing.Design.ColorEditor.PaintValue" /> が実装されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas.">指定したキャンバスに、指定したオブジェクトの値の内部表現を描画します。</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">描画対象と描画位置。</param>
    </member>
    <member name="T:System.Drawing.Design.ContentAlignmentEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually editing content alignment.">内容の配置を視覚的に編集するための <see cref="T:System.Drawing.Design.UITypeEditor" /> を提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ContentAlignmentEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ContentAlignmentEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle&quot; /&gt; method.">
        <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle" /> メソッドによって提供されるエディター スタイルを使用して、特定のオブジェクト値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">編集サービスを取得するために使用される <see cref="T:System.IServiceProvider" />。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">編集する値のインスタンス。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合は、このメソッドは渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ContentAlignmentEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">
        <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.EditValue" /> メソッドの編集スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value indicating the provided editing style. If the method to retrieve the edit style is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">提供されている編集スタイルを示す <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 値。 編集スタイルを取得するメソッドがサポートされていない場合は、<see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> が返されます。</returns>
    </member>
    <member name="T:System.Drawing.Design.CursorEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that can perform default file searching for cursor (.cur) files.">カーソル (.cur) ファイルに対して既定のファイル検索を実行する <see cref="T:System.Drawing.Design.UITypeEditor" /> を提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.CursorEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.CursorEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;Overload:System.Drawing.Design.CursorEditor.GetEditStyle&quot; /&gt; method.">
        <see cref="Overload:System.Drawing.Design.CursorEditor.GetEditStyle" /> メソッドによって提供されるエディター スタイルを使用して、特定のオブジェクト値を編集します。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">追加のコンテキスト情報を提供する際に使用可能な型記述子のコンテキスト。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">編集サービスを取得するために使用するサービス プロバイダー オブジェクト。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">編集する値のインスタンス。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合は、このメソッドは渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.CursorEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">
        <see cref="Overload:System.Drawing.Design.CursorEditor.EditValue" /> メソッドの編集スタイルを取得します。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">追加のコンテキスト情報を提供する際に使用可能な型記述子のコンテキスト。</param>
      <returns vsli:raw="An enum value indicating the provided editing style. If the method is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">提供されている編集スタイルを示す列挙値。 このメソッドがサポートされていない場合は、<see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> が返されます。</returns>
    </member>
    <member name="P:System.Drawing.Design.CursorEditor.IsDropDownResizable">
      <summary vsli:raw="Gets a value indicating whether drop-down editors should be resizable by the user.">ユーザーがドロップダウン エディターのサイズを変更できるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drop-down editors are resizable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ドロップダウン エディターのサイズを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.FontEditor">
      <summary vsli:raw="Provides a user interface to select and configure a &lt;see cref=&quot;T:System.Drawing.Font&quot; /&gt; object.">
        <see cref="T:System.Drawing.Font" /> オブジェクトを選択および設定するためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.FontEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.FontEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the editor style indicated by &lt;see cref=&quot;M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt;.">
        <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> で示されたエディター スタイルを使用して、指定したオブジェクトの値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that this editor can use to obtain services.">このエディターがサービスを取得するために使用できる <see cref="T:System.IServiceProvider" />。</param>
      <param name="value" vsli:raw="The object to edit.">編集対象のオブジェクト。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object that was passed to it.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合、このメソッドは渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> メソッドで使用するエディター スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value that indicates the style of editor used by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> で使用するエディター スタイルを示す <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 値。</returns>
    </member>
    <member name="T:System.Drawing.Design.FontNameEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that paints a glyph for the font name.">フォント名のグリフを描画する <see cref="T:System.Drawing.Design.UITypeEditor" /> を提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.FontNameEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.FontNameEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Determines if this editor supports the painting of a representation of an object's value.">エディターでオブジェクトの値の視覚的な表現を描画できるかどうかを示します。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">追加のコンテキスト情報を提供する際に使用可能な型記述子のコンテキスト。</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontNameEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see cref="Overload:System.Drawing.Design.FontNameEditor.PaintValue" /> が実装されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas. Painting should be done within the boundaries of the provided rectangle.">指定したキャンバスに、指定したオブジェクトの値の内部表現を描画します。 描画は、指定されている四角形の境界内で実行する必要があります。</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">描画対象と描画位置。</param>
    </member>
    <member name="T:System.Drawing.Design.IconEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually choosing an icon.">アイコンを視覚的に選択するための <see cref="T:System.Drawing.Design.UITypeEditor" /> を提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.IconEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.IconEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)">
      <summary vsli:raw="Creates a string representing the valid file extensions for icons.">アイコンの有効なファイル拡張子を表す文字列を作成します。</summary>
      <param name="extensions" vsli:raw="An array of strings holding valid file extensions.">有効なファイル拡張子を保持する文字列の配列。</param>
      <param name="sep" vsli:raw="A string that specifies the separator character.">区切り記号を指定する文字列。</param>
      <returns vsli:raw="A string containing the icon file extensions, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;extensions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or empty.">アイコンのファイル拡張子を含む文字列。<paramref name="extensions" /> が <see langword="null" /> または空の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateFilterEntry(System.Drawing.Design.IconEditor)">
      <summary vsli:raw="Creates a filter string for the file dialog box.">ファイル ダイアログ ボックスのフィルター文字列を作成します。</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.IconEditor&quot; /&gt; for which the filter string will be created.">フィルター文字列が作成される <see cref="T:System.Drawing.Design.IconEditor" />。</param>
      <returns vsli:raw="The filter string, created from the string returned by &lt;see cref=&quot;M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)&quot; /&gt;.">
        <see cref="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" /> によって返された文字列から作成されたフィルター文字列。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> メソッドによって提供されるエディター スタイルを使用して、特定のオブジェクト値を編集します。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">追加のコンテキスト情報を提供する際に使用可能な型記述子のコンテキスト。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">編集サービスを取得するために使用するサービス プロバイダー オブジェクト。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">編集する値のインスタンス。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合は、このメソッドは渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;see cref=&quot;Overload:System.Drawing.Design.IconEditor.EditValue&quot; /&gt; method.">
        <see cref="Overload:System.Drawing.Design.IconEditor.EditValue" /> メソッドの編集スタイルを取得します。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">追加のコンテキスト情報を提供する際に使用可能な型記述子のコンテキスト。</param>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; values indicating the provided editing style.">提供されている編集スタイルを示す <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 値の 1 つ。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetExtensions">
      <summary vsli:raw="Retrieves an array of valid file extensions for icons.">アイコンの有効なファイル拡張子の配列を取得します。</summary>
      <returns vsli:raw="An array of valid file extensions for icons.">アイコンの有効なファイル拡張子の配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file list filter provided by this editor.">エディターによって提供される既定のファイル リスト フィルターの説明を取得します。</summary>
      <returns vsli:raw="The description for the default type of files to filter the file list for.">ファイル リストに適用するフィルターとして使用する既定のファイルの種類に関する説明。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Determines if this editor supports the painting of a representation of an object's value.">エディターでオブジェクトの値の視覚的な表現を描画できるかどうかを示します。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">追加のコンテキスト情報を提供する際に使用可能な型記述子のコンテキスト。</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see cref="Overload:System.Drawing.Design.UITypeEditor.PaintValue" /> が実装されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Drawing.Icon&quot; /&gt; from the given stream.">特定のストリームから新しい <see cref="T:System.Drawing.Icon" /> を作成します。</summary>
      <param name="stream" vsli:raw="The source stream from which the icon will be created.">アイコンが作成されるコピー元ストリーム。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Drawing.Icon&quot; /&gt;.">新しく作成された <see cref="T:System.Drawing.Icon" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas.">指定したキャンバスに、指定したオブジェクトの値の内部表現を描画します。</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">描画対象と描画位置。</param>
    </member>
    <member name="T:System.Drawing.Design.ImageEditor">
      <summary vsli:raw="Provides a user interface for selecting an image for a property in a property grid.">プロパティ グリッドでプロパティに対応するイメージを選択するためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ImageEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ImageEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)">
      <summary vsli:raw="Creates a string of file name extensions using the specified array of file extensions and the specified separator.">指定したファイル拡張子の配列と指定した区切り記号を使用して、ファイル名拡張子の文字列を作成します。</summary>
      <param name="extensions" vsli:raw="The extensions to filter for.">フィルターとして使用するファイル拡張子。</param>
      <param name="sep" vsli:raw="The separator to use.">使用する区切り記号。</param>
      <returns vsli:raw="A string containing the specified file name extensions, each separated by the specified separator.">指定したファイル名拡張子を格納している文字列。各ファイル名拡張子は指定した区切り記号で区切られます。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)">
      <summary vsli:raw="Creates a filter entry for a file dialog box's file list.">ファイル ダイアログ ボックスのファイル リストに適用するフィルター エントリを作成します。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Drawing.Design.ImageEditor&quot; /&gt; to get the filter entry from.">フィルター エントリを取得するための <see cref="T:System.Drawing.Design.ImageEditor" />。</param>
      <returns vsli:raw="The new filter entry string.">新しいフィルター エントリ文字列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> メソッドによって提供される編集スタイルを使用して、特定のオブジェクト値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services can be obtained.">編集サービスを取得するために使用される <see cref="T:System.IServiceProvider" />。</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; being edited.">編集される <see cref="T:System.Object" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the new value. If the value of the object has not changed, &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; returns the object that was passed to it.">新しい値を表す <see cref="T:System.Object" />。 オブジェクトの値が変更されていない場合、<see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> は渡されたオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> メソッドの編集スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the supported editing style.">サポートされている編集スタイルを示す <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 値の 1 つ。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file-list filter that this editor initially uses to filter the file list.">ファイル リストにフィルターを適用するために、このエディターが最初に使用するファイル リスト フィルターの拡張子を取得します。</summary>
      <returns vsli:raw="A set of file extensions used to filter the file list.">ファイル リストにフィルターを適用するために使用するファイル拡張子のセット。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">このエディターによって提供される既定のファイル リストのフィルターの説明を取得します。</summary>
      <returns vsli:raw="The description for the default file-list filter.">既定のファイル リストのフィルターの説明です。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetImageExtenders">
      <summary vsli:raw="Gets an array of supported image types.">サポートされているイメージ タイプの配列を取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; representing supported image types.">サポートされているイメージ タイプを表す <see cref="T:System.Type" /> の配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">エディターでオブジェクトの値の視覚的な表現を描画できるかどうかを示す値を取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> が実装されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">指定したストリームから画像を読み込みます。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the image to load.">読み込む画像が格納されている <see cref="T:System.IO.Stream" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; that has been loaded.">読み込み済みの <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a value indicated by the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.PaintValueEventArgs&quot;&gt;&lt;/xref&gt;.">指定した <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> で示される値を描画します。</summary>
      <param name="e" vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.PaintValueEventArgs&quot;&gt;&lt;/xref&gt; indicating what to paint and where to paint it.">描画対象と描画位置を示す <see cref="T:System.Drawing.Design.PaintValueEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary vsli:raw="Exposes a collection of toolbox items.">ツールボックス項目のコレクションを公開します。</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> オブジェクトのコレクションを取得します。</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary vsli:raw="Provides methods and properties to manage and query the toolbox in the development environment.">開発環境でツールボックスの管理とクエリを行うメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format.">指定したデータ形式のツールボックス アイテム クリエーターを新規に追加します。</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">ツールボックス項目を呼び出したときにコンポーネントを作成できる <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />。</param>
      <param name="format" vsli:raw="The data format that the creator handles.">クリエーターが処理するデータ形式。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format and designer host.">指定したデータ形式とデザイナー ホストに対する新規のツールボックス アイテム クリエーターを追加します。</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">ツールボックス項目を呼び出したときにコンポーネントを作成できる <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />。</param>
      <param name="format" vsli:raw="The data format that the creator handles.">クリエーターが処理するデータ形式。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that represents the designer host to associate with the creator.">クリエーターに関連付けるデザイナー ホストを表す <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox.">指定したプロジェクト リンク済みのツールボックス項目をツールボックスに追加します。</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">ツールボックスに追加するリンク済みの <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">現在のデザイン ドキュメントの <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox in the specified category.">指定したプロジェクト リンク済みのツールボックス項目を、指定したカテゴリのツールボックスに追加します。</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">ツールボックスに追加するリンク済みの <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category" vsli:raw="The toolbox item category to add the toolbox item to.">ツールボックス項目を追加するツールボックス項目カテゴリ。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">現在のデザイン ドキュメントの <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox.">指定したツールボックス項目をツールボックスに追加します。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">ツールボックスに追加する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox in the specified category.">指定したツールボックス項目を、指定したカテゴリのツールボックスに追加します。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">ツールボックスに追加する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category" vsli:raw="The toolbox item category to add the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> を追加するツールボックス項目カテゴリ。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form.">シリアル化形式で、ツールボックス項目を表す指定したオブジェクトからツールボックス項目を取得します。</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">取得する <see cref="T:System.Drawing.Design.ToolboxItem" /> を格納しているオブジェクト。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from the serialized object.">シリアル化オブジェクトから作成した <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form, using the specified designer host.">指定したデザイナー ホストを使用して、シリアル化形式で、ツールボックス項目を表す指定したオブジェクトからツールボックス項目を取得します。</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">取得する <see cref="T:System.Drawing.Design.ToolboxItem" /> を格納しているオブジェクト。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to associate with this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">この <see cref="T:System.ComponentModel.Design.IDesignerHost" /> に関連付ける <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from deserialization.">逆シリアル化から作成する <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary vsli:raw="Gets the currently selected toolbox item.">現在選択されているツールボックス項目を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item has been selected.">現在選択されている <see cref="T:System.Drawing.Design.ToolboxItem" />、または、ツールボックス項目が選択されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the currently selected toolbox item if it is available to all designers, or if it supports the specified designer.">すべてのデザイナーで使用できるか、指定したデザイナーをサポートしている場合は、現在選択されているツールボックス項目を取得します。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that the selected tool must be associated with for it to be returned.">選択されたツールを返すために、関連付ける必要がある <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item is currently selected.">現在選択されている <see cref="T:System.Drawing.Design.ToolboxItem" />、または、ツールボックス項目が現在選択されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary vsli:raw="Gets the entire collection of toolbox items from the toolbox.">ツールボックスからツールボックス項目のコレクション全体を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items.">現在のツールボックス項目を格納している <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host from the toolbox.">ツールボックスから指定したデザイナー ホストに関連付けられているツールボックス項目のコレクションを取得します。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">取得するツールボックス項目に関連付けられている <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified designer host.">指定したデザイナー ホストに関連付けられている現在のツールボックス項目を格納している <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary vsli:raw="Gets a collection of toolbox items from the toolbox that match the specified category.">指定したカテゴリと一致するツールボックスからツールボックス項目のコレクションを取得します。</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve all the toolbox items from.">すべてのツールボックス項目の取得元のツールボックス項目カテゴリ。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category.">指定したカテゴリに関連付けられている現在のツールボックス項目を格納している <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host and category from the toolbox.">ツールボックスから指定したデザイナー ホストとカテゴリに関連付けられているツールボックス項目のコレクションを取得します。</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve the toolbox items from.">ツールボックス項目の取得元のツールボックス項目カテゴリ。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">取得するツールボックス項目に関連付けられている <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category and designer host.">指定したカテゴリとデザイナー ホストに関連付けられている現在のツールボックス項目を格納している <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item matches the specified attributes.">シリアル化ツールボックス項目を表す指定したオブジェクトが、指定した属性と一致するかどうかを示す値を取得します。</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">取得する <see cref="T:System.Drawing.Design.ToolboxItem" /> を格納しているオブジェクト。</param>
      <param name="filterAttributes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the attributes to test the serialized object for.">シリアル化オブジェクトのテスト対象の属性を格納している <see cref="T:System.Collections.ICollection" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object matches the specified attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが指定した属性と一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item can be used by the specified designer host.">シリアル化ツールボックス項目を表す指定したオブジェクトが、指定したデザイナー ホストで使用できるかどうかを示す値を取得します。</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">取得する <see cref="T:System.Drawing.Design.ToolboxItem" /> を格納しているオブジェクト。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to test for support for the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> のサポートをテストする <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is compatible with the specified designer host; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したオブジェクトが、指定したデザイナー ホストと互換性を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item.">指定したオブジェクトがシリアル化ツールボックス項目かどうかを示す値を取得します。</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">確認するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトがツールボックス項目オブジェクトを格納している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item, using the specified designer host.">指定したデザイナー ホストを使用して、指定したオブジェクトがシリアル化ツールボックス項目かどうかを示す値を取得します。</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">確認するオブジェクト。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is making this request.">要求を行っている <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトがツールボックス項目オブジェクトを格納している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary vsli:raw="Refreshes the state of the toolbox items.">ツールボックス項目の状態を更新します。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary vsli:raw="Removes a previously added toolbox item creator of the specified data format.">指定したデータ形式の、以前に追加したツールボックス アイテム クリエーターを削除します。</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">削除するクリエーターのデータ形式。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Removes a previously added toolbox creator that is associated with the specified data format and the specified designer host.">追加した指定のデータ形式とデザイナー ホストに関連付けられたツールボックス クリエーターを削除します。</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">削除するクリエーターのデータ形式。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the creator to remove.">削除するクリエーターに関連付けられた <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">ツールボックスから、指定したツールボックス項目を削除します。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">ツールボックスから削除する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">ツールボックスから、指定したツールボックス項目を削除します。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">ツールボックスから削除する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category" vsli:raw="The toolbox item category to remove the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> の削除元のツールボックス項目カテゴリ。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary vsli:raw="Notifies the toolbox service that the selected tool has been used.">選択したツールが使用されたことをツールボックス サービスに通知します。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a serializable object that represents the specified toolbox item.">指定したツールボックス項目を表すシリアル化オブジェクトを取得します。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to serialize.">シリアル化する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="An object that represents the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">指定した <see cref="T:System.Drawing.Design.ToolboxItem" /> を表すオブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary vsli:raw="Sets the current application's cursor to a cursor that represents the currently selected tool.">現在選択されているツールを表すカーソルに、現在のアプリケーションのカーソルを設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the cursor is set by the currently selected tool, &lt;see langword=&quot;false&quot; /&gt; if there is no tool selected and the cursor is set to the standard windows cursor.">現在選択されているツールによってカーソルを設定する場合は <see langword="true" />。ツールが選択されていなくて、カーソルを標準 Windows カーソルに設定する場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified toolbox item.">指定したツールボックス項目を選択します。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">選択する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary vsli:raw="Gets the names of all the tool categories currently on the toolbox.">現在ツールボックスにあるすべてのツール カテゴリの名前を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.CategoryNameCollection&quot; /&gt; containing the tool categories.">ツール カテゴリを格納している <see cref="T:System.Drawing.Design.CategoryNameCollection" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary vsli:raw="Gets or sets the name of the currently selected tool category from the toolbox.">ツールボックスで現在選択されているツール カテゴリの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the currently selected category.">現在選択されているカテゴリの名前。</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary vsli:raw="Defines an interface for setting the currently selected toolbox item and indicating whether a designer supports a particular toolbox item.">現在選択されているツールボックス項目を設定し、デザイナーが特定のツールボックス項目をサポートしているかどうかを示すインターフェイスを定義します。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the current designer.">指定したツールが現在のデザイナーでサポートされているかどうかを示す値を取得します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">ツールボックスでサポートされているかどうかをテストする対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">ツールボックスでツールがサポートされていて有効にできる場合は <see langword="true" />。ドキュメント デザイナーでツールの使用方法が認識されない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">指定したツールを選択します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">選択する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="T:System.Drawing.Design.MetafileEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that can perform default file searching for metafile (.emf) files.">メタファイル (.emf) ファイルに対して既定のファイル検索を実行する <see cref="T:System.Drawing.Design.UITypeEditor" /> を提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.MetafileEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.MetafileEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file-list filter that this editor initially uses to filter the file list.">ファイル リストにフィルターを適用するために、このエディターが最初に使用するファイル リスト フィルターの拡張子を取得します。</summary>
      <returns vsli:raw="A set of file extensions used to filter the file list.">ファイル リストにフィルターを適用するために使用するファイル拡張子のセット。</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">このエディターによって提供される既定のファイル リストのフィルターの説明を取得します。</summary>
      <returns vsli:raw="The description for the default file-list filter.">既定のファイル リストのフィルターの説明です。</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">指定したストリームから画像を読み込みます。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the image to load.">読み込む画像が格納されている <see cref="T:System.IO.Stream" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; that has been loaded.">読み込み済みの <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event that occurs when components are added to the toolbox.">ツールボックスにコンポーネントが追加されると発生する <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="components" vsli:raw="The components to include in the toolbox.">ツールボックスに含めるコンポーネント。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary vsli:raw="Gets or sets an array containing the components to add to the toolbox.">ツールボックスに追加するコンポーネントを格納している配列を取得または設定します。</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; indicating the components to add to the toolbox.">ツールボックスに追加するコンポーネントを示す <see cref="T:System.ComponentModel.IComponent" /> 型の配列。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event that occurs when components are added to the toolbox.">ツールボックスにコンポーネントが追加されると発生する <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="host" vsli:raw="The designer host that is making the request.">要求を行っているデザイナー ホスト。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary vsli:raw="Gets or sets an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components.">ツールボックス コンポーネントの作成を要求した <see cref="T:System.ComponentModel.Design.IDesignerHost" /> のインスタンスを取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components, or &lt;see langword=&quot;null&quot; /&gt; if no designer host was provided to the toolbox item.">ツールボックス コンポーネントの作成を要求した <see cref="T:System.ComponentModel.Design.IDesignerHost" />。ツールボックス項目にデザイナー ホストが提供されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary vsli:raw="Provides a base implementation of a toolbox item.">ツールボックス項目の基本の実装を提供します。</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary vsli:raw="Occurs immediately after components are created.">コンポーネントが作成された直後に発生します。</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary vsli:raw="Occurs when components are about to be created.">コンポーネントが作成されるときに発生します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class that creates the specified type of component.">指定した型のコンポーネントを作成する <see cref="T:System.Drawing.Design.ToolboxItem" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="toolType" vsli:raw="The type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates.">ツールボックス項目が作成する <see cref="T:System.ComponentModel.IComponent" /> の型。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> がロックされています。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary vsli:raw="Throws an exception if the toolbox item is currently locked.">ツールボックス項目が現在ロックされている場合は、例外がスローされます。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> がロックされています。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create.">ツールボックス項目で作成するように設定されているコンポーネントを作成します。</summary>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">作成された <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host.">指定したデザイナー ホストを使用して、ツールボックス項目で作成するように設定されているコンポーネントを作成します。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">コンポーネントの作成時に使用する <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">作成された <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host and default values.">指定したデザイナー ホストおよび既定値を使用して、ツールボックス項目で作成するように設定されているコンポーネントを作成します。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">コンポーネントの作成時に使用する <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">コンポーネントの初期化に使用するプロパティ名/値ペアの既定値のディクショナリ。</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">作成された <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates a component or an array of components when the toolbox item is invoked.">ツールボックス項目が呼び出されたときに、コンポーネントまたはコンポーネントの配列を作成します。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to host the toolbox item.">ツールボックス項目をホストする <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">作成された <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates an array of components when the toolbox item is invoked.">ツールボックス項目が呼び出されたときに、コンポーネントの配列を作成します。</summary>
      <param name="host" vsli:raw="The designer host to use when creating components.">コンポーネントの作成時に使用するデザイナー ホスト。</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">コンポーネントの初期化に使用するプロパティ名/値ペアの既定値のディクショナリ。</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">作成された <see cref="T:System.ComponentModel.IComponent" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Loads the state of the toolbox item from the specified serialization information object.">指定したシリアル化情報オブジェクトから、このツールボックス項目の状態を読み込みます。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to load from.">読み込み元の <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">ストリーム特性を示す <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; instances are equal.">2 つの <see cref="T:System.Drawing.Design.ToolboxItem" /> インスタンスが等しいかどうかを判断します。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">現在の <see cref="T:System.Drawing.Design.ToolboxItem" /> と比較する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see langword="true" /> が現在の <see cref="T:System.Drawing.Design.ToolboxItem" /> と等しい場合は <see cref="T:System.Drawing.Design.ToolboxItem" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary vsli:raw="Filters a property value before returning it.">プロパティ値を返す前に、フィルター処理をします。</summary>
      <param name="propertyName" vsli:raw="The name of the property to filter.">フィルター処理の対象となるプロパティの名前。</param>
      <param name="value" vsli:raw="The value against which to filter the property.">プロパティのフィルター処理に使用する値。</param>
      <returns vsli:raw="A filtered property value.">フィルター処理済みのプロパティ値。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">現在の <see cref="T:System.Drawing.Design.ToolboxItem" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Enables access to the type associated with the toolbox item.">ツールボックス項目に関連付けられた型にアクセスできるようにします。</summary>
      <param name="host" vsli:raw="The designer host to query for &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> を照会するためのデザイナー ホスト。</param>
      <returns vsli:raw="The type associated with the toolbox item.">ツールボックス項目に関連付けられた型。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of the specified type, optionally using a specified designer host and assembly name.">指定した型のインスタンスを作成します。オプションで、指定したデザイナー ホストとアセンブリの名前を使用します。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current document. This can be &lt;see langword=&quot;null&quot; /&gt;.">現在のドキュメントの <see cref="T:System.ComponentModel.Design.IDesignerHost" />。 これは <see langword="null" /> でもかまいません。</param>
      <param name="assemblyName" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly that contains the type to load. This can be &lt;see langword=&quot;null&quot; /&gt;.">読み込む型が含まれるアセンブリを示す <see cref="T:System.Reflection.AssemblyName" />。 これは <see langword="null" /> でもかまいません。</param>
      <param name="typeName" vsli:raw="The name of the type to create an instance of.">インスタンスを作成する型の名前。</param>
      <param name="reference" vsli:raw="A value indicating whether or not to add a reference to the assembly that contains the specified type to the designer host's set of references.">デザイナー ホストの参照のセットに、指定した型を含むアセンブリへの参照を追加するかどうかを示す値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; is not specified.">
        <paramref name="typeName" /> が指定されていません。</exception>
      <returns vsli:raw="An instance of the specified type, if it can be located.">指定した型が見つかった場合は、その型のインスタンス。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary vsli:raw="Initializes the current toolbox item with the specified type to create.">作成する型を指定して、現在のツールボックス項目を初期化します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the toolbox item creates.">ツールボックス項目が作成する <see cref="T:System.Type" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> がロックされています。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary vsli:raw="Locks the toolbox item and prevents changes to its properties.">ツールボックス項目をロックして、プロパティが変更されないようにします。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> イベントを発生させます。</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> イベントを発生させます。</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Saves the state of the toolbox item to the specified serialization information object.">指定したシリアル化情報オブジェクトに、このツールボックス項目の状態を保存します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to save to.">保存先の <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">ストリーム特性を示す <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; method.">このメンバーの説明については、<see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> メソッドのトピックを参照してください。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">現在の <see cref="T:System.Drawing.Design.ToolboxItem" /> を表す <see cref="T:System.String" /> を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">現在の <see cref="T:System.Drawing.Design.ToolboxItem" /> を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Validates that an object is of a given type.">オブジェクトが特定の型であるかどうかを検証します。</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">検証するプロパティの名前。</param>
      <param name="value" vsli:raw="Optional value against which to validate.">検証の対象となる値 (省略可能)。</param>
      <param name="expectedType" vsli:raw="The expected type of the property.">そのプロパティに予測される型。</param>
      <param name="allowNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> を許容する場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;allowNull&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" /> で、<paramref name="allowNull" /> が <see langword="false" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not the type specified by &lt;paramref name=&quot;expectedType&quot; /&gt;.">
        <paramref name="value" /> が、<paramref name="expectedType" /> で指定された型に該当しません。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary vsli:raw="Validates a property before it is assigned to the property dictionary.">プロパティ ディクショナリに割り当てる前にプロパティを検証します。</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">検証するプロパティの名前。</param>
      <param name="value" vsli:raw="The value against which to validate.">検証の対象となる値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;propertyName&quot; /&gt; is &quot;IsTransient&quot;.">
        <paramref name="value" /> が <see langword="null" /> で、<paramref name="propertyName" /> が "IsTransient" です。</exception>
      <returns vsli:raw="The value used to perform validation.">検証に使用された値。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains the type or types that the toolbox item creates.">ツールボックス項目が作成する型が含まれるアセンブリの名前を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly containing the type or types to create.">作成する型が含まれるアセンブリを示す <see cref="T:System.Reflection.AssemblyName" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary vsli:raw="Gets or sets a bitmap to represent the toolbox item in the toolbox.">ツールボックスでツールボックス項目を表すビットマップを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">ツールボックスでツールボックス項目を表す <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary vsli:raw="Gets or sets the company name for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">この <see cref="T:System.Drawing.Design.ToolboxItem" /> の会社名を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the company for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">この <see cref="T:System.String" /> の会社を指定する <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary vsli:raw="Gets the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">この <see cref="T:System.Drawing.Design.ToolboxItem" /> のコンポーネントの型を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">この <see cref="T:System.String" /> のコンポーネントの型を指定する <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; for the toolbox item.">ツールボックス項目の <see cref="T:System.Reflection.AssemblyName" /> を取得または設定します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; objects.">
        <see cref="T:System.Reflection.AssemblyName" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary vsli:raw="Gets or sets the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">この <see cref="T:System.Drawing.Design.ToolboxItem" /> の説明を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">この <see cref="T:System.String" /> の説明を指定する <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary vsli:raw="Gets or sets the display name for the toolbox item.">ツールボックス項目の表示名を取得または設定します。</summary>
      <returns vsli:raw="The display name for the toolbox item.">ツールボックス項目の表示名。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary vsli:raw="Gets or sets the filter that determines whether the toolbox item can be used on a destination component.">ツールボックス項目が対象のコンポーネントで使用できるかどうかを決定するフィルターを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.ToolboxItemFilterAttribute&quot; /&gt; objects.">
        <see cref="T:System.Collections.ICollection" /> オブジェクトの <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary vsli:raw="Gets a value indicating whether the toolbox item is transient.">ツールボックス項目が遷移的かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this toolbox item should not be stored in any toolbox database when an application that is providing a toolbox closes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">アプリケーションが終了したときに、ツールボックス項目をツールボックス データベースに格納しない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is currently locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> がロックされているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the toolbox item is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ツールボックス項目がロックされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary vsli:raw="Gets or sets the original bitmap that will be used in the toolbox for this item.">この項目のツールボックスに使用する元のビットマップを取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">ツールボックスでツールボックス項目を表す <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary vsli:raw="Gets a dictionary of properties.">プロパティのディクショナリを取得します。</summary>
      <returns vsli:raw="A dictionary of name/value pairs (the names are property names and the values are property values).">名前/値ペアのディクショナリ (名前がプロパティ名に、値がプロパティ値になります)。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary vsli:raw="Gets or sets the fully qualified name of the type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates when invoked.">ツールボックス項目が呼び出されたときに作成する <see cref="T:System.ComponentModel.IComponent" /> の型の完全限定名を取得または設定します。</summary>
      <returns vsli:raw="The fully qualified type name of the type of component that this toolbox item creates.">このツールボックス項目で作成されるコンポーネントの型の完全限定名。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary vsli:raw="Gets the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">この <see cref="T:System.Drawing.Design.ToolboxItem" /> のバージョンを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">この <see cref="T:System.String" /> のバージョンを指定する <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary vsli:raw="Represents a collection of toolbox items.">ツールボックス項目のコレクションを表します。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified array of toolbox items.">指定したツールボックス項目の配列を使用して、<see cref="T:System.Drawing.Design.ToolboxItemCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; containing the toolbox items to fill the collection with.">コレクションに格納するツールボックス項目を格納している <see cref="T:System.Drawing.Design.ToolboxItem" /> 型の配列。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified collection.">指定したコレクションを使用して、<see cref="T:System.Drawing.Design.ToolboxItemCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; to fill the new collection with.">新しいコレクションに格納する <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the collection contains the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">指定した <see cref="T:System.Drawing.Design.ToolboxItem" /> がコレクションに格納されているかどうかを示します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to search the collection for.">コレクションで検索する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コレクションに指定したオブジェクトが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary vsli:raw="Copies the collection to the specified array beginning with the specified destination index.">指定したインデックスを開始位置として、指定した配列にコレクションをコピーします。</summary>
      <param name="array" vsli:raw="The array to copy to.">コピー先の配列。</param>
      <param name="index" vsli:raw="The index to begin copying to.">コピーの開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;, if it exists in the collection.">指定した <see cref="T:System.Drawing.Design.ToolboxItem" /> がコレクション内に存在する場合は、そのインデックスを取得します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to get the index of in the collection.">コレクション内のインデックスを取得する対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">指定した <see cref="T:System.Drawing.Design.ToolboxItem" /> のインデックス。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at the specified index.">指定されたインデックス位置にある <see cref="T:System.Drawing.Design.ToolboxItem" /> を取得します。</summary>
      <param name="index" vsli:raw="The index of the object to get or set.">取得または設定するオブジェクトのインデックス。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at each valid index in the collection.">コレクション内の有効な各インデックスにある <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary vsli:raw="Provides a callback mechanism that can create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> を作成できるコールバック機構を提供します。</summary>
      <param name="serializedObject" vsli:raw="The object which contains the data to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> を作成するデータを含むオブジェクト。</param>
      <param name="format" vsli:raw="The name of the clipboard data format to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> を作成するクリップボード データ形式の名前。</param>
      <returns vsli:raw="The deserialized &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; object specified by &lt;paramref name=&quot;serializedObject&quot; /&gt;.">
        <paramref name="serializedObject" /> で指定された逆シリアル化 <see cref="T:System.Drawing.Design.ToolboxItem" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary vsli:raw="Use &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ITypeLib&quot; /&gt; instead.">代わりに、<see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" /> を使用してください。</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">ヘルプ ファイルのライブラリ ヘルプ トピックのライブラリ ドキュメント文字列、完全なヘルプ ファイル名とパス、およびコンテキスト識別子を取得します。</summary>
      <param name="index" vsli:raw="Index of the type description whose documentation is to be returned.">ドキュメントが返される型の説明のインデックス。</param>
      <param name="strName" vsli:raw="Returns a string that contains the name of the specified item.">指定した項目の名前を格納している文字列を返します。</param>
      <param name="strDocString" vsli:raw="Returns a string that contains the documentation string for the specified item.">指定した項目のドキュメント文字列を格納している文字列を返します。</param>
      <param name="dwHelpContext" vsli:raw="Returns the Help context identifier associated with the specified item.">指定した項目に関連付けられたヘルプ コンテキスト識別子を返します。</param>
      <param name="strHelpFile" vsli:raw="Returns a string that contains the fully qualified name of the Help file.">ヘルプ ファイルの完全限定名を格納している文字列を返します。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">ライブラリの属性を格納している構造体を取得します。</summary>
      <param name="ppTLibAttr" vsli:raw="On successful return, a structure that contains the library's attributes.">正常に返された場合は、ライブラリの属性を格納している構造体。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">タイプ ライブラリにある型の説明の数を返します。</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">タイプ ライブラリにある型の説明の数。</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">型の説明の型を取得します。</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">タイプ ライブラリ内の型の説明のインデックス</param>
      <param name="pTKind" vsli:raw="A reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description.">型の説明に関する <see langword="TYPEKIND" /> 列挙体への参照。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">渡された文字列がライブラリで記述される型またはメンバーの名前を格納しているかどうかを示します。</summary>
      <param name="szNameBuf" vsli:raw="The string to test.">テストする文字列。</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">
        <paramref name="szNameBuf" /> のハッシュ値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="szNameBuf" /> がタイプ ライブラリに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; originally obtained from &lt;see cref=&quot;M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt;.">
        <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> から初めに取得した <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" /> を解放します。</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; to release.">解放する <see langword="TLIBATTR" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary vsli:raw="Provides a user interface for configuring an &lt;see cref=&quot;P:System.Windows.Forms.Control.Anchor&quot; /&gt; property.">
        <see cref="P:System.Windows.Forms.Control.Anchor" /> プロパティを構成するためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AnchorEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.AnchorEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">指定したサービス プロバイダーおよびコンテキストを使用して、指定したオブジェクトの値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">編集サービスを取得するために使用される <see cref="T:System.IServiceProvider" />。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">編集する値のインスタンス。</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合、このメソッドは、渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> メソッドで使用するエディター スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the provided editing style. If the method is not supported, this method will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">提供されている編集スタイルを示す <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 値の 1 つ。 メソッドがサポートされていない場合、このメソッドは <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> を返します。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary vsli:raw="Imports ActiveX controls and generates a wrapper that can be accessed by a designer.">ActiveX コントロールをインポートし、デザイナーからアクセスできるラッパーを生成します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.AxImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="options" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; that indicates the options for the ActiveX control importer to use.">使用する ActiveX コントロール インポーターのオプションを示す <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary vsli:raw="Provides methods to resolve references to ActiveX libraries, COM type libraries or assemblies, or managed assemblies.">ActiveX ライブラリ、COM タイプ ライブラリまたはアセンブリ、あるいはマネージド アセンブリへの参照を解決するメソッドを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an ActiveX control.">ActiveX コントロールを含む、指定したタイプ ライブラリへの参照を解決します。</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">解決される参照の参照先の <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />。</param>
      <returns vsli:raw="A fully qualified path to an assembly.">アセンブリへの絶対パス。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves a reference to the specified assembly that contains a COM component.">COM コンポーネントを含む、指定したアセンブリへの参照を解決します。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly to resolve a reference to.">解決される参照の参照先のアセンブリを示す <see cref="T:System.Reflection.AssemblyName" />。</param>
      <returns vsli:raw="A fully qualified path to an assembly.">アセンブリへの絶対パス。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an COM component.">COM コンポーネントを含んでいる指定したタイプ ライブラリへの参照を解決します。</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">解決される参照の参照先の <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />。</param>
      <returns vsli:raw="A fully qualified path to an assembly.">アセンブリへの絶対パス。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary vsli:raw="Resolves a reference to the specified assembly.">指定したアセンブリへの参照を解決します。</summary>
      <param name="assemName" vsli:raw="The name of the assembly to resolve a reference to.">解決される参照の参照先のアセンブリの名前。</param>
      <returns vsli:raw="A fully qualified path to an assembly.">アセンブリへの絶対パス。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary vsli:raw="Represents a set of options for an &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.AxImporter" /> のオプションのセットを表します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary vsli:raw="Specifies whether the generated assembly is strongly named and will be signed later.">生成されたアセンブリが、厳密な名前を持っていて後で署名されるかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary vsli:raw="Specifies whether sources for the type library wrapper should be generated.">タイプ ライブラリ ラッパーのソースを生成するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary vsli:raw="Specifies whether to use only input from the command line instead relying on a registered version.">登録されたバージョンに依存せず、コマンド ラインからの入力のみを使用するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key container for the generated assemblies.">生成されたアセンブリの厳密な名前キー コンテナーを格納しているファイルへのパスを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key for the generated assemblies.">生成されたアセンブリの厳密な名前キーを格納しているファイルへのパスを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary vsli:raw="Specifies the strong name used for the generated assemblies.">生成されたアセンブリに対して使用される厳密な名前を指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary vsli:raw="Specifies whether errors are output in the Microsoft Build Engine (MSBuild) format.">Microsoft ビルド エンジン (MSBuild) 形式でエラーを出力するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary vsli:raw="Indicates whether the ActiveX importer tool logo will be displayed when the control is imported.">コントロールのインポート時に、ActiveX インポーター ツールのロゴを表示するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary vsli:raw="Specifies the path to the directory that the generated assemblies will be created in.">生成されたアセンブリの作成先ディレクトリへのパスを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary vsli:raw="Specifies the filename to generate the ActiveX control wrapper to.">ActiveX コントロール ラッパーを生成する対象のファイル名を指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary vsli:raw="Specifies whether to overwrite existing files when generating assemblies.">アセンブリを生成するときに、既存のファイルを上書きするかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary vsli:raw="Specifies the public key used to sign the generated assemblies.">生成されたアセンブリの署名に使用する公開キーを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.IReferenceResolver&quot; /&gt; to use to resolve types and references when generating assemblies.">アセンブリの生成時に、型と参照を解決するために使用する <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> を指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary vsli:raw="Specifies whether to compile in silent mode, which generates less displayed information at compile time.">サイレント モードでコンパイルするかどうかを指定します。サイレント モードは、コンパイル時に表示される情報を限定して生成します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary vsli:raw="Specifies whether to compile in verbose mode, which generates more displayed information at compile time.">詳細モードでコンパイルするかどうかを指定します。詳細モードは、コンパイル時に表示される情報をより多く生成します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary vsli:raw="Manages a collection of user-interface related &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects. This class cannot be inherited.">ユーザー インターフェイス関連の <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクションを管理します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> を適用して、装飾ウィンドウを最新表示にします。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> を適用して、指定した <see cref="T:System.Drawing.Rectangle" /> 内で装飾ウィンドウを最新表示にします。</summary>
      <param name="rectangle" vsli:raw="The area to invalidate.">無効にする領域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> を適用して、指定した <see cref="T:System.Drawing.Region" /> 内で装飾ウィンドウを最新表示にします。</summary>
      <param name="region" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt; to invalidate.">無効化する <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary vsli:raw="Gets or sets a value indicating if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> が有効になっているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> コレクションを取得します。</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; objects that are managed by a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> によって管理される <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> オブジェクトを表します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">指定した <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="callParentBehavior" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent behavior should be called if it exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">親動作が存在すると、呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="behaviorService" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to use.">使用する <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callParentBehavior&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, and &lt;paramref name=&quot;behaviorService&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callParentBehavior" /> が <see langword="true" /> で、<paramref name="behaviorService" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Intercepts commands.">コマンドを受け取ります。</summary>
      <param name="commandId" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> オブジェクト。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt;. By default, &lt;see cref=&quot;M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.MenuCommand" />。 既定では、<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> は <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop behavior.">カスタムのドラッグ アンド ドロップ動作を許可します。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; object on which to invoke drag-and-drop behavior.">ドラッグ アンド ドロップ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクト。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-enter behavior.">カスタムの領域内へのドラッグ動作を許可します。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-enter behavior.">領域内へのドラッグ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Permits custom drag-leave behavior.">カスタムの領域外へのドラッグ動作を許可します。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-leave behavior.">領域外へのドラッグ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-over behavior.">カスタムの領域上へのドラッグ動作を許可します。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-over behavior.">領域上へのドラッグ動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop feedback behavior.">カスタムのドラッグ アンド ドロップ フィードバック動作を許可します。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">ドラッグ アンド ドロップ フィードバック動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Called by the adorner window when it loses mouse capture.">マウスのキャプチャが失われたときに装飾ウィンドウによって呼び出されます。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">ドラッグ アンド ドロップ フィードバック動作を呼び出す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any double-click message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにダブルクリック メッセージが渡されると呼び出されます。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">クリックが発生した位置。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-down message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスダウン メッセージが渡されると呼び出されます。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">クリックが発生した位置。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-enter message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスエンター メッセージが渡されると呼び出されます。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-hover message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスホバー メッセージが渡されると呼び出されます。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="mouseLoc" vsli:raw="The location at which the hover occurred.">ホバーが発生した位置。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-leave message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスリーブ メッセージが渡されると呼び出されます。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-move message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウス移動メッセージが渡されると呼び出されます。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</param>
      <param name="mouseLoc" vsli:raw="The location at which the move occurred.">移動が発生した位置。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary vsli:raw="Called when any mouse-up message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウにマウスアップ メッセージが渡されると呼び出されます。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">クリックされたボタンを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary vsli:raw="Sends this drag-and-drop event from the adorner window to the appropriate &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; or hit-tested &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">装飾ウィンドウから適切な <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> またはヒット テストされた <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> にこのドラッグ アンド ドロップ イベントが送信されます。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.QueryContinueDragEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary vsli:raw="Gets the cursor that should be displayed for this behavior.">この動作に対して表示する必要のあるカーソルを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor that should be displayed for this behavior.">この動作に対して表示する必要のあるカーソルを表す <see cref="T:System.Windows.Forms.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects should be disabled.">
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> オブジェクトを無効にする必要があるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects the designer receives should have states set to &lt;c&gt;Enabled = false&lt;/c&gt; when this &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; is active; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="T:System.ComponentModel.Design.MenuCommand" />このがアクティブな場合に、デザイナーが受け取るすべてのオブジェクトの状態を<c>Enabled</c>に設定する必要がある場合は <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events.">
        <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> イベントおよび <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dragComponents" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">現在ドラッグ中の <see cref="T:System.Collections.ICollection" /> オブジェクトの <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary vsli:raw="Gets the list of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">現在ドラッグ中の <see cref="T:System.ComponentModel.IComponent" /> オブジェクトのリストを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">現在ドラッグ中の <see cref="T:System.Collections.ICollection" /> オブジェクトの <see cref="T:System.ComponentModel.IComponent" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary vsli:raw="Represents the methods that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;. This class cannot be inherited.">
        <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> の <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> イベントおよび <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> イベントを処理するメソッドを表します。 このクラスは継承できません。</summary>
      <param name="sender" vsli:raw="The source of the event.">イベントのソース。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary vsli:raw="Manages user interface in the designer. This class cannot be inherited.">デザイナーのユーザー インターフェイスを管理します。 このクラスは継承できません。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; starts a drag-and-drop operation.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> がドラッグ アンド ドロップ操作を開始すると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; completes a drag operation.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> がドラッグ操作を完了すると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary vsli:raw="Occurs when the current selection should be refreshed.">現在の選択項目を更新する必要がある場合に発生します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary vsli:raw="Translates a &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window to screen coordinates.">装飾ウィンドウの <see cref="T:System.Drawing.Point" /> を画面座標に変換します。</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">変換する <see cref="T:System.Drawing.Point" /> 値。</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in screen coordinates.">画面座標に変換された <see cref="T:System.Drawing.Point" /> の値。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary vsli:raw="Gets the location of the adorner window in screen coordinates.">画面座標での装飾ウィンドウの位置を取得します。</summary>
      <returns vsli:raw="The location, from the upper-left corner of the adorner window, in screen coordinates.">装飾ウィンドウの左上隅からの、画面座標での位置。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> の境界 <see cref="T:System.Windows.Forms.Control" /> を返します。</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">移動する <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns vsli:raw="The bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to the adorner window coordinates.">装飾ウィンドウ座標に平行移動された <see cref="T:System.Drawing.Rectangle" /> の境界を表す <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the location of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to adorner window coordinates.">装飾ウィンドウ座標に平行移動された <see cref="T:System.Windows.Forms.Control" /> の位置を返します。</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">移動する <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value indicating the location of &lt;paramref name=&quot;c&quot; /&gt; in adorner window coordinates.">装飾ウィンドウ座標における <paramref name="c" /> の位置を示す <see cref="T:System.Drawing.Point" /> の値。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; in the behavior stack.">動作スタック内の指定された <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> の直後にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を返します。</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; preceding the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to be returned.">返す <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> の前にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after &lt;paramref name=&quot;behavior&quot; /&gt; in the behavior stack, or &lt;see langword=&quot;null&quot; /&gt; if there is no following behavior.">動作スタック内で <paramref name="behavior" /> の直後にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。次に続く動作がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary vsli:raw="Invalidates the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウを無効にします。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">装飾ウィンドウ内の、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の指定された領域を無効にします。</summary>
      <param name="rect" vsli:raw="The rectangular area to invalidate.">無効にする四角形領域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">装飾ウィンドウ内の、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の指定された領域を無効にします。</summary>
      <param name="r" vsli:raw="The region to invalidate.">無効にする領域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary vsli:raw="Converts a point in a handle's coordinate system to the adorner window coordinates.">ハンドルの座標システムの位置を装飾ウィンドウ座標に変換します。</summary>
      <param name="handle" vsli:raw="An adorner window's handle.">装飾ウィンドウのハンドル。</param>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in a handle's coordinate system.">ハンドルの座標システムの <see cref="T:System.Drawing.Point" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window coordinates.">装飾ウィンドウ座標の <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Removes and returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the stack.">スタックの先頭にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を削除し、返します。</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to remove from the stack.">スタックから削除する <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; stack is empty.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> スタックが空です。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; that was removed from the stack.">スタックから削除された <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack.">動作スタックに <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> をプッシュします。</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">プッシュする <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack and assigns mouse capture to the behavior.">動作スタックに <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> をプッシュし、動作に対してマウスのキャプチャを割り当てます。</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">プッシュする <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary vsli:raw="Translates a point in screen coordinates into the adorner window coordinates of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">画面座標の位置が <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の装飾ウィンドウ座標に変換されます。</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">変換する <see cref="T:System.Drawing.Point" /> 値。</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in adorner window coordinates.">装飾ウィンドウ座標に変換された <see cref="T:System.Drawing.Point" /> の値。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary vsli:raw="Synchronizes all selection glyphs.">すべての選択グリフを同期させます。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> を取得します。</summary>
      <returns vsli:raw="A collection of adorner.">Adorner のコレクション</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">装飾ウィンドウの <see cref="T:System.Drawing.Graphics" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">装飾ウィンドウの <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack without removing it.">動作スタックの先頭にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を削除せずに取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack.">動作スタックの先頭にある <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; objects in a strongly typed collection.">厳密に型指定されたコレクションに <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> オブジェクトを保存します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given array.">指定した配列を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to populate the collection.">コレクションに読み込む <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 型の配列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">指定した <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 参照を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="behaviorService" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 参照。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">既存の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; from which to populate the collection.">コレクションへの読み込み元の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">指定した値の <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> を <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> に追加します。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to add to the end of the collection.">コレクションの末尾に追加する <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns vsli:raw="The index at which the new element was inserted.">新しい要素が挿入された位置のインデックス。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">配列の要素を <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> の末尾にコピーします。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to copy to the end of the collection.">コレクションの末尾にコピーする <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 型の配列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to the end of the collection.">別の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> の内容をコレクションの末尾に追加します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to add to the end of the collection.">コレクションの末尾に追加する <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">指定した <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> が <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> に格納されているかどうかを示す値を取得します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">検索する <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> がコレクションに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">1 次元の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> の指定したインデックス位置に <see cref="T:System.Array" /> の値をコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> からコピーされる値のコピー先となる 1 次元 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">
        <paramref name="array" /> 内のコピー開始位置を示すインデックス。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.&#xA;&#xA;-or-&#xA;&#xA;The number of elements in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; is greater than the available space between &lt;paramref name=&quot;index&quot; /&gt; and the end of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> が多次元です。

- または -

<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> の要素の数が、<paramref name="index" /> から <paramref name="array" /> の最後までの空き領域を超えています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the lower bound of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> は、<paramref name="array" /> の下限を下回っています。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> インスタンスを反復処理できる列挙子を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> インスタンスの <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Returns the index of an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 内の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> のインデックスを返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">検索する <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;, if found; otherwise, -1.">見つかった場合は、<see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> における <paramref name="value" /> の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> を <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 内の指定されたインデックス位置に挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス番号。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to insert.">挿入する <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> から特定の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> を削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> から削除する <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not found in the collection.">
        <paramref name="value" /> がコレクション内で見つかりません。</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">要素の 0 から始まるインデックス。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; element specified by &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> で指定された <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 要素。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary vsli:raw="Supports iteration over a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> で反復処理をサポートします。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mappings" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; for which to create the enumerator.">列挙子を作成する対象の <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">列挙子を <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> の次の要素に進めます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator was past the end of the collection.">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary vsli:raw="Gets the current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 内の現在の要素を取得します。</summary>
      <returns vsli:raw="The current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 内の現在の要素。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt; property.">このメンバーの説明については、<see cref="P:System.Collections.IEnumerator.Current" /> プロパティを参照してください。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the collection.">コレクション内の現在の <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its component.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> をコンポーネントに関連付けます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を関連付けるコンポーネント。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を関連付けるコンポーネント。</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を関連付ける <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt;.">指定したポイントでのマウス クリックが <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> によって処理されるかどうかを示します。</summary>
      <param name="p" vsli:raw="A point to hit-test.">ヒット テストを行うポイント。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> が <paramref name="p" /> に関連付けられている場合は <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">描画ロジックを提供します。</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics&quot; /&gt; of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> の <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" /> を格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary vsli:raw="Gets the component that is associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; .">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> に関連付けられているコンポーネントを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.ComponentModel.IComponent" /> に関連付けられた <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its control.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> をコントロールに関連付けます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> の境界を表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">マウス ポインターが <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> の上にある場合に表示されるカーソルを表す <see cref="T:System.Windows.Forms.Cursor" />。</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を関連付けるコンポーネント。</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> を関連付ける <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> の境界を表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">マウス ポインターが <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> の上にある場合に表示されるカーソルを表す <see cref="T:System.Windows.Forms.Cursor" />。</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を関連付けるコンポーネント。</param>
      <param name="designer" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> を関連付ける <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt;.">指定したポイントでのマウス クリックが <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> によって処理されるかどうかを示します。</summary>
      <param name="p" vsli:raw="A point to hit test.">ヒット テストを行うポイント。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> が <paramref name="p" /> に関連付けられている場合は <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> の範囲を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> の範囲を表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary vsli:raw="Represents a single user interface (UI) entity managed by an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> によって管理される単一のユーザー インターフェイス (UI) エンティティを表します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;. Can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。 <see langword="null" /> の可能性があります。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Provides hit test logic.">ヒット テストのロジックを提供します。</summary>
      <param name="p" vsli:raw="A point to hit-test.">ヒット テストを行うポイント。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> が <paramref name="p" /> に関連付けられている場合は <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">描画ロジックを提供します。</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Changes the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を変更します。</summary>
      <param name="behavior" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to associate with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> に関連付ける <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> に関連付けられている <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。動作がない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> の範囲を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> の範囲を表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects in a strongly typed collection.">厳密に型指定されたコレクションに <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトを保存します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; array.">指定した <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 配列を使用して、<see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to populate the collection.">コレクションに読み込む <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 型の配列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class based on another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">別の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> に基づいて、<see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to populate the collection.">コレクションに読み込む <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">指定した値の <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> に追加します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to add to the end of the collection.">コレクションの末尾に追加する <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns vsli:raw="The index at which the new element was inserted.">新しい要素が挿入された位置のインデックス。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">配列の要素を <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> の末尾にコピーします。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to copy to the end of the collection.">コレクションの末尾にコピーする <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 型の配列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to the end of the collection.">別の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> の内容をコレクションの末尾に追加します。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to add to the end of the collection.">コレクションの末尾に追加する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">指定した <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> が <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> に格納されているかどうかを示す値を取得します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">検索する <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> がコレクションに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">1 次元の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> の指定したインデックス位置に <see cref="T:System.Array" /> の値をコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> からコピーされる値のコピー先となる 1 次元 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">
        <paramref name="array" /> 内のコピー開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Returns the index of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 内の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> のインデックスを返します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">検索する <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;, if found; otherwise, -1.">見つかった場合は、<see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> における <paramref name="value" /> の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 内の指定したインデックス位置に、<see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> を挿入します。</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス番号。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to insert.">挿入する <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> から特定の <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> を削除します。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> から削除する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">要素の 0 から始まるインデックス。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; element at the specified index.">指定したインデックス位置にある <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 要素。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary vsli:raw="Describes the designer selection state of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> のデザイナーの選択状態を表します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is not selected.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> が選択されていません。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is selected.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> が選択されています。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is the primary selection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> が主要選択になっています。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary vsli:raw="Represents the horizontal and vertical line segments that are dynamically created in the user interface (UI) to assist in the design-time layout of controls in a container. This class cannot be inherited.">コンテナー内のコントロールのデザイン時にレイアウト操作を支援するために、ユーザー インターフェイス (UI) に動的に作成される水平の線分と垂直の線分を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type and offset.">スナップ線の種類とオフセットを指定して、<see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">作成する <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 スナップ線の相対的な位置と方向を表します。</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">所有しているコントロールの左上隅の原点に対する、スナップ線のピクセル単位の位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and filter name.">スナップ線の種類、オフセット、およびフィルター名を指定して、<see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">作成する <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 スナップ線の相対的な位置と方向を表します。</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">所有しているコントロールの左上隅の原点に対する、スナップ線のピクセル単位の位置。</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">プログラマが定義したスナップ線のカテゴリを指定するために使用する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, filter name, and priority.">スナップ線の種類、オフセット、フィルター名、および優先順位を指定して、<see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">作成する <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 スナップ線の相対的な位置と方向を表します。</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">所有しているコントロールの左上隅の原点に対する、スナップ線のピクセル単位の位置。</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">プログラマが定義したスナップ線のカテゴリを指定するために使用する <see cref="T:System.String" />。</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">スナップ線の <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and priority.">スナップ線の種類、オフセット、および優先順位を指定して、<see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">作成する <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 スナップ線の相対的な位置と方向を表します。</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">所有しているコントロールの左上隅の原点に対する、スナップ線のピクセル単位の位置。</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">スナップ線の <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary vsli:raw="Adjusts the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.SnapLine.Offset&quot; /&gt; property of the snapline.">スナップ線の <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> プロパティを調整します。</summary>
      <param name="adjustment" vsli:raw="The number of pixels to change the snapline offset by.">スナップ線のオフセットを変更するためのピクセル数。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary vsli:raw="Returns a value indicating whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; should snap to another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">指定した <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> が別の <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> とスナップする必要があるかどうかを示す値を返します。</summary>
      <param name="line1" vsli:raw="The specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">指定された <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
      <param name="line2" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; to which the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; is expected to snap.">指定した <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> のスナップ対象となる <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;line1&quot; /&gt; should snap to &lt;paramref name=&quot;line2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="line1" /> を <paramref name="line2" /> にスナップする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary vsli:raw="Returns a string representation of the current snapline.">現在のスナップ線の文字列形式を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">現在の <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary vsli:raw="Gets the programmer-defined filter category associated with this snapline.">このスナップ線に関連付けられている、プログラマが定義したフィルター カテゴリを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the filter category. The default is &lt;see langword=&quot;null&quot; /&gt;.">フィルター カテゴリを定義する <see cref="T:System.String" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary vsli:raw="Gets a value indicating whether the snapline has a horizontal orientation.">スナップ線が水平方向かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is horizontal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">スナップ線が水平の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary vsli:raw="Gets a value indicating whether the snapline has a vertical orientation.">スナップ線が垂直方向かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is vertical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">スナップ線が垂直の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary vsli:raw="Gets the number of pixels that the snapline is offset from the origin of the associated control.">関連付けられたコントロールの原点からのスナップ線のオフセットをピクセル数で取得します。</summary>
      <returns vsli:raw="The offset, in pixels, of the snapline.">スナップ線のオフセット (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary vsli:raw="Gets a value indicating the relative importance of the snapline.">スナップ線の相対的な優先順位を示す値を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; that represents the priority category of a snapline.">スナップ線の優先順位カテゴリを表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary vsli:raw="Gets the type of a snapline, which indicates the general location and orientation.">大まかな位置と方向を示す、スナップ線の種類を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; that represents the orientation and general location, relative to control edges, of a snapline.">スナップ線の方向と、コントロールの端に対する大まかな相対位置を表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary vsli:raw="Specifies the relative importance of a snapline.">スナップ線の相対的な重要度を指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary vsli:raw="The priority category that is equivalent to the highest priority of all the current snaplines. Indicates that this category of snapline should always be active.">現在のすべてのスナップ線の中で最も高い優先順位に相当する優先順位カテゴリです。 このカテゴリのスナップ線は常にアクティブになることを表します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary vsli:raw="The highest priority category.">優先順位が最も高いカテゴリです。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary vsli:raw="The lowest priority category.">優先順位が最も低いカテゴリです。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary vsli:raw="The middle priority category.">優先順位が中間のカテゴリです。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary vsli:raw="Specifies the orientation and relative location of a snapline.">スナップ線の方向と相対的な位置を指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary vsli:raw="A horizontal snapline typically associated with a primary internal feature of a control; for example, the base of the text string in a &lt;see cref=&quot;T:System.Windows.Forms.Label&quot; /&gt; control.">通常、コントロールの基本的な内部機能に関連付けられた水平のスナップ線です。たとえば、<see cref="T:System.Windows.Forms.Label" /> コントロールの文字列の基本の線になります。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary vsli:raw="A horizontal snapline typically aligned to the bottom edge of a control.">通常、コントロールの下端に合わせて配置される水平のスナップ線です。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary vsli:raw="A horizontal snapline typically not associated with an edge of a control.">通常、コントロールの端に関連付けられない水平のスナップ線です。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary vsli:raw="A vertical snapline typically aligned to the left edge of a control.">通常、コントロールの左端に合わせて配置される垂直のスナップ線です。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary vsli:raw="A vertical snapline typically aligned to the right edge of a control.">通常、コントロールの右端に合わせて配置される垂直のスナップ線です。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary vsli:raw="A horizontal snapline typically aligned to the top edge of a control.">通常、コントロールの上端に合わせて配置される水平のスナップ線です。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary vsli:raw="A vertical snapline typically not associated with an edge of a control.">通常、コントロールの端に関連付けられない垂直のスナップ線です。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary vsli:raw="Provides an editor for setting the &lt;see cref=&quot;P:System.Windows.Forms.ToolStripStatusLabel.BorderSides&quot; /&gt; property.">
        <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" /> プロパティを設定するためのエディターを用意します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.BorderSidesEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot;&gt;&lt;/xref&gt;.">
        <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> によって提供されたエディター スタイルを使用して、指定したオブジェクト値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; providing information about the control or component.">コントロールまたはコンポーネントに関する情報を提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.IServiceProvider&quot;&gt;&lt;/xref&gt; providing custom support to other objects.">他のオブジェクトに対するカスタムのサポートを提供する <see cref="T:System.IServiceProvider" />。</param>
      <param name="value" vsli:raw="The object value to edit.">編集対象のオブジェクト値。</param>
      <returns vsli:raw="The edited object.">編集後のオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;code data-dev-comment-type=&quot;langword&quot;&gt;EditValue&lt;/code&gt; method.">
        <see langword="EditValue" /> メソッドの編集スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; providing information about the control or component.">コントロールまたはコンポーネントに関する情報を提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values. If the method is not supported, this method returns &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 値のいずれか 1 つ。 このメソッドがサポートされていない場合は、<see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> が返されます。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType">
      <summary vsli:raw="Designer action items that can be associated with a component.">コンポーネントに関連付けることができるデザイナー アクション項目。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All">
      <summary vsli:raw="Represents component and service type designer actions.">コンポーネントおよびサービス型のデザイナー アクションを表します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component">
      <summary vsli:raw="Represents pull-model designer actions.">プルモデル デザイナー アクションを表します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service">
      <summary vsli:raw="Represents push-model designer actions.">プッシュモデル デザイナー アクションを表します。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a root design document that supports nested components.">入れ子になったコンポーネントをサポートするルート デザイン ドキュメントのデザイン モードの動作を拡張するための基本デザイナー クラス。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the designer.">指定したツールがデザイナーでサポートされているかどうかを示す値を取得します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">ツールボックスでのサポートを確認するために使用する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">ツールがツールボックスで有効になる場合は <see langword="true" />。ドキュメント デザイナーがツールの使用方法を認識しない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">コンポーネントを指定して、デザイナーを初期化します。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">デザイナーに関連付ける <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティのセットを調整します。</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">コンポーネントのクラスのプロパティが格納されている <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">このメンバーの詳細については、「<see cref="T:System.ComponentModel.Design.ViewTechnology" />」をご覧ください。</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">特定のビュー技術を示す <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</param>
      <returns vsli:raw="An object that represents the view for this designer.">デザイナーのビューを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />」をご覧ください。</summary>
      <param name="component" vsli:raw="The component to filter the attributes of.">属性をフィルター処理する対象のコンポーネント。</param>
      <param name="attributes" vsli:raw="A dictionary of attributes that can be modified.">変更できる属性のディクショナリ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered attributes is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">フィルター処理した一連の属性をキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />」をご覧ください。</summary>
      <param name="component" vsli:raw="The component to filter events for.">イベントをフィルター処理する対象のコンポーネント。</param>
      <param name="events" vsli:raw="A dictionary of events that can be modified.">変更できるイベントのディクショナリ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered events is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">フィルター処理した一連のイベントをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />」をご覧ください。</summary>
      <param name="component" vsli:raw="The component to filter properties for.">プロパティをフィルター処理する対象のコンポーネント。</param>
      <param name="properties" vsli:raw="A dictionary of properties that can be modified.">変更できるプロパティのディクショナリ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered properties is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">フィルター処理した一連のプロパティをキャッシュに保存する場合は <see langword="true" />。フィルター サービスが再照会する必要がある場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />」をご覧ください。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">ツールボックスでサポートされているかどうかをテストする対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">ツールボックスでツールがサポートされていて有効にできる場合は <see langword="true" />。ドキュメント デザイナーでツールの使用方法が認識されない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />」をご覧ください。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">選択する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary vsli:raw="Gets the control for the designer.">デザイナーのコントロールを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; the designer is editing.">デザイナーが編集している <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />」をご覧ください。</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">サポートされている <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 値の配列。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in auto-arrange mode.">デザイナーのコンポーネント トレイが自動配置モードであるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in auto-arrange mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> デザイナーのコンポーネントトレイが自動配置モードの場合は。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in large icon mode.">デザイナーのコンポーネント トレイが大きいアイコンを使うモードかどうかを示す値を、取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in large icon mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンポーネント トレイが大きいアイコンを使うモードである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary vsli:raw="Provides behavior for the component tray of a designer.">デザイナーのコンポーネント トレイの動作を提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; class using the specified designer and service provider.">指定したデザイナーおよびサービス プロバイダーを使用して、<see cref="T:System.Windows.Forms.Design.ComponentTray" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mainDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that is the main or document designer for the current project.">現在のプロジェクトの主なデザイナーまたはドキュメント デザイナーである <see cref="T:System.ComponentModel.Design.IDesigner" />。</param>
      <param name="serviceProvider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that can be used to obtain design-time services.">デザイン時サービスを取得するために使用できる <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds a component to the tray.">コンポーネントをトレイに追加します。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add to the tray.">トレイに追加する <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool can be used to create a new component.">指定したツールを使用して新しいコンポーネントを作成できるかどうかを示す値を取得します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test.">テスト対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified tool can be used to create a component; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したツールを使用してコンポーネントを作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets a value indicating whether the specified component can be displayed.">指定したコンポーネントを表示できるかどうかを示す値を取得します。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to test.">テスト対象の <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can be displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンポーネントを表示できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component from the specified toolbox item, adds the component to the current document, and displays a representation for the component in the component tray.">指定したツールボックス項目からコンポーネントを作成し、そのコンポーネントを現在のドキュメントに追加して、コンポーネント トレイのコンポーネントを表示します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">コンポーネントの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary vsli:raw="Displays an error message to the user with information about the specified exception.">指定した例外に関する情報と共にエラー メッセージをユーザーに表示します。</summary>
      <param name="e" vsli:raw="The exception about which to display information.">情報を表示する例外。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Windows.Forms.Design.ComponentTray" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the location of the specified component, relative to the upper-left corner of the component tray.">コンポーネント トレイの左上隅に対して相対的に、指定したコンポーネントの位置を取得します。</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to retrieve the location of.">位置を取得する対象の <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the coordinates of the specified component, or an empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; if the specified component could not be found in the component tray. An empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; has an &lt;see cref=&quot;P:System.Drawing.Point.IsEmpty&quot; /&gt; property equal to &lt;see langword=&quot;true&quot; /&gt; and typically has &lt;see cref=&quot;P:System.Drawing.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Point.Y&quot; /&gt; properties that are each equal to zero.">指定したコンポーネントの座標を示す <see cref="T:System.Drawing.Point" />。または、指定したコンポーネントがコンポーネント トレイで見つからない場合は空の <see cref="T:System.Drawing.Point" />。 空の <see cref="T:System.Drawing.Point" /> の <see cref="P:System.Drawing.Point.IsEmpty" /> プロパティは <see langword="true" /> に等しく、通常、<see cref="P:System.Drawing.Point.X" /> プロパティおよび <see cref="P:System.Drawing.Point.Y" /> プロパティはそれぞれ 0 です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Similar to &lt;see cref=&quot;M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)&quot; /&gt;, this method returns the next component in the tray, given a starting component.">このメソッドは、<see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" /> と同じように、起点のコンポーネントを指定するとトレイ内でその次にあるコンポーネントを返します。</summary>
      <param name="component" vsli:raw="The component from which to start enumerating.">列挙を開始するコンポーネント。</param>
      <param name="forward" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enumerate forward through the list; otherwise, &lt;see langword=&quot;false&quot; /&gt; to enumerate backward.">リストの順方向に列挙する場合は <see langword="true" />。逆方向に列挙する場合は <see langword="false" />。</param>
      <returns vsli:raw="The next component in the component tray, or &lt;see langword=&quot;null&quot; /&gt;, if the end of the list is encountered (or the beginning, if &lt;paramref name=&quot;forward&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">コンポーネント トレイ内の次のコンポーネント。リストの最後 (<paramref name="forward" /> が <see langword="null" /> の場合は最初) に到達した場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service type.">要求したサービスの型を取得します。</summary>
      <param name="serviceType" vsli:raw="The type of the service to retrieve.">取得するサービスの型。</param>
      <returns vsli:raw="An instance of the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service could not be found.">要求したサービスのインスタンス。サービスが見つからない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">
        <see langword="Location" /> エクステンダー プロパティの値を取得します。</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">位置エクステンダー プロパティを受け取る <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">
        <paramref name="receiver" /> の位置を表す <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Tests a component for presence in the component tray.">コンポーネント トレイにコンポーネントが存在するかどうかをテストします。</summary>
      <param name="comp" vsli:raw="The component to test for presence in the component tray.">コンポーネント トレイ内に存在するかどうかをテストするコンポーネント。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;comp&quot; /&gt; is being shown on the tray; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="comp" /> がトレイに表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object that has been dragged is dropped on the component tray.">オブジェクトをドラッグして、コンポーネント トレイにドロップすると呼び出されます。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over, and has entered the area over, the component tray.">オブジェクトをコンポーネント トレイ上にドラッグし、コンポーネント トレイ上の領域に入れると呼び出されます。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when an object is dragged out of the area over the component tray.">オブジェクトをコンポーネント トレイ上の領域からドラッグすると呼び出されます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over the component tray.">コンポーネント トレイ上にオブジェクトをドラッグすると呼び出されます。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Called during an OLE drag and drop operation to provide an opportunity for the component tray to give feedback to the user about the results of dropping the object at a specific point.">OLE ドラッグ アンド ドロップ操作中に呼び出されて、オブジェクトを特定の位置にドロップした結果について、コンポーネント トレイからユーザーにフィードバックを返せるようにします。</summary>
      <param name="gfevent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.Layout" /> イベントを発生させます。</summary>
      <param name="levent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">イベント データを格納している <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary vsli:raw="Called when a mouse drag selection operation is canceled.">マウス ドラッグによる選択操作がキャンセルされると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse is double clicked over the component tray.">コンポーネント トレイ上でマウスをダブルクリックすると呼び出されます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button is pressed.">マウス ボタンが押されると呼び出されます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse cursor position has changed.">マウス カーソルの位置を変更すると呼び出されます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button has been released.">マウス ボタンを離すと呼び出されます。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the view for the component tray should be refreshed.">コンポーネント トレイのビューを再表示する必要があるときに呼び出されます。</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary vsli:raw="Called to set the mouse cursor.">マウス カーソルを設定するために呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes the specified component from the tray.">指定したコンポーネントをトレイから削除します。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove from the tray.">トレイから削除する <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the location of the specified component to the specified location.">指定したコンポーネントの位置を、指定した位置に設定します。</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to set the location of.">位置を設定する対象の <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the new location for the specified component.">指定したコンポーネントの新しい位置を示す <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">
        <see langword="Location" /> エクステンダー プロパティの値を設定します。</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">位置エクステンダー プロパティを受け取る <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">
        <paramref name="receiver" /> の位置を表す <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />」をご覧ください。</summary>
      <param name="extendee" vsli:raw="The object to receive the extender properties.">エクステンダー プロパティを受け取るオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object can provide extender properties to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが、指定したオブジェクトに対してエクステンダー プロパティを提供できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Windows メッセージを処理します。</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the tray items are automatically aligned.">トレイの項目を自動的に配置するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tray items are automatically arranged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">トレイの項目を自動的に配置する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary vsli:raw="Gets the number of components contained in the tray.">トレイに格納されているコンポーネントの数を取得します。</summary>
      <returns vsli:raw="The number of components in the tray.">トレイ内のコンポーネントの数。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary vsli:raw="Gets or sets a value indicating whether the tray displays a large icon to represent each component in the tray.">トレイが、大きいアイコン表示でトレイ内の各コンポーネントを表すかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if large icons are displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">大きいアイコンで表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Control" /> のデザイン モードの動作を拡張します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary vsli:raw="Specifies the accessibility object for the designer.">デザイナーのアクセシビリティ オブジェクトを指定します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary vsli:raw="Defines a local &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that represents the values of an invalid &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;.">無効な <see cref="T:System.Drawing.Point" /> の値を表すローカルの <see cref="T:System.Drawing.Point" /> を定義します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Windows メッセージを処理します。</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary vsli:raw="Indicates if this designer's control can be parented by the control of the specified designer.">このデザイナーのコントロールが、指定したデザイナーのコントロールを親として持つことができるかどうかを示します。</summary>
      <param name="parentDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that manages the control to check.">チェック対象のコントロールを管理する <see cref="T:System.ComponentModel.Design.IDesigner" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can parent the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したデザイナーで管理されるコントロールがこのデザイナーで管理されるコントロールの親になることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Provides default processing for Windows messages.">Windows メッセージの既定の処理を提供します。</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary vsli:raw="Displays information about the specified exception to the user.">指定した例外に関する情報をユーザーに表示します。</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; to display.">表示する <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary vsli:raw="Enables design time functionality for a child control.">子コントロールに対するデザイン時の機能を有効にします。</summary>
      <param name="child" vsli:raw="The child control for which design mode will be enabled.">デザイン モードを有効にする子コントロール。</param>
      <param name="name" vsli:raw="The name of &lt;paramref name=&quot;child&quot; /&gt; as exposed to the end user.">エンド ユーザーに公開する <paramref name="child" /> の名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;child&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="child" /> または <paramref name="name" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the child control could be enabled for design time; &lt;see langword=&quot;false&quot; /&gt; if the hosting infrastructure does not support it.">デザイン時に子コントロールを有効にできる場合は <see langword="true" /> です。ホストのインフラストラクチャがサポートしていない場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary vsli:raw="Enables or disables drag-and-drop support for the control being designed.">デザイン中のコントロールに対して、ドラッグ アンド ドロップのサポートを有効または無効にします。</summary>
      <param name="value" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable drag-and-drop support for the control; &lt;see langword=&quot;false&quot; /&gt; if the control should not have drag-and-drop support. The default is &lt;see langword=&quot;false&quot; /&gt;.">コントロールのドラッグ アンド ドロップのサポートを有効にする場合は <see langword="true" />。コントロールのドラッグ アンド ドロップのサポートを行わない場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">このコントロールのバインドを表す <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> を返します。</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">選択の状態を指定する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 値。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">このコントロールのバインドを表す <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">標準コントロールの選択境界線とグラブ ハンドルを表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクションを取得します。</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">選択の状態を指定する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 値。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">指定した点でのマウス クリックがコントロールによって処理されるかどうかを示します。</summary>
      <param name="point" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">マウスがクリックされた位置を画面座標で示す <see cref="T:System.Drawing.Point" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した点でのクリックがコントロールによって処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages from the child controls of the specified control to the designer.">指定したコントロールの子コントロールからのメッセージをデザイナーにルーティングします。</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">処理対象の最初の子 <see cref="T:System.Windows.Forms.Control" />。 このメソッドは、コントロールの子に対して再帰的に自分自身を呼び出す場合があります。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">コンポーネントを指定して、デザイナーを初期化します。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the designer with. This component must always be an instance of, or derive from, &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">デザイナーを関連付ける対象の <see cref="T:System.ComponentModel.IComponent" />。 このコンポーネントは、常に、<see cref="T:System.Windows.Forms.Control" /> のインスタンスであるか、そこから派生している必要があります。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Re-initializes an existing component.">既存のコンポーネントを再初期化します。</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">プロパティに適用する既定値の名前/値のディクショナリ。 既定値が指定されていない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">新たに作成されたコンポーネントを初期化します。</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">プロパティに適用する既定値の名前/値のディクショナリ。 既定値が指定されていない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary vsli:raw="Returns the internal control designer with the specified index in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> の指定されたインデックス位置の内部コントロール デザイナーを返します。</summary>
      <param name="internalControlIndex" vsli:raw="A specified index to select the internal control designer. This index is zero-based.">内部コントロール デザイナーを選択するために指定するインデックス。 このインデックスは 0 から始まります。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; at the specified index.">指定したインデックスにある <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary vsli:raw="Returns the number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 内の内部コントロール デザイナーの数を返します。</summary>
      <returns vsli:raw="The number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 内の内部コントロール デザイナーの数です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.">コンテキスト メニューを表示し、コンテキスト メニューが表示される直前に追加処理を実行する機会を提供します。</summary>
      <param name="x" vsli:raw="The x coordinate at which to display the context menu.">コンテキスト メニューを表示する位置の x 座標。</param>
      <param name="y" vsli:raw="The y coordinate at which to display the context menu.">コンテキスト メニューを表示する位置の y 座標。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary vsli:raw="Provides an opportunity to perform additional processing immediately after the control handle has been created.">制御ハンドルが作成された直後に、追加処理を実行する機会を提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call to clean up a drag-and-drop operation.">ドラッグ アンド ドロップ操作をクリーンアップするための呼び出しを受信します。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dropped onto the control designer view.">ドラッグ アンド ドロップ オブジェクトがコントロールのデザイナー ビューにドロップされると呼び出しを受信します。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation enters the control designer view.">ドラッグ アンド ドロップ操作がコントロールのデザイナー ビューに入ると呼び出しを受信します。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation leaves the control designer view.">ドラッグ アンド ドロップ操作がコントロールのデザイナー ビューを離れると呼び出しを受信します。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dragged over the control designer view.">ドラッグ アンド ドロップ オブジェクトがコントロールのデザイナー ビュー上にドラッグされると呼び出しを受信します。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.">ドラッグ アンド ドロップの操作中に呼び出しを受信し、ドラッグ操作のマウスの位置に基づいてビジュアル キューを提供します。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call in response to the left mouse button being pressed and held while over the component.">コンポーネント上でマウスの左ボタンをしばらく押したままにすると応答して呼び出しを受信します。</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">マウスの位置の x 座標 (画面座標)。</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">マウスの位置の y 座標 (画面座標)。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.">ドラッグ アンド ドロップ操作の終了時に呼び出しを受信し、操作を完了またはキャンセルします。</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag; &lt;see langword=&quot;false&quot; /&gt; to commit it.">ドラッグをキャンセルする場合は <see langword="true" />。ドラッグをコミットする場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call for each movement of the mouse during a drag-and-drop operation.">ドラッグ アンド ドロップ操作中にマウスが移動するたびに呼び出しを受信します。</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">マウスの位置の x 座標 (画面座標)。</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">マウスの位置の y 座標 (画面座標)。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">マウスが最初にコントロールに入ると呼び出しを受信します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary vsli:raw="Receives a call after the mouse hovers over the control.">マウスがコントロールの上にあるときに呼び出しを受信します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">マウスが最初にコントロールに入ると呼び出しを受信します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">デザイナーが管理しているコントロールが表面を描画したときに呼び出しを受信し、デザイナーがコントロールの一番上に追加の表示要素を描画できるようにします。</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; the designer can use to draw on the control.">デザイナーがコントロールに描画するために使用できる <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Called when the designer is initialized.">デザイナーが初期化されるときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary vsli:raw="Receives a call each time the cursor needs to be set.">カーソルを設定する必要があるたびに呼び出しを受信します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティのセットを調整します。</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; containing the properties for the class of the component.">コンポーネントのクラスのプロパティが格納されている <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages for the children of the specified control to each control rather than to a parent designer.">指定したコントロールの子に対するメッセージを親デザイナーではなく各コントロールにルーティングします。</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">処理対象の最初の子 <see cref="T:System.Windows.Forms.Control" />。 このメソッドは、コントロールの子に対して再帰的に自分自身を呼び出す場合があります。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and optionally routes them to the control.">Windows メッセージを処理し、必要に応じてコントロールにルーティングします。</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">コントロールに割り当てられた <see cref="T:System.Windows.Forms.AccessibleObject" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">コントロールに割り当てられた <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">デザイナーで管理されているコンポーネントに関連付けられているコンポーネントのコレクションを取得します。</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">デザイナーで管理されているコンポーネントに関連付けられているコンポーネント。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary vsli:raw="Gets or sets a value indicating whether resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; property.">
        <see cref="P:System.Windows.Forms.Control.AutoSize" /> プロパティの値に基づいてサイズ変更ハンドルを割り当てるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; and &lt;see langword=&quot;AutoSizeMode&quot; /&gt; properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Windows.Forms.Control.AutoSize" /> プロパティと <see langword="true" /> プロパティの値に基づいてサイズ変更ハンドルを割り当てる場合は <see langword="AutoSizeMode" />。それ以外の場合は <see langword="false" /> です。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; from the design environment.">デザイン環境から <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service is unavailable.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> です。サービスを利用できない場合は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary vsli:raw="Gets the control that the designer is designing.">デザイナーがデザインするコントロールを取得します。</summary>
      <returns vsli:raw="The control that the designer is designing.">デザイナーがデザインするコントロール。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles can be drawn on this designer component.">ドラッグ四角形をこのデザイナー コンポーネントに描画できるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles can be drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ドラッグ四角形を描画できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the designer.">デザイナーの <see cref="T:System.ComponentModel.InheritanceAttribute" /> を取得します。</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.ComponentModel.InheritanceAttribute.Inherited&quot; /&gt; if the designer is a root designer; otherwise, the value of the parent designer's &lt;see cref=&quot;P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute&quot; /&gt; property.">デザイナーがルート デザイナーの場合は <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> です。それ以外の場合は親デザイナーの <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> プロパティの値です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> の親コンポーネントを取得します。</summary>
      <returns vsli:raw="The parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if there is no parent component.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> の親コンポーネントです。親コンポーネントがない場合は <see langword="null" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation.">ドラッグ操作中に <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> でスナップ線を配置できるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">プライマリ ドラッグ コントロールが <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> の上にあるときに、このデザイナーでドラッグ操作中にスナップ線を配置できる場合は <see langword="true" /> です。それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary vsli:raw="Gets the selection rules that indicate the movement capabilities of a component.">コンポーネントの移動機能を示す選択規則を取得します。</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 値のビットごとの組み合わせ。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">このコントロールの有効な配置ポイントを表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> オブジェクトの一覧を取得します。</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">このコントロールの有効な配置ポイントを表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> オブジェクトの一覧。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; for &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> の <see cref="T:System.Windows.Forms.AccessibleObject" /> を提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject&quot; /&gt; class using the specified designer and control.">デザイナーとコントロールを指定して、<see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="designer" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; for the accessible object.">アクセスできるオブジェクトの <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</param>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the accessible object.">アクセスできるオブジェクトの <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary vsli:raw="Retrieves the accessible child corresponding to the specified index.">指定されたインデックスに対応するアクセス可能な子を取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the accessible child.">アクセス可能な子の 0 から始まるインデックス。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the accessible child corresponding to the specified index.">指定したインデックスに対応する子ユーザー補助オブジェクトを表す <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary vsli:raw="Retrieves the number of children belonging to an accessible object.">ユーザー補助オブジェクトに属する子の数を取得します。</summary>
      <returns vsli:raw="The number of children belonging to an accessible object.">ユーザー補助オブジェクトに属する子の数。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary vsli:raw="Retrieves the object that has the keyboard focus.">キーボード フォーカスを持つオブジェクトを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns &lt;see langword=&quot;null&quot; /&gt; if no object has focus.">現在フォーカスを取得している子を示す <see cref="T:System.Windows.Forms.AccessibleObject" />。 オブジェクト自体がフォーカスを取得している場合は、呼び出し元のオブジェクトを返します。 どのオブジェクトにもフォーカスがない場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary vsli:raw="Retrieves the currently selected child.">現在選択されている子を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns &lt;see langword=&quot;null&quot; /&gt; if is no child is currently selected and the object itself does not have focus.">現在選択されている子を表す <see cref="T:System.Windows.Forms.AccessibleObject" />。 オブジェクト自体が選択されている場合は、呼び出し元のオブジェクトを返します。 現在選択されている子がなく、オブジェクト自体がフォーカスを受け取っていない場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary vsli:raw="Retrieves the child object at the specified screen coordinates.">指定した画面座標にある子オブジェクトを取得します。</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate.">水平画面座標。</param>
      <param name="y" vsli:raw="The vertical screen coordinate.">垂直画面座標。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns &lt;see langword=&quot;null&quot; /&gt; if no object is at the tested location.">指定した画面座標にある子オブジェクトを表す <see cref="T:System.Windows.Forms.AccessibleObject" />。 オブジェクト自体が指定した位置にある場合は、呼び出し元のオブジェクトを返します。 テスト位置にオブジェクトがない場合は、<see langword="null" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary vsli:raw="Gets the points that define the boundaries of the accessible object for the designer.">デザイナーのユーザー補助オブジェクトの境界を定義するポイントを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that indicates the boundaries of the accessible object for the designer.">デザイナーのユーザー補助オブジェクトの境界を示す <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary vsli:raw="Gets a string that describes the default action of the specified object.">指定したオブジェクトの既定のアクションを説明する文字列を取得します。</summary>
      <returns vsli:raw="A description of the default action for a specified object.">指定したオブジェクトの既定のアクションの説明。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary vsli:raw="Gets a string that describes the visual appearance of the specified object.">指定したオブジェクトの外観を説明する文字列を取得します。</summary>
      <returns vsli:raw="A description of the object's visual appearance to the user, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a description.">ユーザーから見たオブジェクトの外観の説明。説明がない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary vsli:raw="Gets or sets the object name.">オブジェクト名を取得または設定します。</summary>
      <returns vsli:raw="The object name, or &lt;see langword=&quot;null&quot; /&gt; if the property has not been set.">オブジェクト名。設定されていない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary vsli:raw="Gets the parent of an accessible object.">ユーザー補助オブジェクトの親を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the parent of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent object.">ユーザー補助オブジェクトの親を表す <see cref="T:System.Windows.Forms.AccessibleObject" />、または親オブジェクトが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary vsli:raw="Gets the role of this accessible object.">ユーザー補助オブジェクトのロールを取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleRole&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleRole.None&quot; /&gt; if no role has been specified.">
        <see cref="T:System.Windows.Forms.AccessibleRole" /> 値の 1 つ。役割が指定されていない場合は <see cref="F:System.Windows.Forms.AccessibleRole.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary vsli:raw="Gets the state of this accessible object.">ユーザー補助オブジェクトの状態を取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleStates&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleStates.None&quot; /&gt;, if no state has been set.">
        <see cref="T:System.Windows.Forms.AccessibleStates" /> 値の 1 つ。状態が設定されていない場合は <see cref="F:System.Windows.Forms.AccessibleStates.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary vsli:raw="Gets or sets the value of an accessible object.">ユーザー補助オブジェクトの値を取得または設定します。</summary>
      <returns vsli:raw="The value of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if the object has no value set.">ユーザー補助オブジェクトの値 (オブジェクトに設定された値がない場合は <see langword="null" />)。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary vsli:raw="Provides access to get and set option values for a designer.">デザイナーのオプション値の取得と設定へのアクセスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary vsli:raw="Gets or sets a value that enables or disables in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls.">
        <see cref="T:System.Windows.Forms.ToolStrip" /> コントロールのインプレース編集を有効または無効にする値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.ToolStrip" /> コントロールのインプレース編集が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">グリッド単位の大きさを表す <see cref="T:System.Drawing.Size" /> を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">グリッド単位の大きさを表す <see cref="T:System.Drawing.Size" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary vsli:raw="Gets or sets a value that specifies whether a designer shows a component's smart tag panel automatically on creation.">作成時にコンポーネントのスマート タグ パネルをデザイナーに自動的に表示するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow a component's smart tag panel to open automatically upon creation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">作成時にコンポーネントのスマート タグ パネルが自動的に開く場合は <see langword="true" /> です。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables the grid in the designer.">デザイナーのグリッドを有効または無効にする値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the grid is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">グリッドが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables whether controls are automatically placed at grid coordinates.">グリッド座標にコントロールを自動的に配置する機能を有効または無効にする値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">スナップが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary vsli:raw="Gets or sets a value that enables or disables the component cache.">コンポーネント キャッシュを有効または無効にする値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component cache is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">コンポーネント キャッシュが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary vsli:raw="Gets or sets a value that enables or disables smart tags in the designer.">デザイナーのスマート タグを有効または無効にする値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if smart tags in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">デザイナーのスマート タグが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary vsli:raw="Gets or sets a value that enables or disables snaplines in the designer.">デザイナーのスナップ線を有効/無効にする値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snaplines in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">デザイナーのスナップ線が有効な場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary vsli:raw="Provides a user interface for specifying a &lt;see cref=&quot;P:System.Windows.Forms.Control.Dock&quot; /&gt; property.">
        <see cref="P:System.Windows.Forms.Control.Dock" /> プロパティを指定するためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DockEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.DockEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.">GetEditorStyle によって提供された編集スタイルを使用して、指定したオブジェクト値を編集します。 必要な任意の編集サービスを取得できるように、サービス プロバイダーが提供されます。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">編集サービスを取得するために使用するサービス プロバイダー オブジェクト。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">編集する値のインスタンス。</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合、このメソッドは、渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the EditValue method. If the method is not supported, this will return None.">EditValue メソッドの編集スタイルを取得します。 このメソッドがサポートされていない場合は、None が返されます。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="An enum value indicating the provided editing style.">提供されている編集スタイルを示す列挙値。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of, and providing a root-level design mode view for, a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls and should receive scroll messages.">入れ子になったコントロールをサポートし、スクロール メッセージを受け取る <see cref="T:System.Windows.Forms.Control" /> に対して、デザイン モード動作を拡張し、ルートレベルのデザイン モード ビューを提供するための基本デザイナー クラス。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>メニュー エディター サービスが存在するかどうかを確認し、まだ存在しない場合は作成します。</summary>
      <param name="c">確認対象の <see cref="T:System.ComponentModel.IComponent" /> にコンテキスト メニュー サービスがあります。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; representing the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> オブジェクトを表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> を取得します。</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">選択の状態を指定する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 値。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the specified tool is supported by the designer.">指定したツールがデザイナーでサポートされているかどうかを示します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">ツールボックスでのサポートを確認するために使用する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">ツールがツールボックスで有効になる場合は <see langword="true" />。ドキュメント デザイナーがツールの使用方法を認識しない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">コンポーネントを指定して、デザイナーを初期化します。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">デザイナーに関連付ける <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Called when the context menu should be displayed.">コンテキスト メニューを表示する必要があるときに呼び出されます。</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate to display the context menu at.">コンテキスト メニューを表示する位置の水平画面座標。</param>
      <param name="y" vsli:raw="The vertical screen coordinate to display the context menu at.">コンテキスト メニューを表示する位置の垂直画面座標。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary vsli:raw="Called immediately after the handle for the designer has been created.">デザイナーのハンドルが作成された直後に呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティのセットを調整します。</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">コンポーネントのクラスのプロパティが格納されている <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">このメンバーの詳細については、「<see cref="T:System.ComponentModel.Design.ViewTechnology" />」をご覧ください。</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">特定のビュー技術を示す <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</param>
      <returns vsli:raw="An object that represents the view for this designer.">デザイナーのビューを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />」をご覧ください。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">ツールボックスでサポートされているかどうかをテストする対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">ツールボックスでツールがサポートされていて有効にできる場合は <see langword="true" />。ドキュメント デザイナーでツールの使用方法が認識されない場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">このメンバーの詳細については、「<see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />」をご覧ください。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">選択する <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">指定したツールを選択します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component for.">コンポーネントを作成する対象の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Windows メッセージを処理します。</summary>
      <param name="m">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; for the designer.">デザイナーの <see cref="T:System.Windows.Forms.Design.SelectionRules" /> を取得します。</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 値のビットごとの組み合わせ。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">このメンバーの詳細については、「<see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />」をご覧ください。</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">サポートされている <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 値の配列。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary vsli:raw="Provides a systematic way to manage event handlers for the current document.">現在のドキュメントのイベント ハンドラーを系統的に管理する手段を提供します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary vsli:raw="Fires an OnEventHandlerChanged event.">OnEventHandlerChanged イベントを発生させます。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.EventHandlerService&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="focusWnd" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which is being designed.">デザイン中の <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary vsli:raw="Gets the currently active event handler of the specified type.">指定された種類の、現在アクティブなイベント ハンドラーを取得します。</summary>
      <param name="handlerType" vsli:raw="The type of the handler to get.">取得するハンドラーの種類。</param>
      <returns vsli:raw="An instance of the handler, or &lt;see langword=&quot;null&quot; /&gt; if there is no handler of the requested type.">ハンドラーのインスタンス。要求された種類のハンドラーがない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary vsli:raw="Pops the given handler off of the stack.">指定されたハンドラーをスタックから削除します。</summary>
      <param name="handler" vsli:raw="The handler to remove from the stack.">スタックから削除するハンドラー。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary vsli:raw="Pushes a new event handler on the stack.">スタックに新しいイベント ハンドラーをプッシュします。</summary>
      <param name="handler" vsli:raw="The handler to add to the stack.">スタックに追加するハンドラー。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary vsli:raw="Gets the control to which event handlers are attached.">イベント ハンドラーがアタッチされるコントロールを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which was attached through the constructor.">コンストラクターによってアタッチされた <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary vsli:raw="Provides a user interface for selecting a file name.">ファイル名を選択するためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FileNameEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.FileNameEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object using the editor style provided by the &lt;see cref=&quot;M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> メソッドによって提供されるエディター スタイルを使用して、指定したオブジェクトを編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">編集サービスを取得するために使用するサービス プロバイダー オブジェクト。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">編集する値のインスタンス。</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">オブジェクトの新しい値。 オブジェクトの値が変更されていない場合、このメソッドは、渡されたオブジェクトと同じオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> メソッドで使用する編集スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the provided editing style.">提供されている編集スタイルを示す <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 値の 1 つ。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary vsli:raw="Initializes the open file dialog when it is created.">ファイルを開くためのダイアログ ボックスを作成するときにそのダイアログ ボックスを初期化します。</summary>
      <param name="openFileDialog" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.OpenFileDialog&quot; /&gt; to use to select a file name.">ファイル名の選択に使用する <see cref="T:System.Windows.Forms.OpenFileDialog" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary vsli:raw="Provides a user interface for choosing a folder from the file system.">ファイル システムからフォルダーを選択するためのユーザー インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object using the editor style provided by &lt;see cref=&quot;M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt;.">
        <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> によって提供されたエディター スタイルを使用して、指定したオブジェクトを編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="A service object provider.">サービス オブジェクト プロバイダー。</param>
      <param name="value" vsli:raw="The value to set.">設定する値。</param>
      <returns vsli:raw="The new value of the object, or the old value if the object couldn't be updated.">オブジェクトの新しい値。オブジェクトを更新できなかった場合は、古い値。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> メソッドで使用する編集スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; enumeration value indicating the provided editing style.">提供されている編集スタイルを示す <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 列挙値。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary vsli:raw="Initializes the folder browser dialog.">フォルダー参照ダイアログを初期化します。</summary>
      <param name="folderBrowser" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; to choose a folder.">フォルダーを選択する <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary vsli:raw="Represents a dialog box that allows the user to choose a folder. This class cannot be inherited.">ユーザーがフォルダーを選択するのに使用するダイアログ ボックスを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary vsli:raw="Shows the folder browser dialog.">フォルダー参照ダイアログを表示します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; from the form.">フォームの <see cref="T:System.Windows.Forms.DialogResult" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary vsli:raw="Shows the folder browser dialog with the specified owner.">指定したオーナーを使用してフォルダー参照ダイアログを表示します。</summary>
      <param name="owner" vsli:raw="Top-level window that will own the modal dialog (e.g.: System.Windows.Forms.Form).">モーダル ダイアログを持つトップレベル ウィンドウ (例 : System.Windows.Forms.Form)。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; from the form.">フォームの <see cref="T:System.Windows.Forms.DialogResult" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary vsli:raw="Gets or sets a description to show above the folders.">フォルダーの上部に表示する説明を取得または設定します。</summary>
      <returns vsli:raw="The description to show above the folders.">フォルダーの上部に表示する説明。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary vsli:raw="Gets the directory path to the object the user picked.">ユーザーが選択したオブジェクトのディレクトリ パスを取得します。</summary>
      <returns vsli:raw="The directory path to the object the user picked.">ユーザーが選択したオブジェクトのディレクトリ パス。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary vsli:raw="Gets or sets the start location of the root node.">ルート ノードの開始位置を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder&quot; /&gt; that indicates the location for the folder browser to initially browse to.">フォルダー参照で最初に表示する場所を示す <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary vsli:raw="The styles the folder browser will use when browsing folders. This should be a combination of flags from the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles&quot; /&gt; enumeration.">フォルダー参照でフォルダーを表示する際に使用するスタイル。 これは、<see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> 列挙体からのフラグの組み合わせである必要があります。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles&quot; /&gt; enumeration member that indicates behavior for the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; to use.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> で使用される動作を示す <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 列挙体のメンバー。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary vsli:raw="Defines identifiers used to indicate the root folder for a folder browser to initially browse to.">フォルダー参照の開始位置となるルート フォルダーを示す識別子を定義します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary vsli:raw="The user's desktop.">ユーザーのデスクトップ。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary vsli:raw="The user's favorites list.">ユーザーのお気に入りの一覧。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary vsli:raw="The contents of the My Computer icon.">マイ コンピューターの内容。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary vsli:raw="The user's My Documents folder.">ユーザーのマイ ドキュメント フォルダー。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary vsli:raw="User's location to store pictures.">ユーザーが画像を保存する場所。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary vsli:raw="Network and dial-up connections.">ネットワークとダイヤルアップ接続。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary vsli:raw="The network neighborhood.">ネットワーク コンピューター。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary vsli:raw="A folder containing installed printers.">インストールされたプリンターが格納されているフォルダー。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary vsli:raw="A folder containing shortcuts to recently opened files.">最近使ったファイルへのショートカットが格納されているフォルダー。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary vsli:raw="A folder containing shortcuts to applications to send documents to.">ドキュメントを送るアプリケーションへのショートカットが格納されているフォルダー。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary vsli:raw="The user's start menu.">ユーザーの [スタート] メニュー。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary vsli:raw="The user's file templates.">ユーザーのテンプレート。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary vsli:raw="Defines identifiers used to specify behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> の動作を指定する識別子を定義します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary vsli:raw="The folder browser can only return computers. If the user selects anything other than a computer, the OK button is grayed.">フォルダー参照では、コンピューターだけを選択できます。 ユーザーがコンピューター以外を選択した場合、**[OK]** ボタンは淡色表示になります。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary vsli:raw="The folder browser can return any object that it can return.">フォルダー参照では、任意のオブジェクトを選択できます。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary vsli:raw="The folder browser can only return printers. If the user selects anything other than a printer, the OK button is grayed.">フォルダー参照では、プリンターだけを選択できます。 ユーザーがプリンター以外を選択した場合、**[OK]** ボタンは淡色表示になります。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary vsli:raw="The folder browser will not include network folders below the domain level in the dialog box's tree view control, or allow navigation to network locations outside of the domain.">フォルダー参照では、ダイアログ ボックスのツリー ビュー コントロールにドメイン レベル以下のネットワーク フォルダーが含まれず、ドメインの外にあるネットワークの場所へ移動できません。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary vsli:raw="The folder browser will only return local file system directories. If the user selects folders that are not part of the local file system, the OK button is grayed.">フォルダー参照では、ローカル ファイル システムのディレクトリだけを選択できます。 ユーザーがローカル ファイル システムの一部ではないフォルダーを選択した場合、**[OK]** ボタンは淡色表示になります。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary vsli:raw="The folder browser will only return objects of the local file system that are within the root folder or a subfolder of the root folder. If the user selects a subfolder of the root folder that is not part of the local file system, the OK button is grayed.">フォルダー参照では、ルート フォルダーまたはルート フォルダーのサブフォルダーに含まれる、ローカル ファイル システムのオブジェクトだけを選択できます。 ユーザーがローカル ファイル システムの一部ではないルート フォルダーのサブフォルダーを選択した場合、**[OK]** ボタンは淡色表示になります。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary vsli:raw="The folder browser includes a &lt;see cref=&quot;T:System.Windows.Forms.TextBox&quot; /&gt; control in the browse dialog box that allows the user to type the name of an item.">フォルダー参照には、ユーザーが項目名を入力できる参照ダイアログ ボックスに <see cref="T:System.Windows.Forms.TextBox" /> コントロールが含まれます。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary vsli:raw="Defines a method for getting information about how the scrollbars of windows need to be themed when displayed in the Visual Studio designer.">Visual Studio デザイナーで表示するときに取得するウィンドウのスクロール バーがどのように構成される必要があるかという情報を取得するメソッドを定義します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary vsli:raw="Gets an enumeration of &lt;see cref=&quot;T:System.Windows.Forms.Design.ThemedScrollbarWindow&quot; /&gt; objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">Visual Studio デザイナーで表示される際、ウィンドウとどのようにスクロール バーが構成される必要があるかを示す <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> オブジェクトの列挙体を取得します。</summary>
      <returns vsli:raw="An enumeration of objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">Visual Studio デザイナーで表示される際、ウィンドウとどのようにスクロール バーにテーマが設定される必要があるかを示す列挙型オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary vsli:raw="Serializes string dictionaries.">文字列ディクショナリをシリアル化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListCodeDomSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized Code Document Object Model (CodeDOM) object into an object.">指定したシリアル化された CodeDOM (Code Document Object Model) オブジェクトを逆シリアル化してオブジェクトに戻します。</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">逆シリアル化処理中に使用されるシリアル化マネージャー インターフェイス。</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">逆シリアル化の対象となる、シリアル化された CodeDOM オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> または <paramref name="codeObject" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="The deserialized CodeDOM object.">逆シリアル化された CodeDOM オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a Code Document Object Model (CodeDOM) object.">指定されたオブジェクトを CodeDOM (Code Document Object Model) オブジェクトにシリアル化します。</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">シリアル化時に使用するシリアル化マネージャー。</param>
      <param name="value" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">シリアル化されたオブジェクトを表す CodeDOM オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary vsli:raw="Provides an editor that can perform default file searching for bitmap (.bmp) files.">ビットマップ (.bmp) ファイルに対して既定のファイル検索を実行するエディターを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListImageEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> メソッドによって提供される編集スタイルを使用して、特定のオブジェクト値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services can be obtained.">編集サービスを取得するために使用される <see cref="T:System.IServiceProvider" />。</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; being edited.">編集される <see cref="T:System.Object" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the new value. If the value of the object has not changed, the &lt;see cref=&quot;M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; method returns the object that was passed to it.">新しい値を表す <see cref="T:System.Object" />。 オブジェクトの値が変更されていない場合、<see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> メソッドは渡されたオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">このエディターによって提供される既定のファイル リストのフィルターの説明を取得します。</summary>
      <returns vsli:raw="The description for the default file-list filter.">既定のファイル リストのフィルターの説明です。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary vsli:raw="Gets an array of supported image types.">サポートされているイメージ タイプの配列を取得します。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; representing supported image types.">サポートされているイメージ タイプを表す <see cref="T:System.Type" /> の配列。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">エディターでオブジェクトの値の視覚的な表現を描画できるかどうかを示す値を取得します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)&quot; /&gt; is implemented; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> が実装されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a value indicated by the specified &lt;see cref=&quot;T:System.Drawing.Design.PaintValueEventArgs&quot; /&gt;.">指定した <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> で示される値を描画します。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.PaintValueEventArgs&quot; /&gt; indicating what to paint and where to paint it.">描画対象と描画位置を示す <see cref="T:System.Drawing.Design.PaintValueEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary vsli:raw="Defines a set of members for derived classes to provide options for the masked text box UI type editor.">マスクされたテキスト ボックスの UI 型エディターにオプションを提供するために、派生クラスの一連のメンバーを定義します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;.">指定した <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> が現在の <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> と等しいかどうかを示します。</summary>
      <param name="maskDescriptor" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;.">現在の <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> と比較する <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see langword="true" /> が現在の <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> と等しい場合は <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type.">特定の型についてハッシュ関数として機能します。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">現在の <see cref="T:System.Object" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary vsli:raw="Returns a value indicating whether the specified mask descriptor is valid and can be added to the masks list.">指定したマスク記述子が有効で、マスクの一覧に追加できるかどうかを示す値を返します。</summary>
      <param name="maskDescriptor" vsli:raw="The mask descriptor to test for validity.">有効性をテストするマスク記述子。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;maskDescriptor&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="maskDescriptor" /> が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary vsli:raw="Returns a value indicating whether the specified mask descriptor is valid, and provides an error description if it is not valid.">指定したマスク記述子が有効であるかどうかを示す値を返します。有効でない場合は、エラーの説明を返します。</summary>
      <param name="maskDescriptor" vsli:raw="The mask descriptor to test for validity.">有効性をテストするマスク記述子。</param>
      <param name="validationErrorDescription" vsli:raw="A string representing a validation error. If no validation error occurred, the &lt;paramref name=&quot;validationErrorDescription&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">検証エラーを表す文字列。 検証エラーが発生しなかった場合、<paramref name="validationErrorDescription" /> は <see cref="F:System.String.Empty" /> です。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;maskDescriptor&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="maskDescriptor" /> が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">現在のオブジェクトを表す文字列を返します。</summary>
      <returns vsli:raw="A string that represents the current object.">現在のオブジェクトを表す文字列。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; representing the locale the mask is authored for.">マスクのロケールを表す <see cref="T:System.Globalization.CultureInfo" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; representing the locale the mask is authored for.">マスクのロケールを表す <see cref="T:System.Globalization.CultureInfo" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary vsli:raw="Gets the mask being defined.">定義するマスクを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the mask being defined.">定義するマスクが含まれた <see cref="T:System.String" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary vsli:raw="Gets the user-friendly name of the mask.">マスクのユーザー フレンドリ名を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name or brief description of the &lt;see cref=&quot;P:System.Windows.Forms.Design.MaskDescriptor.Mask&quot; /&gt;.">
        <see cref="T:System.String" /> の名前または簡単な説明が含まれた <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary vsli:raw="Gets a sample of a formatted string for the mask.">マスク用に書式設定された文字列のサンプルを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing text that is formatted by using the &lt;see cref=&quot;P:System.Windows.Forms.Design.MaskDescriptor.Mask&quot; /&gt;.">
        <see cref="T:System.String" /> を使用して書式設定されたテキストが含まれる <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary vsli:raw="Gets the type providing validation associated with the mask.">マスクに関連付けられている検証を提供する型を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the formatted string is validated against.">書式設定された文字列を検証する <see cref="T:System.Type" /> です。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary vsli:raw="Defines a set of &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; fields that each correspond to a command function provided by the host environment.">それぞれホスト環境によって提供されたコマンド関数に対応する <see cref="T:System.ComponentModel.Design.CommandID" /> フィールドのセットを定義します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the component tray menu.">コンポーネント トレイ メニューにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the container menu.">コンテナー メニューにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the properties page for the designer.">デザイナーのプロパティ ページにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the edit label handler.">ラベル編集ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the cancel key handler.">キャンセル キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the default key handler.">既定のキー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the end key handler.">End キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the home key handler.">Home キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the smart tag invocation handler.">スマート タグの呼び出しハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move down key handler.">下移動キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move left key handler.">左移動キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move right key handler.">右移動キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move up key handler.">上移動キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge down key handler.">ナッジ下キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height decrease key handler.">ナッジ高さ減少キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height increase key handler.">ナッジ高さ増加キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge left key handler.">ナッジ左キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge right key handler.">ナッジ右キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge up key handler.">ナッジ上キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width decrease key handler.">ナッジ幅減少キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width increase key handler.">ナッジ幅増加キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the reverse cancel key handler.">反転キャンセル キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select next key handler.">次選択キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select previous key handler.">前選択キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-END key handler.">Shift + End キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-HOME key handler.">Shift + Home キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height decrease key handler.">サイズ高さ減少キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height increase key handler.">サイズ高さ増加キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width decrease key handler.">サイズ幅減少キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width increase key handler.">サイズ幅増加キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tab order select key handler.">タブ オーダー選択キー ハンドラーにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the selection menu.">選択メニューにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle.">ステータスを表す四角形を設定するために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle text.">ステータスを表す四角形のテキストを設定するために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tray selection menu.">トレイ選択メニューにアクセスするために使用できる <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.MenuCommands" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls.">入れ子になったコントロールをサポートする <see cref="T:System.Windows.Forms.Control" /> のデザイン モードの動作を拡張します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary vsli:raw="Adds padding snaplines.">埋め込みスナップ線を追加します。</summary>
      <param name="snapLines" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects.">
        <see cref="T:System.Collections.ArrayList" /> オブジェクトを格納している <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Called when a component is added to the parent container.">親コンテナーにコンポーネントが追加されたときに呼び出されます。</summary>
      <param name="component" vsli:raw="The component to test for errors.">エラーがないかどうかを調べる対象のコンポーネント。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;component&quot; /&gt; can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="component" /> を追加できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary vsli:raw="Indicates whether the specified control can be a child of the control managed by this designer.">指定したコントロールをこのデザイナーによって管理されるコントロールの子にできるかどうかを示します。</summary>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to test.">テスト対象の <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified control can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したコントロールをこのデザイナーによって管理されるコントロールの子にできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Indicates whether the control managed by the specified designer can be a child of the control managed by this designer.">指定したデザイナーによって管理されるコントロールを、このデザイナーによって管理されるコントロールの子にできるかどうかを示します。</summary>
      <param name="controlDesigner" vsli:raw="The designer for the control to test.">テスト対象のコントロールのデザイナー。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したデザイナーによって管理されるコントロールをこのデザイナーによって管理されるコントロールの子にできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document.">指定したツールからコンポーネントまたはコントロールを作成し、それを現在のデザイン ドキュメントに追加します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">コンポーネントの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document at the specified location.">指定したツールからコンポーネントまたはコントロールを作成し、それを現在のデザイン ドキュメントの指定した位置に追加します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">コンポーネントの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="location" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;, in design-time view screen coordinates, at which to center the component.">コンポーネントを中心に配置する、デザイン時ビューの画面座標の <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document within the bounds of the specified rectangle.">指定したツールからコンポーネントまたはコントロールを作成し、それを現在のデザイン ドキュメントの指定した四角形の境界内に追加します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">コンポーネントの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the location and size for the component created from the tool. The &lt;see cref=&quot;P:System.Drawing.Rectangle.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Rectangle.Y&quot; /&gt; values of the &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicate the design-time view screen coordinates of the upper-left corner of the component.">ツールから作成されたコンポーネントの位置とサイズを示す <see cref="T:System.Drawing.Rectangle" />。 <see cref="P:System.Drawing.Rectangle.X" /> の <see cref="P:System.Drawing.Rectangle.Y" /> 値と <see cref="T:System.Drawing.Rectangle" /> 値は、コンポーネントの左上隅のデザイン時ビューの画面座標を示します。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary vsli:raw="Provides core functionality for all the &lt;see cref=&quot;M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)&quot; /&gt; methods.">すべての <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" /> メソッドのコア機能を提供します。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">コンポーネントの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="x" vsli:raw="The horizontal position, in design-time view coordinates, of the location of the left edge of the tool, if a size is specified; the horizontal position of the center of the tool, if no size is specified.">サイズが指定されている場合は、ツールの左端の位置のデザイン時ビュー座標の水平位置。サイズが指定されていない場合は、ツールの中心のデザイン時ビュー座標の水平位置。</param>
      <param name="y" vsli:raw="The vertical position, in design-time view coordinates, of the location of the top edge of the tool, if a size is specified; the vertical position of the center of the tool, if no size is specified.">サイズが指定されている場合は、ツールの上端の位置のデザイン時ビュー座標の垂直位置。サイズが指定されていない場合は、ツールの中心のデザイン時ビュー座標の垂直位置。</param>
      <param name="width" vsli:raw="The width of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">ツールの幅。 <paramref name="hasSize" /> パラメーターが <see langword="false" /> に設定されている場合、このパラメーターは無視されます。</param>
      <param name="height" vsli:raw="The height of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">ツールの高さ。 <paramref name="hasSize" /> パラメーターが <see langword="false" /> に設定されている場合、このパラメーターは無視されます。</param>
      <param name="hasLocation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a location for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the component is to be positioned in the center of the currently selected control.">コンポーネントの位置が指定されている場合は <see langword="true" />。コンポーネントが現在選択されているコントロールの中心に配置される場合は <see langword="false" />。</param>
      <param name="hasSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a size for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the default height and width values for the component are to be used.">コンポーネントのサイズが指定されている場合は <see langword="true" />。コンポーネントの既定の高さの値と幅の値が使用される場合は <see langword="false" />。</param>
      <returns vsli:raw="An array of components created from the tool.">ツールから作成されたコンポーネントの配列。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;, and optionally releases the managed resources.">
        <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを解放することもできます。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary vsli:raw="Gets the control from the designer of the specified component.">指定したコンポーネントのデザイナーからコントロールを取得します。</summary>
      <param name="component" vsli:raw="The component to retrieve the control for.">コントロールを取得する対象のコンポーネント。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that the specified component belongs to.">指定したコンポーネントが属する <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a body glyph that represents the bounds of the control.">コントロールの境界を表す本体グリフを取得します。</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">選択の状態を指定する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 値。</param>
      <returns vsli:raw="A body glyph that represents the bounds of the control.">コントロールの境界を表す本体グリフ。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">標準コントロールの選択境界線とグラブ ハンドルを表す <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクションを取得します。</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">選択の状態を指定する <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 値。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Used by deriving classes to determine if it returns the control being designed or some other &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt; while adding a component to it.">コンポーネントを追加する際に、デザイン中のコントロール、または <see cref="T:System.ComponentModel.Container" /> が返されるかどうかを判断するために、派生クラスで使用されます。</summary>
      <param name="component" vsli:raw="The component for which to retrieve the parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">親 <see cref="T:System.Windows.Forms.Control" /> を取得する対象のコンポーネント。</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the component.">
        <see cref="T:System.Windows.Forms.Control" /> コンポーネントの親。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary vsli:raw="Updates the position of the specified rectangle, adjusting it for grid alignment if grid alignment mode is enabled.">グリッド配置モードが有効な場合は、指定した四角形の位置をグリッドの配置に合わせて更新します。</summary>
      <param name="originalRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the initial position of the component being updated.">更新されるコンポーネントの初期位置を示す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="dragRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the new position of the component.">コンポーネントの新しい位置を示す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="updateSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to update the size of the rectangle, if there has been any change; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">変更があった場合は、四角形のサイズを更新する <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="A rectangle indicating the position of the component in design-time view screen coordinates. If no changes have been made, this method returns the original rectangle.">デザイン時ビューの画面座標の、コンポーネントの位置を示す四角形。 変更がなかった場合、このメソッドは元の四角形を返します。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">コンポーネントを指定して、デザイナーを初期化します。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">デザイナーに関連付ける <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">新たに作成されたコンポーネントを初期化します。</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">プロパティに適用する既定値の名前/値のディクショナリ。 既定値が指定されていない場合は <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a tool from the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">指定した <see cref="T:System.Drawing.Design.ToolboxItem" /> からツールを作成します。</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; that the tool is to be used with.">ツールを使用する <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />。</param>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a tool from.">ツールの作成元の <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called in order to clean up a drag-and-drop operation.">ドラッグ アンド ドロップ操作をクリーンアップするために呼び出されます。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dropped onto the control designer view.">ドラッグ アンド ドロップ オブジェクトがコントロールのデザイナー ビューにドロップされると呼び出されます。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation enters the control designer view.">ドラッグ アンド ドロップ操作がコントロールのデザイナー ビューに入ると呼び出されます。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation leaves the control designer view.">ドラッグ アンド ドロップ操作がコントロールのデザイナー ビューを離れると呼び出されます。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dragged over the control designer view.">ドラッグ アンド ドロップ オブジェクトがコントロールのデザイナー ビュー上にドラッグされると呼び出されます。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Called in response to the left mouse button being pressed and held while over the component.">コンポーネント上でマウスの左ボタンをしばらく押したままにすると応答して呼び出されます。</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">マウスの位置の x 座標 (画面座標)。</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">マウスの位置の y 座標 (画面座標)。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Called at the end of a drag-and-drop operation to complete or cancel the operation.">ドラッグ アンド ドロップ操作の終了時に呼び出され、操作を完了またはキャンセルします。</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag operation; &lt;see langword=&quot;false&quot; /&gt; to commit it.">ドラッグ操作をキャンセルする場合は <see langword="true" />。ドラッグ操作をコミットする場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Called for each movement of the mouse during a drag-and-drop operation.">ドラッグ アンド ドロップ操作中にマウスが移動するたびに呼び出されます。</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">マウスの位置の x 座標 (画面座標)。</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">マウスの位置の y 座標 (画面座標)。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">デザイナーが管理しているコントロールが表面を描画したときに呼び出され、デザイナーがコントロールの一番上に追加の表示要素を描画できるようにします。</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary vsli:raw="Provides an opportunity to change the current mouse cursor.">現在のマウス カーソルを変更できるようにします。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.TypeDescriptor" /> を通じてコンポーネントが公開するプロパティのセットを調整します。</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">コンポーネントのクラスのプロパティが格納されている <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary vsli:raw="Gets a value indicating whether selected controls will be re-parented.">選択されたコントロールに親が再指定されるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the controls that were selected by lassoing on the designer's surface will be re-parented to this designer's control.">デザイナー画面上でなげなわツールによってコントロールが選択された場合に、このデザイナーのコントロールが親になるようにする場合は <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary vsli:raw="Gets a value indicating whether a generic drag box should be drawn when dragging a toolbox item over the designer's surface.">ツールボックス項目をデザイナー画面にドラッグしたときに、ジェネリック ダイアログ ボックスを描画するかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a generic drag box should be drawn when dragging a toolbox item over the designer's surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">ツールボックス項目をデザイナー画面にドラッグしたときにジェネリック ダイアログ ボックスを描画する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary vsli:raw="Gets a value indicating whether the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;.">ドラッグしたコントロールを <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> にドロップしたときに、ドラッグしたコントロールの z オーダーを維持するかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ドラッグしたコントロールを <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> にドロップしたときに、ドラッグしたコントロールの z オーダーを維持する場合は <see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary vsli:raw="Gets the default location for a control added to the designer.">デザイナーに追加されたコントロールの既定の位置を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that indicates the default location for a control added to the designer.">デザイナーに追加されたコントロールの既定の位置を示す <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary vsli:raw="Gets or sets a value indicating whether a grid should be drawn on the control for this designer.">このデザイナーのコントロールにグリッドを描画するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a grid should be drawn on the control in the designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">デザイナーのコントロールにグリッドを描画する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles are drawn by the designer.">デザイナーによってドラッグ四角形が描画されるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles are drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">ドラッグ四角形が描画される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary vsli:raw="Gets or sets the size of each square of the grid that is drawn when the designer is in grid draw mode.">デザイナーがグリッド描画モードのときに描画されるグリッドの各四角形のサイズを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; is outside the allowed range for &lt;see cref=&quot;P:System.Windows.Forms.Design.ParentControlDesigner.GridSize&quot; /&gt;. The default minimum value is 2, and the default maximum value is 200.">
        <see cref="T:System.Drawing.Size" /> が、<see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" /> に許可された範囲の外にあります。 既定の最小値は 2、既定の最大値は 200 です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; that represents the size of each square of the grid drawn on a form or user control.">フォームまたはユーザー コントロールに描画されたグリッドの各四角形のサイズを表す <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary vsli:raw="Gets a value indicating whether the designer has a valid tool during a drag operation.">ドラッグ操作中に、デザイナーに有効なツールがあるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="The tool being dragged, if creating a component, or &lt;see langword=&quot;null&quot; /&gt; if there is no tool.">コンポーネントを作成する場合、ドラッグされているツール。ツールがない場合は、<see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">このコントロールの有効な配置ポイントを表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> オブジェクトの一覧を取得します。</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">このコントロールの有効な配置ポイントを表す <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> オブジェクトの一覧。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which should receive scroll messages.">スクロール メッセージを受け取る <see cref="T:System.Windows.Forms.Control" /> のデザイン モードの動作を拡張する基本デザイナー クラス。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ScrollableControlDesigner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">指定した点でのマウス クリックがコントロールによって処理されるかどうかを示します。</summary>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">マウスがクリックされた位置を画面座標で示す <see cref="T:System.Drawing.Point" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した点でのクリックがコントロールによって処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and passes WM_HSCROLL and WM_VSCROLL messages to the control at design time.">Windows メッセージを処理し、WM_HSCROLL メッセージおよび WM_VSCROLL メッセージをデザイン時にコントロールへ渡します。</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">処理対象の <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary vsli:raw="Defines identifiers that are used to indicate selection rules for a component.">コンポーネントの選択規則を示すために使用する識別子を定義します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary vsli:raw="Indicates the component supports sizing in all directions.">コンポーネントがすべての方向のサイズ変更をサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary vsli:raw="Indicates the component supports resize from the bottom.">コンポーネントが下からのサイズ変更をサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary vsli:raw="Indicates the component supports resize from the left.">コンポーネントが左からのサイズ変更をサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary vsli:raw="Indicates the component is locked to its container. Overrides the &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.Moveable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.AllSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.BottomSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.LeftSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.RightSizeable&quot; /&gt;, and &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.TopSizeable&quot; /&gt; bit flags of this enumeration.">コンポーネントがコンテナーにロックされていることを示します。 この列挙体の <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> の各ビット フラグをオーバーライドします。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary vsli:raw="Indicates the component supports a location property that allows it to be moved on the screen.">コンポーネントが画面上で移動するための位置プロパティをサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary vsli:raw="Indicates no special selection attributes.">特別な選択属性を示しません。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary vsli:raw="Indicates the component supports resize from the right.">コンポーネントが右からのサイズ変更をサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary vsli:raw="Indicates the component supports resize from the top.">コンポーネントが上からのサイズ変更をサポートすることを示します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary vsli:raw="Indicates the component has some form of visible user interface and the selection service is drawing a selection border around this user interface. If a selected component has this rule set, you can assume that the component implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; and that it is associated with a corresponding designer instance.">コンポーネントになんらかの形式で表示されるユーザー インターフェイスがあり、選択サービスがこのユーザー インターフェイスの周りに選択境界線を描画していることを示します。 選択されているコンポーネントにこの規則が設定されている場合は、コンポーネントが <see cref="T:System.ComponentModel.IComponent" /> を実装していて、対応するデザイナー インスタンスに関連付けられていると想定できます。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary vsli:raw="Provides an editor for picking shortcut keys.">ショートカット キーを選択するためのエディターを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ShortcutKeysEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> メソッドによって提供されるエディター スタイルを使用して、特定のオブジェクト値を編集します。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that this editor can use to obtain services.">このエディターがサービスを取得するために使用できる <see cref="T:System.IServiceProvider" />。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to edit.">編集対象の <see cref="T:System.Object" />。</param>
      <returns vsli:raw="The new value of the &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" /> の新しい値。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.ShortcutKeysEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">
        <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> メソッドで使用するエディター スタイルを取得します。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value that indicates the style of editor used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.ShortcutKeysEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">
        <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> メソッドで使用するエディター スタイルを示す <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 値。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary vsli:raw="A value that indicates whether the scrollbars of a window and its children will be themed when displayed in the Visual Studio designer.">Visual Studio デザイナーで、ウィンドウとその子のスクロール バーが構成されるかどうかを示す値。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary vsli:raw="The window and all of its children will have themed scrollbars.">ウィンドウとそのすべての子のスクロール バーにはテーマが設定されます。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary vsli:raw="The window and all of its children will not be themed.">ウィンドウとそのすべての子にはテーマが設定されません。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary vsli:raw="The window will have themed scrollbars but all of its children will not be themed.">ウィンドウのスクロール バーにはテーマが設定されますが、そのすべての子のスクロール バーにはテーマが設定されません。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary vsli:raw="Represents a window and a value that indicates how its scrollbars should be themed when displayed in the Visual Studio designer.">ウィンドウと、Visual Studio デザイナーでウィンドウのスクロール バーがどのように構成されるかを示す値を表します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary vsli:raw="The window handle.">ウィンドウ ハンドル。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary vsli:raw="A value that indicates how the window scrollbars should be themed when displayed in the Visual Studio designer.">Visual Studio デザイナーで、ウィンドウのスクロール バーがどのように構成されるかを示す値。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary vsli:raw="Provides access to get and set option values for a Windows Forms designer.">Windows フォーム デザイナーのオプション値の取得と設定へのアクセスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> を値を読み込みます。</summary>
      <param name="options" vsli:raw="The collection to populate.">値を読み込むコレクション。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> によって公開されている <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> によって公開される <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />。</returns>
    </member>
  </members>
</doc>