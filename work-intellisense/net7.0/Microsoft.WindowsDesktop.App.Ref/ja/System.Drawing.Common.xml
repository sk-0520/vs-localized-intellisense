<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Drawing.Common</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.Bitmap">
      <summary>GDI+ ビットマップをカプセル化します。このビットマップは、グラフィックス イメージのピクセル データとその属性で構成されます。 <see cref="T:System.Drawing.Bitmap" /> は、ピクセル データで定義したイメージを処理する場合に使用するオブジェクトです。</summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)">
      <summary>指定した既存のイメージを使用して、<see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="original">新しい <see cref="T:System.Drawing.Bitmap" /> の作成元の <see cref="T:System.Drawing.Image" />。</param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>指定したサイズにスケールを設定して、指定した既存のイメージで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="original">新しい <see cref="T:System.Drawing.Bitmap" /> の作成元の <see cref="T:System.Drawing.Image" />。</param>
      <param name="newSize">新しい <see cref="T:System.Drawing.Bitmap" /> のサイズを表す <see cref="T:System.Drawing.Size" /> 構造。</param>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>指定したサイズにスケールを設定して、指定した既存のイメージで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="original">新しい <see cref="T:System.Drawing.Bitmap" /> の作成元の <see cref="T:System.Drawing.Image" />。</param>
      <param name="width">新しい <see cref="T:System.Drawing.Bitmap" /> の幅 (ピクセル単位)。</param>
      <param name="height">新しい <see cref="T:System.Drawing.Bitmap" /> の高さ (ピクセル単位)。</param>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>指定したサイズを使用して、<see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="width">新しい <see cref="T:System.Drawing.Bitmap" /> の幅 (ピクセル単位)。</param>
      <param name="height">新しい <see cref="T:System.Drawing.Bitmap" /> の高さ (ピクセル単位)。</param>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>指定したサイズと指定した <see cref="T:System.Drawing.Graphics" /> オブジェクトの解像度を使用して、<see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="width">新しい <see cref="T:System.Drawing.Bitmap" /> の幅 (ピクセル単位)。</param>
      <param name="height">新しい <see cref="T:System.Drawing.Bitmap" /> の高さ (ピクセル単位)。</param>
      <param name="g">新しい <see cref="T:System.Drawing.Bitmap" /> の解像度を指定する <see cref="T:System.Drawing.Graphics" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
      <summary>指定したサイズと形式を使用して、<see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="width">新しい <see cref="T:System.Drawing.Bitmap" /> の幅 (ピクセル単位)。</param>
      <param name="height">新しい <see cref="T:System.Drawing.Bitmap" /> の高さ (ピクセル単位)。</param>
      <param name="format">新しい <see cref="T:System.Drawing.Bitmap" /> のピクセル形式。 これには、<c>Format</c> で始まる値を指定する必要があります。</param>
      <exception cref="T:System.ArgumentException">名前が Format で始まらない <see cref="T:System.Drawing.Imaging.PixelFormat" /> 値が指定されます。 たとえば、<see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> を指定すると、<see cref="T:System.ArgumentException" /> が発生しますが、<see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> を指定した場合は発生しません。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)">
      <summary>指定したサイズ、ピクセル形式、ピクセル データを使用して、<see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="width">新しい <see cref="T:System.Drawing.Bitmap" /> の幅 (ピクセル単位)。</param>
      <param name="height">新しい <see cref="T:System.Drawing.Bitmap" /> の高さ (ピクセル単位)。</param>
      <param name="stride">スキャン ラインの間のバイト オフセット数を指定する整数。 これには、通常 (必須ではありません)、ピクセルあたりのバイト数という形式 (16 ビット/ピクセルの場合は 2) にビットマップの幅を乗じた値を指定します。 このパラメーターに渡す値は、4 の倍数である必要があります。</param>
      <param name="format">新しい <see cref="T:System.Drawing.Bitmap" /> のピクセル形式。 これには、<c>Format</c> で始まる値を指定する必要があります。</param>
      <param name="scan0">ピクセル データを格納するバイトの配列へのポインター。</param>
      <exception cref="T:System.ArgumentException">名前が Format で始まらない <see cref="T:System.Drawing.Imaging.PixelFormat" /> 値が指定されます。 たとえば、<see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> を指定すると、<see cref="T:System.ArgumentException" /> が発生しますが、<see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> を指定した場合は発生しません。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)">
      <summary>指定したデータ ストリームで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">イメージの読み込みに使用するデータ ストリーム。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> にイメージ データが含まれていないか <see langword="null" /> です。  
  
- または - 
 <paramref name="stream" /> に、65,535 ピクセルよりも大きい 1 次元の PNG イメージ ファイルが含まれています。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)">
      <summary>指定したデータ ストリームで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">イメージの読み込みに使用するデータ ストリーム。</param>
      <param name="useIcm">この <see cref="T:System.Drawing.Bitmap" /> に対して色補正を使用する場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> にイメージ データが含まれていないか <see langword="null" /> です。  
  
- または - 
 <paramref name="stream" /> に、65,535 ピクセルよりも大きい 1 次元の PNG イメージ ファイルが含まれています。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String)">
      <summary>指定したファイルで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filename">ビットマップ ファイルの名前とパス。</param>
      <exception cref="T:System.IO.FileNotFoundException">指定されたファイルが見つかりません。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)">
      <summary>指定したファイルで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filename">ビットマップ ファイルの名前。</param>
      <param name="useIcm">この <see cref="T:System.Drawing.Bitmap" /> に対して色補正を使用する場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)">
      <summary>指定したリソースで <see cref="T:System.Drawing.Bitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">リソースの抽出に使用されるクラス。</param>
      <param name="resource">リソースの名前。</param>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 構造体と、指定された <see cref="T:System.Drawing.Imaging.PixelFormat" /> 列挙体で定義された、この <see cref="T:System.Drawing.Bitmap" /> のセクションのコピーを作成します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.Bitmap" /> のコピーする部分を定義します。 座標は、この <see cref="T:System.Drawing.Bitmap" /> の相対座標です。</param>
      <param name="format">新しい <see cref="T:System.Drawing.Bitmap" /> のピクセル形式。 これには、<c>Format</c> で始まる値を指定する必要があります。</param>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="rect" /> は、ソース ビットマップ境界の外側です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rect" /> の高さまたは幅は 0 です。  
  
- または - 
名前が Format で始まらない <see cref="T:System.Drawing.Imaging.PixelFormat" /> 値が指定されます。 たとえば、<see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> を指定すると、<see cref="T:System.ArgumentException" /> が発生しますが、<see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> を指定した場合は発生しません。</exception>
      <returns>このメソッドが作成する新しい <see cref="T:System.Drawing.Bitmap" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)">
      <summary>指定された <see cref="T:System.Drawing.Imaging.PixelFormat" /> 列挙体で定義されたこの <see cref="T:System.Drawing.Bitmap" /> のセクションのコピーを作成します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.Bitmap" /> のコピーする部分を定義します。</param>
      <param name="format">目的の <see cref="T:System.Drawing.Bitmap" /> の <see cref="T:System.Drawing.Imaging.PixelFormat" /> 列挙体を指定します。</param>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="rect" /> は、ソース ビットマップ境界の外側です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rect" /> の高さまたは幅は 0 です。</exception>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)">
      <summary>アイコンへの Windows ハンドルから <see cref="T:System.Drawing.Bitmap" /> を作成します。</summary>
      <param name="hicon">アイコンにへのハンドル。</param>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)">
      <summary>指定した Windows リソースから <see cref="T:System.Drawing.Bitmap" /> を作成します。</summary>
      <param name="hinstance">リソースを含む実行可能ファイルのインスタンスへのハンドル。</param>
      <param name="bitmapName">リソース ビットマップの名前を含む文字列。</param>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap">
      <summary>この <see cref="T:System.Drawing.Bitmap" /> から GDI ビットマップ オブジェクトを作成します。</summary>
      <exception cref="T:System.ArgumentException">ビットマップの幅または高さが <see cref="F:System.Int16.MaxValue" /> を超えています。</exception>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
      <returns>このメソッドが作成する GDI ビットマップ オブジェクトへのハンドル。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)">
      <summary>この <see cref="T:System.Drawing.Bitmap" /> から GDI ビットマップ オブジェクトを作成します。</summary>
      <param name="background">背景色を指定する <see cref="T:System.Drawing.Color" /> 構造体。 ビットマップが完全に不透明な場合、このパラメーターは無視されます。</param>
      <exception cref="T:System.ArgumentException">ビットマップの幅または高さが <see cref="F:System.Int16.MaxValue" /> を超えています。</exception>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
      <returns>このメソッドが作成する GDI ビットマップ オブジェクトへのハンドル。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHicon">
      <summary>アイコンへのハンドルを返します。</summary>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> と同じイメージを持つアイコンへの Windows ハンドル。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)">
      <summary>この <see cref="T:System.Drawing.Bitmap" /> の指定したピクセルの色を取得します。</summary>
      <param name="x">取得するピクセルの x 座標。</param>
      <param name="y">取得するピクセルの y 座標。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="x" /> が 0 未満か、または <see cref="P:System.Drawing.Image.Width" /> 以上です。  
  
- または - 
 <paramref name="y" /> が 0 未満か、または <see cref="P:System.Drawing.Image.Height" /> 以上です。</exception>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
      <returns>指定したピクセルの色を表す <see cref="T:System.Drawing.Color" /> 構造体。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> をシステム メモリにロックします。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Bitmap" /> のロックする部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="flags">
        <see cref="T:System.Drawing.Bitmap" /> のアクセス レベル (読み取り/書き込み) を指定する <see cref="T:System.Drawing.Imaging.ImageLockMode" /> 列挙体。</param>
      <param name="format">この <see cref="T:System.Drawing.Bitmap" /> のデータ形式を指定する <see cref="T:System.Drawing.Imaging.PixelFormat" /> 列挙体。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> はピクセルあたりのビット数の特定の値ではありません。  
  
- または - 
ビットマップに対して不正な <see cref="T:System.Drawing.Imaging.PixelFormat" /> が渡されました。</exception>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
      <returns>このロック処理に関する情報を格納している <see cref="T:System.Drawing.Imaging.BitmapData" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> をシステム メモリにロックします。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Bitmap" /> のロックする部分を指定する四角形構造体。</param>
      <param name="flags">
        <see cref="T:System.Drawing.Bitmap" /> のアクセス レベル (読み取り/書き込み) を指定する <see cref="T:System.Drawing.Imaging.ImageLockMode" /> 値の 1 つ。</param>
      <param name="format">
        <see cref="T:System.Drawing.Bitmap" /> のデータ形式を指定する <see cref="T:System.Drawing.Imaging.PixelFormat" /> 値の 1 つ。</param>
      <param name="bitmapData">ロック処理に関する情報を格納している <see cref="T:System.Drawing.Imaging.BitmapData" />。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> 値はピクセルあたりのビット数の特定の値ではありません。  
  
- または - 
ビットマップに対して不正な <see cref="T:System.Drawing.Imaging.PixelFormat" /> が渡されました。</exception>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
      <returns>ロック処理に関する情報を格納している <see cref="T:System.Drawing.Imaging.BitmapData" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent">
      <summary>既定の透明色をこの <see cref="T:System.Drawing.Bitmap" /> で透明します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Bitmap" /> のイメージ形式はアイコン形式です。</exception>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)">
      <summary>指定の透明色をこの <see cref="T:System.Drawing.Bitmap" /> に使用します。</summary>
      <param name="transparentColor">透明にする色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Bitmap" /> のイメージ形式はアイコン形式です。</exception>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
      <summary>指定したピクセルの色を <see cref="T:System.Drawing.Bitmap" /> で指定します。</summary>
      <param name="x">設定するピクセルの x 座標。</param>
      <param name="y">設定するピクセルの y 座標。</param>
      <param name="color">指定したピクセルに割り当てる色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)">
      <summary>この <see cref="T:System.Drawing.Bitmap" /> の解像度を設定します。</summary>
      <param name="xDpi">
        <see cref="T:System.Drawing.Bitmap" /> の水平方向の解像度 (dpi)。</param>
      <param name="yDpi">
        <see cref="T:System.Drawing.Bitmap" /> の垂直方向の解像度 (dpi)。</param>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)">
      <summary>システム メモリからこの <see cref="T:System.Drawing.Bitmap" /> のロックを解除します。</summary>
      <param name="bitmapdata">ロック処理に関する情報を指定する <see cref="T:System.Drawing.Imaging.BitmapData" />。</param>
      <exception cref="T:System.Exception">操作が失敗しました。</exception>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute">
      <summary>
        <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 宣言を解釈する場合、アセンブリは同じアセンブリ内の指定されたリソース、ただし、宣言されたファイル名に追加されている <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> 構成値を持つリソースを検索する必要があることを指定します。</summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSameAssemblyAttribute.#ctor">
      <summary>
        <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute">
      <summary>
        <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 宣言を解釈する場合、アセンブリはサテライト アセンブリ内の指定されたリソース、ただし、宣言されたファイル名に追加されている <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> 構成値を持つリソースを検索する必要があることを指定します。</summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute.#ctor">
      <summary>
        <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Drawing.Brush">
      <summary>四角形、楕円、扇形、多角形、パスなどのグラフィカル形状の内部を塗りつぶすために使用するオブジェクトを定義します。</summary>
    </member>
    <member name="M:System.Drawing.Brush.#ctor">
      <summary>
        <see cref="T:System.Drawing.Brush" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Brush.Clone">
      <summary>派生クラスでオーバーライドされた場合は、この <see cref="T:System.Drawing.Brush" /> の同一コピーを作成します。</summary>
      <returns>このメソッドが作成する新しい <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.Brush.Dispose">
      <summary>この <see cref="T:System.Drawing.Brush" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Brush.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Brush" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Brush.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Brush.SetNativeBrush(System.IntPtr)">
      <summary>派生クラスでは、GDI+ ブラシ オブジェクトへの参照を設定します。</summary>
      <param name="brush">GDI+ ブラシ オブジェクトを指すポインター。</param>
    </member>
    <member name="T:System.Drawing.Brushes">
      <summary>すべての標準色のブラシ。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Drawing.Brushes.AliceBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.AntiqueWhite">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aqua">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aquamarine">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Azure">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Beige">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Bisque">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Black">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlanchedAlmond">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Blue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlueViolet">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Brown">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BurlyWood">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.CadetBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chartreuse">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chocolate">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Coral">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.CornflowerBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cornsilk">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Crimson">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cyan">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkCyan">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGoldenrod">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGray">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkKhaki">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkMagenta">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOliveGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrange">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrchid">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkRed">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSalmon">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSeaGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateGray">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkTurquoise">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkViolet">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepPink">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepSkyBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DimGray">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DodgerBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Firebrick">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.FloralWhite">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.ForestGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Fuchsia">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gainsboro">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.GhostWhite">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gold">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Goldenrod">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gray">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Green">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.GreenYellow">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Honeydew">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.HotPink">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.IndianRed">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Indigo">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Ivory">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Khaki">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lavender">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LavenderBlush">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LawnGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LemonChiffon">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCoral">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCyan">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGoldenrodYellow">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGray">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightPink">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSalmon">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSeaGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSkyBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSlateGray">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSteelBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightYellow">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lime">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LimeGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Linen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Magenta">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Maroon">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumAquamarine">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumOrchid">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumPurple">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSeaGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSlateBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSpringGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumTurquoise">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumVioletRed">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MidnightBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MintCream">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MistyRose">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Moccasin">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.NavajoWhite">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Navy">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OldLace">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Olive">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OliveDrab">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orange">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OrangeRed">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orchid">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGoldenrod">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleTurquoise">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleVioletRed">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PapayaWhip">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PeachPuff">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Peru">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Pink">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Plum">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PowderBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Purple">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Red">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.RosyBrown">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.RoyalBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SaddleBrown">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Salmon">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SandyBrown">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaShell">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Sienna">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Silver">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SkyBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateGray">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Snow">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SpringGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SteelBlue">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tan">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Teal">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Thistle">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tomato">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Transparent">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Turquoise">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Violet">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Wheat">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.White">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.WhiteSmoke">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Yellow">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.YellowGreen">
      <summary>システム定義の <see cref="T:System.Drawing.Brush" /> オブジェクトを取得します。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Brush" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Drawing.BufferedGraphics">
      <summary>ダブル バッファリングのためのグラフィックス バッファーを提供します。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Dispose">
      <summary>この <see cref="T:System.Drawing.BufferedGraphics" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render">
      <summary>グラフィックス バッファーの内容を既定のデバイスに書き込みます。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
      <summary>グラフィックス バッファーの内容を指定された <see cref="T:System.Drawing.Graphics" /> オブジェクトに書き込みます。</summary>
      <param name="target">グラフィックス バッファーの内容を書き込む <see cref="T:System.Drawing.Graphics" /> オブジェクト。</param>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
      <summary>グラフィックス バッファーの内容を、指定した <see cref="T:System.IntPtr" /> ハンドルに関連付けられているデバイス コンテキストに書き込みます。</summary>
      <param name="targetDC">グラフィックス バッファーの内容の書き込み先のデバイス コンテキストを指す <see cref="T:System.IntPtr" />。</param>
    </member>
    <member name="P:System.Drawing.BufferedGraphics.Graphics">
      <summary>グラフィックス バッファーに出力する <see cref="T:System.Drawing.Graphics" /> オブジェクトを取得します。</summary>
      <returns>グラフィックス バッファーに出力する <see cref="T:System.Drawing.Graphics" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsContext">
      <summary>ダブル バッファリングに使用できるグラフィックス バッファーを作成するためのメソッドを提供します。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.#ctor">
      <summary>
        <see cref="T:System.Drawing.BufferedGraphicsContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>指定した <see cref="T:System.Drawing.Graphics" /> のピクセル形式を使用して、指定したサイズのグラフィックス バッファーを作成します。</summary>
      <param name="targetGraphics">新しいバッファーのピクセル形式を一致させる <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="targetRectangle">作成するバッファーのサイズを示す <see cref="T:System.Drawing.Rectangle" />。</param>
      <returns>指定したサイズのバッファーに描画するために使用できる <see cref="T:System.Drawing.BufferedGraphics" />。</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
      <summary>指定した <see cref="T:System.Drawing.Graphics" /> のピクセル形式を使用して、指定したサイズのグラフィックス バッファーを作成します。</summary>
      <param name="targetDC">新しいバッファーのピクセル形式を一致させるデバイス コンテキストの <see cref="T:System.IntPtr" />。</param>
      <param name="targetRectangle">作成するバッファーのサイズを示す <see cref="T:System.Drawing.Rectangle" />。</param>
      <returns>指定したサイズのバッファーに描画するために使用できる <see cref="T:System.Drawing.BufferedGraphics" />。</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Dispose">
      <summary>
        <see cref="T:System.Drawing.BufferedGraphicsContext" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Invalidate">
      <summary>バッファーが割り当てられていてまだ破棄されていない場合に、現在のグラフィックス バッファーを破棄します。</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
      <summary>使用するバッファーの最大サイズを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">サイズの高さまたは幅が 0 以下です。</exception>
      <returns>バッファーの最大サイズを示す <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsManager">
      <summary>メインのバッファー内グラフィックス コンテキスト オブジェクトへのアクセスをアプリケーション ドメインに提供します。</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsManager.Current">
      <summary>現在のアプリケーション ドメインの <see cref="T:System.Drawing.BufferedGraphicsContext" /> を取得します。</summary>
      <returns>現在のアプリケーション ドメインに対する <see cref="T:System.Drawing.BufferedGraphicsContext" />。</returns>
    </member>
    <member name="T:System.Drawing.CharacterRange">
      <summary>文字列内の文字位置の範囲を指定します。</summary>
    </member>
    <member name="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.CharacterRange" /> 構造の新しいインスタンスを初期化して、文字列内の文字位置の範囲を指定します。</summary>
      <param name="First">範囲内の最初の文字の位置。 たとえば、<paramref name="First" /> を 0 に設定すると、この範囲の開始位置は文字列の位置 0 になります。</param>
      <param name="Length">範囲内の位置の数。</param>
    </member>
    <member name="M:System.Drawing.CharacterRange.Equals(System.Object)">
      <summary>このオブジェクトが指定されたオブジェクトと等しいかどうかを示す値を取得します。</summary>
      <param name="obj">等しいかどうかを比較するオブジェクト。</param>
      <returns>指定したオブジェクトが、このインスタンスと同じ <see cref="P:System.Drawing.CharacterRange.First" /> と <see cref="P:System.Drawing.CharacterRange.Length" /> 値のインスタンスであることを示す場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>このインスタンスのハッシュ コードである 32 ビット符号付き整数。</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトを比較します。 2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトの <see cref="P:System.Drawing.CharacterRange.First" /> 値および <see cref="P:System.Drawing.CharacterRange.Length" /> 値が等しいかどうかを示す値を取得します。</summary>
      <param name="cr1">等しいかどうかを比較する <see cref="T:System.Drawing.CharacterRange" /> です。</param>
      <param name="cr2">等しいかどうかを比較する <see cref="T:System.Drawing.CharacterRange" /> です。</param>
      <returns>2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトの <see cref="P:System.Drawing.CharacterRange.First" /> 値と <see cref="P:System.Drawing.CharacterRange.Length" /> 値が同じであることを示す場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトを比較します。 2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトの <see cref="P:System.Drawing.CharacterRange.First" /> 値または <see cref="P:System.Drawing.CharacterRange.Length" /> 値が等しくないかどうかを示す値を取得します。</summary>
      <param name="cr1">等しくないかどうかを比較する <see cref="T:System.Drawing.CharacterRange" />。</param>
      <param name="cr2">等しくないかどうかを比較する <see cref="T:System.Drawing.CharacterRange" />。</param>
      <returns>2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトの <see cref="P:System.Drawing.CharacterRange.First" /> 値または <see cref="P:System.Drawing.CharacterRange.Length" /> 値が異なることを示す場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.First">
      <summary>この <see cref="T:System.Drawing.CharacterRange" /> の、最初の文字の文字列の位置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.CharacterRange" /> の開始位置。</returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.Length">
      <summary>この <see cref="T:System.Drawing.CharacterRange" /> 内の位置の数を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.CharacterRange" /> 内の位置の数。</returns>
    </member>
    <member name="T:System.Drawing.ContentAlignment">
      <summary>描画面でのコンテンツの配置方法を指定します。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomCenter">
      <summary>コンテンツは下端中央に配置されます。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomLeft">
      <summary>コンテンツは下端左寄せに配置されます。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomRight">
      <summary>コンテンツは下端右寄せに配置されます。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleCenter">
      <summary>コンテンツは中段中央に配置されます。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleLeft">
      <summary>コンテンツは中段左寄せに配置されます。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleRight">
      <summary>コンテンツは中段右寄せに配置されます。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopCenter">
      <summary>コンテンツは上端中央に配置されます。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopLeft">
      <summary>コンテンツは上端左寄せに配置されます。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopRight">
      <summary>コンテンツは上端右寄せに配置されます。</summary>
    </member>
    <member name="T:System.Drawing.CopyPixelOperation">
      <summary>ピクセル コピー操作のコピー元の色を、コピー先の色と組み合わせて最終的な色を得る方法を決定します。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Blackness">
      <summary>コピー先の領域を、物理パレットのインデックス 0 に関連付けられている色で塗りつぶします。 この色は、既定の物理パレットの場合は黒です。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.CaptureBlt">
      <summary>アプリケーションのウィンドウより上位にレイヤー化されているウィンドウを、最終的なイメージに含めます。 既定では、アプリケーションのウィンドウだけがイメージに含まれます。 これは、通常、印刷デバイスのコンテキストには使用できないので注意してください。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.DestinationInvert">
      <summary>コピー先の領域を反転します。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergeCopy">
      <summary>コピー元の領域の色を、ブール型の <see langword="AND" /> 演算子を使用して、コピー先のデバイス コンテキストの選択したブラシの色と組み合わせます。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergePaint">
      <summary>反転されたコピー元の領域の色を、ブール型の <see langword="OR" /> 演算子を使用して、コピー先の領域の色と組み合わせます。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NoMirrorBitmap">
      <summary>ビットマップがミラー化されません。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceCopy">
      <summary>反転されたコピー元の領域を、コピー先にコピーします。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceErase">
      <summary>コピー元とコピー先の色を、ブール型の <see langword="OR" /> 演算子を使用して組み合わせ、さらに反転します。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatCopy">
      <summary>コピー先のデバイス コンテキストで現在選択されているブラシを、コピー先のビットマップにコピーします。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatInvert">
      <summary>コピー先のデバイス コンテキストで現在選択されているブラシの色を、ブール型の <see langword="XOR" /> 演算子を使用して、コピー先の領域の色と組み合わせます。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatPaint">
      <summary>コピー先のデバイス コンテキストで現在選択されているブラシの色を、ブール型の <see langword="OR" /> 演算子を使用して、反転されているコピー元の領域の色と組み合わせます。 さらに、ブール型の <see langword="OR" /> 演算子を使用して、その結果と、コピー先の領域の色を組み合わせます。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceAnd">
      <summary>コピー元とコピー先の領域の色を、ブール型の <see langword="AND" /> 演算子を使用して組み合わせます。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceCopy">
      <summary>コピー元の領域を、コピー先の領域にそのままコピーします。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceErase">
      <summary>コピー先の領域の反転された色を、ブール型の <see langword="AND" /> 演算子を使用して、コピー元の領域の色と組み合わせます。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceInvert">
      <summary>コピー元とコピー先の領域の色を、ブール型の <see langword="XOR" /> 演算子を使用して組み合わせます。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourcePaint">
      <summary>コピー元とコピー先の領域の色を、ブール型の <see langword="OR" /> 演算子を使用して組み合わせます。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Whiteness">
      <summary>コピー先の領域を、物理パレットのインデックス 1 に関連付けられている色で塗りつぶします。 この色は、既定の物理パレットの場合は白です。</summary>
    </member>
    <member name="T:System.Drawing.Design.CategoryNameCollection">
      <summary>カテゴリ名の文字列のコレクションを表します。</summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.Drawing.Design.CategoryNameCollection)">
      <summary>指定したコレクションを使用して、<see cref="T:System.Drawing.Design.CategoryNameCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクション値を初期化する名前を格納している <see cref="T:System.Drawing.Design.CategoryNameCollection" />。</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.String[])">
      <summary>指定した名前の配列を使用して、<see cref="T:System.Drawing.Design.CategoryNameCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクション値を初期化するカテゴリの名前を格納している文字列の配列。</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.Contains(System.String)">
      <summary>指定したカテゴリがコレクションに格納されているかどうかを示します。</summary>
      <param name="value">コレクション内で確認する文字列。</param>
      <returns>指定したカテゴリがコレクションに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.CopyTo(System.String[],System.Int32)">
      <summary>指定したインデックスで指定した配列にコレクション要素をコピーします。</summary>
      <param name="array">コピー先の配列。</param>
      <param name="index">コピーを開始する位置のコピー先配列のインデックス。</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.IndexOf(System.String)">
      <summary>指定した値のインデックスを取得します。</summary>
      <param name="value">コレクション内のインデックスを取得するカテゴリ名。</param>
      <returns>コレクション内のインデックス。文字列がコレクションに存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.CategoryNameCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にあるカテゴリ名を取得します。</summary>
      <param name="index">アクセスするコレクション要素のインデックス。</param>
      <returns>指定したインデックス位置にあるカテゴリ名。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.AdjustableArrowCap">
      <summary>調整できる矢印形のライン キャップを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
      <summary>指定した幅および高さを使用して <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> クラスの新しいインスタンスを初期化します。 このコンストラクターで作成された矢印の終端のキャップは、必ず塗りつぶされます。</summary>
      <param name="width">矢印の幅。</param>
      <param name="height">矢印の高さ。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
      <summary>幅、高さ、塗りつぶしプロパティを指定して、<see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> クラスの新しいインスタンスを初期化します。 矢印の終端のキャップが塗りつぶされるかどうかは、<paramref name="isFilled" /> パラメーターに渡された引数で決まります。</summary>
      <param name="width">矢印の幅。</param>
      <param name="height">矢印の高さ。</param>
      <param name="isFilled">矢印のキャップを塗りつぶす場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled">
      <summary>矢印のキャップが塗りつぶされるかどうかを取得または設定します。</summary>
      <returns>このプロパティは、矢印のキャップが塗りつぶされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
      <summary>矢印のキャップの高さを取得または設定します。</summary>
      <returns>矢印のキャップの高さ。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset">
      <summary>矢印のキャップのアウトラインと塗りつぶしとの間の単位数を取得または設定します。</summary>
      <returns>矢印のキャップのアウトラインと矢印のキャップの塗りつぶしとの間の単位数。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
      <summary>矢印のキャップの幅を取得または設定します。</summary>
      <returns>矢印のキャップの幅の単位数。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.Blend">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> オブジェクトのブレンド パターンを定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.Blend" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)">
      <summary>指定した係数の数と位置の数を使用して、<see cref="T:System.Drawing.Drawing2D.Blend" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="count">
        <see cref="P:System.Drawing.Drawing2D.Blend.Factors" /> 配列および <see cref="P:System.Drawing.Drawing2D.Blend.Positions" /> 配列内の要素の数です。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Factors">
      <summary>グラデーションのブレンド係数の配列を取得または設定します。</summary>
      <returns>対応するブレンド位置で使用される開始色と終了色の割合を指定するブレンド係数の配列。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Positions">
      <summary>グラデーションのブレンド位置の配列を取得または設定します。</summary>
      <returns>グラデーション ラインに沿って距離の割合を指定するブレンド位置の配列。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.ColorBlend">
      <summary>多色グラデーションの色のブレンドの補間に使用される、色と位置の配列を定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)">
      <summary>指定した色の数と位置の数を使用して、<see cref="T:System.Drawing.Drawing2D.ColorBlend" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="count">この <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 内の色と位置の数。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Colors">
      <summary>グラデーションに沿って対応する位置で使用する色を表す、色の配列を取得または設定します。</summary>
      <returns>グラデーションに沿って対応する位置で使用する色を表す、<see cref="T:System.Drawing.Color" /> 構造体の配列。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Positions">
      <summary>グラデーション ラインに沿った位置を取得または設定します。</summary>
      <returns>グラデーション ラインに沿って距離の割合を指定する値の配列。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.CombineMode">
      <summary>さまざまなクリッピング領域の結合方法を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Complement">
      <summary>新しい領域から既存の領域を削除した結果によって、既存の領域を置き換えることを指定します。 つまり、既存の領域が新しい領域から除外されます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Exclude">
      <summary>既存の領域から新しい領域を削除した結果によって、既存の領域を置き換えることを指定します。 つまり、新しい領域が既存の領域から除外されます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Intersect">
      <summary>2 つのクリッピング領域は、積集合を使用して結合されます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Replace">
      <summary>1 つのクリッピング領域が、別のクリッピング領域で置き換えられます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Union">
      <summary>2 つのクリッピング領域は、両方の和集合を使用して結合されます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Xor">
      <summary>2 つのクリッピング領域は、一方または他方で囲まれた領域だけを使用して結合されます。両方で囲まれた領域は使用されません。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingMode">
      <summary>元の色を背景色と組み合わせる方法を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceCopy">
      <summary>色がレンダリングされるときに、背景色を上書きすることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceOver">
      <summary>色がレンダリングされるときに、背景色とのブレンドを指定します。 ブレンドは、レンダリングする色のアルファ値によって決まります。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingQuality">
      <summary>合成時に使用する品質レベルを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.AssumeLinear">
      <summary>線形の値であると想定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Default">
      <summary>既定の品質。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.GammaCorrected">
      <summary>ガンマ補正を使用します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighQuality">
      <summary>高品質で低速の合成。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighSpeed">
      <summary>高速で低品質。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Invalid">
      <summary>無効な品質。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CoordinateSpace">
      <summary>座標の評価に使用するシステムを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Device">
      <summary>デバイス座標コンテキストの座標を指定します。 通常、コンピューター画面では、デバイス座標をピクセル数で測定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Page">
      <summary>ページ座標コンテキストの座標を指定します。 単位は <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで定義され、<see cref="T:System.Drawing.GraphicsUnit" /> 列挙体の要素の 1 つである必要があります。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.World">
      <summary>ワールド座標コンテキストの座標を指定します。 ワールド座標は、モデリング環境などの物理的でない環境で使用されます。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CustomLineCap">
      <summary>ユーザー定義のカスタム ライン キャップをカプセル化します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>指定したアウトラインと塗りつぶしを使用して、<see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fillPath">カスタム キャップの塗りつぶしを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
      <param name="strokePath">カスタム キャップのアウトラインを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
      <summary>指定したアウトラインと塗りつぶしを使用して、指定した既存の <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体から <see cref="T:System.Drawing.Drawing2D.LineCap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fillPath">カスタム キャップの塗りつぶしを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
      <param name="strokePath">カスタム キャップのアウトラインを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
      <param name="baseCap">カスタム キャップの作成元となるライン キャップ。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
      <summary>指定したアウトライン、塗りつぶし、およびくぼみを使用して、指定した既存の <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体から <see cref="T:System.Drawing.Drawing2D.LineCap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fillPath">カスタム キャップの塗りつぶしを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
      <param name="strokePath">カスタム キャップのアウトラインを定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
      <param name="baseCap">カスタム キャップの作成元となるライン キャップ。</param>
      <param name="baseInset">キャップと直線との距離。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
      <summary>この <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> の同一コピーを作成します。</summary>
      <returns>このメソッドが作成し、オブジェクトとしてキャストされる <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
      <summary>この <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Finalize">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> がガベージ コレクションにより収集される前に、その <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> がリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
      <summary>このカスタム キャップを構成する直線の開始と終了に使用するキャップを取得します。</summary>
      <param name="startCap">このキャップ内で直線の開始点で使用される <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列挙体。</param>
      <param name="endCap">このキャップ内で直線の終了点に使用される <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列挙体。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
      <summary>直線の開始と終了に使用する、このカスタム キャップを構成するキャップを設定します。</summary>
      <param name="startCap">このキャップ内で直線の開始点で使用される <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列挙体。</param>
      <param name="endCap">このキャップ内で直線の終了点に使用される <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列挙体。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
      <summary>この <see cref="T:System.Drawing.Drawing2D.LineCap" /> の基になっている <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.LineCap" /> の基になっている <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
      <summary>キャップと直線との距離を取得または設定します。</summary>
      <returns>キャップの開始点からと直線の終了点までの距離。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
      <summary>この <see cref="T:System.Drawing.Drawing2D.LineJoin" /> オブジェクトを構成する直線の接合方法を決定する、<see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.LineJoin" /> オブジェクトが直線の接合に使用する <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列挙体。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> オブジェクトの幅に対応した、この <see cref="T:System.Drawing.Pen" /> クラス オブジェクトのスケーリングの量を取得または設定します。</summary>
      <returns>キャップのスケーリングの量。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashCap">
      <summary>破線の各ダッシュの両端に使用する、グラフィック形状の種類を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Flat">
      <summary>各ダッシュの両端を直角にする、四角形キャップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Round">
      <summary>各ダッシュの両端を丸くする、円形キャップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Triangle">
      <summary>各ダッシュの両端を三角形にする、三角形キャップを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashStyle">
      <summary>
        <see cref="T:System.Drawing.Pen" /> オブジェクトで描画する破線のスタイルを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Custom">
      <summary>ユーザー定義のカスタム ダッシュ スタイルを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dash">
      <summary>ダッシュで構成される直線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDot">
      <summary>ダッシュとドットの繰り返しパターンで構成される直線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDotDot">
      <summary>ダッシュと 2 つのドットの繰り返しパターンで構成される直線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dot">
      <summary>ドットで構成される直線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Solid">
      <summary>実線を指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FillMode">
      <summary>閉じたパスの内側の塗りつぶし方法を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Alternate">
      <summary>交互塗りつぶしモードを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Winding">
      <summary>全域塗りつぶしモードを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FlushIntention">
      <summary>グラフィックス スタックのコマンドをすぐに終了 (フラッシュ) するか、またはできる限り早く実行するかを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Flush">
      <summary>すべてのグラフィックス操作のスタックをすぐにフラッシュすることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Sync">
      <summary>スタックのすべてのグラフィックス操作をできる限り早く実行することを指定します。 これによって、グラフィックスの状態が同期されます。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsContainer">
      <summary>グラフィックス コンテナーの内部データを表します。 このクラスは、<see cref="T:System.Drawing.Graphics" /> メソッドと <see cref="M:System.Drawing.Graphics.BeginContainer" /> メソッドを使用して <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" /> オブジェクトの状態を保存するときに使用されます。 このクラスは継承できません。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPath">
      <summary>接続された一連の直線と曲線を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> 値を使用して、<see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 列挙体を使用して、<see cref="T:System.Drawing.Drawing2D.FillMode" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fillMode">この <see cref="T:System.Drawing.Drawing2D.FillMode" /> の内部を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 列挙体。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> と <see cref="T:System.Drawing.Drawing2D.PathPointType" /> を指定して、<see cref="T:System.Drawing.Point" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> を構成する点の座標を定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 構造体の配列。</param>
      <param name="types">
        <paramref name="pts" /> 配列内の対応する各点の型を指定する <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列挙体の要素の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />、<see cref="T:System.Drawing.Drawing2D.PathPointType" /> の各配列と指定した <see cref="T:System.Drawing.Point" /> 列挙体要素を使用して、<see cref="T:System.Drawing.Drawing2D.FillMode" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> を構成する点の座標を定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 構造体の配列。</param>
      <param name="types">
        <paramref name="pts" /> 配列内の対応する各点の型を指定する <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列挙体の要素の配列。</param>
      <param name="fillMode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> の形状の内部を塗りつぶす方法を指定する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 列挙体。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 配列と <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 配列を指定して、<see cref="T:System.Drawing.PointF" /> 配列の新しいインスタンスを初期化します。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.PointF" /> を構成する点の座標を定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 構造体の配列。</param>
      <param name="types">
        <paramref name="pts" /> 配列内の対応する各点の型を指定する <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列挙体の要素の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />、<see cref="T:System.Drawing.Drawing2D.PathPointType" /> の各配列と指定した <see cref="T:System.Drawing.PointF" /> 列挙体要素を使用して、<see cref="T:System.Drawing.Drawing2D.FillMode" /> 配列の新しいインスタンスを初期化します。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.PointF" /> を構成する点の座標を定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 構造体の配列。</param>
      <param name="types">
        <paramref name="pts" /> 配列内の対応する各点の型を指定する <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列挙体の要素の配列。</param>
      <param name="fillMode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> の形状の内部を塗りつぶす方法を指定する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 列挙体。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>現在の図形に楕円の円弧を追加します。</summary>
      <param name="rect">円弧の元になる楕円の外接四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="startAngle">x 軸から時計回りに測定した、円弧の開始角度。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> と円弧の終端との間の角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>現在の図形に楕円の円弧を追加します。</summary>
      <param name="rect">円弧の元になる楕円の外接四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="startAngle">x 軸から時計回りに測定した、円弧の開始角度。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> と円弧の終端との間の角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>現在の図形に楕円の円弧を追加します。</summary>
      <param name="x">円弧の描画元となる楕円を定義する四角形領域の左上隅の x 座標。</param>
      <param name="y">円弧の描画元となる楕円を定義する四角形領域の左上隅の y 座標。</param>
      <param name="width">円弧の描画元となる楕円を定義する四角形領域の幅。</param>
      <param name="height">円弧の描画元となる楕円を定義する四角形領域の高さ。</param>
      <param name="startAngle">x 軸から時計回りに測定した、円弧の開始角度。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> と円弧の終端との間の角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>現在の図形に楕円の円弧を追加します。</summary>
      <param name="x">円弧の描画元となる楕円を定義する四角形領域の左上隅の x 座標。</param>
      <param name="y">円弧の描画元となる楕円を定義する四角形領域の左上隅の y 座標。</param>
      <param name="width">円弧の描画元となる楕円を定義する四角形領域の幅。</param>
      <param name="height">円弧の描画元となる楕円を定義する四角形領域の高さ。</param>
      <param name="startAngle">x 軸から時計回りに測定した、円弧の開始角度。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> と円弧の終端との間の角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>現在の図形に 3 次ベジエ曲線を追加します。</summary>
      <param name="pt1">曲線の開始点を表す <see cref="T:System.Drawing.Point" />。</param>
      <param name="pt2">曲線の最初の制御点を表す <see cref="T:System.Drawing.Point" />。</param>
      <param name="pt3">曲線の 2 番目の制御点を表す <see cref="T:System.Drawing.Point" />。</param>
      <param name="pt4">曲線の終了点を表す <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>現在の図形に 3 次ベジエ曲線を追加します。</summary>
      <param name="pt1">曲線の開始点を表す <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pt2">曲線の最初の制御点を表す <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pt3">曲線の 2 番目の制御点を表す <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pt4">曲線の終了点を表す <see cref="T:System.Drawing.PointF" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>現在の図形に 3 次ベジエ曲線を追加します。</summary>
      <param name="x1">曲線の開始点の x 座標。</param>
      <param name="y1">曲線の開始点の y 座標。</param>
      <param name="x2">曲線の最初の制御点の x 座標。</param>
      <param name="y2">曲線の最初の制御点の y 座標。</param>
      <param name="x3">曲線の 2 番目の制御点の x 座標。</param>
      <param name="y3">曲線の 2 番目の制御点の y 座標。</param>
      <param name="x4">曲線の終了点の x 座標。</param>
      <param name="y4">曲線の終了点の y 座標。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>現在の図形に 3 次ベジエ曲線を追加します。</summary>
      <param name="x1">曲線の開始点の x 座標。</param>
      <param name="y1">曲線の開始点の y 座標。</param>
      <param name="x2">曲線の最初の制御点の x 座標。</param>
      <param name="y2">曲線の最初の制御点の y 座標。</param>
      <param name="x3">曲線の 2 番目の制御点の x 座標。</param>
      <param name="y3">曲線の 2 番目の制御点の y 座標。</param>
      <param name="x4">曲線の終了点の x 座標。</param>
      <param name="y4">曲線の終了点の y 座標。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
      <summary>接続された 3 次ベジエ曲線のシーケンスを現在の図形に追加します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
      <summary>接続された 3 次ベジエ曲線のシーケンスを現在の図形に追加します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
      <summary>パスに閉じた曲線を追加します。 曲線は配列内の各点を結ぶため、カーディナル スプライン曲線を使用します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
      <summary>パスに閉じた曲線を追加します。 曲線は配列内の各点を結ぶため、カーディナル スプライン曲線を使用します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="tension">曲線が点の間で湾曲する度合いを指定する 0 ～ 1 の値。0 が最小 (急な曲線) で、1 の場合に最も滑らかな曲線になります。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
      <summary>パスに閉じた曲線を追加します。 曲線は配列内の各点を結ぶため、カーディナル スプライン曲線を使用します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
      <summary>パスに閉じた曲線を追加します。 曲線は配列内の各点を結ぶため、カーディナル スプライン曲線を使用します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="tension">曲線が点の間で湾曲する度合いを指定する 0 ～ 1 の値。0 が最小 (急な曲線) で、1 の場合に最も滑らかな曲線になります。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
      <summary>現在の図形にスプライン曲線を追加します。 曲線は配列内の各点を結ぶため、カーディナル スプライン曲線を使用します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>現在の図形にスプライン曲線を追加します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="offset">曲線の最初の点として使用される、<paramref name="points" /> 配列の要素のインデックス。</param>
      <param name="numberOfSegments">曲線が制御点の間で湾曲する度合いを指定する値。 1 より大きい値の場合、予期しない結果が発生します。</param>
      <param name="tension">曲線が制御点の間で湾曲する度合いを指定する値。 1 より大きい値の場合、予期しない結果が発生します。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
      <summary>現在の図形にスプライン曲線を追加します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="tension">曲線が制御点の間で湾曲する度合いを指定する値。 1 より大きい値の場合、予期しない結果が発生します。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
      <summary>現在の図形にスプライン曲線を追加します。 曲線は配列内の各点を結ぶため、カーディナル スプライン曲線を使用します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>現在の図形にスプライン曲線を追加します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="offset">曲線の最初の点として使用される、<paramref name="points" /> 配列の要素のインデックス。</param>
      <param name="numberOfSegments">曲線の描画に使用されるセグメントの数。 セグメントは、2 つの点を接続する直線と見なすことができます。</param>
      <param name="tension">曲線が制御点の間で湾曲する度合いを指定する値。 1 より大きい値の場合、予期しない結果が発生します。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
      <summary>現在の図形にスプライン曲線を追加します。</summary>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="tension">曲線が制御点の間で湾曲する度合いを指定する値。 1 より大きい値の場合、予期しない結果が発生します。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
      <summary>現在のパスに楕円を追加します。</summary>
      <param name="rect">楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
      <summary>現在のパスに楕円を追加します。</summary>
      <param name="rect">楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>現在のパスに楕円を追加します。</summary>
      <param name="x">楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">楕円を定義する外接する四角形の左上隅の y 座標。</param>
      <param name="width">楕円を定義する外接する四角形の幅。</param>
      <param name="height">楕円を定義する外接する四角形の高さ。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
      <summary>現在のパスに楕円を追加します。</summary>
      <param name="x">楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">楕円を定義する外接する四角形の左上隅の y 座標。</param>
      <param name="width">楕円を定義する外接する四角形の幅。</param>
      <param name="height">楕円を定義する外接する四角形の高さ。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に線分を追加します。</summary>
      <param name="pt1">直線の開始点を表す <see cref="T:System.Drawing.Point" />。</param>
      <param name="pt2">直線の終了点を表す <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に線分を追加します。</summary>
      <param name="pt1">直線の開始点を表す <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pt2">直線の終了点を表す <see cref="T:System.Drawing.PointF" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>現在の図形に線分を追加します。</summary>
      <param name="x1">直線の開始点の x 座標。</param>
      <param name="y1">直線の開始点の y 座標。</param>
      <param name="x2">直線の終了点の x 座標。</param>
      <param name="y2">直線の終了点の y 座標。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に線分を追加します。</summary>
      <param name="x1">直線の開始点の x 座標。</param>
      <param name="y1">直線の開始点の y 座標。</param>
      <param name="x2">直線の終了点の x 座標。</param>
      <param name="y2">直線の終了点の y 座標。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の末尾に、結ばれた一連の線分を追加します。</summary>
      <param name="points">追加する線分を定義する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の末尾に、結ばれた一連の線分を追加します。</summary>
      <param name="points">追加する線分を定義する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
      <summary>指定された <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> をこのパスに追加します。</summary>
      <param name="addingPath">追加する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <param name="connect">追加されたパスの最初の図形が、このパスの最後の図形の一部になるかどうかを指定する Boolean 値。 値が <see langword="true" /> の場合は、追加されたパスの最初の図形が、このパスの最後の図形の一部になります (可能な場合)。 値が <see langword="false" /> の場合は、追加されたパスの最初の図形が、このパスの最後の図形から分離されます。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>パスに扇形のアウトラインを追加します。</summary>
      <param name="rect">扇形の描画元になる楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="startAngle">x 軸から時計回りに測定した、扇型部分の開始角度。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> から時計回りで測定した、<paramref name="startAngle" /> と扇型部分の終端との間の角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>パスに扇形のアウトラインを追加します。</summary>
      <param name="x">扇形の描画元となる楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">扇形の描画元となる楕円を定義する外接する四角形の左上隅の y 座標。</param>
      <param name="width">扇形の描画元となる楕円を定義する外接する四角形の幅。</param>
      <param name="height">扇形の描画元となる楕円を定義する外接する四角形の高さ。</param>
      <param name="startAngle">x 軸から時計回りに測定した、扇型部分の開始角度。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> から時計回りで測定した、<paramref name="startAngle" /> と扇型部分の終端との間の角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>パスに扇形のアウトラインを追加します。</summary>
      <param name="x">扇形の描画元となる楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">扇形の描画元となる楕円を定義する外接する四角形の左上隅の y 座標。</param>
      <param name="width">扇形の描画元となる楕円を定義する外接する四角形の幅。</param>
      <param name="height">扇形の描画元となる楕円を定義する外接する四角形の高さ。</param>
      <param name="startAngle">x 軸から時計回りに測定した、扇型部分の開始角度。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> から時計回りで測定した、<paramref name="startAngle" /> と扇型部分の終端との間の角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
      <summary>パスに多角形を追加します。</summary>
      <param name="points">追加する多角形を定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
      <summary>パスに多角形を追加します。</summary>
      <param name="points">追加する多角形を定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
      <summary>パスに四角形を追加します。</summary>
      <param name="rect">追加する四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
      <summary>パスに四角形を追加します。</summary>
      <param name="rect">追加する四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
      <summary>パスに一連の四角形を追加します。</summary>
      <param name="rects">追加する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
      <summary>パスに一連の四角形を追加します。</summary>
      <param name="rects">追加する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
      <summary>パスに文字列を追加します。</summary>
      <param name="s">追加する <see cref="T:System.String" />。</param>
      <param name="family">テスト描画を行うときに使用するフォントの名前を表す <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="style">テキストに関するスタイル情報 (太字、斜体など) を表す <see cref="T:System.Drawing.FontStyle" /> 列挙体。 この値は、整数としてキャストする必要があります (後のコード例を参照)。</param>
      <param name="emSize">文字の境界を決める em 正方形ボックスの高さ。</param>
      <param name="origin">テキストを開始する点を表す <see cref="T:System.Drawing.Point" />。</param>
      <param name="format">行間や配置など、テキストの書式設定情報を指定する <see cref="T:System.Drawing.StringFormat" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>パスに文字列を追加します。</summary>
      <param name="s">追加する <see cref="T:System.String" />。</param>
      <param name="family">テスト描画を行うときに使用するフォントの名前を表す <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="style">テキストに関するスタイル情報 (太字、斜体など) を表す <see cref="T:System.Drawing.FontStyle" /> 列挙体。 この値は、整数としてキャストする必要があります (後のコード例を参照)。</param>
      <param name="emSize">文字の境界を決める em 正方形ボックスの高さ。</param>
      <param name="origin">テキストを開始する点を表す <see cref="T:System.Drawing.PointF" />。</param>
      <param name="format">行間や配置など、テキストの書式設定情報を指定する <see cref="T:System.Drawing.StringFormat" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>パスに文字列を追加します。</summary>
      <param name="s">追加する <see cref="T:System.String" />。</param>
      <param name="family">テスト描画を行うときに使用するフォントの名前を表す <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="style">テキストに関するスタイル情報 (太字、斜体など) を表す <see cref="T:System.Drawing.FontStyle" /> 列挙体。 この値は、整数としてキャストする必要があります (後のコード例を参照)。</param>
      <param name="emSize">文字の境界を決める em 正方形ボックスの高さ。</param>
      <param name="layoutRect">テキストに外接する四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="format">行間や配置など、テキストの書式設定情報を指定する <see cref="T:System.Drawing.StringFormat" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>パスに文字列を追加します。</summary>
      <param name="s">追加する <see cref="T:System.String" />。</param>
      <param name="family">テスト描画を行うときに使用するフォントの名前を表す <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="style">テキストに関するスタイル情報 (太字、斜体など) を表す <see cref="T:System.Drawing.FontStyle" /> 列挙体。 この値は、整数としてキャストする必要があります (後のコード例を参照)。</param>
      <param name="emSize">文字の境界を決める em 正方形ボックスの高さ。</param>
      <param name="layoutRect">テキストに外接する四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="format">行間や配置など、テキストの書式設定情報を指定する <see cref="T:System.Drawing.StringFormat" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
      <summary>パスからすべてのマーカーを消去します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
      <summary>このパスの同一コピーを作成します。</summary>
      <returns>このメソッドが作成し、オブジェクトとしてキャストされる <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
      <summary>このパスで開いているすべての図形を閉じ、新しい図形を開始します。 開いている各図形は、その終了点と開始点を直線で接続することで閉じられます。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
      <summary>現在の図形を閉じ、新しい図形を開始します。 現在の図形に接続された直線と曲線のシーケンスが含まれる場合、このメソッドは終了点と開始点を直線で接続することでループを閉じます。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
      <summary>この <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
      <summary>パスの各曲線を、接続された線分のシーケンスに変換します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
      <summary>指定された変換を適用し、<see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の各曲線を、接続された線分のシーケンスに変換します。</summary>
      <param name="matrix">平坦化の前に <see cref="T:System.Drawing.Drawing2D.Matrix" /> を変換する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>この <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の各曲線を、接続された線分のシーケンスに変換します。</summary>
      <param name="matrix">平坦化の前に <see cref="T:System.Drawing.Drawing2D.Matrix" /> を変換する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <param name="flatness">曲線とそれを平坦化した近似線との間で許容される最大の誤差を指定します。 既定値は 0.25 です。 平坦化の値を小さくすると、近似線の線分の数が増加します。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
      <summary>この <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に外接する四角形を返します。</summary>
      <returns>この <see cref="T:System.Drawing.RectangleF" /> に外接する四角形を表す <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
      <summary>このパスが指定された <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に変換されたときに、この <see cref="T:System.Drawing.Drawing2D.Matrix" /> に外接する四角形を返します。</summary>
      <param name="matrix">外接する四角形を計算する前に、このパスに適用される変換を指定する <see cref="T:System.Drawing.Drawing2D.Matrix" />。 パスは恒久的に変換されるわけではありません。変換は、外接する四角形を計算する処理の中だけで使用されます。</param>
      <returns>この <see cref="T:System.Drawing.RectangleF" /> に外接する四角形を表す <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
      <summary>現在のパスが指定された <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> によって変換され、指定された <see cref="T:System.Drawing.Drawing2D.Matrix" /> で描画されるときに、この <see cref="T:System.Drawing.Pen" /> に外接する四角形を返します。</summary>
      <param name="matrix">外接する四角形を計算する前に、このパスに適用される変換を指定する <see cref="T:System.Drawing.Drawing2D.Matrix" />。 パスは恒久的に変換されるわけではありません。変換は、外接する四角形を計算する処理の中だけで使用されます。</param>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> の描画に使用する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <returns>この <see cref="T:System.Drawing.RectangleF" /> に外接する四角形を表す <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
      <summary>この <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> の <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 配列内の最後の点を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.PointF" /> の最後の点を表す <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画された場合に、指定した点が <see cref="T:System.Drawing.Pen" /> のアウトラインの中に含まれているかどうかを示します。</summary>
      <param name="point">テストする場所を指定する <see cref="T:System.Drawing.Point" />。</param>
      <param name="pen">テスト対象の <see cref="T:System.Drawing.Pen" />。</param>
      <returns>このメソッドは、指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画した場合、指定した点が <see cref="T:System.Drawing.Pen" /> のアウトラインの中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画され、指定した <see cref="T:System.Drawing.Pen" /> を使用している場合に、指定した点が <see cref="T:System.Drawing.Graphics" /> のアウトラインの中に含まれているかどうかを示します。</summary>
      <param name="pt">テストする場所を指定する <see cref="T:System.Drawing.Point" />。</param>
      <param name="pen">テスト対象の <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">参照可能範囲をテストする <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>このメソッドは、指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画したときに、指定した点がこの <see cref="T:System.Drawing.Pen" /> のアウトラインの中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画された場合に、指定した点が <see cref="T:System.Drawing.Pen" /> のアウトラインの中に含まれているかどうかを示します。</summary>
      <param name="point">テストする場所を指定する <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pen">テスト対象の <see cref="T:System.Drawing.Pen" />。</param>
      <returns>このメソッドは、指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画した場合、指定した点が <see cref="T:System.Drawing.Pen" /> のアウトラインの中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画され、指定した <see cref="T:System.Drawing.Pen" /> を使用している場合に、指定した点が <see cref="T:System.Drawing.Graphics" /> のアウトラインの中に含まれているかどうかを示します。</summary>
      <param name="pt">テストする場所を指定する <see cref="T:System.Drawing.PointF" />。</param>
      <param name="pen">テスト対象の <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">参照可能範囲をテストする <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>このメソッドは、指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画したときに、指定した点がこの <see cref="T:System.Drawing.Pen" /> アウトラインの中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画された場合に、指定した点が <see cref="T:System.Drawing.Pen" /> のアウトラインの中に含まれているかどうかを示します。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <param name="pen">テスト対象の <see cref="T:System.Drawing.Pen" />。</param>
      <returns>このメソッドは、指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画した場合、指定した点が <see cref="T:System.Drawing.Pen" /> のアウトラインの中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画され、指定した <see cref="T:System.Drawing.Pen" /> を使用している場合に、指定した点が <see cref="T:System.Drawing.Graphics" /> のアウトラインの中に含まれているかどうかを示します。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <param name="pen">テスト対象の <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">参照可能範囲をテストする <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>このメソッドは、指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画したときに、指定した点がこの <see cref="T:System.Drawing.Pen" /> のアウトラインの中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画された場合に、指定した点が <see cref="T:System.Drawing.Pen" /> のアウトラインの中に含まれているかどうかを示します。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <param name="pen">テスト対象の <see cref="T:System.Drawing.Pen" />。</param>
      <returns>このメソッドは、指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画した場合、指定した点が <see cref="T:System.Drawing.Pen" /> のアウトラインの中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画され、指定した <see cref="T:System.Drawing.Pen" /> を使用している場合に、指定した点が <see cref="T:System.Drawing.Graphics" /> のアウトラインの中に含まれているかどうかを示します。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <param name="pen">テスト対象の <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">参照可能範囲をテストする <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>このメソッドは、指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で描画したときに、指定した点がこの <see cref="T:System.Drawing.Pen" /> アウトラインの中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
      <summary>指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に含まれているかどうかを示します。</summary>
      <param name="point">テストする点を表す <see cref="T:System.Drawing.Point" />。</param>
      <returns>このメソッドは、指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に含まれているかどうかを示します。</summary>
      <param name="pt">テストする点を表す <see cref="T:System.Drawing.Point" />。</param>
      <param name="graphics">参照可能範囲をテストする <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>このメソッドは、指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
      <summary>指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に含まれているかどうかを示します。</summary>
      <param name="point">テストする点を表す <see cref="T:System.Drawing.PointF" />。</param>
      <returns>このメソッドは、指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に含まれているかどうかを示します。</summary>
      <param name="pt">テストする点を表す <see cref="T:System.Drawing.PointF" />。</param>
      <param name="graphics">参照可能範囲をテストする <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>このメソッドは、指定した点がこのオブジェクトの中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
      <summary>指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に含まれているかどうかを示します。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <returns>このメソッドは、指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> を使用して、指定した点が <see cref="T:System.Drawing.Graphics" /> 内に含まれているかどうかを示します。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <param name="graphics">参照可能範囲をテストする <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>このメソッドは、指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
      <summary>指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に含まれているかどうかを示します。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <returns>このメソッドは、指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の表示されているクリップ領域にある、この <see cref="T:System.Drawing.Graphics" /> 内に、指定した点が含まれているかどうかを示します。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <param name="graphics">参照可能範囲をテストする <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>このメソッドは、指定した点がこの <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の中に含まれる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 配列と <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 配列を空にし、<see cref="T:System.Drawing.Drawing2D.FillMode" /> を <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /> に設定します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> の <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 配列内の点の順序を反転します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
      <summary>この <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> にマーカーを設定します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
      <summary>現在の図形を閉じずに、新しい図形を開始します。 それ以降パスに追加されたすべての点は、この新しい図形に追加されます。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>この <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に変換行列を適用します。</summary>
      <param name="matrix">適用する変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に、四角形と平行四辺形によって定義されたワープ変換を適用します。</summary>
      <param name="destPoints">
        <paramref name="srcRect" /> によって定義された四角形を変形した結果の平行四辺形を定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。 配列には、3 つまたは 4 つの要素を含めることができます。 配列に 3 つの要素が含まれている場合、平行四辺形の右下の頂点は最初の 3 つの点から類推されます。</param>
      <param name="srcRect">
        <paramref name="destPoints" /> によって定義された平行四辺形に変形される四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に、四角形と平行四辺形によって定義されたワープ変換を適用します。</summary>
      <param name="destPoints">
        <paramref name="srcRect" /> によって定義された四角形を変形した結果の平行四辺形を定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。 配列には、3 つまたは 4 つの要素を含めることができます。 配列に 3 つの要素が含まれている場合、平行四辺形の右下の頂点は最初の 3 つの点から類推されます。</param>
      <param name="srcRect">
        <paramref name="destPoints" /> によって定義された平行四辺形に変形される四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="matrix">パスに適用するジオメトリック変換を指定する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に、四角形と平行四辺形によって定義されたワープ変換を適用します。</summary>
      <param name="destPoints">
        <paramref name="srcRect" /> によって定義された四角形を変形した結果、作成される平行四辺形を定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。 配列には、3 つまたは 4 つの要素を含めることができます。 配列に 3 つの要素が含まれている場合、平行四辺形の右下の頂点は最初の 3 つの点から類推されます。</param>
      <param name="srcRect">
        <paramref name="destPoints" /> によって定義された平行四辺形に変形される四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="matrix">パスに適用するジオメトリック変換を指定する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="warpMode">この変形操作で遠近モードまたは双一次モードを使用するかどうかを指定する <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 列挙体。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に、四角形と平行四辺形によって定義されたワープ変換を適用します。</summary>
      <param name="destPoints">
        <paramref name="srcRect" /> によって定義された四角形を変形した結果の平行四辺形を定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。 配列には、3 つまたは 4 つの要素を含めることができます。 配列に 3 つの要素が含まれている場合、平行四辺形の右下の頂点は最初の 3 つの点から類推されます。</param>
      <param name="srcRect">
        <paramref name="destPoints" /> によって定義された平行四辺形に変形される四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="matrix">パスに適用するジオメトリック変換を指定する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="warpMode">この変形操作で遠近モードまたは双一次モードを使用するかどうかを指定する <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 列挙体。</param>
      <param name="flatness">結果として生成されたパスの平坦度を指定する 0 から 1 の値。 詳細については、<see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> メソッドのトピックを参照してください。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
      <summary>パスに追加のアウトラインを追加します。</summary>
      <param name="pen">パスの元のアウトラインと、このメソッドが作成する新しいアウトラインの間の幅を指定する <see cref="T:System.Drawing.Pen" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> に別のアウトラインを追加します。</summary>
      <param name="pen">パスの元のアウトラインと、このメソッドが作成する新しいアウトラインの間の幅を指定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="matrix">幅の拡張前にパスに適用する変換を指定する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>この <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> を、指定されたペンでこのパスを描画するときに塗りつぶされる領域を囲む曲線に置換します。</summary>
      <param name="pen">パスの元のアウトラインと、このメソッドが作成する新しいアウトラインの間の幅を指定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="matrix">幅の拡張前にパスに適用する変換を指定する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="flatness">曲線の平坦度を指定する値。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
      <summary>この <see cref="T:System.Drawing.Drawing2D.FillMode" /> の形状の内部を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 列挙体を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> の形状の内部を塗りつぶす方法を指定する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 列挙体。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
      <summary>この <see cref="T:System.Drawing.Drawing2D.PathData" /> の点 (<paramref name="points" />) と型 (<paramref name="types" />) の配列をカプセル化する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.PathData" /> の点と型の両方の配列をカプセル化する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
      <summary>パスのポイントを取得します。</summary>
      <returns>パスを表す <see cref="T:System.Drawing.PointF" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 配列内の対応する点の型を取得します。</summary>
      <returns>パス内の対応する点の型を指定するバイトの配列。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 配列または <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 配列内の要素の数を取得します。</summary>
      <returns>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 配列または <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 配列内の要素の数を示す整数。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPathIterator">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 内のサブパスを反復処理し、各サブパスに含まれている図形の種類を調べることができるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> オブジェクトを指定して、<see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">このヘルパー クラスを初期化する対象となる <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> に関連付けられている <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> プロパティ配列および <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> プロパティ配列を、指定された 2 つの配列にコピーします。</summary>
      <param name="points">戻り時には、パス内の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列が格納されます。</param>
      <param name="types">戻り時には、パス内の点の種類を表すバイトの配列が格納されます。</param>
      <param name="startIndex">配列の開始インデックスを指定します。</param>
      <param name="endIndex">配列の終了インデックスを指定します。</param>
      <returns>コピーする点の数。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
      <summary>この <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> に関連付けられている <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> プロパティ配列および <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> プロパティ配列を、指定された 2 つの配列にコピーします。</summary>
      <param name="points">戻り時には、パス内の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列が格納されます。</param>
      <param name="types">戻り時には、パス内の点の種類を表すバイトの配列が格納されます。</param>
      <returns>コピーする点の数。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> に関連付けられているパスに曲線が含まれているかどうかを示します。</summary>
      <returns>このメソッドは、現在のサブパスに曲線が含まれている場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> オブジェクトには、<see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクトが関連付けられています。 <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> メソッドは、関連付けられている <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> のパス内の次のマーカーを指すように反復子をインクリメントし、現在のマーカーと次のマーカー (またはパスの終点) の間に含まれているすべての点を、パラメーターに渡された 2 番目の <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクトにコピーします。</summary>
      <param name="path">点のコピー先の <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト。</param>
      <returns>現在のマーカーと次のマーカーの間にある点の数。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> をインクリメントしてパス内の次のマーカーに進め、[out] パラメーターを使用して開始インデックスと終了インデックスを返します。</summary>
      <param name="startIndex">[出力] このパラメーターに渡される整数参照が、サブパスの開始点のインデックスを受け取ります。</param>
      <param name="endIndex">[出力] このパラメーターに渡される整数参照が、<paramref name="startIndex" /> が指すサブパスの終了点のインデックスを受け取ります。</param>
      <returns>現在のマーカーと次のマーカーの間にある点の数。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
      <summary>すべてが同じ種類のデータ点から成る次のグループの開始インデックスと終了インデックスを取得します。</summary>
      <param name="pathType">[出力] グループのすべてのポイントで共有されるポイント タイプを受け取ります。 返される可能性があるタイプは、<see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列挙体から取得できます。</param>
      <param name="startIndex">[出力] ポイント グループの開始インデックスを受け取ります。</param>
      <param name="endIndex">[出力] ポイント グループの終了インデックスを受け取ります。</param>
      <returns>このメソッドは、グループ内のデータ点の数を返します。 パスにそれ以上グループがない場合は、0 を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
      <summary>この <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> の関連付けられているパスから、次の図形 (サブパス) を取得します。</summary>
      <param name="path">保持するデータ点が、反復子で取得した図形 (サブパス) のデータ点と一致するように設定されている <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <param name="isClosed">[出力] 現在のサブパスが閉じられているかどうかを示します。 図形が閉じられている場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</param>
      <returns>取得した図形 (サブパス) 内のデータ点の数。 それ以上図形がない場合は、0 を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> をパス内の次のサブパスに移動します。 次のサブパスの開始インデックスおよび終了インデックスが、[out] パラメーターに格納されます。</summary>
      <param name="startIndex">[出力] 次のサブパスの開始インデックスを受け取ります。</param>
      <param name="endIndex">[出力] 次のサブパスの終了インデックスを受け取ります。</param>
      <param name="isClosed">[出力] サブパスが閉じられているかどうかを示します。</param>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト内のサブパスの数。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> が指す位置を、関連付けられているパスの先頭に戻します。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
      <summary>パス内の点の数を取得します。</summary>
      <returns>パス内の点の数。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
      <summary>パス内のサブパスの数を取得します。</summary>
      <returns>パス内のサブパスの数。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsState">
      <summary>
        <see cref="T:System.Drawing.Graphics" /> オブジェクトの状態を表します。 このオブジェクトは、<see cref="M:System.Drawing.Graphics.Save" /> メソッドへの呼び出しで返されます。 このクラスは継承できません。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchBrush">
      <summary>ハッチ スタイル、前景色、背景色を持つ四角形ブラシを定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 列挙体と前景色を使用して、<see cref="T:System.Drawing.Drawing2D.HatchBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="hatchstyle">この <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> で描画されるパターンを表す <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 値の 1 つ。</param>
      <param name="foreColor">この <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> で描画される線の色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 列挙体、前景色、背景色を使用して、<see cref="T:System.Drawing.Drawing2D.HatchBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="hatchstyle">この <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> で描画されるパターンを表す <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 値の 1 つ。</param>
      <param name="foreColor">この <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> で描画される線の色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="backColor">この <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> で描画される線間の領域の色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.Clone">
      <summary>この <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> オブジェクトの同一コピーを作成します。</summary>
      <returns>このメソッドが作成し、オブジェクトとしてキャストされる <see cref="T:System.Drawing.Drawing2D.HatchBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.BackgroundColor">
      <summary>この <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> オブジェクトで描画されるハッチ線間の領域の色を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Color" /> の背景色を表す <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.ForegroundColor">
      <summary>この <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> オブジェクトで描画されるハッチ線の色を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Color" /> の前景色を表す <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.HatchStyle">
      <summary>この <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> オブジェクトのハッチ スタイルを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> のパターンを表す <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 値の 1 つ。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchStyle">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> オブジェクトで利用できるさまざまなパターンを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal">
      <summary>右上から左下への対角線のパターン。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Cross">
      <summary>交差する水平および垂直の線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkDownwardDiagonal">
      <summary>上の点から下の点へ右に傾斜し、<see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" /> よりも間隔が 50% 狭く、幅が 2 倍の対角線を指定します。 このハッチ パターンはアンチエイリアス処理されません。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkHorizontal">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> よりも間隔が 50% 狭く、幅が <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> の 2 倍の水平線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkUpwardDiagonal">
      <summary>上の点から下の点へ左に傾斜し、<see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" /> よりも間隔が 50% 狭く、幅が 2 倍で、線がアンチエイリアス処理されない対角線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkVertical">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> よりも間隔が 50% 狭く、幅が 2 倍の垂直線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedDownwardDiagonal">
      <summary>上の点から下の点へ右に傾斜した、破線の対角線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedHorizontal">
      <summary>破線の水平線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedUpwardDiagonal">
      <summary>上の点から下の点へ左に傾斜した、破線の対角線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedVertical">
      <summary>破線の垂直線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalBrick">
      <summary>上の点から下の点へ左に傾斜した、積み重ねたレンガ状のハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalCross">
      <summary>十字模様の対角線のパターン。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Divot">
      <summary>芝生のように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedDiamond">
      <summary>それぞれがドットで構成されて交差する、右上がりと左上がりの対角線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedGrid">
      <summary>それぞれがドットで構成されて交差する、水平線と垂直線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal">
      <summary>左上から右下への対角線のパターン。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Horizontal">
      <summary>水平線のパターン。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.HorizontalBrick">
      <summary>レンガを水平に積み上げたように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeCheckerBoard">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard" /> の 2 倍のサイズの正方形による、チェッカーボードのように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeConfetti">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti" /> よりも大きいピースから構成される、紙吹雪のように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeGrid">
      <summary>ハッチ スタイル <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" /> を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightDownwardDiagonal">
      <summary>上の点から下の点へ右に傾斜し、<see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" /> よりも間隔が 50% 狭く、アンチエイリアス処理されない対角線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal">
      <summary>間隔が <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> よりも 50% 狭い水平線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightUpwardDiagonal">
      <summary>上の点から下の点へ左に傾斜し、<see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" /> よりも間隔が 50% 狭く、アンチエイリアス処理されない対角線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightVertical">
      <summary>間隔が <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> よりも 50% 狭い垂直線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Max">
      <summary>ハッチ スタイル <see cref="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond" /> を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Min">
      <summary>ハッチ スタイル <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowHorizontal">
      <summary>間隔がハッチ スタイル <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> よりも 75% 狭い (または <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal" /> よりも 25% 狭い) 水平線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowVertical">
      <summary>間隔がハッチ スタイル <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> よりも 75% 狭い (または <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightVertical" /> よりも 25% 狭い) 垂直線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.OutlinedDiamond">
      <summary>交差する右上がりと左上がりの線で、アンチエイリアス処理されない対角線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent05">
      <summary>5% のハッチを指定します。 前景色の背景色に対する割合は、5 : 95 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent10">
      <summary>10% のハッチを指定します。 前景色の背景色に対する割合は、10 : 90 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent20">
      <summary>20% のハッチを指定します。 前景色の背景色に対する割合は、20 : 80 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent25">
      <summary>25% のハッチを指定します。 前景色の背景色に対する割合は、25 : 75 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent30">
      <summary>30% のハッチを指定します。 前景色の背景色に対する割合は、30 : 70 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent40">
      <summary>40% のハッチを指定します。 前景色の背景色に対する割合は、40 : 60 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent50">
      <summary>50% のハッチを指定します。 前景色の背景色に対する割合は、50 : 50 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent60">
      <summary>60% のハッチを指定します。 前景色の背景色に対する割合は、60 : 40 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent70">
      <summary>70% のハッチを指定します。 前景色の背景色に対する割合は、70 : 30 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent75">
      <summary>75% のハッチを指定します。 前景色の背景色に対する割合は、75 : 25 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent80">
      <summary>80% のハッチを指定します。 前景色の背景色に対する割合は、80 : 100 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent90">
      <summary>90% のハッチを指定します。 前景色の背景色に対する割合は、90 : 10 です。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Plaid">
      <summary>格子柄の生地のように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Shingle">
      <summary>上の点から下の点へ右に傾斜した、対角線状に積み重ねた板屋根のように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard">
      <summary>チェッカーボードのように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti">
      <summary>紙吹雪のように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallGrid">
      <summary>間隔がハッチ スタイル <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" /> よりも 50% 狭い、交差する水平線と垂直線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond">
      <summary>斜めに置かれたチェッカーボードのように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Sphere">
      <summary>交互に並べた球体のように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Trellis">
      <summary>四目格子のように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Vertical">
      <summary>垂直線のパターン。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Wave">
      <summary>チルダで構成された水平線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Weave">
      <summary>織物のように見えるハッチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideDownwardDiagonal">
      <summary>上の点から下の点へ右に傾斜し、ハッチ スタイル <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" /> と間隔が等しく、幅が 3 倍で、アンチエイリアス処理されない対角線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideUpwardDiagonal">
      <summary>上の点から下の点へ左に傾斜し、ハッチ スタイル <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" /> と間隔が等しく、幅が 3 倍で、アンチエイリアス処理されない対角線を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ZigZag">
      <summary>ジグザグに構成された水平線を指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.InterpolationMode">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 列挙体は、イメージを拡大または回転するときのアルゴリズムを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bicubic">
      <summary>双三次補間を指定します。 事前フィルター処理は実行されません。 このモードは、イメージを元のサイズの 25% 以下にするような縮小処理には適していません。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bilinear">
      <summary>双一次補間を指定します。 事前フィルター処理は実行されません。 このモードは、イメージを元のサイズの 50% 以下にするような縮小処理には適していません。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Default">
      <summary>既定のモードを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.High">
      <summary>高品質補間を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic">
      <summary>高品質双三次補間を指定します。 事前フィルター処理が適用され、高品質の縮小処理が実行されます。 このモードを使用すると、変換後のイメージが高品質になります。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBilinear">
      <summary>高品質双一次補間を指定します。 事前フィルター処理が適用され、高品質の縮小処理が実行されます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Invalid">
      <summary>
        <see cref="F:System.Drawing.Drawing2D.QualityMode.Invalid" /> 列挙体の要素 <see cref="T:System.Drawing.Drawing2D.QualityMode" /> と等価。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Low">
      <summary>低品質補間を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.NearestNeighbor">
      <summary>最近傍補間を指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientBrush">
      <summary>線形グラデーションされた <see cref="T:System.Drawing.Brush" /> をカプセル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>指定したポイントと色で、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="point1">線形グラデーションの開始点を表す <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="point2">線形グラデーションの終了点を表す <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="color1">線形グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="color2">線形グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)">
      <summary>指定したポイントと色で、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="point1">線形グラデーションの開始点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="point2">線形グラデーションの終了点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="color1">線形グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="color2">線形グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>四角形、開始色、終了色、および方向に基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="rect">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="color1">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="color2">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="linearGradientMode">グラデーションの方向を指定する <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 列挙体要素。 方向によって、グラデーションの開始点と終了点が決まります。 たとえば、<see langword="LinearGradientMode.ForwardDiagonal" /> の場合、開始点は四角形の左上隅、終了点は四角形の右下隅になります。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>四角形、開始色、終了色、および方向の角度に基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="rect">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="color1">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="color2">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="angle">グラデーションの方向線を定義する、x 軸から時計回りで計測した角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>四角形、開始色、終了色、および方向の角度に基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="rect">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="color1">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="color2">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="angle">グラデーションの方向線を定義する、x 軸から時計回りで計測した角度。</param>
      <param name="isAngleScaleable">
        <see langword="true" /> に設定すると、この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> に関連付けられた変換によって角度が影響を受けることが指定されます。それ以外の場合は <see langword="false" /> に設定します。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>四角形、開始色、終了色、および方向のモードに基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> の新しいインスタンスを作成します。</summary>
      <param name="rect">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="color1">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="color2">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="linearGradientMode">グラデーションの方向を指定する <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 列挙体要素。 方向によって、グラデーションの開始点と終了点が決まります。 たとえば、<see langword="LinearGradientMode.ForwardDiagonal" /> の場合、開始点は四角形の左上隅、終了点は四角形の右下隅になります。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>四角形、開始色、終了色、および方向の角度に基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="rect">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="color1">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="color2">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="angle">グラデーションの方向線を定義する、x 軸から時計回りで計測した角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>四角形、開始色、終了色、および方向の角度に基づいて、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="rect">線形グラデーションの範囲を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="color1">グラデーションの開始色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="color2">グラデーションの終了色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="angle">グラデーションの方向線を定義する、x 軸から時計回りで計測した角度。</param>
      <param name="isAngleScaleable">
        <see langword="true" /> に設定すると、この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> に関連付けられた変換によって角度が影響を受けることが指定されます。それ以外の場合は <see langword="false" /> に設定します。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone">
      <summary>この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> の同一コピーを作成します。</summary>
      <returns>このメソッドが作成し、オブジェクトとしてキャストされる <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>指定された <see cref="T:System.Drawing.Drawing2D.Matrix" /> を先に適用するように指定して、<see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> のローカル ジオメトリック変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" /> に、この指定された <see cref="T:System.Drawing.Drawing2D.Matrix" /> を乗算します。</summary>
      <param name="matrix">ジオメトリック変換の乗算に使用する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> のローカル ジオメトリック変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" /> に、指定された <see cref="T:System.Drawing.Drawing2D.Matrix" /> を指定された順序で乗算します。</summary>
      <param name="matrix">ジオメトリック変換の乗算に使用する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">2 つの行列を乗算する順序を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> プロパティを ID にリセットします。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)">
      <summary>指定した分量だけローカル ジオメトリック変換を回転します。 このメソッドは変換の前に回転を行います。</summary>
      <param name="angle">回転角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した分量だけローカル ジオメトリック変換を回転します。</summary>
      <param name="angle">回転角度。</param>
      <param name="order">回転行列を後に適用するか、前に適用するかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>指定した分量だけローカル ジオメトリック変換をスケールします。 このメソッドは変換の前にスケーリング行列を適用します。</summary>
      <param name="sx">x 軸方向に変換をスケールする量。</param>
      <param name="sy">y 軸方向に変換をスケールする量。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した分量だけローカル ジオメトリック変換をスケールします。</summary>
      <param name="sx">x 軸方向に変換をスケールする量。</param>
      <param name="sy">y 軸方向に変換をスケールする量。</param>
      <param name="order">スケーリング行列を後に適用するか、前に適用するかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>中心の色、および両端の単色への線形の減色が設定されている線形グラデーションを作成します。</summary>
      <param name="focus">グラデーションの中心 (グラデーションの終了色だけで構成される点) を指定する 0 から 1 の値。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>中心の色、および両端の単色への線形の減色が設定されている線形グラデーションを作成します。</summary>
      <param name="focus">グラデーションの中心 (グラデーションの終了色だけで構成される点) を指定する 0 から 1 の値。</param>
      <param name="scale">開始色から <paramref name="focus" /> 終了色へ変化する度合いを指定する 0 ～ 1 の値。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>釣鐘型の曲線に基づいて、グラデーションの減色を作成します。</summary>
      <param name="focus">グラデーションの中央 (開始色と終了色が同量ずつブレンドされる点) を指定する 0 から 1 の値。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>釣鐘型の曲線に基づいて、グラデーションの減色を作成します。</summary>
      <param name="focus">グラデーションの中心 (グラデーションの終了色だけで構成される点) を指定する 0 から 1 の値。</param>
      <param name="scale">色が <paramref name="focus" /> に向かって変化する度合いを指定する 0 ～ 1 の値。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>指定した寸法でローカル ジオメトリック変換を平行移動します。 このメソッドは変換の前に平行移動を行います。</summary>
      <param name="dx">x 軸方向の平行移動の値。</param>
      <param name="dy">y 軸方向の平行移動の値。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した寸法だけローカル ジオメトリック変換を平行移動します。</summary>
      <param name="dx">x 軸方向の平行移動の値。</param>
      <param name="dy">y 軸方向の平行移動の値。</param>
      <param name="order">平行移動を適用する順序 (前または後)。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend">
      <summary>グラデーションのカスタムの減色を定義する位置と係数を保持した <see cref="T:System.Drawing.Drawing2D.Blend" /> を取得または設定します。</summary>
      <returns>グラデーションのカスタムの減色を表す <see cref="T:System.Drawing.Drawing2D.Blend" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> に対してガンマ補正が有効になっているかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> に対してガンマ補正が有効な場合の値は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors">
      <summary>複数の色による線形グラデーションを定義する <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> を取得または設定します。</summary>
      <returns>複数の色による線形グラデーションを定義する <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors">
      <summary>グラデーションの開始色と終了色を取得または設定します。</summary>
      <returns>グラデーションの開始色と終了色を表す 2 つの <see cref="T:System.Drawing.Color" /> 構造体の配列。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle">
      <summary>グラデーションの開始点と終了点を定義する四角形領域を取得します。</summary>
      <returns>グラデーションの開始点と終了点を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform">
      <summary>この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> に適用されるローカル ジオメトリック変換を定義する <see cref="T:System.Drawing.Drawing2D.Matrix" /> のコピーを取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> で描画する塗りつぶしにだけ適用されるジオメトリック変換を定義する <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> のコピー。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode">
      <summary>この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> のラップ モードを示す <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列挙体を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> を使用して描画された塗りつぶしをどのように並べるかを指定する <see cref="T:System.Drawing.Drawing2D.WrapMode" />。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientMode">
      <summary>線形グラデーションの方向を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.BackwardDiagonal">
      <summary>右上から左下へのグラデーションを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.ForwardDiagonal">
      <summary>左上から右下へのグラデーションを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Horizontal">
      <summary>左から右へのグラデーションを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Vertical">
      <summary>上から下へのグラデーションを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineCap">
      <summary>
        <see cref="T:System.Drawing.Pen" /> オブジェクトが線の末端で使用できるキャップ スタイルを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.AnchorMask">
      <summary>ライン キャップがアンカー キャップかどうかをチェックする際に使用するマスクを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.ArrowAnchor">
      <summary>矢印形のアンカー キャップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Custom">
      <summary>カスタム ライン キャップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.DiamondAnchor">
      <summary>菱形のアンカー キャップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Flat">
      <summary>平坦なライン キャップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.NoAnchor">
      <summary>アンカーなしを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Round">
      <summary>丸いライン キャップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.RoundAnchor">
      <summary>丸いアンカー キャップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Square">
      <summary>四角形のライン キャップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.SquareAnchor">
      <summary>四角形のアンカー ライン キャップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Triangle">
      <summary>三角形のライン キャップを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineJoin">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクトに含まれる図形 (サブパス) 内の、連続した直線または曲線を結合する方法を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Bevel">
      <summary>面取り接合を指定します。 斜めになった角が作成されます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Miter">
      <summary>鋭角接合を指定します。 マイタ長がマイタ制限値を超えているかどうかによって、鋭角的な角またはクリッピングされた角が作成されます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.MiterClipped">
      <summary>鋭角接合を指定します。 マイタ長がマイタ制限値を超えているかどうかによって、鋭角的な角または斜めになった角が作成されます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Round">
      <summary>角丸接合を指定します。 線の間に滑らかな円弧が作成されます。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.Matrix">
      <summary>ジオメトリック変換を表現する 3 × 3 のアフィン行列をカプセル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> クラスの新しいインスタンスを単位行列として初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> クラスの新しいインスタンスを初期化し、指定した四角形および点の配列で定義されたジオメトリック変換に設定します。</summary>
      <param name="rect">変換する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="plgpts">四角形の左上、右上、左下の各隅の変換先となる平行四辺形の点を表す 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。 平行四辺形の右下隅は、最初の 3 点から導き出されます。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> クラスの新しいインスタンスを初期化し、指定した四角形および点の配列で定義されたジオメトリック変換に設定します。</summary>
      <param name="rect">変換する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="plgpts">四角形の左上、右上、左下の各隅の変換先となる平行四辺形の点を表す 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。 平行四辺形の右下隅は、最初の 3 点から導き出されます。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>指定した要素を使用して、<see cref="T:System.Drawing.Drawing2D.Matrix" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="m11">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の最初の行の最初の列の値。</param>
      <param name="m12">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の最初の行の 2 番目の列の値。</param>
      <param name="m21">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の 2 番目の行の最初の列の値。</param>
      <param name="m22">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の 2 番目の行の 2 番目の列の値。</param>
      <param name="dx">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の 3 番目の行の最初の列の値。</param>
      <param name="dy">新しい <see cref="T:System.Drawing.Drawing2D.Matrix" /> の 3 番目の行の 2 番目の列の値。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Clone">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の同一コピーを作成します。</summary>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Dispose">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
      <summary>指定されたオブジェクトが <see cref="T:System.Drawing.Drawing2D.Matrix" /> であるかどうか、またこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> と同一であるかどうかをテストします。</summary>
      <param name="obj">テストするオブジェクト。</param>
      <returns>このメソッドは、<paramref name="obj" /> がこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> と同じオブジェクトで、指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> と同一である場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
      <summary>ハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Invert">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が反転できる場合に反転します。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> を前に付加することで、この <see cref="T:System.Drawing.Drawing2D.Matrix" /> と <paramref name="matrix" /> パラメーターで指定した行列を乗算します。</summary>
      <param name="matrix">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> と乗算する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> と <paramref name="matrix" /> パラメーターで指定した行列を、<paramref name="order" /> パラメーターで指定した順序で乗算します。</summary>
      <param name="matrix">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> と乗算する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">乗算の順序を表す <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Reset">
      <summary>単位行列の要素を持つように対象の <see cref="T:System.Drawing.Drawing2D.Matrix" /> をリセットします。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
      <summary>原点を中心とする指定した角度の時計回りの回転を、この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の前に付加します。</summary>
      <param name="angle">回転角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <paramref name="angle" /> パラメーターで指定した量の、原点 (x 座標と y 座標が 0) を中心とする時計回りの回転を、この <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</summary>
      <param name="angle">回転の角度 (エクステント)。</param>
      <param name="order">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> に回転を適用する順序 (前後どちらに付加するか) を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
      <summary>回転を前に付加することで、<paramref name="point" /> パラメーターで指定した点を中心とする時計回りの回転を、この <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</summary>
      <param name="angle">回転の角度 (エクステント)。</param>
      <param name="point">回転の中心を表す <see cref="T:System.Drawing.PointF" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した点を中心とする時計回りの回転を、指定した順序でこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</summary>
      <param name="angle">回転角度。</param>
      <param name="point">回転の中心を表す <see cref="T:System.Drawing.PointF" />。</param>
      <param name="order">回転を適用する順序 (前後どちらに付加するか) を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
      <summary>スケール ベクターを前に付加することで、指定したスケール ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</summary>
      <param name="scaleX">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を x 軸方向にスケールする値。</param>
      <param name="scaleY">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を y 軸方向にスケールする値。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序を使用して、指定したスケール ベクター (<paramref name="scaleX" /> と <paramref name="scaleY" />) をこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</summary>
      <param name="scaleX">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を x 軸方向にスケールする値。</param>
      <param name="scaleY">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を y 軸方向にスケールする値。</param>
      <param name="order">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> にスケール ベクターを適用する順序 (前後どちらに付加するか) を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
      <summary>傾斜変換を前に付加することで、指定した傾斜ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</summary>
      <param name="shearX">水平方向の傾斜係数。</param>
      <param name="shearY">垂直方向の傾斜係数。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した傾斜ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</summary>
      <param name="shearX">水平方向の傾斜係数。</param>
      <param name="shearY">垂直方向の傾斜係数。</param>
      <param name="order">傾斜を適用する順序 (前後どちらに付加するか) を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が表すジオメトリック変換を、指定した点の配列に適用します。</summary>
      <param name="pts">変換する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が表すジオメトリック変換を、指定した点の配列に適用します。</summary>
      <param name="pts">変換する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> のスケールおよび回転の成分だけを、指定した点の配列に適用します。</summary>
      <param name="pts">変換する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
      <summary>配列内の各ベクターを行列で乗算します。 この行列の平行移動要素 (3 番目の行) は無視されます。</summary>
      <param name="pts">変換する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
      <summary>平行移動ベクターを前に付加することで、指定した平行移動ベクター (<paramref name="offsetX" /> と <paramref name="offsetY" />) をこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</summary>
      <param name="offsetX">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を平行移動する x の値。</param>
      <param name="offsetY">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を平行移動する y の値。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した平行移動ベクターをこの <see cref="T:System.Drawing.Drawing2D.Matrix" /> に適用します。</summary>
      <param name="offsetX">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を平行移動する x の値。</param>
      <param name="offsetY">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> を平行移動する y の値。</param>
      <param name="order">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> に平行移動を適用する順序 (前後どちらに付加するか) を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
      <summary>配列内の各ベクターを行列で乗算します。 この行列の平行移動要素 (3 番目の行) は無視されます。</summary>
      <param name="pts">変換する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.Elements">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の要素を表す浮動小数点値の配列を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の要素を表す浮動小数点値の配列。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が単位行列かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> が単位行列の場合、このプロパティは <see langword="true" /> になります。それ以外の場合は <see langword="false" /> になります。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> が反転できるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> が反転できる場合、このプロパティは <see langword="true" /> になります。それ以外の場合は <see langword="false" /> になります。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetX">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の x 方向の平行移動値 (dx 値、すなわち 3 番目の行の最初の列の要素) を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の x 方向の平行移動値。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetY">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の y 方向の平行移動値 (dy 値、すなわち 3 番目の行の 2 番目の列の要素) を取得します。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> の y 方向の平行移動値。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.MatrixOrder">
      <summary>行列変換操作の順序を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Append">
      <summary>新しい操作が、古い操作の後に適用されます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Prepend">
      <summary>新しい操作が、古い操作の前に適用されます。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathData">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクトを構成するグラフィカル データが含まれます。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathData.#ctor">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.PathData" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Points">
      <summary>パスの生成に使用される点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列を取得または設定します。</summary>
      <returns>パスの生成に使用される点を表す <see cref="T:System.Drawing.PointF" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Types">
      <summary>パス内の対応する点の型を取得または設定します。</summary>
      <returns>パス内の対応する点の型を指定するバイトの配列。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathGradientBrush">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクトの内部をグラデーションで塗りつぶす <see cref="T:System.Drawing.Brush" /> オブジェクトをカプセル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>パスを指定して、<see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">この <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> で塗りつぶす領域を定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])">
      <summary>点を指定して、<see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="points">パスの頂点を形成する点を表す複数の <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)">
      <summary>点とラップ モードを指定して、<see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="points">パスの頂点を形成する点を表す複数の <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="wrapMode">この <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> を使用して描画された塗りつぶしをどのように並べるかを指定する <see cref="T:System.Drawing.Drawing2D.WrapMode" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])">
      <summary>点を指定して、<see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="points">パスの頂点を形成する点を表す複数の <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)">
      <summary>点とラップ モードを指定して、<see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="points">パスの頂点を形成する点を表す複数の <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="wrapMode">この <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> を使用して描画された塗りつぶしをどのように並べるかを指定する <see cref="T:System.Drawing.Drawing2D.WrapMode" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.Clone">
      <summary>この <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> の同一コピーを作成します。</summary>
      <returns>このメソッドが作成し、オブジェクトとしてキャストされる <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>ブラシの変換行列に別の行列を掛け合わせることにより、そのブラシの変換行列を更新します。</summary>
      <param name="matrix">ブラシの現在の変換行列に掛け合わせる <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>ブラシの変換行列に別の行列を掛け合わせることにより、そのブラシの変換行列を更新します。</summary>
      <param name="matrix">ブラシの現在の変換行列に掛け合わせる <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">2 つの行列を乗算する順序を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform">
      <summary>
        <see cref="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" /> プロパティを ID にリセットします。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)">
      <summary>指定した分量だけローカル ジオメトリック変換を回転します。 このメソッドは変換の前に回転を行います。</summary>
      <param name="angle">回転の角度 (範囲)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した分量だけローカル ジオメトリック変換を回転します。</summary>
      <param name="angle">回転の角度 (範囲)。</param>
      <param name="order">回転行列を後に適用するか、前に適用するかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>指定した分量だけローカル ジオメトリック変換をスケールします。 このメソッドは変換の前にスケーリング行列を適用します。</summary>
      <param name="sx">x 軸方向の変換スケール係数。</param>
      <param name="sy">y 軸方向の変換スケール係数。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した分量だけローカル ジオメトリック変換をスケールします。</summary>
      <param name="sx">x 軸方向の変換スケール係数。</param>
      <param name="sy">y 軸方向の変換スケール係数。</param>
      <param name="order">スケーリング行列を後に適用するか、前に適用するかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>中心の色から周囲の色に向かって線形に減色していくグラデーションを作成します。</summary>
      <param name="focus">パスの中心から境界までの半径に沿って、中心の色の輝度が最も高くなる位置を指定する 0 から 1 の値。 この値が 1 (既定値) の場合、パスの中心の輝度が最も高くなります。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>中心の色から周囲の各色に向かって線形に減色していくグラデーションを作成します。</summary>
      <param name="focus">パスの中心から境界までの半径に沿って、中心の色の輝度が最も高くなる位置を指定する 0 から 1 の値。 この値が 1 (既定値) の場合、パスの中心の輝度が最も高くなります。</param>
      <param name="scale">境界の色とブレンドされる中心の色の最大輝度を指定する 0 から 1 の値。 この値が 1 の場合は、中心の色の輝度はできる限り高くなります。この値が既定値です。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>パスの中心から境界へと外側に向かって色が変化していくグラデーション ブラシを作成します。 色は、釣鐘型の曲線に基づいて、ある色から別の色へと変化していきます。</summary>
      <param name="focus">パスの中心から境界までの半径に沿って、中心の色の輝度が最も高くなる位置を指定する 0 から 1 の値。 この値が 1 (既定値) の場合、パスの中心の輝度が最も高くなります。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>パスの中心から境界へと外側に向かって色が変化していくグラデーション ブラシを作成します。 色は、釣鐘型の曲線に基づいて、ある色から別の色へと変化していきます。</summary>
      <param name="focus">パスの中心から境界までの半径に沿って、中心の色の輝度が最も高くなる位置を指定する 0 から 1 の値。 この値が 1 (既定値) の場合、パスの中心の輝度が最も高くなります。</param>
      <param name="scale">境界の色とブレンドされる中心の色の最大輝度を指定する 0 から 1 の値。 この値が 1 の場合は、中心の色の輝度はできる限り高くなります。この値が既定値です。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>ローカル ジオメトリック変換に、指定された平行移動を適用します。 このメソッドは変換の前に平行移動を行います。</summary>
      <param name="dx">x 軸方向の平行移動の値。</param>
      <param name="dy">y 軸方向の平行移動の値。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した平行移動をローカル ジオメトリック変換に適用します。</summary>
      <param name="dx">x 軸方向の平行移動の値。</param>
      <param name="dy">y 軸方向の平行移動の値。</param>
      <param name="order">平行移動を適用する順序 (前または後)。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Blend">
      <summary>グラデーションのカスタムの減色を定義する位置と係数を保持した <see cref="T:System.Drawing.Drawing2D.Blend" /> を取得または設定します。</summary>
      <returns>グラデーションのカスタムの減色を表す <see cref="T:System.Drawing.Drawing2D.Blend" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor">
      <summary>パス グラデーションの中心の色を取得または設定します。</summary>
      <returns>パス グラデーションの中心の色を表す <see cref="T:System.Drawing.Color" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint">
      <summary>パス グラデーションの中心点を取得または設定します。</summary>
      <returns>パス グラデーションの中心点を表す <see cref="T:System.Drawing.PointF" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales">
      <summary>グラデーションの減色の集束点を取得または設定します。</summary>
      <returns>グラデーションの減色の集束点を表す <see cref="T:System.Drawing.PointF" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors">
      <summary>複数の色による線形グラデーションを定義する <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> を取得または設定します。</summary>
      <returns>複数の色による線形グラデーションを定義する <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> に外接する四角形を取得します。</summary>
      <returns>
        <see cref="T:System.Drawing.RectangleF" /> で塗りつぶすパスに外接する四角形領域を表す <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> で塗りつぶすパス内の点に対応している色の配列を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Color" /> で塗りつぶすパスの各点に関連付けられた色を表す <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 構造体の配列。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Transform">
      <summary>この <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> に適用されるローカル ジオメトリック変換を定義する <see cref="T:System.Drawing.Drawing2D.Matrix" /> のコピーを取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> で描画する塗りつぶしにだけ適用されるジオメトリック変換を定義する <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> のコピー。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode">
      <summary>この <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> のラップ モードを示す <see cref="T:System.Drawing.Drawing2D.WrapMode" /> を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> を使用して描画された塗りつぶしをどのように並べるかを指定する <see cref="T:System.Drawing.Drawing2D.WrapMode" />。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathPointType">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクト内の点の種類を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier">
      <summary>既定のベジエ曲線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier3">
      <summary>3 次ベジエ曲線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.CloseSubpath">
      <summary>サブパスの終了点。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.DashMode">
      <summary>対応するセグメントはダッシュで描画されます。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Line">
      <summary>線分。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathMarker">
      <summary>パス マーカー。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathTypeMask">
      <summary>マスク ポイント。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Start">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクトの始点。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenAlignment">
      <summary>
        <see cref="T:System.Drawing.Pen" /> オブジェクトの、理論上の幅 0 の直線に対する配置を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Center">
      <summary>
        <see cref="T:System.Drawing.Pen" /> オブジェクトの中心が、理論上の線上に配置されることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Inset">
      <summary>
        <see cref="T:System.Drawing.Pen" /> が、理論上の線の内側に配置されることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Left">
      <summary>
        <see cref="T:System.Drawing.Pen" /> が、理論上の線の左側に配置されることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Outset">
      <summary>
        <see cref="T:System.Drawing.Pen" /> が、理論上の線の外側に配置されることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Right">
      <summary>
        <see cref="T:System.Drawing.Pen" /> が、理論上の線の右側に配置されることを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenType">
      <summary>
        <see cref="T:System.Drawing.Pen" /> オブジェクトが線の塗りつぶしに使用する、塗りつぶしの種類を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.HatchFill">
      <summary>ハッチの塗りつぶしを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.LinearGradient">
      <summary>線形グラデーションの塗りつぶしを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.PathGradient">
      <summary>パス グラデーションの塗りつぶしを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.SolidColor">
      <summary>単色の塗りつぶしを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.TextureFill">
      <summary>ビットマップ テクスチャの塗りつぶしを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PixelOffsetMode">
      <summary>レンダリング時のピクセルのオフセット方法を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Default">
      <summary>既定のモードを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Half">
      <summary>高速アンチエイリアス処理用に、ピクセルを水平と垂直の両方向に -.5 単位だけオフセットすることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighQuality">
      <summary>高品質で低速なレンダリングを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighSpeed">
      <summary>高速で、低品質のレンダリングを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Invalid">
      <summary>無効なモードを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.None">
      <summary>ピクセルをオフセットしないことを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.QualityMode">
      <summary>GDI+ オブジェクトのレンダリング時の全般的な品質を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Default">
      <summary>既定のモードを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.High">
      <summary>高品質で低速なレンダリングを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Invalid">
      <summary>無効なモードを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Low">
      <summary>低品質で、高速のレンダリングを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.RegionData">
      <summary>
        <see cref="T:System.Drawing.Region" /> オブジェクトを構成するデータをカプセル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.RegionData.Data">
      <summary>
        <see cref="T:System.Drawing.Region" /> オブジェクトを指定するバイトの配列を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Region" /> オブジェクトを指定するバイトの配列。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.SmoothingMode">
      <summary>直線、曲線、および塗りつぶし領域の境界線に、スムージング (アンチエイリアス処理) を適用するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.AntiAlias">
      <summary>アンチエイリアス処理されたレタリングを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Default">
      <summary>アンチエイリアス処理しないことを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighQuality">
      <summary>アンチエイリアス処理されたレタリングを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighSpeed">
      <summary>アンチエイリアス処理しないことを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Invalid">
      <summary>無効なモードを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.None">
      <summary>アンチエイリアス処理しないことを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WarpMode">
      <summary>
        <see cref="Overload:System.Drawing.Drawing2D.GraphicsPath.Warp" /> メソッドで適用される歪曲変形の種類を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Bilinear">
      <summary>双一次変形を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Perspective">
      <summary>遠近ワープを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WrapMode">
      <summary>テクスチャまたはグラデーションが塗りつぶし対象の領域よりも小さい場合の、並べ方を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Clamp">
      <summary>グラデーションまたはテクスチャは並べて表示されません。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Tile">
      <summary>グラデーションまたはテクスチャを並べて表示します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipX">
      <summary>テクスチャまたはグラデーションを水平方向に反転し、それを並べて表示します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipXY">
      <summary>テクスチャまたはグラデーションを水平および垂直方向に反転し、それを並べて表示します。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipY">
      <summary>テクスチャまたはグラデーションを垂直方向に反転し、それを並べて表示します。</summary>
    </member>
    <member name="T:System.Drawing.Font">
      <summary>フォント フェイス、サイズ、スタイルの各属性など、テキストの特定の書式を定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>指定した既存の <see cref="T:System.Drawing.Font" /> と <see cref="T:System.Drawing.FontStyle" /> 列挙体を使用する、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="prototype">新しい <see cref="T:System.Drawing.Font" /> の作成元となる既存の <see cref="T:System.Drawing.Font" />。</param>
      <param name="newStyle">新しい <see cref="T:System.Drawing.Font" /> に適用する <see cref="T:System.Drawing.FontStyle" />。 <see cref="T:System.Drawing.FontStyle" /> 列挙体の複数の値を <see langword="OR" /> 演算子と組み合わせることができます。</param>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)">
      <summary>指定したサイズを使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="family">新しい <see cref="T:System.Drawing.Font" /> の <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新しいフォントの em サイズ (単位はポイント)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
      <summary>指定したサイズとスタイルを使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="family">新しい <see cref="T:System.Drawing.Font" /> の <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新しいフォントの em サイズ (単位はポイント)。</param>
      <param name="style">新しいフォントの <see cref="T:System.Drawing.FontStyle" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>指定したサイズ、スタイル、および単位を使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="family">新しい <see cref="T:System.Drawing.Font" /> の <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新しいフォントの em サイズ (単位は <paramref name="unit" /> パラメーターで指定した値)。</param>
      <param name="style">新しいフォントの <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新しいフォントの <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>指定したサイズ、スタイル、単位、および文字セットを使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="family">新しい <see cref="T:System.Drawing.Font" /> の <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新しいフォントの em サイズ (単位は <paramref name="unit" /> パラメーターで指定した値)。</param>
      <param name="style">新しいフォントの <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新しいフォントの <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">次を指定する <see cref="T:System.Byte" />。 
 新しいフォントに使用する GDI 文字セットを指定する。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>指定したサイズ、スタイル、単位、および文字セットを使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="family">新しい <see cref="T:System.Drawing.Font" /> の <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新しいフォントの em サイズ (単位は <paramref name="unit" /> パラメーターで指定した値)。</param>
      <param name="style">新しいフォントの <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新しいフォントの <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">次を指定する <see cref="T:System.Byte" />。 
 このフォントに使用する GDI 文字セットを指定する。</param>
      <param name="gdiVerticalFont">新しいフォントが GDI 縦書きフォントから派生したフォントかどうかを示すブール値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> は <see langword="null" /> です</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)">
      <summary>指定したサイズと単位を使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。 スタイルを <see cref="F:System.Drawing.FontStyle.Regular" /> に設定します。</summary>
      <param name="family">新しい <see cref="T:System.Drawing.Font" /> の <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新しいフォントの em サイズ (単位は <paramref name="unit" /> パラメーターで指定した値)。</param>
      <param name="unit">新しいフォントの <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single)">
      <summary>指定したサイズを使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="familyName">新しい <see cref="T:System.Drawing.Font" /> に対する <see cref="T:System.Drawing.FontFamily" /> の文字列形式。</param>
      <param name="emSize">新しいフォントの em サイズ (単位はポイント)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
      <summary>指定したサイズとスタイルを使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="familyName">新しい <see cref="T:System.Drawing.Font" /> に対する <see cref="T:System.Drawing.FontFamily" /> の文字列形式。</param>
      <param name="emSize">新しいフォントの em サイズ (単位はポイント)。</param>
      <param name="style">新しいフォントの <see cref="T:System.Drawing.FontStyle" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>指定したサイズ、スタイル、および単位を使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="familyName">新しい <see cref="T:System.Drawing.Font" /> に対する <see cref="T:System.Drawing.FontFamily" /> の文字列形式。</param>
      <param name="emSize">新しいフォントの em サイズ (単位は <paramref name="unit" /> パラメーターで指定した値)。</param>
      <param name="style">新しいフォントの <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新しいフォントの <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>指定したサイズ、スタイル、単位、および文字セットを使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="familyName">新しい <see cref="T:System.Drawing.Font" /> に対する <see cref="T:System.Drawing.FontFamily" /> の文字列形式。</param>
      <param name="emSize">新しいフォントの em サイズ (単位は <paramref name="unit" /> パラメーターで指定した値)。</param>
      <param name="style">新しいフォントの <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新しいフォントの <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">このフォントに使用する GDI 文字セットを指定する <see cref="T:System.Byte" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>指定したサイズ、スタイル、単位、および文字セットを使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。</summary>
      <param name="familyName">新しい <see cref="T:System.Drawing.Font" /> に対する <see cref="T:System.Drawing.FontFamily" /> の文字列形式。</param>
      <param name="emSize">新しいフォントの em サイズ (単位は <paramref name="unit" /> パラメーターで指定した値)。</param>
      <param name="style">新しいフォントの <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新しいフォントの <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">このフォントに使用する GDI 文字セットを指定する <see cref="T:System.Byte" />。</param>
      <param name="gdiVerticalFont">新しい <see cref="T:System.Drawing.Font" /> が GDI 縦書きフォントから派生したフォントかどうかを示すブール値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)">
      <summary>指定したサイズと単位を使用して、新しい <see cref="T:System.Drawing.Font" /> を初期化します。 スタイルは <see cref="F:System.Drawing.FontStyle.Regular" /> に設定されます。</summary>
      <param name="familyName">新しい <see cref="T:System.Drawing.Font" /> に対する <see cref="T:System.Drawing.FontFamily" /> の文字列形式。</param>
      <param name="emSize">新しいフォントの em サイズ (単位は <paramref name="unit" /> パラメーターで指定した値)。</param>
      <param name="unit">新しいフォントの <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> が、0 以下であるか、無限大となるか、または有効な数値ではありません。</exception>
    </member>
    <member name="M:System.Drawing.Font.Clone">
      <summary>この <see cref="T:System.Drawing.Font" /> の同一コピーを作成します。</summary>
      <returns>このメソッドが作成し、<see cref="T:System.Object" /> としてキャストされる <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.Dispose">
      <summary>この <see cref="T:System.Drawing.Font" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Font.Equals(System.Object)">
      <summary>指定したオブジェクトが <see cref="T:System.Drawing.Font" /> であり、この <see cref="P:System.Drawing.Font.FontFamily" /> と同じ <see cref="P:System.Drawing.Font.GdiVerticalFont" />、<see cref="P:System.Drawing.Font.GdiCharSet" />、<see cref="P:System.Drawing.Font.Style" />、<see cref="P:System.Drawing.Font.Size" />、<see cref="P:System.Drawing.Font.Unit" />、および <see cref="T:System.Drawing.Font" /> の各プロパティ値を保有しているかどうかを示します。</summary>
      <param name="obj">テストするオブジェクト。</param>
      <returns>
        <paramref name="obj" /> パラメーターが <see cref="T:System.Drawing.Font" /> であり、この <see cref="T:System.Drawing.Font" /> と同じ <see cref="P:System.Drawing.Font.FontFamily" />、<see cref="P:System.Drawing.Font.GdiVerticalFont" />、<see cref="P:System.Drawing.Font.GdiCharSet" />、<see cref="P:System.Drawing.Font.Style" />、<see cref="P:System.Drawing.Font.Size" />、および <see cref="P:System.Drawing.Font.Unit" /> の各プロパティ値を保有している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Font.FromHdc(System.IntPtr)">
      <summary>デバイス コンテキストを識別する、指定した Windows ハンドルから <see cref="T:System.Drawing.Font" /> を作成します。</summary>
      <param name="hdc">デバイス コンテキストを識別するハンドル。</param>
      <exception cref="T:System.ArgumentException">指定したデバイス コンテキストのフォントが TrueType フォントではありません。</exception>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.FromHfont(System.IntPtr)">
      <summary>指定した Windows ハンドルから <see cref="T:System.Drawing.Font" /> を作成します。</summary>
      <param name="hfont">GDI フォントを識別する Windows ハンドル。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hfont" /> が TrueType フォントではないオブジェクトを指しています。</exception>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object)">
      <summary>指定した GDI 論理フォント (<c>LOGFONT</c>) 構造体から <see cref="T:System.Drawing.Font" /> を作成します。</summary>
      <param name="lf">
        <see cref="T:System.Drawing.Font" /> の作成元となる GDI <see langword="LOGFONT" /> 構造体を表す <see cref="T:System.Object" />。</param>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)">
      <summary>指定した GDI 論理フォント (<c>LOGFONT</c>) 構造体から <see cref="T:System.Drawing.Font" /> を作成します。</summary>
      <param name="lf">
        <see cref="T:System.Drawing.Font" /> の作成元となる GDI <see langword="LOGFONT" /> 構造体を表す <see cref="T:System.Object" />。</param>
      <param name="hdc">
        <paramref name="lf" /> 構造体についての追加情報を格納しているデバイス コンテキストを識別するハンドル。</param>
      <exception cref="T:System.ArgumentException">フォントが TrueType フォントではありません。</exception>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHashCode">
      <summary>この <see cref="T:System.Drawing.Font" /> のハッシュ コードを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Font" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight">
      <summary>フォントの行間 (ピクセル単位) を返します。</summary>
      <returns>フォントの行間 (ピクセル単位)。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)">
      <summary>このフォントの行間を、指定した <see cref="T:System.Drawing.Graphics" /> の現在の単位で返します。</summary>
      <param name="graphics">ページの単位とページのスケールの設定、および表示デバイスの垂直解像度 (dpi) を保持する <see cref="T:System.Drawing.Graphics" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> が <see langword="null" />です。</exception>
      <returns>フォントの行間 (ピクセル単位)。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Single)">
      <summary>垂直方向の指定の解像度でデバイスに描画した場合の、この <see cref="T:System.Drawing.Font" /> の高さ (ピクセル単位) を返します。</summary>
      <param name="dpi">フォントの高さの計算に使用する垂直方向の解像度 (dpi)。</param>
      <returns>この <see cref="T:System.Drawing.Font" /> の高さ (ピクセル単位)。</returns>
    </member>
    <member name="M:System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</summary>
      <param name="si">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
    </member>
    <member name="M:System.Drawing.Font.ToHfont">
      <summary>この <see cref="T:System.Drawing.Font" /> を識別するハンドルを返します。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">操作が失敗しました。</exception>
      <returns>この <see cref="T:System.Drawing.Font" /> を識別する Windows ハンドル。</returns>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object)">
      <summary>この <see cref="T:System.Drawing.Font" /> から GDI 論理フォント (<c>LOGFONT</c>) 構造体を作成します。</summary>
      <param name="logFont">このメソッドが作成する <see langword="LOGFONT" /> 構造体を表す <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)">
      <summary>この <see cref="T:System.Drawing.Font" /> から GDI 論理フォント (<c>LOGFONT</c>) 構造体を作成します。</summary>
      <param name="logFont">このメソッドが作成する <see langword="LOGFONT" /> 構造体を表す <see cref="T:System.Object" />。</param>
      <param name="graphics">
        <see langword="LOGFONT" /> 構造体の追加情報を提供する <see cref="T:System.Drawing.Graphics" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Font.ToString">
      <summary>この <see cref="T:System.Drawing.Font" /> をユーザーが判読できる文字列形式で返します。</summary>
      <returns>この <see cref="T:System.Drawing.Font" /> を表す文字列。</returns>
    </member>
    <member name="P:System.Drawing.Font.Bold">
      <summary>この <see cref="T:System.Drawing.Font" /> が太字かどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Font" /> が太字の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.FontFamily">
      <summary>この <see cref="T:System.Drawing.FontFamily" /> に関連付けられている <see cref="T:System.Drawing.Font" /> を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.FontFamily" /> に関連付けられている <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.GdiCharSet">
      <summary>この <see cref="T:System.Drawing.Font" /> で使用する GDI 文字セットを指定するバイト値を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Font" /> で使用する GDI 文字セットを指定するバイト値。 既定値は 1 です。</returns>
    </member>
    <member name="P:System.Drawing.Font.GdiVerticalFont">
      <summary>この <see cref="T:System.Drawing.Font" /> が GDI 縦書きフォントから派生したフォントかどうかを示すブール値を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Font" /> が GDI 縦書きフォントから派生している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Height">
      <summary>フォントの行間を取得します。</summary>
      <returns>フォントの行間 (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Drawing.Font.IsSystemFont">
      <summary>フォントが <see cref="T:System.Drawing.SystemFonts" /> のメンバーかどうかを示す値を取得します。</summary>
      <returns>フォントが <see cref="T:System.Drawing.SystemFonts" /> のメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Font.Italic">
      <summary>このフォントに斜体スタイルが適用されているかどうかを示す値を取得します。</summary>
      <returns>このフォントに斜体スタイルが適用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Name">
      <summary>この <see cref="T:System.Drawing.Font" /> の書体名を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Font" /> の書体名の文字列形式。</returns>
    </member>
    <member name="P:System.Drawing.Font.OriginalFontName">
      <summary>最初に指定したフォントの名前を取得します。</summary>
      <returns>最初に指定したフォントの名前を表す文字列。</returns>
    </member>
    <member name="P:System.Drawing.Font.Size">
      <summary>この <see cref="T:System.Drawing.Font" /> の em サイズを、<see cref="P:System.Drawing.Font.Unit" /> プロパティで指定した単位で取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Font" /> の em サイズ。</returns>
    </member>
    <member name="P:System.Drawing.Font.SizeInPoints">
      <summary>この <see cref="T:System.Drawing.Font" /> の em サイズ (ポイント) を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Font" /> の em サイズ (ポイント)。</returns>
    </member>
    <member name="P:System.Drawing.Font.Strikeout">
      <summary>この <see cref="T:System.Drawing.Font" /> がフォントを通る水平線を指定するかどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Font" /> がフォントを通る水平線を持っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Style">
      <summary>この <see cref="T:System.Drawing.Font" /> のスタイル情報を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.FontStyle" /> のスタイル情報が格納されている <see cref="T:System.Drawing.Font" /> 列挙体。</returns>
    </member>
    <member name="P:System.Drawing.Font.SystemFontName">
      <summary>
        <see cref="P:System.Drawing.Font.IsSystemFont" /> プロパティが <see langword="true" /> を返す場合は、システム フォントの名前を取得します。</summary>
      <returns>
        <see cref="P:System.Drawing.Font.IsSystemFont" /> が <see langword="true" /> を返す場合はシステム フォントの名前。それ以外の場合は空の文字列 ("")。</returns>
    </member>
    <member name="P:System.Drawing.Font.Underline">
      <summary>この <see cref="T:System.Drawing.Font" /> が下線付きかどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Font" /> が下線付きの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Unit">
      <summary>この <see cref="T:System.Drawing.Font" /> の長さの単位を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.GraphicsUnit" /> の長さの単位を表す <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="T:System.Drawing.FontConverter">
      <summary>あるデータ型の <see cref="T:System.Drawing.Font" /> オブジェクトを別の型に変換します。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.#ctor">
      <summary>新しい <see cref="T:System.Drawing.FontConverter" /> オブジェクトを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>対象のコンバーターが、指定した変換前の型のオブジェクトをそのコンバーターのネイティブな型に変換できるかどうかを確認します。</summary>
      <param name="context">フォーマッタ コンテキスト。 このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</param>
      <param name="sourceType">変換前の型。</param>
      <returns>オブジェクトが変換を実行できる場合、このメソッドは <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、コンテキストを使用してオブジェクトを特定の目的の型に変換できるかどうかを示す値を取得します。</summary>
      <param name="context">書式指定コンテキストを提供する <see langword="ITypeDescriptorContext" /> オブジェクト。</param>
      <param name="destinationType">変換後の型を表す <see cref="T:System.Type" /> オブジェクト。</param>
      <returns>このメソッドは、コンバーターが変換を実行できる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトをコンバーターのネイティブな型に変換します。</summary>
      <param name="context">フォーマッタ コンテキスト。 このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</param>
      <param name="culture">フォントを表すときに使用するカルチャを指定する <see langword="CultureInfo" /> オブジェクト。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <exception cref="T:System.NotSupportedException">変換できませんでした。</exception>
      <returns>変換後のオブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したオブジェクトを別の型に変換します。</summary>
      <param name="context">フォーマッタ コンテキスト。 このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</param>
      <param name="culture">オブジェクトを表すときに使用するカルチャを指定する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">オブジェクトの変換後のデータ型。</param>
      <exception cref="T:System.NotSupportedException">変換が成功しませんでした。</exception>
      <returns>変換後のオブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>この型のオブジェクトそのオブジェクトのプロパティ値の指定のセットを使用して作成します。</summary>
      <param name="context">追加のコンテキストが提供されるときに使用する型記述子。</param>
      <param name="propertyValues">新しいプロパティ値のディクショナリ。 このディクショナリには、名前と値の一連のペアが格納されています。各プロパティに対する名前と値のペアは、<see cref="Overload:System.Drawing.FontConverter.GetProperties" /> メソッドから返されます。</param>
      <returns>新しく作成したオブジェクト。オブジェクトを作成できなかった場合は <see langword="null" />。 既定の実装では、<see langword="null" /> が返されます。  
  
 <see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> は、変更できるプロパティを持つ変更できないオブジェクトを作成する場合に便利です。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトの値を変更するために、<see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> メソッドを呼び出して新しい値を作成する必要があるかどうかを判断します。</summary>
      <param name="context">追加のコンテキストが提供されるときに使用する型記述子。</param>
      <returns>このオブジェクトの 1 つ以上のプロパティを変更したときに、<see langword="true" /> オブジェクトを呼び出す必要がある場合は <see langword="CreateInstance" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>この型のプロパティ セットを取得します。 既定では、型はプロパティを返しません。</summary>
      <param name="context">追加のコンテキストが提供されるときに使用する型記述子。</param>
      <param name="value">プロパティを取得する対象となるオブジェクトの値。</param>
      <param name="attributes">プロパティを説明する <see cref="T:System.Attribute" /> オブジェクトの配列。</param>
      <returns>このデータ型で公開する必要があるプロパティ セット。 プロパティを公開する必要がない場合は、<see langword="null" /> を返すことがあります。 既定の実装では、常に <see langword="null" /> を返します。  
  
このメソッドの簡単な実装を用意すると、適切なデータ型の <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> メソッドを呼び出すことができます。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトがプロパティをサポートしているかどうかを確認します。 既定値は、<see langword="false" /> です。</summary>
      <param name="context">追加のコンテキストが提供されるときに使用する型記述子。</param>
      <returns>このオブジェクトのプロパティを見つけるために <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> メソッドを呼び出す必要がある場合、このメソッドは <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="T:System.Drawing.FontConverter.FontNameConverter">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> は、フォント名と他の表現とを相互に変換するために使用する型コンバーターです。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、任意の型のオブジェクトをコンバーターのネイティブな型に変換できるかどうかを判断します。</summary>
      <param name="context">このコンバーターを起動している環境についての追加情報を抽出するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</param>
      <param name="sourceType">変換元の型。</param>
      <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>特定のオブジェクトをコンバーターのネイティブな型に変換します。</summary>
      <param name="context">このコンバーターを起動している環境についての追加情報を抽出するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</param>
      <param name="culture">変換を実行するために使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <exception cref="T:System.NotSupportedException">変換を完了できません。</exception>
      <returns>変換後のオブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このコンバーターがデザインされた対象のデータ型の標準値のセットを含むコレクションを取得します。</summary>
      <param name="context">このコンバーターを起動している環境についての追加情報を抽出するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</param>
      <returns>有効値の標準セットが格納されているコレクション、または <see langword="null" />。 既定値は、<see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> メソッドから返される標準値のリストが除外リストであるかどうかを判断します。</summary>
      <param name="context">このコンバーターを起動している環境についての追加情報を抽出するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</param>
      <returns>
        <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> から返されたコレクションが有効値の除外リストである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>リストから選択できる値の標準セットをオブジェクトがサポートしているかどうかを確認します。</summary>
      <param name="context">このコンバーターを起動している環境についての追加情報を抽出するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</param>
      <returns>オブジェクトがサポートしている標準値セットを見つけるために <see langword="true" /> を呼び出す必要がある場合は <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose">
      <summary>アンマネージ リソースの解放またはリセットに関連付けられているアプリケーション定義のタスクを実行します。</summary>
    </member>
    <member name="T:System.Drawing.FontConverter.FontUnitConverter">
      <summary>フォント単位の種類を変換します。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontUnitConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <see cref="T:System.Drawing.Font" /> 型に有効な標準値のコレクションを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.Drawing.FontFamily">
      <summary>基本デザインが同様でスタイルが異なるタイプフェイスのグループを定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)">
      <summary>指定した汎用フォント ファミリから新しい <see cref="T:System.Drawing.FontFamily" /> を初期化します。</summary>
      <param name="genericFamily">新しい <see cref="T:System.Drawing.FontFamily" /> の作成元の <see cref="T:System.Drawing.Text.GenericFontFamilies" />。</param>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String)">
      <summary>指定した名前を使用して、新しい <see cref="T:System.Drawing.FontFamily" /> を初期化します。</summary>
      <param name="name">新しい <see cref="T:System.Drawing.FontFamily" /> の名前。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> が空の文字列 ("") です。  
  
- または - 
 <paramref name="name" /> では、アプリケーションを実行しているコンピューターにインストールされていないフォントを指定します。  
  
- または - 
 <paramref name="name" /> では、TrueType フォントでないフォントを指定します。</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)">
      <summary>指定した名前を使用して、指定した <see cref="T:System.Drawing.Text.FontCollection" /> の新しい <see cref="T:System.Drawing.FontFamily" /> を初期化します。</summary>
      <param name="name">新しい <see cref="T:System.Drawing.FontFamily" /> の名前を表す <see cref="T:System.String" />。</param>
      <param name="fontCollection">この <see cref="T:System.Drawing.FontFamily" /> を格納している <see cref="T:System.Drawing.Text.FontCollection" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> が空の文字列 ("") です。  
  
- または - 
 <paramref name="name" /> では、アプリケーションを実行しているコンピューターにインストールされていないフォントを指定します。  
  
- または - 
 <paramref name="name" /> では、TrueType フォントでないフォントを指定します。</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.Dispose">
      <summary>この <see cref="T:System.Drawing.FontFamily" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.Equals(System.Object)">
      <summary>指定したオブジェクトが <see cref="T:System.Drawing.FontFamily" /> であるかどうか、またこの <see cref="T:System.Drawing.FontFamily" /> と同一であるかどうかを示します。</summary>
      <param name="obj">テストするオブジェクト。</param>
      <returns>
        <paramref name="obj" /> が <see cref="T:System.Drawing.FontFamily" /> であり、この <see cref="T:System.Drawing.FontFamily" /> と同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)">
      <summary>指定したスタイルの <see cref="T:System.Drawing.FontFamily" /> のセル アセントをデザイン単位で返します。</summary>
      <param name="style">フォントのスタイル情報が格納されている <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>指定した <see cref="T:System.Drawing.FontFamily" /> を使用するこの <see cref="T:System.Drawing.FontStyle" /> のセル アセント。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)">
      <summary>指定したスタイルの <see cref="T:System.Drawing.FontFamily" /> のセル ディセントをデザイン単位で返します。</summary>
      <param name="style">フォントのスタイル情報が格納されている <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>指定した <see cref="T:System.Drawing.FontFamily" /> を使用するこの <see cref="T:System.Drawing.FontStyle" /> のセル ディセント メトリック。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)">
      <summary>指定したスタイルの em 四角形の高さをフォント デザイン単位で取得します。</summary>
      <param name="style">em 高の取得対象となる <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>em 四角形の高さ。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)">
      <summary>指定したグラフィックス コンテキストで使用可能な <see cref="T:System.Drawing.FontFamily" /> オブジェクトがすべて含まれている配列を返します。</summary>
      <param name="graphics">
        <see cref="T:System.Drawing.FontFamily" /> オブジェクトを返す <see cref="T:System.Drawing.Graphics" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> が <see langword="null" />です。</exception>
      <returns>指定した <see cref="T:System.Drawing.FontFamily" /> オブジェクトで使用可能な <see cref="T:System.Drawing.Graphics" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetHashCode">
      <summary>この <see cref="T:System.Drawing.FontFamily" /> のハッシュ コードを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.FontFamily" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)">
      <summary>指定したスタイルの <see cref="T:System.Drawing.FontFamily" /> の行間をデザイン単位で返します。 行間とは、2 つの連続するテキスト行のベース ライン間の垂直距離です。</summary>
      <param name="style">適用する <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>連続する 2 つのテキスト行の間隔。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetName(System.Int32)">
      <summary>この <see cref="T:System.Drawing.FontFamily" /> の名前を指定の言語で返します。</summary>
      <param name="language">返される名前の言語。</param>
      <returns>この <see cref="T:System.String" /> の名前を指定の言語で表す <see cref="T:System.Drawing.FontFamily" />。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)">
      <summary>指定した <see cref="T:System.Drawing.FontStyle" /> 列挙体が使用可能かどうかを示します。</summary>
      <param name="style">テスト対象の <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>指定した <see cref="T:System.Drawing.FontStyle" /> を使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.ToString">
      <summary>この <see cref="T:System.Drawing.FontFamily" /> をユーザーが判読できる文字列形式に変換します。</summary>
      <returns>この <see cref="T:System.Drawing.FontFamily" /> を表す文字列。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Families">
      <summary>現在のグラフィックス コンテキストに関連付けられている <see cref="T:System.Drawing.FontFamily" /> オブジェクトがすべて含まれている配列を返します。</summary>
      <returns>現在のグラフィックス コンテキストが関連付けられている <see cref="T:System.Drawing.FontFamily" /> オブジェクトの配列。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericMonospace">
      <summary>汎用固定幅 <see cref="T:System.Drawing.FontFamily" /> を取得します。</summary>
      <returns>汎用固定幅フォントを表す <see cref="T:System.Drawing.FontFamily" />。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSansSerif">
      <summary>汎用サン セリフ <see cref="T:System.Drawing.FontFamily" /> オブジェクトを取得します。</summary>
      <returns>汎用サン セリフ フォントを表す <see cref="T:System.Drawing.FontFamily" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSerif">
      <summary>汎用セリフ <see cref="T:System.Drawing.FontFamily" /> を取得します。</summary>
      <returns>汎用セリフ フォントを表す <see cref="T:System.Drawing.FontFamily" />。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Name">
      <summary>この <see cref="T:System.Drawing.FontFamily" /> の名前を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.FontFamily" /> の名前を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Drawing.FontStyle">
      <summary>テキストに適用するスタイル情報を指定します。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Bold">
      <summary>太字テキスト。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Italic">
      <summary>斜体テキスト。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Regular">
      <summary>標準テキスト。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Strikeout">
      <summary>中央に線が引かれているテキスト。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Underline">
      <summary>下線付きテキスト。</summary>
    </member>
    <member name="T:System.Drawing.Graphics">
      <summary>GDI+ 描画サーフェイスをカプセル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
      <summary>現在の <see cref="T:System.Drawing.Imaging.Metafile" /> にコメントを追加します。</summary>
      <param name="data">コメントが含まれているバイトの配列。</param>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の現在の状態でグラフィックス コンテナーを保存し、新しいグラフィックス コンテナーを開いて使用します。</summary>
      <returns>このメソッドは、メソッドが呼び出された時点での <see cref="T:System.Drawing.Graphics" /> の状態を表す <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の現在の状態でグラフィックス コンテナーを保存し、指定したスケール変換を行った新しいグラフィックス コンテナーを開いて使用します。</summary>
      <param name="dstrect">
        <paramref name="srcrect" /> パラメーターと共にコンテナーのスケール変換を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcrect">
        <paramref name="dstrect" /> パラメーターと共にコンテナーのスケール変換を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="unit">コンテナーの長さの単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <returns>このメソッドは、メソッドが呼び出された時点での <see cref="T:System.Drawing.Graphics" /> の状態を表す <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の現在の状態でグラフィックス コンテナーを保存し、指定したスケール変換を行った新しいグラフィックス コンテナーを開いて使用します。</summary>
      <param name="dstrect">
        <paramref name="srcrect" /> パラメーターと共に新しいグラフィックス コンテナーのスケール変換を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcrect">
        <paramref name="dstrect" /> パラメーターと共に新しいグラフィックス コンテナーのスケール変換を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="unit">コンテナーの長さの単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <returns>このメソッドは、メソッドが呼び出された時点での <see cref="T:System.Drawing.Graphics" /> の状態を表す <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
      <summary>描画サーフェイス全体を消去し、指定した背景色で塗りつぶします。</summary>
      <param name="color">描画サーフェイスの背景色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
      <summary>画面から <see cref="T:System.Drawing.Graphics" /> の描画サーフェイスへの、ピクセルの四角形に対応する色データのビット ブロック転送を実行します。</summary>
      <param name="upperLeftSource">転送元の四角形の左上隅の点。</param>
      <param name="upperLeftDestination">転送先の四角形の左上隅の点。</param>
      <param name="blockRegionSize">転送される領域のサイズ。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>画面から <see cref="T:System.Drawing.Graphics" /> の描画サーフェイスへの、ピクセルの四角形に対応する色データのビット ブロック転送を実行します。</summary>
      <param name="upperLeftSource">転送元の四角形の左上隅の点。</param>
      <param name="upperLeftDestination">転送先の四角形の左上隅の点。</param>
      <param name="blockRegionSize">転送される領域のサイズ。</param>
      <param name="copyPixelOperation">
        <see cref="T:System.Drawing.CopyPixelOperation" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="copyPixelOperation" /> が <see cref="T:System.Drawing.CopyPixelOperation" /> のメンバーではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
      <summary>画面から <see cref="T:System.Drawing.Graphics" /> の描画サーフェイスへの、ピクセルの四角形に対応する色データのビット ブロック転送を実行します。</summary>
      <param name="sourceX">転送元の四角形の左上隅の点の x 座標。</param>
      <param name="sourceY">転送元の四角形の左上隅の点の y 座標。</param>
      <param name="destinationX">転送先の四角形の左上隅の点の x 座標。</param>
      <param name="destinationY">転送先の四角形の左上隅の点の y 座標。</param>
      <param name="blockRegionSize">転送される領域のサイズ。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>画面から <see cref="T:System.Drawing.Graphics" /> の描画サーフェイスへの、ピクセルの四角形に対応する色データのビット ブロック転送を実行します。</summary>
      <param name="sourceX">転送元の四角形の左上隅の点の x 座標。</param>
      <param name="sourceY">転送元の四角形の左上隅の点の y 座標。</param>
      <param name="destinationX">転送先の四角形の左上隅の点の x 座標。</param>
      <param name="destinationY">転送先の四角形の左上隅の点の y 座標。</param>
      <param name="blockRegionSize">転送される領域のサイズ。</param>
      <param name="copyPixelOperation">
        <see cref="T:System.Drawing.CopyPixelOperation" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="copyPixelOperation" /> が <see cref="T:System.Drawing.CopyPixelOperation" /> のメンバーではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">操作が失敗しました。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.Dispose">
      <summary>この <see cref="T:System.Drawing.Graphics" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 構造体によって指定される楕円の一部を表す円弧を描画します。</summary>
      <param name="pen">円弧の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="rect">楕円の境界を定義する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="startAngle">x 軸から円弧の開始点まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから円弧の終了点まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 構造体によって指定される楕円の一部を表す円弧を描画します。</summary>
      <param name="pen">円弧の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="rect">楕円の境界を定義する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="startAngle">x 軸から円弧の開始点まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから円弧の終了点まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> は <see langword="null" /> です</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>座標ペア、幅、および高さで指定された楕円の一部を表す円弧を描画します。</summary>
      <param name="pen">円弧の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x">楕円を定義する四角形の左上隅の x 座標。</param>
      <param name="y">楕円を定義する四角形の左上隅の y 座標。</param>
      <param name="width">楕円を定義する四角形の幅。</param>
      <param name="height">楕円を定義する四角形の高さ。</param>
      <param name="startAngle">x 軸から円弧の開始点まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから円弧の終了点まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>座標ペア、幅、および高さで指定された楕円の一部を表す円弧を描画します。</summary>
      <param name="pen">円弧の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x">楕円を定義する四角形の左上隅の x 座標。</param>
      <param name="y">楕円を定義する四角形の左上隅の y 座標。</param>
      <param name="width">楕円を定義する四角形の幅。</param>
      <param name="height">楕円を定義する四角形の高さ。</param>
      <param name="startAngle">x 軸から円弧の開始点まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから円弧の終了点まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>4 つの <see cref="T:System.Drawing.Point" /> 構造体で定義されるベジエ スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" /> 構造体。</param>
      <param name="pt1">曲線の開始点を表す <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="pt2">曲線の最初の制御点を表す <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="pt3">曲線の 2 番目の制御点を表す <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="pt4">曲線の終了点を表す <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>4 つの <see cref="T:System.Drawing.PointF" /> 構造体で定義されるベジエ スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="pt1">曲線の開始点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="pt2">曲線の最初の制御点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="pt3">曲線の 2 番目の制御点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="pt4">曲線の終了点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>各点を表す 4 つの順序付けられた座標ペアで定義されるベジエ スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x1">曲線の開始点の x 座標。</param>
      <param name="y1">曲線の開始点の y 座標。</param>
      <param name="x2">曲線の最初の制御点の x 座標。</param>
      <param name="y2">曲線の最初の制御点の y 座標。</param>
      <param name="x3">曲線の 2 番目の制御点の x 座標。</param>
      <param name="y3">曲線の 2 番目の制御点の y 座標。</param>
      <param name="x4">曲線の終了点の x 座標。</param>
      <param name="y4">曲線の終了点の y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 構造体の配列から一連のベジエ スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">曲線を決定する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。 配列内の点の数は、3 の倍数に 1 を加算した数 (4、7、10 など) である必要があります。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 構造体の配列から一連のベジエ スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">曲線を決定する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。 配列内の点の数は、3 の倍数に 1 を加算した数 (4、7、10 など) である必要があります。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 構造体の配列で定義された、閉じたカーディナル スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、および高さを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>指定したテンションを使用して、<see cref="T:System.Drawing.Point" /> 構造体の配列で定義された、閉じたカーディナル スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、および高さを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="tension">曲線のテンションを指定する 0.0F 以上の値。</param>
      <param name="fillmode">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。 このパラメーターは必須ですが、無視されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 構造体の配列で定義された、閉じたカーディナル スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、および高さを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>指定したテンションを使用して、<see cref="T:System.Drawing.PointF" /> 構造体の配列で定義された、閉じたカーディナル スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、および高さを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="tension">曲線のテンションを指定する 0.0F 以上の値。</param>
      <param name="fillmode">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。 このパラメーターは必須ですが、無視されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>指定した <see cref="T:System.Drawing.Point" /> 構造体の配列を通過するカーディナル スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、および高さを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>指定したテンションを使用して、指定した <see cref="T:System.Drawing.Point" /> 構造体の配列を通過するカーディナル スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="offset">
        <paramref name="points" /> パラメーターの配列の最初の要素から曲線の開始点までのオフセット。</param>
      <param name="numberOfSegments">曲線に含める開始点以降のセグメント数。</param>
      <param name="tension">曲線のテンションを指定する 0.0F 以上の値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
      <summary>指定したテンションを使用して、指定した <see cref="T:System.Drawing.Point" /> 構造体の配列を通過するカーディナル スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="tension">曲線のテンションを指定する 0.0F 以上の値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>指定した <see cref="T:System.Drawing.PointF" /> 構造体の配列を通過するカーディナル スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
      <summary>指定した <see cref="T:System.Drawing.PointF" /> 構造体の配列を通過するカーディナル スプラインを描画します。 この描画は、配列の先頭からのオフセットから開始されます。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="offset">
        <paramref name="points" /> パラメーターの配列の最初の要素から曲線の開始点までのオフセット。</param>
      <param name="numberOfSegments">曲線に含める開始点以降のセグメント数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>指定したテンションを使用して、指定した <see cref="T:System.Drawing.PointF" /> 構造体の配列を通過するカーディナル スプラインを描画します。 この描画は、配列の先頭からのオフセットから開始されます。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="offset">
        <paramref name="points" /> パラメーターの配列の最初の要素から曲線の開始点までのオフセット。</param>
      <param name="numberOfSegments">曲線に含める開始点以降のセグメント数。</param>
      <param name="tension">曲線のテンションを指定する 0.0F 以上の値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
      <summary>指定したテンションを使用して、指定した <see cref="T:System.Drawing.PointF" /> 構造体の配列を通過するカーディナル スプラインを描画します。</summary>
      <param name="pen">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">曲線を定義する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="tension">曲線のテンションを指定する 0.0F 以上の値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>外接する <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された楕円を描画します。</summary>
      <param name="pen">楕円の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="rect">楕円の境界を定義する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
      <summary>外接する <see cref="T:System.Drawing.RectangleF" /> で定義された楕円を描画します。</summary>
      <param name="pen">楕円の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="rect">楕円の境界を定義する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>四角形の左上隅の座標、高さ、および幅によって指定される外接する四角形によって定義される楕円を描画します。</summary>
      <param name="pen">楕円の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x">楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">楕円を定義する外接する四角形の左上隅の y 座標。</param>
      <param name="width">楕円を定義する外接する四角形の幅。</param>
      <param name="height">楕円を定義する外接する四角形の高さ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>座標ペア、高さ、および幅で指定された外接する四角形によって定義される楕円を描画します。</summary>
      <param name="pen">楕円の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x">楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">楕円を定義する外接する四角形の左上隅の y 座標。</param>
      <param name="width">楕円を定義する外接する四角形の幅。</param>
      <param name="height">楕円を定義する外接する四角形の高さ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された領域内の指定した <see cref="T:System.Drawing.Icon" /> によって表されるイメージを描画します。</summary>
      <param name="icon">描画する <see cref="T:System.Drawing.Icon" />。</param>
      <param name="targetRect">ディスプレイ表面における生成イメージの場所とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 <paramref name="icon" /> パラメーターに含まれるイメージは、この四角形領域の大きさに合わせてスケーリングされます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>指定した <see cref="T:System.Drawing.Icon" /> によって表されるイメージを指定した座標に描画します。</summary>
      <param name="icon">描画する <see cref="T:System.Drawing.Icon" />。</param>
      <param name="x">描画イメージの左上隅の x 座標。</param>
      <param name="y">描画イメージの左上隅の y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>指定した <see cref="T:System.Drawing.Icon" /> によって表されるイメージをスケーリングしないで描画します。</summary>
      <param name="icon">描画する <see cref="T:System.Drawing.Icon" />。</param>
      <param name="targetRect">生成イメージの場所とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 イメージはこの四角形に合わせてスケーリングされず、元のサイズが保持されます。 イメージが四角形より大きい場合は、その四角形に収まるようにクリッピングされます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>指定した位置に、指定した <see cref="T:System.Drawing.Image" /> を元の物理サイズで描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="point">描画イメージの左上隅の位置を表す <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
      <summary>指定した <see cref="T:System.Drawing.Image" /> を指定した場所に指定した形状とサイズで描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定した位置に、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttr">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttr">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <param name="callback">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。 このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttr">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <param name="callback">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。 このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</param>
      <param name="callbackData">
        <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> メソッドの実行を停止するかどうかをチェックするときに使用する、<see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲートの追加データを指定する値。</param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
      <summary>指定した位置に、指定した <see cref="T:System.Drawing.Image" /> を元の物理サイズで描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="point">描画イメージの左上隅を表す <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
      <summary>指定した <see cref="T:System.Drawing.Image" /> を指定した場所に指定した形状とサイズで描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttr">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttr">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <param name="callback">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。 このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttr">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <param name="callback">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。 このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</param>
      <param name="callbackData">
        <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> メソッドの実行を停止するかどうかをチェックするときに使用する、<see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲートの追加データを指定する値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 イメージは、四角形に合わせてスケーリングされます。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 イメージは、四角形に合わせてスケーリングされます。</param>
      <param name="srcX">描画するソース イメージの一部の左上隅の x 座標。</param>
      <param name="srcY">描画するソース イメージの一部の左上隅の y 座標。</param>
      <param name="srcWidth">描画するソース イメージの一部の幅。</param>
      <param name="srcHeight">描画するソース イメージの一部の高さ。</param>
      <param name="srcUnit">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 イメージは、四角形に合わせてスケーリングされます。</param>
      <param name="srcX">描画するソース イメージの一部の左上隅の x 座標。</param>
      <param name="srcY">描画するソース イメージの一部の左上隅の y 座標。</param>
      <param name="srcWidth">描画するソース イメージの一部の幅。</param>
      <param name="srcHeight">描画するソース イメージの一部の高さ。</param>
      <param name="srcUnit">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttr">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 イメージは、四角形に合わせてスケーリングされます。</param>
      <param name="srcX">描画するソース イメージの一部の左上隅の x 座標。</param>
      <param name="srcY">描画するソース イメージの一部の左上隅の y 座標。</param>
      <param name="srcWidth">描画するソース イメージの一部の幅。</param>
      <param name="srcHeight">描画するソース イメージの一部の高さ。</param>
      <param name="srcUnit">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttr">
        <paramref name="image" /> のカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <param name="callback">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。 このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 イメージは、四角形に合わせてスケーリングされます。</param>
      <param name="srcX">描画するソース イメージの一部の左上隅の x 座標。</param>
      <param name="srcY">描画するソース イメージの一部の左上隅の y 座標。</param>
      <param name="srcWidth">描画するソース イメージの一部の幅。</param>
      <param name="srcHeight">描画するソース イメージの一部の高さ。</param>
      <param name="srcUnit">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttrs">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <param name="callback">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。 このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</param>
      <param name="callbackData">
        <see langword="DrawImage" /> メソッドの実行を停止するかどうかをチェックするときに使用する、<see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲートの追加データを指定する値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 イメージは、四角形に合わせてスケーリングされます。</param>
      <param name="srcX">描画するソース イメージの一部の左上隅の x 座標。</param>
      <param name="srcY">描画するソース イメージの一部の左上隅の y 座標。</param>
      <param name="srcWidth">描画するソース イメージの一部の幅。</param>
      <param name="srcHeight">描画するソース イメージの一部の高さ。</param>
      <param name="srcUnit">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 イメージは、四角形に合わせてスケーリングされます。</param>
      <param name="srcX">描画するソース イメージの一部の左上隅の x 座標。</param>
      <param name="srcY">描画するソース イメージの一部の左上隅の y 座標。</param>
      <param name="srcWidth">描画するソース イメージの一部の幅。</param>
      <param name="srcHeight">描画するソース イメージの一部の高さ。</param>
      <param name="srcUnit">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttrs">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 イメージは、四角形に合わせてスケーリングされます。</param>
      <param name="srcX">描画するソース イメージの一部の左上隅の x 座標。</param>
      <param name="srcY">描画するソース イメージの一部の左上隅の y 座標。</param>
      <param name="srcWidth">描画するソース イメージの一部の幅。</param>
      <param name="srcHeight">描画するソース イメージの一部の高さ。</param>
      <param name="srcUnit">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttrs">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <param name="callback">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。 このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。 イメージは、四角形に合わせてスケーリングされます。</param>
      <param name="srcX">描画するソース イメージの一部の左上隅の x 座標。</param>
      <param name="srcY">描画するソース イメージの一部の左上隅の y 座標。</param>
      <param name="srcWidth">描画するソース イメージの一部の幅。</param>
      <param name="srcHeight">描画するソース イメージの一部の高さ。</param>
      <param name="srcUnit">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="imageAttrs">
        <paramref name="image" /> オブジェクトのカラー変更情報とガンマ情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
      <param name="callback">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。 このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</param>
      <param name="callbackData">
        <see langword="DrawImage" /> メソッドの実行を停止するかどうかをチェックするときに使用する、<see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲートの追加データを指定する値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。 イメージは、四角形に合わせてスケーリングされます。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>指定したイメージを座標ペアで指定された位置に元の物理サイズで描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">描画イメージの左上隅の x 座標。</param>
      <param name="y">描画イメージの左上隅の y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>イメージの一部を指定の位置に描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">描画イメージの左上隅の x 座標。</param>
      <param name="y">描画イメージの左上隅の y 座標。</param>
      <param name="srcRect">描画する <paramref name="image" /> オブジェクトの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">描画イメージの左上隅の x 座標。</param>
      <param name="y">描画イメージの左上隅の y 座標。</param>
      <param name="width">描画イメージの幅。</param>
      <param name="height">描画イメージの高さ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
      <summary>指定した位置に、指定した <see cref="T:System.Drawing.Image" /> を元の物理サイズで描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">描画イメージの左上隅の x 座標。</param>
      <param name="y">描画イメージの左上隅の y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>イメージの一部を指定の位置に描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">描画イメージの左上隅の x 座標。</param>
      <param name="y">描画イメージの左上隅の y 座標。</param>
      <param name="srcRect">描画する <see cref="T:System.Drawing.Image" /> の部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> を描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">描画イメージの左上隅の x 座標。</param>
      <param name="y">描画イメージの左上隅の y 座標。</param>
      <param name="width">描画イメージの幅。</param>
      <param name="height">描画イメージの高さ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
      <summary>指定した位置に、指定したイメージを元の物理サイズで描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="point">描画するイメージの左上隅を指定する <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>指定した位置に、指定したイメージを元の物理サイズで描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">描画するイメージの左上隅を指定する <see cref="T:System.Drawing.Rectangle" />。 四角形の X プロパティおよび Y プロパティは、左上隅を指定します。 Width プロパティおよび Height プロパティは無視されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>指定したイメージを座標ペアで指定された位置に元の物理サイズで描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">描画イメージの左上隅の x 座標。</param>
      <param name="y">描画イメージの左上隅の y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した位置に、指定したイメージを元の物理サイズで描画します。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">描画イメージの左上隅の x 座標。</param>
      <param name="y">描画イメージの左上隅の y 座標。</param>
      <param name="width">使用しません。</param>
      <param name="height">使用しません。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>指定されたイメージをスケーリングせずに描画します。必要に応じて、指定された四角形内に収まるようにイメージをクリップします。</summary>
      <param name="image">描画する <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">イメージを描画する <see cref="T:System.Drawing.Rectangle" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>2 つの <see cref="T:System.Drawing.Point" /> 構造体を接続する直線を描画します。</summary>
      <param name="pen">直線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="pt1">接続する最初の点を表す <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="pt2">接続する 2 番目の点を表す <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>2 つの <see cref="T:System.Drawing.PointF" /> 構造体を接続する直線を描画します。</summary>
      <param name="pen">直線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="pt1">接続する最初の点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="pt2">接続する 2 番目の点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>座標ペアで指定された 2 つの点を結ぶ直線を描画します。</summary>
      <param name="pen">直線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x1">最初の点の x 座標。</param>
      <param name="y1">最初の点の y 座標。</param>
      <param name="x2">2 番目の点の x 座標。</param>
      <param name="y2">2 番目の点の y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>座標ペアで指定された 2 つの点を結ぶ直線を描画します。</summary>
      <param name="pen">直線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x1">最初の点の x 座標。</param>
      <param name="y1">最初の点の y 座標。</param>
      <param name="x2">2 番目の点の x 座標。</param>
      <param name="y2">2 番目の点の y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 構造体の配列を接続する一連の線分を描画します。</summary>
      <param name="pen">線分の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">接続する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 構造体の配列を接続する一連の線分を描画します。</summary>
      <param name="pen">線分の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">接続する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> を描画します。</summary>
      <param name="pen">パスの色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="path">描画する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="path" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 構造体と 2 本の半径によって指定された楕円で定義される扇形を描画します。</summary>
      <param name="pen">扇形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="rect">扇形の形状の元となる楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="startAngle">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 構造体と 2 本の半径によって指定された楕円で定義される扇形を描画します。</summary>
      <param name="pen">扇形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="rect">扇形の形状の元となる楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="startAngle">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>座標ペア、幅、および高さで指定された楕円と 2 本の半径によって定義される扇形を描画します。</summary>
      <param name="pen">扇形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x">扇形の形状の元となる楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">扇形の形状の元となる楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="width">扇形の形状の元となる楕円を定義する外接する四角形の幅。</param>
      <param name="height">扇形の形状の元となる楕円を定義する外接する四角形の高さ。</param>
      <param name="startAngle">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>座標ペア、幅、および高さで指定された楕円と 2 本の半径によって定義される扇形を描画します。</summary>
      <param name="pen">扇形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x">扇形の形状の元となる楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">扇形の形状の元となる楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="width">扇形の形状の元となる楕円を定義する外接する四角形の幅。</param>
      <param name="height">扇形の形状の元となる楕円を定義する外接する四角形の高さ。</param>
      <param name="startAngle">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 構造体の配列で定義された多角形を描画します。</summary>
      <param name="pen">多角形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">多角形の頂点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 構造体の配列で定義された多角形を描画します。</summary>
      <param name="pen">多角形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">多角形の頂点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された四角形を描画します。</summary>
      <param name="pen">四角形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="rect">描画する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>座標ペア、幅、および高さで指定された四角形を描画します。</summary>
      <param name="pen">四角形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x">描画する四角形の左上隅の x 座標。</param>
      <param name="y">描画する四角形の左上隅の y 座標。</param>
      <param name="width">描画する四角形の幅。</param>
      <param name="height">描画する四角形の高さ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>座標ペア、幅、および高さで指定された四角形を描画します。</summary>
      <param name="pen">四角形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="x">描画する四角形の左上隅の x 座標。</param>
      <param name="y">描画する四角形の左上隅の y 座標。</param>
      <param name="width">描画する四角形の幅。</param>
      <param name="height">描画する四角形の高さ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された一連の四角形を描画します。</summary>
      <param name="pen">四角形のアウトラインの色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="rects">描画する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="rects" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> は長さゼロの配列です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 構造体で指定された一連の四角形を描画します。</summary>
      <param name="pen">四角形のアウトラインの色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</param>
      <param name="rects">描画する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="rects" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> は長さゼロの配列です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>指定した位置に、指定した <see cref="T:System.Drawing.Brush" /> オブジェクトと <see cref="T:System.Drawing.Font" /> オブジェクトで、指定した文字列を描画します。</summary>
      <param name="s">描画する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="brush">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="point">描画するテキストの左上隅を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="s" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>指定した <see cref="T:System.Drawing.Brush" /> の書式属性を使用して、指定した <see cref="T:System.Drawing.Font" /> オブジェクトおよび <see cref="T:System.Drawing.StringFormat" /> オブジェクトで、指定した位置に指定した文字列を描画します。</summary>
      <param name="s">描画する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="brush">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="point">描画するテキストの左上隅を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="format">描画するテキストに適用する行間や配置などの書式属性を指定する <see cref="T:System.Drawing.StringFormat" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="s" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>指定した <see cref="T:System.Drawing.Brush" /> オブジェクトと <see cref="T:System.Drawing.Font" /> オブジェクトで、指定した文字列を指定した四角形内に描画します。</summary>
      <param name="s">描画する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="brush">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="layoutRectangle">描画するテキストの位置を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="s" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>指定した <see cref="T:System.Drawing.Brush" /> の書式属性を使用して、指定した <see cref="T:System.Drawing.Font" /> オブジェクトおよび <see cref="T:System.Drawing.StringFormat" /> オブジェクトで、指定した四角形に指定した文字列を描画します。</summary>
      <param name="s">描画する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="brush">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="layoutRectangle">描画するテキストの位置を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="format">描画するテキストに適用する行間や配置などの書式属性を指定する <see cref="T:System.Drawing.StringFormat" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="s" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
      <summary>指定した位置に、指定した <see cref="T:System.Drawing.Brush" /> オブジェクトと <see cref="T:System.Drawing.Font" /> オブジェクトで、指定した文字列を描画します。</summary>
      <param name="s">描画する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="brush">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">描画するテキストの左上隅の x 座標。</param>
      <param name="y">描画するテキストの左上隅の y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="s" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
      <summary>指定した <see cref="T:System.Drawing.Brush" /> の書式属性を使用して、指定した <see cref="T:System.Drawing.Font" /> オブジェクトおよび <see cref="T:System.Drawing.StringFormat" /> オブジェクトで、指定した位置に指定した文字列を描画します。</summary>
      <param name="s">描画する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="brush">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">描画するテキストの左上隅の x 座標。</param>
      <param name="y">描画するテキストの左上隅の y 座標。</param>
      <param name="format">描画するテキストに適用する行間や配置などの書式属性を指定する <see cref="T:System.Drawing.StringFormat" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="s" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
      <summary>現在のグラフィックス コンテナーを閉じ、この <see cref="T:System.Drawing.Graphics" /> の状態を、<see cref="M:System.Drawing.Graphics.BeginContainer" /> メソッドを呼び出すことによって保存されていた状態に復元します。</summary>
      <param name="container">このメソッドで復元されるコンテナーを表す <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="unit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="unit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="unit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="unit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="unit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcUnit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</summary>
      <param name="metafile">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="srcRect">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="unit">
        <paramref name="srcRect" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</param>
      <param name="callback">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</param>
      <param name="callbackData">必須だが無視される内部ポインター。 このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</param>
      <param name="imageAttr">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Graphics" /> 構造体で指定された領域が除外されるように、この <see cref="T:System.Drawing.Rectangle" /> のクリップ領域を更新します。</summary>
      <param name="rect">クリップ領域から除外する四角形を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
      <summary>
        <see cref="T:System.Drawing.Region" /> で指定された領域が除外されるように、この <see cref="T:System.Drawing.Graphics" /> のクリップ領域を更新します。</summary>
      <param name="region">クリップ領域から除外する領域を指定する <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <see cref="T:System.Drawing.Point" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を指定の塗りつぶしモードで塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="fillmode">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>
        <see cref="T:System.Drawing.Point" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を指定の塗りつぶしモードおよびテンションで塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="fillmode">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</param>
      <param name="tension">曲線のテンションを指定する 0.0F 以上の値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を指定の塗りつぶしモードで塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="fillmode">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を指定の塗りつぶしモードおよびテンションで塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="fillmode">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</param>
      <param name="tension">曲線のテンションを指定する 0.0F 以上の値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された外接する四角形によって定義される楕円の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rect">楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 構造体で指定された外接する四角形によって定義される楕円の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rect">楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>座標ペア、高さ、および幅で指定された外接する四角形によって定義される楕円を描画します。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">楕円を定義する外接する四角形の左上隅の y 座標。</param>
      <param name="width">楕円を定義する外接する四角形の幅。</param>
      <param name="height">楕円を定義する外接する四角形の高さ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>座標ペア、高さ、および幅で指定された外接する四角形によって定義される楕円を描画します。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">楕円を定義する外接する四角形の左上隅の y 座標。</param>
      <param name="width">楕円を定義する外接する四角形の幅。</param>
      <param name="height">楕円を定義する外接する四角形の高さ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="path">塗りつぶし対象のパスを表す <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="path" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 構造体と 2 本の半径によって指定された楕円で定義される扇形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rect">扇形の元となる楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="startAngle">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>座標ペア、幅、および高さで指定された楕円と 2 本の半径によって定義される扇形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">扇形の元となる楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">扇形の元となる楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="width">扇形の元となる楕円を定義する外接する四角形の幅。</param>
      <param name="height">扇形の元となる楕円を定義する外接する四角形の高さ。</param>
      <param name="startAngle">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>座標ペア、幅、および高さで指定された楕円と 2 本の半径によって定義される扇形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">扇形の元となる楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="y">扇形の元となる楕円を定義する外接する四角形の左上隅の x 座標。</param>
      <param name="width">扇形の元となる楕円を定義する外接する四角形の幅。</param>
      <param name="height">扇形の元となる楕円を定義する外接する四角形の高さ。</param>
      <param name="startAngle">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>
        <see cref="T:System.Drawing.Point" /> 構造体で指定された点の配列によって定義される多角形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">塗りつぶす多角形の頂点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <see cref="T:System.Drawing.Point" /> 構造体で指定された点の配列によって定義される多角形の内部を指定の塗りつぶしモードで塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">塗りつぶす多角形の頂点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
      <param name="fillMode">塗りつぶしのスタイルを決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 構造体で指定された点の配列によって定義される多角形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">塗りつぶす多角形の頂点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <see cref="T:System.Drawing.PointF" /> 構造体で指定された点の配列によって定義される多角形の内部を指定の塗りつぶしモードで塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="points">塗りつぶす多角形の頂点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
      <param name="fillMode">塗りつぶしのスタイルを決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="points" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された四角形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rect">塗りつぶす四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 構造体で指定された四角形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rect">塗りつぶす四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>座標ペア、幅、および高さで指定された四角形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">塗りつぶす四角形の左上隅の x 座標。</param>
      <param name="y">塗りつぶす四角形の左上隅の y 座標。</param>
      <param name="width">塗りつぶす四角形の幅。</param>
      <param name="height">塗りつぶす四角形の高さ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>座標ペア、幅、および高さで指定された四角形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="x">塗りつぶす四角形の左上隅の x 座標。</param>
      <param name="y">塗りつぶす四角形の左上隅の y 座標。</param>
      <param name="width">塗りつぶす四角形の幅。</param>
      <param name="height">塗りつぶす四角形の高さ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
      <summary>
        <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された一連の四角形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rects">塗りつぶす四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="rects" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> は長さゼロの配列です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> 構造体で指定された一連の四角形の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="rects">塗りつぶす四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="rects" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rects" /> は長さゼロの配列です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
      <summary>
        <see cref="T:System.Drawing.Region" /> の内部を塗りつぶします。</summary>
      <param name="brush">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="region">塗りつぶす領域を表す <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="region" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush">
      <summary>保留中のグラフィックス操作をすべて強制実行し、操作の終了を待機せずにすぐに制御を戻します。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
      <summary>メソッドが保留中のグラフィックス操作を待機しているかどうかにかかわらず、すべての保留中のグラフィックス操作を指定どおりに強制実行し、操作が終了する前に制御を戻します。</summary>
      <param name="intention">メソッドがすぐに制御を戻すか、既存の操作が終了するまで待機するかを指定する、<see cref="T:System.Drawing.Drawing2D.FlushIntention" /> 列挙体のメンバー。</param>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
      <summary>デバイス コンテキストを識別する指定のハンドルから新しい <see cref="T:System.Drawing.Graphics" /> を作成します。</summary>
      <param name="hdc">デバイス コンテキストを識別するハンドル。</param>
      <returns>このメソッドは、指定のデバイス コンテキストの新しい <see cref="T:System.Drawing.Graphics" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
      <summary>デバイス コンテキストを識別する指定のハンドルと、デバイスを識別する指定のハンドルから、新しい <see cref="T:System.Drawing.Graphics" /> を作成します。</summary>
      <param name="hdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="hdevice">デバイスを識別するハンドル。</param>
      <returns>このメソッドは、指定のデバイス コンテキストおよびデバイスの新しい <see cref="T:System.Drawing.Graphics" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
      <summary>指定したデバイス コンテキストの <see cref="T:System.Drawing.Graphics" /> を返します。</summary>
      <param name="hdc">デバイス コンテキストを識別するハンドル。</param>
      <returns>指定したデバイス コンテキストの <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
      <summary>ウィンドウを識別する指定のハンドルから新しい <see cref="T:System.Drawing.Graphics" /> を作成します。</summary>
      <param name="hwnd">ウィンドウへのハンドルです。</param>
      <returns>このメソッドは、指定のウィンドウ ハンドルの新しい <see cref="T:System.Drawing.Graphics" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
      <summary>指定したウィンドウ ハンドルに新しい <see cref="T:System.Drawing.Graphics" /> を作成します。</summary>
      <param name="hwnd">ウィンドウへのハンドルです。</param>
      <returns>指定したウィンドウ ハンドルの <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
      <summary>指定した <see cref="T:System.Drawing.Image" /> の新しい <see cref="T:System.Drawing.Graphics" /> を作成します。</summary>
      <param name="image">新しい <see cref="T:System.Drawing.Graphics" /> の作成元の <see cref="T:System.Drawing.Image" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Exception">
        <paramref name="image" /> がインデックス付きのピクセル形式であるか、またはその形式が未定義です。</exception>
      <returns>このメソッドは、指定した <see cref="T:System.Drawing.Graphics" /> の新しい <see cref="T:System.Drawing.Image" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetContextInfo">
      <summary>累積的なグラフィックス コンテキストを取得します。</summary>
      <returns>累積的なグラフィックス コンテキストを表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHalftonePalette">
      <summary>現在の Windows ハーフトーン パレットを識別するハンドルを取得します。</summary>
      <returns>パレットを識別するハンドルを指定する内部ポインター。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHdc">
      <summary>この <see cref="T:System.Drawing.Graphics" /> に関連付けられているデバイス コンテキストを識別するハンドルを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Graphics" /> に関連付けられているデバイス コンテキストを識別するハンドル。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
      <summary>指定した <see cref="T:System.Drawing.Color" /> 構造体に最も近い色を取得します。</summary>
      <param name="color">一致する対象を検索する <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <returns>
        <paramref name="color" /> パラメーターで指定された色に最も近い色を表す <see cref="T:System.Drawing.Color" /> 構造体。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリップ領域を現在のクリップ領域と指定した <see cref="T:System.Drawing.Rectangle" /> 構造体との交差部分に更新します。</summary>
      <param name="rect">現在のクリップ領域と交差する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリップ領域を現在のクリップ領域と指定した <see cref="T:System.Drawing.RectangleF" /> 構造体との交差部分に更新します。</summary>
      <param name="rect">現在のクリップ領域と交差する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリップ領域を現在のクリップ領域と指定した <see cref="T:System.Drawing.Region" /> との交差部分に更新します。</summary>
      <param name="region">現在の領域と交差する <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に、指定した <see cref="T:System.Drawing.Point" /> 構造体が含まれるかどうかを示します。</summary>
      <param name="point">表示可能範囲をテストする <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <returns>
        <paramref name="point" /> パラメーターで指定された点がこの <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に、指定した <see cref="T:System.Drawing.PointF" /> 構造体が含まれるかどうかを示します。</summary>
      <param name="point">表示可能範囲をテストする <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <returns>
        <paramref name="point" /> パラメーターで指定された点がこの <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に、<see cref="T:System.Drawing.Rectangle" /> 構造体で指定された四角形が含まれるかどうかを示します。</summary>
      <param name="rect">表示可能範囲をテストする <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <returns>
        <paramref name="rect" /> パラメーターで指定された四角形がこの <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に、<see cref="T:System.Drawing.RectangleF" /> 構造体で指定された四角形が含まれるかどうかを示します。</summary>
      <param name="rect">表示可能範囲をテストする <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <returns>
        <paramref name="rect" /> パラメーターで指定された四角形がこの <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
      <summary>座標ペアで指定された点が、この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内にあるかどうかを示します。</summary>
      <param name="x">表示可能かどうかをテストする点の x 座標。</param>
      <param name="y">表示可能かどうかをテストする点の y 座標。</param>
      <returns>
        <paramref name="x" /> パラメーターと <paramref name="y" /> パラメーターで定義された点がこの <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に、座標ペア、幅、および高さで指定された四角形が含まれるかどうかを示します。</summary>
      <param name="x">表示可能かどうかをテストする四角形の左上隅の x 座標。</param>
      <param name="y">表示可能かどうかをテストする四角形の左上隅の y 座標。</param>
      <param name="width">表示可能範囲をテストする四角形の幅。</param>
      <param name="height">表示可能範囲をテストする四角形の高さ。</param>
      <returns>
        <paramref name="x" />、<paramref name="y" />、<paramref name="width" />、<paramref name="height" /> の各パラメーターで定義された四角形がこの <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
      <summary>座標ペアで指定された点が、この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内にあるかどうかを示します。</summary>
      <param name="x">表示可能かどうかをテストする点の x 座標。</param>
      <param name="y">表示可能かどうかをテストする点の y 座標。</param>
      <returns>
        <paramref name="x" /> パラメーターと <paramref name="y" /> パラメーターで定義された点がこの <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に、座標ペア、幅、および高さで指定された四角形が含まれるかどうかを示します。</summary>
      <param name="x">表示可能かどうかをテストする四角形の左上隅の x 座標。</param>
      <param name="y">表示可能かどうかをテストする四角形の左上隅の y 座標。</param>
      <param name="width">表示可能範囲をテストする四角形の幅。</param>
      <param name="height">表示可能範囲をテストする四角形の高さ。</param>
      <returns>
        <paramref name="x" />、<paramref name="y" />、<paramref name="width" />、<paramref name="height" /> の各パラメーターで定義された四角形がこの <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>指定した文字列内の文字位置の範囲にそれぞれが外接する <see cref="T:System.Drawing.Region" /> オブジェクトの配列を取得します。</summary>
      <param name="text">計測する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="layoutRect">文字列のレイアウト四角形を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="stringFormat">行間など、文字列の書式情報を表す <see cref="T:System.Drawing.StringFormat" />。</param>
      <returns>このメソッドは、指定した文字列内の文字位置の範囲にそれぞれが外接する <see cref="T:System.Drawing.Region" /> オブジェクトの配列を返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
      <summary>指定した <see cref="T:System.Drawing.Font" /> で描画した場合の、指定した文字列を計測します。</summary>
      <param name="text">計測する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> が <see langword="null" />です。</exception>
      <returns>このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターに指定された文字列のサイズを <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位で表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターで描画されたとおりに返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>指定した <see cref="T:System.Drawing.Font" /> を使用し、指定した <see cref="T:System.Drawing.StringFormat" /> で書式指定して描画した場合の、指定した文字列を計測します。</summary>
      <param name="text">計測する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="origin">文字列の左上隅を表す <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="stringFormat">行間など、文字列の書式情報を表す <see cref="T:System.Drawing.StringFormat" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> が <see langword="null" />です。</exception>
      <returns>このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターに指定された文字列のサイズを <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位で表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターおよび <paramref name="stringFormat" /> パラメーターで描画されたとおりに返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
      <summary>指定したレイアウト領域内に指定した <see cref="T:System.Drawing.Font" /> で描画した場合の、指定した文字列を計測します。</summary>
      <param name="text">計測する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="layoutArea">テキストの最大レイアウト領域を指定する <see cref="T:System.Drawing.SizeF" /> 構造体。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> が <see langword="null" />です。</exception>
      <returns>このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターに指定された文字列のサイズを <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位で表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターで描画されたとおりに返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
      <summary>指定した <see cref="T:System.Drawing.Font" /> を使用し、指定した <see cref="T:System.Drawing.StringFormat" /> で書式指定して描画した場合の、指定した文字列を計測します。</summary>
      <param name="text">計測する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="layoutArea">テキストの最大レイアウト領域を指定する <see cref="T:System.Drawing.SizeF" /> 構造体。</param>
      <param name="stringFormat">行間など、文字列の書式情報を表す <see cref="T:System.Drawing.StringFormat" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> が <see langword="null" />です。</exception>
      <returns>このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターで指定された文字列のサイズ (<see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位) を表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターと <paramref name="stringFormat" /> パラメーターで描画されたようにして返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
      <summary>指定した <see cref="T:System.Drawing.Font" /> を使用し、指定した <see cref="T:System.Drawing.StringFormat" /> で書式指定して描画した場合の、指定した文字列を計測します。</summary>
      <param name="text">計測する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="layoutArea">テキストの最大レイアウト領域を指定する <see cref="T:System.Drawing.SizeF" /> 構造体。</param>
      <param name="stringFormat">行間など、文字列の書式情報を表す <see cref="T:System.Drawing.StringFormat" />。</param>
      <param name="charactersFitted">文字列の文字数。</param>
      <param name="linesFilled">文字列のテキスト行数。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> が <see langword="null" />です。</exception>
      <returns>このメソッドは、<paramref name="text" /> パラメーターに指定された文字列のサイズを <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位で表す <see cref="T:System.Drawing.SizeF" /> 構造体を、<paramref name="font" /> パラメーターおよび <paramref name="stringFormat" /> パラメーターで描画されたとおりに返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
      <summary>指定した <see cref="T:System.Drawing.Font" /> で描画した場合の、指定した文字列を計測します。</summary>
      <param name="text">計測する文字列。</param>
      <param name="font">文字列の書式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="width">文字列の最大幅 (ピクセル単位)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> が <see langword="null" />です。</exception>
      <returns>このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターに指定された文字列のサイズを <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位で表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターで描画されたとおりに返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
      <summary>指定した <see cref="T:System.Drawing.Font" /> を使用し、指定した <see cref="T:System.Drawing.StringFormat" /> で書式指定して描画した場合の、指定した文字列を計測します。</summary>
      <param name="text">計測する文字列。</param>
      <param name="font">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</param>
      <param name="width">文字列の最大幅。</param>
      <param name="format">行間など、文字列の書式情報を表す <see cref="T:System.Drawing.StringFormat" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> が <see langword="null" />です。</exception>
      <returns>このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターで指定された文字列のサイズ (<see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位) を表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターと <paramref name="stringFormat" /> パラメーターで描画されたようにして返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> と指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> のワールド変換を乗算します。</summary>
      <param name="matrix">ワールド変換を乗算する 4 x 4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> と指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> のワールド変換を指定した順序で乗算します。</summary>
      <param name="matrix">ワールド変換を乗算する 4 x 4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">乗算の順序を決定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙体のメンバー。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の <see cref="M:System.Drawing.Graphics.GetHdc" /> メソッドを前回呼び出したときに取得したデバイス コンテキスト ハンドルを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の <see cref="M:System.Drawing.Graphics.GetHdc" /> メソッドを前回呼び出したときに取得したデバイス コンテキスト ハンドルを解放します。</summary>
      <param name="hdc">
        <see cref="T:System.Drawing.Graphics" /> の <see cref="M:System.Drawing.Graphics.GetHdc" /> メソッドを前回呼び出したときに取得したデバイス コンテキストを識別するハンドル。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
      <summary>デバイス コンテキストを識別するハンドルを解放します。</summary>
      <param name="hdc">デバイス コンテキストを識別するハンドル。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ResetClip">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリップ領域を無制限領域にリセットします。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.ResetTransform">
      <summary>対象の <see cref="T:System.Drawing.Graphics" /> のワールド変換行列を単位行列にリセットします。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の状態を <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> によって表される状態に復元します。</summary>
      <param name="gstate">この <see cref="T:System.Drawing.Graphics" /> を復元したときの状態を表す <see cref="T:System.Drawing.Drawing2D.GraphicsState" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の変換行列に、指定した回転を適用します。</summary>
      <param name="angle">回転角度。</param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の変換行列に、指定した回転を指定した順序で適用します。</summary>
      <param name="angle">回転角度。</param>
      <param name="order">回転が行列変換の後ろに追加されるか前に付加されるかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙体のメンバー。</param>
    </member>
    <member name="M:System.Drawing.Graphics.Save">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の現在の状態を保存し、保存した状態を <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> で識別します。</summary>
      <returns>このメソッドは、この <see cref="T:System.Drawing.Graphics" /> の保存状態を表す <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の変換行列の前に指定したスケーリング操作を付加することによって、この変換行列にスケーリング操作を適用します。</summary>
      <param name="sx">x 方向のスケール ファクター。</param>
      <param name="sy">y 方向のスケール ファクター。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の変換行列に、指定したスケーリング操作を指定した順序で適用します。</summary>
      <param name="sx">x 方向のスケール ファクター。</param>
      <param name="sy">y 方向のスケール ファクター。</param>
      <param name="order">スケーリング操作が変換行列の前に付加されるか後ろに追加されるかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙体のメンバー。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクトに設定します。</summary>
      <param name="path">新しいクリップ領域を表す <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を、現在のクリップ領域と指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> とを組み合わせる指定の操作の結果に設定します。</summary>
      <param name="path">組み合わせる <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <param name="combineMode">使用する組み合わせ操作を指定する <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列挙体のメンバー。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を指定した <see cref="T:System.Drawing.Graphics" /> の <see langword="Clip" /> プロパティに設定します。</summary>
      <param name="g">新しいクリップ領域の取得元となる <see cref="T:System.Drawing.Graphics" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を、現在のクリップ領域と指定した <see cref="T:System.Drawing.Graphics" /> の <see cref="P:System.Drawing.Graphics.Clip" /> プロパティとを組み合わせる指定の操作の結果に設定します。</summary>
      <param name="g">組み合わせるクリップ領域を指定する <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="combineMode">使用する組み合わせ操作を指定する <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列挙体のメンバー。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された四角形に設定します。</summary>
      <param name="rect">新しいクリップ領域を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を現在のクリップ領域と <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された四角形とを組み合わせる指定の操作の結果に設定します。</summary>
      <param name="rect">組み合わせる <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="combineMode">使用する組み合わせ操作を指定する <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列挙体のメンバー。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を <see cref="T:System.Drawing.RectangleF" /> 構造体で指定された四角形に設定します。</summary>
      <param name="rect">新しいクリップ領域を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を現在のクリップ領域と <see cref="T:System.Drawing.RectangleF" /> 構造体で指定された四角形とを組み合わせる指定の操作の結果に設定します。</summary>
      <param name="rect">組み合わせる <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="combineMode">使用する組み合わせ操作を指定する <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列挙体のメンバー。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を、現在のクリップ領域と指定した <see cref="T:System.Drawing.Region" /> とを組み合わせる指定の操作の結果に設定します。</summary>
      <param name="region">組み合わせる <see cref="T:System.Drawing.Region" />。</param>
      <param name="combineMode">使用する組み合わせ操作を指定する <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列挙体のメンバー。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の現在のワールド変換とページ変換を使用して、点の配列をある座標空間から別の座標空間に変換します。</summary>
      <param name="destSpace">変換先の座標空間を指定する <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列挙体のメンバー。</param>
      <param name="srcSpace">変換元の座標空間を指定する <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列挙体のメンバー。</param>
      <param name="pts">変換する点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の現在のワールド変換とページ変換を使用して、点の配列をある座標空間から別の座標空間に変換します。</summary>
      <param name="destSpace">変換先の座標空間を指定する <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列挙体のメンバー。</param>
      <param name="srcSpace">変換元の座標空間を指定する <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列挙体のメンバー。</param>
      <param name="pts">変換する点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
      <summary>指定した量だけ水平方向および垂直方向に、この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を平行移動します。</summary>
      <param name="dx">平行移動する x 座標。</param>
      <param name="dy">平行移動する y 座標。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
      <summary>指定した量だけ水平方向および垂直方向に、この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を平行移動します。</summary>
      <param name="dx">平行移動する x 座標。</param>
      <param name="dy">平行移動する y 座標。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の変換行列の前に指定の平行移動を付加することによって、座標系の原点を変更します。</summary>
      <param name="dx">平行移動する x 座標。</param>
      <param name="dy">平行移動する y 座標。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の変換行列に指定の平行移動を指定の順序で適用することによって、座標系の原点を変更します。</summary>
      <param name="dx">平行移動する x 座標。</param>
      <param name="dy">平行移動する y 座標。</param>
      <param name="order">平行移動が変換行列の前に付加されるか後に追加されるかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙体のメンバー。</param>
    </member>
    <member name="P:System.Drawing.Graphics.Clip">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の描画領域を限定する <see cref="T:System.Drawing.Region" /> を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Region" /> のうち、現在描画に使用できる部分を限定する <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.ClipBounds">
      <summary>この <see cref="T:System.Drawing.Graphics" /> オブジェクトのクリッピング領域に外接する <see cref="T:System.Drawing.RectangleF" /> 構造体を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域に外接する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingMode">
      <summary>この <see cref="T:System.Drawing.Graphics" /> への複合イメージの描画方法を指定する値を取得します。</summary>
      <returns>このプロパティは、<see cref="T:System.Drawing.Drawing2D.CompositingMode" /> 列挙体のメンバーを指定します。 既定値は、<see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingQuality">
      <summary>この <see cref="T:System.Drawing.Graphics" /> に描画する複合イメージのレンダリング品質を取得または設定します。</summary>
      <returns>このプロパティは、<see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> 列挙体のメンバーを指定します。 既定値は、<see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.DpiX">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の水平方向の解像度を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Graphics" /> でサポートされる水平方向の解像度の値 (dpi)。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.DpiY">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の垂直方向の解像度を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Graphics" /> でサポートされる垂直方向の解像度の値 (dpi)。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.InterpolationMode">
      <summary>この <see cref="T:System.Drawing.Graphics" /> に関連付けられている補間モードを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.IsClipEmpty">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域が空かどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域が空の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.IsVisibleClipEmpty">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の表示クリッピング領域が空かどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域の表示部分が空の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageScale">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のワールド単位とパージ単位の間のスケーリングを取得または設定します。</summary>
      <returns>このプロパティは、この <see cref="T:System.Drawing.Graphics" /> のワールド単位とパージ単位の間のスケーリングの値を指定します。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageUnit">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のページ座標に使用される長さの単位を取得または設定します。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Graphics.PageUnit" /> が、物理単位ではない <see cref="F:System.Drawing.GraphicsUnit.World" /> に設定されています。</exception>
      <returns>
        <see cref="T:System.Drawing.GraphicsUnit" /> 値の 1 つ (<see cref="F:System.Drawing.GraphicsUnit.World" /> を除く)。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.PixelOffsetMode">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のレンダリング時のピクセルのオフセット方法を指定する値が取得または設定されます。</summary>
      <returns>このプロパティは、<see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> 列挙型のメンバーを指定します。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.RenderingOrigin">
      <summary>ディザリングおよびハッチ ブラシに使用する、この <see cref="T:System.Drawing.Graphics" /> のレンダリングの原点を取得または設定します。</summary>
      <returns>8 ビット/ピクセルおよび 16 ビット/ピクセルのディザリングの原点を表す <see cref="T:System.Drawing.Point" /> 構造体。この構造体は、ハッチ ブラシの原点を設定する場合にも使用されます。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.SmoothingMode">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のレンダリング品質を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextContrast">
      <summary>レンダリング テキストのガンマ補正値を取得または設定します。</summary>
      <returns>アンチエイリアス処理されたテキストおよび ClearType テキストを描画するために使用されるガンマ補正値。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextRenderingHint">
      <summary>この <see cref="T:System.Drawing.Graphics" /> に関連付けられているテキストのレンダリング モードを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Text.TextRenderingHint" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.Transform">
      <summary>この <see cref="T:System.Drawing.Graphics" /> のジオメトリック ワールド変換のコピーを取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Graphics" /> のジオメトリック ワールド変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" /> のコピー。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.VisibleClipBounds">
      <summary>この <see cref="T:System.Drawing.Graphics" /> の表示クリッピング領域に外接する四角形を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Graphics" /> の表示クリッピング領域に外接する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</returns>
    </member>
    <member name="T:System.Drawing.Graphics.DrawImageAbort">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.DrawImage" /> メソッドが、実行を早期キャンセルし、イメージの描画を停止するタイミングを決定するコールバック メソッドを提供します。</summary>
      <param name="callbackdata">コールバック メソッドのデータを指定する内部ポインター。 このパラメーターは、どの <see cref="Overload:System.Drawing.Graphics.DrawImage" /> オーバーロードでも渡されません。 存在しないかどうかをテストするには、値 <see cref="F:System.IntPtr.Zero" /> がないかどうかを確認します。</param>
      <returns>
        <see cref="Overload:System.Drawing.Graphics.DrawImage" /> メソッドに実行を早期停止させる場合、このメソッドは <see langword="true" /> を返します。 それ以外の場合は <see langword="false" /> を返して <see cref="Overload:System.Drawing.Graphics.DrawImage" /> メソッドに実行を継続させることを示します。</returns>
    </member>
    <member name="T:System.Drawing.Graphics.EnumerateMetafileProc">
      <summary>
        <see cref="Overload:System.Drawing.Graphics.EnumerateMetafile" /> メソッドのコールバック メソッドを提供します。</summary>
      <param name="recordType">メタファイル レコードの型を指定する <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> 列挙体のメンバー。</param>
      <param name="flags">レコードの属性を指定する一連のフラグ。</param>
      <param name="dataSize">レコード データのバイト数。</param>
      <param name="data">レコード データが格納されているバッファーへのポインター。</param>
      <param name="callbackData">使用しません。</param>
      <returns>レコードの列挙を継続する場合は <see langword="true" />。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="T:System.Drawing.GraphicsUnit">
      <summary>指定のデータの長さの単位を指定します。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Display">
      <summary>表示デバイスの長さの単位を指定します。 通常、ビデオ ディスプレイにはピクセル、プリンターには 1/100 インチを指定します。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Document">
      <summary>ドキュメント単位 (1/300 インチ) を長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Inch">
      <summary>インチを長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Millimeter">
      <summary>ミリメートルを長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Pixel">
      <summary>デバイス ピクセルを長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Point">
      <summary>プリンター ポイント (1/72 インチ) を長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.World">
      <summary>ワールド座標系を長さの単位に指定します。</summary>
    </member>
    <member name="T:System.Drawing.Icon">
      <summary>Windows アイコンを表します。これはオブジェクトを表すために使用される小さなビットマップ イメージです。 アイコンは透明なビットマップと考えることもできますが、そのサイズはシステムによって決定されます。</summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)">
      <summary>
        <see cref="T:System.Drawing.Icon" /> クラスの新しいインスタンスを初期化し、要求されたサイズに一致するアイコンを検索します。</summary>
      <param name="original">サイズが変更されたアイコンの読み込み元の <see cref="T:System.Drawing.Icon" />。</param>
      <param name="size">新しい <see cref="T:System.Drawing.Size" /> の高さと幅を指定する <see cref="T:System.Drawing.Icon" /> 構造体。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="original" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.Icon" /> クラスの新しいインスタンスを初期化し、要求されたサイズに一致するアイコンを検索します。</summary>
      <param name="original">別のサイズの読み込み元のアイコン。</param>
      <param name="width">新しいアイコンの幅。</param>
      <param name="height">新しいアイコンの高さ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="original" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream)">
      <summary>指定したデータ ストリームで <see cref="T:System.Drawing.Icon" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">
        <see cref="T:System.Drawing.Icon" /> の読み込み元のデータ ストリーム。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)">
      <summary>指定したストリームから指定したサイズで <see cref="T:System.Drawing.Icon" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">アイコン データを格納しているストリーム。</param>
      <param name="size">アイコンのサイズ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> が <see langword="null" />、つまりイメージ データが含まれていません。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)">
      <summary>指定のデータ ストリームから指定の幅と高さで、<see cref="T:System.Drawing.Icon" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">アイコンの読み込み元のデータ ストリーム。</param>
      <param name="width">アイコンの幅 (ピクセル単位)。</param>
      <param name="height">アイコンの高さ (ピクセル単位)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> パラメーターが <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String)">
      <summary>指定したファイル名から、<see cref="T:System.Drawing.Icon" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">
        <see cref="T:System.Drawing.Icon" /> の読み込み元のファイル。</param>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)">
      <summary>指定したファイルから指定したサイズで <see cref="T:System.Drawing.Icon" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">アイコンのデータを格納するファイルのパスと名前。</param>
      <param name="size">アイコンのサイズ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="string" /> が <see langword="null" />、つまりイメージ データが含まれていません。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)">
      <summary>指定したファイルから幅と高さを指定して、<see cref="T:System.Drawing.Icon" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">
        <see cref="T:System.Drawing.Icon" /> のデータを格納するファイルのパスと名前。</param>
      <param name="width">
        <see cref="T:System.Drawing.Icon" /> の幅。</param>
      <param name="height">
        <see cref="T:System.Drawing.Icon" /> の高さ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="string" /> が <see langword="null" />、つまりイメージ データが含まれていません。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Type,System.String)">
      <summary>指定のアセンブリのリソースで <see cref="T:System.Drawing.Icon" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">リソースを検索するアセンブリを指定する <see cref="T:System.Type" />。</param>
      <param name="resource">読み込むリソース名。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="resource" /> によって指定されたアイコンが、指定された <paramref name="type" /> が含まれるアセンブリに見つかりません。</exception>
    </member>
    <member name="M:System.Drawing.Icon.Clone">
      <summary>
        <see cref="T:System.Drawing.Icon" /> のクローンを作成して、イメージを複製します。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> にキャスト可能なオブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.Icon.Dispose">
      <summary>この <see cref="T:System.Drawing.Icon" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Icon.ExtractAssociatedIcon(System.String)">
      <summary>指定したファイルに含まれているイメージのアイコン表現を返します。</summary>
      <param name="filePath">イメージを含むファイルのパス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="filePath" /> に、有効なファイルが示されていません。  
  
- または - 
<paramref name="filePath" /> は、UNC (Universal Naming Convention) パスを示します。</exception>
      <returns>指定したファイルに含まれているイメージの <see cref="T:System.Drawing.Icon" /> 表現。</returns>
    </member>
    <member name="M:System.Drawing.Icon.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Icon.FromHandle(System.IntPtr)">
      <summary>アイコン (<see langword="HICON" />) を識別する指定の Windows ハンドルから GDI+ <see cref="T:System.Drawing.Icon" /> を作成します。</summary>
      <param name="handle">アイコンを識別する Windows ハンドル。</param>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Icon" />。</returns>
    </member>
    <member name="M:System.Drawing.Icon.Save(System.IO.Stream)">
      <summary>この <see cref="T:System.Drawing.Icon" /> を指定の出力 <see cref="T:System.IO.Stream" /> に保存します。</summary>
      <param name="outputStream">保存先の <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、対象オブジェクトをシリアル化するために必要なデータを設定します。</summary>
      <param name="si" />
      <param name="context">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
    </member>
    <member name="M:System.Drawing.Icon.ToBitmap">
      <summary>この <see cref="T:System.Drawing.Icon" /> を GDI+ の <see cref="T:System.Drawing.Bitmap" /> に変換します。</summary>
      <returns>変換された <see cref="T:System.Drawing.Icon" /> を表す <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Icon.ToString">
      <summary>
        <see cref="T:System.Drawing.Icon" /> を説明する文字列をユーザーが判読できる形式で取得します。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> を説明する文字列。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Handle">
      <summary>この <see cref="T:System.Drawing.Icon" /> の Windows ハンドルを取得します。 これはハンドルのコピーではありません。解放しないでください。</summary>
      <returns>アイコンの Windows ハンドル。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Height">
      <summary>この <see cref="T:System.Drawing.Icon" /> の高さを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Icon" /> の高さ。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Size">
      <summary>この <see cref="T:System.Drawing.Icon" /> のサイズを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Icon" /> の幅と高さを指定する <see cref="T:System.Drawing.Size" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Width">
      <summary>この <see cref="T:System.Drawing.Icon" /> の幅を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Icon" /> の幅。</returns>
    </member>
    <member name="T:System.Drawing.IconConverter">
      <summary>
        <see cref="T:System.Drawing.Icon" /> オブジェクトのデータ型を別のデータ型に変換します。 <see cref="T:System.ComponentModel.TypeDescriptor" /> オブジェクトを通じてこのクラスにアクセスします。</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.IconConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>この <see cref="T:System.Drawing.IconConverter" /> が、指定したコンテキストを使用して、指定した型のインスタンスを <see cref="T:System.Drawing.Icon" /> に変換できるかどうかを決定します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換前の型を指定する <see cref="T:System.Type" />。</param>
      <returns>このメソッドは、<see cref="T:System.Drawing.IconConverter" /> が変換を実行できる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>この <see cref="T:System.Drawing.IconConverter" /> が、指定したコンテキストを使用して、<see cref="T:System.Drawing.Icon" /> を指定した型のインスタンスに変換できるかどうかを決定します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換後の型を指定する <see cref="T:System.Type" />。</param>
      <returns>このメソッドは、<see cref="T:System.Drawing.IconConverter" /> が変換を実行できる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトを <see cref="T:System.Drawing.Icon" /> に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">特定のカルチャに関する情報を格納する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換される <see cref="T:System.Object" />。</param>
      <exception cref="T:System.NotSupportedException">変換できませんでした。</exception>
      <returns>メソッドが成功した場合は、指定したオブジェクトを変換して作成された <see cref="T:System.Drawing.Icon" /> を返します。 成功しなかった場合は、例外がスローされます。</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Drawing.Icon" /> (または、<see cref="T:System.Drawing.Icon" /> にキャスト可能なオブジェクト) を特定の型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">特定のカルチャで使用される書式指定規約を指定する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換対象のオブジェクト。 このオブジェクトは、Icon 型、または <see cref="T:System.Drawing.Icon" /> にキャスト可能な型である必要があります。</param>
      <param name="destinationType">Icon を変換した後の型。</param>
      <exception cref="T:System.NotSupportedException">変換できませんでした。</exception>
      <returns>このメソッドは、変換されたオブジェクトを返します。</returns>
    </member>
    <member name="T:System.Drawing.IDeviceContext">
      <summary>Windows デバイス コンテキストを識別する既存のハンドルを取得および解放するためのメソッドを定義します。</summary>
    </member>
    <member name="M:System.Drawing.IDeviceContext.GetHdc">
      <summary>Windows デバイス コンテキストを識別するハンドルを返します。</summary>
      <returns>デバイス コンテキストのハンドルを表す <see cref="T:System.IntPtr" />。</returns>
    </member>
    <member name="M:System.Drawing.IDeviceContext.ReleaseHdc">
      <summary>Windows デバイス コンテキストのハンドルを解放します。</summary>
    </member>
    <member name="T:System.Drawing.Image">
      <summary>子孫クラスである <see cref="T:System.Drawing.Bitmap" /> および <see cref="T:System.Drawing.Imaging.Metafile" /> に機能を提供する抽象基本クラス。</summary>
    </member>
    <member name="M:System.Drawing.Image.Clone">
      <summary>この <see cref="T:System.Drawing.Image" /> の同一コピーを作成します。</summary>
      <returns>このメソッドが作成し、オブジェクトとしてキャストされる <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.Dispose">
      <summary>この <see cref="T:System.Drawing.Image" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Image.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Image" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Image.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String)">
      <summary>指定したファイルから <see cref="T:System.Drawing.Image" /> を作成します。</summary>
      <param name="filename">
        <see cref="T:System.Drawing.Image" /> の作成元となるファイルの名前が含まれている文字列。</param>
      <exception cref="T:System.OutOfMemoryException">ファイルのイメージ形式が有効ではありません。  
  
- または - 
 GDI+ はファイルのピクセル形式をサポートしません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定したファイルが存在しません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> が <see cref="T:System.Uri" /> です。</exception>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String,System.Boolean)">
      <summary>そのファイルの埋め込み色管理情報を使用して、指定したファイルから <see cref="T:System.Drawing.Image" /> を作成します。</summary>
      <param name="filename">
        <see cref="T:System.Drawing.Image" /> の作成元となるファイルの名前が含まれている文字列。</param>
      <param name="useEmbeddedColorManagement">イメージ ファイルに埋め込まれている色管理情報を使用する場合は <see langword="true" /> に設定されます。それ以外の場合は <see langword="false" /> に設定されます。</param>
      <exception cref="T:System.OutOfMemoryException">ファイルのイメージ形式が有効ではありません。  
  
- または - 
 GDI+ はファイルのピクセル形式をサポートしません。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定したファイルが存在しません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> が <see cref="T:System.Uri" /> です。</exception>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr)">
      <summary>GDI ビットマップを識別するハンドルから <see cref="T:System.Drawing.Bitmap" /> を作成します。</summary>
      <param name="hbitmap">
        <see cref="T:System.Drawing.Bitmap" /> の作成元の GDI ビットマップ ハンドル。</param>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)">
      <summary>GDI ビットマップを識別するハンドルと GDI パレットを識別するハンドルから <see cref="T:System.Drawing.Bitmap" /> を作成します。</summary>
      <param name="hbitmap">
        <see cref="T:System.Drawing.Bitmap" /> の作成元の GDI ビットマップ ハンドル。</param>
      <param name="hpalette">
        <paramref name="hbitmap" /> パラメーターに指定されたビットマップがデバイスに依存しないビットマップ (DIB: Device-Independent Bitmap) の場合は、ビットマップ カラーの定義に使用される GDI パレットを識別するハンドル。</param>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream)">
      <summary>指定したデータ ストリームから <see cref="T:System.Drawing.Image" /> を作成します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Image" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <exception cref="T:System.ArgumentException">ストリームのイメージ形式が有効ではありません。 
- または - 
 <paramref name="stream" /> が <see langword="null" />です。</exception>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)">
      <summary>指定したデータ ストリームの埋め込み色管理情報をオプションで使用して、そのストリームから <see cref="T:System.Drawing.Image" /> を作成します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Image" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="useEmbeddedColorManagement">データ ストリームに埋め込まれている色管理情報を使用する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">ストリームのイメージ形式が有効ではありません。 
- または - 
 <paramref name="stream" /> が <see langword="null" />です。</exception>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)">
      <summary>オプションで埋め込み色管理情報の使用とイメージ データの検証を行い、指定したデータ ストリームから <see cref="T:System.Drawing.Image" /> を作成します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Image" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="useEmbeddedColorManagement">データ ストリームに埋め込まれている色管理情報を使用する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <param name="validateImageData">イメージ データを検証する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">ストリームのイメージ形式が有効ではありません。</exception>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)">
      <summary>指定した単位でイメージの境界を取得します。</summary>
      <param name="pageUnit">外接する四角形の長さの単位を示す <see cref="T:System.Drawing.GraphicsUnit" /> 値のいずれか。</param>
      <returns>指定した単位でイメージの境界を表す <see cref="T:System.Drawing.RectangleF" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)">
      <summary>指定したイメージ エンコーダーでサポートされるパラメーターについての情報を返します。</summary>
      <param name="encoder">イメージ エンコーダーを指定する GUID。</param>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトの配列が格納されている <see cref="T:System.Drawing.Imaging.EncoderParameters" />。 各 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> には、指定したイメージ エンコーダーでサポートされるパラメーターについての情報が格納されています。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)">
      <summary>指定したディメンションのフレームの数を返します。</summary>
      <param name="dimension">ディメンションの種類の ID を指定する <see cref="T:System.Drawing.Imaging.FrameDimension" />。</param>
      <returns>指定したディメンションのフレームの数。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)">
      <summary>指定したピクセル形式の色深度 (1 ピクセルあたりのビットの数) を返します。</summary>
      <param name="pixfmt">サイズの検索対象となる形式を指定する <see cref="T:System.Drawing.Imaging.PixelFormat" /> のメンバー。</param>
      <returns>指定したピクセル形式の色深度。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetPropertyItem(System.Int32)">
      <summary>この <see cref="T:System.Drawing.Image" /> の指定したプロパティ項目を取得します。</summary>
      <param name="propid">取得するプロパティ項目の ID。</param>
      <exception cref="T:System.ArgumentException">このイメージのイメージ形式は、プロパティ項目をサポートしていません。</exception>
      <returns>このメソッドが取得する <see cref="T:System.Drawing.Imaging.PropertyItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)">
      <summary>この <see cref="T:System.Drawing.Image" /> のサムネイルを返します。</summary>
      <param name="thumbWidth">要求されたサムネイル イメージの幅 (ピクセル単位)。</param>
      <param name="thumbHeight">要求されたサムネイル イメージの高さ (ピクセル単位)。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Image.GetThumbnailImageAbort" /> デリゲート。  
  
 注<paramref name="callback" /> パラメーターには、デリゲートを作成し、そのデリゲートへの参照を渡す必要がありす。ただし、このデリゲートは使用されません。</param>
      <param name="callbackData">
        <see cref="F:System.IntPtr.Zero" />である必要があります。</param>
      <returns>サムネイルを表す <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>この <see cref="T:System.Drawing.Image" /> のピクセル形式に、アルファ情報が含まれているかどうかを示す値を返します。</summary>
      <param name="pixfmt">テスト対象の <see cref="T:System.Drawing.Imaging.PixelFormat" />。</param>
      <returns>
        <paramref name="pixfmt" /> にアルファ情報が含まれる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>1 ピクセルあたり 32 ビットのピクセル形式であるかどうかを示す値を返します。</summary>
      <param name="pixfmt">テスト対象の <see cref="T:System.Drawing.Imaging.PixelFormat" />。</param>
      <returns>
        <paramref name="pixfmt" /> が標準の形式である場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>1 ピクセルあたり 64 ビットのピクセル形式であるかどうかを示す値を返します。</summary>
      <param name="pixfmt">テストする <see cref="T:System.Drawing.Imaging.PixelFormat" /> 列挙体。</param>
      <returns>
        <paramref name="pixfmt" /> が拡張されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.RemovePropertyItem(System.Int32)">
      <summary>指定したプロパティ項目をこの <see cref="T:System.Drawing.Image" /> から削除します。</summary>
      <param name="propid">削除するプロパティ項目の ID。</param>
      <exception cref="T:System.ArgumentException">要求したプロパティ項目は、イメージに含まれていません。  
  
 - または -  
  
 このイメージのイメージ形式は、プロパティ項目をサポートしていません。</exception>
    </member>
    <member name="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)">
      <summary>
        <see cref="T:System.Drawing.Image" /> の回転、反転、または回転と反転の両方を行います。</summary>
      <param name="rotateFlipType">イメージに適用する回転または反転のタイプを指定する <see cref="T:System.Drawing.RotateFlipType" /> のメンバー。</param>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>指定したエンコーダー パラメーターおよびイメージ エンコーダー パラメーターを使用して、このイメージを指定したストリームに保存します。</summary>
      <param name="stream">イメージが保存される <see cref="T:System.IO.Stream" />。</param>
      <param name="encoder">この <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> の <see cref="T:System.Drawing.Image" />。</param>
      <param name="encoderParams">イメージ エンコーダーによって使用されるパラメーターを指定する <see cref="T:System.Drawing.Imaging.EncoderParameters" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">このイメージは、誤ったイメージ形式で保存されています。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>このイメージを、指定した形式で指定したストリームに保存します。</summary>
      <param name="stream">イメージが保存される <see cref="T:System.IO.Stream" />。</param>
      <param name="format">保存するイメージの形式を指定する <see cref="T:System.Drawing.Imaging.ImageFormat" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> または <paramref name="format" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">このイメージは、誤ったイメージ形式で保存されています。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String)">
      <summary>この <see cref="T:System.Drawing.Image" /> を指定したファイルまたはストリームに保存します。</summary>
      <param name="filename">この <see cref="T:System.Drawing.Image" /> の保存先ファイルの名前を格納している文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">このイメージは、誤ったイメージ形式で保存されています。  
  
 - または -  
  
 このイメージは、イメージの作成元と同じファイルに保存されています。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>指定したエンコーダー パラメーターとイメージ エンコーダー パラメーターを使用して、指定したファイルにこの <see cref="T:System.Drawing.Image" /> を保存します。</summary>
      <param name="filename">この <see cref="T:System.Drawing.Image" /> の保存先ファイルの名前を格納している文字列。</param>
      <param name="encoder">この <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> の <see cref="T:System.Drawing.Image" />。</param>
      <param name="encoderParams">この <see cref="T:System.Drawing.Image" /> に使用する <see cref="T:System.Drawing.Imaging.EncoderParameters" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> または <paramref name="encoder" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">このイメージは、誤ったイメージ形式で保存されています。  
  
 - または -  
  
 このイメージは、イメージの作成元と同じファイルに保存されています。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>この <see cref="T:System.Drawing.Image" /> を、指定した形式で指定したファイルに保存します。</summary>
      <param name="filename">この <see cref="T:System.Drawing.Image" /> の保存先ファイルの名前を格納している文字列。</param>
      <param name="format">この <see cref="T:System.Drawing.Imaging.ImageFormat" /> の <see cref="T:System.Drawing.Image" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> または <paramref name="format" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">このイメージは、誤ったイメージ形式で保存されています。  
  
 - または -  
  
 このイメージは、イメージの作成元と同じファイルに保存されています。</exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)">
      <summary>前の <see cref="Overload:System.Drawing.Image.Save" /> メソッドの呼び出しで指定されたファイルまたはストリームにフレームを追加します。</summary>
      <param name="image">追加するフレームが格納されている <see cref="T:System.Drawing.Image" />。</param>
      <param name="encoderParams">保存/追加操作で使用されるイメージ エンコーダーから要求されたパラメーターを格納している <see cref="T:System.Drawing.Imaging.EncoderParameters" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)">
      <summary>前の <see cref="Overload:System.Drawing.Image.Save" /> メソッドの呼び出しで指定されたファイルまたはストリームにフレームを追加します。 このメソッドは、多重フレーム イメージから選択したフレームを別の多重フレーム イメージに保存する場合に使用します。</summary>
      <param name="encoderParams">保存/追加操作で使用されるイメージ エンコーダーから要求されたパラメーターを格納している <see cref="T:System.Drawing.Imaging.EncoderParameters" />。</param>
    </member>
    <member name="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)">
      <summary>ディメンションおよびインデックスで指定されたフレームを選択します。</summary>
      <param name="dimension">ディメンションの種類の ID を指定する <see cref="T:System.Drawing.Imaging.FrameDimension" />。</param>
      <param name="frameIndex">アクティブなフレームのインデックス。</param>
      <returns>常に 0 を返します。</returns>
    </member>
    <member name="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)">
      <summary>この <see cref="T:System.Drawing.Image" /> に、プロパティ項目 (メタデータの一部) を格納します。</summary>
      <param name="propitem">格納される <see cref="T:System.Drawing.Imaging.PropertyItem" />。</param>
      <exception cref="T:System.ArgumentException">このイメージのイメージ形式は、プロパティ項目をサポートしていません。</exception>
    </member>
    <member name="M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</summary>
      <param name="si" />
      <param name="context">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
    </member>
    <member name="P:System.Drawing.Image.Flags">
      <summary>この <see cref="T:System.Drawing.Image" /> のピクセル データに対する属性フラグを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ImageFlags" /> に対する <see cref="T:System.Drawing.Image" /> のビットごとの組み合わせを表す整数。</returns>
    </member>
    <member name="P:System.Drawing.Image.FrameDimensionsList">
      <summary>この <see cref="T:System.Drawing.Image" /> 内のフレームの大きさを表す GUID の配列を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Image" /> 内のフレームの大きさを重要度の高いものから順に指定する GUID の配列。</returns>
    </member>
    <member name="P:System.Drawing.Image.Height">
      <summary>この <see cref="T:System.Drawing.Image" /> の高さ (ピクセル単位) を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Image" /> の高さ (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Drawing.Image.HorizontalResolution">
      <summary>この <see cref="T:System.Drawing.Image" /> の水平方向の解像度 (1 インチあたりのピクセル数) を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Image" /> の水平方向の解像度 (1 インチあたりのピクセル数)。</returns>
    </member>
    <member name="P:System.Drawing.Image.Palette">
      <summary>この <see cref="T:System.Drawing.Image" /> に使用するカラー パレットを取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorPalette" /> に使用するカラー パレットを表す <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="P:System.Drawing.Image.PhysicalDimension">
      <summary>このイメージの幅と高さを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.SizeF" /> の幅と高さを表す <see cref="T:System.Drawing.Image" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Image.PixelFormat">
      <summary>この <see cref="T:System.Drawing.Image" /> のピクセル形式を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.PixelFormat" /> のピクセル形式を表す <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyIdList">
      <summary>この <see cref="T:System.Drawing.Image" /> に格納されたプロパティ項目の ID を取得します。</summary>
      <returns>このイメージに格納された各プロパティ項目に対して 1 つずつ存在するプロパティ ID の配列。</returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyItems">
      <summary>この <see cref="T:System.Drawing.Image" /> に格納されたすべてのプロパティ項目 (メタデータの一部) を取得します。</summary>
      <returns>このイメージに格納された各プロパティ項目に対して 1 つずつ存在する <see cref="T:System.Drawing.Imaging.PropertyItem" /> の配列。</returns>
    </member>
    <member name="P:System.Drawing.Image.RawFormat">
      <summary>この <see cref="T:System.Drawing.Image" /> のファイル形式を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ImageFormat" /> のファイル形式を表す <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="P:System.Drawing.Image.Size">
      <summary>このイメージの幅と高さ (ピクセル単位) を取得します。</summary>
      <returns>このイメージの幅と高さ (ピクセル単位) を表す <see cref="T:System.Drawing.Size" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Image.Tag">
      <summary>イメージに関する追加データを提供するオブジェクトを取得または設定します。</summary>
      <returns>イメージに関する追加データを提供する <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Drawing.Image.VerticalResolution">
      <summary>この <see cref="T:System.Drawing.Image" /> の垂直方向の解像度 (1 インチあたりのピクセル数) を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Image" /> の垂直方向の解像度 (1 インチあたりのピクセル数)。</returns>
    </member>
    <member name="P:System.Drawing.Image.Width">
      <summary>この <see cref="T:System.Drawing.Image" /> の幅 (ピクセル単位) を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Image" /> の幅 (ピクセル単位)。</returns>
    </member>
    <member name="T:System.Drawing.Image.GetThumbnailImageAbort">
      <summary>
        <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> メソッドが、実行を早期キャンセルするタイミングを決定するコールバック メソッドを提供します。</summary>
      <returns>
        <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> メソッドに実行を早期停止させる場合、このメソッドは <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="T:System.Drawing.ImageAnimator">
      <summary>タイムベース フレームが含まれているイメージをアニメーション化します。</summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)">
      <summary>多重フレーム イメージをアニメーションで表示します。</summary>
      <param name="image">アニメーション化する <see cref="T:System.Drawing.Image" /> オブジェクト。</param>
      <param name="onFrameChangedHandler">アニメーション フレームが変更されたときに呼び出されるメソッドを指定する <see langword="EventHandler" /> オブジェクト。</param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)">
      <summary>指定のイメージにタイムベース フレームが含まれているかどうかを示すブール値を返します。</summary>
      <param name="image">テスト対象の <see cref="T:System.Drawing.Image" /> オブジェクト。</param>
      <returns>指定のイメージにタイムベース フレームが含まれている場合、このメソッドは <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)">
      <summary>アニメーションの実行を終了します。</summary>
      <param name="image">アニメーション化を停止する <see cref="T:System.Drawing.Image" /> オブジェクト。</param>
      <param name="onFrameChangedHandler">アニメーション フレームが変更されたときに呼び出されるメソッドを指定する <see langword="EventHandler" /> オブジェクト。</param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames">
      <summary>現在アニメーション実行中のすべてのイメージのフレームを進めます。 新しいフレームは、イメージが次にレンダリングされたときに描画されます。</summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)">
      <summary>指定のイメージのフレームを進めます。 新しいフレームは、イメージが次にレンダリングされたときに描画されます。 このメソッドは、タイムベース フレームを持つイメージだけに適用されます。</summary>
      <param name="image">フレームを更新する対象の <see cref="T:System.Drawing.Image" /> オブジェクト。</param>
    </member>
    <member name="T:System.Drawing.ImageConverter">
      <summary>
        <see cref="T:System.Drawing.ImageConverter" /> は、色のデータ型を別のデータ型に変換する場合に使用する <see cref="T:System.Drawing.Image" /> オブジェクトです。 <see cref="T:System.ComponentModel.TypeDescriptor" /> オブジェクトを通じてこのクラスにアクセスします。</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.ImageConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>この <see cref="T:System.Drawing.ImageConverter" /> が、指定したコンテキストを使用して、指定した型のインスタンスを <see cref="T:System.Drawing.Image" /> に変換できるかどうかを決定します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換前の型を指定する <see cref="T:System.Type" />。</param>
      <returns>このメソッドは、<see cref="T:System.Drawing.ImageConverter" /> が変換を実行できる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>この <see cref="T:System.Drawing.ImageConverter" /> が、指定したコンテキストを使用して、<see cref="T:System.Drawing.Image" /> を指定した型のインスタンスに変換できるかどうかを決定します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換後の型を指定する <see cref="T:System.Type" />。</param>
      <returns>このメソッドは、<see cref="T:System.Drawing.ImageConverter" /> が変換を実行できる場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトを <see cref="T:System.Drawing.Image" /> に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">特定のカルチャに関する情報を格納する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換される <see cref="T:System.Object" />。</param>
      <exception cref="T:System.NotSupportedException">変換を完了できません。</exception>
      <returns>メソッドが成功した場合は、指定したオブジェクトを変換して作成された <see cref="T:System.Drawing.Image" /> を返します。 成功しなかった場合は、例外がスローされます。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Drawing.Image" /> (または、<see cref="T:System.Drawing.Image" /> にキャスト可能なオブジェクト) を特定の型に変換します。</summary>
      <param name="context">フォーマッタ コンテキスト。 このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</param>
      <param name="culture">特定のカルチャで使用される書式指定規約を指定する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換対象の <see cref="T:System.Drawing.Image" />。</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> を変換した後の <see cref="T:System.Drawing.Image" />。</param>
      <exception cref="T:System.NotSupportedException">変換を完了できません。</exception>
      <returns>このメソッドは、変換されたオブジェクトを返します。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>この型のプロパティのセットを取得します。</summary>
      <param name="context">追加のコンテキストが提供されるときに使用する型記述子。</param>
      <param name="value">プロパティを取得する対象となるオブジェクトの値。</param>
      <param name="attributes">プロパティを説明する <see cref="T:System.Attribute" /> オブジェクトの配列。</param>
      <returns>このデータ型で公開する必要があるプロパティ セット。 プロパティを公開する必要がない場合は <see langword="null" /> を返します。 既定の実装では、常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトがプロパティをサポートしているかどうかを示します。 既定値は <see langword="false" /> です。</summary>
      <param name="context">追加のコンテキストが提供されるときに使用する型記述子。</param>
      <returns>このオブジェクトのプロパティを見つけるときに <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> メソッドを呼び出す必要がある場合、このメソッドは <see langword="true" /> を返します。</returns>
    </member>
    <member name="T:System.Drawing.ImageFormatConverter">
      <summary>
        <see cref="T:System.Drawing.ImageFormatConverter" /> は、色のデータ型を別のデータ型に変換する場合に使用する <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクトです。 <see cref="T:System.ComponentModel.TypeDescriptor" /> オブジェクトを通じてこのクラスにアクセスします。</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.ImageFormatConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>対象のコンバーターが、指定した変換前の型のオブジェクトをそのコンバーターのネイティブな型に変換できるかどうかを示します。</summary>
      <param name="context">フォーマッタ コンテキスト。 このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</param>
      <param name="sourceType">変換前の型。</param>
      <returns>オブジェクトが変換を実行できる場合、このメソッドは <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、コンテキストを使用してオブジェクトを指定の目的型に変換できるかどうかを示す値を取得します。</summary>
      <param name="context">この型変換のコンテキストを指定する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">この <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクトの変換後の型を表す <see cref="T:System.Type" />。</param>
      <returns>オブジェクトが変換を実行できる場合、このメソッドは <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定のオブジェクトを <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクトに変換します。</summary>
      <param name="context">フォーマッタ コンテキスト。 このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</param>
      <param name="culture">特定のカルチャで使用される書式指定規約を指定する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <exception cref="T:System.NotSupportedException">変換を完了できません。</exception>
      <returns>変換後のオブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したオブジェクトを指定した型に変換します。</summary>
      <param name="context">フォーマッタ コンテキスト。 このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</param>
      <param name="culture">特定のカルチャで使用される書式指定規約を指定する <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">オブジェクトの変換後の型。</param>
      <exception cref="T:System.NotSupportedException">変換を完了できません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> が <see langword="null" />です。</exception>
      <returns>変換後のオブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>検証コントロールのデザイン対象となるデータ型の標準値のセットが含まれたコレクションを取得します。 データ型が値の標準セットをサポートしていない場合は <see langword="null" /> を返します。</summary>
      <param name="context">フォーマッタ コンテキスト。 このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。 この値は <see langword="null" /> になる場合があるため、常に確認してください。 また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</param>
      <returns>有効な値の標準セットまたは <see langword="null" /> が格納されているコレクション。 既定の実装では、常に <see langword="null" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>リストから選択可能な標準値セットがこのオブジェクトでサポートされるかどうかを示します。</summary>
      <param name="context">追加のコンテキストが提供されるときに使用する型記述子。</param>
      <returns>オブジェクトがサポートしている標準値セットを見つけるために <see cref="Overload:System.Drawing.ImageFormatConverter.GetStandardValues" /> メソッドを呼び出す必要がある場合、このメソッドは <see langword="true" /> を返します。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.BitmapData">
      <summary>ビットマップ イメージの属性を指定します。 <see cref="T:System.Drawing.Imaging.BitmapData" /> クラスは、<see cref="T:System.Drawing.Bitmap" /> クラスの <see cref="Overload:System.Drawing.Bitmap.LockBits" /> メソッドおよび <see cref="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" /> メソッドで使用されます。 継承はできません。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.BitmapData.#ctor">
      <summary>
        <see cref="T:System.Drawing.Imaging.BitmapData" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Height">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> オブジェクトの高さ (ピクセル単位) を取得または設定します。 スキャン ラインの数を指す場合もあります。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> オブジェクトの高さ (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.PixelFormat">
      <summary>この <see cref="T:System.Drawing.Imaging.BitmapData" /> オブジェクトを返した <see cref="T:System.Drawing.Bitmap" /> オブジェクトに格納されているピクセル情報の形式を取得または設定します。</summary>
      <returns>関連付けられた <see cref="T:System.Drawing.Imaging.PixelFormat" /> オブジェクトに格納されているピクセル情報の形式を指定する <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Reserved">
      <summary>予約済み。 使用しないでください。</summary>
      <returns>予約済み。 使用しないでください。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Scan0">
      <summary>ビットマップ内の最初のピクセル データのアドレスを取得または設定します。 これをビットマップ内の最初のスキャン ラインと考えることもできます。</summary>
      <returns>ビットマップ内の最初のピクセル データのアドレス。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Stride">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> オブジェクトのストライド幅 (スキャン幅とも呼ばれる) を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> オブジェクトのストライド (バイト単位)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Width">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> オブジェクトの幅 (ピクセル単位) を取得または設定します。 これを 1 つのスキャン ラインのピクセル数と考えることもできます。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> オブジェクトのピクセルの幅。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorAdjustType">
      <summary>色の調整情報を使用する GDI+ オブジェクトを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Any">
      <summary>指定した型の数。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Bitmap">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> オブジェクトの色の調整情報。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Brush">
      <summary>
        <see cref="T:System.Drawing.Brush" /> オブジェクトの色の調整情報。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Count">
      <summary>指定した型の数。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Default">
      <summary>独自の色の調整情報がないすべての GDI+ オブジェクトにより使用される色の調整情報。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Pen">
      <summary>
        <see cref="T:System.Drawing.Pen" /> オブジェクトの色の調整情報。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Text">
      <summary>テキストの色の調整情報。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorChannelFlag">
      <summary>CMYK (シアン、マゼンタ、黄、黒) 色空間の個々のチャネルを指定します。 この列挙体は <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetOutputChannel" /> メソッドで使用されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC">
      <summary>シアンのカラー チャネル。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelK">
      <summary>黒のカラー チャネル。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelLast">
      <summary>最後に選択されたチャネルが使用されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelM">
      <summary>マゼンタのカラー チャネル。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelY">
      <summary>黄色のカラー チャネル。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMap">
      <summary>色を変換するためのマップを定義します。 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> クラスのいくつかのメソッドは、<see cref="T:System.Drawing.Imaging.ColorMap" /> 構造体の配列であるカラー リマップ テーブルを使用することにより、イメージの色を調整します。 継承はできません。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMap.#ctor">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMap" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.NewColor">
      <summary>変換後の新しい <see cref="T:System.Drawing.Color" /> 構造体を取得または設定します。</summary>
      <returns>変換後の新しい <see cref="T:System.Drawing.Color" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.OldColor">
      <summary>変換される既存の <see cref="T:System.Drawing.Color" /> 構造体を取得または設定します。</summary>
      <returns>変換される既存の <see cref="T:System.Drawing.Color" /> 構造体。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMapType">
      <summary>カラー マップの種類を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Brush">
      <summary>
        <see cref="T:System.Drawing.Brush" /> のカラー マップを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Default">
      <summary>既定のカラー マップ。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrix">
      <summary>RGBAW 空間の座標を含む 5 x 5 の行列を定義します。 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> クラスのいくつかのメソッドは、カラー行列を使用してイメージの色を調整します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.Single[][])">
      <summary>指定した行列 <paramref name="newColorMatrix" /> の要素を使用して、<see cref="T:System.Drawing.Imaging.ColorMatrix" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="newColorMatrix">新しい <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の要素の値。</param>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Item(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.Imaging.ColorMatrix" /> で指定された行と列にある要素を取得または設定します。</summary>
      <param name="row">要素の行。</param>
      <param name="column">要素の列。</param>
      <returns>指定された行と列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix00">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 0 (ゼロ) 行および第 0 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 0 行、第 0 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix01">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 0 (ゼロ) 行および第 1 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 0 行、第 1 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix02">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 0 (ゼロ) 行および第 2 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 0 行、第 2 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix03">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 0 (ゼロ) 行および第 3 列にある要素を取得または設定します。 アルファ要素を表します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 0 行、第 3 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix04">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 0 (ゼロ) 行および第 4 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 0 行、第 4 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix10">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 1 行および第 0 (ゼロ) 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 1 行、第 0 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix11">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 1 行および第 1 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 1 行、第 1 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix12">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 1 行および第 2 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 1 行、第 2 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix13">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 1 行および第 3 列にある要素を取得または設定します。 アルファ要素を表します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 1 行、第 3 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix14">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 1 行および第 4 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 1 行、第 4 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix20">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 2 行および第 0 (ゼロ) 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 2 行、第 0 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix21">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 2 行および第 1 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 2 行、第 1 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix22">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 2 行および第 2 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 2 行、第 2 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix23">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 2 行および第 3 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 2 行、第 3 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix24">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 2 行および第 4 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 2 行、第 4 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix30">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 3 行および第 0 (ゼロ) 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 3 行、第 0 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix31">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 3 行および第 1 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 3 行、第 1 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix32">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 3 行および第 2 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 3 行、第 2 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix33">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 3 行および第 3 列にある要素を取得または設定します。 アルファ要素を表します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 3 行、第 3 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix34">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 3 行および第 4 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 3 行、第 4 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix40">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 4 行および第 0 (ゼロ) 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 4 行、第 0 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix41">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 4 行および第 1 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 4 行、第 1 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix42">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 4 行および第 2 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 4 行、第 2 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix43">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 4 行および第 3 列にある要素を取得または設定します。 アルファ要素を表します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 4 行、第 3 列にある要素。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix44">
      <summary>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 4 行および第 4 列にある要素を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ColorMatrix" /> の第 4 行、第 4 列にある要素。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrixFlag">
      <summary>
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> の色およびグレースケールの調整設定値の影響を受ける、イメージおよび色の種類を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.AltGrays">
      <summary>灰色の網かけのみが調整されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.Default">
      <summary>すべてのカラー値 (灰色の網かけを含む) が同じカラー調整行列によって調整されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.SkipGrays">
      <summary>色はすべて調整されますが、灰色の網かけは調整されません。 灰色の網かけは、赤、緑、青の各要素の値が同じである色です。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMode">
      <summary>色要素値の 2 つのモードを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb32Mode">
      <summary>指定された整数値は 32 ビット値です。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb64Mode">
      <summary>指定された整数値は 64 ビット値です。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorPalette">
      <summary>カラー パレットを構成する色の配列を定義します。 色は 32 ビット ARGB 色です。 継承はできません。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Entries">
      <summary>
        <see cref="T:System.Drawing.Color" /> 構造体の配列を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Color" /> を構成する <see cref="T:System.Drawing.Imaging.ColorPalette" /> 構造体の配列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Flags">
      <summary>色の配列の色情報の解釈方法を指定する値を取得します。</summary>
      <returns>有効なフラグ値は次のとおりです。  
  
 0x00000001  
 配列内のカラー値にはアルファ情報が含まれています。  
  
 0x00000002  
 配列内の色はグレースケール値です。  
  
 0x00000004  
 配列内の色はハーフトーン値です。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EmfPlusRecordType">
      <summary>グラフィック コマンドの読み取り/書き込みのためにメタファイルで使用できるメソッドを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainer">
      <summary>各 <see cref="M:System.Drawing.Graphics.BeginContainer" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainerNoParams">
      <summary>各 <see cref="M:System.Drawing.Graphics.BeginContainer" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Clear">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.Clear(System.Drawing.Color)" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Comment">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawArc">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawArc" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawBeziers">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawBeziers" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawClosedCurve">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawClosedCurve" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawCurve">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawCurve" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawDriverString">
      <summary>文字列、位置、および書式情報を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawEllipse">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawEllipse" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImage">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImagePoints">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawLines">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawLines" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPath">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPie">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawPie" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawRects">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawRectangles" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawString">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.DrawString" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAbortPath">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAlphaBlend">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAngleArc">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfArcTo">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBeginPath">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBitBlt">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfChord">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCloseFigure">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorCorrectPalette">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorMatchToTargetW">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateBrushIndirect">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpace">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpaceW">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateDibPatternBrushPt">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateMonoBrush">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePalette">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePen">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteColorSpace">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteObject">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDrawEscape">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEllipse">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEndPath">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEof">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExcludeClipRect">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreateFontIndirect">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreatePen">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtEscape">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtFloodFill">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtSelectClipRgn">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutA">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutW">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillPath">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillRgn">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFlattenPath">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfForceUfiMapping">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFrameRgn">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGdiComment">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsBoundedRecord">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsRecord">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGradientFill">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfHeader">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfIntersectClipRect">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfInvertRgn">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfLineTo">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMaskBlt">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMax">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMin">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfModifyWorldTransform">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMoveToEx">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfNamedEscpae">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfOffsetClipRgn">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPaintRgn">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPie">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPixelFormat">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlgBlt">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlusRecordBase">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier16">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo16">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw16">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon16">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline16">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyLineTo">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolylineTo16">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon16">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline16">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutA">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutW">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRealizePalette">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRectangle">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved069">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved117">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfResizePalette">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRestoreDC">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundArc">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundRect">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSaveDC">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleViewportExtEx">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleWindowExtEx">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectClipPath">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectObject">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectPalette">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetArcDirection">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkColor">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkMode">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBrushOrgEx">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorAdjustment">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorSpace">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetDIBitsToDevice">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmMode">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileA">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileW">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLayout">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLinkedUfis">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapMode">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapperFlags">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMetaRgn">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMiterLimit">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPaletteEntries">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPixelV">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPolyFillMode">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetROP2">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetStretchBltMode">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextAlign">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextColor">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextJustification">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportExtEx">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportOrgEx">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowExtEx">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowOrgEx">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWorldTransform">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSmallTextOut">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStartDoc">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchBlt">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchDIBits">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokeAndFillPath">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokePath">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfTransparentBlt">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfWidenPath">
      <summary>MSDN ライブラリの「GDI」で「Enhanced-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndContainer">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndOfFile">
      <summary>メタファイルの最後の EMF+ レコードをマークするレコードを識別します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillClosedCurve">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.FillClosedCurve" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillEllipse">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.FillEllipse" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPath">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPie">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.FillPie" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPolygon">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.FillPolygon" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRects">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.FillRectangles" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRegion">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.GetDC">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.GetHdc" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Header">
      <summary>EMF+ ヘッダーであるレコードを識別します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Invalid">
      <summary>無効なデータを示します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Max">
      <summary>この列挙体の最大値。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Min">
      <summary>この列挙体の最小値。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatEnd">
      <summary>複数形式セクションの末尾をマークします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatSection">
      <summary>複数形式セクションをマークします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatStart">
      <summary>複数形式セクションの先頭をマークします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiplyWorldTransform">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.MultiplyTransform" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Object">
      <summary>オブジェクトをマークします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.OffsetClip">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.TranslateClip" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetClip">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.ResetClip" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetWorldTransform">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.ResetTransform" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Restore">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.RotateWorldTransform">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.RotateTransform" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Save">
      <summary>以下を参照してください。<see cref="M:System.Drawing.Graphics.Save" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ScaleWorldTransform">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.ScaleTransform" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetAntiAliasMode">
      <summary>以下を参照してください。<see cref="P:System.Drawing.Graphics.SmoothingMode" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipPath">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.SetClip" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRect">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.SetClip" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRegion">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.SetClip" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingMode">
      <summary>以下を参照してください。<see cref="P:System.Drawing.Graphics.CompositingMode" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingQuality">
      <summary>以下を参照してください。<see cref="P:System.Drawing.Graphics.CompositingQuality" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetInterpolationMode">
      <summary>以下を参照してください。<see cref="P:System.Drawing.Graphics.InterpolationMode" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPageTransform">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPixelOffsetMode">
      <summary>以下を参照してください。<see cref="P:System.Drawing.Graphics.PixelOffsetMode" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetRenderingOrigin">
      <summary>以下を参照してください。<see cref="P:System.Drawing.Graphics.RenderingOrigin" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextContrast">
      <summary>以下を参照してください。<see cref="P:System.Drawing.Graphics.TextContrast" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextRenderingHint">
      <summary>以下を参照してください。<see cref="P:System.Drawing.Graphics.TextRenderingHint" /></summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetWorldTransform">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Total">
      <summary>内部使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.TranslateWorldTransform">
      <summary>各 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> メソッドを参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfAnimatePalette">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfArc">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfBitBlt">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfChord">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateBrushIndirect">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateFontIndirect">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePalette">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePatternBrush">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePenIndirect">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateRegion">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDeleteObject">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibBitBlt">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibCreatePatternBrush">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibStretchBlt">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEllipse">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEscape">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExcludeClipRect">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtFloodFill">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtTextOut">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFillRegion">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFloodFill">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFrameRegion">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfIntersectClipRect">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfInvertRegion">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfLineTo">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfMoveTo">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetCilpRgn">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetViewportOrg">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetWindowOrg">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPaintRegion">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPatBlt">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPie">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolygon">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyline">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyPolygon">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRealizePalette">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRecordBase">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRectangle">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfResizePalette">
      <summary>指定した値に基づいて論理パレットのサイズを大きくするか、または小さくします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRestoreDC">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRoundRect">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSaveDC">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleViewportExt">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleWindowExt">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectClipRegion">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectObject">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectPalette">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkColor">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkMode">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetDibToDev">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetLayout">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapMode">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapperFlags">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPalEntries">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPixel">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPolyFillMode">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetRelAbs">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetROP2">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetStretchBltMode">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextAlign">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextCharExtra">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextColor">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextJustification">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportExt">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportOrg">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowExt">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowOrg">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchBlt">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchDib">
      <summary>指定したコピー先の四角形に、DIB 内のピクセルの四角形に対するカラー データをコピーします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfTextOut">
      <summary>MSDN ライブラリの「GDI」で「Windows-Format Metafiles」を参照してください。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EmfType">
      <summary>拡張メタファイル (EMF) ファイルに格納されているレコードの性質を指定します。 この列挙体は、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスのいくつかのコンストラクターで使用されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfOnly">
      <summary>メタファイル内のすべてのレコードは EMF レコードであり、それらのレコードは GDI または GDI+ によって表示できることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusDual">
      <summary>メタファイル内のすべての EMF+ レコードが代替 EMF レコードに関連付けられるように指定します。 <see cref="F:System.Drawing.Imaging.EmfType.EmfPlusDual" /> 型のメタファイルは、GDI または GDI+ により表示できます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusOnly">
      <summary>メタファイル内のすべてのレコードは EMF+ レコードであり、それらのレコードは GDI+ によって表示でき、GDI によっては表示できないことを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Encoder">
      <summary>
        <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトは、イメージ エンコーダー パラメーター カテゴリを識別するグローバル一意識別子 (GUID) をカプセル化します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ChrominanceTable">
      <summary>クロミナンス テーブル パラメーター カテゴリのグローバル一意識別子を使用して初期化される <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorDepth">
      <summary>色深度パラメーター カテゴリのグローバル一意識別子を使用して初期化される <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorSpace">
      <summary>色空間カテゴリのグローバル一意識別子を使用して初期化されるエンコーダーを表します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Compression">
      <summary>圧縮パラメーター カテゴリのグローバル一意識別子を使用して初期化される <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ImageItems">
      <summary>イメージ項目カテゴリのグローバル一意識別子を使用して初期化されるエンコーダーを表します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.LuminanceTable">
      <summary>輝度テーブル パラメーター カテゴリのグローバル一意識別子を使用して初期化される <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトを表します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Quality">
      <summary>品質パラメーター カテゴリのグローバル一意識別子を使用して初期化される <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトを取得します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.RenderMethod">
      <summary>レンダリング メソッド パラメーター カテゴリのグローバル一意識別子を使用して初期化される <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトを表します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveAsCmyk">
      <summary>CMYK として保存カテゴリのグローバル一意識別子を使用して初期化されるエンコーダーを表します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveFlag">
      <summary>フラグ保存パラメーター カテゴリのグローバル一意識別子を使用して初期化される <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトを表します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ScanMethod">
      <summary>スキャン メソッド パラメーター カテゴリのグローバル一意識別子を使用して初期化される <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトを表します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Transformation">
      <summary>変換パラメーター カテゴリのグローバル一意識別子を使用して初期化される <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトを表します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Version">
      <summary>バージョン パラメーター カテゴリのグローバル一意識別子を使用して初期化される <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトを表します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Encoder.#ctor(System.Guid)">
      <summary>指定したグローバル一意識別子 (GUID) から <see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 GUID はイメージ エンコーダー パラメーター カテゴリを指定します。</summary>
      <param name="guid">イメージ エンコーダー パラメーター カテゴリを識別するグローバル一意識別子。</param>
    </member>
    <member name="P:System.Drawing.Imaging.Encoder.Guid">
      <summary>イメージ エンコーダー パラメーター カテゴリを識別するグローバル一意識別子 (GUID) を取得します。</summary>
      <returns>イメージ エンコーダー パラメーター カテゴリを識別する GUID。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameter">
      <summary>値、または値の配列をイメージ エンコーダーに渡すのに使用されます。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 1 つの 8 ビット符号なし整数を指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値を指定する 8 ビット符号なし整数。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 1 つの 8 ビット値を指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> または <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値を指定するバイト。</param>
      <param name="undefined">
        <see langword="true" /> の場合、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティは <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> に設定されます。それ以外の場合、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティは <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" /> に設定されます。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 8 ビット符号なし整数の配列を指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを配列内の要素数に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値を指定する 8 ビット符号なし整数の配列。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトとバイトの配列を指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> または <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを配列内の要素数に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値を指定するバイトの配列。</param>
      <param name="undefined">
        <see langword="true" /> の場合、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティは <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> に設定されます。それ以外の場合、<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティは <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" /> に設定されます。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 1 つの 16 ビット整数を指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値を指定する 16 ビット整数。 負でない必要があります。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 16 ビット整数の配列を指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを配列内の要素数に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値を指定する 16 ビット整数の配列。 配列内の整数は、負数以外にする必要があります。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクト、値の数、値のデータ型、および <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトに格納されている値へのポインターを指定して、<see cref="T:System.Drawing.Imaging.EncoderParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="numberValues">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値の数を指定する整数。 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティは、この値に設定されます。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> オブジェクトに格納されている値のデータ型を指定する <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 列挙体のメンバー。 <see cref="T:System.Type" /> プロパティおよび <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティは、この値に設定されます。</param>
      <param name="value">
        <paramref name="Type" /> パラメーターで指定された型の値の配列へのポインター。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)">
      <summary>指定された <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトと 32 ビット整数のペアを使って、<see cref="T:System.Drawing.Imaging.EncoderParameter" /> クラスの新しいインスタンスを初期化します。 整数のペアは分数を表し、最初の整数は分子、2 番目の整数は分母です。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="numerator">分数の分子を表す 32 ビット整数。 負でない必要があります。</param>
      <param name="denominator">分数の分母を表す 32 ビット整数。 負でない必要があります。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと、<see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトに格納されている値の数、値のデータ型、および値へのポインターを指定する 3 つの整数を指定して、<see cref="T:System.Drawing.Imaging.EncoderParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="NumberOfValues">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値の数を指定する整数。 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティは、この値に設定されます。</param>
      <param name="Type">
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> オブジェクトに格納されている値のデータ型を指定する <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 列挙体のメンバー。 <see cref="T:System.Type" /> プロパティおよび <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティは、この値に設定されます。</param>
      <param name="Value">
        <paramref name="Type" /> パラメーターで指定された型の値の配列へのポインター。</param>
      <exception cref="T:System.InvalidOperationException">型は、有効な <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> ではありません。</exception>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 4 つの 32 ビット整数を指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 4 つの整数は分数の範囲を表します。 最初の 2 つの整数は範囲内の最小の分数を表し、残りの 2 つの整数は範囲内の最大の分数を表します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="numerator1">範囲内の最小の分数の分子を表す 32 ビット整数。 負でない必要があります。</param>
      <param name="demoninator1">範囲内の最小の分数の分母を表す 32 ビット整数。 負でない必要があります。</param>
      <param name="numerator2">範囲内の最小の分数の分母を表す 32 ビット整数。 負でない必要があります。</param>
      <param name="demoninator2">範囲内の最大の分数の分子を表す 32 ビット整数。 負でない必要があります。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 32 ビット整数の配列 2 つを指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 2 つの配列は分数の配列を表します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを <paramref name="numerator" /> 配列の要素数に設定します。この要素数は、<paramref name="denominator" /> 配列の要素数と同じである必要があります。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="numerator">分数の分子を指定する 32 ビット整数の配列。 配列内の整数は、負数以外にする必要があります。</param>
      <param name="denominator">分数の分母を指定する 32 ビット整数の配列。 配列内の整数は、負数以外にする必要があります。 インデックスの分母は、同じインデックスの分子とペアになります。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 32 ビット整数の配列を 4 つ指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 4 つの配列は、有理数の範囲の配列を表します。 有理数の範囲は、最小の分数値から最大の分数値までのすべての分数のセットです。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを <paramref name="numerator1" /> 配列の要素数に設定します。この要素数は、他の 3 つの配列の要素数と同じである必要があります。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="numerator1">範囲内の最小値の分子を指定する 32 ビット整数の配列。 配列内の整数は、負数以外にする必要があります。</param>
      <param name="denominator1">範囲内の最小値の分母を指定する 32 ビット整数の配列。 配列内の整数は、負数以外にする必要があります。</param>
      <param name="numerator2">範囲内の最大値の分子を指定する 32 ビット整数の配列。 配列内の整数は、負数以外にする必要があります。</param>
      <param name="denominator2">範囲内の最大値の分母を指定する 32 ビット整数の配列。 配列内の整数は、負数以外にする必要があります。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 1 つの 64 ビット整数を指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32 ビット) に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値を指定する 64 ビット整数。 負でない必要があります。 このパラメーターは、32 ビット整数に変換されてから <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されます。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)">
      <summary>指定された <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトと 64 ビット整数のペアを使用して、<see cref="T:System.Drawing.Imaging.EncoderParameter" /> クラスの新しいインスタンスを初期化します。 整数のペアは整数の範囲を表し、最初の整数はその範囲の最小値、2 番目の整数はその範囲の最大値です。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを 1 に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="rangebegin">整数の範囲の最小値を表す 64 ビット整数。 負でない必要があります。 このパラメーターは、32 ビット整数に変換されてから <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されます。</param>
      <param name="rangeend">整数の範囲の最大値を表す 64 ビット整数。 負でない必要があります。 このパラメーターは、32 ビット整数に変換されてから <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されます。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 64 ビット整数の配列を指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32 ビット) に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを配列内の要素数に設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="value">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値を指定する 64 ビット整数の配列。 配列内の整数は、負数以外にする必要があります。 64 ビット整数は、<see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納される前に、32 ビット整数に変換されます。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと 64 ビット整数の配列 2 つを指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 2 つの配列は整数範囲の配列を表します。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを <paramref name="rangebegin" /> 配列の要素数に設定します。この要素数は、<paramref name="rangeend" /> 配列の要素数と同じである必要があります。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="rangebegin">整数の範囲の最小値を指定する 64 ビット整数の配列。 配列内の整数は、負数以外にする必要があります。 64 ビット整数は、<see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納される前に、32 ビット整数に変換されます。</param>
      <param name="rangeend">整数の範囲の最大値を指定する 64 ビット整数の配列。 配列内の整数は、負数以外にする必要があります。 64 ビット整数は、<see cref="T:System.Drawing.Imaging.EncoderParameters" /> オブジェクトに格納される前に、32 ビット整数に変換されます。 インデックスの最大値は、同じインデックスの最小値とペアになります。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトと文字列を指定して、<see cref="T:System.Drawing.Imaging.Encoder" /> クラスの新しいインスタンスを初期化します。 文字列は、<see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納される前に、null で終わる ASCII 文字列に変換されます。 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> プロパティを <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii" /> に設定し、<see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> プロパティを null ターミネータを含めた ASCII 文字列の長さに設定します。</summary>
      <param name="encoder">パラメーター カテゴリのグローバル一意識別子をカプセル化する <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクト。</param>
      <param name="value">
        <see cref="T:System.String" /> オブジェクトに格納されている値を指定する <see cref="T:System.Drawing.Imaging.EncoderParameter" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Dispose">
      <summary>この <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Finalize">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトがガベージ コレクションによって収集される前に、その <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトがリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Encoder">
      <summary>この <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトに関連付けられている <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトを取得または設定します。 <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトは、この <see cref="F:System.Drawing.Imaging.Encoder.Quality" /> オブジェクトに格納されているパラメーターのカテゴリ (たとえば、<see cref="F:System.Drawing.Imaging.Encoder.ColorDepth" />、<see cref="F:System.Drawing.Imaging.Encoder.Compression" />、または <see cref="T:System.Drawing.Imaging.EncoderParameter" />) を指定するグローバル一意識別子 (GUID) をカプセル化します。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.Encoder" /> オブジェクトに格納されているパラメーターのカテゴリを指定する GUID をカプセル化する <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues">
      <summary>この <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値の配列の要素数を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値の配列の要素数を指定する整数。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Type">
      <summary>この <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値のデータ型を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> オブジェクトに格納されている値のデータ型を指定する <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 列挙体のメンバー。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.ValueType">
      <summary>この <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトに格納されている値のデータ型を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> オブジェクトに格納されている値のデータ型を指定する <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 列挙体のメンバー。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameters">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトの配列をカプセル化します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameters" /> オブジェクトを 1 つ格納できる <see cref="T:System.Drawing.Imaging.EncoderParameter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameters" /> オブジェクトを指定数格納する <see cref="T:System.Drawing.Imaging.EncoderParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="count">
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトが格納できる <see cref="T:System.Drawing.Imaging.EncoderParameters" /> オブジェクトの数を指定する整数。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.Dispose">
      <summary>この <see cref="T:System.Drawing.Imaging.EncoderParameters" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameters.Param">
      <summary>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトの配列を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> オブジェクトの配列。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameterValueType">
      <summary>イメージの <see cref="Overload:System.Drawing.Image.Save" /> メソッドまたは <see cref="Overload:System.Drawing.Image.SaveAdd" /> メソッドで使用される <see cref="T:System.Drawing.Imaging.EncoderParameter" /> のデータ型を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii">
      <summary>8 ビットの ASCII 値。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte">
      <summary>8 ビット符号なし整数。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong">
      <summary>32 ビット符号なし整数</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange">
      <summary>整数値の範囲を指定する 2 つの long 値。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypePointer">
      <summary>カスタム メタデータのブロックへのポインター。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational">
      <summary>32 ビット符号なし整数のペア。 それぞれのペアは分数を表し、最初の整数は分子、2 番目の整数は分母です。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange">
      <summary>4 つの 32 ビット符号なし整数のセット。 最初の 2 つの整数は 1 つの分数を表し、次の 2 つの整数はもう 1 つの分数を表します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort">
      <summary>16 ビットの符号なし整数。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined">
      <summary>データ型が定義されていないバイト。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderValue">
      <summary>
        <see cref="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" /> メソッドまたは <see cref="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)" /> メソッドを使用するときに JPEG または TIFF のイメージ エンコーダーに渡すパラメーター値を指定するのに使用されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeCMYK">
      <summary>GDI+ バージョン 1.0 では使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeYCCK">
      <summary>GDI+ バージョン 1.0 では使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT3">
      <summary>CCITT3 圧縮スキームを指定します。 圧縮カテゴリに属するパラメーターとして TIFF エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT4">
      <summary>CCITT4 圧縮スキームを指定します。 圧縮カテゴリに属するパラメーターとして TIFF エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionLZW">
      <summary>LZW 圧縮スキームを指定します。 圧縮カテゴリに属するパラメーターとして TIFF エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionNone">
      <summary>圧縮なしを指定します。 圧縮カテゴリに属するパラメーターとして TIFF エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionRle">
      <summary>RLE 圧縮スキームを指定します。 圧縮カテゴリに属するパラメーターとして TIFF エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.Flush">
      <summary>複数フレームのファイルまたはストリームを閉じるように指定します。 フラグ保存カテゴリに属するパラメーターとして TIFF エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionPage">
      <summary>フレームをイメージのページ ディメンションに追加するように指定します。 フラグ保存カテゴリに属するパラメーターとして TIFF エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionResolution">
      <summary>GDI+ バージョン 1.0 では使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionTime">
      <summary>GDI+ バージョン 1.0 では使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.LastFrame">
      <summary>複数フレーム イメージ内の最後のフレームを指定します。 フラグ保存カテゴリに属するパラメーターとして TIFF エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.MultiFrame">
      <summary>イメージに複数のフレーム (ページ) があることを指定します。 フラグ保存カテゴリに属するパラメーターとして TIFF エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderNonProgressive">
      <summary>GDI+ バージョン 1.0 では使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderProgressive">
      <summary>GDI+ バージョン 1.0 では使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodInterlaced">
      <summary>GDI+ バージョン 1.0 では使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodNonInterlaced">
      <summary>GDI+ バージョン 1.0 では使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipHorizontal">
      <summary>イメージが (垂直軸の周りで) 水平方向に反転されるように指定します。 変換カテゴリに属するパラメーターとして JPEG エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipVertical">
      <summary>イメージが (水平軸の周りで) 垂直方向に反転されるように指定します。 変換カテゴリに属するパラメーターとして JPEG エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate180">
      <summary>イメージがその中心を軸に 180 度回転するように指定します。 変換カテゴリに属するパラメーターとして JPEG エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate270">
      <summary>イメージがその中心を軸に、時計回りに 270 度回転するように指定します。 変換カテゴリに属するパラメーターとして JPEG エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate90">
      <summary>イメージがその中心を軸に、時計回りに 90 度回転するように指定します。 変換カテゴリに属するパラメーターとして JPEG エンコーダーに渡すことができます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif87">
      <summary>GDI+ バージョン 1.0 では使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif89">
      <summary>GDI+ バージョン 1.0 では使用されません。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.FrameDimension">
      <summary>イメージのフレーム ディメンションを取得するプロパティを提供します。 継承はできません。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.#ctor(System.Guid)">
      <summary>指定した <see langword="Guid" /> 構造体を使用して、<see cref="T:System.Drawing.Imaging.FrameDimension" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="guid">この <see cref="T:System.Drawing.Imaging.FrameDimension" /> オブジェクトの GUID を格納する <see langword="Guid" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.Equals(System.Object)">
      <summary>指定したオブジェクトがこの <see cref="T:System.Drawing.Imaging.FrameDimension" /> オブジェクトと等価な <see cref="T:System.Drawing.Imaging.FrameDimension" /> かどうかを示す値を返します。</summary>
      <param name="o">テストするオブジェクト。</param>
      <returns>
        <paramref name="o" /> がこの <see cref="T:System.Drawing.Imaging.FrameDimension" /> オブジェクトと等価な <see cref="T:System.Drawing.Imaging.FrameDimension" /> である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.GetHashCode">
      <summary>この <see cref="T:System.Drawing.Imaging.FrameDimension" /> オブジェクトのハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.FrameDimension" /> オブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.ToString">
      <summary>この <see cref="T:System.Drawing.Imaging.FrameDimension" /> オブジェクトをユーザーが判読できる文字列に変換します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.FrameDimension" /> オブジェクトを表す文字列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Guid">
      <summary>この <see cref="T:System.Drawing.Imaging.FrameDimension" /> オブジェクトを表すグローバル一意識別子 (GUID) を取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.FrameDimension" /> オブジェクトを表す GUID を格納する <see langword="Guid" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Page">
      <summary>ページ ディメンションを取得します。</summary>
      <returns>ページ ディメンション。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Resolution">
      <summary>解像度ディメンションを取得します。</summary>
      <returns>解像度ディメンション。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Time">
      <summary>時間ディメンションを取得します。</summary>
      <returns>時間ディメンション。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageAttributes">
      <summary>レンダリング時のビットマップとメタファイルの色の操作方法に関する情報を格納します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.#ctor">
      <summary>
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable">
      <summary>
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのブラシのカラー リマップ テーブルを消去します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey">
      <summary>既定のカテゴリのカラー キー (透明度の範囲) を消去します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのカラー キー (透明度の範囲) を消去します。</summary>
      <param name="type">カラー キーを消去する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
      <summary>既定のカテゴリのカラー調整行列を消去します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのカラー調整行列を消去します。</summary>
      <param name="type">カラー調整行列を消去する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma">
      <summary>既定のカテゴリのガンマ補正を無効にします。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのガンマ補正を無効にします。</summary>
      <param name="type">ガンマ補正が無効にされるカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp">
      <summary>既定のカテゴリの <see langword="NoOp" /> 設定を消去します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリの <see langword="NoOp" /> 設定を消去します。</summary>
      <param name="type">
        <see langword="NoOp" /> 設定を消去する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel">
      <summary>既定のカテゴリの CMYK (水色、マゼンタ、黄、黒) 出力チャネル設定を消去します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定されたのカテゴリの CMYK (水色、マゼンタ、黄、黒) 出力チャネル設定を消去します。</summary>
      <param name="type">出力チャネル設定を消去する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile">
      <summary>既定のカテゴリの出力チャネルのカラー プロファイル設定を消去します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリの出力チャネルのカラー プロファイル設定を消去します。</summary>
      <param name="type">出力チャネル プロファイル設定を消去する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable">
      <summary>既定のカテゴリのカラー リマップ テーブルを消去します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのカラー リマップ テーブルを消去します。</summary>
      <param name="type">リマップ テーブルを消去する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold">
      <summary>既定のカテゴリのしきい値を消去します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのしきい値を消去します。</summary>
      <param name="type">しきい値設定を消去する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Clone">
      <summary>この <see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトの同一コピーを作成します。</summary>
      <returns>このクラスが作成し、オブジェクトとしてキャストされる <see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Dispose">
      <summary>この <see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリの調整設定に従ってパレットの色を調整します。</summary>
      <param name="palette">
        <see cref="T:System.Drawing.Imaging.ColorPalette" />。入力では調整対象のパレットを、出力では調整済みのパレットを格納します。</param>
      <param name="type">調整設定がパレットに適用されるカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>ブラシ カテゴリのカラー リマップ テーブルを設定します。</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> オブジェクトの配列。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)">
      <summary>既定のカテゴリのカラー キーを設定します。</summary>
      <param name="colorLow">下位のカラー キー値。</param>
      <param name="colorHigh">上位のカラー キー値。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのカラー キー (透明度の範囲) を設定します。</summary>
      <param name="colorLow">下位のカラー キー値。</param>
      <param name="colorHigh">上位のカラー キー値。</param>
      <param name="type">カラー キーを設定する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)">
      <summary>既定のカテゴリのカラー調整行列とグレースケール調整行列を設定します。</summary>
      <param name="newColorMatrix">カラー調整行列。</param>
      <param name="grayMatrix">グレースケール調整行列。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>既定のカテゴリのカラー調整行列とグレースケール調整行列を設定します。</summary>
      <param name="newColorMatrix">カラー調整行列。</param>
      <param name="grayMatrix">グレースケール調整行列。</param>
      <param name="flags">カラー調整行列とグレースケール調整行列の影響を受けるイメージと色の種類を指定する <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのカラー調整行列とグレースケール調整行列を設定します。</summary>
      <param name="newColorMatrix">カラー調整行列。</param>
      <param name="grayMatrix">グレースケール調整行列。</param>
      <param name="mode">カラー調整行列とグレースケール調整行列の影響を受けるイメージと色の種類を指定する <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> の要素。</param>
      <param name="type">カラー調整とグレースケール調整行列を設定する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)">
      <summary>既定のカテゴリのカラー調整行列を設定します。</summary>
      <param name="newColorMatrix">カラー調整行列。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>既定のカテゴリのカラー調整行列を設定します。</summary>
      <param name="newColorMatrix">カラー調整行列。</param>
      <param name="flags">カラー調整行列の影響を受けるイメージと色の種類を指定する <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのカラー調整行列を設定します。</summary>
      <param name="newColorMatrix">カラー調整行列。</param>
      <param name="mode">カラー調整行列の影響を受けるイメージと色の種類を指定する <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> の要素。</param>
      <param name="type">カラー調整行列を設定する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)">
      <summary>既定のカテゴリのガンマ値を設定します。</summary>
      <param name="gamma">ガンマ補正値。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのガンマ値を設定します。</summary>
      <param name="gamma">ガンマ補正値。</param>
      <param name="type">ガンマ値を設定する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 列挙の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp">
      <summary>既定のカテゴリのカラー調整をオフにします。 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> メソッドを呼び出して、<see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> メソッドを呼び出す前のカラー調整設定に戻すことができます。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのカラー調整をオフにします。 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> メソッドを呼び出して、<see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> メソッドを呼び出す前のカラー調整設定に戻すことができます。</summary>
      <param name="type">色補正をオフにする対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)">
      <summary>既定のカテゴリの CMYK (水色、マゼンタ、黄、黒) 出力チャネルを設定します。</summary>
      <param name="flags">出力チャネルを指定する <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定されたカテゴリの CMYK (水色、マゼンタ、黄、黒) 出力チャネルを設定します。</summary>
      <param name="flags">出力チャネルを指定する <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> の要素。</param>
      <param name="type">出力チャネルを設定する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)">
      <summary>既定のカテゴリの出力チャネルのカラー プロファイル ファイルを設定します。</summary>
      <param name="colorProfileFilename">カラー プロファイル ファイルのパス名。 カラー プロファイル ファイルが %SystemRoot%\System32\Spool\Drivers\Color ディレクトリにある場合、このパラメーターはファイル名にすることができます。 それ以外の場合、このパラメーターは、完全修飾パス名を指定する必要があります。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリの出力チャネルのカラー プロファイル ファイルを設定します。</summary>
      <param name="colorProfileFilename">カラー プロファイル ファイルのパス名。 カラー プロファイル ファイルが %SystemRoot%\System32\Spool\Drivers\Color ディレクトリにある場合、このパラメーターはファイル名にすることができます。 それ以外の場合、このパラメーターは、完全修飾パス名を指定する必要があります。</param>
      <param name="type">出力チャネル カラー プロファイル ファイルを設定する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>既定のカテゴリのカラー リマップ テーブルを設定します。</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 型の色ペアの配列。 それぞれの色ペアには、既存の色 (1 番目の値) および変換後の色 (2 番目の値) が含まれています。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのカラー リマップ テーブルを設定します。</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 型の色ペアの配列。 それぞれの色ペアには、既存の色 (1 番目の値) および変換後の色 (2 番目の値) が含まれています。</param>
      <param name="type">カラー リマップ テーブルを設定する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)">
      <summary>既定のカテゴリのしきい値 (透明度の範囲) を指定します。</summary>
      <param name="threshold">しきい値を指定する実数。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>指定したカテゴリのしきい値 (透明度の範囲) を設定します。</summary>
      <param name="threshold">最大値または最小値に変換する色の並べ替えのためのブレークポイントとして使用される、0.0 ～ 1.0 の範囲内のしきい値。</param>
      <param name="type">色のしきい値を設定する対象のカテゴリを指定する <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)">
      <summary>形状全体、または形状の境界上にテクスチャを並べて表示する方法を決定するために使用されるラップ モードを設定します。 テクスチャで塗りつぶす形状がそのテクスチャより小さい場合、テクスチャは形状の境界をはみだして表示されます。</summary>
      <param name="mode">イメージの繰り返しコピーを領域に並べて表示するときの方法を指定する <see cref="T:System.Drawing.Drawing2D.WrapMode" /> の要素。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)">
      <summary>形状全体、または形状の境界上にテクスチャを並べて表示する方法を決定するために使用される、ラップ モードおよび色を指定します。 テクスチャで塗りつぶす形状がそのテクスチャより小さい場合、テクスチャは形状の境界をはみだして表示されます。</summary>
      <param name="mode">イメージの繰り返しコピーを領域に並べて表示するときの方法を指定する <see cref="T:System.Drawing.Drawing2D.WrapMode" /> の要素。</param>
      <param name="color">表示イメージの外側のピクセルの色を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクト。 モード パラメーターが <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> に設定され、<see cref="Overload:System.Drawing.Graphics.DrawImage" /> に渡されたソース四角形がそのイメージ自体より大きい場合に、この色が表示されます。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)">
      <summary>形状全体、または形状の境界上にテクスチャを並べて表示する方法を決定するために使用される、ラップ モードおよび色を指定します。 テクスチャで塗りつぶす形状がそのテクスチャより小さい場合、テクスチャは形状の境界をはみだして表示されます。</summary>
      <param name="mode">イメージの繰り返しコピーを領域に並べて表示するときの方法を指定する <see cref="T:System.Drawing.Drawing2D.WrapMode" /> の要素。</param>
      <param name="color">表示イメージの外側のピクセルの色を指定する Color オブジェクト。 モード パラメーターが <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> に設定され、<see cref="Overload:System.Drawing.Graphics.DrawImage" /> に渡されたソース四角形がそのイメージ自体より大きい場合に、この色が表示されます。</param>
      <param name="clamp">このパラメーターは何も作用しません。 <see langword="false" /> に設定します。</param>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecFlags">
      <summary>イメージ エンコーダー/デコーダー (コーデック) の属性を提供します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.BlockingDecode">
      <summary>デコーダーがデコード処理中にブロッキング動作を行います。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Builtin">
      <summary>コーデックが GDI+ に組み込まれています。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Decoder">
      <summary>コーデックがデコード (読み取り) をサポートします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Encoder">
      <summary>コーデックがエンコーディング (保存) をサポートします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SeekableEncode">
      <summary>エンコーダーにはシーク可能な出力ストリームが必要です。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportBitmap">
      <summary>コーデックがラスター イメージ (ビットマップ) をサポートします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportVector">
      <summary>コーデックがベクター イメージ (メタファイル) をサポートします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.System">
      <summary>使用しません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.User">
      <summary>使用しません。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecInfo">
      <summary>
        <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> クラスには、インストールされたイメージ エンコーダーとデコーダー (コーデックと呼ばれます) に関するすべての関連情報を検索するための必要なストレージ メンバーおよびメソッドが用意されています。 継承はできません。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders">
      <summary>GDI+ に組み込まれたイメージ デコーダーに関する情報を格納する、<see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> オブジェクトの配列を返します。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> オブジェクトの配列。 配列内のそれぞれの <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> オブジェクトには、いずれかの組み込みイメージ デコーダーに関する情報が格納されています。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders">
      <summary>GDI+ に組み込まれたイメージ エンコーダーに関する情報を格納する <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> オブジェクトの配列を返します。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> オブジェクトの配列。 配列内の各 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> オブジェクトには、いずれかの組み込みイメージ エンコーダーに関する情報が格納されています。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Clsid">
      <summary>特定のコーデックを識別するグローバル一意識別子 (GUID) を格納する <see cref="T:System.Guid" /> 構造体を取得または設定します。</summary>
      <returns>特定のコーデックを識別する GUID を格納する <see cref="T:System.Guid" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.CodecName">
      <summary>コーデックの名前を格納する文字列を取得または設定します。</summary>
      <returns>コーデックの名前を格納する文字列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.DllName">
      <summary>コーデックを保持する DLL のパス名を格納する文字列を取得または設定します。 コーデックが DLL に保持されていない場合、このポインターは <see langword="null" /> になります。</summary>
      <returns>コーデックを保持する DLL のパス名を格納する文字列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FilenameExtension">
      <summary>コーデックで使用されるファイル名拡張子を格納する文字列を取得または設定します。 拡張子はセミコロンで区切られます。</summary>
      <returns>コーデックで使用されるファイル名拡張子を格納する文字列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Flags">
      <summary>コーデックに関する追加情報を格納するための 32 ビット値を取得または設定します。 このプロパティは、<see cref="T:System.Drawing.Imaging.ImageCodecFlags" /> 列挙体からのフラグの組み合わせを返します。</summary>
      <returns>コーデックに関する追加情報を格納するための 32 ビット値。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatDescription">
      <summary>コーデックのファイル形式を説明する文字列を取得または設定します。</summary>
      <returns>コーデックのファイル形式を説明する文字列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatID">
      <summary>コーデックのファイル形式を識別する GUID を格納する <see cref="T:System.Guid" /> 構造体を取得または設定します。</summary>
      <returns>コーデックのファイル形式を識別する GUID を格納する <see cref="T:System.Guid" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.MimeType">
      <summary>コーデックの MIME (Multipurpose Internet Mail Extensions) の型を格納する文字列を取得または設定します。</summary>
      <returns>コーデックの MIME (Multipurpose Internet Mail Extensions) の型を格納する文字列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignatureMasks">
      <summary>フィルターとして使用できるバイトの 2 次元配列を取得または設定します。</summary>
      <returns>フィルターとして使用できるバイトの 2 次元配列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns">
      <summary>コーデックの署名を表すバイトの 2 次元配列を取得または設定します。</summary>
      <returns>コーデックの署名を表すバイトの 2 次元配列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Version">
      <summary>コーデックのバージョン番号を取得または設定します。</summary>
      <returns>コーデックのバージョン番号。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFlags">
      <summary>
        <see cref="T:System.Drawing.Image" /> オブジェクトに格納されているピクセル データの属性を指定します。 <see cref="P:System.Drawing.Image.Flags" /> プロパティは、この列挙体のメンバーを返します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Caching">
      <summary>アクセスを高速化するためにピクセル データをキャッシュできます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
      <summary>ピクセル データは CMYK カラー領域を使用します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceGray">
      <summary>ピクセル データはグレースケールです。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
      <summary>ピクセル データは RGB カラー領域を使用します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr">
      <summary>YCBCR カラー領域を使用してイメージを格納することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcck">
      <summary>YCCK カラー領域を使用してイメージを格納することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasAlpha">
      <summary>ピクセル データにはアルファ情報が含まれています。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealDpi">
      <summary>1 インチあたりのドット数 (dpi) の情報がイメージに格納されることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealPixelSize">
      <summary>ピクセル サイズがイメージに格納されることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasTranslucent">
      <summary>ピクセル データのアルファ値は 0 (透明) および 255 (不透明) 以外であることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.None">
      <summary>書式情報はありません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.PartiallyScalable">
      <summary>ピクセル データは部分的にスケーラブルですが、いくつかの制限があります。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ReadOnly">
      <summary>ピクセル データは読み取り専用です。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Scalable">
      <summary>ピクセル データはスケーラブルです。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFormat">
      <summary>イメージのファイル形式を指定します。 継承はできません。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
      <summary>指定した <see cref="T:System.Guid" /> 構造体を使用して、<see cref="T:System.Drawing.Imaging.ImageFormat" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="guid">特定のイメージ形式を指定する <see cref="T:System.Guid" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.Equals(System.Object)">
      <summary>指定したオブジェクトがこの <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクトと等価な <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクトかどうかを示す値を返します。</summary>
      <param name="o">テストするオブジェクト。</param>
      <returns>
        <paramref name="o" /> がこの <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクトと等価な <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクトである場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.GetHashCode">
      <summary>このオブジェクトを表すハッシュ コード値を返します。</summary>
      <returns>このオブジェクトを表すハッシュ コード。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.ToString">
      <summary>この <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクトをユーザーが判読できる文字列に変換します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクトを表す文字列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Bmp">
      <summary>ビットマップ (BMP) イメージ形式を取得します。</summary>
      <returns>ビットマップ イメージ形式を指定する <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Emf">
      <summary>拡張メタファイル (EMF) イメージ形式を取得します。</summary>
      <returns>拡張メタファイル イメージ形式を指定する <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Exif">
      <summary>Exif (Exchangeable Image File) 形式を取得します。</summary>
      <returns>Exif 形式を示す <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Gif">
      <summary>GIF (Graphics Interchange Format) イメージ形式を取得します。</summary>
      <returns>GIF イメージ形式を示す <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Guid">
      <summary>この <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクトを表す <see cref="T:System.Guid" /> 構造体を取得します。</summary>
      <returns>この <see cref="T:System.Guid" /> オブジェクトを表す <see cref="T:System.Drawing.Imaging.ImageFormat" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Icon">
      <summary>Windows アイコン イメージ形式を取得します。</summary>
      <returns>Windows アイコン イメージ形式を示す <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Jpeg">
      <summary>JPEG (Joint Photographic Experts Group) イメージ形式を取得します。</summary>
      <returns>JPEG イメージ形式を示す <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.MemoryBmp">
      <summary>メモリ上のビットマップの形式を取得します。</summary>
      <returns>メモリ上のビットマップの形式を示す <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Png">
      <summary>W3C PNG (Portable Network Graphics) イメージ形式を取得します。</summary>
      <returns>PNG イメージ形式を示す <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Tiff">
      <summary>TIFF (Tagged Image File Format) イメージ形式を取得します。</summary>
      <returns>TIFF イメージ形式を示す <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Wmf">
      <summary>Windows メタファイル (WMF) イメージ形式を取得します。</summary>
      <returns>Windows メタファイル イメージ形式を示す <see cref="T:System.Drawing.Imaging.ImageFormat" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageLockMode">
      <summary>
        <see cref="Overload:System.Drawing.Bitmap.LockBits" /> メソッドのフラグ パラメーターに渡すフラグを指定します。 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> メソッドは、ピクセル データの読み取りや書き込みができるように、イメージの一部をロックします。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadOnly">
      <summary>読み取りのためにイメージの一部をロックすることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadWrite">
      <summary>読み取りまたは書き込みのためにイメージの一部をロックすることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.UserInputBuffer">
      <summary>ピクセル データの読み取りまたは書き込みに使用されるバッファーがユーザーにより割り当てられることを指定します。 このフラグがセットされた場合、<see cref="Overload:System.Drawing.Bitmap.LockBits" /> メソッドの <paramref name="flags" /> パラメーターは入力パラメーターとして (可能な場合は出力パラメーターとしても) 使用されます。 このフラグがクリアされた場合、<paramref name="flags" /> パラメーターは出力パラメーターとしてだけ使用されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.WriteOnly">
      <summary>書き込みのためにイメージの一部をロックすることを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Metafile">
      <summary>グラフィック メタファイルを定義します。 メタファイルには、記録 (構築) して再生 (表示) できる一連のグラフィックス操作を記述するレコードが格納されています。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Boolean)">
      <summary>ハンドルを指定して <see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="henhmetafile">拡張メタファイルを識別するハンドル。</param>
      <param name="deleteEmf">
        <see cref="T:System.Drawing.Imaging.Metafile" /> を削除するときに拡張メタファイルを識別するハンドルを削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>デバイス コンテキストを識別するハンドルおよび <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="referenceHdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="emfType">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>デバイス コンテキストを識別するハンドルおよび <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 ファイルの名前を文字列で指定できます。</summary>
      <param name="referenceHdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="emfType">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
      <param name="description">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>ハンドルと <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" /> を指定して <see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="hmetafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> を識別する Windows ハンドル。</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader,System.Boolean)">
      <summary>ハンドルと <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" /> を指定して <see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 また、メタファイルを削除するときに、<paramref name="deleteWmf" /> パラメーターを使用してハンドルを削除できます。</summary>
      <param name="hmetafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> を識別する Windows ハンドル。</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。</param>
      <param name="deleteWmf">
        <see cref="T:System.Drawing.Imaging.Metafile" /> を削除するときに新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を識別するハンドルを削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle)">
      <summary>デバイス コンテキスト、およびそのデバイス コンテキストの範囲を示す四角形を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="referenceHdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>デバイス コンテキスト、および指定した測定単位を使用してそのデバイス コンテキストの範囲を示す四角形を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="referenceHdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>デバイス コンテキスト、指定した測定単位を使用してそのデバイス コンテキストの範囲を示す四角形、<see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="referenceHdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>デバイス コンテキスト、指定した測定単位を使用してそのデバイス コンテキストの範囲を示す四角形、<see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 ファイルの名前を文字列で指定できます。</summary>
      <param name="referenceHdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
      <param name="desc">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF)">
      <summary>デバイス コンテキスト、およびそのデバイス コンテキストの範囲を示す四角形を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="referenceHdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>デバイス コンテキスト、および指定した測定単位を使用してそのデバイス コンテキストの範囲を示す四角形を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="referenceHdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>デバイス コンテキスト、指定した測定単位を使用してそのデバイス コンテキストの範囲を示す四角形、<see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="referenceHdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>デバイス コンテキスト、指定した測定単位を使用してそのデバイス コンテキストの範囲を示す四角形、<see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 ファイルの名前を文字列で指定できます。</summary>
      <param name="referenceHdc">デバイス コンテキストを識別するハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
      <param name="description">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream)">
      <summary>指定したデータ ストリームで <see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の作成元の <see cref="T:System.IO.Stream" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr)">
      <summary>指定したデータ ストリームで <see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>データ ストリーム、デバイス コンテキストを識別する Windows ハンドル、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>データ ストリーム、デバイス コンテキストを識別する Windows ハンドル、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 また、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前が含まれた文字列を追加できます。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
      <param name="description">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle)">
      <summary>データ ストリーム、デバイス コンテキストを識別する Windows ハンドル、および新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>データ ストリーム、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体、および測定単位を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>データ ストリーム、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体、測定単位、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>データ ストリーム、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体、測定単位、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前が含まれた文字列を追加できます。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
      <param name="description">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF)">
      <summary>データ ストリーム、デバイス コンテキストを識別する Windows ハンドル、および新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>データ ストリーム、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体、および測定単位を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>データ ストリーム、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体、測定単位、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>データ ストリーム、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体、測定単位、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前が含まれた文字列を追加できます。</summary>
      <param name="stream">この <see cref="T:System.Drawing.Imaging.Metafile" /> のデータを格納している <see cref="T:System.IO.Stream" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
      <param name="description">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String)">
      <summary>指定したファイル名から、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filename">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の作成元のファイル名を表す <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr)">
      <summary>指定したファイル名を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 説明する文字列も追加できます。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
      <param name="description">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、および新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体、および測定単位を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体、測定単位、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体、測定単位、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 説明する文字列も追加できます。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
      <param name="description">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体、および測定単位を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 説明する文字列も追加できます。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="description">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、および新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体、および測定単位を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体、測定単位、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体、測定単位、および <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" /> 列挙体を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 説明する文字列も追加できます。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.Metafile" /> の形式を指定する <see cref="T:System.Drawing.Imaging.EmfType" />。</param>
      <param name="description">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>ファイル名、デバイス コンテキストを識別する Windows ハンドル、新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体、および測定単位を指定して、<see cref="T:System.Drawing.Imaging.Metafile" /> クラスの新しいインスタンスを初期化します。 説明する文字列も追加できます。</summary>
      <param name="fileName">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> のファイル名を表す <see cref="T:System.String" />。</param>
      <param name="referenceHdc">デバイス コンテキストを識別する Windows ハンドル。</param>
      <param name="frameRect">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> の範囲を示す四角形を表す <see cref="T:System.Drawing.RectangleF" />。</param>
      <param name="frameUnit">
        <paramref name="frameRect" /> の単位を指定する <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />。</param>
      <param name="desc">新しい <see cref="T:System.Drawing.Imaging.Metafile" /> を説明する名前を格納している <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetHenhmetafile">
      <summary>拡張 <see cref="T:System.Drawing.Imaging.Metafile" /> を識別する Windows ハンドルを返します。</summary>
      <returns>この拡張 <see cref="T:System.Drawing.Imaging.Metafile" /> を識別する Windows ハンドル。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader">
      <summary>この <see cref="T:System.Drawing.Imaging.MetafileHeader" /> に関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> を返します。</summary>
      <returns>この <see cref="T:System.Drawing.Imaging.MetafileHeader" /> に関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> に関連付けられている <see cref="T:System.Drawing.Imaging.MetafileHeader" /> を返します。</summary>
      <param name="henhmetafile">ヘッダーが返される拡張 <see cref="T:System.Drawing.Imaging.Metafile" /> を識別するハンドル。</param>
      <returns>指定した <see cref="T:System.Drawing.Imaging.MetafileHeader" /> に関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> に関連付けられている <see cref="T:System.Drawing.Imaging.MetafileHeader" /> を返します。</summary>
      <param name="hmetafile">ヘッダーが返される <see cref="T:System.Drawing.Imaging.Metafile" /> を識別するハンドル。</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。</param>
      <returns>指定した <see cref="T:System.Drawing.Imaging.MetafileHeader" /> に関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IO.Stream)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> に関連付けられている <see cref="T:System.Drawing.Imaging.MetafileHeader" /> を返します。</summary>
      <param name="stream">ヘッダーが検索される <see cref="T:System.Drawing.Imaging.Metafile" /> を格納する <see cref="T:System.IO.Stream" />。</param>
      <returns>指定した <see cref="T:System.Drawing.Imaging.MetafileHeader" /> に関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.String)">
      <summary>指定した <see cref="T:System.Drawing.Imaging.Metafile" /> に関連付けられている <see cref="T:System.Drawing.Imaging.MetafileHeader" /> を返します。</summary>
      <param name="fileName">ヘッダーが検索される <see cref="T:System.Drawing.Imaging.Metafile" /> の名前を格納する <see cref="T:System.String" />。</param>
      <returns>指定した <see cref="T:System.Drawing.Imaging.MetafileHeader" /> に関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.PlayRecord(System.Drawing.Imaging.EmfPlusRecordType,System.Int32,System.Int32,System.Byte[])">
      <summary>個別のメタファイル レコードを再生します。</summary>
      <param name="recordType">再生するメタファイル レコードの型を指定する <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> の要素。</param>
      <param name="flags">レコードの属性を指定するフラグのセット。</param>
      <param name="dataSize">レコード データのバイト数。</param>
      <param name="data">レコード データを格納するバイトの配列。</param>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileFrameUnit">
      <summary>メタファイルのサイズおよび位置を設定するために使用する、四角形の測定単位を指定します。 この値は <see cref="T:System.Drawing.Imaging.Metafile" /> オブジェクトの作成時に指定されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Document">
      <summary>測定単位は 1/300 インチです。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.GdiCompatible">
      <summary>測定単位は 0.01 ミリメートルです。 GDI との互換性があります。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Inch">
      <summary>測定単位は 1 インチです。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Millimeter">
      <summary>測定単位は 1 ミリメートルです。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Pixel">
      <summary>測定単位は 1 ピクセルです。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Point">
      <summary>測定単位は 1 プリンター ポイントです。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileHeader">
      <summary>関連付けられた <see cref="T:System.Drawing.Imaging.Metafile" /> の属性が格納されています。 継承はできません。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsDisplay">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> がデバイスに依存するかどうかを示す値を返します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> がデバイスに依存する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmf">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows 拡張メタファイル形式であるかどうかを示す値を返します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows 拡張メタファイル形式である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfOrEmfPlus">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows 拡張メタファイル形式または Windows 拡張メタファイル プラス形式のいずれであるかを示す値を返します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows 拡張メタファイル形式または Windows 拡張メタファイル プラス形式である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlus">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows 拡張メタファイル プラス形式であるかどうかを示す値を返します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows 拡張メタファイル プラス形式である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusDual">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> がデュアル拡張メタファイル形式であるかどうかを示す値を返します。 この形式は、拡張形式と拡張プラス形式の両方をサポートします。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> がデュアル拡張メタファイル形式である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusOnly">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows 拡張メタファイル プラス形式のみをサポートするかどうかを示す値を返します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows 拡張メタファイル プラス形式のみをサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmf">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows メタファイル形式であるかどうかを示す値を返します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows メタファイル形式である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmfPlaceable">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows 配置可能メタファイル形式であるかどうかを示す値を返します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> が Windows 配置可能メタファイル形式である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Bounds">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> に外接する <see cref="T:System.Drawing.Rectangle" /> を取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Rectangle" /> に外接する <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiX">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> の水平方向の解像度を 1 インチあたりのドット数 (dpi) で取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> の水平方向の解像度 (dpi)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiY">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> の垂直方向の解像度を 1 インチあたりのドット数 (dpi) で取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> の垂直方向の解像度 (dpi)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.EmfPlusHeaderSize">
      <summary>拡張メタファイルとヘッダー ファイルの合計サイズをバイト単位で取得します。</summary>
      <returns>拡張メタファイルとヘッダー ファイルのバイト単位の合計サイズ。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiX">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> の論理水平解像度を 1 インチあたりのドット数 (dpi) で取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> の論理水平解像度 (dpi)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiY">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> の論理垂直解像度を 1 インチあたりのドット数 (dpi) で取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> の論理垂直解像度 (dpi)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.MetafileSize">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> のサイズをバイト単位で取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> のバイト単位のサイズ。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Type">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> の型を取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.MetafileType" /> の型を表す <see cref="T:System.Drawing.Imaging.Metafile" /> 列挙体。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Version">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> のバージョン番号を取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> のバージョン番号。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.WmfHeader">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> に対する Windows メタファイル (WMF) ヘッダー ファイルを取得します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.MetaHeader" /> に対する WMF ヘッダー ファイルを格納する <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileType">
      <summary>メタファイルの種類を指定します。 <see cref="P:System.Drawing.Imaging.MetafileHeader.Type" /> プロパティは、この列挙体のメンバーを返します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Emf">
      <summary>拡張メタファイル (EMF) ファイルを指定します。 この種類のファイルには GDI レコードだけが格納されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusDual">
      <summary>EMF+ Dual ファイルを指定します。 この種類のファイルには GDI+ レコードと共に代替 GDI レコードが格納されており、GDI または GDI+ を使用してレコードを表示できます。 GDI を使用してレコードを表示すると、品質がいくらか低下する場合があります。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusOnly">
      <summary>EMF+ ファイルを指定します。 この種類のファイルには GDI+ レコードだけが格納され、レコードを表示するには GDI+ を使用する必要があります。 GDI を使用してレコードを表示すると、予測できない結果が生じることがあります。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Invalid">
      <summary>GDI+ で認識されないメタファイル形式を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Wmf">
      <summary>WMF (Windows メタファイル) ファイルを指定します。 この種類のファイルには GDI レコードだけが格納されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.WmfPlaceable">
      <summary>先頭に配置可能メタファイル ヘッダーの付いた Windows メタファイル (WMF) を指定します。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetaHeader">
      <summary>Windows メタファイル形式 (WMF) に関する情報が格納されています。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetaHeader.#ctor">
      <summary>
        <see langword="MetaHeader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.HeaderSize">
      <summary>ヘッダー ファイルのサイズをバイト単位で取得または設定します。</summary>
      <returns>ヘッダー ファイルのバイト単位のサイズ。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.MaxRecord">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> オブジェクト内の最大レコードのサイズをバイト単位で取得または設定します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> オブジェクト内の最大レコードのバイト単位のサイズ。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoObjects">
      <summary>
        <see cref="T:System.Drawing.Imaging.Metafile" /> オブジェクト内に同時に存在できるオブジェクトの最大数を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.Metafile" /> オブジェクト内に同時に存在できるオブジェクトの最大数。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoParameters">
      <summary>使用しません。 常に 0 を返します。</summary>
      <returns>常に 0 です。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Size">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> オブジェクトのサイズをバイト単位で取得または設定します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> オブジェクトのバイト単位のサイズ。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Type">
      <summary>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> オブジェクトの型を取得または設定します。</summary>
      <returns>関連付けられている <see cref="T:System.Drawing.Imaging.Metafile" /> オブジェクトの型。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Version">
      <summary>ヘッダー形式のバージョン番号を取得または設定します。</summary>
      <returns>ヘッダー形式のバージョン番号。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.PaletteFlags">
      <summary>システム パレット内のカラー データの種類を指定します。 データはアルファを含む色データとなるか、グレースケール データだけとなるか、またはハーフトーン データとなります。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.GrayScale">
      <summary>グレースケール データ。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.Halftone">
      <summary>ハーフトーン データ。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.HasAlpha">
      <summary>アルファ データ。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PixelFormat">
      <summary>イメージ内の各ピクセルについて、カラー データの形式を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Alpha">
      <summary>ピクセル データには、事前乗算されないアルファ値が含まれています。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Canonical">
      <summary>既定のピクセル形式は、1 ピクセルあたり 32 ビットです。 この形式では、24 ビットの色深度と 8 ビットのアルファ チャネルが指定されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.DontCare">
      <summary>ピクセル形式は指定されていません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Extended">
      <summary>予約済み。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555">
      <summary>ピクセル形式は、1 ピクセルあたり 16 ビットです。 このカラー情報は、32,768 種類の色の濃淡を指定します。この情報の 5 ビットが赤、5 ビットが緑、5 ビットが青、1 ビットがアルファです。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">
      <summary>ピクセル形式は、1 ピクセルあたり 16 ビットです。 このカラー情報は 65,536 種類の灰色の濃淡を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb555">
      <summary>1 ピクセルあたり 16 ビットの形式であることを指定します。つまり、赤、緑、および青のコンポーネントに、それぞれ 5 ビットを使用します。 残りのビットは使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb565">
      <summary>この形式は 1 ピクセルあたり 16 ビットであり、そのうちの 5 ビットが赤のコンポーネント、6 ビットが緑のコンポーネント、5 ビットが青のコンポーネントに使用されることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed">
      <summary>ピクセル形式が 1 ピクセルあたり 1 ビットであり、インデックス付きのカラーを使用することを指定します。 したがって、カラー テーブルには 2 色含まれています。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">
      <summary>1 ピクセルあたり 24 ビットの形式であることを指定します。つまり、赤、緑、および青のコンポーネントに、それぞれ 8 ビットを使用します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">
      <summary>1 ピクセルあたり 32 ビットの形式であることを指定します。つまり、アルファ、赤、緑、および青のコンポーネントに、それぞれ 8 ビットを使用します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">
      <summary>1 ピクセルあたり 32 ビットの形式であることを指定します。つまり、アルファ、赤、緑、および青のコンポーネントに、それぞれ 8 ビットを使用します。 アルファ コンポーネントに応じて、赤、緑、および青のコンポーネントが事前乗算されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb">
      <summary>1 ピクセルあたり 32 ビットの形式であることを指定します。つまり、赤、緑、および青のコンポーネントに、それぞれ 8 ビットを使用します。 残りの 8 ビットは使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">
      <summary>1 ピクセルあたり 48 ビットの形式であることを指定します。つまり、赤、緑、および青のコンポーネントに、それぞれ 16 ビットを使用します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format4bppIndexed">
      <summary>この形式が 1 ピクセルあたり 4 ビットであり、インデックス付きであることを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">
      <summary>1 ピクセルあたり 64 ビットの形式であることを指定します。つまり、アルファ、赤、緑、および青のコンポーネントに、それぞれ 16 ビットを使用します。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">
      <summary>1 ピクセルあたり 64 ビットの形式であることを指定します。つまり、アルファ、赤、緑、および青のコンポーネントに、それぞれ 16 ビットを使用します。 アルファ コンポーネントに応じて、赤、緑、および青のコンポーネントが事前乗算されます。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">
      <summary>この形式が 1 ピクセルあたり 8 ビットであり、インデックス付きであることを指定します。 したがって、カラー テーブルには 256 色含まれています。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Gdi">
      <summary>このピクセル データには GDI カラーが含まれています。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Indexed">
      <summary>このピクセル データには、カラー インデックス値が含まれています。カラー インデックス値とは、個別の色の値ではなく、システム カラー テーブル内の色へのインデックスです。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Max">
      <summary>この列挙体の最大値。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.PAlpha">
      <summary>このピクセル情報には、事前乗算されるアルファ値が含まれています。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Undefined">
      <summary>このピクセル形式は未定義です。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PlayRecordCallback">
      <summary>このデリゲートは使用されません。 メタファイルのレコードの列挙の例については、<see cref="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" /> のトピックを参照してください。</summary>
      <param name="recordType">使用しません。</param>
      <param name="flags">使用しません。</param>
      <param name="dataSize">使用しません。</param>
      <param name="recordData">使用しません。</param>
    </member>
    <member name="T:System.Drawing.Imaging.PropertyItem">
      <summary>メタデータ プロパティがイメージ ファイルに含まれるようにカプセル化します。 継承はできません。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Id">
      <summary>プロパティの ID を取得または設定します。</summary>
      <returns>プロパティの ID を表す整数。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Len">
      <summary>
        <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> プロパティの長さをバイト数で取得または設定します。</summary>
      <returns>
        <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> バイト配列の長さ (バイト数) を表す整数。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Type">
      <summary>
        <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> プロパティに格納されているデータの型を定義する整数を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> に格納されているデータの型を定義する整数。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Value">
      <summary>プロパティ項目の値を取得または設定します。</summary>
      <returns>プロパティ項目の値を表すバイト配列。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.WmfPlaceableFileHeader">
      <summary>配置可能メタファイルを定義します。 継承はできません。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.WmfPlaceableFileHeader.#ctor">
      <summary>
        <see langword="WmfPlaceableFileHeader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxBottom">
      <summary>出力デバイス上のメタファイル イメージに外接する四角形の右下隅の y 座標を取得または設定します。</summary>
      <returns>出力デバイス上のメタファイル イメージに外接する四角形の右下隅の y 座標。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxLeft">
      <summary>出力デバイス上のメタファイル イメージに外接する四角形の左上隅の x 座標を取得または設定します。</summary>
      <returns>出力デバイス上のメタファイル イメージに外接する四角形の左上隅の x 座標。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxRight">
      <summary>出力デバイス上のメタファイル イメージに外接する四角形の右下隅の x 座標を取得または設定します。</summary>
      <returns>出力デバイス上のメタファイル イメージに外接する四角形の右下隅の x 座標。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxTop">
      <summary>出力デバイス上のメタファイル イメージに外接する四角形の左上隅の y 座標を取得または設定します。</summary>
      <returns>出力デバイス上のメタファイル イメージに外接する四角形の左上隅の y 座標。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Checksum">
      <summary>ヘッダー内の前の 10 個の <see langword="WORD" /> に対するチェックサム値を取得または設定します。</summary>
      <returns>ヘッダー内の前の 10 個の <see langword="WORD" /> に対するチェックサム値。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Hmf">
      <summary>メモリ内のメタファイルのハンドルを取得または設定します。</summary>
      <returns>メモリ内のメタファイルのハンドル。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Inch">
      <summary>1 インチあたりの twip 数を取得または設定します。</summary>
      <returns>1 インチあたりの twip 数。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Key">
      <summary>配置可能メタファイル ヘッダーが存在することを示す値を取得または設定します。</summary>
      <returns>配置可能メタファイル ヘッダーが存在することを示す値。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Reserved">
      <summary>予約済み。 使用しないでください。</summary>
      <returns>予約済み。 使用しないでください。</returns>
    </member>
    <member name="T:System.Drawing.Pen">
      <summary>直線および曲線の描画に使用するオブジェクトを定義します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
      <summary>
        <see cref="T:System.Drawing.Pen" /> を指定して、<see cref="T:System.Drawing.Brush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="brush">この <see cref="T:System.Drawing.Pen" /> の塗りつぶしプロパティを決定する <see cref="T:System.Drawing.Brush" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
      <summary>指定された <see cref="T:System.Drawing.Pen" /> と <see cref="T:System.Drawing.Brush" /> を使用して、<see cref="P:System.Drawing.Pen.Width" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="brush">この <see cref="T:System.Drawing.Pen" /> の特性を決定する <see cref="T:System.Drawing.Brush" />。</param>
      <param name="width">新しい <see cref="T:System.Drawing.Pen" /> の幅。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
      <summary>指定した色を使用して、<see cref="T:System.Drawing.Pen" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="color">この <see cref="T:System.Drawing.Pen" /> の色を示す <see cref="T:System.Drawing.Color" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
      <summary>指定の <see cref="T:System.Drawing.Color" /> プロパティと <see cref="P:System.Drawing.Pen.Width" /> プロパティで <see cref="T:System.Drawing.Pen" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="color">この <see cref="T:System.Drawing.Pen" /> の色を示す <see cref="T:System.Drawing.Color" /> 構造体。</param>
      <param name="width">この <see cref="T:System.Drawing.Pen" /> の幅を示す値。</param>
    </member>
    <member name="M:System.Drawing.Pen.Clone">
      <summary>この <see cref="T:System.Drawing.Pen" /> の同一コピーを作成します。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> にキャストできる <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Drawing.Pen.Dispose">
      <summary>この <see cref="T:System.Drawing.Pen" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Pen.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>この <see cref="T:System.Drawing.Pen" /> の変換行列と指定の <see cref="T:System.Drawing.Drawing2D.Matrix" /> を乗算します。</summary>
      <param name="matrix">変換行列の乗算に使用する <see cref="T:System.Drawing.Drawing2D.Matrix" /> オブジェクト。</param>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>この <see cref="T:System.Drawing.Pen" /> の変換行列と指定の <see cref="T:System.Drawing.Drawing2D.Matrix" /> を指定の順序で乗算します。</summary>
      <param name="matrix">変換行列の乗算に使用する <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">乗算演算を実行する順序。</param>
    </member>
    <member name="M:System.Drawing.Pen.ResetTransform">
      <summary>対象の <see cref="T:System.Drawing.Pen" /> のジオメトリック変換行列を単位行列にリセットします。</summary>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single)">
      <summary>指定した角度だけローカル ジオメトリック変換を回転します。 このメソッドは変換の前に回転を行います。</summary>
      <param name="angle">回転角度。</param>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した角度だけローカル ジオメトリック変換を回転します。</summary>
      <param name="angle">回転角度。</param>
      <param name="order">回転行列を後に適用するか、前に適用するかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
      <summary>指定した係数だけローカル ジオメトリック変換をスケーリングします。 このメソッドは変換の前にスケーリング行列を適用します。</summary>
      <param name="sx">x 軸方向に変換をスケーリングする場合の係数。</param>
      <param name="sy">y 軸方向に変換をスケーリングする場合の係数。</param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した係数だけローカル ジオメトリック変換をスケーリングします。</summary>
      <param name="sx">x 軸方向に変換をスケーリングする場合の係数。</param>
      <param name="sy">y 軸方向に変換をスケーリングする場合の係数。</param>
      <param name="order">スケーリング行列を後に適用するか、前に適用するかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
      <summary>この <see cref="T:System.Drawing.Pen" /> で描画する直線を終了させるとき、使用されるキャップのスタイルを決定する値を設定します。</summary>
      <param name="startCap">この <see cref="T:System.Drawing.Pen" /> で描画される直線の始点で使用されるキャップ スタイルを表す <see cref="T:System.Drawing.Drawing2D.LineCap" />。</param>
      <param name="endCap">この <see cref="T:System.Drawing.Pen" /> で描画される直線の終点で使用されるキャップ スタイルを表す <see cref="T:System.Drawing.Drawing2D.LineCap" />。</param>
      <param name="dashCap">この <see cref="T:System.Drawing.Pen" /> で描画される破線の始点または終点で使用されるキャップ スタイルを表す <see cref="T:System.Drawing.Drawing2D.LineCap" />。</param>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
      <summary>指定した寸法でローカル ジオメトリック変換を平行移動します。 このメソッドは変換の前に平行移動を行います。</summary>
      <param name="dx">x 軸方向の平行移動の値。</param>
      <param name="dy">y 軸方向の平行移動の値。</param>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した寸法だけローカル ジオメトリック変換を平行移動します。</summary>
      <param name="dx">x 軸方向の平行移動の値。</param>
      <param name="dy">y 軸方向の平行移動の値。</param>
      <param name="order">平行移動を適用する順序 (前または後)。</param>
    </member>
    <member name="P:System.Drawing.Pen.Alignment">
      <summary>
        <see cref="T:System.Drawing.Pen" /> の配置を取得または設定します。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定した値が、<see cref="T:System.Drawing.Drawing2D.PenAlignment" /> のメンバーではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Alignment" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Pen" /> の配置を表す <see cref="T:System.Drawing.Drawing2D.PenAlignment" />。</returns>
    </member>
    <member name="P:System.Drawing.Pen.Brush">
      <summary>この <see cref="T:System.Drawing.Pen" /> の属性を決定する <see cref="T:System.Drawing.Brush" /> を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Brush" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Pen" /> の属性を決定する <see cref="T:System.Drawing.Brush" />。</returns>
    </member>
    <member name="P:System.Drawing.Pen.Color">
      <summary>この <see cref="T:System.Drawing.Pen" /> の色を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Color" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Pen" /> の色を表す <see cref="T:System.Drawing.Color" /> 構造体。</returns>
    </member>
    <member name="P:System.Drawing.Pen.CompoundArray">
      <summary>複合ペンを指定する値の配列を取得または設定します。 複合ペンでは、平行線と空白で構成される複合直線を描画します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.CompoundArray" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>複合配列を指定する実数の配列。 この配列内では、0 以上 1 以下の要素を昇順に並べる必要があります。</returns>
    </member>
    <member name="P:System.Drawing.Pen.CustomEndCap">
      <summary>この <see cref="T:System.Drawing.Pen" /> で描画された直線の終点で使用する、カスタム キャップを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.CustomEndCap" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Pen" /> で描画された直線の終点で使用されたキャップを表す <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />。</returns>
    </member>
    <member name="P:System.Drawing.Pen.CustomStartCap">
      <summary>この <see cref="T:System.Drawing.Pen" /> で描画された直線の始点で使用する、カスタム キャップを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.CustomStartCap" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Pen" /> で描画された直線の始点で使用されたキャップを表す <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />。</returns>
    </member>
    <member name="P:System.Drawing.Pen.DashCap">
      <summary>この <see cref="T:System.Drawing.Pen" /> で描画された破線で構成されるダッシュの終点で使用する、キャップ スタイルを取得または設定します。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定した値が、<see cref="T:System.Drawing.Drawing2D.DashCap" /> のメンバーではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashCap" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Pen" /> で描画された破線で構成されるダッシュの始点および終点で使用する、キャップ スタイルを表すいずれかの <see cref="T:System.Drawing.Drawing2D.DashCap" /> 値。</returns>
    </member>
    <member name="P:System.Drawing.Pen.DashOffset">
      <summary>直線の始点からダッシュ パターンの始点までの距離を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashOffset" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>直線の始点からダッシュ パターンの始点までの距離。</returns>
    </member>
    <member name="P:System.Drawing.Pen.DashPattern">
      <summary>カスタム ダッシュと空白の配列を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashPattern" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>破線内の代替ダッシュと空白の長さを指定する実数の配列。</returns>
    </member>
    <member name="P:System.Drawing.Pen.DashStyle">
      <summary>この <see cref="T:System.Drawing.Pen" /> で描画される破線で使用されるスタイルを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashStyle" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Pen" /> で描画される破線で使用されるスタイルを表す <see cref="T:System.Drawing.Drawing2D.DashStyle" />。</returns>
    </member>
    <member name="P:System.Drawing.Pen.EndCap">
      <summary>この <see cref="T:System.Drawing.Pen" /> で描画された直線の終点で使用する、キャップ スタイルを取得または設定します。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定した値が、<see cref="T:System.Drawing.Drawing2D.LineCap" /> のメンバーではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.EndCap" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Drawing2D.LineCap" /> で描画された直線の終点で使用されたキャップ スタイルを表すいずれかの <see cref="T:System.Drawing.Pen" /> 値。</returns>
    </member>
    <member name="P:System.Drawing.Pen.LineJoin">
      <summary>この <see cref="T:System.Drawing.Pen" /> で描画された連続する 2 本の直線の終点の接合スタイルを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.LineJoin" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Drawing2D.LineJoin" /> で描画された、連続する 2 本の直線の終点の接合スタイルを表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.Pen.MiterLimit">
      <summary>マイター隅の接合部の太さの限度を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.MiterLimit" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>マイター隅の接合部の太さの限度。</returns>
    </member>
    <member name="P:System.Drawing.Pen.PenType">
      <summary>この <see cref="T:System.Drawing.Pen" /> で描画される直線のスタイルを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.PenType" /> で描画される直線のスタイルを指定する <see cref="T:System.Drawing.Pen" /> 列挙体。</returns>
    </member>
    <member name="P:System.Drawing.Pen.StartCap">
      <summary>この <see cref="T:System.Drawing.Pen" /> で描画された直線の始点で使用する、キャップ スタイルを取得または設定します。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定した値が、<see cref="T:System.Drawing.Drawing2D.LineCap" /> のメンバーではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.StartCap" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Pen" /> で描画された直線の始点で使用されたキャップ スタイルを表すいずれかの <see cref="T:System.Drawing.Drawing2D.LineCap" /> 値。</returns>
    </member>
    <member name="P:System.Drawing.Pen.Transform">
      <summary>この <see cref="T:System.Drawing.Pen" /> のジオメトリック変換のコピーを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Transform" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Pen" /> のジオメトリック変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" /> のコピー。</returns>
    </member>
    <member name="P:System.Drawing.Pen.Width">
      <summary>この <see cref="T:System.Drawing.Pen" /> の幅を、描画に使用される <see cref="T:System.Drawing.Graphics" /> オブジェクトの単位で取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Width" /> プロパティが、<see cref="T:System.Drawing.Pens" /> クラスによって返されるオブジェクトなどの変更できない <see cref="T:System.Drawing.Pen" /> に対して設定されています。</exception>
      <returns>この <see cref="T:System.Drawing.Pen" /> の幅。</returns>
    </member>
    <member name="T:System.Drawing.Pens">
      <summary>すべての標準色用のペン。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Drawing.Pens.AliceBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.AntiqueWhite">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Aqua">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Aquamarine">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Azure">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Beige">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Bisque">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Black">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.BlanchedAlmond">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Blue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.BlueViolet">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Brown">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.BurlyWood">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.CadetBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Chartreuse">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Chocolate">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Coral">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.CornflowerBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Cornsilk">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Crimson">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Cyan">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkCyan">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGoldenrod">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGray">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkKhaki">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkMagenta">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOliveGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrange">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrchid">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkRed">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSalmon">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSeaGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateGray">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkTurquoise">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkViolet">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepPink">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepSkyBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DimGray">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DodgerBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Firebrick">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.FloralWhite">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.ForestGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Fuchsia">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gainsboro">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.GhostWhite">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gold">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Goldenrod">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gray">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Green">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.GreenYellow">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Honeydew">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.HotPink">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.IndianRed">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Indigo">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Ivory">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Khaki">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Lavender">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LavenderBlush">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LawnGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LemonChiffon">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCoral">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCyan">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGoldenrodYellow">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGray">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightPink">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSalmon">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSeaGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSkyBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSlateGray">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSteelBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightYellow">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Lime">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LimeGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Linen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Magenta">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Maroon">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumAquamarine">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumOrchid">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumPurple">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSeaGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSlateBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSpringGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumTurquoise">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumVioletRed">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MidnightBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MintCream">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MistyRose">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Moccasin">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.NavajoWhite">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Navy">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.OldLace">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Olive">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.OliveDrab">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Orange">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.OrangeRed">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Orchid">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGoldenrod">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleTurquoise">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleVioletRed">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PapayaWhip">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PeachPuff">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Peru">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Pink">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Plum">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PowderBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Purple">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Red">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.RosyBrown">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.RoyalBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SaddleBrown">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Salmon">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SandyBrown">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaShell">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Sienna">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Silver">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SkyBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateGray">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Snow">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SpringGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SteelBlue">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Tan">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Teal">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Thistle">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Tomato">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Transparent">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Turquoise">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Violet">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Wheat">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.White">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.WhiteSmoke">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Yellow">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Pens.YellowGreen">
      <summary>幅 1 のシステム定義 <see cref="T:System.Drawing.Pen" /> オブジェクト。</summary>
      <returns>システム定義色に設定された <see cref="T:System.Drawing.Pen" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Drawing.Printing.Duplex">
      <summary>プリンターの両面印刷設定を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Default">
      <summary>プリンターの既定の両面印刷設定。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Horizontal">
      <summary>両面印刷、水平方向に裏返して印刷。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Simplex">
      <summary>片面印刷。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Vertical">
      <summary>両面印刷、垂直方向に裏返して印刷。</summary>
    </member>
    <member name="T:System.Drawing.Printing.InvalidPrinterException">
      <summary>無効なプリンター設定を使用してプリンターにアクセスしようとしたときにスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>
        <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="settings">プリンターの設定を指定する <see cref="T:System.Drawing.Printing.PrinterSettings" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Drawing.Printing.InvalidPrinterException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">転送元または転送先についてのコンテキスト情報を含む <see cref="T:System.Runtime.Serialization.StreamingContext" /> です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">クラス名が <see langword="null" /> であるか、または <see cref="P:System.Exception.HResult" /> が 0 です。</exception>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オーバーライドされます。 例外に関する情報を含む <see cref="T:System.Runtime.Serialization.SerializationInfo" /> を設定します。</summary>
      <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">転送元または転送先についてのコンテキスト情報を含む <see cref="T:System.Runtime.Serialization.StreamingContext" /> です。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> が <see langword="null" />です。</exception>
    </member>
    <member name="T:System.Drawing.Printing.Margins">
      <summary>印刷ページの余白の大きさを指定します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.Margins" /> クラスの新しいインスタンスを 1 インチ幅の余白で初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.Printing.Margins" /> クラスの新しいインスタンスを指定した上下左右の余白で初期化します。</summary>
      <param name="left">左端余白 (1/100 インチ単位)。</param>
      <param name="right">右端余白 (1/100 インチ単位)。</param>
      <param name="top">上部余白 (1/100 インチ単位)。</param>
      <param name="bottom">下部余白 (1/100 インチ単位)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="left" /> パラメーターの値が 0 未満です。  
  
- または - 
<paramref name="right" /> パラメーターの値が 0 未満です。  
  
- または - 
<paramref name="top" /> パラメーターの値が 0 未満です。  
  
- または - 
<paramref name="bottom" /> パラメーターの値が 0 未満です。</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Clone">
      <summary>オブジェクトのメンバーごとに値を取得して、複製を作成します。</summary>
      <returns>このオブジェクトの複製。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Drawing.Printing.Margins" /> と、この <see cref="T:System.Object" /> を比較して、大きさが同じであるかどうかを判断します。</summary>
      <param name="obj">この <see cref="T:System.Drawing.Printing.Margins" /> と比較するオブジェクト。</param>
      <returns>指定したオブジェクトが <see cref="T:System.Drawing.Printing.Margins" /> であり、この <see cref="P:System.Drawing.Printing.Margins.Top" /> と同じ <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 値、<see cref="P:System.Drawing.Printing.Margins.Right" /> 値、<see cref="P:System.Drawing.Printing.Margins.Left" /> 値、および <see cref="T:System.Drawing.Printing.Margins" /> 値を持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.GetHashCode">
      <summary>上下左右の余白の幅に基づいて、ハッシュ コードを計算および取得します。</summary>
      <returns>上下左右の余白に基づくハッシュ コード。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Equality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>2 つの <see cref="T:System.Drawing.Printing.Margins" /> を比較して、大きさが同じであるかどうかを判断します。</summary>
      <param name="m1">等しいかどうかを比較するための、最初の <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <param name="m2">比較対象の第 2 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <returns>2 つの余白の <see cref="P:System.Drawing.Printing.Margins.Left" />、<see cref="P:System.Drawing.Printing.Margins.Right" />、<see cref="P:System.Drawing.Printing.Margins.Top" />、および <see cref="P:System.Drawing.Printing.Margins.Bottom" /> の各プロパティが同じ値を持つことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Inequality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>2 つの <see cref="T:System.Drawing.Printing.Margins" /> を比較して、幅が等しくないことを確認します。</summary>
      <param name="m1">比較対象の第 1 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <param name="m2">比較対象の第 2 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <returns>2 つの余白の <see cref="P:System.Drawing.Printing.Margins.Left" />、<see cref="P:System.Drawing.Printing.Margins.Right" />、<see cref="P:System.Drawing.Printing.Margins.Top" />、または <see cref="P:System.Drawing.Printing.Margins.Bottom" /> の各プロパティが等しくないことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.ToString">
      <summary>
        <see cref="T:System.Drawing.Printing.Margins" /> を文字列に変換します。</summary>
      <returns>
        <see cref="T:System.String" /> の <see cref="T:System.Drawing.Printing.Margins" /> 表現。</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Bottom">
      <summary>下部余白を 1/100 インチ単位で取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Bottom" /> プロパティは、0 未満の値が設定されています。</exception>
      <returns>下部余白 (1/100 インチ単位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Left">
      <summary>左端余白の幅を 1/100 インチ単位で取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Left" /> プロパティは、0 未満の値が設定されています。</exception>
      <returns>左端余白の幅 (1/100 インチ単位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Right">
      <summary>右端余白の幅を 1/100 インチ単位で取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Right" /> プロパティは、0 未満の値が設定されています。</exception>
      <returns>右端余白の幅 (1/100 インチ単位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Top">
      <summary>上部余白の幅を 1/100 インチ単位で取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Top" /> プロパティは、0 未満の値が設定されています。</exception>
      <returns>上部余白の幅 (1/100 インチ単位)。</returns>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>
        <see cref="T:System.Drawing.Printing.MarginsConverter" /> の <see cref="T:System.Drawing.Printing.Margins" /> を提供します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.MarginsConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>対象のコンバーターが、指定したコンテキストを使用して、指定した変換前の型のオブジェクトをコンバーターのネイティブの型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換前の型を表す <see cref="T:System.Type" />。</param>
      <returns>オブジェクトが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、コンテキストを使用してオブジェクトを目的の型に変換できるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換後の型を表す <see cref="T:System.Type" />。</param>
      <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトをコンバーターのネイティブな型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">変換後の言語を提供する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換対象の <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> に 4 つの余白の値が指定されていません。 たとえば、"100,100,100,100" は左、右、上、下の余白としてそれぞれ 1 インチを指定します。</exception>
      <exception cref="T:System.NotSupportedException">変換を実行できません。</exception>
      <returns>変換後の値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定したコンテキストと引数を使用して、値オブジェクトを目的の型に変換します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">変換後の言語を提供する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換対象の <see cref="T:System.Object" />。</param>
      <param name="destinationType">値の変換後の <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException">変換を実行できません。</exception>
      <returns>変換後の値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>オブジェクトのプロパティ値セットが指定された <see cref="T:System.Object" /> を作成します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="propertyValues">新しいプロパティ値の <see cref="T:System.Collections.IDictionary" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyValues" /> が <see langword="null" />です。</exception>
      <returns>指定した <see cref="T:System.Object" /> を表す <see cref="T:System.Collections.IDictionary" />。オブジェクトを作成できない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトの値を変更するときに、指定したコンテキストを使用して <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> メソッドを呼び出し、新しい値を作成する必要があるかどうかを返します。</summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>このオブジェクトのプロパティを変更するときに <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> を呼び出して新しい値を作成する必要がある場合は <see langword="true" />、必要がない場合は <see langword="false" />。 このメソッドは常に <see langword="true" /> を返します。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PageSettings">
      <summary>単一の印刷ページに適用する設定を指定します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor">
      <summary>既定のプリンターを使用して、<see cref="T:System.Drawing.Printing.PageSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>プリンターを指定して、<see cref="T:System.Drawing.Printing.PageSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="printerSettings">使用するプリンターを記述する <see cref="T:System.Drawing.Printing.PrinterSettings" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.Clone">
      <summary>この <see cref="T:System.Drawing.Printing.PageSettings" /> のコピーを作成します。</summary>
      <returns>このオブジェクトのコピー。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)">
      <summary>関連情報を <see cref="T:System.Drawing.Printing.PageSettings" /> から指定した <see langword="DEVMODE" /> 構造体にコピーします。</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 構造体を識別するハンドル。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しないか、既定のプリンターがインストールされていません。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)">
      <summary>関連情報を、指定した <see langword="DEVMODE" /> 構造体から <see cref="T:System.Drawing.Printing.PageSettings" /> にコピーします。</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 構造体を識別するハンドル。</param>
      <exception cref="T:System.ArgumentException">プリンター ハンドルが無効です。</exception>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しないか、既定のプリンターがインストールされていません。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.ToString">
      <summary>
        <see cref="T:System.Drawing.Printing.PageSettings" /> を文字列形式に変換します。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PageSettings" /> の各種プロパティ設定を示す文字列。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Bounds">
      <summary>
        <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> プロパティで指定した用紙方向が考慮された、ページのサイズを取得します。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
      <returns>ページの長さと幅 (1/100 インチ単位) を表す <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Color">
      <summary>ページを色付きで印刷するかどうかを示す値を取得または設定します。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
      <returns>ページを色付きで印刷する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値はプリンターによって決定されます。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginX">
      <summary>ページの左側のハード マージンの x 座標 (1/100 インチ単位) を取得します。</summary>
      <returns>左側のハード マージンの x 座標 (1/100 インチ単位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginY">
      <summary>ページの上部のハード マージンの y 座標 (1/100 インチ単位) を取得します。</summary>
      <returns>ページの上部のハード マージンの y 座標 (1/100 インチ単位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Landscape">
      <summary>ページの印刷時に用紙を横向きにするか縦向きにするかを示す値を取得または設定します。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
      <returns>ページを横向きで印刷する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値はプリンターによって決定されます。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Margins">
      <summary>このページの余白を取得または設定します。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
      <returns>ページの余白 (1/100 インチ単位) を表す <see cref="T:System.Drawing.Printing.Margins" />。 既定値は、左右上下とも、余白 1 インチです。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSize">
      <summary>ページの用紙サイズを取得または設定します。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しないか、既定のプリンターがインストールされていません。</exception>
      <returns>用紙のサイズを表す <see cref="T:System.Drawing.Printing.PaperSize" />。 既定値は、プリンターの既定の用紙サイズです。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSource">
      <summary>ページの給紙方法を取得または設定します (たとえば、プリンターの上段トレイ)。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しないか、既定のプリンターがインストールされていません。</exception>
      <returns>プリンターの給紙方法を指定する <see cref="T:System.Drawing.Printing.PaperSource" />。 既定値は、プリンターの既定の給紙方法です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrintableArea">
      <summary>プリンターのページの印刷可能領域の範囲を取得します。</summary>
      <returns>プリンターが印刷できる領域の長さと幅 (1/100 インチ単位) を表す <see cref="T:System.Drawing.RectangleF" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterResolution">
      <summary>ページのプリンター解像度を取得または設定します。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しないか、既定のプリンターがインストールされていません。</exception>
      <returns>ページのプリンター解像度を指定する <see cref="T:System.Drawing.Printing.PrinterResolution" />。 既定値は、プリンターの既定の解像度です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterSettings">
      <summary>ページに関連するプリンター設定を取得または設定します。</summary>
      <returns>ページに関連付けられたプリンター設定を表す <see cref="T:System.Drawing.Printing.PrinterSettings" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperKind">
      <summary>標準の用紙サイズを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A2">
      <summary>A2 用紙 (420 mm x 594 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3">
      <summary>A3 用紙 (297 mm x 420 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Extra">
      <summary>A3 Extra 用紙 (322 mm x 445 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3ExtraTransverse">
      <summary>A3 Extra Transverse 用紙 (322 mm x 445 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Rotated">
      <summary>A3 用紙横 (420 mm x 297 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Transverse">
      <summary>A3 Transverse 用紙 (297 mm x 420 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4">
      <summary>A4 用紙 (210 mm x 297 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Extra">
      <summary>A4 Extra 用紙 (236 mm x 322 mm)。 この値は PostScript ドライバー固有の値で、紙を節約するために Linotronic プリンターでのみ使用します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Plus">
      <summary>A4 Plus 用紙 (210 mm x 330 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Rotated">
      <summary>A4 用紙横 (297 mm x 210 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Small">
      <summary>A4 Small 用紙 (210 mm x 297 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Transverse">
      <summary>A4 Transverse 用紙 (210 mm x 297 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5">
      <summary>A5 用紙 (148 mm x 210 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Extra">
      <summary>A5 Extra 用紙 (174 mm x 235 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Rotated">
      <summary>A5 用紙横 (210 mm x 148 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Transverse">
      <summary>A5 Transverse 用紙 (148 mm x 210 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6">
      <summary>A6 用紙 (105 mm x 148 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6Rotated">
      <summary>A6 用紙横 (148 mm x 105 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.APlus">
      <summary>SuperA/SuperA/A4 用紙 (227 mm x 356 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4">
      <summary>B4 用紙 (250 mm x 353 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4Envelope">
      <summary>B4 封筒 (250 mm x 353 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4JisRotated">
      <summary>JIS B4 用紙横 (364 mm x 257 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5">
      <summary>B5 用紙 (176 mm x 250 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Envelope">
      <summary>B5 封筒 (176 mm x 250 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Extra">
      <summary>ISO B5 Extra 用紙 (201 mm x 276 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5JisRotated">
      <summary>JIS B5 用紙横 (257 mm x 182 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Transverse">
      <summary>JIS B5 Transverse 用紙 (182 mm x 257 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Envelope">
      <summary>B6 封筒 (176 mm x 125 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Jis">
      <summary>JIS B6 用紙 (128 mm x 182 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6JisRotated">
      <summary>JIS B6 用紙横 (182 mm x 128 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.BPlus">
      <summary>SuperB/SuperB/A3 用紙 (305 mm x 487 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C3Envelope">
      <summary>C3 封筒 (324 mm x 458 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C4Envelope">
      <summary>C4 封筒 (229 mm x 324 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C5Envelope">
      <summary>C5 封筒 (162 mm x 229 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C65Envelope">
      <summary>C65 封筒 (114 mm x 229 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C6Envelope">
      <summary>C6 封筒 (114 mm x 162 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.CSheet">
      <summary>C 用紙 (17 インチ  x 22 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Custom">
      <summary>用紙のサイズは、ユーザーによって定義されます。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DLEnvelope">
      <summary>DL 封筒 (110 mm x 220 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DSheet">
      <summary>D 用紙 (22 インチ  x 34 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ESheet">
      <summary>E 用紙 (34 インチ  x 44 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Executive">
      <summary>Executive 用紙 (7.25 インチ  x 10.5 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Folio">
      <summary>Folio 用紙 (8.5 インチ  x 13 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanLegalFanfold">
      <summary>ドイツ リーガル複写紙 (8.5 インチ  x 13 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanStandardFanfold">
      <summary>ドイツ標準複写紙 (8.5 インチ  x 12 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.InviteEnvelope">
      <summary>Invitation 封筒 (220 mm x 220 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.IsoB4">
      <summary>ISO B4 (250 mm x 353 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ItalyEnvelope">
      <summary>Italy 封筒 (176 mm x 230 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcard">
      <summary>往復はがき (200 mm x 148 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated">
      <summary>往復はがき横 (148 mm x 200 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3">
      <summary>長形 3 号封筒。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3Rotated">
      <summary>長形 3 号封筒横。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4">
      <summary>長形 4 号封筒。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated">
      <summary>長形 4 号封筒横。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2">
      <summary>角形 2 号封筒。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated">
      <summary>角形 2 号封筒横。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3">
      <summary>角形 3 号封筒。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated">
      <summary>角形 3 号封筒横。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4">
      <summary>洋形 4 号封筒。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated">
      <summary>洋形 4 号封筒横。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcard">
      <summary>はがき (100 mm x 148 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcardRotated">
      <summary>はがき横 (148 mm x 100 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Ledger">
      <summary>Ledger 用紙 (17 インチ  x 11 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Legal">
      <summary>Legal 用紙 (8.5 インチ  x 14 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LegalExtra">
      <summary>Legal Extra 用紙 (9.275 インチ  x 15 インチ)。 この値は PostScript ドライバー固有の値で、紙を節約するために Linotronic プリンターでのみ使用します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Letter">
      <summary>レター サイズ (8.5 インチ  x 11 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtra">
      <summary>Letter Extra 用紙 (9.275 インチ  x 12 インチ)。 この値は PostScript ドライバー固有の値で、紙を節約するために Linotronic プリンターでのみ使用します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtraTransverse">
      <summary>Letter Extra Transverse 用紙 (9.275 インチ  x 12 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterPlus">
      <summary>Letter Plus 用紙 (8.5 インチ  x 12.69 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterRotated">
      <summary>Letter 用紙横 (11 インチ  x 8.5 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterSmall">
      <summary>Letter Small 用紙 (8.5 インチ  x 11 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterTransverse">
      <summary>Letter Transverse 用紙 (8.275 インチ  x 11 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.MonarchEnvelope">
      <summary>Monarch 封筒 (3.875 インチ  x 7.5 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Note">
      <summary>メモ用紙 (8.5 インチ  x 11 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number10Envelope">
      <summary>#10 封筒 (4.125 インチ  x 9.5 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number11Envelope">
      <summary>#11 封筒 (4.5 インチ  x 10.375 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number12Envelope">
      <summary>#12 封筒 (4.75 インチ  x 11 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number14Envelope">
      <summary>#14 封筒 (5 インチ  x 11.5 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number9Envelope">
      <summary>#9 封筒 (3.875 インチ  x 8.875 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PersonalEnvelope">
      <summary>6 3/4 封筒 (3.625 インチ  x 6.5 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16K">
      <summary>16K 用紙 (146 mm x 215 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16KRotated">
      <summary>16K 用紙横 (146 mm x 215 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32K">
      <summary>32K 用紙 (97 mm x 151 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBig">
      <summary>32K Big 用紙 (97 mm x 151 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBigRotated">
      <summary>32K Big 用紙横 (97 mm x 151 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KRotated">
      <summary>32K 用紙横 (97 mm x 151 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1">
      <summary>#1 封筒 (102 mm x 165 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10">
      <summary>#10 封筒 (324 mm x 458 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated">
      <summary>#10 封筒横 (458 mm x 324 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated">
      <summary>#1 封筒横 (165 mm x 102 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2">
      <summary>#2 封筒 (102 mm x 176 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated">
      <summary>#2 封筒横 (176 mm x 102 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3">
      <summary>#3 封筒 (125 mm x 176 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated">
      <summary>#3 封筒横 (176 mm x 125 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4">
      <summary>#4 封筒 (110 mm x 208 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated">
      <summary>#4 封筒横 (208 mm x 110 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5">
      <summary>#5 封筒 (110 mm x 220 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated">
      <summary>#5 封筒横 (220 mm x 110 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6">
      <summary>#6 封筒 (120 mm x 230 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated">
      <summary>#6 封筒横 (230 mm x 120 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7">
      <summary>#7 封筒 (160 mm x 230 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated">
      <summary>#7 封筒横 (230 mm x 160 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8">
      <summary>#8 封筒 (120 mm x 309 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated">
      <summary>#8 封筒横 (309 mm x 120 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9">
      <summary>#9 封筒 (229 mm x 324 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated">
      <summary>#9 封筒横 (324 mm x 229 mm)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Quarto">
      <summary>Quarto 用紙 (215 mm x 275 mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x11">
      <summary>標準用紙 (10 インチ  x 11 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x14">
      <summary>標準用紙 (10 インチ  x 14 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard11x17">
      <summary>標準用紙 (11 インチ  x 17 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard12x11">
      <summary>標準用紙 (12 インチ  x 11 インチ)。 Windows 98、Windows NT 4.0 以降が必要です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard15x11">
      <summary>標準用紙 (15 インチ  x 11 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard9x11">
      <summary>標準用紙 (9 インチ  x 11 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Statement">
      <summary>申告用紙 (5.5 インチ  x 8.5 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Tabloid">
      <summary>Tabloid 用紙 (11 インチ  x 17 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.TabloidExtra">
      <summary>Tabloid Extra 用紙 (11.69 インチ  x 18 インチ)。 この値は PostScript ドライバー固有の値で、紙を節約するために Linotronic プリンターでのみ使用します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.USStandardFanfold">
      <summary>米国標準複写紙 (14.875 インチ  x 11 インチ)。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSize">
      <summary>用紙のサイズを指定します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSize" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSize" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">用紙の名前。</param>
      <param name="width">用紙の横幅 (1/100 インチ単位)。</param>
      <param name="height">用紙の縦幅 (1/100 インチ単位)。</param>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.ToString">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSize" /> に関する情報を文字列形式で提供します。</summary>
      <returns>文字列。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Height">
      <summary>用紙の縦幅を 1/100 インチ単位で取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> プロパティが <see cref="F:System.Drawing.Printing.PaperKind.Custom" /> に設定されていません。</exception>
      <returns>用紙の縦幅 (1/100 インチ単位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Kind">
      <summary>用紙の種類を取得します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> プロパティが <see cref="F:System.Drawing.Printing.PaperKind.Custom" /> に設定されていません。</exception>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperKind" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.PaperName">
      <summary>用紙の種類名を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> プロパティが <see cref="F:System.Drawing.Printing.PaperKind.Custom" /> に設定されていません。</exception>
      <returns>用紙の種類名。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.RawKind">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSize" /> 値のいずれか、またはカスタム値を表す整数を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSize" /> 値のいずれか、またはカスタム値を表す整数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Width">
      <summary>用紙の横幅を 1/100 インチ単位で取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> プロパティが <see cref="F:System.Drawing.Printing.PaperKind.Custom" /> に設定されていません。</exception>
      <returns>用紙の横幅 (1/100 インチ単位)。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperSource">
      <summary>プリンターに用紙を供給する用紙トレイを指定します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSource" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.ToString">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSource" /> に関する情報を文字列形式で提供します。</summary>
      <returns>文字列。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.Kind">
      <summary>給紙方法を取得します。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.RawKind">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 値のいずれか、またはカスタム値を表す整数を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 値のいずれか、またはカスタム値を表す整数値。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.SourceName">
      <summary>給紙方法の名前を取得または設定します。</summary>
      <returns>用紙トレイの名前。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperSourceKind">
      <summary>標準の給紙方法。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.AutomaticFeed">
      <summary>自動送り用紙。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Cassette">
      <summary>用紙カセット。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Custom">
      <summary>プリンター固有の給紙方法。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Envelope">
      <summary>封筒。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.FormSource">
      <summary>プリンターの既定の入力ビン。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeCapacity">
      <summary>プリンターの大容量ビン。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeFormat">
      <summary>大型フォーム用紙。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Lower">
      <summary>プリンターの下段ビン。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Manual">
      <summary>手差し用紙。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.ManualFeed">
      <summary>手差し封筒。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Middle">
      <summary>プリンターの中段ビン。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.SmallFormat">
      <summary>小型フォーム用紙。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.TractorFeed">
      <summary>トラクター送り。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Upper">
      <summary>プリンターの上段ビン (プリンターのビンが 1 つだけの場合は、既定のビン)。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPageInfo">
      <summary>単一ページの印刷プレビュー情報を指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>
        <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="image">印刷ページのイメージ。</param>
      <param name="physicalSize">印刷ページのサイズ (1/100 インチ単位)。</param>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.Image">
      <summary>印刷ページのイメージを取得します。</summary>
      <returns>印刷ページを表す <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.PhysicalSize">
      <summary>印刷ページのサイズを 1/100 インチ単位で取得します。</summary>
      <returns>印刷ページのサイズを 1/100 インチ単位で表す <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPrintController">
      <summary>ドキュメントを一連のイメージとして画面に表示するプリント コントローラーを指定します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PreviewPrintController" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.GetPreviewPageInfo">
      <summary>ドキュメントのページを一連のイメージとしてキャプチャします。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> のページを一連のイメージとして格納する <see cref="T:System.Drawing.Printing.PrintDocument" /> 型の配列。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>印刷ドキュメントのページをプレビューする時点とプレビュー方法を決定する制御シーケンスを完了します。</summary>
      <param name="document">プレビュー中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">印刷ドキュメントのページをプレビューする方法についてのデータを格納する <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>印刷ドキュメントをプレビューする時点とプレビュー方法を決定する制御シーケンスを完了します。</summary>
      <param name="document">プレビュー中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">印刷ドキュメントのプレビュー方法についてのデータを格納する <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>印刷ドキュメントのページをプレビューする時点とプレビュー方法を決定する制御シーケンスを開始します。</summary>
      <param name="document">プレビュー中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">印刷ドキュメントのページをプレビューする方法についてのデータを格納する <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。 初期の状態では、このパラメーターの <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> プロパティは <see langword="null" /> です。 このメソッドによって返された値は、このプロパティを設定するために使用されます。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> からのページを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>印刷ドキュメントをプレビューする時点とプレビュー方法を決定する制御シーケンスを開始します。</summary>
      <param name="document">プレビュー中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">ドキュメントの印刷方法についてのデータを格納する <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.IsPreview">
      <summary>このコントローラーが印刷プレビューに使用されるかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.UseAntiAlias">
      <summary>印刷プレビューを表示するときに、アンチエイリアスを使用するかどうかを示す値を取得または設定します。</summary>
      <returns>印刷プレビューでアンチエイリアスを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintAction">
      <summary>発生している印刷操作の種類を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToFile">
      <summary>この印刷操作はファイルへの出力です。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPreview">
      <summary>この印刷操作は印刷プレビューです。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPrinter">
      <summary>この印刷操作はプリンターへの出力です。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintController">
      <summary>Windows フォーム アプリケーションから印刷する際の文書の印刷方法を制御します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintController" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>派生クラスによってオーバーライドされるときに、ドキュメントのページを印刷する時点と印刷方法を決定する制御シーケンスを完了します。</summary>
      <param name="document">現在印刷中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>派生クラスでオーバーライドされる場合に、ドキュメントを印刷する時点と印刷方法を決定する制御シーケンスを完了します。</summary>
      <param name="document">現在印刷中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>派生クラスでオーバーライドされる場合に、ドキュメントのページを印刷する時点と印刷方法を決定する制御シーケンスを開始します。</summary>
      <param name="document">現在印刷中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> からのページを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>派生クラスでオーバーライドされる場合に、ドキュメントを印刷する時点と印刷方法を決定する制御シーケンスを開始します。</summary>
      <param name="document">現在印刷中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintController.IsPreview">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintController" /> が印刷プレビューに使用されるかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintDocument">
      <summary>Windows フォーム アプリケーションからの印刷時にプリンターに出力を送信する再利用可能なオブジェクトを定義します。</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.BeginPrint">
      <summary>
        <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> メソッドが呼び出されたとき (ドキュメントの最初のページが印刷される前) に発生します。</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.EndPrint">
      <summary>ドキュメントの最後のページが印刷されたときに発生します。</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.PrintPage">
      <summary>現在のページに印刷する出力が必要なときに発生します。</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.QueryPageSettings">
      <summary>各 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> イベントの直前に発生します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintDocument" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> イベントを発生させます。 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> メソッドが呼び出された後、ドキュメントの最初のページが印刷される前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> イベントを発生させます。 ドキュメントの最後のページが印刷されたときに呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> イベントを発生させます。 ページの印刷前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> イベントを発生させます。 各 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> イベントの直前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.Print">
      <summary>ドキュメントの印刷プロセスを開始します。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.ToString">
      <summary>印刷ドキュメントに関する情報を文字列形式で提供します。</summary>
      <returns>文字列。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings">
      <summary>印刷するすべてのページの既定値として使用されるページ設定を取得または設定します。</summary>
      <returns>ドキュメントの既定のページ設定を指定する <see cref="T:System.Drawing.Printing.PageSettings" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DocumentName">
      <summary>ドキュメントの印刷中に、印刷ステータス ダイアログ ボックスやプリンター キューなどで表示するドキュメントの名前を取得または設定します。</summary>
      <returns>ドキュメントの印刷中に表示するドキュメント名。 既定値は "document" です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.OriginAtMargins">
      <summary>ページに関連付けられているグラフィック オブジェクトの位置が、ユーザー指定の余白の内側にあるか、ページの印刷可能領域の左上隅にあるかを示す値を取得または設定します。</summary>
      <returns>グラフィックの原点がページの余白から始まっている場合は <see langword="true" />、グラフィックの原点が印刷可能ページの左上隅にある場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrintController">
      <summary>印刷プロセスを制御するプリント コントローラーを取得または設定します。</summary>
      <returns>印刷プロセスを制御する <see cref="T:System.Drawing.Printing.PrintController" />。 既定値は、<see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> クラスの新しいインスタンスです。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrinterSettings">
      <summary>ドキュメントを印刷するプリンターを取得または設定します。</summary>
      <returns>ドキュメントを印刷する場所と方法を指定する <see cref="T:System.Drawing.Printing.PrinterSettings" />。 既定値は、プロパティが既定値に設定されている <see cref="T:System.Drawing.Printing.PrinterSettings" /> です。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolution">
      <summary>プリンターでサポートされる解像度を表します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterResolution" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.ToString">
      <summary>このメンバーは、<see cref="M:System.Object.ToString" /> メソッドをオーバーライドします。</summary>
      <returns>
        <see cref="T:System.String" /> に関する情報を格納している <see cref="T:System.Drawing.Printing.PrinterResolution" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Kind">
      <summary>プリンターの解像度を取得または設定します。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">代入された値が、<see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> 列挙体のメンバーではありません。</exception>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.X">
      <summary>水平方向のプリンター解像度を 1 インチあたりのドット数 (dpi) で取得します。</summary>
      <returns>
        <see cref="P:System.Drawing.Printing.PrinterResolution.Kind" /> が <see cref="F:System.Drawing.Printing.PrinterResolutionKind.Custom" /> に設定されている場合は 1 インチあたりのドット数 (dpi) で表された水平方向のプリンター解像度。それ以外の場合は、<see langword="dmPrintQuality" /> 値。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Y">
      <summary>垂直方向のプリンター解像度を 1 インチあたりのドット数 (dpi) で取得します。</summary>
      <returns>垂直方向のプリンター解像度 (dpi)。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolutionKind">
      <summary>プリンターの解像度を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Custom">
      <summary>カスタム解像度。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Draft">
      <summary>ドラフト品質解像度。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.High">
      <summary>高解像度。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Low">
      <summary>低解像度。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Medium">
      <summary>中解像度。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings">
      <summary>Windows フォーム アプリケーションから印刷する場合のドキュメントの印刷方法に関する情報 (印刷に使用するプリンターなど) を指定します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.Clone">
      <summary>この <see cref="T:System.Drawing.Printing.PrinterSettings" /> のコピーを作成します。</summary>
      <returns>このオブジェクトのコピー。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics">
      <summary>
        <see cref="T:System.Drawing.Graphics" /> の作成時に役立つプリンター情報を格納する <see cref="T:System.Drawing.Printing.PrintDocument" /> を返します。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
      <returns>プリンターの情報を格納する <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)">
      <summary>プリンター情報を格納し、オプションで余白の原点を指定する <see cref="T:System.Drawing.Graphics" /> を返します。</summary>
      <param name="honorOriginAtMargins">余白の原点を示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> のプリンター情報を格納する <see cref="T:System.Drawing.Printing.PageSettings" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)">
      <summary>指定した <see cref="T:System.Drawing.Graphics" /> に関連付けられたプリンター情報を格納する <see cref="T:System.Drawing.Printing.PageSettings" /> を返します。</summary>
      <param name="pageSettings">グラフィックス オブジェクトを取得する対象の <see cref="T:System.Drawing.Printing.PageSettings" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> のプリンター情報を格納する <see cref="T:System.Drawing.Printing.PageSettings" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)">
      <summary>指定したページ設定に関連付けられ、オプションで余白の原点を指定する <see cref="T:System.Drawing.Graphics" /> を作成します。</summary>
      <param name="pageSettings">
        <see cref="T:System.Drawing.Printing.PageSettings" /> オブジェクトを取得する対象の <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="honorOriginAtMargins">余白の原点を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> のプリンター情報を格納する <see cref="T:System.Drawing.Printing.PageSettings" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode">
      <summary>プリンター設定に対応する <see langword="DEVMODE" /> 構造体を識別するハンドルを作成します。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">プリンターの初期化情報を取得できませんでした。</exception>
      <returns>
        <see langword="DEVMODE" /> 構造体を識別するハンドル。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)">
      <summary>プリンター設定や、<paramref name="pageSettings" /> パラメーターで指定されたページ設定に対応する <see langword="DEVMODE" /> 構造体を識別するハンドルを作成します。</summary>
      <param name="pageSettings">
        <see langword="DEVMODE" /> 構造体のハンドルが対応している <see cref="T:System.Drawing.Printing.PageSettings" /> オブジェクト。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">プリンターの初期化情報を取得できませんでした。</exception>
      <returns>
        <see langword="DEVMODE" /> 構造体を識別するハンドル。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevnames">
      <summary>プリンター設定に対応する <see langword="DEVNAMES" /> 構造体を識別するハンドルを作成します。</summary>
      <returns>
        <see langword="DEVNAMES" /> 構造体を識別するハンドル。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)">
      <summary>指定したイメージ ファイルの印刷をプリンターがサポートしているかどうかを示す値を取得します。</summary>
      <param name="image">印刷するイメージ。</param>
      <returns>指定したイメージの印刷をプリンターがサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)">
      <summary>指定したイメージ形式の印刷をプリンターがサポートしているかどうかを示す値を返します。</summary>
      <param name="imageFormat">印刷する <see cref="T:System.Drawing.Imaging.ImageFormat" />。</param>
      <returns>指定したイメージ形式の印刷をプリンターがサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)">
      <summary>特定のハンドルから <see cref="T:System.Drawing.Printing.PrinterSettings" /> に関連情報をコピーします。</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 構造体を識別するハンドル。</param>
      <exception cref="T:System.ArgumentException">プリンター ハンドルが無効です。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)">
      <summary>特定のハンドルから <see cref="T:System.Drawing.Printing.PrinterSettings" /> に関連情報をコピーします。</summary>
      <param name="hdevnames">Win32 <see langword="DEVNAMES" /> 構造体を識別するハンドル。</param>
      <exception cref="T:System.ArgumentException">プリンター ハンドルが無効です。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.ToString">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings" /> に関する情報を文字列形式で提供します。</summary>
      <returns>文字列。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.CanDuplex">
      <summary>プリンターが両面印刷をサポートしているかどうかを示す値を取得します。</summary>
      <returns>プリンターが両面印刷をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Collate">
      <summary>ドキュメントを部単位で印刷するかどうかを示す値を取得または設定します。</summary>
      <returns>ドキュメントを部単位で印刷する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Copies">
      <summary>印刷するドキュメントの部数を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.Copies" /> プロパティの値が 0 未満です。</exception>
      <returns>印刷するコピーの部数。 既定値は 1 です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings">
      <summary>プリンターの既定のページ設定を取得します。</summary>
      <returns>プリンターの既定のページ設定を表す <see cref="T:System.Drawing.Printing.PageSettings" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Duplex">
      <summary>両面印刷用のプリンター設定を取得または設定します。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" /> プロパティの値が、<see cref="T:System.Drawing.Printing.Duplex" /> 値ではありません。</exception>
      <returns>
        <see cref="T:System.Drawing.Printing.Duplex" /> 値のいずれか 1 つ。 既定値はプリンターによって決定されます。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.FromPage">
      <summary>印刷開始ページの番号を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> プロパティの値が 0 未満です。</exception>
      <returns>印刷開始ページのページ番号。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters">
      <summary>コンピューターにインストールされているすべてのプリンターの名前を取得します。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">使用できるプリンターを列挙できませんでした。</exception>
      <returns>コンピューターにインストールされているすべてのプリンターの名前を表す <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter">
      <summary>ユーザーが明示的に <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> を設定した場合を除き、<see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが、通常使うプリンターに指定されているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> が通常使うプリンターの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsPlotter">
      <summary>プリンターがプロッターかどうかを示す値を取得します。</summary>
      <returns>プリンターがプロッターの場合は <see langword="true" />。プリンターがラスターの場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsValid">
      <summary>
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが有効なプリンターに指定されているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが有効なプリンターの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle">
      <summary>縦向きの用紙を回転して横向きにする場合の角度 (°) を取得します。</summary>
      <returns>縦向きの用紙を回転して横向きにする場合の角度 (°)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumCopies">
      <summary>プリンターで一度に印刷できる最大部数を取得します。</summary>
      <returns>プリンターで一度に印刷できる最大部数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumPage">
      <summary>
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> で選択できる <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> または <see cref="T:System.Windows.Forms.PrintDialog" /> の最大値を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" /> プロパティの値が 0 未満です。</exception>
      <returns>
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> で選択できる <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> または <see cref="T:System.Windows.Forms.PrintDialog" /> の最大値。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MinimumPage">
      <summary>
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> で選択できる <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> または <see cref="T:System.Windows.Forms.PrintDialog" /> の最小値を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" /> プロパティの値が 0 未満です。</exception>
      <returns>
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> で選択できる <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> または <see cref="T:System.Windows.Forms.PrintDialog" /> の最小値。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizes">
      <summary>プリンターでサポートされている用紙サイズを取得します。</summary>
      <returns>プリンターでサポートされている用紙サイズを表す <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSources">
      <summary>プリンターで使用できる用紙トレイを取得します。</summary>
      <returns>プリンターで使用できる用紙トレイを表す <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterName">
      <summary>使用するプリンターの名前を取得または設定します。</summary>
      <returns>使用するプリンターの名前。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions">
      <summary>プリンターでサポートされている解像度をすべて取得します。</summary>
      <returns>プリンターでサポートされている解像度を表す <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintFileName">
      <summary>ファイルに出力する際にファイル名を取得または設定します。</summary>
      <returns>ファイルに出力する際のファイル名。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintRange">
      <summary>ユーザーが指定した印刷ページの番号を取得または設定します。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" /> プロパティの値が、<see cref="T:System.Drawing.Printing.PrintRange" /> 値ではありません。</exception>
      <returns>
        <see cref="T:System.Drawing.Printing.PrintRange" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintToFile">
      <summary>ポートではなく、ファイルに印刷出力を送信するかどうかを示す値を取得または設定します。</summary>
      <returns>印刷出力をファイルに送信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.SupportsColor">
      <summary>プリンターがカラー印刷をサポートしているかどうかを示す値を取得します。</summary>
      <returns>プリンターがカラー印刷をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.ToPage">
      <summary>印刷終了ページの番号を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> プロパティの値が 0 未満です。</exception>
      <returns>印刷する最後のページの番号。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSize" /> オブジェクトのコレクションを含んでいます。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.#ctor(System.Drawing.Printing.PaperSize[])">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="array">
        <see cref="T:System.Drawing.Printing.PaperSize" /> 型の配列。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Add(System.Drawing.Printing.PaperSize)">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterResolution" /> をコレクションの末尾に追加します。</summary>
      <param name="paperSize">コレクションに追加する <see cref="T:System.Drawing.Printing.PaperSize" />。</param>
      <returns>新しく追加された項目の 0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.CopyTo(System.Drawing.Printing.PaperSize[],System.Int32)">
      <summary>指定したインデックスを開始位置として、指定した配列に現在の <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> の内容をコピーします。</summary>
      <param name="paperSizes">
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> の項目のコピー先となる、インデックス番号が 0 から始まる配列。</param>
      <param name="index">項目のコピーの開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.GetEnumerator">
      <summary>このコレクションを反復処理できる列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />」をご覧ください。</summary>
      <param name="array">コレクションの項目のコピー先となる、インデックス番号が 0 から始まる配列。</param>
      <param name="index">項目のコピーの開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションに関連付けられた列挙体。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Count">
      <summary>コレクション内の異なる用紙サイズの数を取得します。</summary>
      <returns>コレクション内の異なる用紙サイズの数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Item(System.Int32)">
      <summary>指定したインデックスにある <see cref="T:System.Drawing.Printing.PaperSize" /> を取得します。</summary>
      <param name="index">取得する <see cref="T:System.Drawing.Printing.PaperSize" /> のインデックス。</param>
      <returns>指定したインデックスにある <see cref="T:System.Drawing.Printing.PaperSize" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#Count">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.Count" />」をご覧ください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> に格納されている要素の数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.SyncRoot" />」をご覧ください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection">
      <summary>
        <see cref="T:System.Drawing.Printing.PaperSource" /> オブジェクトのコレクションを含んでいます。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.#ctor(System.Drawing.Printing.PaperSource[])">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="array">
        <see cref="T:System.Drawing.Printing.PaperSource" /> 型の配列。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Add(System.Drawing.Printing.PaperSource)">
      <summary>指定した <see cref="T:System.Drawing.Printing.PaperSource" /> を <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> の末尾に追加します。</summary>
      <param name="paperSource">コレクションに追加する <see cref="T:System.Drawing.Printing.PaperSource" />。</param>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSource" /> を追加した 0 から始まるインデックスです。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.CopyTo(System.Drawing.Printing.PaperSource[],System.Int32)">
      <summary>指定したインデックスを開始位置として、指定した配列に現在の <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> の内容をコピーします。</summary>
      <param name="paperSources">
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> の項目のコピー先となる、インデックス番号が 0 から始まる配列。</param>
      <param name="index">項目のコピーの開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.GetEnumerator">
      <summary>このコレクションを反復処理できる列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />」をご覧ください。</summary>
      <param name="array">コレクションの内容のコピー先配列。</param>
      <param name="index">コピー操作の開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Count">
      <summary>コレクション内の異なる給紙方法の数を取得します。</summary>
      <returns>コレクション内の異なる給紙方法の数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Item(System.Int32)">
      <summary>指定したインデックスにある <see cref="T:System.Drawing.Printing.PaperSource" /> を取得します。</summary>
      <param name="index">取得する <see cref="T:System.Drawing.Printing.PaperSource" /> のインデックス。</param>
      <returns>指定したインデックスにある <see cref="T:System.Drawing.Printing.PaperSource" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#Count">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.Count" />」をご覧ください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> に格納されている要素の数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.SyncRoot" />」をご覧ください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterResolution" /> オブジェクトのコレクションを含んでいます。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.#ctor(System.Drawing.Printing.PrinterResolution[])">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="array">
        <see cref="T:System.Drawing.Printing.PrinterResolution" /> 型の配列。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Add(System.Drawing.Printing.PrinterResolution)">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterResolution" /> をコレクションの末尾に追加します。</summary>
      <param name="printerResolution">コレクションに追加する <see cref="T:System.Drawing.Printing.PrinterResolution" />。</param>
      <returns>新しく追加された項目の 0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.CopyTo(System.Drawing.Printing.PrinterResolution[],System.Int32)">
      <summary>指定したインデックスを開始位置として、指定した配列に現在の <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> の内容をコピーします。</summary>
      <param name="printerResolutions">
        <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> の項目のコピー先となる、インデックス番号が 0 から始まる配列。</param>
      <param name="index">項目のコピーの開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.GetEnumerator">
      <summary>このコレクションを反復処理できる列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />」をご覧ください。</summary>
      <param name="array">コピー先の配列。</param>
      <param name="index">コピー操作の開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Count">
      <summary>コレクション内の使用できるプリンター解像度の数を取得します。</summary>
      <returns>コレクション内の使用できるプリンター解像度の数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Item(System.Int32)">
      <summary>指定したインデックスにある <see cref="T:System.Drawing.Printing.PrinterResolution" /> を取得します。</summary>
      <param name="index">取得する <see cref="T:System.Drawing.Printing.PrinterResolution" /> のインデックス。</param>
      <returns>指定したインデックスにある <see cref="T:System.Drawing.Printing.PrinterResolution" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#Count">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.Count" />」をご覧ください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> に格納されている要素の数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.SyncRoot" />」をご覧ください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.StringCollection">
      <summary>
        <see cref="T:System.String" /> オブジェクトのコレクションを含んでいます。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.#ctor(System.String[])">
      <summary>
        <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="array">
        <see cref="T:System.String" /> 型の配列。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.Add(System.String)">
      <summary>コレクションの末尾に文字列を追加します。</summary>
      <param name="value">コレクションに追加する文字列。</param>
      <returns>新しく追加された項目の 0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.CopyTo(System.String[],System.Int32)">
      <summary>指定したインデックスを開始位置として、指定した配列に現在の <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> の内容をコピーします。</summary>
      <param name="strings">
        <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> の項目のコピー先となる、インデックス番号が 0 から始まる配列。</param>
      <param name="index">項目のコピーの開始位置を示すインデックス。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.GetEnumerator">
      <summary>このコレクションを反復処理できる列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />」をご覧ください。</summary>
      <param name="array">項目のコピー先の配列。</param>
      <param name="index">開始インデックス。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</summary>
      <returns>コレクションの反復処理に使用できる列挙子。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Count">
      <summary>コレクション内の文字列の数を取得します。</summary>
      <returns>コレクション内の文字列の数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Item(System.Int32)">
      <summary>指定したインデックスにある <see cref="T:System.String" /> を取得します。</summary>
      <param name="index">取得する <see cref="T:System.String" /> のインデックス。</param>
      <returns>指定したインデックスにある <see cref="T:System.String" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#Count">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.Count" />」をご覧ください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> に格納されている要素の数。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</summary>
      <returns>
        <see langword="true" /> へのアクセスが同期されている (スレッド セーフである) 場合は <see cref="T:System.Collections.ICollection" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.SyncRoot" />」をご覧ください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnit">
      <summary>印刷に使用する長さの単位を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.Display">
      <summary>既定の単位 (0.01 インチ)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.HundredthsOfAMillimeter">
      <summary>1/100 ミリメートル (0.01mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.TenthsOfAMillimeter">
      <summary>1/10 ミリメートル (0.1mm)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.ThousandthsOfAnInch">
      <summary>1/1000 インチ (0.001 インチ)。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnitConvert">
      <summary>Win32 で印刷に使用する API との相互運用で使用できる一連の変換メソッドを指定します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Double,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>ある <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型の倍精度浮動小数点数を別の <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型に変換します。</summary>
      <param name="value">変換されている <see cref="T:System.Drawing.Point" />。</param>
      <param name="fromUnit">変換前の単位。</param>
      <param name="toUnit">変換後の単位。</param>
      <returns>変換された <see cref="T:System.Drawing.Printing.PrinterUnit" /> を表す倍精度浮動小数点数。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Point,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>ある <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型から別の <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型へと <see cref="T:System.Drawing.Point" /> を変換します。</summary>
      <param name="value">変換されている <see cref="T:System.Drawing.Point" />。</param>
      <param name="fromUnit">変換前の単位。</param>
      <param name="toUnit">変換後の単位。</param>
      <returns>変換された <see cref="T:System.Drawing.Printing.PrinterUnit" /> を表す <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Printing.Margins,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>ある <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型から別の <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型へと <see cref="T:System.Drawing.Printing.Margins" /> を変換します。</summary>
      <param name="value">変換されている <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <param name="fromUnit">変換前の単位。</param>
      <param name="toUnit">変換後の単位。</param>
      <returns>変換された <see cref="T:System.Drawing.Printing.PrinterUnit" /> を表す <see cref="T:System.Drawing.Printing.Margins" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Rectangle,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>ある <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型から別の <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型へと <see cref="T:System.Drawing.Rectangle" /> を変換します。</summary>
      <param name="value">変換されている <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="fromUnit">変換前の単位。</param>
      <param name="toUnit">変換後の単位。</param>
      <returns>変換された <see cref="T:System.Drawing.Printing.PrinterUnit" /> を表す <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Size,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>ある <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型から別の <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型へと <see cref="T:System.Drawing.Size" /> を変換します。</summary>
      <param name="value">変換されている <see cref="T:System.Drawing.Size" />。</param>
      <param name="fromUnit">変換前の単位。</param>
      <param name="toUnit">変換後の単位。</param>
      <returns>変換された <see cref="T:System.Drawing.Printing.PrinterUnit" /> を表す <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Int32,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>32 ビット符号付き整数を 1 つの <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型から別の <see cref="T:System.Drawing.Printing.PrinterUnit" /> 型に変換します。</summary>
      <param name="value">変換される値。</param>
      <param name="fromUnit">変換前の単位。</param>
      <param name="toUnit">変換後の単位。</param>
      <returns>変換された <see cref="T:System.Drawing.Printing.PrinterUnit" /> を表す 32 ビット符号付き整数。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventArgs">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> イベントおよび <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintEventArgs.PrintAction">
      <summary>常に <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" /> を返します。</summary>
      <returns>常に <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventHandler">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> の <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> イベントまたは <see cref="T:System.Drawing.Printing.PrintDocument" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventArgs">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintPageEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">項目の描画に使用される <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="marginBounds">余白と余白の間の領域。</param>
      <param name="pageBounds">用紙の全領域。</param>
      <param name="pageSettings">ページの <see cref="T:System.Drawing.Printing.PageSettings" />。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Cancel">
      <summary>印刷ジョブをキャンセルするかどうかを示す値を取得または設定します。</summary>
      <returns>印刷ジョブをキャンセルする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Graphics">
      <summary>ページの描画に使用される <see cref="T:System.Drawing.Graphics" /> を取得します。</summary>
      <returns>ページの描画に使用される <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.HasMorePages">
      <summary>追加のページを印刷するかどうかを示す値を取得または設定します。</summary>
      <returns>追加のページを印刷する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.MarginBounds">
      <summary>ページ余白の内側の部分を表す四角形領域を取得します。</summary>
      <returns>ページ余白の内側の部分を表す四角形領域 (1/100 インチ単位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageBounds">
      <summary>ページの全領域を表す四角形領域を取得します。</summary>
      <returns>ページの全領域を表す四角形領域。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageSettings">
      <summary>現在のページのページ設定を取得します。</summary>
      <returns>現在のページのページ設定。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventHandler">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> の <see cref="T:System.Drawing.Printing.PrintDocument" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintRange">
      <summary>印刷するドキュメント部分を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.AllPages">
      <summary>すべてのページが印刷されます。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.CurrentPage">
      <summary>現在表示されているページが印刷されます。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.Selection">
      <summary>選択したページが印刷されます。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.SomePages">
      <summary>
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> と <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> の間のページが印刷されます。</summary>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventArgs">
      <summary>
        <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.QueryPageSettingsEventArgs.#ctor(System.Drawing.Printing.PageSettings)">
      <summary>
        <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pageSettings">印刷するページのページ設定。</param>
    </member>
    <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings">
      <summary>印刷するページのページ設定を取得または設定します。</summary>
      <returns>印刷するページのページ設定。</returns>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventHandler">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintDocument" /> の <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Printing.StandardPrintController">
      <summary>プリンターに情報を送信するプリント コントローラーを指定します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.#ctor">
      <summary>
        <see cref="T:System.Drawing.Printing.StandardPrintController" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>ドキュメントのページを印刷する時点と印刷方法を決定する制御シーケンスを完了します。</summary>
      <param name="document">印刷中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">ドキュメントのページの印刷方法についてのデータを格納する <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">ネイティブの Win32 アプリケーション プログラミング インターフェイス (API) が、ページの書き込みを終了できませんでした。</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>ドキュメントを印刷する時点と印刷方法を決定する制御シーケンスを完了します。</summary>
      <param name="document">印刷中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">ドキュメントの印刷方法についてのデータを格納する <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">ネイティブの Win32 アプリケーション プログラミング インターフェイス (API) が、印刷ジョブを完了できませんでした。  
  
 - または -  
  
 ネイティブの Windows API で、指定されたデバイス コンテキスト (DC) を削除できませんでした。</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>ドキュメントのページを印刷する時点と印刷方法を決定する制御シーケンスを開始します。</summary>
      <param name="document">印刷中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">ドキュメントのページの印刷方法についてのデータを格納する <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。 初期の状態では、このパラメーターの <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> プロパティは <see langword="null" /> です。 <see cref="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" /> メソッドによって返された値は、このプロパティを設定するために使用されます。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">ネイティブの Win32 アプリケーション プログラミング インターフェイス (API) が、データを受け入れるプリンター ドライバーを準備できませんでした。  
  
 - または -  
  
 ネイティブの Windows API で、指定された情報を使って指定されたプリンターまたはプロッターのデバイス コンテキスト (DC) を更新できませんでした。</exception>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> からのページを表す <see cref="T:System.Drawing.Printing.PrintDocument" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>ドキュメントを印刷する時点と印刷方法を決定する制御シーケンスを開始します。</summary>
      <param name="document">印刷中のドキュメントを表す <see cref="T:System.Drawing.Printing.PrintDocument" />。</param>
      <param name="e">ドキュメントの印刷方法についてのデータを格納する <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンター設定が無効です。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">ネイティブの Win32 アプリケーション プログラミング インターフェイス (API) が、印刷ジョブを開始できませんでした。</exception>
    </member>
    <member name="T:System.Drawing.Region">
      <summary>四角形とパスで構成されるグラフィックス形状の内部を示します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor">
      <summary>新しい <see cref="T:System.Drawing.Region" /> を初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> で新しい <see cref="T:System.Drawing.Region" /> を初期化します。</summary>
      <param name="path">新しい <see cref="T:System.Drawing.Region" /> を定義する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.RegionData)">
      <summary>指定したデータから新しい <see cref="T:System.Drawing.Region" /> を初期化します。</summary>
      <param name="rgnData">新しい <see cref="T:System.Drawing.Region" /> の内部を定義する <see cref="T:System.Drawing.Drawing2D.RegionData" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgnData" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> 構造体から新しい <see cref="T:System.Drawing.Rectangle" /> を初期化します。</summary>
      <param name="rect">新しい <see cref="T:System.Drawing.Rectangle" /> の内部を定義する <see cref="T:System.Drawing.Region" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> 構造体から新しい <see cref="T:System.Drawing.RectangleF" /> を初期化します。</summary>
      <param name="rect">新しい <see cref="T:System.Drawing.RectangleF" /> の内部を定義する <see cref="T:System.Drawing.Region" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Clone">
      <summary>この <see cref="T:System.Drawing.Region" /> の同一コピーを作成します。</summary>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Region" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>この <see cref="T:System.Drawing.Region" /> と交差しない指定の <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の部分が含まれるように、この <see cref="T:System.Drawing.Region" /> を更新します。</summary>
      <param name="path">この <see cref="T:System.Drawing.Region" /> を補足する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)">
      <summary>この <see cref="T:System.Drawing.Region" /> と交差しない指定の <see cref="T:System.Drawing.Rectangle" /> 構造体の部分が含まれるように、この <see cref="T:System.Drawing.Region" /> を更新します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.Rectangle" /> を補足する <see cref="T:System.Drawing.Region" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.RectangleF)">
      <summary>この <see cref="T:System.Drawing.Region" /> と交差しない指定の <see cref="T:System.Drawing.RectangleF" /> 構造体の部分が含まれるように、この <see cref="T:System.Drawing.Region" /> を更新します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.RectangleF" /> を補足する <see cref="T:System.Drawing.Region" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Region)">
      <summary>この <see cref="T:System.Drawing.Region" /> と交差しない指定の <see cref="T:System.Drawing.Region" /> の部分が含まれるように、この <see cref="T:System.Drawing.Region" /> を更新します。</summary>
      <param name="region">この <see cref="T:System.Drawing.Region" /> オブジェクトを補足する <see cref="T:System.Drawing.Region" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.Dispose">
      <summary>この <see cref="T:System.Drawing.Region" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> が、指定の描画サーフェイス上のこの <see cref="T:System.Drawing.Region" /> と同一かどうかをテストします。</summary>
      <param name="region">テスト対象の <see cref="T:System.Drawing.Region" />。</param>
      <param name="g">描画サーフェイスを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> または <paramref name="region" /> が <see langword="null" /> です。</exception>
      <returns>
        <paramref name="g" /> パラメーターに関連付けられた変換を適用するときに、その領域の内部がこの領域の内部と同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> と交差しない内部の部分だけが含まれるよう、この <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> を更新します。</summary>
      <param name="path">この <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> から除外する <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> 構造体と交差しない内部の部分だけが含まれるよう、この <see cref="T:System.Drawing.Rectangle" /> を更新します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.Rectangle" /> から除外する <see cref="T:System.Drawing.Region" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.RectangleF)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> 構造体と交差しない内部の部分だけが含まれるよう、この <see cref="T:System.Drawing.RectangleF" /> を更新します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.RectangleF" /> から除外する <see cref="T:System.Drawing.Region" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Region)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> と交差しない内部の部分だけが含まれるよう、この <see cref="T:System.Drawing.Region" /> を更新します。</summary>
      <param name="region">この <see cref="T:System.Drawing.Region" /> から除外する <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.Region.FromHrgn(System.IntPtr)">
      <summary>既存の指定の GDI 領域を識別するハンドルから新しい <see cref="T:System.Drawing.Region" /> を初期化します。</summary>
      <param name="hrgn">既存の <see cref="T:System.Drawing.Region" /> を識別するハンドル。</param>
      <returns>新しい <see cref="T:System.Drawing.Region" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.GetBounds(System.Drawing.Graphics)">
      <summary>
        <see cref="T:System.Drawing.RectangleF" /> オブジェクトの描画サーフェイスのこの <see cref="T:System.Drawing.Region" /> に外接する四角形を表す <see cref="T:System.Drawing.Graphics" /> 構造体を取得します。</summary>
      <param name="g">この <see cref="T:System.Drawing.Graphics" /> が描画される <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> が <see langword="null" />です。</exception>
      <returns>指定の描画サーフェイスのこの <see cref="T:System.Drawing.RectangleF" /> に外接する四角形を表す <see cref="T:System.Drawing.Region" /> 構造体。</returns>
    </member>
    <member name="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)">
      <summary>この <see cref="T:System.Drawing.Region" /> を識別する Windows ハンドルを、指定のグラフィックス コンテキストで返します。</summary>
      <param name="g">この <see cref="T:System.Drawing.Graphics" /> が描画される <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> が <see langword="null" />です。</exception>
      <returns>この <see cref="T:System.Drawing.Region" /> を識別する Windows ハンドル。</returns>
    </member>
    <member name="M:System.Drawing.Region.GetRegionData">
      <summary>この <see cref="T:System.Drawing.Drawing2D.RegionData" /> を説明する情報を表す <see cref="T:System.Drawing.Region" /> を返します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.RegionData" /> を説明する情報を表す <see cref="T:System.Drawing.Region" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)">
      <summary>指定の行列変換が適用された後にこの <see cref="T:System.Drawing.RectangleF" /> を近似する <see cref="T:System.Drawing.Region" /> 構造体の配列を返します。</summary>
      <param name="matrix">領域に適用するジオメトリック変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> が <see langword="null" />です。</exception>
      <returns>指定の行列変換が適用された後にこの <see cref="T:System.Drawing.RectangleF" /> を近似する <see cref="T:System.Drawing.Region" /> 構造体の配列。</returns>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>この <see cref="T:System.Drawing.Region" /> をそれ自体と指定の <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の交差部分に更新します。</summary>
      <param name="path">この <see cref="T:System.Drawing.Region" /> と交差する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)">
      <summary>この <see cref="T:System.Drawing.Region" /> をそれ自体と指定の <see cref="T:System.Drawing.Rectangle" /> 構造体の交差部分に更新します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.Region" /> と交差する <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)">
      <summary>この <see cref="T:System.Drawing.Region" /> をそれ自体と指定の <see cref="T:System.Drawing.RectangleF" /> 構造体の交差部分に更新します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.Region" /> と交差する <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Region)">
      <summary>この <see cref="T:System.Drawing.Region" /> をそれ自体と指定の <see cref="T:System.Drawing.Region" /> の交差部分に更新します。</summary>
      <param name="region">この <see cref="T:System.Drawing.Region" /> と交差する <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="M:System.Drawing.Region.IsEmpty(System.Drawing.Graphics)">
      <summary>この <see cref="T:System.Drawing.Region" /> の内部が指定の描画サーフェイスで空になるかどうかをテストします。</summary>
      <param name="g">描画サーフェイスを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="g" /> に関連付けられた変換を適用するときに、この <see cref="T:System.Drawing.Region" /> の内部が空の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)">
      <summary>この <see cref="T:System.Drawing.Region" /> の内部が指定の描画サーフェイスで無限になるかどうかをテストします。</summary>
      <param name="g">描画サーフェイスを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="g" /> に関連付けられた変換を適用するときに、この <see cref="T:System.Drawing.Region" /> の内部が無限の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point)">
      <summary>指定の <see cref="T:System.Drawing.Point" /> 構造体がこの <see cref="T:System.Drawing.Region" /> に含まれているかどうかをテストします。</summary>
      <param name="point">テスト対象の <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <returns>
        <paramref name="point" /> がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>指定の <see cref="T:System.Drawing.Point" /> を使用して描画した場合に、指定の <see cref="T:System.Drawing.Region" /> 構造体がこの <see cref="T:System.Drawing.Graphics" /> に含まれるかどうかをテストします。</summary>
      <param name="point">テスト対象の <see cref="T:System.Drawing.Point" /> 構造体。</param>
      <param name="g">グラフィックス コンテキストを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>
        <paramref name="point" /> がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF)">
      <summary>指定の <see cref="T:System.Drawing.PointF" /> 構造体がこの <see cref="T:System.Drawing.Region" /> に含まれているかどうかをテストします。</summary>
      <param name="point">テスト対象の <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <returns>
        <paramref name="point" /> がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>指定の <see cref="T:System.Drawing.PointF" /> を使用して描画した場合に、指定の <see cref="T:System.Drawing.Region" /> 構造体がこの <see cref="T:System.Drawing.Graphics" /> に含まれるかどうかをテストします。</summary>
      <param name="point">テスト対象の <see cref="T:System.Drawing.PointF" /> 構造体。</param>
      <param name="g">グラフィックス コンテキストを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>
        <paramref name="point" /> がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle)">
      <summary>指定の <see cref="T:System.Drawing.Rectangle" /> 構造体の一部が、この <see cref="T:System.Drawing.Region" /> に含まれているかどうかをテストします。</summary>
      <param name="rect">テスト対象の <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <returns>このメソッドは、<paramref name="rect" /> の一部が、この <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>指定の <see cref="T:System.Drawing.Rectangle" /> を使用して描画した場合に、指定の <see cref="T:System.Drawing.Region" /> 構造体の一部がこの <see cref="T:System.Drawing.Graphics" /> に含まれるかどうかをテストします。</summary>
      <param name="rect">テスト対象の <see cref="T:System.Drawing.Rectangle" /> 構造体。</param>
      <param name="g">グラフィックス コンテキストを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>
        <paramref name="rect" /> の一部が、この <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)">
      <summary>指定の <see cref="T:System.Drawing.RectangleF" /> 構造体の一部が、この <see cref="T:System.Drawing.Region" /> に含まれているかどうかをテストします。</summary>
      <param name="rect">テスト対象の <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <returns>
        <paramref name="rect" /> の一部が、この <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF,System.Drawing.Graphics)">
      <summary>指定の <see cref="T:System.Drawing.RectangleF" /> を使用して描画した場合に、指定の <see cref="T:System.Drawing.Region" /> 構造体の一部がこの <see cref="T:System.Drawing.Graphics" /> に含まれるかどうかをテストします。</summary>
      <param name="rect">テスト対象の <see cref="T:System.Drawing.RectangleF" /> 構造体。</param>
      <param name="g">グラフィックス コンテキストを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>
        <paramref name="rect" /> がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> オブジェクトを使用して描画した場合に、指定の点がこの <see cref="T:System.Drawing.Graphics" /> オブジェクト内に含まれるかどうかをテストします。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <param name="g">グラフィックス コンテキストを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>指定の点がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定の四角形の一部が、この <see cref="T:System.Drawing.Region" /> に含まれているかどうかをテストします。</summary>
      <param name="x">テストする四角形の左上隅の x 座標。</param>
      <param name="y">テストする四角形の左上隅の y 座標。</param>
      <param name="width">テストする四角形の幅。</param>
      <param name="height">テストする四角形の高さ。</param>
      <returns>指定した四角形のいずれかの部分がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> オブジェクトを使用して描画した場合に、指定の四角形の一部がこの <see cref="T:System.Drawing.Graphics" /> に含まれるかどうかをテストします。</summary>
      <param name="x">テストする四角形の左上隅の x 座標。</param>
      <param name="y">テストする四角形の左上隅の y 座標。</param>
      <param name="width">テストする四角形の幅。</param>
      <param name="height">テストする四角形の高さ。</param>
      <param name="g">グラフィックス コンテキストを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>指定した四角形のいずれかの部分がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single)">
      <summary>指定の点がこの <see cref="T:System.Drawing.Region" /> に含まれているかどうかをテストします。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <returns>指定の点がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> を使用して描画した場合に、指定の点がこの <see cref="T:System.Drawing.Graphics" /> に含まれるかどうかをテストします。</summary>
      <param name="x">テストする点の x 座標。</param>
      <param name="y">テストする点の y 座標。</param>
      <param name="g">グラフィックス コンテキストを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>指定の点がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>指定の四角形の一部が、この <see cref="T:System.Drawing.Region" /> に含まれているかどうかをテストします。</summary>
      <param name="x">テストする四角形の左上隅の x 座標。</param>
      <param name="y">テストする四角形の左上隅の y 座標。</param>
      <param name="width">テストする四角形の幅。</param>
      <param name="height">テストする四角形の高さ。</param>
      <returns>指定した四角形のいずれかの部分が <see cref="T:System.Drawing.Region" /> オブジェクトに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)">
      <summary>指定の <see cref="T:System.Drawing.Region" /> オブジェクトを使用して描画した場合に、指定の四角形の一部がこの <see cref="T:System.Drawing.Graphics" /> に含まれるかどうかをテストします。</summary>
      <param name="x">テストする四角形の左上隅の x 座標。</param>
      <param name="y">テストする四角形の左上隅の y 座標。</param>
      <param name="width">テストする四角形の幅。</param>
      <param name="height">テストする四角形の高さ。</param>
      <param name="g">グラフィックス コンテキストを表す <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>指定した四角形のいずれかの部分がこの <see cref="T:System.Drawing.Region" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.MakeEmpty">
      <summary>この <see cref="T:System.Drawing.Region" /> を初期化して内部を空にします。</summary>
    </member>
    <member name="M:System.Drawing.Region.MakeInfinite">
      <summary>この <see cref="T:System.Drawing.Region" /> オブジェクトを初期化して内部を無限にします。</summary>
    </member>
    <member name="M:System.Drawing.Region.ReleaseHrgn(System.IntPtr)">
      <summary>
        <see cref="T:System.Drawing.Region" /> のハンドルを解放します。</summary>
      <param name="regionHandle">
        <see cref="T:System.Drawing.Region" /> へのハンドル。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="regionHandle" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>この <see cref="T:System.Drawing.Region" /> を指定の <see cref="T:System.Drawing.Drawing2D.Matrix" /> で変換します。</summary>
      <param name="matrix">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> の変換に使用する <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Int32,System.Int32)">
      <summary>指定した量でこの <see cref="T:System.Drawing.Region" /> の座標をオフセットします。</summary>
      <param name="dx">この <see cref="T:System.Drawing.Region" /> の水平方向のオフセット量。</param>
      <param name="dy">この <see cref="T:System.Drawing.Region" /> の垂直方向のオフセット量。</param>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Single,System.Single)">
      <summary>指定した量でこの <see cref="T:System.Drawing.Region" /> の座標をオフセットします。</summary>
      <param name="dx">この <see cref="T:System.Drawing.Region" /> の水平方向のオフセット量。</param>
      <param name="dy">この <see cref="T:System.Drawing.Region" /> の垂直方向のオフセット量。</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>この <see cref="T:System.Drawing.Region" /> を、それ自体と指定の <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の和集合に更新します。</summary>
      <param name="path">この <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> と結合する <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Rectangle)">
      <summary>この <see cref="T:System.Drawing.Region" /> を、それ自体と指定の <see cref="T:System.Drawing.Rectangle" /> 構造体の和集合に更新します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.Rectangle" /> と結合する <see cref="T:System.Drawing.Region" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.RectangleF)">
      <summary>この <see cref="T:System.Drawing.Region" /> を、それ自体と指定の <see cref="T:System.Drawing.RectangleF" /> 構造体の和集合に更新します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.RectangleF" /> と結合する <see cref="T:System.Drawing.Region" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Region)">
      <summary>この <see cref="T:System.Drawing.Region" /> を、それ自体と指定の <see cref="T:System.Drawing.Region" /> の和集合に更新します。</summary>
      <param name="region">この <see cref="T:System.Drawing.Region" /> と結合する <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>この <see cref="T:System.Drawing.Region" /> を、それ自体と指定の <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の交差部分を差し引いた和集合に更新します。</summary>
      <param name="path">この <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> と <see cref="Overload:System.Drawing.Region.Xor" /> 演算する <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)">
      <summary>この <see cref="T:System.Drawing.Region" /> を、それ自体と指定の <see cref="T:System.Drawing.Rectangle" /> 構造体の交差部分を差し引いた和集合に更新します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.Rectangle" /> と <see cref="Overload:System.Drawing.Region.Xor" /> 演算する <see cref="T:System.Drawing.Region" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)">
      <summary>この <see cref="T:System.Drawing.Region" /> を、それ自体と指定の <see cref="T:System.Drawing.RectangleF" /> 構造体の交差部分を差し引いた和集合に更新します。</summary>
      <param name="rect">この <see cref="T:System.Drawing.RectangleF" /> と <see cref="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" /> 演算する <see cref="T:System.Drawing.Region" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Region)">
      <summary>この <see cref="T:System.Drawing.Region" /> を、それ自体と指定の <see cref="T:System.Drawing.Region" /> の交差部分を差し引いた和集合に更新します。</summary>
      <param name="region">この <see cref="T:System.Drawing.Region" /> と <see cref="Overload:System.Drawing.Region.Xor" /> 演算する <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> が <see langword="null" />です。</exception>
    </member>
    <member name="T:System.Drawing.RotateFlipType">
      <summary>イメージの回転量と、イメージ反転に使用される軸を指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipNone">
      <summary>反転せずに時計回りに 180 度回転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipX">
      <summary>時計回りに 180 度回転してから、水平方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipXY">
      <summary>時計回りに 180 度回転してから、水平方向と垂直方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipY">
      <summary>時計回りに 180 度回転してから、垂直方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipNone">
      <summary>反転せずに時計回りに 270 度回転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipX">
      <summary>時計回りに 270 度回転してから、水平方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipXY">
      <summary>時計回りに 270 度回転してから、水平方向と垂直方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipY">
      <summary>時計回りに 270 度回転してから、垂直方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipNone">
      <summary>反転せずに時計回りに 90 度回転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipX">
      <summary>時計回りに 90 度回転してから、水平方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipXY">
      <summary>時計回りに 90 度回転してから、水平方向と垂直方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipY">
      <summary>時計回りに 90 度回転してから、垂直方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipNone">
      <summary>時計回りの回転も反転も行わないことを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipX">
      <summary>時計回りに回転せずに水平方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipXY">
      <summary>時計回りに回転せずに水平方向と垂直方向に反転することを指定します。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipY">
      <summary>時計回りに回転せずに垂直方向に反転することを指定します。</summary>
    </member>
    <member name="T:System.Drawing.SolidBrush">
      <summary>単色のブラシを定義します。 ブラシは四角形、楕円、扇形、多角形、パスなどのグラフィックス形状を塗りつぶす場合に使用します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.SolidBrush.#ctor(System.Drawing.Color)">
      <summary>指定の色の新しい <see cref="T:System.Drawing.SolidBrush" /> オブジェクトを初期化します。</summary>
      <param name="color">このブラシの色を表す <see cref="T:System.Drawing.Color" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.SolidBrush.Clone">
      <summary>この <see cref="T:System.Drawing.SolidBrush" /> オブジェクトの同一コピーを作成します。</summary>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.SolidBrush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.SolidBrush.Color">
      <summary>この <see cref="T:System.Drawing.SolidBrush" /> オブジェクトの色を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.SolidBrush.Color" /> プロパティが変更できない <see cref="T:System.Drawing.SolidBrush" /> に設定されています。</exception>
      <returns>このブラシの色を表す <see cref="T:System.Drawing.Color" /> 構造体。</returns>
    </member>
    <member name="T:System.Drawing.StringAlignment">
      <summary>レイアウト四角形を基準とした文字列の配置を指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Center">
      <summary>テキストがレイアウト四角形の中央に配置されるよう指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Far">
      <summary>テキストがレイアウト四角形の元の位置から離れて配置されるよう指定します。 左から右のレイアウトでは、最も遠い位置は右側です。 右から左のレイアウトでは、最も遠い位置は左側です。</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Near">
      <summary>テキストがレイアウトの近くに配置されるよう指定します。 左から右のレイアウトでは、最も近い位置は左側です。 右から左のレイアウトでは、最も近い位置は右側です。</summary>
    </member>
    <member name="T:System.Drawing.StringDigitSubstitute">
      <summary>
        <see cref="T:System.Drawing.StringDigitSubstitute" /> 列挙体は、文字列内の数字を置き換える方法をユーザーのロケールまたは言語に従って指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.National">
      <summary>ユーザーのロケールの公用語に対応する代替の数字形式を指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.None">
      <summary>置き換えが無効になるよう指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.Traditional">
      <summary>ユーザーのネイティブ スクリプトまたは母国語に対応する代替の数字形式を指定します。これはユーザーのロケールの公用語とは異なる場合があります。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.User">
      <summary>ユーザー定義の置き換えスキームを指定します。</summary>
    </member>
    <member name="T:System.Drawing.StringFormat">
      <summary>配置、方向、タブ ストップなどのテキスト レイアウト情報、省略記号の挿入や国別の代替の数字形式などの表示方法、および OpenType 機能をカプセル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor">
      <summary>新しい <see cref="T:System.Drawing.StringFormat" /> オブジェクトを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)">
      <summary>指定した既存 <see cref="T:System.Drawing.StringFormat" /> オブジェクトから、新しい <see cref="T:System.Drawing.StringFormat" /> オブジェクトを初期化します。</summary>
      <param name="format">新しい <see cref="T:System.Drawing.StringFormat" /> オブジェクトを初期化するために使用する <see cref="T:System.Drawing.StringFormat" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)">
      <summary>指定した <see cref="T:System.Drawing.StringFormatFlags" /> 列挙体を使用して、新しい <see cref="T:System.Drawing.StringFormat" /> オブジェクトを初期化します。</summary>
      <param name="options">新しい <see cref="T:System.Drawing.StringFormat" /> オブジェクトの <see cref="T:System.Drawing.StringFormatFlags" /> 列挙体。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)">
      <summary>指定した <see cref="T:System.Drawing.StringFormatFlags" /> 列挙体および言語を使用して、新しい <see cref="T:System.Drawing.StringFormat" /> オブジェクトを初期化します。</summary>
      <param name="options">新しい <see cref="T:System.Drawing.StringFormat" /> オブジェクトの <see cref="T:System.Drawing.StringFormatFlags" /> 列挙体。</param>
      <param name="language">テキストの言語を示す値。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.Clone">
      <summary>この <see cref="T:System.Drawing.StringFormat" /> オブジェクトの同一コピーを作成します。</summary>
      <returns>このメソッドで作成された <see cref="T:System.Drawing.StringFormat" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.Dispose">
      <summary>この <see cref="T:System.Drawing.StringFormat" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.GetTabStops(System.Single@)">
      <summary>この <see cref="T:System.Drawing.StringFormat" /> オブジェクトのタブ ストップを取得します。</summary>
      <param name="firstTabOffset">テキスト行の先頭と最初のタブ ストップ間の空白の数。</param>
      <returns>タブ ストップの間隔 (空白の数) の配列。</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)">
      <summary>西ヨーロッパ言語の数字をローカルの数字に置換する際に使用される言語と方法を指定します。</summary>
      <param name="language">西ヨーロッパ言語の数字をローカルの数字に置換する際に使用される言語を特定する NLS (National Language Support) 言語の ID。 <see cref="T:System.Globalization.CultureInfo" /> オブジェクトの <see cref="P:System.Globalization.CultureInfo.LCID" /> プロパティを NLS 言語の ID として渡すことができます。 たとえば、文字列 "ar-EG" を <see cref="T:System.Globalization.CultureInfo" /> コンストラクターに渡して、<see cref="T:System.Globalization.CultureInfo" /> オブジェクトを作成する場合を想定します。 その <see cref="T:System.Globalization.CultureInfo" /> オブジェクトの <see cref="P:System.Globalization.CultureInfo.LCID" /> プロパティを <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> と共に <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> メソッドに渡すと、表示には西ヨーロッパ言語の数字の代わりにアラビア インド数字が使用されます。</param>
      <param name="substitute">数字の表示方法を指定する <see cref="T:System.Drawing.StringDigitSubstitute" /> 列挙体の要素。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])">
      <summary>
        <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> メソッドを呼び出したときに計測される、文字の範囲を表す <see cref="T:System.Drawing.CharacterRange" /> 構造体の配列を指定します。</summary>
      <param name="ranges">
        <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> メソッドを呼び出したときに計測される、文字の範囲を表す <see cref="T:System.Drawing.CharacterRange" /> 構造体の配列。</param>
      <exception cref="T:System.OverflowException">32 文字を超える文字範囲が設定されています。</exception>
    </member>
    <member name="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])">
      <summary>この <see cref="T:System.Drawing.StringFormat" /> オブジェクトのタブ ストップを設定します。</summary>
      <param name="firstTabOffset">テキスト行の先頭と最初のタブ ストップ間の空白の数。</param>
      <param name="tabStops">タブ ストップの間隔の配列。単位は、<see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティによって指定します。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.ToString">
      <summary>この <see cref="T:System.Drawing.StringFormat" /> オブジェクトをユーザーが判読できる文字列に変換します。</summary>
      <returns>この <see cref="T:System.Drawing.StringFormat" /> オブジェクトの文字列形式。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.Alignment">
      <summary>文字列の水平方向の配置を取得または設定します。</summary>
      <returns>文字列の水平方向の配置を指定する <see cref="T:System.Drawing.StringAlignment" /> 列挙体。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionLanguage">
      <summary>西ヨーロッパ言語の数字をローカルの数字に置換する際に使用される言語を取得します。</summary>
      <returns>西ヨーロッパ言語の数字をローカルの数字に置換する際に使用される言語を特定する NLS (National Language Support) 言語の ID。 <see cref="T:System.Globalization.CultureInfo" /> オブジェクトの <see cref="P:System.Globalization.CultureInfo.LCID" /> プロパティを NLS 言語の ID として渡すことができます。 たとえば、文字列 "ar-EG" を <see cref="T:System.Globalization.CultureInfo" /> コンストラクターに渡して、<see cref="T:System.Globalization.CultureInfo" /> オブジェクトを作成する場合を想定します。 その <see cref="T:System.Globalization.CultureInfo" /> オブジェクトの <see cref="P:System.Globalization.CultureInfo.LCID" /> プロパティを <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> と共に <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> メソッドに渡すと、表示には西ヨーロッパ言語の数字の代わりにアラビア インド数字が使用されます。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionMethod">
      <summary>数字の置き換えに使用される方法を取得します。</summary>
      <returns>現在のフォントでサポートされていないために表示できない文字列の文字を置き換える方法を指定する <see cref="T:System.Drawing.StringDigitSubstitute" /> 列挙値。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.FormatFlags">
      <summary>書式情報を格納する <see cref="T:System.Drawing.StringFormatFlags" /> 列挙体を取得または設定します。</summary>
      <returns>書式情報を格納する <see cref="T:System.Drawing.StringFormatFlags" /> 列挙体。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericDefault">
      <summary>既定の汎用 <see cref="T:System.Drawing.StringFormat" /> オブジェクトを取得します。</summary>
      <returns>既定の汎用 <see cref="T:System.Drawing.StringFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericTypographic">
      <summary>印刷用の汎用 <see cref="T:System.Drawing.StringFormat" /> オブジェクトを取得します。</summary>
      <returns>印刷用の汎用 <see cref="T:System.Drawing.StringFormat" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.HotkeyPrefix">
      <summary>この <see cref="T:System.Drawing.Text.HotkeyPrefix" /> オブジェクトの <see cref="T:System.Drawing.StringFormat" /> オブジェクトを取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.StringFormat" /> オブジェクトの <see cref="T:System.Drawing.Text.HotkeyPrefix" /> オブジェクト。既定値は、<see cref="F:System.Drawing.Text.HotkeyPrefix.None" />。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.LineAlignment">
      <summary>文字列の垂直方向の配置を取得または設定します。</summary>
      <returns>縦線の配置を表す <see cref="T:System.Drawing.StringAlignment" /> 列挙体。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.Trimming">
      <summary>この <see cref="T:System.Drawing.StringFormat" /> オブジェクトの <see cref="T:System.Drawing.StringTrimming" /> 列挙体を取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.StringTrimming" /> オブジェクトで描画されるテキストが、レイアウト四角形の端からはみ出た場合のトリミング方法を示す <see cref="T:System.Drawing.StringFormat" /> 列挙体。</returns>
    </member>
    <member name="T:System.Drawing.StringFormatFlags">
      <summary>文字列の表示情報およびレイアウト情報を指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionRightToLeft">
      <summary>テキストを右から左へ表示します。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionVertical">
      <summary>テキストを縦方向に位置合わせします。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DisplayFormatControl">
      <summary>左から右を指示するマークなどの制御文字をグリフで表現します。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.FitBlackBox">
      <summary>文字の一部が文字列のレイアウト四角形からはみ出すことを許可します。 既定では、はみ出さないように文字が移動されます。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.LineLimit">
      <summary>書式指定用の四角形には、完全な直線だけがレイアウトされます。 既定では、クリッピングの結果、テキストの末尾が表示された状態、または行が表示されなくなった状態のうち、いずれか早い方の状態になるまでレイアウトが継続します。 既定の設定では、行高さの整数倍でない書式指定用四角形を用いた場合は、最後の行の一部が隠れることがあります。 必ず行全体が表示されるようにするには、この値を指定した上で、少なくとも 1 つの行と高さが同じの書式指定用の四角形を使用してください。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.MeasureTrailingSpaces">
      <summary>各行の行末に空白を含めます。 既定では、<see cref="Overload:System.Drawing.Graphics.MeasureString" /> メソッドから返される外接四角形によって、各行末の空白が除外されます。 各行末の空白を計測に含める場合はこのフラグを設定します。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoClip">
      <summary>グリフの突出部と書式指定用の四角形からはみ出すラップされていないテキストを表示できます。 既定では、書式指定用の四角形からはみ出たテキストとグリフ部はすべてクリップされます。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoFontFallback">
      <summary>要求されたフォントでサポートされていない文字のフォントを切り替えるフォールバックを無効にします。 欠落文字は、グリフの欠落したフォント (通常は空白の正方形) で表示されます。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoWrap">
      <summary>四角形内の書式を指定するときに、行のテキストの折り返しを無効にします。 このフラグは、四角形ではなく点が渡された場合、または長さゼロの行の四角形が指定された場合に暗黙的に指定されます。</summary>
    </member>
    <member name="T:System.Drawing.StringTrimming">
      <summary>レイアウト形状に完全には収まらない文字列から文字をトリムする場合の方法を指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Character">
      <summary>テキストが最も近い文字にトリムされるよう指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisCharacter">
      <summary>テキストが最も近い文字にトリムされ、トリムされた行の末尾に省略記号が挿入されるよう指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisPath">
      <summary>中央部分はトリムされた行から削除され、省略記号で置き換えられます。 このアルゴリズムによって、行内の最後のスラッシュ区切りセグメントが最大限に確保されます。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisWord">
      <summary>テキストが最も近い語にトリムされ、トリムされた行の末尾に省略記号が挿入されるよう指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.None">
      <summary>トリムなしを指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Word">
      <summary>テキストが最も近い語にトリムされるよう指定します。</summary>
    </member>
    <member name="T:System.Drawing.StringUnit">
      <summary>テキスト文字列の長さの単位を指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Display">
      <summary>デバイス単位を長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Document">
      <summary>1/300 インチを長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Em">
      <summary>プリンターの Em サイズ (32) を長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Inch">
      <summary>インチを長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Millimeter">
      <summary>ミリメートルを長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Pixel">
      <summary>ピクセルを長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Point">
      <summary>プリンター ポイント (1/72 インチ) を長さの単位に指定します。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.World">
      <summary>ワールド単位を長さの単位に指定します。</summary>
    </member>
    <member name="T:System.Drawing.SystemBrushes">
      <summary>
        <see cref="T:System.Drawing.SystemBrushes" /> クラスの各プロパティは、Windows の表示要素の色を表す <see cref="T:System.Drawing.SolidBrush" /> です。</summary>
    </member>
    <member name="M:System.Drawing.SystemBrushes.FromSystemColor(System.Drawing.Color)">
      <summary>指定した <see cref="T:System.Drawing.Brush" /> 構造体から <see cref="T:System.Drawing.Color" /> を作成します。</summary>
      <param name="c">
        <see cref="T:System.Drawing.Color" /> の作成元の <see cref="T:System.Drawing.Brush" /> 構造体。</param>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Brush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveBorder">
      <summary>アクティブなウィンドウの境界線の色である <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>アクティブなウィンドウの境界線の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaption">
      <summary>アクティブなウィンドウのタイトル バーの背景の色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーの背景の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaptionText">
      <summary>アクティブなウィンドウのタイトル バーのテキストの色である <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーの背景の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.AppWorkspace">
      <summary>アプリケーション ワークスペースの色である <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>アプリケーション作業領域の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonFace">
      <summary>3D 要素の表面の色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>3D 要素の表面の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonHighlight">
      <summary>3D 要素の強調表示色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>3D 要素の強調表示色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonShadow">
      <summary>3D 要素の影色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>3D 要素の影色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Control">
      <summary>3D 要素の表面の色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>3D 要素の表面の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDark">
      <summary>3D 要素の影色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>3D 要素の影色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDarkDark">
      <summary>3D 要素の暗い影色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>3D 要素の暗い影色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLight">
      <summary>3D 要素の明るい色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>3D 要素の明るい色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLightLight">
      <summary>3D 要素の強調表示色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>3D 要素の強調表示色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlText">
      <summary>3D 要素のテキストの色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>3D 要素のテキストの色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Desktop">
      <summary>デスクトップの色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>デスクトップの色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientActiveCaption">
      <summary>アクティブなウィンドウのタイトル バーに適用される色のグラデーションにおいて最も明るい色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーに適用される色のグラデーションにおいて最も明るい色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientInactiveCaption">
      <summary>アクティブでないウィンドウのタイトル バーに適用される色のグラデーションにおいて最も明るい色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーに適用される色のグラデーションにおいて最も明るい色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GrayText">
      <summary>淡色表示になっているテキストの色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>淡色表示になっているテキストの色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Highlight">
      <summary>選択した項目の背景の色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>選択した項目の背景の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HighlightText">
      <summary>選択した項目のテキストの色である <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>選択した項目のテキストの色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HotTrack">
      <summary>フォーカスされている項目の指定に使用する色である <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>ホット トラッキング項目の指定に使用する色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveBorder">
      <summary>非アクティブなウィンドウの境界線の色である <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウの境界線の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaption">
      <summary>アクティブでないウィンドウのタイトル バーの背景の色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーの背景の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaptionText">
      <summary>アクティブでないウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Info">
      <summary>ツールヒントの背景の色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>ツールヒントの背景の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InfoText">
      <summary>ツールヒントのテキストの色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>ツールヒントのテキストの色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Menu">
      <summary>メニューの背景色である <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>メニューの背景の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuBar">
      <summary>メニュー バーの背景の色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>メニュー バーの背景の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuHighlight">
      <summary>メニューをフラット メニューとして表示するときにメニュー項目の強調表示に使用される色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>メニューをフラット メニューとして表示するときにメニュー項目の強調表示に使用される色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuText">
      <summary>メニューのテキストの色である <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>メニューのテキストの色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ScrollBar">
      <summary>スクロール バーの背景の色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>スクロール バーの背景の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Window">
      <summary>ウィンドウのクライアント領域の背景の色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>ウィンドウのクライアント領域の背景の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowFrame">
      <summary>ウィンドウの枠の色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>ウィンドウの枠の色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowText">
      <summary>ウィンドウのクライアント領域のテキストの色を表す <see cref="T:System.Drawing.SolidBrush" /> を取得します。</summary>
      <returns>ウィンドウのクライアント領域のテキストの色を表す <see cref="T:System.Drawing.SolidBrush" />。</returns>
    </member>
    <member name="T:System.Drawing.SystemFonts">
      <summary>Windows 表示要素内でテキストの表示に使用するフォントを指定します。</summary>
    </member>
    <member name="M:System.Drawing.SystemFonts.GetFontByName(System.String)">
      <summary>指定されたシステム フォント名に対応するフォント オブジェクトを返します。</summary>
      <param name="systemFontName">フォント オブジェクトに対して必要なシステム フォントの名前。</param>
      <returns>指定された名前が <see cref="T:System.Drawing.Font" /> の値に一致する場合は <see cref="T:System.Drawing.SystemFonts" />。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.CaptionFont">
      <summary>ウィンドウのタイトル バーにテキストを表示するために使用される <see cref="T:System.Drawing.Font" /> を取得します。</summary>
      <returns>ウィンドウのタイトル バーにテキストを表示するために使用される <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DefaultFont">
      <summary>アプリケーションのダイアログ ボックスおよびフォームで使用できる既定のフォントを取得します。</summary>
      <returns>システムの既定の <see cref="T:System.Drawing.Font" />。 返される値は、使用しているオペレーティング システムやシステムのローカル カルチャ設定により異なります。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DialogFont">
      <summary>アプリケーションのダイアログ ボックスおよびフォームで使用できるフォントを取得します。</summary>
      <returns>システムのオペレーティング システムおよびローカル カルチャ設定に応じてダイアログ ボックスおよびフォームで使用できる <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.IconTitleFont">
      <summary>アイコンのタイトルに使用される <see cref="T:System.Drawing.Font" /> を取得します。</summary>
      <returns>アイコンのタイトルに使用される <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MenuFont">
      <summary>メニューに使用される <see cref="T:System.Drawing.Font" /> を取得します。</summary>
      <returns>メニューに使用される <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MessageBoxFont">
      <summary>メッセージ ボックスに使用される <see cref="T:System.Drawing.Font" /> を取得します。</summary>
      <returns>メッセージ ボックスに使用される <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.SmallCaptionFont">
      <summary>ツール ウィンドウなどの小さなウィンドウのタイトル バーにテキストを表示するために使用される <see cref="T:System.Drawing.Font" /> を取得します。</summary>
      <returns>ツール ウィンドウなどの小さなウィンドウのタイトル バーにテキストを表示するために使用される <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.StatusFont">
      <summary>ステータス バーにテキストを表示するために使用される <see cref="T:System.Drawing.Font" /> を取得します。</summary>
      <returns>ステータス バーにテキストを表示するために使用される <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="T:System.Drawing.SystemIcons">
      <summary>
        <see cref="T:System.Drawing.SystemIcons" /> クラスの各プロパティは、Windows のシステム全体のアイコンの <see cref="T:System.Drawing.Icon" /> オブジェクトです。 このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Application">
      <summary>既定のアプリケーション アイコン (WIN32: IDI_APPLICATION) を格納している <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
      <returns>既定のアプリケーション アイコンを格納している <see cref="T:System.Drawing.Icon" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Asterisk">
      <summary>システムのアスタリスク アイコン (WIN32: IDI_ASTERISK) を格納している <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
      <returns>システムのアスタリスク アイコンを格納している <see cref="T:System.Drawing.Icon" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Error">
      <summary>システムのエラー アイコン (WIN32: IDI_ERROR) を格納している <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
      <returns>システムのエラー アイコンを格納している <see cref="T:System.Drawing.Icon" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Exclamation">
      <summary>システムの感嘆符アイコン (WIN32: IDI_EXCLAMATION) を格納している <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
      <returns>システムの感嘆符アイコンを格納している <see cref="T:System.Drawing.Icon" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Hand">
      <summary>システムの手の形のアイコン (WIN32: IDI_HAND) を格納している <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
      <returns>システムの手の形のアイコンを格納している <see cref="T:System.Drawing.Icon" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Information">
      <summary>システムの情報アイコン (WIN32: IDI_INFORMATION) を格納している <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
      <returns>システムの情報アイコンを格納している <see cref="T:System.Drawing.Icon" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Question">
      <summary>システムの疑問符アイコン (WIN32: IDI_QUESTION) を格納している <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
      <returns>システムの疑問符アイコンを格納している <see cref="T:System.Drawing.Icon" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Shield">
      <summary>シールド アイコンを格納している <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
      <returns>シールド アイコンが格納された <see cref="T:System.Drawing.Icon" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Warning">
      <summary>システムの警告アイコン (WIN32: IDI_WARNING) を格納している <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
      <returns>システムの警告アイコンを格納している <see cref="T:System.Drawing.Icon" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.WinLogo">
      <summary>Windows のロゴ アイコン (WIN32: IDI_WINLOGO) を格納している <see cref="T:System.Drawing.Icon" /> オブジェクトを取得します。</summary>
      <returns>Windows のロゴ アイコンを格納している <see cref="T:System.Drawing.Icon" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Drawing.SystemPens">
      <summary>
        <see cref="T:System.Drawing.SystemPens" /> クラスの各プロパティは、Windows の表示要素の色を表す、幅が 1 ピクセルの <see cref="T:System.Drawing.Pen" /> です。</summary>
    </member>
    <member name="M:System.Drawing.SystemPens.FromSystemColor(System.Drawing.Color)">
      <summary>指定した <see cref="T:System.Drawing.Pen" /> の <see cref="T:System.Drawing.Color" /> を作成します。</summary>
      <param name="c">新しい <see cref="T:System.Drawing.Color" /> の <see cref="T:System.Drawing.Pen" />。</param>
      <returns>このメソッドが作成する <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveBorder">
      <summary>アクティブなウィンドウの境界線の色である <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>アクティブなウィンドウの境界線の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaption">
      <summary>アクティブなウィンドウのタイトル バーの背景の色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーの背景の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaptionText">
      <summary>アクティブなウィンドウのタイトル バーのテキストの色である <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.AppWorkspace">
      <summary>アプリケーション ワークスペースの色である <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>アプリケーション作業領域の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonFace">
      <summary>3D 要素の表面の色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>3D 要素の表面の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonHighlight">
      <summary>3D 要素の強調表示色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>3D 要素の強調表示色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonShadow">
      <summary>3D 要素の影色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>3D 要素の影色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Control">
      <summary>3D 要素の表面の色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>3D 要素の表面の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDark">
      <summary>3D 要素の影色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>3D 要素の影色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDarkDark">
      <summary>3D 要素の暗い影色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>3D 要素の暗い影色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLight">
      <summary>3D 要素の明るい色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>3D 要素の明るい色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLightLight">
      <summary>3D 要素の強調表示色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>3D 要素の強調表示色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlText">
      <summary>3D 要素のテキストの色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>3D 要素のテキストの色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Desktop">
      <summary>Windows デスクトップの色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>Windows デスクトップの色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientActiveCaption">
      <summary>アクティブなウィンドウのタイトル バーに適用される色のグラデーションにおいて最も明るい色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーに適用される色のグラデーションにおいて最も明るい色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientInactiveCaption">
      <summary>アクティブでないウィンドウのタイトル バーに適用される色のグラデーションにおいて最も明るい色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーに適用される色のグラデーションにおいて最も明るい色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GrayText">
      <summary>淡色表示になっているテキストの色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>淡色表示になっているテキストの色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Highlight">
      <summary>選択した項目の背景の色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>選択した項目の背景の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HighlightText">
      <summary>選択した項目のテキストの色である <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>選択した項目のテキストの色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HotTrack">
      <summary>フォーカスされている項目の指定に使用する色である <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>ホット トラッキング項目の指定に使用する色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveBorder">
      <summary>アクティブでないウィンドウの境界線の色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>アクティブでないウィンドウの境界線の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaption">
      <summary>アクティブでないウィンドウのタイトル バー キャプションの色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バー キャプションの色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaptionText">
      <summary>アクティブでないウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Info">
      <summary>ツールヒントの背景の色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>ツールヒントの背景の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InfoText">
      <summary>ツールヒントのテキストの色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>ツールヒントのテキストの色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Menu">
      <summary>メニューの背景色である <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>メニューの背景の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuBar">
      <summary>メニュー バーの背景の色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>メニュー バーの背景の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuHighlight">
      <summary>メニューをフラット メニューとして表示するときにメニュー項目の強調表示に使用される色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>メニューをフラット メニューとして表示するときにメニュー項目の強調表示に使用される色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuText">
      <summary>メニューのテキストの色である <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>メニューのテキストの色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ScrollBar">
      <summary>スクロール バーの背景の色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>スクロール バーの背景の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Window">
      <summary>ウィンドウのクライアント領域の背景の色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>ウィンドウのクライアント領域の背景の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowFrame">
      <summary>ウィンドウの枠の色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>ウィンドウの枠の色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowText">
      <summary>ウィンドウのクライアント領域のテキストの色を表す <see cref="T:System.Drawing.Pen" /> を取得します。</summary>
      <returns>ウィンドウのクライアント領域のテキストの色を表す <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="T:System.Drawing.Text.FontCollection">
      <summary>インストール済みおよびプライベートなフォント コレクションの基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose">
      <summary>この <see cref="T:System.Drawing.Text.FontCollection" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Drawing.Text.FontCollection" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Finalize">
      <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
    </member>
    <member name="P:System.Drawing.Text.FontCollection.Families">
      <summary>この <see cref="T:System.Drawing.FontFamily" /> に関連付けられている <see cref="T:System.Drawing.Text.FontCollection" /> オブジェクトの配列を取得します。</summary>
      <returns>
        <see cref="T:System.Drawing.FontFamily" /> オブジェクトの配列。</returns>
    </member>
    <member name="T:System.Drawing.Text.GenericFontFamilies">
      <summary>汎用の <see cref="T:System.Drawing.FontFamily" /> オブジェクトを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Monospace">
      <summary>汎用のモノスペース <see cref="T:System.Drawing.FontFamily" /> オブジェクトを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.SansSerif">
      <summary>汎用のサン セリフ <see cref="T:System.Drawing.FontFamily" /> オブジェクトを指定します。</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Serif">
      <summary>汎用のセリフ <see cref="T:System.Drawing.FontFamily" /> オブジェクトを指定します。</summary>
    </member>
    <member name="T:System.Drawing.Text.HotkeyPrefix">
      <summary>テキストに関連するホット キー プリフィックスの表示の種類を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Hide">
      <summary>ホット キー プリフィックスを表示しません。</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.None">
      <summary>ホット キー プリフィックスがありません。</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Show">
      <summary>ホット キー プリフィックスを表示します。</summary>
    </member>
    <member name="T:System.Drawing.Text.InstalledFontCollection">
      <summary>システムにインストールされたフォントを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.Text.InstalledFontCollection.#ctor">
      <summary>
        <see cref="T:System.Drawing.Text.InstalledFontCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Drawing.Text.PrivateFontCollection">
      <summary>クライアント アプリケーションが用意したフォント ファイルから作成されたフォント ファミリのコレクションを提供します。</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.#ctor">
      <summary>
        <see cref="T:System.Drawing.Text.PrivateFontCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)">
      <summary>指定したファイルからこの <see cref="T:System.Drawing.Text.PrivateFontCollection" /> にフォントを追加します。</summary>
      <param name="filename">追加するフォントのファイル名が含まれている <see cref="T:System.String" />。</param>
      <exception cref="T:System.IO.FileNotFoundException">指定されたフォントがサポートされていないか、フォント ファイルが見つかりません。</exception>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
      <summary>システム メモリに格納されているフォントを、この <see cref="T:System.Drawing.Text.PrivateFontCollection" /> に追加します。</summary>
      <param name="memory">追加するフォントのメモリ アドレス。</param>
      <param name="length">追加するフォントのメモリ長。</param>
    </member>
    <member name="T:System.Drawing.Text.TextRenderingHint">
      <summary>テキスト レンダリングの品質を指定します。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAlias">
      <summary>アンチエイリアス処理されたグリフ ビットマップを使用して、ヒンティングなしに各文字を描画します。 アンチエイリアスによって品質が向上します。 ヒンティングがオフにされるため、ステム幅の違いが目立ちます。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit">
      <summary>アンチエイリアス処理されたグリフ ビットマップを使用して、ヒンティングありで各文字を描画します。 アンチエイリアスによってより高い品質が得られますが、パフォーマンスは大きく低下します。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit">
      <summary>グリフ ClearType ビットマップを使用して、ヒンティングありで各文字を描画します。 最高の品質設定です。 ClearType テキスト フォント機能を利用するときに使用します。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel">
      <summary>グリフ ビットマップを使用して各文字を描画します。 ヒンティングは使用されません。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>グリフ ビットマップを使用して各文字を描画します。 ヒンティングを使用して、文字のステム部分と曲線部分の見た目を向上します。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SystemDefault">
      <summary>グリフ ビットマップを使用し、システムの既定のレンダリング ヒントで各文字を描画します。 ユーザーがシステムで選択した、すべてのフォント スムージング設定を使用してテキストを描画します。</summary>
    </member>
    <member name="T:System.Drawing.TextureBrush">
      <summary>
        <see cref="T:System.Drawing.TextureBrush" /> クラスの各プロパティは、イメージを使用して形状の内部を塗りつぶす <see cref="T:System.Drawing.Brush" /> オブジェクトです。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image)">
      <summary>指定のイメージを使用する新しい <see cref="T:System.Drawing.TextureBrush" /> オブジェクトを初期化します。</summary>
      <param name="bitmap">
        <see cref="T:System.Drawing.Image" /> オブジェクトが内部を塗りつぶすために使用する <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
      <summary>指定のイメージとラップ モードを使用する新しい <see cref="T:System.Drawing.TextureBrush" /> オブジェクトを初期化します。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> オブジェクトが内部を塗りつぶすために使用する <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</param>
      <param name="wrapMode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> オブジェクトの並べ方を指定する <see cref="T:System.Drawing.TextureBrush" /> 列挙体。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.Rectangle)">
      <summary>指定のイメージ、ラップ モード、および外接する四角形を使用する新しい <see cref="T:System.Drawing.TextureBrush" /> オブジェクトを初期化します。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> オブジェクトが内部を塗りつぶすために使用する <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</param>
      <param name="wrapMode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> オブジェクトの並べ方を指定する <see cref="T:System.Drawing.TextureBrush" /> 列挙体。</param>
      <param name="dstRect">この <see cref="T:System.Drawing.Rectangle" /> オブジェクトに外接する四角形を表す <see cref="T:System.Drawing.TextureBrush" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.RectangleF)">
      <summary>指定のイメージ、ラップ モード、および外接する四角形を使用する新しい <see cref="T:System.Drawing.TextureBrush" /> オブジェクトを初期化します。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> オブジェクトが内部を塗りつぶすために使用する <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</param>
      <param name="wrapMode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> オブジェクトの並べ方を指定する <see cref="T:System.Drawing.TextureBrush" /> 列挙体。</param>
      <param name="dstRect">この <see cref="T:System.Drawing.RectangleF" /> オブジェクトに外接する四角形を表す <see cref="T:System.Drawing.TextureBrush" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>指定したイメージおよび外接する四角形を使用する新しい <see cref="T:System.Drawing.TextureBrush" /> オブジェクトを初期化します。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> オブジェクトが内部を塗りつぶすために使用する <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</param>
      <param name="dstRect">この <see cref="T:System.Drawing.Rectangle" /> オブジェクトに外接する四角形を表す <see cref="T:System.Drawing.TextureBrush" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ、外接する四角形、およびイメージ属性を使用する新しい <see cref="T:System.Drawing.TextureBrush" /> オブジェクトを初期化します。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> オブジェクトが内部を塗りつぶすために使用する <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</param>
      <param name="dstRect">この <see cref="T:System.Drawing.Rectangle" /> オブジェクトに外接する四角形を表す <see cref="T:System.Drawing.TextureBrush" /> 構造体。</param>
      <param name="imageAttr">この <see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトで使用されるイメージについての追加情報を格納している <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>指定したイメージおよび外接する四角形を使用する新しい <see cref="T:System.Drawing.TextureBrush" /> オブジェクトを初期化します。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> オブジェクトが内部を塗りつぶすために使用する <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</param>
      <param name="dstRect">この <see cref="T:System.Drawing.RectangleF" /> オブジェクトに外接する四角形を表す <see cref="T:System.Drawing.TextureBrush" /> 構造体。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)">
      <summary>指定したイメージ、外接する四角形、およびイメージ属性を使用する新しい <see cref="T:System.Drawing.TextureBrush" /> オブジェクトを初期化します。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> オブジェクトが内部を塗りつぶすために使用する <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</param>
      <param name="dstRect">この <see cref="T:System.Drawing.RectangleF" /> オブジェクトに外接する四角形を表す <see cref="T:System.Drawing.TextureBrush" /> 構造体。</param>
      <param name="imageAttr">この <see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトで使用されるイメージについての追加情報を格納している <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.Clone">
      <summary>この <see cref="T:System.Drawing.TextureBrush" /> オブジェクトの同一コピーを作成します。</summary>
      <returns>このメソッドが作成し、<see cref="T:System.Drawing.TextureBrush" /> オブジェクトとしてキャストされる <see cref="T:System.Object" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>この <see cref="T:System.Drawing.TextureBrush" /> オブジェクトのローカル ジオメトリック変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" /> オブジェクトに、指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> オブジェクトを前に適用することによって指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> オブジェクトを乗算します。</summary>
      <param name="matrix">ジオメトリック変換の乗算に使用する <see cref="T:System.Drawing.Drawing2D.Matrix" /> オブジェクト。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> オブジェクトにより、この <see cref="T:System.Drawing.TextureBrush" /> オブジェクトのローカル ジオメトリック変換を表す <see cref="T:System.Drawing.Drawing2D.Matrix" /> オブジェクトを乗算します。</summary>
      <param name="matrix">ジオメトリック変換の乗算に使用する <see cref="T:System.Drawing.Drawing2D.Matrix" /> オブジェクト。</param>
      <param name="order">2 つの行列の乗算に使用する順序を指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙体。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ResetTransform">
      <summary>この <see cref="T:System.Drawing.TextureBrush" /> オブジェクトの <see langword="Transform" /> プロパティを ID にリセットします。</summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single)">
      <summary>指定した量だけこの <see cref="T:System.Drawing.TextureBrush" /> オブジェクトのローカル ジオメトリック変換を回転します。 このメソッドは変換の前に回転を行います。</summary>
      <param name="angle">回転角度。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した量だけこの <see cref="T:System.Drawing.TextureBrush" /> オブジェクトのローカル ジオメトリック変換を回転します。</summary>
      <param name="angle">回転角度。</param>
      <param name="order">回転行列を後に適用するか、前に適用するかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙値。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single)">
      <summary>指定の量だけこの <see cref="T:System.Drawing.TextureBrush" /> オブジェクトのローカル ジオメトリック変換をスケーリングします。 このメソッドは変換の前にスケーリング行列を適用します。</summary>
      <param name="sx">x 方向に変換をスケーリングする量。</param>
      <param name="sy">y 方向に変換をスケーリングする量。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した量だけこの <see cref="T:System.Drawing.TextureBrush" /> オブジェクトのローカル ジオメトリック変換をスケーリングします。</summary>
      <param name="sx">x 方向に変換をスケーリングする量。</param>
      <param name="sy">y 方向に変換をスケーリングする量。</param>
      <param name="order">スケーリング行列を後に適用するか、前に適用するかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙値。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single)">
      <summary>指定した寸法でこの <see cref="T:System.Drawing.TextureBrush" /> オブジェクトのローカル ジオメトリック変換を平行移動します。 このメソッドは変換の前に平行移動を行います。</summary>
      <param name="dx">X 方向に変換を平行移動するディメンションです。</param>
      <param name="dy">Y 方向に変換を平行移動するディメンションです。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>指定した順序で、指定した寸法だけこの <see cref="T:System.Drawing.TextureBrush" /> オブジェクトのローカル ジオメトリック変換を平行移動します。</summary>
      <param name="dx">X 方向に変換を平行移動するディメンションです。</param>
      <param name="dy">Y 方向に変換を平行移動するディメンションです。</param>
      <param name="order">平行移動を適用する順序 (前または後)。</param>
    </member>
    <member name="P:System.Drawing.TextureBrush.Image">
      <summary>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている <see cref="T:System.Drawing.TextureBrush" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.Image" /> オブジェクトが形状を塗りつぶすときに使用するイメージを表す <see cref="T:System.Drawing.TextureBrush" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.Transform">
      <summary>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> オブジェクトに関連付けられたイメージのローカル ジオメトリック変換を定義する <see cref="T:System.Drawing.TextureBrush" /> オブジェクトのコピーを取得または設定します。</summary>
      <returns>この <see cref="T:System.Drawing.Drawing2D.Matrix" /> オブジェクトで描画する塗りつぶしにだけ適用されるジオメトリック変換を定義する <see cref="T:System.Drawing.TextureBrush" /> オブジェクトのコピー。</returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.WrapMode">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> オブジェクトのラップ モードを示す <see cref="T:System.Drawing.TextureBrush" /> 列挙体を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> オブジェクトで塗りつぶした領域の並べ方を指定する <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 列挙体。</returns>
    </member>
    <member name="T:System.Drawing.ToolboxBitmapAttribute">
      <summary>Microsoft Visual Studio フォーム デザイナーなど、コンテナー内のコントロールを表すアイコンを指定できるようにします。</summary>
    </member>
    <member name="F:System.Drawing.ToolboxBitmapAttribute.Default">
      <summary>小さいイメージと大きいイメージを <see langword="null" /> に設定した <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクト。</summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
      <summary>指定したファイルのイメージを使用して、新しい <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトを初期化します。</summary>
      <param name="imageFile">16 x 16 のビットマップを格納しているファイルの名前。</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
      <summary>指定したアセンブリにリソースとして埋め込まれている 16 x 16 のビットマップに基づいて、新しい <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトを初期化します。</summary>
      <param name="t">ビットマップ リソースの検索対象となるアセンブリを定義する <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
      <summary>指定したアセンブリにリソースとして埋め込まれている 16 x 16 のビットマップに基づいて、新しい <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトを初期化します。</summary>
      <param name="t">ビットマップ リソースの検索対象となるアセンブリを定義する <see cref="T:System.Type" />。</param>
      <param name="name">埋め込みビットマップ リソースの名前。</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
      <summary>指定されたオブジェクトが <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトかどうか、およびこの <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトと同一かどうかを示します。</summary>
      <param name="value">テスト対象の <see cref="T:System.Object" />。</param>
      <returns>
        <paramref name="value" /> が <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトであり、かつ、この <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトと同一である場合、このメソッドは <see langword="true" /> を返します。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
      <summary>この <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトのハッシュ コードを取得します。</summary>
      <returns>この <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトのハッシュ コード。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
      <summary>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている小さい <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> を取得します。</summary>
      <param name="component">この <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトに小さいイメージがまだない場合、このメソッドは、component パラメーターで指定されたオブジェクトの型を定義するアセンブリ中でビットマップ リソースを検索します。 たとえば、ControlA 型のオブジェクトを component パラメーターに渡すと、このメソッドは、ControlA を定義しているアセンブリを検索します。</param>
      <returns>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている小さい <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
      <summary>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている、大きいまたは小さい <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> を取得します。</summary>
      <param name="component">この <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトに小さいイメージがまだない場合、このメソッドは、component パラメーターで指定されたオブジェクトの型を定義するアセンブリ中でビットマップ リソースを検索します。 たとえば、ControlA 型のオブジェクトを component パラメーターに渡すと、このメソッドは、ControlA を定義しているアセンブリを検索します。</param>
      <param name="large">このメソッドが大きいイメージ (<see langword="true" />) を返すか、小さいイメージ (<see langword="false" />) を返すかを指定します。 小さいイメージは 16 x 16 で、大きいイメージは 32 x 32 です。</param>
      <returns>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
      <summary>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている小さい <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> を取得します。</summary>
      <param name="type">この <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトに小さいイメージがまだない場合、このメソッドは、type パラメーターで指定された型を定義するアセンブリ中でビットマップ リソースを検索します。 たとえば、type パラメーターに typeof(ControlA) を渡した場合、このメソッドは、ControlA を定義しているアセンブリを検索します。</param>
      <returns>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている小さい <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
      <summary>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている、大きいまたは小さい <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> を取得します。</summary>
      <param name="type">この <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトに小さいイメージがまだない場合、このメソッドは、指定したコンポーネント型を定義するアセンブリ中でビットマップ リソースを検索します。 たとえば、type パラメーターに typeof(ControlA) を渡した場合、このメソッドは、ControlA を定義しているアセンブリを検索します。</param>
      <param name="large">このメソッドが大きいイメージ (<see langword="true" />) を返すか、小さいイメージ (<see langword="false" />) を返すかを指定します。 小さいイメージは 16 x 16 で、大きいイメージは 32 x 32 です。</param>
      <returns>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
      <summary>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている、大きいまたは小さい <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> を取得します。</summary>
      <param name="type">この <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトに小さいイメージがまだない場合、このメソッドは、指定したコンポーネント型を定義するアセンブリで埋め込まれているビットマップ リソースを検索します。 たとえば、type パラメーターに typeof(ControlA) を渡した場合、このメソッドは、ControlA を定義しているアセンブリを検索します。</param>
      <param name="imgName">埋め込みビットマップ リソースの名前。</param>
      <param name="large">このメソッドが大きいイメージ (<see langword="true" />) を返すか、小さいイメージ (<see langword="false" />) を返すかを指定します。 小さいイメージは 16 x 16 で、大きいイメージは 32 x 32 です。</param>
      <returns>この <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられている <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
      <summary>アセンブリに埋め込まれているビットマップ リソースから <see cref="T:System.Drawing.Image" /> オブジェクトを取り出して、返します。</summary>
      <param name="t">このメソッドは、t パラメーターで指定された型を定義するアセンブリで、埋め込みビットマップ リソースを検索します。 たとえば、typeof(ControlA) を t パラメーターに渡した場合、このメソッドは、ControlA を定義するアセンブリを検索します。</param>
      <param name="imageName">埋め込みビットマップ リソースの名前。</param>
      <param name="large">このメソッドが大きいイメージを返す (true) か、小さいイメージを返す (false) かを指定します。 小さいイメージは 16 x 16、大きいイメージは 32 x 32 です。</param>
      <returns>検索したビットマップから取り出した <see cref="T:System.Drawing.Image" /> オブジェクト。</returns>
    </member>
  </members>
</doc>