<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="oldSurface" vsli:raw="The design surface that is losing activation.">활성화가 해제될 디자인 화면입니다.</param>
      <param name="newSurface" vsli:raw="The design surface that is gaining activation.">활성화될 디자인 화면입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary vsli:raw="Gets the design surface that is gaining activation.">활성화될 디자인 화면을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is gaining activation.">활성화될 <see cref="T:System.ComponentModel.Design.DesignSurface" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary vsli:raw="Gets the design surface that is losing activation.">활성화가 해제될 디자인 화면을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is losing activation.">활성화가 해제될 <see cref="T:System.ComponentModel.Design.DesignSurface" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />의 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 이벤트를 처리할 메서드를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
      <param name="sender" vsli:raw="The source of the event, the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />는 이벤트의 소스입니다.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary vsli:raw="Provides a user interface for editing arrays at design time.">디자인 타임에서 배열을 편집하기 위해 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.Design.ArrayEditor&quot; /&gt; using the specified data type for the array.">배열의 지정된 데이터 형식을 사용하여 <see cref="T:System.ComponentModel.Design.ArrayEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The data type of the items in the array.">배열 항목의 데이터 형식입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary vsli:raw="Gets the data type that this collection is designed to contain.">해당 컬렉션이 포함하도록 디자인된 데이터 형식을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates the data type that the collection is designed to contain.">컬렉션이 포함하도록 디자인된 데이터 형식을 나타내는 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary vsli:raw="Gets the items in the array.">배열의 항목을 가져옵니다.</summary>
      <param name="editValue" vsli:raw="The array from which to retrieve the items.">항목을 검색하는 배열입니다.</param>
      <returns vsli:raw="An array consisting of the items within the specified array. If the object specified in the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is not an array, a new empty object is returned.">지정된 배열의 항목으로 구성된 배열입니다. <paramref name="editValue" /> 매개 변수에 지정된 개체가 배열이 아니면 새로운 빈 개체가 반환됩니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary vsli:raw="Sets the items in the array.">배열의 항목을 설정합니다.</summary>
      <param name="editValue" vsli:raw="The array to set the items to.">항목을 설정할 배열입니다.</param>
      <param name="value" vsli:raw="The array of objects to set as the items of the array.">배열의 항목으로 설정할 개체의 배열입니다.</param>
      <returns vsli:raw="An instance of the new array. If the object specified by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is not an array, the object specified by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is returned.">새 배열의 인스턴스입니다. <paramref name="editValue" /> 매개 변수로 지정한 개체가 배열이 아니면 <paramref name="editValue" /> 매개 변수로 지정한 개체가 반환됩니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary vsli:raw="Provides a user interface for editing binary data.">이진 데이터를 편집하기 위한 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.BinaryEditor&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.BinaryEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">지정된 서비스 공급자와 컨텍스트를 사용하여 지정된 개체의 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">편집 서비스를 가져오는 데 사용할 수 있는 서비스 공급자 개체입니다.</param>
      <param name="value" vsli:raw="The object to edit the value of.">값을 편집할 개체입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 메서드에서 사용하는 편집기 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="An &lt;code data-dev-comment-type=&quot;langword&quot;&gt;enum&lt;/code&gt; value indicating the provided editing style.">제공된 편집 스타일을 나타내는 <see langword="enum" /> 값입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary vsli:raw="Displays byte arrays in hexadecimal, ANSI, and Unicode formats.">16진수, ANSI 및 유니코드 형식으로 바이트 배열을 표시합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ByteViewer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary vsli:raw="Gets the bytes in the buffer.">버퍼의 바이트를 가져옵니다.</summary>
      <returns vsli:raw="The unsigned byte array reference.">부호 없는 바이트 배열 참조입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary vsli:raw="Gets the display mode for the control.">컨트롤에 대한 디스플레이 모드를 가져옵니다.</summary>
      <returns vsli:raw="The display mode that this control uses. The returned value is defined in &lt;see cref=&quot;T:System.ComponentModel.Design.DisplayMode&quot; /&gt;.">해당 컨트롤이 사용하는 디스플레이 모드입니다. 반환된 값은 <see cref="T:System.ComponentModel.Design.DisplayMode" />에 정의됩니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyDown&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.KeyDown" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.KeyEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.Layout" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.LayoutEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Paint&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.Paint" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary vsli:raw="Writes the raw data from the data buffer to a file.">데이터 버퍼의 원시 데이터를 파일에 씁니다.</summary>
      <param name="path" vsli:raw="The file path to save to.">저장할 파일 경로입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string (&quot;&quot;), contains only white space, or contains one or more invalid characters.">
        <paramref name="path" />가 빈 문자열("")이거나 공백만 포함하거나 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file write failed.">파일 쓰기를 수행하지 못한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The access requested is not permitted by the operating system for the specified &lt;paramref name=&quot;path&quot; /&gt;, such as when access is &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;ReadWrite&quot; /&gt; and the file or directory is set for read-only access.">지정된 <paramref name="path" />에 대해 운영 체제에서 요청된 액세스를 허용하지 않는 경우(예: 액세스 권한이 <see langword="Write" /> 또는 <see langword="ReadWrite" />이고 파일 또는 디렉터리가 읽기 전용 권한으로 설정된 경우)</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary vsli:raw="Handles the &lt;see cref=&quot;E:System.Windows.Forms.ScrollBar.ValueChanged&quot; /&gt; event on the &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt; control's &lt;see cref=&quot;T:System.Windows.Forms.ScrollBar&quot; /&gt;.">
        <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> 컨트롤의 <see cref="T:System.ComponentModel.Design.ByteViewer" />에 대한 <see cref="T:System.Windows.Forms.ScrollBar" /> 이벤트를 처리합니다.</summary>
      <param name="source" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary vsli:raw="Sets the byte array to display in the viewer.">뷰어에 표시할 바이트 배열을 설정합니다.</summary>
      <param name="bytes" vsli:raw="The byte array to display.">표시할 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The specified byte array is &lt;see langword=&quot;null&quot; /&gt;.">지정된 바이트 배열이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary vsli:raw="Sets the current display mode.">현재 디스플레이 모드를 설정합니다.</summary>
      <param name="mode" vsli:raw="The display mode to set.">설정할 디스플레이 모드입니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The specified display mode is not from the &lt;see cref=&quot;T:System.ComponentModel.Design.DisplayMode&quot; /&gt; enumeration.">지정된 디스플레이 모드를 <see cref="T:System.ComponentModel.Design.DisplayMode" /> 열거형에서 가져오지 않은 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary vsli:raw="Sets the file to display in the viewer.">뷰어에 표시할 파일을 설정합니다.</summary>
      <param name="path" vsli:raw="The file path to load from.">로드할 파일 경로입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string (&quot;&quot;), contains only white space, or contains one or more invalid characters.">
        <paramref name="path" />가 빈 문자열("")이거나 공백만 포함하거나 하나 이상의 잘못된 문자를 포함합니다.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file load failed.">파일을 로드하지 못한 경우</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The access requested is not permitted by the operating system for the specified &lt;paramref name=&quot;path&quot; /&gt;, such as when access is &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;ReadWrite&quot; /&gt; and the file or directory is set for read-only access.">지정된 <paramref name="path" />에 대해 운영 체제에서 요청된 액세스를 허용하지 않는 경우(예: 액세스 권한이 <see langword="Write" /> 또는 <see langword="ReadWrite" />이고 파일 또는 디렉터리가 읽기 전용 권한으로 설정된 경우)</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary vsli:raw="Sets the current line for the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Hexdump&quot; /&gt; view.">
        <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> 뷰에 대한 현재 줄을 설정합니다.</summary>
      <param name="line" vsli:raw="The current line to display from.">표시할 현재 줄입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary vsli:raw="Provides a user interface that can edit most types of collections at design time.">디자인 타임에 대부분의 컬렉션 형식을 편집할 수 있는 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; class using the specified collection type.">지정된 컬렉션 형식을 사용하여 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type of the collection for this editor to edit.">이 편집기에서 편집할 컬렉션의 형식입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary vsli:raw="Cancels changes to the collection.">컬렉션에 대한 변경을 취소합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary vsli:raw="Indicates whether original members of the collection can be removed.">컬렉션의 원래 멤버를 제거할 수 있는지 여부를 나타냅니다.</summary>
      <param name="value" vsli:raw="The value to remove.">제거할 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is permissible to remove this value from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default implementation always returns &lt;see langword=&quot;true&quot; /&gt;.">컬렉션에서 이 값을 제거하는 것이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 구현에서는 항상 <see langword="true" />을 반환합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary vsli:raw="Indicates whether multiple collection items can be selected at once.">동시에 여러 컬렉션 항목을 선택할 수 있는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it multiple collection members can be selected at the same time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this returns &lt;see langword=&quot;true&quot; /&gt;.">동시에 여러 컬렉션 멤버를 선택할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본적으로 이 속성은 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary vsli:raw="Creates a new form to display and edit the current collection.">현재 컬렉션을 표시하고 편집할 새 폼을 만듭니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor.CollectionForm&quot; /&gt; to provide as the user interface for editing the collection.">컬렉션을 편집하기 위한 사용자 인터페이스로 제공할 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary vsli:raw="Gets the data type that this collection contains.">이 컬렉션에 들어 있는 데이터 형식을 가져옵니다.</summary>
      <returns vsli:raw="The data type of the items in the collection, or an &lt;see cref=&quot;T:System.Object&quot; /&gt; if no &lt;see langword=&quot;Item&quot; /&gt; property can be located on the collection.">컬렉션 항목의 데이터 형식이거나, 컬렉션에서 <see langword="Item" /> 속성을 찾을 수 없는 경우 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified collection item type.">지정된 컬렉션 항목 형식의 새 인스턴스를 만듭니다.</summary>
      <param name="itemType" vsli:raw="The type of item to create.">만들 항목의 형식입니다.</param>
      <returns vsli:raw="A new instance of the specified object.">지정된 개체의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary vsli:raw="Gets the data types that this collection editor can contain.">이 컬렉션 편집기가 포함할 수 있는 데이터 형식을 가져옵니다.</summary>
      <returns vsli:raw="An array of data types that this collection can contain.">이 컬렉션이 포함할 수 있는 데이터 형식의 배열입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary vsli:raw="Destroys the specified instance of the object.">개체의 지정된 인스턴스를 소멸시킵니다.</summary>
      <param name="instance" vsli:raw="The object to destroy.">소멸시킬 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">지정된 서비스 공급자와 컨텍스트를 사용하여 지정된 개체의 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services can be obtained.">편집 서비스를 가져오는 데 사용할 수 있는 서비스 공급자 개체입니다.</param>
      <param name="value" vsli:raw="The object to edit the value of.">값을 편집할 개체입니다.</param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program did not succeed.">소스 코드 관리 프로그램으로 체크 인된 파일을 체크 아웃하지 못한 경우</exception>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary vsli:raw="Retrieves the display text for the given list item.">지정된 목록 항목의 표시 텍스트를 검색합니다.</summary>
      <param name="value" vsli:raw="The list item for which to retrieve display text.">표시 텍스트를 검색할 목록 항목입니다.</param>
      <returns vsli:raw="The display text for &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 표시 텍스트입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the edit style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 메서드에서 사용하는 편집 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; enumeration value indicating the provided editing style. If the method is not supported in the specified context, this method will return the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt; identifier.">제공되는 편집 스타일을 나타내는 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 열거형 값입니다. 지정된 컨텍스트에서 메서드를 지원하지 않는 경우 이 메서드에서는 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> 식별자를 반환합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary vsli:raw="Gets an array of objects containing the specified collection.">지정된 컬렉션이 들어 있는 개체의 배열을 가져옵니다.</summary>
      <param name="editValue" vsli:raw="The collection to edit.">편집할 컬렉션입니다.</param>
      <returns vsli:raw="An array containing the collection objects, or an empty object array if the specified collection does not inherit from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">컬렉션 개체가 들어 있는 배열이거나, 지정된 컬렉션이 <see cref="T:System.Collections.ICollection" />에서 상속되지 않은 경우 빈 개체 배열입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary vsli:raw="Returns a list containing the given object.">지정된 개체가 포함된 목록을 반환합니다.</summary>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; returned as an object.">개체로 반환된 <see cref="T:System.Collections.ArrayList" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; which contains the individual objects to be created.">만들 개별 개체가 포함된 <see cref="T:System.Collections.ArrayList" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service, if it is available.">요청된 서비스를 사용할 수 있는 경우 해당 서비스를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">검색할 서비스의 형식입니다.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be found.">서비스의 인스턴스입니다. 서비스를 찾을 수 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary vsli:raw="Sets the specified array as the items of the collection.">지정된 배열을 컬렉션의 항목으로 설정합니다.</summary>
      <param name="editValue" vsli:raw="The collection to edit.">편집할 컬렉션입니다.</param>
      <param name="value" vsli:raw="An array of objects to set as the collection items.">컬렉션 항목으로 설정할 개체의 배열입니다.</param>
      <returns vsli:raw="The newly created collection object or, otherwise, the collection indicated by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter.">새로 만들어진 컬렉션 개체이거나, 그렇지 않으면 <paramref name="editValue" /> 매개 변수에서 나타내는 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary vsli:raw="Displays the default Help topic for the collection editor.">컬렉션 편집기에 대한 기본 도움말 항목을 표시합니다.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary vsli:raw="Gets the data type of each item in the collection.">컬렉션에 있는 각 항목의 데이터 형식을 가져옵니다.</summary>
      <returns vsli:raw="The data type of the collection items.">컬렉션 항목의 데이터 형식입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary vsli:raw="Gets the data type of the collection object.">컬렉션 개체의 데이터 형식을 가져옵니다.</summary>
      <returns vsli:raw="The data type of the collection object.">컬렉션 개체의 데이터 형식입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary vsli:raw="Gets a type descriptor that indicates the current context.">현재 컨텍스트를 나타내는 형식 설명자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that indicates the context currently in use, or &lt;see langword=&quot;null&quot; /&gt; if no context is available.">현재 사용하고 있는 컨텍스트를 나타내는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다. 사용할 수 있는 컨텍스트가 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary vsli:raw="Gets the Help keyword to display the Help topic or topic list for when the editor's dialog box Help button or the F1 key is pressed.">편집기 대화 상자의 도움말 단추나 F1 키를 누를 때 도움말 항목 또는 항목 목록을 표시하는 도움말 키워드를 가져옵니다.</summary>
      <returns vsli:raw="The Help keyword to display the Help topic or topic list for when Help is requested from the editor.">편집기에서 도움말을 요청하는 경우 도움말 항목 또는 항목 목록을 표시하는 도움말 키워드입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary vsli:raw="Gets the available types of items that can be created for this collection.">이 컬렉션에 만들 수 있는 사용 가능한 항목 형식을 가져옵니다.</summary>
      <returns vsli:raw="The types of items that can be created.">만들 수 있는 항목 형식입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary vsli:raw="Provides a modal dialog box for editing the contents of a collection using a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditor" />를 사용하여 컬렉션 내용을 편집하는 모달 대화 상자를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor.CollectionForm&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; to use for editing the collection.">컬렉션 편집에 사용할 <see cref="T:System.ComponentModel.Design.CollectionEditor" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary vsli:raw="Indicates whether you can remove the original members of the collection.">컬렉션의 원래 멤버를 제거할 수 있는지 여부를 나타냅니다.</summary>
      <param name="value" vsli:raw="The value to remove.">제거할 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is permissible to remove this value from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this method returns the value from &lt;see cref=&quot;M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; for this form.">컬렉션에서 이 값을 제거하는 것이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본적으로 이 메서드에서는 이 폼에 대한 <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" />의 <see cref="T:System.ComponentModel.Design.CollectionEditor" />에서 값을 반환합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary vsli:raw="Indicates whether multiple collection items can be selected at once.">동시에 여러 컬렉션 항목을 선택할 수 있는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it multiple collection members can be selected at the same time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this method returns the value from &lt;see cref=&quot;M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; for this form.">동시에 여러 컬렉션 멤버를 선택할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본적으로 이 메서드에서는 이 폼에 대한 <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" />의 <see cref="T:System.ComponentModel.Design.CollectionEditor" />에서 값을 반환합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified collection item type.">지정된 컬렉션 항목 형식의 새 인스턴스를 만듭니다.</summary>
      <param name="itemType" vsli:raw="The type of item to create.">만들 항목의 형식입니다.</param>
      <returns vsli:raw="A new instance of the specified object, or &lt;see langword=&quot;null&quot; /&gt; if the user chose to cancel the creation of this instance.">지정된 개체의 새 인스턴스이거나, 사용자가 이 인스턴스의 작성을 취소한 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary vsli:raw="Destroys the specified instance of the object.">개체의 지정된 인스턴스를 소멸시킵니다.</summary>
      <param name="instance" vsli:raw="The object to destroy.">소멸시킬 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary vsli:raw="Displays the specified exception to the user.">사용자에게 지정된 예외를 표시합니다.</summary>
      <param name="e" vsli:raw="The exception to display.">표시할 예외입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service, if it is available.">요청된 서비스를 사용할 수 있는 경우 해당 서비스를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">검색할 서비스의 형식입니다.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be found.">서비스의 인스턴스입니다. 서비스를 찾을 수 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary vsli:raw="Provides an opportunity to perform processing when a collection value has changed.">컬렉션 값이 변경된 경우 처리를 수행할 수 있는 기회를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary vsli:raw="Shows the dialog box for the collection editor using the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.IWindowsFormsEditorService&quot; /&gt; object.">지정된 <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> 개체를 사용하여 컬렉션 편집기의 대화 상자를 표시합니다.</summary>
      <param name="edSvc" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.IWindowsFormsEditorService&quot; /&gt; that can be used to show the dialog box.">대화 상자를 표시하는 데 사용할 수 있는 <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; that indicates the result code returned from the dialog box.">대화 상자에서 반환된 결과 코드를 나타내는 <see cref="T:System.Windows.Forms.DialogResult" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary vsli:raw="Gets the data type of each item in the collection.">컬렉션에 있는 각 항목의 데이터 형식을 가져옵니다.</summary>
      <returns vsli:raw="The data type of the collection items.">컬렉션 항목의 데이터 형식입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary vsli:raw="Gets the data type of the collection object.">컬렉션 개체의 데이터 형식을 가져옵니다.</summary>
      <returns vsli:raw="The data type of the collection object.">컬렉션 개체의 데이터 형식입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary vsli:raw="Gets a type descriptor that indicates the current context.">현재 컨텍스트를 나타내는 형식 설명자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that indicates the context currently in use, or &lt;see langword=&quot;null&quot; /&gt; if no context is available.">현재 사용하고 있는 컨텍스트를 나타내는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다. 사용할 수 있는 컨텍스트가 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary vsli:raw="Gets or sets the collection object to edit.">편집할 컬렉션 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The collection object to edit.">편집할 컬렉션 개체입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary vsli:raw="Gets or sets the array of items for this form to display.">이 폼에서 표시할 항목 배열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of objects for the form to display.">이 폼에서 표시할 개체 배열입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary vsli:raw="Gets the available item types that can be created for this collection.">이 컬렉션에 만들 수 있는 사용 가능한 항목 형식을 가져옵니다.</summary>
      <returns vsli:raw="The types of items that can be created.">만들 수 있는 항목 형식입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary vsli:raw="Extends the design mode behavior of a component.">구성 요소의 디자인 모드 동작을 확장합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary vsli:raw="Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.">구성 요소의 기본 이벤트에 대한 소스 코드 파일에 메서드 시그니처를 만들고 해당 위치로 사용자의 커서를 이동합니다.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program failed.">소스 코드 관리 프로그램으로 체크 인된 파일을 체크 아웃하지 못한 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary vsli:raw="Attempts to retrieve the specified type of service from the design mode site of the designer's component.">디자이너 구성 요소의 디자인 모드 사이트에서 지정된 서비스 종류를 검색합니다.</summary>
      <param name="serviceType" vsli:raw="The type of service to request.">요청할 서비스의 형식입니다.</param>
      <returns vsli:raw="An object implementing the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">요청된 서비스를 구현하는 개체이거나, 서비스를 확인할 수 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Prepares the designer to view, edit, and design the specified component.">지정된 구성 요소를 표시, 편집 및 디자인할 디자이너를 준비합니다.</summary>
      <param name="component" vsli:raw="The component for this designer.">이 디자이너에 대한 구성 요소입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Reinitializes an existing component.">기존 구성 요소를 다시 초기화합니다.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">속성에 적용할 기본값의 이름/값 사전입니다. 기본값이 지정되지 않은 경우 <see langword="null" /> 일 수 있습니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">새로 만들어진 구성 요소를 초기화합니다.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">속성에 적용할 기본값의 이름/값 사전입니다. 기본값이 지정되지 않은 경우 <see langword="null" /> 일 수 있습니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary vsli:raw="Initializes the settings for an imported component that is already initialized to settings other than the defaults.">기본값이 아닌 설정으로 이미 초기화되어 가져온 구성 요소의 설정을 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">지정된 <see cref="T:System.ComponentModel.InheritanceAttribute" />의 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />를 가져옵니다.</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; whose inheritance attribute to retrieve.">상속 특성을 검색할 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified designer.">지정된 디자이너의 <see cref="T:System.ComponentModel.InheritanceAttribute" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Sets the default properties for the component.">구성 요소의 기본 속성을 설정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">디자이너에서 <see cref="T:System.ComponentModel.TypeDescriptor" />를 통해 노출되는 특성 집합의 항목을 변경하거나 제거하도록 합니다.</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">구성 요소의 클래스에 대한 특성입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">디자이너에서 <see cref="T:System.ComponentModel.TypeDescriptor" />를 통해 노출되는 이벤트 집합의 항목을 변경하거나 제거하도록 합니다.</summary>
      <param name="events" vsli:raw="The events for the class of the component.">구성 요소의 클래스에 대한 이벤트입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">디자이너에서 <see cref="T:System.ComponentModel.TypeDescriptor" />를 통해 노출되는 속성 집합의 항목을 변경하거나 제거하도록 합니다.</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">구성 요소의 클래스에 대한 속성입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">디자이너에서 <see cref="T:System.ComponentModel.TypeDescriptor" />를 통해 노출되는 특성 집합에 항목을 추가하도록 합니다.</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">구성 요소의 클래스에 대한 특성입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">디자이너에서 <see cref="T:System.ComponentModel.TypeDescriptor" />를 통해 노출되는 이벤트 집합에 항목을 추가하도록 합니다.</summary>
      <param name="events" vsli:raw="The events for the class of the component.">구성 요소의 클래스에 대한 이벤트입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">디자이너에서 <see cref="T:System.ComponentModel.TypeDescriptor" />를 통해 노출되는 속성 집합에 항목을 추가하도록 합니다.</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">구성 요소의 클래스에 대한 속성입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component has been changed.">
        <see cref="T:System.ComponentModel.Design.IComponentChangeService" />에 이 구성 요소가 변경되었음을 알립니다.</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that has been changed.">변경된 멤버를 나타내는 <see cref="T:System.ComponentModel.MemberDescriptor" />입니다.</param>
      <param name="oldValue" vsli:raw="The old value of the member.">멤버의 이전 값입니다.</param>
      <param name="newValue" vsli:raw="The new value of the member.">멤버의 새 값입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component is about to be changed.">
        <see cref="T:System.ComponentModel.Design.IComponentChangeService" />에 이 구성 요소가 변경될 예정임을 알립니다.</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that is about to be changed.">변경될 멤버를 나타내는 <see cref="T:System.ComponentModel.MemberDescriptor" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> 메서드를 참조하세요.</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">구성 요소의 클래스에 대한 <see cref="T:System.Attribute" /> 개체입니다. 특성의 사전에 포함된 키는 특성의 <see cref="P:System.Attribute.TypeId" /> 값입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> 메서드를 참조하세요.</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">구성 요소 클래스의 이벤트를 나타내는 <see cref="T:System.ComponentModel.EventDescriptor" /> 개체입니다. 이벤트의 사전에 포함된 키는 이벤트 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> 메서드를 참조하세요.</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">구성 요소 클래스의 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체입니다. 속성의 사전에 포함된 키는 속성 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> 메서드를 참조하세요.</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">구성 요소의 클래스에 대한 <see cref="T:System.Attribute" /> 개체입니다. 특성의 사전에 포함된 키는 특성의 <see cref="P:System.Attribute.TypeId" /> 값입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> 메서드를 참조하세요.</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">구성 요소 클래스의 이벤트를 나타내는 <see cref="T:System.ComponentModel.EventDescriptor" /> 개체입니다. 이벤트의 사전에 포함된 키는 이벤트 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> 메서드를 참조하세요.</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">구성 요소 클래스의 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체입니다. 속성의 사전에 포함된 키는 속성 이름입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary vsli:raw="Gets the design-time action lists supported by the component associated with the designer.">디자이너와 관련된 구성 요소에서 지원하는 디자인 타임 작업 목록을 가져옵니다.</summary>
      <returns vsli:raw="The design-time action lists supported by the component associated with the designer.">디자이너와 관련된 구성 요소에서 지원하는 디자인 타임 작업 목록입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">디자이너가 관리하는 구성 요소와 관련된 구성 요소 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">디자이너가 관리하는 구성 요소와 관련된 구성 요소입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary vsli:raw="Gets the component this designer is designing.">이 디자이너에서 디자인하고 있는 구성 요소를 가져옵니다.</summary>
      <returns vsli:raw="The component managed by the designer.">디자이너에서 관리하는 구성 요소입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets an attribute that indicates the type of inheritance of the associated component.">관련된 구성 요소의 상속 형식을 나타내는 특성을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; for the associated component.">관련된 구성 요소에 대한 <see cref="T:System.ComponentModel.InheritanceAttribute" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary vsli:raw="Gets a value indicating whether this component is inherited.">이 구성 요소가 상속되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is inherited; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 요소가 상속된 것이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for this designer.">이 디자이너의 부모 구성 요소를 가져옵니다.</summary>
      <returns vsli:raw="The parent component for this designer, or &lt;see langword=&quot;null&quot; /&gt; if this designer is the root component.">이 디자이너의 부모 구성 요소이거나, 이 디자이너가 루트 구성 요소인 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary vsli:raw="Gets a collection of property values that override user settings.">사용자 설정을 재정의하는 속성 값의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection&quot; /&gt; that indicates the shadow properties of the design document.">디자인 문서의 그림자 속성을 나타내는 <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Children&quot; /&gt; property.">이 멤버에 대한 설명을 보려면 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> 속성을 참조하세요.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; designers contained in the current parent designer.">현재 부모 디자이너에 포함된 <see cref="T:System.Collections.ICollection" /> 디자이너의 컬렉션이 들어 있는 <see cref="T:System.ComponentModel.Design.IDesigner" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Parent&quot; /&gt; property.">이 멤버에 대한 설명을 보려면 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> 속성을 참조하세요.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; representing the parent designer, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent.">부모 디자이너를 나타내는 <see cref="T:System.ComponentModel.Design.IDesigner" />이거나, 부모가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary vsli:raw="Gets the design-time verbs supported by the component that is associated with the designer.">디자이너와 관련된 구성 요소에서 지원하는 디자인 타임 동사를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; objects, or &lt;see langword=&quot;null&quot; /&gt; if no designer verbs are available. This default implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> 개체의 <see cref="T:System.ComponentModel.Design.DesignerVerb" />이거나, 사용할 수 있는 디자이너 동사가 없는 경우 <see langword="null" />입니다. 기본 구현은 항상 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary vsli:raw="Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.">상속된 기본값이나 특정 속성에 할당된 값을 재정의해야 하는 숨김 속성의 컬렉션을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a property matching the specified name exists in the collection.">지정된 이름과 일치하는 속성이 컬렉션에 있는지 여부를 나타냅니다.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for in the collection.">컬렉션에서 검사할 속성의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">속성이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the object at the specified index.">지정된 인덱스에서 개체를 가져오거나 설정합니다.</summary>
      <param name="propertyName" vsli:raw="The name of the property to access in the collection.">컬렉션에 있는 액세스할 속성의 이름입니다.</param>
      <returns vsli:raw="The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.">컬렉션에 지정된 속성이 있는 경우 해당 속성의 값입니다. 그렇지 않으면 숨겨져 있지 않은 속성의 현재 값에서 해당 값을 검색합니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary vsli:raw="This date time editor is a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; suitable for visually editing &lt;see cref=&quot;T:System.DateTime&quot; /&gt; objects.">이 일시 편집기는 <see cref="T:System.Drawing.Design.UITypeEditor" /> 개체를 시각적으로 편집하기에 적합한 <see cref="T:System.DateTime" />입니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DateTimeEditor&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DateTimeEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.">GetEditorStyle에서 제공된 편집기 스타일을 사용하여 지정된 개체 값을 편집합니다. 필요한 편집 서비스를 얻을 수 있도록 서비스 공급자가 제공됩니다.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">추가 컨텍스트 정보를 제공하는 데 사용할 수 있는 형식 설명자 컨텍스트입니다.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">편집 서비스를 가져오는 데 사용할 수 있는 서비스 공급자 개체입니다.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">편집 중인 값의 인스턴스입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.DateTimeEditor.EditValue*&quot;&gt;&lt;/xref&gt; method. If the method is not supported, this will return None.">
        <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" /> 메서드의 편집 스타일을 검색합니다. 이 메서드가 지원되지 않는 경우에는 None이 반환됩니다.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">추가 컨텍스트 정보를 제공하는 데 사용할 수 있는 형식 설명자 컨텍스트입니다.</param>
      <returns vsli:raw="An &lt;code data-dev-comment-type=&quot;langword&quot;&gt;enum&lt;/code&gt; value indicating the provided editing style.">제공된 편집 스타일을 나타내는 <see langword="enum" /> 값입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary vsli:raw="Represents a static header item on a smart tag panel. This class cannot be inherited.">스마트 태그 패널의 정적 머리글 항목을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name string.">제공된 이름 문자열을 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">머리글에 표시할 텍스트입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name and category strings.">제공된 이름 및 범주 문자열을 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">머리글에 표시할 텍스트입니다.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">패널 항목의 그룹화를 정의하는 대/소문자 구분 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary vsli:raw="Provides the base class for types that represent a panel item on a smart tag panel.">스마트 태그 패널의 패널 항목을 나타내는 형식에 대한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">패널 항목의 그룹화를 정의하는 대/소문자 구분 <see cref="T:System.String" />입니다.</param>
      <param name="description" vsli:raw="Supplemental text for this item, potentially used in ToolTips or the status bar.">이 항목에 대한 추가 텍스트로서 도구 설명이나 상태 표시줄에 사용할 수 있습니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary vsli:raw="Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionItem.Category&quot; /&gt; property value.">동일한 <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> 속성 값을 갖는 항목 그룹에 이 항목을 배치할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item can be grouped; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">항목을 그룹화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary vsli:raw="Gets the group name for an item.">항목에 대한 그룹 이름을 가져옵니다.</summary>
      <returns vsli:raw="A string that represents the group that the item is a member of.">항목이 속한 그룹을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary vsli:raw="Gets the supplemental text for the item.">항목에 대한 추가 텍스트를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the descriptive text for the item.">항목에 대한 설명 텍스트를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary vsli:raw="Gets the text for this item.">이 항목에 대한 텍스트를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the display text for the item.">항목의 표시 텍스트를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary vsli:raw="Gets a reference to a collection that can be used to store programmer-defined key/value pairs.">프로그래머가 정의한 키/값 쌍을 저장하는 데 사용할 수 있는 컬렉션에 대한 참조를 가져옵니다.</summary>
      <returns vsli:raw="A collection that implements &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">
        <see cref="T:System.Collections.IDictionary" />를 구현하는 컬렉션입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary vsli:raw="Gets or sets a value that indicates whether this item appears in source code view.">이 항목이 소스 코드 뷰에 나타나는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this item appears in source code view; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">이 항목이 소스 코드 뷰에 나타나는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to the current collection.">제공된 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />를 현재 컬렉션에 추가합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to add.">추가할 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; index at which the value has been added.">값이 추가된 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 인덱스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains a specific element.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />에 특정 요소가 들어 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" />에서 찾을 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />에 지정된 값이 포함된 경우 <see langword="true" />이고, 그렇지 않은 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">지정한 배열 인덱스부터 현재 컬렉션의 요소를 제공된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">현재 컬렉션에서 복사한 요소의 대상인 1차원 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">컬렉션에 있는 특정 항목의 인덱스를 확인합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the collection.">컬렉션에서 찾을 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />입니다.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;, if found; otherwise, -1.">
        <paramref name="value" />가 있으면 전체 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />에서 맨 처음 발견되는 값의 0부터 시작하는 인덱스이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />의 지정된 인덱스에 요소를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to insert.">삽입할 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" />에서 제거할 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">요소의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; at the specified index.">지정한 인덱스에 있는 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary vsli:raw="Provides the base class for types that define a list of items used to create a smart tag panel.">스마트 태그 패널을 만드는 데 사용되는 항목의 목록을 정의하는 형식에 대한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="component" vsli:raw="A component related to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />와 관련된 구성 요소입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the component associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />와 연결된 구성 요소가 제공한 서비스를 나타내는 개체를 반환합니다.</summary>
      <param name="serviceType" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Component" />에서 제공하는 서비스입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;. This value is &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">
        <see cref="T:System.Object" />에서 제공하는 서비스를 나타내는 <see cref="T:System.ComponentModel.Component" />입니다. <see cref="T:System.ComponentModel.Component" />가 지정된 서비스를 제공하지 않으면 이 값이 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary vsli:raw="Returns the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects contained in the list.">이 목록에 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 개체의 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that contains the items in this list.">이 목록의 항목을 포함하는 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 배열입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary vsli:raw="Gets or sets a value indicating whether the smart tag panel should automatically be displayed when it is created.">스마트 태그 패널이 만들어졌을 때 자동으로 표시될지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the panel should be shown when the owning component is created; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">해당 구성 요소가 만들어졌을 때 패널을 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary vsli:raw="Gets the component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />와 관련된 구성 요소를 가져옵니다.</summary>
      <returns vsli:raw="A component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />와 관련된 구성 요소입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with default settings.">기본 설정을 포함하는 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with the specified panel items.">지정한 패널 항목을 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to populate the collection.">컬렉션을 채울 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection.">제공된 <see cref="T:System.ComponentModel.Design.DesignerActionList" />를 현재 컬렉션에 추가합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to add.">추가할 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <returns vsli:raw="The position into which the new element is inserted into the collection's internal list.">컬렉션의 내부 목록에 새 요소가 삽입되는 위치입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; array to the end of the current collection.">제공된 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 배열의 요소를 현재 컬렉션의 끝에 추가합니다.</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to add.">추가할 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the end of the current collection.">제공된 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />의 요소를 현재 컬렉션의 끝에 추가합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to add.">추가할 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Indicates whether the collection contains a specific value.">특정 값이 컬렉션에 포함되는지 여부를 나타냅니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to search for.">검색할 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 지정한 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">지정한 배열 인덱스부터 현재 컬렉션의 요소를 제공된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional array of type &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">현재 컬렉션에서 복사된 요소의 대상인 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 형식의 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> 가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the current collection is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">
        <paramref name="array" />가 다차원 배열인 경우  
  
또는 
현재 컬렉션의 요소 수가 <paramref name="index" />에서 대상 배열 끝까지 사용 가능한 공간보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A problem occurred casting the elements of the current collection to the type of the destination array, perhaps as the result of a failed downcast.">다운캐스팅 실패로 인해 대상 배열의 형식에 현재 컬렉션의 요소를 캐스팅하는 동안 문제가 발생한 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">컬렉션에 있는 특정 항목의 인덱스를 확인합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to locate in the collection.">컬렉션에서 찾을 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the internal list; otherwise, -1.">내부 목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Inserts the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; into the collection at the specified position.">제공된 <see cref="T:System.ComponentModel.Design.DesignerActionList" />를 컬렉션의 지정된 위치에 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to insert into the collection.">컬렉션에 삽입할 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the count of elements in the current collection.">
        <paramref name="index" />가 0보다 작거나 현재 컬렉션의 요소 수보다 큰 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">값의 유효성을 검사할 때 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="value" vsli:raw="The object to validate.">유효성을 검사할 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the first occurrence of a specific &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; from the collection.">컬렉션에서 맨 처음 발견되는 특정 <see cref="T:System.ComponentModel.Design.DesignerActionList" />를 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to remove from the current collection.">현재 컬렉션에서 제거할 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">요소의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; at the specified index.">지정한 인덱스에 있는 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the collection.">컬렉션과 연결된 개체입니다.</param>
      <param name="changeType" vsli:raw="A value that specifies whether a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; has been added or removed from the collection.">컬렉션에서 <see cref="T:System.ComponentModel.Design.DesignerActionList" />가 추가되었는지 또는 제거되었는지 여부를 지정하는 값입니다.</param>
      <param name="actionLists" vsli:raw="The collection of list elements after the action has been applied.">작업이 적용된 후 목록 요소의 컬렉션입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects associated with this event.">이 이벤트와 연결된 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that represents the current state of the collection.">컬렉션의 현재 상태를 나타내는 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether an element has been added or removed from the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체의 컬렉션에서 요소가 추가되었는지 또는 제거되었는지 여부를 나타내는 플래그를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedType&quot; /&gt; that indicates the type of change.">변경 형식을 나타내는 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체의 컬렉션과 연결된 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the managed &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt;.">관리되는 <see cref="T:System.Object" />과 연결된 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt;. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />의 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 이벤트를 처리할 메서드를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary vsli:raw="Specifies the type of change occurring in a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체의 컬렉션에서 발생하는 변경 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been added to the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체가 컬렉션에 하나 이상 추가되었습니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been removed from the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체가 컬렉션에서 하나 이상 제거되었습니다.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary vsli:raw="Represents a smart tag panel item that is associated with a method in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />에서 파생된 클래스의 메서드에 연결된 스마트 태그 패널 항목을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names.">지정된 메서드 이름과 표시 이름을 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">이 항목과 연결된 메서드가 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />에서 파생된 클래스에 속한 메서드의 대/소문자 구분 이름으로, 이 메서드는 패널 항목을 통해 호출됩니다.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names, and a flag that indicates whether the item should appear in other user interface contexts.">지정된 메서드 이름과 표시 이름, 그리고 다른 사용자 인터페이스 컨텍스트에 해당 항목을 표시할지 여부를 나타내는 플래그를 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">이 항목과 연결된 메서드가 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />에서 파생된 클래스에 속한 메서드의 대/소문자 구분 이름으로, 이 메서드는 패널 항목을 통해 호출됩니다.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb.">연결된 메서드를 디자이너 동사로도 처리할지 여부를 지정하는 플래그입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names.">지정된 메서드 이름, 표시 이름 및 범주 이름을 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">이 항목과 연결된 메서드가 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />에서 파생된 클래스에 속한 메서드의 대/소문자 구분 이름으로, 이 메서드는 패널 항목을 통해 호출됩니다.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">패널에 있는 비슷한 항목들을 그룹화하는 데 사용되는 대/소문자 구분 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names, and a flag that indicates whether the item should appear in other user interface contexts.">지정된 메서드 이름, 표시 이름, 범주 이름, 그리고 다른 사용자 인터페이스 컨텍스트에 해당 항목을 표시할지 여부를 나타내는 플래그를 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">이 항목과 연결된 메서드가 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />에서 파생된 클래스에 속한 메서드의 대/소문자 구분 이름으로, 이 메서드는 패널 항목을 통해 호출됩니다.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">패널에 있는 비슷한 항목들을 그룹화하는 데 사용되는 대/소문자 구분 <see cref="T:System.String" />입니다.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">연결된 메서드를 연결된 구성 요소에 대한 디자이너 동사로도 처리할지 여부를 지정하는 플래그입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, and display and description text.">지정된 메서드 이름, 범주 이름, 표시 텍스트 및 설명 텍스트를 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">이 항목과 연결된 메서드가 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />에서 파생된 클래스에 속한 메서드의 대/소문자 구분 이름으로, 이 메서드는 패널 항목을 통해 호출됩니다.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">패널에 있는 비슷한 항목들을 그룹화하는 데 사용되는 대/소문자 구분 <see cref="T:System.String" />입니다.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">이 항목에 대한 추가 텍스트로서 도구 설명이나 상태 표시줄에 사용됩니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, display and description text, and a flag that indicates whether the item should appear in other user interface contexts.">지정된 메서드 이름, 범주 이름, 표시 텍스트, 설명 텍스트, 그리고 다른 사용자 인터페이스 컨텍스트에 해당 항목을 표시할지 여부를 나타내는 플래그를 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">이 항목과 연결된 메서드가 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />에서 파생된 클래스에 속한 메서드의 대/소문자 구분 이름으로, 이 메서드는 패널 항목을 통해 호출됩니다.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">패널에 있는 비슷한 항목들을 그룹화하는 데 사용되는 대/소문자 구분 <see cref="T:System.String" />입니다.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">이 항목에 대한 추가 텍스트로서 도구 설명이나 상태 표시줄에 사용됩니다.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">연결된 메서드를 연결된 구성 요소에 대한 디자이너 동사로도 처리할지 여부를 지정하는 플래그입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary vsli:raw="Programmatically executes the method associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />에 연결된 메서드를 프로그래밍 방식으로 실행합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The method, named in &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName&quot; /&gt; cannot be found.">
        <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />에 이름이 지정된 메서드를 찾을 수 없는 경우</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary vsli:raw="Gets a value that indicates the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; should appear in other user interface contexts.">다른 사용자 인터페이스 컨텍스트에 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />을 표시할지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is to be used in shortcut menus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">바로 가기 메뉴에 이 항목을 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary vsli:raw="Gets the name of the method that this &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; is associated with.">이 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />에 연결된 메서드의 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated method.">연결된 메서드의 이름을 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; objects to the current panel.">현재 패널에 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 개체를 제공하는 구성 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies items.">개체를 제공하는 구성 요소이며, 항목을 제공하는 연결된 디자이너가 있어야 합니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary vsli:raw="Represents a panel item that is associated with a property in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;. This class cannot be inherited.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />에서 파생된 클래스의 속성과 연결된 패널 항목을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and display names.">지정된 속성 이름과 표시 이름을 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">이 패널 항목에 연결된 속성의 이름이며 대/소문자를 구분합니다.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display text.">지정된 속성 이름, 범주 이름 및 표시 텍스트를 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">이 패널 항목에 연결된 속성의 이름이며 대/소문자를 구분합니다.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">패널에 있는 비슷한 항목들을 그룹화하는 데 사용되는 대/소문자 구분 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display and description text.">지정된 속성 이름, 범주 이름, 표시 텍스트 및 설명 텍스트를 사용하여 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">이 패널 항목에 연결된 속성의 이름이며 대/소문자를 구분합니다.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">패널에 있는 비슷한 항목들을 그룹화하는 데 사용되는 대/소문자 구분 <see cref="T:System.String" />입니다.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">이 항목에 대한 추가 텍스트로서 도구 설명이나 상태 표시줄에 사용됩니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary vsli:raw="Gets the name of the property that this item is associated with.">이 항목이 연결된 속성의 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated property.">연결된 속성의 이름을 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its items to the current panel.">현재 패널에 항목을 제공하는 구성 요소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">항목을 제공하는 구성 요소이며, <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 개체를 제공하는 연결된 디자이너가 있어야 합니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary vsli:raw="Establishes a design-time service that manages the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects for components.">구성 요소의 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 개체 컬렉션을 관리하는 디자인 타임 서비스를 설정합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; is removed or added for any component.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />가 구성 요소에 대해 제거되거나 추가되면 발생합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serviceProvider" vsli:raw="The service provider for the current design-time environment.">현재 디자인 타임 환경의 서비스 공급자입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection of managed smart tags.">관리되는 스마트 태그의 현재 컬렉션에 <see cref="T:System.ComponentModel.Design.DesignerActionList" />를 추가합니다.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">스마트 태그에 연결할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the new smart tag items to be added.">추가할 새 스마트 태그 항목이 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the current collection of managed smart tags.">관리되는 스마트 태그의 현재 컬렉션에 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />를 추가합니다.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">스마트 태그에 연결할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
      <param name="designerActionListCollection" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the new smart tag items to be added.">추가할 새 스마트 태그 항목이 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary vsli:raw="Releases all components from management and clears all push-model smart tag lists.">모든 구성 요소의 관리를 해제하고 밀어넣기 모델 스마트 태그 목록을 모두 지웁니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary vsli:raw="Determines whether the current smart tag service manages the action lists for the specified component.">현재 스마트 태그 서비스가 특정 구성 요소의 작업 목록을 관리하는지 여부를 확인합니다.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to search for.">검색할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is managed by the current service; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 서비스에서 구성 요소를 관리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 클래스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.ComponentModel.Design.DesignerActionService" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary vsli:raw="Returns the collection of smart tag item lists associated with a component.">구성 요소에 연결된 스마트 태그 항목 목록의 컬렉션을 반환합니다.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">스마트 태그에 연결된 구성 요소입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="The collection of smart tags for the specified component.">지정된 구성 요소에 대한 스마트 태그의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <summary vsli:raw="Returns the collection of designer action item lists of the specified type associated with a component.">구성 요소와 연결 된 지정 된 형식의 디자이너 작업 항목 목록 컬렉션을 반환 합니다.</summary>
      <param name="component" vsli:raw="The component that the DesignerActions are associated with.">DesignerActions가 연결 된 구성 요소입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentActionsType&quot; /&gt; to filter the associated designer actions with.">
        <see cref="T:System.ComponentModel.Design.ComponentActionsType" />연결 된 디자이너 작업을 필터링 하는 데 사용 하는입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="The collection of designer actions of the specified type for the specified component.">지정 된 구성 요소에 대해 지정 된 형식의 디자이너 작업 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the pull-model smart tags associated with a component.">구성 요소에 연결된 끌어오기 모델 스마트 태그를 검색합니다.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">스마트 태그에 연결된 구성 요소입니다.</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">연결된 스마트 태그를 추가할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the push-model smart tags associated with a component.">구성 요소에 연결된 밀어넣기 모델 스마트 태그를 검색합니다.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">스마트 태그에 연결된 구성 요소입니다.</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">연결된 스마트 태그를 추가할 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from all components managed by the current service.">현재 서비스에서 관리하는 모든 구성 요소에서 특정 스마트 태그 목록을 제거합니다.</summary>
      <param name="actionList" vsli:raw="The list of smart tags to be removed.">제거할 스마트 태그 목록입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;actionList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actionList" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes all the smart tag lists associated with the specified component.">지정된 구성 요소에 연결된 모든 스마트 태그 목록을 제거합니다.</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">스마트 태그를 분리할 구성 요소입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from the specified component.">특정 구성 요소에서 특정 스마트 태그 목록을 제거합니다.</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">스마트 태그를 분리할 구성 요소입니다.</param>
      <param name="actionList" vsli:raw="The smart tag list to remove.">제거할 스마트 태그 목록입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary vsli:raw="Represents a static text item on a smart tag panel.">스마트 태그 패널의 정적 텍스트 항목을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionTextItem&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">이 항목에 대한 패널 텍스트입니다.</param>
      <param name="category" vsli:raw="The category used to group similar items on the panel.">패널의 비슷한 항목을 그룹화하는 데 사용되는 범주입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary vsli:raw="Manages the user interface (UI) for a smart tag panel. This class cannot be inherited.">스마트 태그 패널에 대한 UI(사용자 인터페이스)를 관리합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary vsli:raw="Occurs when a request is made to show or hide a smart tag panel.">스마트 태그 패널을 표시하거나 숨기도록 요청되면 발생합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> 클래스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Hides the smart tag panel for a component.">구성 요소에 대한 스마트 태그 패널을 숨깁니다.</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be hidden.">스마트 태그 패널을 숨길 구성 요소입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary vsli:raw="Updates the smart tag panel.">스마트 태그 패널을 업데이트합니다.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to refresh.">새로 고칠 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to automatically show the smart tag panel.">스마트 태그 패널을 자동으로 표시할지 여부를 나타냅니다.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to automatically show.">자동으로 표시할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically show the smart tag panel; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">스마트 태그 패널을 자동으로 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Displays the smart tag panel for a component.">구성 요소에 대한 스마트 태그 패널을 표시합니다.</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be displayed.">스마트 태그 패널을 표시할 구성 요소입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the panel.">패널과 연결된 개체입니다.</param>
      <param name="changeType" vsli:raw="A value that specifies whether the panel is being displayed or hidden.">패널이 표시되어 있는지 또는 숨겨져 있는지 지정하는 값입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether the smart tag panel is being displayed or hidden.">스마트 태그 패널이 표시되어 있는지 또는 숨겨져 있는지 나타내는 플래그를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeType&quot; /&gt; that indicates the state of the panel.">패널 상태를 나타내는 <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the smart tag panel.">스마트 태그 패널과 연결된 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the smart tag panel.">스마트 태그 패널과 연결된 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt;.">
        <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />의 <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that raised the event.">이벤트를 발생시킨 <see cref="T:System.Object" />입니다.</param>
      <param name="e" vsli:raw="The event-specific information.">이벤트 관련 정보입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary vsli:raw="Specifies the display state of a smart tag panel.">스마트 태그 패널의 표시 상태를 지정합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary vsli:raw="The smart tag panel is being hidden.">스마트 태그 패널이 숨겨져 있습니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary vsli:raw="The smart tag panel is being refreshed.">스마트 태그 패널을 새로 고치고 있습니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary vsli:raw="The smart tag panel is being displayed.">스마트 태그 패널이 표시되어 있습니다.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary vsli:raw="Represents a base class for design-time tools, not derived from &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;, that provide smart tag or designer verb capabilities.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" />에서 파생되지 않고 스마트 태그나 디자이너 동사 기능을 제공하는 디자인 타임 도구의 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerCommandSet&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignerCommandSet" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary vsli:raw="Returns a collection of command objects.">명령 개체의 컬렉션을 반환합니다.</summary>
      <param name="name" vsli:raw="The type of collection to return, indicating either a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; or a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt;.">반환할 컬렉션의 형식이며 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 또는 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />을 나타냅니다.</param>
      <returns vsli:raw="A collection that contains the specified type - either &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; or &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; - of command objects. The base implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">명령 개체의 지정된 형식(<see cref="T:System.ComponentModel.Design.DesignerActionList" /> 또는 <see cref="T:System.ComponentModel.Design.DesignerVerb" />)을 포함하는 컬렉션입니다. 기본 구현은 항상 <see langword="null" />를 반환합니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary vsli:raw="Gets the collection of all the smart tags associated with the designed component.">디자인된 구성 요소에 연결된 모든 스마트 태그의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the smart tags for the associated designed component.">연결되어 있는 디자인된 구성 요소의 스마트 태그가 있는 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary vsli:raw="Gets the collection of all the designer verbs associated with the designed component.">디자인된 구성 요소에 연결된 모든 디자이너 동사의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; that contains the designer verbs for the associated designed component.">연결되어 있는 디자인된 구성 요소의 디자이너 동사가 있는 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary vsli:raw="Presents a user interface for designing components.">구성 요소를 디자인하기 위한 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary vsli:raw="Occurs when the design surface is disposed.">디자인 화면이 삭제되면 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary vsli:raw="Occurs when a call is made to the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurface.Flush&quot; /&gt; method of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" />의 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 메서드가 호출되면 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary vsli:raw="Occurs when the designer load has completed.">디자이너 로드가 완료되면 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary vsli:raw="Occurs when the designer is about to be loaded.">디자이너가 로드되려고 할 때 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary vsli:raw="Occurs when a designer has finished unloading.">디자이너가 언로드를 완료하면 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary vsli:raw="Occurs when a designer is about to unload.">디자이너가 언로드되려고 할 때 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerHost.Activate&quot; /&gt; method has been called on &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> 메서드가 <see cref="T:System.ComponentModel.Design.IDesignerHost" />에서 호출되면 발생합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">부모 서비스 공급자이거나, 서비스 확인에 사용되는 부모가 없으면 <see langword="null" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">부모 서비스 공급자이거나, 서비스 확인에 사용되는 부모가 없으면 <see langword="null" />입니다.</param>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">만들 루트 구성 요소의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">만들 루트 구성 요소의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary vsli:raw="Begins the loading process with the given designer loader.">지정된 디자이너 로더를 사용하여 로드 프로세스를 시작합니다.</summary>
      <param name="loader" vsli:raw="The designer loader to use for loading the designer.">디자이너 로드에 사용할 디자이너 로더입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loader" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary vsli:raw="Begins the loading process.">로드 프로세스를 시작합니다.</summary>
      <param name="rootComponentType" vsli:raw="The type of component to create in design mode.">디자인 모드에서 만들 구성 요소의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponentType" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary vsli:raw="Creates an instance of a component.">구성 요소의 인스턴스를 만듭니다.</summary>
      <param name="componentType" vsli:raw="The type of component to create.">만들 구성 요소의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;componentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="componentType" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
      <returns vsli:raw="The newly created component.">새로 만들어진 구성 요소입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Creates a designer when a component is added to the container.">구성 요소가 컨테이너에 추가되면 디자이너를 만듭니다.</summary>
      <param name="component" vsli:raw="The component for which the designer should be created.">디자이너가 만들어질 구성 요소입니다.</param>
      <param name="rootDesigner" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a root designer; &lt;see langword=&quot;false&quot; /&gt; to create a normal designer.">루트 디자이너를 만들려면 <see langword="true" />이고, 일반 디자이너를 만들려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
      <returns vsli:raw="An instance of the requested designer, or &lt;see langword=&quot;null&quot; /&gt; if no matching designer could be found.">요청한 디자이너의 인스턴스이거나, 일치하는 디자이너를 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary vsli:raw="Creates an instance of the given type.">지정된 형식의 인스턴스를 만듭니다.</summary>
      <param name="type" vsli:raw="The type to create.">만들 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
      <returns vsli:raw="The newly created object.">새로 만든 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">중첩 컨트롤 또는 구성 요소에 적합한 컨테이너를 만듭니다.</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">중첩된 컨테이너를 관리하는 구성 요소입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
      <returns vsli:raw="The nested container.">중첩된 컨테이너입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">중첩 컨트롤 또는 구성 요소에 적합한 컨테이너를 만듭니다.</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">중첩된 컨테이너를 관리하는 구성 요소입니다.</param>
      <param name="containerName" vsli:raw="An additional name for the nested container.">중첩된 컨테이너의 추가 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
      <returns vsli:raw="The nested container.">중첩된 컨테이너입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" />에서 사용하는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" />에서 사용하는 리소스를 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary vsli:raw="Serializes changes to the design surface.">디자인 화면의 변경 내용을 serialize합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary vsli:raw="Gets a service from the service container.">서비스 컨테이너에서 서비스를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">검색할 서비스의 형식입니다.</param>
      <returns vsli:raw="An object that implements, or is a derived class of, &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">
        <paramref name="serviceType" />을 구현하는 개체이거나 해당 항목의 파생 클래스가 되는 개체입니다. 서비스 컨테이너에 서비스가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loading&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloaded&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloading&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.ViewActivated&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">디자인 화면 내의 <see cref="T:System.ComponentModel.IContainer" /> 구현을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">디자인 화면 내의 <see cref="T:System.ComponentModel.IContainer" /> 구현입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary vsli:raw="Gets a value indicating whether the Design-time Error List is loading.">디자인 타임 오류 목록이 로드되고 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Design-time Error List is loading; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 경우는 디자인 타임 오류 목록 이 고, 그렇지 않으면 로드 <see langword="false" />합니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary vsli:raw="Gets a value indicating whether the design surface is currently loaded.">디자인 화면이 현재 로드되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the design surface is currently loaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">디자인 화면이 현재 로드되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary vsli:raw="Returns a collection of loading errors or a void collection.">로드 오류의 컬렉션이나 void 컬렉션을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of loading errors.">로드 오류의 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary vsli:raw="Gets the service container.">서비스 컨테이너를 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
      <returns vsli:raw="The service container that provides all services to designers contained within the design surface.">디자인 화면에 포함된 디자이너에 모든 서비스를 제공하는 서비스 컨테이너입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary vsli:raw="Gets the view for the root designer.">루트 디자이너에 대한 뷰를 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">디자인 화면이 로드되고 있지 않거나, 디자이너 로더가 아직 루트 디자이너를 만들지 않았거나, 디자인 화면이 로드를 완료했지만 실패한 경우. 자세한 내용은 <see cref="P:System.Exception.InnerException" />을 참조하십시오.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The designer loaded, but it does not offer a view compatible with this design surface.">디자이너가 로드되었지만 이 디자인 화면과 호환되는 뷰를 제공하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />에 연결된 <see cref="T:System.ComponentModel.Design.DesignSurface" />가 삭제된 경우</exception>
      <returns vsli:raw="The view for the root designer.">루트 디자이너에 대한 뷰입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary vsli:raw="Contains a collection of design surfaces. This class cannot be inherited.">디자인 화면의 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary vsli:raw="Copies the collection members to the specified &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; array beginning at the specified destination index.">지정된 대상 인덱스에서 시작하는 지정된 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 배열에 컬렉션 멤버를 복사합니다.</summary>
      <param name="array" vsli:raw="The array to copy collection members to.">컬렉션 멤버를 복사할 배열입니다.</param>
      <param name="index" vsli:raw="The destination index to begin copying to.">복사를 시작할 대상 인덱스입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 인스턴스에서 반복할 수 있는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 인스턴스에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> 메서드를 참조하세요.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />에서 복사된 값의 대상인 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">복사를 시작할 <paramref name="array" />의 인덱스입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 메서드를 참조하세요.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 인스턴스에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary vsli:raw="Gets the total number of design surfaces in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />의 총 디자인 화면 수를 가져옵니다.</summary>
      <returns vsli:raw="The total number of elements in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />의 총 요소 수입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the design surface at the specified index.">지정된 인덱스에 있는 디자인 화면을 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the design surface to return.">반환할 디자인 화면의 인덱스입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The design surface specified by &lt;paramref name=&quot;index&quot; /&gt; is not supported.">
        <paramref name="index" />에 의해 지정된 디자인 화면이 지원되지 않는 경우</exception>
      <returns vsli:raw="The design surface at the specified index.">지정된 인덱스에 있는 디자인 화면입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt; property.">이 멤버에 대한 설명을 보려면 <see cref="P:System.Collections.ICollection.Count" /> 속성을 참조하세요.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />에 포함된 요소의 수입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt; property.">이 멤버에 대한 설명을 보려면 <see cref="P:System.Collections.ICollection.IsSynchronized" /> 속성을 참조하세요.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt; property.">이 멤버에 대한 설명을 보려면 <see cref="P:System.Collections.ICollection.SyncRoot" /> 속성을 참조하세요.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="surface" vsli:raw="The design surface that is being created.">만들고 있는 디자인 화면입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;surface&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="surface" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary vsli:raw="Gets the design surface that is being created.">만들고 있는 디자인 화면을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is being created.">만들고 있는 <see cref="T:System.ComponentModel.Design.DesignSurface" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> 클래스의 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 이벤트를 처리할 메서드를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary vsli:raw="Manages a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> 개체의 컬렉션을 관리합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary vsli:raw="Occurs when the currently active designer changes.">현재 활성 디자이너가 변경되면 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary vsli:raw="Occurs when a designer is created.">디자이너가 만들어지면 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary vsli:raw="Occurs when a designer is disposed.">디자이너가 삭제되면 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary vsli:raw="Occurs when the global selection changes.">전역 선택이 변경되면 발생합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parentProvider" vsli:raw="A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.">부모 서비스 공급자입니다. 디자인 화면 관리자가 서비스 요청을 확인할 수 없을 경우 이 공급자로 서비스 요청이 전달됩니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary vsli:raw="Creates an instance of a design surface.">디자인 화면의 인스턴스를 만듭니다.</summary>
      <returns vsli:raw="A new design surface instance.">새로운 디자인 화면 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary vsli:raw="Creates an instance of a design surface.">디자인 화면의 인스턴스를 만듭니다.</summary>
      <param name="parentProvider" vsli:raw="A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)&quot; /&gt; method.">부모 서비스 공급자입니다. 먼저 이 공급자에게 서비스를 요청한 후 디자인 화면 관리자 개체에 오류를 위임하는 병합된 서비스 공급자가 새로 만들어집니다. 이 병합된 공급자는 <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> 메서드에 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;parentProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="parentProvider" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A new design surface instance.">새로운 디자인 화면 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary vsli:raw="Implementation that creates the design surface.">디자인 화면을 만드는 구현입니다.</summary>
      <param name="parentProvider" vsli:raw="A service provider to pass to the design surface. This is either an instance of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; or an object that implements &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;, and represents a merge between the service provider of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class and an externally passed provider.">디자인 화면에 전달할 서비스 공급자입니다. <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />의 인스턴스이거나 <see cref="T:System.IServiceProvider" />를 구현하는 개체이며, <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 서비스 공급자와 외부에서 전달된 공급자 사이의 병합을 나타냅니다.</param>
      <returns vsli:raw="A new design surface instance.">새로운 디자인 화면 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />에서 사용하는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary vsli:raw="Gets a service in the design surface manager's service container.">디자인 화면 관리자의 서비스 컨테이너에 있는 서비스를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The service type to retrieve.">검색할 서비스 형식입니다.</param>
      <returns vsli:raw="An object that implements, or is a derived class of, the given service type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">제공된 서비스 형식을 구현하거나 이 서비스 형식의 파생 클래스인 개체입니다. 서비스 컨테이너에 서비스가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary vsli:raw="Gets or sets the active designer.">활성화된 디자이너를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The active designer.">활성화된 디자이너입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary vsli:raw="Gets a collection of design surfaces.">디자인 화면 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of design surfaces that are currently hosted by the design surface manager.">현재 디자인 화면 관리자에서 호스팅하는 디자인 화면 컬렉션입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary vsli:raw="Gets the design surface manager's &lt;see cref=&quot;P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer&quot; /&gt;.">디자인 화면 관리자의 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />를 가져옵니다.</summary>
      <returns vsli:raw="The design surface manager's &lt;see cref=&quot;P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer&quot; /&gt;.">디자인 화면 관리자의 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary vsli:raw="Defines identifiers that indicate the display modes used by &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ByteViewer" />에서 사용한 디스플레이 모드를 나타내는 식별자를 정의합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary vsli:raw="An ANSI format display.">ANSI 형식 디스플레이입니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary vsli:raw="A display mode that automatically selects a display mode. In this mode, the bytes are examined to determine if they are hexadecimal or printable. If the bytes are in hexadecimal format, the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Hexdump&quot; /&gt; mode is selected. If the characters match a printable character set, a test is run to automatically select either the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Ansi&quot; /&gt; or &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Unicode&quot; /&gt; display mode.">자동으로 디스플레이 모드를 선택하는 디스플레이 모드입니다. 이 모드에서는 바이트가 16진수이거나 인쇄할 수 있는지 여부를 확인하기 위해 바이트를 검사합니다. 바이트가 16진수 형식이면 <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> 모드가 선택됩니다. 문자가 인쇄할 수 있는 문자 집합과 일치하면 <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> 또는 <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" /> 디스플레이 모드를 자동으로 선택하는 테스트가 실행됩니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary vsli:raw="A hexadecimal format display.">16진수 형식 디스플레이입니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary vsli:raw="A Unicode format display.">유니코드 형식 디스플레이입니다.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary vsli:raw="A default implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; interface.">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> 인터페이스의 기본 구현입니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.EventBindingService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.EventBindingService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider" vsli:raw="The service provider from which &lt;see cref=&quot;T:System.ComponentModel.Design.EventBindingService&quot; /&gt; will query for services.">
        <see cref="T:System.ComponentModel.Design.EventBindingService" />가 서비스를 쿼리할 서비스 공급자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Creates a unique method name.">고유한 메서드 이름을 만듭니다.</summary>
      <param name="component" vsli:raw="The component for which the method name will be created.">메서드 이름을 만들 구성 요소입니다.</param>
      <param name="e" vsli:raw="The event to create a name for.">이름을 만들 이벤트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; or &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> 또는 <paramref name="e" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The unique method name.">고유한 메서드 이름입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Provides a notification that a particular method is no longer being used by an event handler.">이벤트 처리기에서 특정 메서드를 더 이상 사용하지 않는다는 알림을 제공합니다.</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">메서드가 바인딩될 구성 요소입니다.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">이벤트 처리기에 대한 <see cref="T:System.ComponentModel.EventDescriptor" />입니다.</param>
      <param name="methodName" vsli:raw="The name of the method to be freed.">해제할 메서드 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Returns a collection of names of compatible methods.">호환되는 메서드의 이름 컬렉션을 반환합니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; containing the compatible delegate.">호환되는 대리자가 포함된 <see cref="T:System.ComponentModel.EventDescriptor" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A collection of strings that are names of compatible methods.">호환되는 메서드의 이름인 문자열의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service from the service provider.">서비스 공급자에서 요청한 서비스를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">검색할 서비스의 형식입니다.</param>
      <returns vsli:raw="A reference to the service specified by &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not available.">
        <paramref name="serviceType" />에 의해 지정된 서비스에 대한 참조이거나, 요청한 서비스를 사용할 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary vsli:raw="Displays user code.">사용자 코드를 표시합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">코드를 표시할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Displays the user code for the specified method.">지정된 메서드에 대한 사용자 코드를 표시합니다.</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">메서드가 바인딩될 구성 요소입니다.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">이벤트 처리기에 대한 <see cref="T:System.ComponentModel.EventDescriptor" />입니다.</param>
      <param name="methodName" vsli:raw="The name of the method for which to display code.">코드를 표시할 메서드의 이름입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">코드를 표시할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary vsli:raw="Displays the user code at the given line number.">제공된 줄 번호에 있는 사용자 코드를 표시합니다.</summary>
      <param name="lineNumber" vsli:raw="The line number to show.">표시할 줄 번호입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">코드를 표시할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Creates a unique name for an event-handler method for the specified component and event.">지정된 구성 요소와 이벤트에 대한 이벤트 처리기 메서드의 고유 이름을 만듭니다.</summary>
      <param name="component" vsli:raw="The component instance the event is connected to.">이벤트가 연결된 구성 요소 인스턴스입니다.</param>
      <param name="e" vsli:raw="The event to create a name for.">이름을 만들 이벤트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; or &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> 또는 <paramref name="e" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The recommended name for the event-handler method for this event.">이 이벤트에 대한 이벤트 처리기의 권장 이름입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Gets a collection of event-handler methods that have a method signature compatible with the specified event.">지정된 이벤트와 호환되는 메서드 시그니처를 가진 이벤트 처리기 메서드의 컬렉션을 가져옵니다.</summary>
      <param name="e" vsli:raw="The event to get the compatible event-handler methods for.">호환되는 이벤트 처리기 메서드를 가져올 이벤트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A collection of strings that are names of compatible methods.">호환되는 메서드의 이름인 문자열의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event that the specified property descriptor represents, if it represents an event.">이벤트를 표시하는 경우 지정된 속성 설명자가 표시하는 이벤트에 대한 <see cref="T:System.ComponentModel.EventDescriptor" />를 가져옵니다.</summary>
      <param name="property" vsli:raw="The property that represents an event.">이벤트를 표시하는 속성입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event that the property represents, or &lt;see langword=&quot;null&quot; /&gt; if the property does not represent an event.">속성이 표시하는 이벤트에 대한 <see cref="T:System.ComponentModel.EventDescriptor" />이거나, 속성이 이벤트를 표시하지 않는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary vsli:raw="Converts a set of event descriptors to a set of property descriptors.">일련의 이벤트 설명자를 일련의 속성 설명자로 변환합니다.</summary>
      <param name="events" vsli:raw="The events to convert to properties.">속성으로 변환할 이벤트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;events&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="events" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that describe the event set.">이벤트 집합을 설명하는 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Converts a single event descriptor to a property descriptor.">단일 이벤트 설명자를 속성 설명자로 변환합니다.</summary>
      <param name="e" vsli:raw="The event to convert.">변환할 이벤트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that describes the event.">이벤트를 설명하는 <see cref="T:System.ComponentModel.PropertyDescriptor" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary vsli:raw="Displays the user code for the designer.">디자이너에 대한 사용자 코드를 표시합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">코드가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Displays the user code for the specified event.">지정된 이벤트에 대한 사용자 코드를 표시합니다.</summary>
      <param name="component" vsli:raw="The component that the event is connected to.">이벤트가 연결된 구성 요소입니다.</param>
      <param name="e" vsli:raw="The event to display.">표시할 이벤트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;events&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="events" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">코드가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary vsli:raw="Displays the user code for the designer at the specified line.">지정된 줄에서 디자이너에 대한 사용자 코드를 표시합니다.</summary>
      <param name="lineNumber" vsli:raw="The line number to place the caret on.">캐럿을 놓을 줄 번호입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">코드가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Provides a notification that a particular method is being used by an event handler.">이벤트 처리기에서 특정 메서드를 사용하고 있다는 알림을 제공합니다.</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">메서드가 바인딩될 구성 요소입니다.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">이벤트 처리기에 대한 <see cref="T:System.ComponentModel.EventDescriptor" />입니다.</param>
      <param name="methodName" vsli:raw="The name of the method.">메서드의 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary vsli:raw="Validates that the provided method name is valid for the language or script being used.">제공된 메서드 이름이 사용 중인 언어나 스크립트에 유효한지 검사합니다.</summary>
      <param name="methodName" vsli:raw="The method name to validate.">유효성을 검사할 메서드 이름입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary vsli:raw="Represents the collection of exceptions.">예외의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="exceptions" vsli:raw="An array of type &lt;see cref=&quot;T:System.Exception&quot; /&gt;, containing the objects to populate the collection.">컬렉션을 채울 개체를 포함하는 <see cref="T:System.Exception" /> 형식의 배열입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 serialize하는 데 필요한 데이터로 <see cref="T:System.ComponentModel.Design.ExceptionCollection" />를 채웁니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary vsli:raw="Gets the array of &lt;see cref=&quot;T:System.Exception&quot; /&gt; objects that represent the collection of exceptions.">예외의 컬렉션을 나타내는 <see cref="T:System.Exception" /> 개체의 배열을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; array that represent the collection of exceptions.">예외의 컬렉션을 나타내는 <see cref="T:System.Exception" /> 배열입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary vsli:raw="Defines multi-target type name resolution services in a design-time environment.">디자인 타임 환경에서 다중 대상 형식 이름 확인 서비스를 정의합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary vsli:raw="Resolves a type for the target framework to an assembly-qualified name.">대상 프레임워크의 형식을 어셈블리 정규화된 이름으로 확인합니다.</summary>
      <param name="type" vsli:raw="The type to resolve.">확인할 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; for &lt;paramref name=&quot;type&quot; /&gt; in the target framework.">대상 프레임워크의 <paramref name="type" />에 대한 <see cref="P:System.Type.AssemblyQualifiedName" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary vsli:raw="Provides a set of methods for identifying inherited components.">상속된 구성 요소를 식별하는 데 사용하는 메서드 집합을 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.InheritanceService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">지정된 구성 요소에 의해 상속된 구성 요소를 <see cref="T:System.ComponentModel.Design.InheritanceService" />에 추가합니다.</summary>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">지정된 컨테이너에 추가하기 위해 상속된 구성 요소를 검색할 구성 요소입니다.</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">상속된 구성 요소를 추가할 컨테이너입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components of the specified type that are inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">지정된 구성 요소에 의해 상속된 지정된 형식의 구성 요소를 <see cref="T:System.ComponentModel.Design.InheritanceService" />에 추가합니다.</summary>
      <param name="type" vsli:raw="The base type to search for.">검색할 기본 형식입니다.</param>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">지정된 컨테이너에 추가하기 위해 상속된 구성 요소를 검색할 구성 요소입니다.</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">상속된 구성 요소를 추가할 컨테이너입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.InheritanceService" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.ComponentModel.Design.InheritanceService" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the inheritance attribute of the specified component.">지정된 구성 요소의 상속 특성을 가져옵니다.</summary>
      <param name="component" vsli:raw="The component to retrieve the inheritance attribute for.">상속 특성을 검색할 구성 요소입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; that describes the level of inheritance that this component comes from.">해당 구성 요소가 만들어진 상속 수준을 설명하는 <see cref="T:System.ComponentModel.InheritanceAttribute" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to ignore the specified member.">지정된 멤버를 무시할지 여부를 나타냅니다.</summary>
      <param name="member" vsli:raw="The member to check. This member is either a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; or a &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;.">확인할 멤버입니다. 이 멤버는 <see cref="T:System.Reflection.FieldInfo" /> 또는 <see cref="T:System.Reflection.MethodInfo" /> 중 하나여야 합니다.</param>
      <param name="component" vsli:raw="The component instance this member is bound to.">이 멤버가 바인딩된 구성 요소 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified member should be included in the set of inherited components; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 구성 요소가 상속된 구성 요소의 집합에 포함되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 이벤트에 대한 데이터를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="succeeded" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">디자이너 로드가 성공적임을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="errors" vsli:raw="A collection of errors that occurred while the designer was loading.">디자이너가 로드되는 동안 발생한 오류의 컬렉션입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary vsli:raw="Gets a collection of errors that occurred while the designer was loading.">디자이너가 로드되는 동안 발생한 오류의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of errors that occurred while the designer was loading.">디자이너가 로드되는 동안 발생한 오류의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary vsli:raw="Gets a value that indicates whether the designer load was successful.">디자이너 로드가 성공했음을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">디자이너 로드가 성공했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class. This class cannot be inherited.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> 클래스의 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 이벤트를 처리할 메서드를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="changeType" vsli:raw="The type of change.">변경 형식입니다.</param>
      <param name="command" vsli:raw="The menu command.">메뉴 명령입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets the type of change that caused &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; to be raised.">
        <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />를 발생시킨 변경 형식을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedType&quot; /&gt; that caused &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; to be raised.">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" />를 발생시킨 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary vsli:raw="Gets the command that was added, removed, or changed.">추가, 제거 또는 변경한 명령을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; that was added, removed, or changed.">추가, 제거 또는 변경된 <see cref="T:System.ComponentModel.Design.MenuCommand" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />의 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 이벤트를 처리할 메서드를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary vsli:raw="Specifies the type of action that occurred to the related object's &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; collection.">관련된 개체의 <see cref="T:System.Windows.Forms.Design.MenuCommands" /> 컬렉션에 발생한 작업의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary vsli:raw="Specifies that one or more command objects were added.">하나 이상의 명령 개체가 추가되었다고 지정합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary vsli:raw="Specifies that one or more commands have changed their status.">하나 이상의 명령 상태가 변경되었다고 지정합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary vsli:raw="Specifies that one or more commands were removed.">하나 이상의 명령이 제거되었다고 지정합니다.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.ComponentModel.Design.IMenuCommandService&quot; /&gt; interface.">
        <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary vsli:raw="Occurs when the status of a menu command has changed.">메뉴 명령 상태가 변경되면 발생합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serviceProvider" vsli:raw="The service provider that this service uses to obtain other services.">이 서비스가 다른 서비스를 가져오는 데 사용하는 서비스 공급자입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Adds a command handler to the menu command service.">메뉴 명령 서비스에 명령 처리기를 추가합니다.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; to add.">추가할 <see cref="T:System.ComponentModel.Design.MenuCommand" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;command&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="command" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A command handler &lt;paramref name=&quot;command&quot; /&gt; already exists.">명령 처리기 <paramref name="command" />가 항상 존재할 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary vsli:raw="Adds a verb to the verb table of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.MenuCommandService" />의 동사 테이블에 동사를 추가합니다.</summary>
      <param name="verb" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; to add.">추가할 <see cref="T:System.ComponentModel.Design.DesignerVerb" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;verb&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="verb" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.MenuCommandService" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.MenuCommandService" />에서 사용하는 모든 리소스를 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary vsli:raw="Ensures that the verb list has been created.">동사 목록이 만들어졌는지 확인합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Searches for the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command ID.">제공된 명령 ID에 연결된 <see cref="T:System.ComponentModel.Design.MenuCommand" />를 검색합니다.</summary>
      <param name="commandID" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; to find.">찾을 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the command is not found.">제공된 명령에 연결된 <see cref="T:System.ComponentModel.Design.MenuCommand" />이거나, 명령을 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary vsli:raw="Searches for the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command.">제공된 명령에 연결된 <see cref="T:System.ComponentModel.Design.MenuCommand" />를 검색합니다.</summary>
      <param name="guid" vsli:raw="The GUID of the command.">명령의 GUID입니다.</param>
      <param name="id" vsli:raw="The ID of the command.">명령의 ID입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the command is not found.">제공된 명령에 연결된 <see cref="T:System.ComponentModel.Design.MenuCommand" />이거나, 명령을 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary vsli:raw="Gets the command list for a given GUID.">제공된 GUID의 명령 목록을 가져옵니다.</summary>
      <param name="guid" vsli:raw="The GUID of the command list.">명령 목록의 GUID입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of commands.">명령의 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary vsli:raw="Gets a reference to the requested service.">요청한 서비스에 대한 참조를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the service to retrieve.">검색할 서비스의 <see cref="T:System.Type" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A reference to &lt;paramref name=&quot;serviceType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the service is not found.">
        <paramref name="serviceType" />에 대한 참조이거나, 서비스를 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Invokes the given command on the local form or in the global environment.">로컬 폼이나 전역 환경에서 특정 명령을 호출합니다.</summary>
      <param name="commandID" vsli:raw="The command to invoke.">호출할 명령입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">명령이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary vsli:raw="Invokes the given command with the given parameter on the local form or in the global environment.">로컬 폼이나 전역 환경에서 특정 매개 변수를 사용하여 특정 명령을 호출합니다.</summary>
      <param name="commandId" vsli:raw="The command to invoke.">호출할 명령입니다.</param>
      <param name="arg" vsli:raw="A parameter for the invocation.">호출에 사용할 매개 변수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">명령이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Removes the given menu command from the document.">문서에서 특정 메뉴 명령을 제거합니다.</summary>
      <param name="command" vsli:raw="The command to remove.">제거할 명령입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;command&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="command" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary vsli:raw="Removes the given verb from the document.">문서에서 특정 동사를 제거합니다.</summary>
      <param name="verb" vsli:raw="The verb to remove.">제거할 동사입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;verb&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="verb" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary vsli:raw="Shows the shortcut menu with the given command ID at the given location.">특정 위치에서 특정 명령 ID가 있는 바로 가기 메뉴를 표시합니다.</summary>
      <param name="menuID" vsli:raw="The shortcut menu to display.">표시할 바로 가기 메뉴입니다.</param>
      <param name="x" vsli:raw="The x-coordinate of the shortcut menu's location.">바로 가기 메뉴 위치의 x 좌표입니다.</param>
      <param name="y" vsli:raw="The y-coordinate of the shortcut menu's location.">바로 가기 메뉴 위치의 y 좌표입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary vsli:raw="Gets a collection of the designer verbs that are currently available.">현재 사용할 수 있는 디자이너 동사의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of the designer verbs that are currently available.">현재 사용할 수 있는 디자이너 동사의 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary vsli:raw="Displays a dialog for editing multi-line strings in design mode.">디자인 모드에서 여러 줄 문자열을 편집하기 위한 대화 상자를 표시합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MultilineStringEditor&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.MultilineStringEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot;&gt;&lt;/xref&gt;.">
        <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />에서 제공된 편집 스타일을 사용하여 지정된 개체 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services can be obtained.">편집 서비스를 가져오는 데 사용할 수 있는 서비스 공급자 개체입니다.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">편집 중인 값의 인스턴스입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this method should return the same object passed to it.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 이 메서드에서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 메서드의 편집 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; enumeration value indicating the supported editing style.">지원되는 편집 스타일을 나타내는 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 열거형 값입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">이 편집기에서 개체 값 표현을 칠할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, indicating that this &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; does not display a visual representation in the Properties Window.">이 <see cref="T:System.Drawing.Design.UITypeEditor" />가 속성 창에서 시각적 표현을 표시하지 않음을 나타내는 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary vsli:raw="Implements the basic functionality that can be used to design value editors. These editors can, in turn, provide a user interface for representing and editing the values of objects of the supported data types.">값 편집기를 디자인하는 데 사용할 수 있는 기본 기능을 구현합니다. 이러한 편집기는 지원되는 데이터 형식의 개체 값을 표현 및 편집하기 위한 사용자 인터페이스를 차례로 제공할 수 있습니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary vsli:raw="Represents the current value of &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />의 현재 값을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary vsli:raw="Represents the previous value of &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />의 이전 값을 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary vsli:raw="Controls whether or not the nodes within the hierarchical collection of labeled items are accessible.">레이블 항목의 계층적 컬렉션에 있는 노드의 액세스 가능 여부를 제어합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="subObjectSelector" vsli:raw="The specified sub-object selector value.">지정된 하위 개체 선택기 값입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.ApplyTreeViewThemeStyles(System.Windows.Forms.TreeView)">
      <summary vsli:raw="Modify a Windows Forms &lt;see cref=&quot;T:System.Windows.Forms.TreeView&quot; /&gt; control to use the new Explorer style theme.">
        <see cref="T:System.Windows.Forms.TreeView" />새 탐색기 스타일 테마를 사용 하도록 Windows Forms 컨트롤을 수정 합니다.</summary>
      <param name="treeView" vsli:raw="The tree view control to modify.">수정할 트리 뷰 컨트롤입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the editor style indicated by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle*&quot;&gt;&lt;/xref&gt;.">
        <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />로 표시된 편집기 스타일을 사용하여 지정된 개체의 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.IServiceProvider&quot;&gt;&lt;/xref&gt; that this editor can use to obtain services.">이 편집기에서 서비스를 가져오는 데 사용할 수 있는 <see cref="T:System.IServiceProvider" /> 입니다.</param>
      <param name="value" vsli:raw="The object to edit.">편집할 개체입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, the method should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 이 메서드에서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">지정한 <see cref="T:System.Object" />가 현재 <see cref="T:System.Object" />와 같은지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">현재 <see cref="T:System.Object" />과 비교할 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see langword="true" />가 현재<see cref="T:System.Object" />와 같으면 <see cref="T:System.Object" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary vsli:raw="Fills a hierarchical collection of labeled items, with each item represented by a &lt;see cref=&quot;T:System.Windows.Forms.TreeNode&quot; /&gt;.">각각 <see cref="T:System.Windows.Forms.TreeNode" />로 표시되는 레이블 항목의 계층적 컬렉션을 채웁니다.</summary>
      <param name="selector" vsli:raw="A hierarchical collection of labeled items.">레이블 항목의 계층적 컬렉션입니다.</param>
      <param name="context" vsli:raw="The context information for a component.">구성 요소의 컨텍스트 정보입니다.</param>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method of this interface that obtains the object that provides the service.">서비스를 제공하는 개체를 가져오는 이 인터페이스의 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 메서드입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;see cref=&quot;Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue&quot; /&gt; method.">
        <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 메서드에서 사용하는 편집기 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; value that indicates the style of editor used by &lt;see cref=&quot;Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />가 사용하는 편집기 스타일을 나타내는 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 값입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary vsli:raw="Sets the current &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.ObjectSelectorEditor&quot;&gt;&lt;/xref&gt; to the specified value.">현재 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />를 지정된 값에 설정합니다.</summary>
      <param name="value" vsli:raw="The specified value.">지정된 값입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary vsli:raw="Displays a hierarchical collection of labeled items, each represented by a &lt;see cref=&quot;T:System.Windows.Forms.TreeNode&quot; /&gt;.">각각 <see cref="T:System.Windows.Forms.TreeNode" />로 표시되는 레이블이 붙은 항목의 계층적 컬렉션을 표시합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary vsli:raw="This field is for internal use only.">이 필드는 내부용입니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.Selector&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />
      </param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary vsli:raw="Adds a new tree node to the collection.">컬렉션에 새 트리 노드를 추가합니다.</summary>
      <param name="label" vsli:raw="The label for the node.">노드의 레이블입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the value for the node.">노드의 값을 나타내는 <see cref="T:System.Object" />입니다.</param>
      <param name="parent" vsli:raw="The parent of the node.">노드의 부모입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode&quot; /&gt; added to the collection.">컬렉션에 추가된 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary vsli:raw="Removes all tree nodes from the collection.">컬렉션에서 트리 노드를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary vsli:raw="Occurs after the tree node is selected.">트리 노드가 선택된 후에 발생합니다.</summary>
      <param name="sender" vsli:raw="The source of an event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.TreeViewEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.TreeViewEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary vsli:raw="Occurs when a key is pressed while the control has focus.">컨트롤에 포커스가 있을 때 키를 누르면 발생합니다.</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyDown&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.KeyDown" /> 이벤트에 대한 데이터를 제공합니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary vsli:raw="Occurs when a key is pressed while the control has focus.">컨트롤에 포커스가 있을 때 키를 누르면 발생합니다.</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyPress&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.KeyPress" /> 이벤트에 대한 데이터를 제공합니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary vsli:raw="Occurs when the mouse pointer is over the control and a mouse button is clicked.">마우스 포인터가 컨트롤 위에 있을 때 마우스 단추를 클릭하면 발생합니다.</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseUp&quot; /&gt;, &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseDown&quot; /&gt;, and &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseMove&quot; /&gt; events.">
        <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" /> 및 <see cref="E:System.Windows.Forms.Control.MouseMove" /> 이벤트에 대한 데이터를 제공합니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary vsli:raw="Sets the collection nodes to a specific value.">컬렉션 노드를 특정 값으로 설정합니다.</summary>
      <param name="value" vsli:raw="The value to be set.">설정하려는 값입니다.</param>
      <param name="nodes" vsli:raw="The nodes collection.">노드 컬렉션입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection nodes were set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션 노드가 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary vsli:raw="Initializes the editor service.">편집기 서비스를 초기화합니다.</summary>
      <param name="edSvc" vsli:raw="The editor service.">편집기 서비스입니다.</param>
      <param name="value" vsli:raw="The value to be set.">설정하려는 값입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary vsli:raw="Removes the editor service.">편집기 서비스를 제거합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Windows 메시지를 처리합니다.</summary>
      <param name="m" vsli:raw="The Windows &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">처리할 Windows <see cref="T:System.Windows.Forms.Message" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary vsli:raw="Represents a node of a &lt;see cref=&quot;T:System.Windows.Forms.TreeView&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.TreeView" />의 노드를 나타냅니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary vsli:raw="Represents the value for the node.">노드의 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="label" vsli:raw="The label for the node.">노드의 레이블입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the value for the node.">노드의 값을 나타내는 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary vsli:raw="Specifies the target framework for a project.">프로젝트의 대상 프레임워크를 지정합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="targetFrameworkMoniker" vsli:raw="The target framework for the project.">프로젝트의 대상 프레임워크입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary vsli:raw="Gets the target framework for the project.">프로젝트의 대상 프레임워크를 가져옵니다.</summary>
      <returns vsli:raw="The target framework for the project.">프로젝트의 대상 프레임워크입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot; /&gt; interface.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 인터페이스의 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary vsli:raw="Starts the loading process.">로드 프로세스를 시작합니다.</summary>
      <param name="host" vsli:raw="The designer loader host to load.">로드할 디자이너 로더 호스트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The designer is already loaded, or &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)&quot; /&gt; has been called with a different designer loader host.">디자이너가 이미 로드되었거나, 다른 디자이너 로더 호스트를 사용하여 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />가 호출된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; has been disposed.">
        <paramref name="host" />이 삭제되었습니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />에서 사용하는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary vsli:raw="Enables or disables component notification with the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />에 의한 구성 요소 알림을 활성화 또는 비활성화합니다.</summary>
      <param name="enable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable component notification by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to disable component notification by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />에 의한 구성 요소 알림을 사용하려면 <see langword="true" />이고, <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />에 의한 구성 요소 알림을 사용하지 않으려면 <see langword="false" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component notification was enabled prior to this call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 호출 전에 구성 요소 알림이 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary vsli:raw="Flushes pending changes to the designer loader.">디자이너 로더의 보류 중인 변경 사항을 플러시합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">요청한 서비스를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the service.">서비스의 <see cref="T:System.Type" />입니다.</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service cannot be found.">요청한 서비스이거나, 요청한 서비스가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary vsli:raw="Initializes services.">서비스를 초기화합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary vsli:raw="Indicates whether the designer should be reloaded.">디자이너가 다시 로드될지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer should be reloaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default implementation always returns &lt;see langword=&quot;true&quot; /&gt;.">디자이너를 다시 로드해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 구현에서는 항상 <see langword="true" />을 반환합니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary vsli:raw="Notifies the designer loader that loading is about to begin.">로드가 곧 시작된다고 디자이너 로더에 알립니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary vsli:raw="Notifies the designer loader that unloading is about to begin.">언로드가 곧 시작된다고 디자이너 로더에 알립니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Notifies the designer loader that loading is complete.">로드가 완료되었음을 디자이너 로더에 알립니다.</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the load completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">로드가 성공적으로 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing objects (usually exceptions) that were reported as errors.">오류로 보고된 개체(대개, 예외)가 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary vsli:raw="Notifies the designer loader that the state of the document is about to be modified.">문서 상태가 곧 수정될 것임을 디자이너 로더에 알립니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Flushes all changes to the designer.">디자이너의 모든 변경 사항을 플러시합니다.</summary>
      <param name="serializationManager" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for persisting the state of loaded designers.">로드된 디자이너의 상태를 유지하는 데 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Loads a designer from persistence.">지속성 항목으로부터 디자이너를 로드합니다.</summary>
      <param name="serializationManager" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for loading state for the designers.">디자이너의 상태를 로드하는 데 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary vsli:raw="Queues a reload of the designer.">디자이너의 다시 로드를 큐에 대기시킵니다.</summary>
      <param name="flags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions&quot; /&gt; values.">
        <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 값의 비트 조합입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary vsli:raw="Reports errors that occurred while flushing changes.">변경 사항을 플러시하는 동안 발생한 오류를 보고합니다.</summary>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing error objects, usually exceptions.">오류 개체(대개, 예외)가 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="One or more errors occurred while flushing changes.">변경 사항을 플러시하는 동안 하나 이상의 오류가 발생한 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary vsli:raw="Sets the full class name of the base component.">기본 구성 요소의 전체 클래스 이름을 설정합니다.</summary>
      <param name="name" vsli:raw="A string representing the full name of the component to be designed.">디자인할 구성 요소의 전체 이름을 나타내는 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary vsli:raw="Registers an external component as part of the load process managed by &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />에서 관리하는 로드 프로세스의 일부로 외부 구성 요소를 등록합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Signals that a dependent load has finished.">종속 로드가 종료되었음을 나타냅니다.</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to load successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">성공적으로 로드하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="errorCollection" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing errors that occurred during the load.">로드하는 동안 발생한 오류가 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No load dependencies have been added by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency&quot; /&gt;, or the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />가 로드 종속성을 추가하지 않았거나, <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary vsli:raw="Reloads the design document.">디자인 문서를 다시 로드합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reload request is accepted; &lt;see langword=&quot;false&quot; /&gt; if the loader does not allow the reload.">다시 로드 요청이 받아들여지면 <see langword="true" />이고, 로더가 다시 로드를 허용하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary vsli:raw="Gets the loader host.">로더 호스트를 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; that was passed to the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)&quot; /&gt; method.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 메서드에 전달된 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary vsli:raw="Gets a value indicating whether the designer loader is loading the design surface.">디자이너 로더가 디자인 화면을 로드하고 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer loader is currently loading the design surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">디자이너 로더가 디자인 화면을 현재 로드하고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary vsli:raw="Gets or sets a value indicating whether the designer has been modified.">디자이너가 수정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">디자이너가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary vsli:raw="Gets or sets the property provider for the serialization manager being used by the loader.">로더에서 사용하는 serialization 관리자의 속성 공급자를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
      <returns vsli:raw="An object whose properties are to be provided to the serialization manager.">serialization 관리자에 속성을 제공할 개체입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary vsli:raw="Gets a value indicating whether a reload has been queued.">다시 로드 작업이 큐에 대기되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a call to &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)&quot; /&gt; has queued a reload request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 호출로 다시 로드 요청이 큐에 대기되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary vsli:raw="Defines the behavior of the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)&quot; /&gt; method. These flags can be combined using the bitwise &lt;see langword=&quot;OR&quot; /&gt; operator.">
        <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 메서드의 동작을 정의합니다. 비트 <see langword="OR" /> 연산자를 사용하여 이러한 플래그를 조합할 수 있습니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary vsli:raw="The designer loader flushes changes before reloading, but it does not force a reload, and it also does not set the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt; if load errors occur.">디자이너 로더는 다시 로드하기 전에 변경 사항을 플러시하지만 강제로 다시 로드하지는 않으며, 로드 오류가 발생한 경우 <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> 속성을 <see langword="true" />로 설정하지도 않습니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary vsli:raw="The designer loader forces the reload to occur. Normally, a reload occurs only if the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded&quot; /&gt; method returns &lt;see langword=&quot;true&quot; /&gt;. This flag bypasses calling this method and always performs the reload.">디자이너 로더가 강제로 다시 로드를 발생시킵니다. 대개 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> 메서드가 <see langword="true" />를 반환하는 경우에만 다시 로드가 발생합니다. 이 플래그는 이 메서드 호출을 건너뛰고 항상 다시 로드를 수행합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary vsli:raw="The designer loader will set the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt; if load errors occur. This flag is useful if you want a flush of the loader to overwrite persistent state that had errors.">로드 오류가 발생하면 디자이너 로더가 <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> 속성을 <see langword="true" />로 설정합니다. 로더 플러시를 통해 오류가 발생한 영구 상태를 덮어쓰려는 경우 이 플래그가 유용합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary vsli:raw="The designer loader abandons any changes before reloading.">다시 로드하기 전에 디자이너 로더가 변경 사항을 취소합니다.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary vsli:raw="Serializes a set of components into a serialization store.">구성 요소 집합을 serialization 저장소에 serialize합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class using the given service provider to resolve services.">서비스 확인을 위해 특정 서비스 공급자를 사용하여 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; to use for resolving services.">서비스 확인에 사용할 <see cref="T:System.IServiceProvider" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">새 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />를 만듭니다.</summary>
      <returns vsli:raw="A new serialization store.">새 serialization 저장소입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary vsli:raw="Deserializes the given store to produce a collection of objects.">지정한 저장소를 역직렬화하여 개체 컬렉션을 생성합니다.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">개체가 역직렬화될 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 가 serialization 저장소의 지원되는 형식이 아닙니다. <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환되는 저장소를 사용합니다.</exception>
      <returns vsli:raw="A collection of deserialized components.">역직렬화된 구성 요소의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary vsli:raw="Deserializes the given store and populates the given &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; with deserialized &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">특정 저장소를 역직렬화하고 특정 <see cref="T:System.ComponentModel.IContainer" />를 역직렬화된 <see cref="T:System.ComponentModel.IComponent" /> 개체로 채웁니다.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">개체가 역직렬화될 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</param>
      <param name="container" vsli:raw="A container to which &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects will be added.">
        <see cref="T:System.ComponentModel.IComponent" /> 개체가 추가될 컨테이너입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> 또는 <paramref name="container" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 가 serialization 저장소의 지원되는 형식이 아닙니다. <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환되는 저장소를 사용합니다.</exception>
      <returns vsli:raw="A collection of deserialized components.">역직렬화된 구성 요소의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary vsli:raw="Deserializes the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to the given container, optionally applying default property values.">선택적으로 기본 속성 값을 적용하여 특정 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />를 특정 컨테이너에 역직렬화합니다.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which the objects will be deserialized.">개체가 역직렬화될 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</param>
      <param name="container" vsli:raw="A container of objects to which data will be applied.">데이터가 적용될 개체의 컨테이너입니다.</param>
      <param name="validateRecycledTypes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the recycled type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">재생된 형식의 유효성을 검사하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="applyDefaults" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to apply default property values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">기본 속성 값을 적용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> 또는 <paramref name="container" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 가 serialization 저장소의 지원되는 형식이 아닙니다. <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환되는 저장소를 사용합니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from the given stream.">지정된 스트림에서 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />를 로드합니다.</summary>
      <param name="stream" vsli:raw="The stream from which to load the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />를 로드할 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; supports seeking, but its length is 0.">
        <paramref name="stream" />이 검색을 지원하지만 길이가 0인 경우</exception>
      <returns vsli:raw="The loaded &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">로드된 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object to the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">지정된 개체를 지정된 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />에 serialize합니다.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <paramref name="value" />를 serialize할 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 가 닫혀 있거나 <paramref name="store" /> 가 serialization 저장소의 지원되는 형식이 아닙니다. <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환되는 저장소를 사용합니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default property values.">기본 속성 값을 설명하는 지정된 개체를 serialize합니다.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <paramref name="value" />를 serialize할 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 가 닫혀 있거나 <paramref name="store" /> 가 serialization 저장소의 지원되는 형식이 아닙니다. <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환되는 저장소를 사용합니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">지정된 개체에 대한 지정된 멤버를 serialize합니다.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <paramref name="member" />를 serialize할 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">
        <paramref name="member" />를 소유하는 개체입니다.</param>
      <param name="member" vsli:raw="The given member.">지정된 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />, <paramref name="owningObject" /> 또는 <paramref name="member" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 가 닫혀 있거나 <paramref name="store" /> 가 serialization 저장소의 지원되는 형식이 아닙니다. <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환되는 저장소를 사용합니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object, but also serializes the member if it contains the default property value.">지정된 개체에서 지정된 멤버를 serialize하되, 기본 속성 값을 포함하는 경우에 멤버를 serialize합니다.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <paramref name="member" />를 serialize할 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />입니다.</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">
        <paramref name="member" />를 소유하는 개체입니다.</param>
      <param name="member" vsli:raw="The given member.">지정된 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />, <paramref name="owningObject" /> 또는 <paramref name="member" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 가 닫혀 있거나 <paramref name="store" /> 가 serialization 저장소의 지원되는 형식이 아닙니다. <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />에서 반환되는 저장소를 사용합니다.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary vsli:raw="Provides the base class for implementing a CodeDOM-based designer loader.">CodeDOM 기반 디자이너 로더를 구현하기 위한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 클래스에서 사용하는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary vsli:raw="Initializes services.">서비스를 초기화합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않았거나, 디자이너 로더가 CodeDom serialization에 필요한 형식 확인 서비스를 제공하지 않은 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary vsli:raw="Returns a value indicating whether a reload is required.">다시 로드해야 할지 여부를 나타내는 값을 반환합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">해당 언어에서 이 파일에 대한 코드 파서를 제공하지 않아 이 파일 형식이 디자이너를 지원하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">클래스를 디자인할 수는 있지만 클래스가 이 파일의 첫째 클래스가 아니거나, 디자인할 수 있는 클래스가 없으므로 이 파일에 대해 디자이너를 표시할 수 없는 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; decides a reload is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />에서 다시 로드해야 한다고 결정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary vsli:raw="Notifies the designer loader that loading is about to begin.">로드가 곧 시작된다고 디자이너 로더에 알립니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary vsli:raw="Notifies the designer loader that unloading is about to begin.">언로드가 곧 시작된다고 디자이너 로더에 알립니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 이벤트를 발생시킵니다.</summary>
      <param name="component" vsli:raw="The component to rename.">이름을 바꿀 구성 요소입니다.</param>
      <param name="oldName" vsli:raw="The original name of the component.">구성 요소의 원래 이름입니다.</param>
      <param name="newName" vsli:raw="The new name of the component.">구성 요소의 새 이름입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Notifies the designer loader that loading is complete.">로드가 완료되었음을 디자이너 로더에 알립니다.</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the load completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">로드가 성공적으로 완료되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of objects (usually exceptions) that were reported as errors.">오류로 보고된 개체(대개, 예외)의 <see cref="T:System.Collections.ICollection" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary vsli:raw="Parses the text or other persistent storage and returns a &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt;.">텍스트나 기타 영구 스토리지를 구문 분석하고 <see cref="T:System.CodeDom.CodeCompileUnit" />을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; resulting from a parse operation.">구문 분석 작업으로 얻어진 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Requests serialization of the root component of the designer.">디자이너 루트 구성 요소의 serialization을 요청합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; from which to request the serializer.">Serializer를 요청할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">해당 언어에서 이 파일에 대한 코드 파서를 제공하지 않아 이 파일 형식이 디자이너를 지원하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">클래스를 디자인할 수는 있지만 클래스가 이 파일의 첫째 클래스가 아니거나, 디자인할 수 있는 클래스가 없으므로 이 파일에 대해 디자이너를 표시할 수 없는 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Parses code from a CodeDOM provider.">CodeDOM 공급자가 제공한 코드를 구문 분석합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; from which to request the serializer.">Serializer를 요청할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">해당 언어에서 이 파일에 대한 코드 파서를 제공하지 않아 이 파일 형식이 디자이너를 지원하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">클래스를 디자인할 수는 있지만 클래스가 이 파일의 첫째 클래스가 아니거나, 디자인할 수 있는 클래스가 없으므로 이 파일에 대해 디자이너를 표시할 수 없는 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary vsli:raw="Deserializes the specified serialization data object and returns a collection of objects represented by that data.">지정된 serialization 데이터 개체를 역직렬화하고 해당 데이터가 표시한 개체의 컬렉션을 반환합니다.</summary>
      <param name="serializationData" vsli:raw="An object consisting of serialized data.">serialize된 데이터로 구성된 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;serializationData&quot; /&gt; is not a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">
        <paramref name="serializationData" />이(가) <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />가 아닌 경우</exception>
      <returns vsli:raw="A collection of objects represented by &lt;paramref name=&quot;serializationData&quot; /&gt;.">
        <paramref name="serializationData" />로 나타내는 개체의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary vsli:raw="Serializes the specified collection of objects and stores them in a serialization data object.">지정된 개체의 컬렉션을 serialize하여 serialization 데이터 개체에 저장합니다.</summary>
      <param name="objects" vsli:raw="A collection of objects to serialize.">serialize할 개체의 컬렉션입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ComponentSerializationService&quot; /&gt; was not found.">
        <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />를 찾을 수 없는 경우</exception>
      <returns vsli:raw="An object that contains the serialized state of the specified collection of objects.">지정된 개체 컬렉션의 serialize된 상태가 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary vsli:raw="Creates a new name that is unique to all components in the specified container.">지정된 컨테이터의 모든 구성 요소에 고유한 새 이름을 만듭니다.</summary>
      <param name="container" vsli:raw="The container where the new object is added.">새 개체가 추가되는 컨테이너입니다.</param>
      <param name="dataType" vsli:raw="The data type of the object that receives the name.">이름을 받을 개체의 데이터 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataType" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A unique name for the data type.">데이터 형식에 대한 고유 이름입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary vsli:raw="Gets a value indicating whether the specified name is valid.">지정된 이름이 유효한지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The name to validate.">유효성을 확인할 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">유효한 이름이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary vsli:raw="Gets a value indicating whether the specified name is valid.">지정된 이름이 유효한지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="name" vsli:raw="The name to validate.">유효성을 확인할 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid identifier, or there is already a component with the same name.">
        <paramref name="name" />이 올바른 식별자가 아니거나, 같은 이름을 가진 구성 요소가 이미 있는 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary vsli:raw="Writes compile-unit changes to persistent storage.">영구 스토리지에 컴파일 단위 변경 사항을 기록합니다.</summary>
      <param name="unit" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; to be persisted.">보관할 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; this designer loader will use.">이 디자이너 로더가 사용할 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; this designer loader will use.">이 디자이너 로더가 사용할 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary vsli:raw="Gets the type resolution service to be used with this designer loader.">이 디자이너 로더에 사용할 형식 확인 서비스를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt; that the CodeDOM serializers will use when resolving types.">형식을 확인할 때 CodeDOM serializer가 사용할 <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary vsli:raw="Determines the localization model to be used by the CodeDom resource adapter.">CodeDom 리소스 어댑터에서 사용할 지역화 모델을 결정합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary vsli:raw="The localization provider should ignore localized properties. It will still write out resources for objects that do not support code generation and are serializable.">지역화 공급자가 지역화된 속성을 무시합니다. 하지만 코드 생성을 지원하지 않고 serialize할 수 있는 개체의 리소스를 계속 작성합니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary vsli:raw="The localization provider will write out localized properties by assigning a resource to each property. This model is fast when the number of properties is small, but it scales poorly as the number of properties containing default values grows.">지역화 공급자가 각 속성에 리소스를 할당하여 지역화된 속성을 작성합니다. 이 모델은 속성이 적을 때는 빠르지만 기본값이 포함된 속성이 많아지면 확장성이 떨어집니다.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary vsli:raw="The localization provider will write localized property values into a resource file and use the &lt;see cref=&quot;T:System.ComponentModel.ComponentResourceManager&quot; /&gt; class to reflect on properties by name to fill them at runtime. This uses reflection at runtime so it can be slow, but it scales better for large numbers of properties with default values.">지역화 공급자는 리소스 파일에 지역화된 속성 값을 쓰고 <see cref="T:System.ComponentModel.ComponentResourceManager" /> 클래스를 사용하여 런타임에 이름으로 속성을 리플렉션함으로써 속성을 채웁니다. 런타임에 리플렉션을 사용하므로 속도가 느릴 수 있지만 기본값이 포함된 속성이 많은 경우 확장성이 좋아집니다.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary vsli:raw="Provides CodeDOM resource serialization services. This class cannot be inherited.">CodeDOM 리소스 serialization 서비스를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; used by the localization provider to add its extender properties.">extender 속성을 추가하기 위해 지역화 공급자가 사용하는 <see cref="T:System.IServiceProvider" />입니다.</param>
      <param name="model" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel&quot; /&gt; value indicating the localization model to be used by the CodeDOM resource adapter.">지역화 모델이 CodeDOM 리소스 어댑터에 사용된다는 것을 나타내는 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 값입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; used by the localization provider to add its extender properties.">extender 속성을 추가하기 위해 지역화 공급자가 사용하는 <see cref="T:System.IServiceProvider" />입니다.</param>
      <param name="model" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel&quot; /&gt; value indicating the localization model to be used by the CodeDOM resource adapter.">지역화 모델이 CodeDOM 리소스 어댑터에 사용된다는 것을 나타내는 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 값입니다.</param>
      <param name="supportedCultures" vsli:raw="An array of cultures that this resource adapter should support.">이 리소스 어댑터가 지원할 문화권의 배열입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />를 참조하세요.</summary>
      <param name="manager" vsli:raw="The serialization manager requesting the serializer.">serializer를 요청하는 serialization 관리자입니다.</param>
      <param name="currentSerializer" vsli:raw="An instance of the current serializer of the specified type. This can be &lt;see langword=&quot;null&quot; /&gt; if no serializer of the specified type exists.">지정된 형식의 현재 serializer의 인스턴스입니다. 지정한 형식의 serializer가 없으면 이 인스턴스가 <see langword="null" />일 수 있습니다.</param>
      <param name="objectType" vsli:raw="The data type of the object to serialize.">serialize할 개체의 데이터 형식입니다.</param>
      <param name="serializerType" vsli:raw="The data type of the serializer to create.">만들 serializer의 데이터 형식입니다.</param>
      <returns vsli:raw="An instance of a serializer of the type requested, or &lt;see langword=&quot;null&quot; /&gt; if the request cannot be satisfied.">요청된 형식의 serializer의 인스턴스이거나 요청이 만족되지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary vsli:raw="Serializes an object graph to a series of CodeDOM statements. This class provides an abstract base class for a serializer.">일련의 CodeDOM 문에 개체 그래프를 serialize합니다. 이 클래스는 serializer에 대한 추상 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized CodeDOM object into an object.">지정된 직렬화된 CodeDOM 개체를 다른 개체로 역직렬화합니다.</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">deserialization 프로세스를 수행하는 동안 사용할 serialization 관리자 인터페이스입니다.</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">역직렬화할 대상인 직렬화된 CodeDOM 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="codeObject" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;codeObject&quot; /&gt; is an unsupported code element.">
        <paramref name="codeObject" />가 지원되지 않는 코드 요소인 경우</exception>
      <returns vsli:raw="The deserialized CodeDOM object.">역직렬화된 CodeDOM 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a single statement.">단일 문을 역직렬화합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">serialization에 사용할 serialization 관리자입니다.</param>
      <param name="statement" vsli:raw="The statement to deserialize.">역직렬화할 문입니다.</param>
      <returns vsli:raw="An object instance resulting from deserializing &lt;paramref name=&quot;statement&quot; /&gt;.">
        <paramref name="statement" />를 역직렬화하여 생긴 개체 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary vsli:raw="Determines which statement group the given statement should belong to.">지정된 문이 속한 문 그룹을 확인합니다.</summary>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; for which to determine the group.">그룹을 확인할 <see cref="T:System.CodeDom.CodeStatement" />입니다.</param>
      <param name="expression" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that &lt;paramref name=&quot;statement&quot; /&gt; has been reduced to.">
        <paramref name="statement" />가 축소된 <see cref="T:System.CodeDom.CodeExpression" />입니다.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of &lt;paramref name=&quot;statement&quot; /&gt;.">
        <see cref="T:System.Type" />의 <paramref name="statement" />입니다.</param>
      <returns vsli:raw="The name of the component with which &lt;paramref name=&quot;statement&quot; /&gt; should be grouped.">
        <paramref name="statement" />가 그룹화되는 구성 요소의 이름입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a CodeDOM object.">지정된 개체를 CodeDOM 개체에 serialize합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">serialize하는 동안 사용할 serialization 관리자입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">serialize된 개체를 나타내는 CodeDOM 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default values.">지정된 개체를 serialize하여 기본값을 생성합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">serialization에 사용할 serialization 관리자입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />를 나타내는 CodeDom 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">지정된 개체에 대한 지정된 멤버를 serialize합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">serialization에 사용할 serialization 관리자입니다.</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">
        <paramref name="member" />가 연결된 개체입니다.</param>
      <param name="member" vsli:raw="The member to serialize.">Serialize할 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="owningObject" /> 또는 <paramref name="member" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> 가 serialize 가능 형식이 아닙니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; representing the serialized state of &lt;paramref name=&quot;member&quot; /&gt;.">
        <paramref name="member" />의 serialize된 상태를 나타내는 <see cref="T:System.CodeDom.CodeStatementCollection" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member, accounting for default values.">기본값을 설명하는 지정된 멤버를 serialize합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">serialization에 사용할 serialization 관리자입니다.</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">
        <paramref name="member" />가 연결된 개체입니다.</param>
      <param name="member" vsli:raw="The member to serialize.">Serialize할 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="owningObject" /> 또는 <paramref name="member" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> 가 serialize 가능 형식이 아닙니다.</exception>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;member&quot; /&gt;.">
        <paramref name="member" />를 나타내는 CodeDom 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified value to a CodeDOM expression.">지정된 값을 CodeDOM 식에 serialize합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">serialize하는 동안 사용할 serialization 관리자입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <returns vsli:raw="The serialized value. This returns &lt;see langword=&quot;null&quot; /&gt; if no reference expression can be obtained for the specified value, or the value cannot be serialized.">serializaton된 값입니다. 지정된 값에 대해 참조식을 얻을 수 없거나 해당 값을 serialize할 수 없으면 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary vsli:raw="Provides a base class for &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; classes.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 클래스에 대한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Deserializes the given expression into an in-memory object.">지정된 식을 메모리 내의 개체에 역직렬화합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="name" vsli:raw="The name of the object that results from the expression. Can be &lt;see langword=&quot;null&quot; /&gt; if there is no need to name the object.">식의 결과로 얻어지는 개체의 이름입니다. 개체 이름을 지정할 필요가 없으면 <see langword="null" />일 수 있습니다.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; to interpret.">해석할 <see cref="T:System.CodeDom.CodeExpression" />입니다.</param>
      <returns vsli:raw="An object resulting from interpretation of &lt;paramref name=&quot;expression&quot; /&gt;.">
        <paramref name="expression" />을 해석하여 얻어지는 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary vsli:raw="Returns an instance of the given type.">지정된 형식의 인스턴스를 반환합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the instance to return.">반환할 인스턴스의 <see cref="T:System.Type" />입니다.</param>
      <param name="parameters" vsli:raw="The parameters to pass to the constructor for &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="type" />에 대한 생성자에 전달할 매개 변수입니다.</param>
      <param name="name" vsli:raw="The name of the deserialized object.">역직렬화된 개체의 이름입니다.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">이 개체를 디자인 컨테이너에 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 개체에서는 영향을 줄 수 있도록 이에 대한 <see cref="T:System.ComponentModel.IComponent" />를 구현해야 합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="type" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="An instance of &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="type" />의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Deserializes properties on the given object from the invariant culture's resource bundle.">고정 문화권의 리소스 번들에서 특정 개체의 속성을 역직렬화합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object from which the properties are to be deserialized.">속성이 역직렬화될 개체입니다.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be deserialized.">역직렬화할 속성을 필터링하는 <see cref="T:System.Attribute" /> 배열입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a statement by interpreting and executing a CodeDOM statement.">CodeDOM 문을 해석하고 실행하여 문을 역직렬화합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; to deserialize.">역직렬화할 <see cref="T:System.CodeDom.CodeStatement" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">프로젝트의 대상 .NET Framework 버전에서 정의된 특성의 컬렉션을 가져옵니다.</summary>
      <param name="manager" vsli:raw="The serialization manager.">serialization 관리자입니다.</param>
      <param name="type" vsli:raw="The target type.">대상 형식입니다.</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">프로젝트의 대상 .NET Framework 버전에서 정의된 특성의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">프로젝트의 대상 .NET Framework 버전에서 정의된 특성의 컬렉션을 가져옵니다.</summary>
      <param name="manager" vsli:raw="The serialization manager.">serialization 관리자입니다.</param>
      <param name="instance" vsli:raw="An object of the target type.">대상 형식의 개체입니다.</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">프로젝트의 대상 .NET Framework 버전에서 정의된 특성의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of events as defined in the project's target version of .NET.">프로젝트의 대상 .NET Framework 버전에서 정의된 이벤트의 컬렉션을 가져옵니다.</summary>
      <param name="manager" vsli:raw="The serialization manager.">serialization 관리자입니다.</param>
      <param name="instance" vsli:raw="An object of the target type.">대상 형식의 개체입니다.</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">대상 .NET Framework 버전에 전달할 특성 배열입니다.</param>
      <returns vsli:raw="A collection of events as defined in the project's target version of .NET.">프로젝트의 대상 .NET Framework 버전에서 정의된 이벤트의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns an expression for the given object.">지정된 개체에 대해 식을 반환합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object for which to get an expression.">식을 가져올 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no existing expression for &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />를 나타내는 <see cref="T:System.CodeDom.CodeExpression" />이거나, <paramref name="value" />에 대한 기존 식이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of properties as defined in the project's target version of .NET.">프로젝트의 대상 .NET Framework 버전에서 정의된 속성의 컬렉션을 가져옵니다.</summary>
      <param name="manager" vsli:raw="The serialization manager.">serialization 관리자입니다.</param>
      <param name="instance" vsli:raw="An object of the target type.">대상 형식의 개체입니다.</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">대상 .NET Framework 버전에 전달할 특성 배열입니다.</param>
      <returns vsli:raw="A collection of properties as defined in the project's target version of .NET.">프로젝트의 대상 .NET Framework 버전에서 정의된 속성의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a reflection type generated from type metadata.">형식 메타데이터에서 생성된 리플렉션 형식을 가져옵니다.</summary>
      <param name="manager" vsli:raw="The serialization manager.">serialization 관리자입니다.</param>
      <param name="type" vsli:raw="The type to use metadata from.">메타데이터를 사용할 형식입니다.</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="type" />의 메타데이터에서 생성된 리플렉션 형식입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a reflection type generated from object metadata.">개체 메타데이터에서 생성된 리플렉션 형식을 가져옵니다.</summary>
      <param name="manager" vsli:raw="The serialization manager.">serialization 관리자입니다.</param>
      <param name="instance" vsli:raw="The object to use metadata from.">메타데이터를 사용할 개체입니다.</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;object&quot; /&gt;.">
        <paramref name="object" />의 메타데이터에서 생성된 리플렉션 형식입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Locates a serializer for the given object value.">지정된 개체 값에 대한 serializer를 찾습니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object specifying the serializer to retrieve.">검색할 serializer를 지정하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />에 알맞은 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Locates a serializer for the given type.">지정된 형식에 대한 serializer를 찾습니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="valueType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; specifying the serializer to retrieve.">검색할 serializer를 지정하는 <see cref="T:System.Type" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;valueType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="valueType" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;valueType&quot; /&gt;.">
        <paramref name="valueType" />에 알맞은 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptionProvider&quot; /&gt; that is aware of the target version of .NET, for use in type filtering.">형식 필터링에 사용하기 위해 대상 .NET Framework 버전을 인식하는 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />를 가져옵니다.</summary>
      <param name="provider" vsli:raw="The type description provider service.">형식 설명 공급자 서비스입니다.</param>
      <param name="instance" vsli:raw="An object from which the type description provider service can be derived, if &lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" />가 <see langword="null" />인 경우 형식 설명 공급자 서비스가 파생될 수 있는 개체입니다.</param>
      <returns vsli:raw="A .NET-aware type description provider.">.NET Framework 인식 형식 설명 공급자입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a unique name for the given object.">지정된 개체의 고유한 이름을 반환합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object for which the name will be retrieved.">이름을 검색할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="A unique name for &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />에 대한 고유 이름입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized.">지정된 개체가 serialize되었는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">이전 serialization에 대해 테스트할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />가 serialize되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.">미리 설정된 식을 선택적으로 고려하여, 특정 개체가 serialize되었는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">이전 serialization에 대해 테스트할 개체입니다.</param>
      <param name="honorPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include preset expressions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">미리 설정된 식을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />가 serialize되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary vsli:raw="Returns an expression representing the creation of the given object.">지정된 개체의 생성을 나타내는 식을 반환합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <param name="isComplete" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was fully serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />가 완전히 serialize되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="An expression representing the creation of &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />의 생성을 나타내는 식입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Serializes the given event into the given statement collection.">지정된 이벤트를 지정된 문 컬렉션으로 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">이벤트가 serialize되는 <see cref="T:System.CodeDom.CodeStatementCollection" /> 입니다.</param>
      <param name="value" vsli:raw="The object to which &lt;paramref name=&quot;descriptor&quot; /&gt; is bound.">
        <paramref name="descriptor" />가 바인딩될 개체입니다.</param>
      <param name="descriptor" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; specifying the event to serialize.">serialize할 이벤트를 지정하는 <see cref="T:System.ComponentModel.EventDescriptor" /> 입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> 또는 <paramref name="descriptor" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" vsli:raw="&lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; is not available.">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" />를 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the specified events into the given statement collection.">지정된 이벤트를 지정된 문 컬렉션으로 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">이벤트가 serialize되는 <see cref="T:System.CodeDom.CodeStatementCollection" /> 입니다.</param>
      <param name="value" vsli:raw="The object on which events will be serialized.">이벤트가 serialize될 개체입니다.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which events will be serialized.">serialize할 이벤트를 필터링하는 <see cref="T:System.Attribute" /> 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> 또는 <paramref name="statements" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the given statement collection.">지정된 개체의 속성을 지정된 문 컬렉션으로 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the properties will be serialized.">속성이 serialize되는 <see cref="T:System.CodeDom.CodeStatementCollection" /> 입니다.</param>
      <param name="value" vsli:raw="The object on which the properties will be serialized.">속성이 serialize될 개체입니다.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">serialize할 속성을 필터링하는 <see cref="T:System.Attribute" /> 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> 또는 <paramref name="statements" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the invariant culture's resource bundle.">지정된 개체의 속성을 고정 문화권의 리소스 번들에 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="statements" vsli:raw="Not used.">사용되지 않습니다.</param>
      <param name="value" vsli:raw="The object whose properties will be serialized.">속성이 serialize될 개체입니다.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">serialize할 속성을 필터링하는 <see cref="T:System.Attribute" /> 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> 또는 <paramref name="statements" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Serializes a property on the given object.">지정된 개체의 속성을 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the property will be serialized.">속성이 serialize되는 <see cref="T:System.CodeDom.CodeStatementCollection" /> 입니다.</param>
      <param name="value" vsli:raw="The object on which the property will be serialized.">속성이 serialize될 개체입니다.</param>
      <param name="propertyToSerialize" vsli:raw="The property to serialize.">Serialize할 속성입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;propertyToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> 또는 <paramref name="propertyToSerialize" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">특정 리소스 이름을 사용하여 리소스 번들에 특정 개체를 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <paramref name="value" />가 serialize될 리소스 번들의 이름입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">특정 리소스 이름을 사용하여 리소스 번들에 특정 개체를 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <paramref name="value" />가 serialize될 리소스 번들의 이름입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">지정된 개체를 식에 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object to serialize. Can be &lt;see langword=&quot;null&quot; /&gt;.">serialize할 개체입니다. <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; object if &lt;paramref name=&quot;value&quot; /&gt; can be serialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />를 serialize할 수 있으면 <see cref="T:System.CodeDom.CodeExpression" /> 개체이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">지정된 개체를 식에 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">
        <paramref name="value" />를 serialize된 식으로 포함하는 <see cref="T:System.CodeDom.CodeExpression" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Serializes the given object into an expression appropriate for the invariant culture.">지정된 개체를 고정 문화권에 알맞은 식에 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <param name="ensureInvariant" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize into the invariant culture; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">고정 문화권에 serialize하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">
        <paramref name="value" />를 serialize된 식으로 포함하는 <see cref="T:System.CodeDom.CodeExpression" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Associates an object with an expression.">개체를 식과 연결합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />와 연결할 <see cref="T:System.CodeDom.CodeExpression" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;expression&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> 또는 <paramref name="expression" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary vsli:raw="Associates an object with an expression, optionally specifying a preset expression.">선택적으로 사전 설정 식을 지정하여 개체와 식을 연결합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">serialization에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />와 연결할 <see cref="T:System.CodeDom.CodeExpression" />입니다.</param>
      <param name="isPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify a preset expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">미리 설정된 식을 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary vsli:raw="The exception that is thrown when line number information is available for a serialization error.">serialization 오류에 대해 줄 번호 정보를 사용할 수 있을 때 발생하는 예외입니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified exception and line information.">지정된 예외와 줄 정보를 사용하는 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="ex" vsli:raw="The exception to throw.">throw할 예외입니다.</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">예외가 발생한 장소를 나타내는 <see cref="T:System.CodeDom.CodeLinePragma" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="ex" vsli:raw="The exception to throw.">throw할 예외입니다.</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">컨텍스트를 추출할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified message and line information.">지정된 메시지와 줄 정보를 사용하는 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message describing the exception.">예외를 설명하는 메시지입니다.</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">예외가 발생한 장소를 나타내는 <see cref="T:System.CodeDom.CodeLinePragma" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="A message describing the exception.">예외를 설명하는 메시지입니다.</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">컨텍스트를 추출할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the parameter name and additional exception information.">매개 변수 이름 및 추가 예외 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
      <param name="info" vsli:raw="Stores the data that was being used to serialize or deserialize the object that the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; was serializing or deserializing.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />가 직렬화하거나 역직렬화한 개체를 직렬화하거나 역직렬화하는 데 사용되는 데이터를 저장합니다.</param>
      <param name="context" vsli:raw="Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context.">예외를 생성한 스트림의 소스 및 대상을 설명하고, serialization이 해당 컨텍스트 및 호출자가 정의한 추가 컨텍스트를 보유하도록 하는 방법을 설명합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary vsli:raw="Gets or sets the line information for the error associated with this exception.">이 예외와 관련된 오류의 줄 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates the line information for the error.">오류에 대한 줄 정보를 나타내는 <see cref="T:System.CodeDom.CodeLinePragma" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary vsli:raw="Serializes collections.">컬렉션을 serialize합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary vsli:raw="Verifies serialization support by the &lt;paramref name=&quot;method&quot; /&gt;.">
        <paramref name="method" />가 serialization을 지원하는지 확인합니다.</summary>
      <param name="method" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; to check for serialization attributes.">serialization 특성을 확인할 <see cref="T:System.Reflection.MethodInfo" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;method&quot; /&gt; supports serialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="method" />가 serialization을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given collection into a CodeDOM object.">지정된 개체를 CodeDOM 개체에 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">Serialization 중에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="A CodeDOM object representing &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" />를 나타내는 CodeDOM 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the given collection.">지정된 컬렉션을 serialize합니다.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">Serialization 중에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 입니다.</param>
      <param name="targetExpression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that refers to the collection.">컬렉션을 참조하는 <see cref="T:System.CodeDom.CodeExpression" /> 입니다.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the collection.">컬렉션의 <see cref="T:System.Type" /> 입니다.</param>
      <param name="originalCollection" vsli:raw="The collection to serialize.">serialize할 컬렉션입니다.</param>
      <param name="valuesToSerialize" vsli:raw="The values to serialize.">Serialize할 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;targetType&quot; /&gt;, &lt;paramref name=&quot;originalCollection&quot; /&gt;, or &lt;paramref name=&quot;valuesToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" /> 또는 <paramref name="valuesToSerialize" />가 <see langword="null" />입니다.</exception>
      <returns vsli:raw="Serialized collection if the serialization process succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Serialization 프로세스에 성공한 경우 serialize된 컬렉션이고, 그렇지 않은 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; interface.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 인터페이스의 구현을 제공합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary vsli:raw="Occurs when a session is created.">세션이 만들어질 때 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary vsli:raw="Occurs when a session is disposed.">세션이 삭제될 때 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)&quot; /&gt; cannot locate the specified name in the serialization manager's name table.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />이 지정된 이름을 serialization 관리자의 이름 테이블에서 찾을 수 없을 때 발생합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">serialization 관리자에 활성 serialization 세션이 없는 경우</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary vsli:raw="Occurs when serialization is complete.">serialization이 완료되었을 때 발생합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">serialization 관리자에 활성 serialization 세션이 없는 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class with the given service provider.">지정된 서비스 공급자를 사용하여 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;.">
        <see cref="T:System.IServiceProvider" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of a type.">형식의 인스턴스를 만듭니다.</summary>
      <param name="type" vsli:raw="The type to create an instance of.">인스턴스를 만들 형식입니다.</param>
      <param name="arguments" vsli:raw="The parameters of the type's constructor. This can be &lt;see langword=&quot;null&quot; /&gt; or an empty collection to invoke the parameterless constructor.">형식 생성자의 매개 변수입니다. 매개 변수가 없는 생성자를 호출하려면 <see langword="null" />이거나 빈 컬렉션이 될 수 있습니다.</param>
      <param name="name" vsli:raw="A name to give the object. If &lt;see langword=&quot;null&quot; /&gt;, the object will not be given a name, unless the object is added to a container and the container gives the object a name.">개체에 지정할 이름입니다. <see langword="null" />이면, 개체가 컨테이너에 추가되고 이 컨테이너가 개체에 이름을 제공하지 않을 경우 개체에 이름이 지정되지 않습니다.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add the object to the container if the object implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 <see cref="T:System.ComponentModel.IComponent" />를 구현할 경우 컨테이너에 개체를 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; does not have a constructor that takes parameters contained in &lt;paramref name=&quot;arguments&quot; /&gt;.">
        <paramref name="type" />에 포함된 매개 변수를 가져오는 생성자가 <paramref name="arguments" />에 없는 경우</exception>
      <returns vsli:raw="A new instance of the type specified by &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="type" />에 의해 지정된 형식의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary vsli:raw="Creates a new serialization session.">새 serialization 세션을 만듭니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager is already within a session. This version of &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; does not support simultaneous sessions.">serialization 관리자가 이미 세션에 있는 경우. <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />의 이 버전은 동시 세션을 지원하지 않습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; that represents a new serialization session.">새 serialization 세션을 나타내는 <see cref="T:System.IDisposable" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary vsli:raw="Gets the type corresponding to the specified type name.">지정된 형식 이름에 해당하는 형식을 가져옵니다.</summary>
      <param name="typeName" vsli:raw="The name of the type to get.">가져올 형식의 이름입니다.</param>
      <returns vsli:raw="The specified type.">지정된 형식입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets the serializer for the given object type.">지정된 개체 형식에 대한 serializer를 가져옵니다.</summary>
      <param name="objectType" vsli:raw="The type of object for which to retrieve the serializer.">serializer를 검색할 개체의 형식입니다.</param>
      <param name="serializerType" vsli:raw="The type of serializer to retrieve.">검색할 serializer의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;objectType&quot; /&gt; or &lt;paramref name=&quot;serializerType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectType" /> 또는 <paramref name="serializerType" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The serializer for &lt;paramref name=&quot;objectType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;, if not found.">
        <paramref name="objectType" />에 대한 serializer이거나, 해당 serializer가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">요청한 서비스를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">검색할 서비스의 형식입니다.</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">요청된 서비스이거나, 해당 서비스를 확인할 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary vsli:raw="Gets the requested type.">요청된 형식을 가져옵니다.</summary>
      <param name="typeName" vsli:raw="The name of the type to retrieve.">검색할 형식의 이름입니다.</param>
      <returns vsli:raw="The requested type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be resolved.">요청된 형식이거나, 해당 형식을 확인할 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Adds a custom serialization provider to the serialization manager.">사용자 지정 serialization 공급자를 serialization 관리자에 추가합니다.</summary>
      <param name="provider" vsli:raw="The serialization provider to add.">추가할 serialization 공급자입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method.">
        <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 메서드를 구현합니다.</summary>
      <param name="type" vsli:raw="The data type to create.">만들 데이터 형식입니다.</param>
      <param name="arguments" vsli:raw="The arguments to pass to the constructor for this type.">이 형식에 대한 생성자에 전달할 인수입니다.</param>
      <param name="name" vsli:raw="The name of the object. This name can be used to access the object later through &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; is passed, the object is still created but cannot be accessed by name.">개체의 이름입니다. 이 이름은 나중에 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />를 통해 개체에 액세스하는 데 사용할 수 있습니다. <see langword="null" />이 전달되면 개체는 계속 만들어지지만 이름을 통해 개체에 액세스할 수는 없습니다.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">이 개체를 디자인 컨테이너에 추가하려면 <see langword="true" />입니다. 개체에서는 영향을 줄 수 있도록 이에 대한 <see cref="T:System.ComponentModel.IComponent" />를 구현해야 합니다.</param>
      <returns vsli:raw="The newly created object instance.">새로 만들어진 개체 인스턴스입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary vsli:raw="Retrieves an instance of a created object of the specified name.">지정된 이름을 가진 생성된 개체의 인스턴스를 검색합니다.</summary>
      <param name="name" vsli:raw="The name of the object to retrieve.">검색할 개체의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">이 속성이 serialization 세션 밖에서 액세스된 경우</exception>
      <returns vsli:raw="An instance of the object with the given name, or &lt;see langword=&quot;null&quot; /&gt; if no object by that name can be found.">지정된 이름의 개체 인스턴스이거나, 해당 이름의 개체를 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary vsli:raw="Retrieves a name for the specified object.">지정된 개체의 이름을 검색합니다.</summary>
      <param name="value" vsli:raw="The object for which to retrieve the name.">이름을 검색할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">이 속성이 serialization 세션 밖에서 액세스된 경우</exception>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object is unnamed.">개체의 이름이거나, 개체에 이름이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets a serializer of the requested type for the specified object type.">지정된 개체 형식에 대한 요청된 형식의 serializer를 가져옵니다.</summary>
      <param name="objectType" vsli:raw="The type of the object to get the serializer for.">serializer를 가져올 개체의 형식입니다.</param>
      <param name="serializerType" vsli:raw="The type of the serializer to retrieve.">검색할 serializer의 형식입니다.</param>
      <returns vsli:raw="An instance of the requested serializer, or &lt;see langword=&quot;null&quot; /&gt; if no appropriate serializer can be located.">요청된 serializer의 인스턴스이거나, 적절한 serializer를 찾을 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary vsli:raw="Gets a type of the specified name.">지정된 이름의 형식을 가져옵니다.</summary>
      <param name="typeName" vsli:raw="The fully qualified name of the type to load.">로드할 형식의 정규화된 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">이 속성이 serialization 세션 밖에서 액세스된 경우</exception>
      <returns vsli:raw="An instance of the type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be loaded.">형식의 인스턴스이거나, 형식이 로드될 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Removes a previously added serialization provider.">이전에 추가한 serialization 공급자를 제거합니다.</summary>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot; /&gt; to remove.">제거할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary vsli:raw="Used to report a recoverable error in serialization.">serialization에서 발생한 복구 가능 오류를 보고하는 데 사용됩니다.</summary>
      <param name="errorInformation" vsli:raw="An object containing the error information, usually of type &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">오류 정보를 포함하는 개체로서 대개 <see cref="T:System.String" /> 또는 <see cref="T:System.Exception" /> 형식입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">이 속성이 serialization 세션 밖에서 액세스된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary vsli:raw="Sets the name for the specified object.">지정된 개체의 이름을 설정합니다.</summary>
      <param name="instance" vsli:raw="The object to set the name.">이름을 설정할 개체입니다.</param>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used as the name of the object.">개체 이름으로 사용되는 <see cref="T:System.String" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified by instance already has a name, or &lt;paramref name=&quot;name&quot; /&gt; is already used by another named object.">인스턴스에 의해 지정된 개체가 이미 이름을 가지고 있거나, 명명된 다른 개체가 이미 <paramref name="name" />을 사용하는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">이 속성이 serialization 세션 밖에서 액세스된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 메서드를 참조하세요.</summary>
      <param name="serviceType" vsli:raw="An object that specifies the type of service object to get.">가져올 서비스 개체의 형식을 지정하는 개체입니다.</param>
      <returns vsli:raw="A service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; if there is no service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.">
        <paramref name="serviceType" /> 형식의 서비스 개체입니다.  
  
또는 
 <paramref name="serviceType" /> 형식의 서비스 개체가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary vsli:raw="Gets or sets to the container for this serialization manager.">이 serialization 관리자에 대한 컨테이너를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">serialization 관리자에 활성 serialization 세션이 있는 경우</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; to which the serialization manager will add components.">serialization 관리자가 구성 요소를 추가할 <see cref="T:System.ComponentModel.IContainer" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary vsli:raw="Gets the list of errors that occurred during serialization or deserialization.">serialization 또는 deserialization 도중 발생한 오류의 목록을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">이 속성이 serialization 세션 밖에서 액세스된 경우</exception>
      <returns vsli:raw="The list of errors that occurred during serialization or deserialization.">serialization 또는 deserialization 도중 발생한 오류의 목록입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method should check for the presence of the given name in the container.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 메서드가 컨테이너에 특정 이름이 존재하는지 확인할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was changed from within a serialization session.">이 속성이 serialization 세션 내에서 변경된 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will pass the given component name; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will check for the presence of the given name in the container. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />가 특정 구성 요소 이름을 전달하면 <see langword="true" />이고, <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />가 컨테이너에 특정 이름이 존재하는지 확인하면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary vsli:raw="Gets the object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">serialization 관리자의 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 속성에 속성을 제공하는 데 사용할 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">serialization 관리자의 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 속성에 속성을 제공하는 데 사용할 개체입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will always create a new instance of a type.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />가 항상 형식의 새 인스턴스를 만들지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">serialization 관리자에 활성 serialization 세션이 있는 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will return the existing instance; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will create a new instance of a type. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />가 기존 인스턴스를 반환하면 <see langword="true" />이고, <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />가 형식의 새 인스턴스를 만들면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary vsli:raw="Gets the context stack for this serialization session.">이 serialization 세션을 위한 컨텍스트 스택을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">이 속성이 serialization 세션 밖에서 액세스된 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ContextStack&quot; /&gt; that stores data.">데이터를 저장하는 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary vsli:raw="Implements the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 속성을 구현합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; containing the properties to be serialized.">serialize될 속성이 들어 있는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method will verify that matching names refer to the same type.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 메서드가 일치하는 이름이 동일한 형식을 참조하는지를 확인하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">serialization 관리자에 활성 serialization 세션이 있는 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; verifies types; otherwise, &lt;see langword=&quot;false&quot; /&gt; if it does not. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />가 형식을 확인하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary vsli:raw="Provides a means of passing context state among serializers. This class cannot be inherited.">serializer 간에 컨텍스트 상태를 전달하는 수단을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with the given expression and owner.">지정된 식 및 소유자를 사용하여 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="expression" vsli:raw="The given code expression.">지정된 코드 식입니다.</param>
      <param name="expressionType" vsli:raw="The given code expression type.">지정된 코드 식 형식입니다.</param>
      <param name="owner" vsli:raw="The given code expression owner.">지정된 코드 식 소유자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />, <paramref name="expressionType" /> 또는 <paramref name="owner" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with a current value.">현재 값을 사용하여 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 클래스의 새 인스턴스를 초기화합니다</summary>
      <param name="expression" vsli:raw="The given code expression.">지정된 코드 식입니다.</param>
      <param name="expressionType" vsli:raw="The given code expression type.">지정된 코드 식 형식입니다.</param>
      <param name="owner" vsli:raw="The given code expression owner.">지정된 코드 식 소유자입니다.</param>
      <param name="presetValue" vsli:raw="The given code expression preset value.">지정된 코드 식 기본 설정 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />, <paramref name="expressionType" /> 또는 <paramref name="owner" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary vsli:raw="Gets the expression this context represents.">이 컨텍스트가 나타내는 식을 가져옵니다.</summary>
      <returns vsli:raw="The expression this context represents.">이 컨텍스트가 나타내는 식입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">식의 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">식의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary vsli:raw="Gets the object owning this expression.">이 식을 소유하는 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object owning this expression.">이 식을 소유하는 개체입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary vsli:raw="Gets the preset value of an expression.">식의 미리 설정된 값을 가져옵니다.</summary>
      <returns vsli:raw="The preset value of this expression, or &lt;see langword=&quot;null&quot; /&gt; if not assigned.">이 식의 미리 설정된 값이거나, 할당된 값이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary vsli:raw="Provides an interface that can be used to optimize the reloading of a designer.">디자이너의 재로딩을 최적화하기 위해서 사용할 수 있는 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary vsli:raw="Indicates whether the designer should reload in order to import the specified compile unit correctly.">디자이너가 지정된 컴파일 단위를 올바르게 가져오기 위해 재로딩해야 할지 여부를 나타냅니다.</summary>
      <param name="newTree" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; containing the designer document code.">디자이너 문서 코드가 들어 있는 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer should reload; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">디자이너가 재로딩하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary vsli:raw="Provides the base class for serializing a reflection primitive within the object graph.">개체 그래프 안의 리플렉션 기본 형식을 serialize하기 위한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary vsli:raw="Serializes the given member descriptor on the given value to a statement collection.">지정된 값의 지정된 멤버 설명자를 문 컬렉션에 Serialize합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">serialization에 사용할 serialization 관리자입니다.</param>
      <param name="value" vsli:raw="The object to which the member is bound.">멤버가 바인딩될 개체입니다.</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">serialize할 멤버의 설명자입니다.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which &lt;paramref name=&quot;descriptor&quot; /&gt; is serialized.">
        <paramref name="descriptor" />가 serialize될 <see cref="T:System.CodeDom.CodeStatementCollection" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Determines if the given member should be serialized.">지정된 멤버를 serialize해야 하는지 여부를 확인합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">serialization에 사용할 serialization 관리자입니다.</param>
      <param name="value" vsli:raw="The object to which the member is bound.">멤버가 바인딩될 개체입니다.</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">serialize할 멤버의 설명자입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member described by &lt;paramref name=&quot;descriptor&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="descriptor" />에 의해 설명된 멤버를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary vsli:raw="Holds a table of statements that is offered by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt;. This class cannot be inherited.">
        <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />가 제공하는 문 테이블을 보관합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether the table contains the given statement owner.">지정된 문 소유자가 테이블에 있는지 여부를 확인합니다.</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">문 컬렉션 소유자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is in the table; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="statementOwner" />가 테이블에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />의 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary vsli:raw="Populates the statement table with a collection of statement owners.">문 소유자 컬렉션으로 문 테이블을 채웁니다.</summary>
      <param name="statementOwners" vsli:raw="A collection of statement owners to add to the table.">테이블에 추가할 문 소유자 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary vsli:raw="Populates the statement table with a statement owner.">문 소유자로 문 테이블을 채웁니다.</summary>
      <param name="owner" vsli:raw="The statement owner to add to the table.">테이블에 추가할 문 소유자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 메서드를 참조하세요.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary vsli:raw="Gets the statement collection for the given owner.">지정된 소유자의 문 컬렉션을 가져옵니다.</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">문 컬렉션 소유자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="The statement collection for &lt;paramref name=&quot;statementOwner&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is not in the table.">
        <paramref name="statementOwner" />에 대한 문 컬렉션이거나, <paramref name="statementOwner" />가 테이블에 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; adds a root context to provide a definition of the root object. This class cannot be inherited.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />는 루트 컨텍스트를 추가하여 루트 개체의 정의를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.RootContext&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.RootContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="expression" vsli:raw="The expression representing the root object in the object graph.">개체 그래프의 루트 개체를 나타내는 식입니다.</param>
      <param name="value" vsli:raw="The root object of the object graph.">개체 그래프의 루트 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary vsli:raw="Gets the expression representing the root object in the object graph.">개체 그래프의 루트 개체를 나타내는 식을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing the root object in the object graph.">개체 그래프의 루트 개체를 나타내는 <see cref="T:System.CodeDom.CodeExpression" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary vsli:raw="Gets the root object of the object graph.">개체 그래프의 루트 개체를 가져옵니다.</summary>
      <returns vsli:raw="The root object of the object graph.">개체 그래프의 루트 개체입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary vsli:raw="Specifies that serializers should handle default values. This class cannot be inherited.">Serializer가 기본값을 처리하도록 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class with the option of binding to a specific member.">특정 멤버에 바인딩하는 옵션을 사용하여 <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="member" vsli:raw="The member to which this context is bound. Can be &lt;see langword=&quot;null&quot; /&gt;.">이 컨텍스트가 바인딩될 멤버입니다. <see langword="null" />일 수 있습니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Gets a value indicating whether the given member should be serialized in this context.">지정된 멤버를 이 컨텍스트에서 serialize할지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="member" vsli:raw="The member to be examined for serialization.">serialization을 위해 검사할 멤버입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given member should be serialized in this context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 멤버를 이 컨텍스트에서 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary vsli:raw="Gets the member to which this context is bound.">이 컨텍스트가 바인딩될 멤버를 가져옵니다.</summary>
      <returns vsli:raw="The member to which this context is bound, or &lt;see langword=&quot;null&quot; /&gt; if the context is bound to all members of an object.">이 컨텍스트가 바인딩된 멤버이거나, 컨텍스트가 개체의 모든 멤버에 바인딩되면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary vsli:raw="Provides a location into which statements can be serialized. This class cannot be inherited.">문을 serialize할 수 있는 위치를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary vsli:raw="Gets a collection of statements offered by the statement context.">문 컨텍스트에서 제공한 문 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt; containing statements offered by the statement context.">문 컨텍스트에서 제공한 문이 들어 있는 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary vsli:raw="Serializes an object to a new type.">개체를 새 형식으로 serialize합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Deserializes the given type declaration.">지정된 형식 선언을 역직렬화합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">serialization에 사용할 serialization 관리자입니다.</param>
      <param name="declaration" vsli:raw="Type declaration to use for serialization.">serialization에 사용할 형식 선언입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="typeDecl" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The root object.">루트 개체입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary vsli:raw="Returns the method where statements used to serialize a member are stored.">멤버 serialize에 사용되는 문을 저장하는 메서드를 반환합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">serialization에 사용할 serialization 관리자입니다.</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">Serialization에 사용할 형식 선언입니다.</param>
      <param name="value" vsli:raw="The value to use for serialization.">serialization에 사용할 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;typeDecl&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="typeDecl" /> 또는 <paramref name="value" />가 <see langword="null" />입니다.</exception>
      <returns vsli:raw="The method used to emit all of the initialization code for the given member.">지정된 멤버의 모든 초기화 코드를 내보내는 데 사용되는 메서드입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Returns an array of methods to be interpreted during deserialization.">deserialization을 수행하는 동안 해석될 메서드 배열을 반환합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">serialization에 사용할 serialization 관리자입니다.</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">Serialization에 사용할 형식 선언입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="typeDecl" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeMemberMethod&quot; /&gt; array of methods to be interpreted during deserialization.">deserialization을 수행하는 동안 해석될 메서드의 <see cref="T:System.CodeDom.CodeMemberMethod" /> 배열입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the object root by creating a new type declaration that defines root.">루트를 정의하는 새로운 형식 선언을 만들어 개체 루트를 serialize합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">serialization에 사용할 serialization 관리자입니다.</param>
      <param name="root" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <param name="members" vsli:raw="Optional collection of members. Can be &lt;see langword=&quot;null&quot; /&gt; or empty.">멤버의 선택적 컬렉션입니다. <see langword="null" />이거나 비어 있을 수 있습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;root&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="root" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeTypeDeclaration&quot; /&gt; that defines the root object.">루트 개체를 정의하는 <see cref="T:System.CodeDom.CodeTypeDeclaration" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary vsli:raw="Specifies generic undo/redo functionality at design time.">디자인 타임에 일반적인 실행 취소/다시 실행 기능을 지정합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary vsli:raw="Occurs immediately before an undo action is performed.">실행 취소 작업이 수행되기 직전에 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary vsli:raw="Occurs immediately after an undo action is performed.">실행 취소 작업이 수행된 직후에 발생합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider" vsli:raw="A parenting service provider.">부모 서비스 공급자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A required service cannot be found. See &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; for required services. If you have removed this service, ensure that you provide a replacement.">필요한 서비스를 찾을 수 없는 경우. 필요한 서비스는 <see cref="T:System.ComponentModel.Design.UndoEngine" />을 참조하십시오. 이 서비스를 제거한 경우 대체 서비스를 제공해야 합니다.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; to the undo stack.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />을 실행 취소 스택에 추가합니다.</summary>
      <param name="unit" vsli:raw="The undo unit to add.">추가할 실행 취소 단위입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">새 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />를 만듭니다.</summary>
      <param name="name" vsli:raw="The name of the unit to create.">만들 단위의 이름입니다.</param>
      <param name="primary" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create the first of a series of nested units; &lt;see langword=&quot;false&quot; /&gt; to create subsequent nested units.">일련의 중첩된 단위에서 첫 번째 단위를 만들 경우 <see langword="true" />이고, 두 번째 이후의 단위를 만들 경우 <see langword="false" />입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; with a specified name.">지정된 이름을 가진 새 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Discards an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />을 삭제합니다.</summary>
      <param name="unit" vsli:raw="The unit to discard.">삭제할 단위입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary vsli:raw="Gets the requested service.">요청한 서비스를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">검색할 서비스의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is required but cannot be found. If you have removed this service, ensure that you provide a replacement.">
        <paramref name="serviceType" />이 필요하지만 찾을 수 없는 경우. 이 서비스를 제거한 경우 대체 서비스를 제공해야 합니다.</exception>
      <returns vsli:raw="The requested service, if found.">요청한 서비스입니다(있을 경우).</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">요청한 서비스를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">검색할 서비스의 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not found.">요청한 서비스이거나, 요청한 서비스가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undoing&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undone&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary vsli:raw="Enables or disables the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" />을 사용하거나 사용하지 않습니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" />가 활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary vsli:raw="Indicates if an undo action is in progress.">실행 취소 작업이 처리 중인지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an undo action is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">실행 취소 작업이 처리 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary vsli:raw="Encapsulates a unit of work that a user can undo.">사용자가 실행 취소할 수 있는 작업 단위를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="engine" vsli:raw="The undo engine that owns this undo unit.">이 실행 취소 단위를 소유하는 실행 취소 엔진입니다.</param>
      <param name="name" vsli:raw="The name for this undo unit.">이 실행 취소 단위의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;engine&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="engine" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary vsli:raw="Receives a call from the undo engine to close this unit.">실행 취소 엔진에서 호출을 받아 이 단위를 닫습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />에서 호출을 받습니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />에서 호출을 받습니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />에서 호출을 받습니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />에서 호출을 받습니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />에서 호출을 받습니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />에서 호출을 받습니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">
        <see cref="T:System.ComponentModel.Design.UndoEngine" /> 이벤트에 대한 응답으로 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />에서 호출을 받습니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentRenameEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary vsli:raw="Gets an instance of the requested service.">요청한 서비스의 인스턴스를 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">검색할 서비스의 형식입니다.</param>
      <returns vsli:raw="An instance of the given service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">서비스의 인스턴스이거나, 서비스를 확인할 수 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">단위의 현재 이름을 나타내는 <see cref="T:System.String" />을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">단위의 현재 이름을 나타내는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary vsli:raw="Performs an undo or redo action.">실행 취소 또는 다시 실행 작업을 수행합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary vsli:raw="Called by &lt;see cref=&quot;M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo&quot; /&gt; to perform an undo action.">실행 취소 작업을 수행하기 위해 <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />에서 호출합니다.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />에 이벤트가 없는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />에 이벤트가 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />의 이름입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt;.">부모 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt; to which this &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; is attached.">이 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />가 연결된 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.BitmapEditor">
      <summary vsli:raw="Provides a user interface for selecting bitmap files in a property browser.">속성 브라우저에서 비트맵 파일을 선택할 수 있는 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="F:System.Drawing.Design.BitmapEditor.BitmapExtensions">
      <summary vsli:raw="Provides the list of default file extensions used to filter the file list.">파일 목록을 필터링하는 데 사용되는 기본 파일 확장명 목록을 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.BitmapEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.BitmapEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file list filter that the bitmap editor will initially use to filter the file list.">비트맵 편집기에서 처음에 파일 목록을 필터링하는 데 사용될 파일 목록 필터용 확장명을 가져옵니다.</summary>
      <returns vsli:raw="The default set of file extensions used to filter the file list.">파일 목록을 필터링하는 데 사용되는 기본 파일 확장명 집합입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file list filter provided by this editor.">이 편집기에서 제공하는 기본 파일 목록 필터에 대한 설명을 가져옵니다.</summary>
      <returns vsli:raw="The description for the default type of files to filter the file list for.">파일 목록 필터링의 기준이 되는 기본 파일 형식에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">지정된 스트림에서 이미지를 로드합니다.</summary>
      <param name="stream" vsli:raw="The stream from which to load the image.">이미지를 로드할 스트림입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; loaded from the stream.">스트림에서 로드된 <see cref="T:System.Drawing.Image" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.ColorEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually picking a color.">색을 시각적으로 선택할 수 있는 <see cref="T:System.Drawing.Design.UITypeEditor" />를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ColorEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ColorEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 메서드에서 제공된 편집기 스타일을 사용하여 지정된 개체 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">편집 서비스를 얻을 수 있는 <see cref="T:System.IServiceProvider" />입니다.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">편집 중인 값의 인스턴스입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the Edit method. If the method is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Edit 메서드의 편집 스타일을 가져옵니다. 이 메서드가 지원되지 않는 경우에는 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />이 반환됩니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="An enum value indicating the provided editing style.">제공된 편집 스타일을 나타내는 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating if this editor supports the painting of a representation of an object's value.">이 편집기에서 개체 값 표현를 칠할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ColorEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see cref="Overload:System.Drawing.Design.ColorEditor.PaintValue" />이 구현되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas.">지정된 개체의 표시 값을 제공된 캔버스에 칠합니다.</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">칠할 대상과 위치입니다.</param>
    </member>
    <member name="T:System.Drawing.Design.ContentAlignmentEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually editing content alignment.">내용 맞춤을 시각적으로 편집할 수 있는 <see cref="T:System.Drawing.Design.UITypeEditor" />를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ContentAlignmentEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ContentAlignmentEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle&quot; /&gt; method.">
        <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle" /> 메서드에서 제공된 편집기 스타일을 사용하여 지정된 개체 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">편집 서비스를 얻을 수 있는 <see cref="T:System.IServiceProvider" />입니다.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">편집 중인 값의 인스턴스입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ContentAlignmentEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">
        <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.EditValue" /> 메서드의 편집 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value indicating the provided editing style. If the method to retrieve the edit style is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">제공되는 편집 스타일을 나타내는 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 값입니다. 편집 스타일을 검색할 메서드가 지원되지 않을 경우  <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />이 반환됩니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.CursorEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that can perform default file searching for cursor (.cur) files.">커서 파일(.cur)에 대한 기본 파일 검색을 수행할 수 있는 <see cref="T:System.Drawing.Design.UITypeEditor" />를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.CursorEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.CursorEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;Overload:System.Drawing.Design.CursorEditor.GetEditStyle&quot; /&gt; method.">
        <see cref="Overload:System.Drawing.Design.CursorEditor.GetEditStyle" /> 메서드에서 제공된 편집기 스타일을 사용하여 지정된 개체 값을 편집합니다.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">추가 컨텍스트 정보를 제공하는 데 사용할 수 있는 형식 설명자 컨텍스트입니다.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">편집 서비스를 가져오는 데 사용할 수 있는 서비스 공급자 개체입니다.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">편집 중인 값의 인스턴스입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.CursorEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">
        <see cref="Overload:System.Drawing.Design.CursorEditor.EditValue" /> 메서드의 편집 스타일을 검색합니다.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">추가 컨텍스트 정보를 제공하는 데 사용할 수 있는 형식 설명자 컨텍스트입니다.</param>
      <returns vsli:raw="An enum value indicating the provided editing style. If the method is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">제공된 편집 스타일을 나타내는 열거형 값입니다. 이 메서드가 지원되지 않는 경우에는 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />이 반환됩니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.CursorEditor.IsDropDownResizable">
      <summary vsli:raw="Gets a value indicating whether drop-down editors should be resizable by the user.">드롭다운 편집기를 사용자가 크기 조정할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drop-down editors are resizable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">드롭다운 편집기의 크기를 조정할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontEditor">
      <summary vsli:raw="Provides a user interface to select and configure a &lt;see cref=&quot;T:System.Drawing.Font&quot; /&gt; object.">
        <see cref="T:System.Drawing.Font" /> 개체를 선택하고 구성하기 위한 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.FontEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.FontEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the editor style indicated by &lt;see cref=&quot;M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt;.">
        <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />로 표시된 편집기 스타일을 사용하여 지정된 개체의 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that this editor can use to obtain services.">이 편집기에서 서비스를 가져오는 데 사용할 수 있는 <see cref="T:System.IServiceProvider" /> 입니다.</param>
      <param name="value" vsli:raw="The object to edit.">편집할 개체입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object that was passed to it.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우에는 전달된 것과 동일한 개체가 반환되어야 합니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 메서드에서 사용하는 편집기 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value that indicates the style of editor used by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />가 사용하는 편집기 스타일을 나타내는 <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 값입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontNameEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that paints a glyph for the font name.">글꼴 이름에 대한 문자 모양을 칠하는 <see cref="T:System.Drawing.Design.UITypeEditor" />를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.FontNameEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.FontNameEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Determines if this editor supports the painting of a representation of an object's value.">이 편집기에서 개체 값 표현를 칠할 수 있는지 여부를 나타냅니다.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">추가 컨텍스트 정보를 제공하는 데 사용할 수 있는 형식 설명자 컨텍스트입니다.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontNameEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see cref="Overload:System.Drawing.Design.FontNameEditor.PaintValue" />이 구현되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas. Painting should be done within the boundaries of the provided rectangle.">지정된 개체의 표시 값을 제공된 캔버스에 칠합니다. 제공된 사각형의 경계 안에서 칠해야 합니다.</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">칠할 대상과 위치입니다.</param>
    </member>
    <member name="T:System.Drawing.Design.IconEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually choosing an icon.">아이콘을 시각적으로 선택할 수 있는 <see cref="T:System.Drawing.Design.UITypeEditor" />를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.IconEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.IconEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)">
      <summary vsli:raw="Creates a string representing the valid file extensions for icons.">아이콘에 대한 올바른 파일 확장명을 나타내는 문자열을 만듭니다.</summary>
      <param name="extensions" vsli:raw="An array of strings holding valid file extensions.">올바른 파일 확장명을 보유하는 문자열 배열입니다.</param>
      <param name="sep" vsli:raw="A string that specifies the separator character.">구분 문자를 지정하는 문자열입니다.</param>
      <returns vsli:raw="A string containing the icon file extensions, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;extensions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or empty.">아이콘 파일 확장명이 들어 있는 문자열입니다. <paramref name="extensions" />가 <see langword="null" />이거나 비어 있는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateFilterEntry(System.Drawing.Design.IconEditor)">
      <summary vsli:raw="Creates a filter string for the file dialog box.">파일 대화 상자에 대한 필터 문자열을 만듭니다.</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.IconEditor&quot; /&gt; for which the filter string will be created.">필터 문자열이 만들어질 <see cref="T:System.Drawing.Design.IconEditor" />입니다.</param>
      <returns vsli:raw="The filter string, created from the string returned by &lt;see cref=&quot;M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)&quot; /&gt;.">
        <see cref="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" />에서 반환된 문자열을 사용하여 만들어지는 필터 문자열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 메서드에서 제공된 편집기 스타일을 사용하여 지정된 개체 값을 편집합니다.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">추가 컨텍스트 정보를 제공하는 데 사용할 수 있는 형식 설명자 컨텍스트입니다.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">편집 서비스를 가져오는 데 사용할 수 있는 서비스 공급자 개체입니다.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">편집 중인 값의 인스턴스입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;see cref=&quot;Overload:System.Drawing.Design.IconEditor.EditValue&quot; /&gt; method.">
        <see cref="Overload:System.Drawing.Design.IconEditor.EditValue" /> 메서드의 편집 스타일을 검색합니다.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">추가 컨텍스트 정보를 제공하는 데 사용할 수 있는 형식 설명자 컨텍스트입니다.</param>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; values indicating the provided editing style.">제공된 편집 스타일을 나타내는 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetExtensions">
      <summary vsli:raw="Retrieves an array of valid file extensions for icons.">아이콘에 대한 올바른 파일 확장명 배열을 검색합니다.</summary>
      <returns vsli:raw="An array of valid file extensions for icons.">아이콘에 대한 올바른 파일 확장명 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file list filter provided by this editor.">이 편집기에서 제공하는 기본 파일 목록 필터에 대한 설명을 가져옵니다.</summary>
      <returns vsli:raw="The description for the default type of files to filter the file list for.">파일 목록 필터링의 기준이 되는 기본 파일 형식에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Determines if this editor supports the painting of a representation of an object's value.">이 편집기에서 개체 값 표현를 칠할 수 있는지 여부를 나타냅니다.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">추가 컨텍스트 정보를 제공하는 데 사용할 수 있는 형식 설명자 컨텍스트입니다.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see cref="Overload:System.Drawing.Design.UITypeEditor.PaintValue" />이 구현되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Drawing.Icon&quot; /&gt; from the given stream.">지정된 스트림에서 새 <see cref="T:System.Drawing.Icon" />을 만듭니다.</summary>
      <param name="stream" vsli:raw="The source stream from which the icon will be created.">아이콘이 만들어질 소스 스트림입니다.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Drawing.Icon&quot; /&gt;.">새로 만든 <see cref="T:System.Drawing.Icon" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas.">지정된 개체의 표시 값을 제공된 캔버스에 칠합니다.</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">칠할 대상과 위치입니다.</param>
    </member>
    <member name="T:System.Drawing.Design.ImageEditor">
      <summary vsli:raw="Provides a user interface for selecting an image for a property in a property grid.">속성 표에서 속성에 대한 이미지를 선택할 수 있는 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ImageEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ImageEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)">
      <summary vsli:raw="Creates a string of file name extensions using the specified array of file extensions and the specified separator.">지정된 확장명 배열 및 지정된 구분 기호를 사용하여 확장명에 사용할 문자열을 만듭니다.</summary>
      <param name="extensions" vsli:raw="The extensions to filter for.">필터링의 기준이 되는 확장명입니다.</param>
      <param name="sep" vsli:raw="The separator to use.">사용할 구분 기호입니다.</param>
      <returns vsli:raw="A string containing the specified file name extensions, each separated by the specified separator.">지정된 확장명을 포함하는 문자열이며 각 문자열은 지정된 구분 기호에 의해 구분됩니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)">
      <summary vsli:raw="Creates a filter entry for a file dialog box's file list.">파일 대화 상자의 파일 목록에 사용할 필터 엔트리를 만듭니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Drawing.Design.ImageEditor&quot; /&gt; to get the filter entry from.">필터 항목을 가져올 <see cref="T:System.Drawing.Design.ImageEditor" />입니다.</param>
      <returns vsli:raw="The new filter entry string.">새 필터 엔트리 문자열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 메서드에서 제공한 편집 스타일을 사용하여 지정된 개체 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services can be obtained.">편집 서비스를 얻을 수 있는 <see cref="T:System.IServiceProvider" />입니다.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; being edited.">편집하고 있는 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the new value. If the value of the object has not changed, &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; returns the object that was passed to it.">새 값을 나타내는 <see cref="T:System.Object" />입니다. 개체의 값을 변경하지 않은 경우 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />는 전달된 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 메서드의 편집 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the supported editing style.">지원되는 편집 스타일을 나타내는 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file-list filter that this editor initially uses to filter the file list.">파일 목록을 필터링하기 위해 이 편집기가 처음 사용하는 파일 목록 필터에 대한 확장을 가져옵니다.</summary>
      <returns vsli:raw="A set of file extensions used to filter the file list.">파일 목록을 필터링하는 데 사용되는 확장명 집합입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">이 편집기에서 제공되는 기본 파일 목록 필터에 대한 설명을 가져옵니다.</summary>
      <returns vsli:raw="The description for the default file-list filter.">기본 파일 목록 필터에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetImageExtenders">
      <summary vsli:raw="Gets an array of supported image types.">지원되는 이미지 형식의 배열을 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; representing supported image types.">지원되는 이미지 형식을 나타내는 <see cref="T:System.Type" /> 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">이 편집기에서 개체 값 표현을 칠할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />이 구현되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">지정된 스트림에서 이미지를 로드합니다.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the image to load.">로드할 이미지를 포함하는 <see cref="T:System.IO.Stream" /> 입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; that has been loaded.">로드된 <see cref="T:System.Drawing.Image" /> 입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a value indicated by the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.PaintValueEventArgs&quot;&gt;&lt;/xref&gt;.">지정된 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />가 나타내는 값을 칠합니다.</summary>
      <param name="e" vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.PaintValueEventArgs&quot;&gt;&lt;/xref&gt; indicating what to paint and where to paint it.">칠할 대상과 칠할 위치를 나타내는 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary vsli:raw="Exposes a collection of toolbox items.">도구 상자 항목의 컬렉션을 노출합니다.</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 개체의 컬렉션입니다.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary vsli:raw="Provides methods and properties to manage and query the toolbox in the development environment.">개발 환경에서 도구 상자를 관리하고 쿼리할 수 있는 메서드와 속성을 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format.">지정된 데이터 형식에 대해 새 도구 상자 항목 작성자를 추가합니다.</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">도구 상자 항목을 호출할 때, 구성 요소를 만드는 <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />입니다.</param>
      <param name="format" vsli:raw="The data format that the creator handles.">작성자가 처리하는 데이터 형식입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format and designer host.">지정된 데이터 형식과 디자이너 호스트에 대해 새 도구 상자 항목 작성자를 추가합니다.</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">도구 상자 항목을 호출할 때, 구성 요소를 만드는 <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />입니다.</param>
      <param name="format" vsli:raw="The data format that the creator handles.">작성자가 처리하는 데이터 형식입니다.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that represents the designer host to associate with the creator.">작성자와 연결할 디자이너 호스트를 나타내는 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox.">도구 상자에 지정된 프로젝트 연결 도구 상자 항목을 추가합니다.</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">도구 상자에 추가할 연결된 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">현재 디자인 문서에 대한 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox in the specified category.">프로젝트에 연결된 지정 도구 상자 항목을 지정된 범주에 속한 도구 상자에 추가합니다.</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">도구 상자에 추가할 연결된 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <param name="category" vsli:raw="The toolbox item category to add the toolbox item to.">도구 상자 항목을 추가할 도구 상자 항목 범주입니다.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">현재 디자인 문서에 대한 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox.">지정된 도구 상자 항목을 도구 상자에 추가합니다.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">도구 상자에 추가할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox in the specified category.">지정된 범주의 도구 상자에 지정된 도구 상자 항목을 추가합니다.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">도구 상자에 추가할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <param name="category" vsli:raw="The toolbox item category to add the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />을 추가할 도구 상자 항목 범주입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form.">도구 상자 항목을 serialize된 형식으로 나타내는 지정된 개체에서 도구 상자 항목을 가져옵니다.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">검색할 <see cref="T:System.Drawing.Design.ToolboxItem" />이 들어 있는 개체입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from the serialized object.">serialize된 개체로 만들어진 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form, using the specified designer host.">지정된 디자이너 호스트를 사용하여, 도구 상자 항목을 serialize된 형식으로 나타내는 지정된 개체에서 도구 상자 항목을 가져옵니다.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">검색할 <see cref="T:System.Drawing.Design.ToolboxItem" />이 들어 있는 개체입니다.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to associate with this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">이 <see cref="T:System.ComponentModel.Design.IDesignerHost" />와 연결할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from deserialization.">deserialization으로 만들어진 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary vsli:raw="Gets the currently selected toolbox item.">현재 선택한 도구 상자 항목을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item has been selected.">현재 선택된 <see cref="T:System.Drawing.Design.ToolboxItem" />이거나, 선택된 도구 상자 항목이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the currently selected toolbox item if it is available to all designers, or if it supports the specified designer.">모든 디자이너가 사용할 수 있거나, 지정된 디자이너를 지원하는 경우, 현재 선택한 도구 상자 항목을 가져옵니다.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that the selected tool must be associated with for it to be returned.">선택한 도구가 반환되기 위해 연결되어야 하는 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item is currently selected.">현재 선택된 <see cref="T:System.Drawing.Design.ToolboxItem" />이거나, 현재 선택된 도구 상자 항목이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary vsli:raw="Gets the entire collection of toolbox items from the toolbox.">도구 상자에서 도구 상자 항목의 전체 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items.">현재 도구 상자 항목이 들어 있는 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host from the toolbox.">도구 상자에서 지정된 디자이너 호스트와 연결되는 도구 상자 컬렉션을 가져옵니다.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">검색할 도구 상자 항목과 연결되는 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified designer host.">지정된 디자이너 호스트와 연결되는 현재 도구 상자 항목이 들어 있는 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary vsli:raw="Gets a collection of toolbox items from the toolbox that match the specified category.">지정된 범주와 일치하는 도구 상자에서 도구 상자 항목의 컬렉션을 가져옵니다.</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve all the toolbox items from.">모든 도구 상자 항목을 검색할 도구 상자 항목 범주입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category.">지정된 범주와 연결되는 현재 도구 상자 항목이 들어 있는 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host and category from the toolbox.">도구 상자에서 지정된 디자이너 호스트 및 범주와 연결되는 도구 상자 컬렉션을 가져옵니다.</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve the toolbox items from.">도구 상자 항목을 검색할 도구 상자 항목 범주입니다.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">검색할 도구 상자 항목과 연결되는 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category and designer host.">지정된 범주 및 디자이너 호스트와 연결되는 현재 도구 상자 항목이 들어 있는 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item matches the specified attributes.">serialize된 도구 상자 항목을 나타내는 지정된 개체가 지정된 특성과 일치하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">검색할 <see cref="T:System.Drawing.Design.ToolboxItem" />이 들어 있는 개체입니다.</param>
      <param name="filterAttributes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the attributes to test the serialized object for.">serializaton된 개체를 테스트할 특성이 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object matches the specified attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">개체가 지정된 특성과 일치하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item can be used by the specified designer host.">지정된 디자이너 호스트가 serialize된 도구 상자 항목을 나타내는 지정된 개체를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">검색할 <see cref="T:System.Drawing.Design.ToolboxItem" />이 들어 있는 개체입니다.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to test for support for the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />을 지원하는지 테스트할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is compatible with the specified designer host; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 개체가 지정된 디자이너 호스트와 호환되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item.">지정된 개체가 serialize된 도구 상자 항목인지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">검사할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 개체가 도구 상자 항목 개체를 포함하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item, using the specified designer host.">지정된 디자이너 호스트를 사용하여, 지정된 개체가 serialize된 도구 상자 항목인지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">검사할 개체입니다.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is making this request.">이 요청을 하는 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 개체가 도구 상자 항목 개체를 포함하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary vsli:raw="Refreshes the state of the toolbox items.">도구 상자 항목의 상태를 새로 고칩니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary vsli:raw="Removes a previously added toolbox item creator of the specified data format.">지정된 데이터 형식의 이전에 추가된 도구 상자 항목 작성자를 제거합니다.</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">제거할 작성자의 데이터 형식입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Removes a previously added toolbox creator that is associated with the specified data format and the specified designer host.">지정된 데이터 형식 및 지정된 디자이너 호스트와 연결되는 이전에 추가된 도구 상자 작성자를 제거합니다.</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">제거할 작성자의 데이터 형식입니다.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the creator to remove.">제거할 작성자와 연결되는 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">도구 상자에서 지정된 도구 상자 항목을 제거합니다.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">도구 상자에서 제거할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">도구 상자에서 지정된 도구 상자 항목을 제거합니다.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">도구 상자에서 제거할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <param name="category" vsli:raw="The toolbox item category to remove the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />을 제거할 도구 상자 항목 범주입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary vsli:raw="Notifies the toolbox service that the selected tool has been used.">도구 상자 서비스에 선택한 도구의 사용 여부를 알립니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a serializable object that represents the specified toolbox item.">지정된 도구 상자 항목을 나타내는 serializable 개체를 가져옵니다.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to serialize.">serialize할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="An object that represents the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">지정된 <see cref="T:System.Drawing.Design.ToolboxItem" />을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary vsli:raw="Sets the current application's cursor to a cursor that represents the currently selected tool.">현재 애플리케이션의 커서를 현재 선택한 도구를 나타내는 커서로 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the cursor is set by the currently selected tool, &lt;see langword=&quot;false&quot; /&gt; if there is no tool selected and the cursor is set to the standard windows cursor.">커서가 현재 선택한 도구가 커서에 의해 설정되면 <see langword="true" />이고, 선택한 도구가 없고 커서가 표준 Windows 커서로 설정되면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified toolbox item.">지정된 도구 상자 항목을 선택합니다.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">선택할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary vsli:raw="Gets the names of all the tool categories currently on the toolbox.">현재 도구 상자에 있는 모든 도구 범주의 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.CategoryNameCollection&quot; /&gt; containing the tool categories.">도구 범주를 포함하는 <see cref="T:System.Drawing.Design.CategoryNameCollection" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary vsli:raw="Gets or sets the name of the currently selected tool category from the toolbox.">도구 상자에서 현재 선택한 도구 범주의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the currently selected category.">현재 선택한 범주의 이름입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary vsli:raw="Defines an interface for setting the currently selected toolbox item and indicating whether a designer supports a particular toolbox item.">현재 선택된 도구 상자 항목을 설정하고 디자이너에서 특정 도구 상자 항목을 지원하는지 여부를 나타내는 인터페이스를 정의합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the current designer.">현재 디자이너에서 지정된 도구를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">도구 상자 지원 여부를 테스트할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">도구 상자에서 해당 도구를 지원하며 도구를 활성화할 수 있으면 <see langword="true" />이고 문서 디자이너에서 도구 사용 방법을 알지 못하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">지정된 도구를 선택합니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">선택할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
    </member>
    <member name="T:System.Drawing.Design.MetafileEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that can perform default file searching for metafile (.emf) files.">메타파일(.emf) 파일에 대한 기본 파일 검색을 수행할 수 있는 <see cref="T:System.Drawing.Design.UITypeEditor" />를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.MetafileEditor&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.MetafileEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file-list filter that this editor initially uses to filter the file list.">파일 목록을 필터링하기 위해 이 편집기가 처음 사용하는 파일 목록 필터에 대한 확장을 가져옵니다.</summary>
      <returns vsli:raw="A set of file extensions used to filter the file list.">파일 목록을 필터링하는 데 사용되는 확장명 집합입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">이 편집기에서 제공되는 기본 파일 목록 필터에 대한 설명을 가져옵니다.</summary>
      <returns vsli:raw="The description for the default file-list filter.">기본 파일 목록 필터에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">지정된 스트림에서 이미지를 로드합니다.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the image to load.">로드할 이미지를 포함하는 <see cref="T:System.IO.Stream" /> 입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; that has been loaded.">로드된 <see cref="T:System.Drawing.Image" /> 입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event that occurs when components are added to the toolbox.">도구 상자에 구성 요소가 추가될 때 발생하는 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="components" vsli:raw="The components to include in the toolbox.">도구 상자에 포함시킬 구성 요소입니다.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary vsli:raw="Gets or sets an array containing the components to add to the toolbox.">도구 상자에 추가할 구성 요소를 포함하는 배열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; indicating the components to add to the toolbox.">도구 상자에 추가할 구성 요소를 나타내는 <see cref="T:System.ComponentModel.IComponent" /> 형식의 배열입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event that occurs when components are added to the toolbox.">도구 상자에 구성 요소가 추가될 때 발생하는 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="host" vsli:raw="The designer host that is making the request.">요청 중인 디자이너 호스트입니다.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary vsli:raw="Gets or sets an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components.">도구 상자 구성 요소를 만들도록 요청한 <see cref="T:System.ComponentModel.Design.IDesignerHost" />의 인스턴스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components, or &lt;see langword=&quot;null&quot; /&gt; if no designer host was provided to the toolbox item.">도구 상자 구성 요소를 만들도록 요청한 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다. 도구 상자 항목에 디자이너 호스트가 지정되어 있지 않은 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary vsli:raw="Provides a base implementation of a toolbox item.">기본 구현된 도구 상자 항목을 제공합니다.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary vsli:raw="Occurs immediately after components are created.">구성 요소를 만든 후 즉시 발생합니다.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary vsli:raw="Occurs when components are about to be created.">구성 요소를 만들기 직전에 발생합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class that creates the specified type of component.">지정된 구성 요소 형식을 만드는 <see cref="T:System.Drawing.Design.ToolboxItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="toolType" vsli:raw="The type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates.">도구 상자 항목에서 만드는 <see cref="T:System.ComponentModel.IComponent" /> 형식입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />이 잠긴 경우</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary vsli:raw="Throws an exception if the toolbox item is currently locked.">도구 상자 항목이 현재 잠겨 있으면 예외를 throw합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />이 잠겨 있는 경우</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create.">도구 상자 항목이 만들도록 구성된 구성 요소를 만듭니다.</summary>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">생성된 <see cref="T:System.ComponentModel.IComponent" /> 개체 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host.">도구 상자 항목이 만들도록 구성된 구성 요소를 지정된 디자이너 호스트를 사용하여 만듭니다.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">구성 요소를 만들 때 사용할 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">생성된 <see cref="T:System.ComponentModel.IComponent" /> 개체 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host and default values.">도구 상자 항목이 만들도록 구성된 구성 요소를 지정된 디자이너 호스트와 기본값을 사용하여 만듭니다.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">구성 요소를 만들 때 사용할 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">구성 요소의 초기화에 사용할 기본값의 속성 이름/값 쌍 사전입니다.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">생성된 <see cref="T:System.ComponentModel.IComponent" /> 개체 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates a component or an array of components when the toolbox item is invoked.">도구 상자 항목이 호출될 때 구성 요소 한 개나 구성 요소의 배열을 만듭니다.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to host the toolbox item.">도구 상자 항목을 호스팅할 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">생성된 <see cref="T:System.ComponentModel.IComponent" /> 개체 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates an array of components when the toolbox item is invoked.">도구 상자 항목이 호출될 때 구성 요소의 배열을 만듭니다.</summary>
      <param name="host" vsli:raw="The designer host to use when creating components.">구성 요소를 만들 때 사용할 디자이너 호스트입니다.</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">구성 요소의 초기화에 사용할 기본값의 속성 이름/값 쌍 사전입니다.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">생성된 <see cref="T:System.ComponentModel.IComponent" /> 개체 배열입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Loads the state of the toolbox item from the specified serialization information object.">도구 상자 항목의 상태를 지정된 serialization 정보 개체에서 로드합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to load from.">로드할 원본 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">스트림 특징을 나타내는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; instances are equal.">두 개의 <see cref="T:System.Drawing.Design.ToolboxItem" /> 인스턴스가 같은지 여부를 확인합니다.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">현재 <see cref="T:System.Drawing.Design.ToolboxItem" />과 비교할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see langword="true" />가 현재<see cref="T:System.Drawing.Design.ToolboxItem" />와 같으면 <see cref="T:System.Drawing.Design.ToolboxItem" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary vsli:raw="Filters a property value before returning it.">속성 값을 반환하기 전에 필터링합니다.</summary>
      <param name="propertyName" vsli:raw="The name of the property to filter.">필터링할 속성의 이름입니다.</param>
      <param name="value" vsli:raw="The value against which to filter the property.">속성을 필터링할 값입니다.</param>
      <returns vsli:raw="A filtered property value.">필터링된 속성 값입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">현재 <see cref="T:System.Drawing.Design.ToolboxItem" />의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Enables access to the type associated with the toolbox item.">도구 상자 항목과 연결된 형식에 대한 액세스를 가능하게 합니다.</summary>
      <param name="host" vsli:raw="The designer host to query for &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />에 대해 쿼리할 디자이너 호스트입니다.</param>
      <returns vsli:raw="The type associated with the toolbox item.">해당 도구 상자 항목과 연결된 형식입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of the specified type, optionally using a specified designer host and assembly name.">지정된 디자이너 호스트와 어셈블리 이름을 선택적으로 사용하여 지정된 형식의 인스턴스를 만듭니다.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current document. This can be &lt;see langword=&quot;null&quot; /&gt;.">현재 문서에 대한 <see cref="T:System.ComponentModel.Design.IDesignerHost" />입니다. 이 매개 변수는 <see langword="null" />이 될 수 있습니다.</param>
      <param name="assemblyName" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly that contains the type to load. This can be &lt;see langword=&quot;null&quot; /&gt;.">로드할 형식을 포함하는 어셈블리를 나타내는 <see cref="T:System.Reflection.AssemblyName" />입니다. 이 매개 변수는 <see langword="null" />이 될 수 있습니다.</param>
      <param name="typeName" vsli:raw="The name of the type to create an instance of.">인스턴스를 만들 형식의 이름입니다.</param>
      <param name="reference" vsli:raw="A value indicating whether or not to add a reference to the assembly that contains the specified type to the designer host's set of references.">지정된 형식을 포함하는 어셈블리에 대한 참조를 디자이너 호스트의 참조 집합에 추가할 것인지 여부를 나타내는 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; is not specified.">
        <paramref name="typeName" />을(를) 지정하지 않았습니다.</exception>
      <returns vsli:raw="An instance of the specified type, if it can be located.">지정된 형식을 찾을 수 있는 경우 그 형식의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary vsli:raw="Initializes the current toolbox item with the specified type to create.">만들려는 지정된 형식으로 현재 도구 상자 항목을 초기화합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the toolbox item creates.">도구 상자 항목에서 만드는 <see cref="T:System.Type" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />이 잠긴 경우</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary vsli:raw="Locks the toolbox item and prevents changes to its properties.">도구 상자 항목을 잠그고 속성에 대한 변경을 방지합니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 이벤트를 발생시킵니다.</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">
        <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 이벤트를 발생시킵니다.</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Saves the state of the toolbox item to the specified serialization information object.">도구 상자 항목의 상태를 지정된 serialization 정보 개체에 저장합니다.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to save to.">저장할 곳인 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">스트림 특징을 나타내는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; method.">이 멤버에 대한 설명을 보려면 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 메서드를 참조하세요.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">현재 <see cref="T:System.Drawing.Design.ToolboxItem" />를 나타내는 <see cref="T:System.String" />을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">현재 <see cref="T:System.String" />를 나타내는 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Validates that an object is of a given type.">개체가 지정된 형식인지 유효성을 검사합니다.</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">유효성을 검사할 속성의 이름입니다.</param>
      <param name="value" vsli:raw="Optional value against which to validate.">유효성을 검사할 선택적 값입니다.</param>
      <param name="expectedType" vsli:raw="The expected type of the property.">속성의 필요한 형식입니다.</param>
      <param name="allowNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />을 허용하면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;allowNull&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" />가 <see langword="null" />이고 <paramref name="allowNull" />이 <see langword="false" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not the type specified by &lt;paramref name=&quot;expectedType&quot; /&gt;.">
        <paramref name="value" />가 <paramref name="expectedType" />에 지정된 형식이 아닌 경우</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary vsli:raw="Validates a property before it is assigned to the property dictionary.">속성을 속성 사전에 할당하기 전에 유효성을 검사합니다.</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">유효성을 검사할 속성의 이름입니다.</param>
      <param name="value" vsli:raw="The value against which to validate.">유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;propertyName&quot; /&gt; is &quot;IsTransient&quot;.">
        <paramref name="value" />가 <see langword="null" />이고 <paramref name="propertyName" />이 "IsTransient"인 경우</exception>
      <returns vsli:raw="The value used to perform validation.">유효성 검사를 수행하는 데 사용할 값입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains the type or types that the toolbox item creates.">도구 상자 항목이 만드는 형식을 포함하는 어셈블리 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly containing the type or types to create.">만들 형식을 포함하는 어셈블리를 나타내는 <see cref="T:System.Reflection.AssemblyName" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary vsli:raw="Gets or sets a bitmap to represent the toolbox item in the toolbox.">도구 상자에서 도구 상자 항목을 나타내는 비트맵을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">도구 상자에서 도구 상자 항목을 나타내는 <see cref="T:System.Drawing.Bitmap" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary vsli:raw="Gets or sets the company name for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />의 회사 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the company for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" />의 회사를 지정하는 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary vsli:raw="Gets the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />에 대한 구성 요소 형식을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" />에 대한 회사 형식을 지정하는 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; for the toolbox item.">도구 상자 항목의 <see cref="T:System.Reflection.AssemblyName" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; objects.">
        <see cref="T:System.Reflection.AssemblyName" /> 개체의 배열입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary vsli:raw="Gets or sets the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />의 설명을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" />의 설명을 지정하는 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary vsli:raw="Gets or sets the display name for the toolbox item.">도구 상자 항목의 표시 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The display name for the toolbox item.">도구 상자 항목에 대한 표시 이름입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary vsli:raw="Gets or sets the filter that determines whether the toolbox item can be used on a destination component.">도구 상자 항목이 대상 구성 요소에서 사용될 수 있는지를 결정하는 필터를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.ToolboxItemFilterAttribute&quot; /&gt; objects.">
        <see cref="T:System.Collections.ICollection" /> 개체의 <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary vsli:raw="Gets a value indicating whether the toolbox item is transient.">도구 상자 항목이 임시인지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this toolbox item should not be stored in any toolbox database when an application that is providing a toolbox closes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">도구 상자를 제공하는 애플리케이션을 닫을 때 이 도구 상자 항목을 도구 상자 데이터베이스에 저장할 필요가 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is currently locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />이 현재 잠겨 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the toolbox item is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">도구 상자 항목이 잠겨 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary vsli:raw="Gets or sets the original bitmap that will be used in the toolbox for this item.">이 항목의 도구 상자에서 사용될 원래 비트맵을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">도구 상자에서 도구 상자 항목을 나타내는 <see cref="T:System.Drawing.Bitmap" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary vsli:raw="Gets a dictionary of properties.">속성 사전을 가져옵니다.</summary>
      <returns vsli:raw="A dictionary of name/value pairs (the names are property names and the values are property values).">이름/값 쌍 사전입니다. 여기서 이름은 속성 이름이고 값은 속성 값입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary vsli:raw="Gets or sets the fully qualified name of the type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates when invoked.">도구 상자 항목이 호출될 때 만드는 <see cref="T:System.ComponentModel.IComponent" /> 형식의 정규화된 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The fully qualified type name of the type of component that this toolbox item creates.">이 도구 상자 항목이 만드는 구성 요소 형식의 정규화된 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary vsli:raw="Gets the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />의 버전을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" />의 버전을 지정하는 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary vsli:raw="Represents a collection of toolbox items.">도구 상자 항목의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified array of toolbox items.">지정된 도구 상자 항목의 배열을 사용하여 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; containing the toolbox items to fill the collection with.">컬렉션을 채울 도구 상자 항목을 포함하는 <see cref="T:System.Drawing.Design.ToolboxItem" /> 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified collection.">지정된 컬렉션을 사용하여 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; to fill the new collection with.">새 컬렉션을 채울 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the collection contains the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">컬렉션에 지정된 <see cref="T:System.Drawing.Design.ToolboxItem" />이 들어 있는지 여부를 나타냅니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to search the collection for.">컬렉션을 검색할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 지정한 개체가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary vsli:raw="Copies the collection to the specified array beginning with the specified destination index.">지정된 대상 인덱스에서 시작하는 지정된 배열에 컬렉션을 복사합니다.</summary>
      <param name="array" vsli:raw="The array to copy to.">복사할 대상 배열입니다.</param>
      <param name="index" vsli:raw="The index to begin copying to.">복사를 시작할 인덱스입니다.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;, if it exists in the collection.">컬렉션에 지정된 도구 상자 항목이 있는 경우 해당 <see cref="T:System.Drawing.Design.ToolboxItem" />의 인덱스를 가져옵니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to get the index of in the collection.">컬렉션에 있는 인덱스를 가져올 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">지정된 <see cref="T:System.Drawing.Design.ToolboxItem" />의 인덱스입니다.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at the specified index.">지정된 인덱스의 <see cref="T:System.Drawing.Design.ToolboxItem" />를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of the object to get or set.">가져오거나 설정할 개체의 인덱스입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at each valid index in the collection.">컬렉션의 유효한 각 인덱스에 있는 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary vsli:raw="Provides a callback mechanism that can create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />을 만들 수 있는 콜백 메커니즘을 제공합니다.</summary>
      <param name="serializedObject" vsli:raw="The object which contains the data to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />을 만들 대상 데이터가 포함된 개체입니다.</param>
      <param name="format" vsli:raw="The name of the clipboard data format to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">
        <see cref="T:System.Drawing.Design.ToolboxItem" />을 만들 대상 클립보드 데이터 형식의 이름입니다.</param>
      <returns vsli:raw="The deserialized &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; object specified by &lt;paramref name=&quot;serializedObject&quot; /&gt;.">
        <paramref name="serializedObject" />로 지정된 <see cref="T:System.Drawing.Design.ToolboxItem" /> 개체의 역직렬화된 형식입니다.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary vsli:raw="Use &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ITypeLib&quot; /&gt; instead.">대신 <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />를 사용하세요.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">라이브러리의 설명서 문자열, 전체 도움말 파일 이름과 경로, 도움말 파일의 라이브러리 도움말 항목에 대한 컨텍스트 식별자를 검색합니다.</summary>
      <param name="index" vsli:raw="Index of the type description whose documentation is to be returned.">설명서를 반환할 형식 설명의 인덱스입니다.</param>
      <param name="strName" vsli:raw="Returns a string that contains the name of the specified item.">지정된 항목의 이름이 들어 있는 문자열을 반환합니다.</param>
      <param name="strDocString" vsli:raw="Returns a string that contains the documentation string for the specified item.">지정된 항목에 대한 설명서 문자열이 들어 있는 문자열을 반환합니다.</param>
      <param name="dwHelpContext" vsli:raw="Returns the Help context identifier associated with the specified item.">지정된 항목과 연관된 도움말 컨텍스트 식별자를 반환합니다.</param>
      <param name="strHelpFile" vsli:raw="Returns a string that contains the fully qualified name of the Help file.">도움말 파일의 정규화된 이름이 들어 있는 문자열을 반환합니다.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">라이브러리의 특성이 들어 있는 구조를 검색합니다.</summary>
      <param name="ppTLibAttr" vsli:raw="On successful return, a structure that contains the library's attributes.">반환이 성공적이면, 라이브러리의 특성이 들어 있는 구조입니다.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">형식 라이브러리에 있는 형식 설명의 수를 반환합니다.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">형식 라이브러리에 있는 형식 설명의 수입니다.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">형식 설명의 형식을 검색합니다.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">형식 라이브러리에 있는 형식 설명의 인덱스</param>
      <param name="pTKind" vsli:raw="A reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description.">형식 설명에 대한 <see langword="TYPEKIND" /> 열거형에 대한 참조입니다.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">라이브러리에 설명되어 있는 형식이나 멤버의 이름이 전달된 문자열에 들어 있는지 여부를 나타냅니다.</summary>
      <param name="szNameBuf" vsli:raw="The string to test.">테스트할 문자열입니다.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">
        <paramref name="szNameBuf" />의 해시 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="szNameBuf" />가 형식 라이브러리에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; originally obtained from &lt;see cref=&quot;M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt;.">
        <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" />에서 처음 얻은 <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" />를 해제합니다.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; to release.">해제할 <see langword="TLIBATTR" />입니다.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary vsli:raw="Provides a user interface for configuring an &lt;see cref=&quot;P:System.Windows.Forms.Control.Anchor&quot; /&gt; property.">
        <see cref="P:System.Windows.Forms.Control.Anchor" /> 속성을 구성하기 위한 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AnchorEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.AnchorEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">지정된 서비스 공급자와 컨텍스트를 사용하여 지정된 개체의 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">편집 서비스를 얻을 수 있는 <see cref="T:System.IServiceProvider" />입니다.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">편집 중인 값의 인스턴스입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 메서드에서 사용하는 편집기 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the provided editing style. If the method is not supported, this method will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">제공된 편집 스타일을 나타내는 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 값 중 하나입니다. 해당 메서드가 지원되지 않는 경우 이 메서드는 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />을 반환합니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary vsli:raw="Imports ActiveX controls and generates a wrapper that can be accessed by a designer.">ActiveX 컨트롤을 가져와 디자이너가 액세스할 수 있는 래퍼를 생성합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.AxImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="options" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; that indicates the options for the ActiveX control importer to use.">ActiveX 컨트롤 가져오기에서 사용할 옵션을 나타내는 <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />입니다.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary vsli:raw="Provides methods to resolve references to ActiveX libraries, COM type libraries or assemblies, or managed assemblies.">ActiveX 라이브러리, COM 형식 라이브러리나 어셈블리 또는 관리되는 어셈블리에 대한 참조를 확인하는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an ActiveX control.">ActiveX 컨트롤이 포함된 지정 형식 라이브러리에 대한 참조를 확인합니다.</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">참조를 확인할 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />입니다.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">어셈블리에 대한 정규화된 경로입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves a reference to the specified assembly that contains a COM component.">COM 구성 요소가 포함된 지정 어셈블리에 대한 참조를 확인합니다.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly to resolve a reference to.">참조를 확인할 어셈블리를 나타내는 <see cref="T:System.Reflection.AssemblyName" />입니다.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">어셈블리에 대한 정규화된 경로입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an COM component.">COM 구성 요소가 포함된 지정 형식 라이브러리에 대한 참조를 확인합니다.</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">참조를 확인할 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />입니다.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">어셈블리에 대한 정규화된 경로입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary vsli:raw="Resolves a reference to the specified assembly.">지정된 어셈블리에 대한 참조를 확인합니다.</summary>
      <param name="assemName" vsli:raw="The name of the assembly to resolve a reference to.">참조를 확인할 어셈블리의 이름입니다.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">어셈블리에 대한 정규화된 경로입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary vsli:raw="Represents a set of options for an &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.AxImporter" />에 대한 옵션 집합을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary vsli:raw="Specifies whether the generated assembly is strongly named and will be signed later.">생성된 어셈블리에 강력한 이름을 지정하고 서명을 나중에 할 것인지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary vsli:raw="Specifies whether sources for the type library wrapper should be generated.">형식 라이브러리 래퍼의 소스를 생성할 것인지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary vsli:raw="Specifies whether to use only input from the command line instead relying on a registered version.">등록된 버전에 의존하지 않고 명령줄 입력만 사용할지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key container for the generated assemblies.">생성된 어셈블리에 대해 강력한 이름 키 컨테이너가 포함된 파일의 경로를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key for the generated assemblies.">생성된 어셈블리에 대해 강력한 이름 키가 포함된 파일의 경로를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary vsli:raw="Specifies the strong name used for the generated assemblies.">생성된 어셈블리에 대해 사용한 강력한 이름을 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary vsli:raw="Specifies whether errors are output in the Microsoft Build Engine (MSBuild) format.">오류가 MSBuild(Microsoft Build Engine) 형식으로 출력되는지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary vsli:raw="Indicates whether the ActiveX importer tool logo will be displayed when the control is imported.">컨트롤을 가져올 때 ActiveX 가져오기 도구 로고를 표시할지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary vsli:raw="Specifies the path to the directory that the generated assemblies will be created in.">생성된 어셈블리를 만들어 넣을 디렉터리의 경로를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary vsli:raw="Specifies the filename to generate the ActiveX control wrapper to.">ActiveX 컨트롤 래퍼를 생성할 파일 이름을 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary vsli:raw="Specifies whether to overwrite existing files when generating assemblies.">어셈블리를 생성할 때 기존 파일을 덮어쓰기할 것인지를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary vsli:raw="Specifies the public key used to sign the generated assemblies.">생성된 어셈블리에 서명하는 데 사용하는 공개 키를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.IReferenceResolver&quot; /&gt; to use to resolve types and references when generating assemblies.">
        <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" />를 지정하여 어셈블리를 생성할 때 형식과 참조를 확인하는 데 사용합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary vsli:raw="Specifies whether to compile in silent mode, which generates less displayed information at compile time.">컴파일 타임에 정보를 표시하지 않는 자동 설치 모드(설치 상태 표시 안 함)로 컴파일할 것인지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary vsli:raw="Specifies whether to compile in verbose mode, which generates more displayed information at compile time.">컴파일 타임에 많은 정보를 표시하는 세부 정보 표시 모드로 컴파일할 것인지 여부를 지정합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary vsli:raw="Manages a collection of user-interface related &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects. This class cannot be inherited.">사용자 인터페이스와 관련된 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 개체의 컬렉션을 관리합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기(Adorner) 창을 새로 고치도록 합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt;.">지정된 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 안에서 <see cref="T:System.Drawing.Rectangle" />의 표시기 창을 새로 고치게 합니다.</summary>
      <param name="rectangle" vsli:raw="The area to invalidate.">무효화할 영역입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt;.">지정된 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 안에서 <see cref="T:System.Drawing.Region" />의 표시기 창을 새로 고치게 합니다.</summary>
      <param name="region" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt; to invalidate.">무효화할 <see cref="T:System.Drawing.Region" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />와 연결된 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />와 연결된 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary vsli:raw="Gets or sets a value indicating if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />가 활성화되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; objects that are managed by a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />에서 관리하는 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 개체를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">주어진 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />을 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="callParentBehavior" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent behavior should be called if it exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">부모 동작이 있는 경우에 그 동작을 호출해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="behaviorService" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to use.">사용할 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callParentBehavior&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, and &lt;paramref name=&quot;behaviorService&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callParentBehavior" />가 <see langword="true" />이고 <paramref name="behaviorService" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Intercepts commands.">명령을 차단합니다.</summary>
      <param name="commandId" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> 개체입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt;. By default, &lt;see cref=&quot;M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> 기본적으로 <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> 반환 <see langword="null" />합니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop behavior.">끌어서 놓기 동작을 사용자 지정할 수 있습니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; object on which to invoke drag-and-drop behavior.">끌어서 놓기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 개체입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-enter behavior.">범위 안으로 끌기 동작을 사용자 지정할 수 있습니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-enter behavior.">범위 안으로 끌기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Permits custom drag-leave behavior.">범위 밖으로 끌기 동작을 사용자 지정할 수 있습니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-leave behavior.">범위 밖으로 끌기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-over behavior.">범위 위로 끌기 동작을 사용자 지정할 수 있습니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-over behavior.">범위 위로 끌기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop feedback behavior.">끌어서 놓기 피드백 동작을 사용자 지정할 수 있습니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">끌어서 놓기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Called by the adorner window when it loses mouse capture.">표시기 창에서 마우스 캡처가 손실될 때 호출됩니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">끌어서 놓기 동작을 호출할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any double-click message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 두 번 클릭 메시지가 전달될 때 호출됩니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">클릭한 단추를 나타내는 <see cref="T:System.Windows.Forms.MouseButtons" /> 값입니다.</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">마우스 클릭이 발생한 위치입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-down message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 마우스 클릭 메시지가 전달될 때 호출됩니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">클릭한 단추를 나타내는 <see cref="T:System.Windows.Forms.MouseButtons" /> 값입니다.</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">마우스 클릭이 발생한 위치입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-enter message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 마우스 이동 메시지가 전달될 때 호출됩니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-hover message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 위로 마우스 호버 메시지가 전달될 때 호출됩니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="mouseLoc" vsli:raw="The location at which the hover occurred.">호버 마우스 이동이 발생한 위치입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-leave message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 범위 밖으로 마우스 이동 메시지가 전달될 때 호출됩니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-move message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 마우스 이동 메시지가 전달될 때 호출됩니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">클릭한 단추를 나타내는 <see cref="T:System.Windows.Forms.MouseButtons" /> 값입니다.</param>
      <param name="mouseLoc" vsli:raw="The location at which the move occurred.">마우스 이동이 발생한 위치입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary vsli:raw="Called when any mouse-up message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창에 마우스 놓기 메시지가 전달될 때 호출됩니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">클릭한 단추를 나타내는 <see cref="T:System.Windows.Forms.MouseButtons" /> 값입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary vsli:raw="Sends this drag-and-drop event from the adorner window to the appropriate &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; or hit-tested &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">표시기 창에서 적절한 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 또는 적중 테스트가 수행된 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />에 이 끌어서 놓기 이벤트를 전달합니다.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.QueryContinueDragEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary vsli:raw="Gets the cursor that should be displayed for this behavior.">이 동작에 대해 표시할 커서를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor that should be displayed for this behavior.">이 동작에 대해 표시해야 할 커서를 나타내는 <see cref="T:System.Windows.Forms.Cursor" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects should be disabled.">
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> 개체를 비활성화해야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects the designer receives should have states set to &lt;c&gt;Enabled = false&lt;/c&gt; when this &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; is active; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="T:System.ComponentModel.Design.MenuCommand" />디자이너가 받는 모든 개체가 활성 상태일 때 상태를 <c>Enabled = false</c> 로 설정 해야 하면이 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 고, 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events.">
        <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> 및 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dragComponents" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">현재 끌고 있는 <see cref="T:System.Collections.ICollection" /> 개체의 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary vsli:raw="Gets the list of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">현재 끌고 있는 <see cref="T:System.ComponentModel.IComponent" /> 개체의 목록을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">현재 끌고 있는 <see cref="T:System.Collections.ICollection" /> 개체의 <see cref="T:System.ComponentModel.IComponent" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary vsli:raw="Represents the methods that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;. This class cannot be inherited.">
        <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" />의 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> 및 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 이벤트를 처리하는 메서드를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary vsli:raw="Manages user interface in the designer. This class cannot be inherited.">디자이너의 사용자 인터페이스를 관리합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; starts a drag-and-drop operation.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />에서 끌어서 놓기 작업을 시작할 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; completes a drag operation.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />에서 끌기 작업을 완료할 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary vsli:raw="Occurs when the current selection should be refreshed.">현재 선택 내용을 새로 고쳐야 할 경우에 발생합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary vsli:raw="Translates a &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window to screen coordinates.">표시기 창의 <see cref="T:System.Drawing.Point" />를 화면 좌표로 변환합니다.</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">변환할 <see cref="T:System.Drawing.Point" /> 값입니다.</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in screen coordinates.">화면 좌표로 변환된 <see cref="T:System.Drawing.Point" /> 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary vsli:raw="Gets the location of the adorner window in screen coordinates.">화면 좌표에서 표시기 창 위치를 가져옵니다.</summary>
      <returns vsli:raw="The location, from the upper-left corner of the adorner window, in screen coordinates.">화면 좌표에서 표시기 창의 왼쪽 위 모퉁이부터 계산된 위치입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" />의 경계 <see cref="T:System.Windows.Forms.Control" />을 반환합니다.</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">변환할 <see cref="T:System.Windows.Forms.Control" />입니다.</param>
      <returns vsli:raw="The bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to the adorner window coordinates.">표시기 창 좌표로 변환된 <see cref="T:System.Drawing.Rectangle" />의 경계 <see cref="T:System.Windows.Forms.Control" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the location of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to adorner window coordinates.">표시기 창 좌표로 변환된 <see cref="T:System.Windows.Forms.Control" />의 위치를 반환합니다.</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">변환할 <see cref="T:System.Windows.Forms.Control" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value indicating the location of &lt;paramref name=&quot;c&quot; /&gt; in adorner window coordinates.">표시기 창 좌표에 있는 <paramref name="c" /> 위치를 나타내는 <see cref="T:System.Drawing.Point" /> 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; in the behavior stack.">동작 스택에서 지정된 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 바로 다음에 있는 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />를 반환합니다.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; preceding the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to be returned.">반환될 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 바로 앞에 있는 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after &lt;paramref name=&quot;behavior&quot; /&gt; in the behavior stack, or &lt;see langword=&quot;null&quot; /&gt; if there is no following behavior.">동작 스택에서 <paramref name="behavior" /> 바로 다음에 있는 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />이거나, 바로 다음 동작이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary vsli:raw="Invalidates the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창을 무효화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">표시기 창 내에서 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 지정된 영역을 무효화합니다.</summary>
      <param name="rect" vsli:raw="The rectangular area to invalidate.">무효화할 사각형 영역입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">표시기 창 내에서 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 지정된 영역을 무효화합니다.</summary>
      <param name="r" vsli:raw="The region to invalidate.">무효화할 영역입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary vsli:raw="Converts a point in a handle's coordinate system to the adorner window coordinates.">핸들 좌표계 위치를 표시기 창 좌표로 변환합니다.</summary>
      <param name="handle" vsli:raw="An adorner window's handle.">표시기 창의 핸들입니다.</param>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in a handle's coordinate system.">핸들 좌표계의 <see cref="T:System.Drawing.Point" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window coordinates.">표시기 창 좌표에 있는 <see cref="T:System.Drawing.Point" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Removes and returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the stack.">스택의 맨 위에서 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />를 제거하고 반환합니다.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to remove from the stack.">스택에서 제거할 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; stack is empty.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 스택이 비어 있는 경우</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; that was removed from the stack.">스택에서 제거된 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />를 동작 스택에 푸시합니다.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">푸시할 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack and assigns mouse capture to the behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />를 동작 스택에 푸시하고 동작에 마우스 캡처를 할당합니다.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">푸시할 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary vsli:raw="Translates a point in screen coordinates into the adorner window coordinates of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">화면 좌표 위치를 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />의 표시기 창 좌표로 변환합니다.</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">변환할 <see cref="T:System.Drawing.Point" /> 값입니다.</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in adorner window coordinates.">표시기 창 좌표로 변환된 <see cref="T:System.Drawing.Point" /> 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary vsli:raw="Synchronizes all selection glyphs.">모든 선택 문자 모양을 동기화합니다.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />를 가져옵니다.</summary>
      <returns vsli:raw="A collection of adorner.">표시기(adorner)의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">표시기(Adorner) 창의 <see cref="T:System.Drawing.Graphics" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">표시기 창에 대한 <see cref="T:System.Drawing.Graphics" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack without removing it.">동작 스택의 맨 위에서 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />를 제거하지 않고 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack.">동작 스택의 맨 위에 있는 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; objects in a strongly typed collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 개체를 강력한 형식의 컬렉션에 저장합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given array.">지정된 배열을 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to populate the collection.">컬렉션을 채울 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">주어진 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 참조를 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="behaviorService" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 참조입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">기존 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />에서 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; from which to populate the collection.">컬렉션을 채우기 시작할 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">지정된 값이 있는 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />를 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />에 추가합니다.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to add to the end of the collection.">컬렉션의 끝에 추가할 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />입니다.</param>
      <returns vsli:raw="The index at which the new element was inserted.">새 요소가 삽입된 인덱스입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />의 끝에 배열의 요소를 복사합니다.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to copy to the end of the collection.">컬렉션의 끝에 복사할 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to the end of the collection.">다른 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />의 내용을 컬렉션의 끝에 추가합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to add to the end of the collection.">컬렉션의 끝에 추가할 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />에 지정한 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />가 포함되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">찾을 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">지정한 인덱스에서 1차원 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />에 <see cref="T:System.Array" /> 값을 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />에서 복사된 값의 대상인 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">복사를 시작할 <paramref name="array" />의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.&#xA;&#xA;-or-&#xA;&#xA;The number of elements in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; is greater than the available space between &lt;paramref name=&quot;index&quot; /&gt; and the end of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" />가 다차원 배열인 경우

또는

<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />의 요소 수가 <paramref name="index" />와 <paramref name="array" /> 끝 사이의 사용 가능한 공간보다 큰 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the lower bound of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" />가 <paramref name="array" />의 하한값보다 작습니다.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 인스턴스에서 반복할 수 있는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 인스턴스에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Returns the index of an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />에 있는 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />의 인덱스를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">찾을 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />입니다.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;, if found; otherwise, -1.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />에 <paramref name="value" />의 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 인덱스가 있으면 반환 값은 해당 인덱스이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />의 지정된 인덱스에 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" />를 삽입할 0부터 시작하는 인덱스입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to insert.">삽입할 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />에서 특정한 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />를 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />에서 제거할 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not found in the collection.">
        <paramref name="value" />가 컬렉션에 없습니다.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">요소의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; element specified by &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" />로 지정된 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 요소입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary vsli:raw="Supports iteration over a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />에 대한 반복을 지원합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="mappings" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; for which to create the enumerator.">열거자를 만들 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">열거자를 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />의 다음 요소로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator was past the end of the collection.">열거자가 다음 요소로 이동한 경우 <see langword="true" />가 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />가 반환됩니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary vsli:raw="Gets the current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />의 현재 요소를 가져옵니다.</summary>
      <returns vsli:raw="The current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />의 현재 요소입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt; property.">이 멤버에 대한 설명을 보려면 <see cref="P:System.Collections.IEnumerator.Current" /> 속성을 참조하세요.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the collection.">컬렉션의 현재 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its component.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />를 해당 구성 요소에 연결합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />가 연결된 구성 요소입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />가 연결된 구성 요소입니다.</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />가 연결된 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt;.">지정한 지점에서 발생한 마우스 클릭을 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />에서 처리해야 할지 여부를 나타냅니다.</summary>
      <param name="p" vsli:raw="A point to hit-test.">적중 테스트를 수행할 지점입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" />가 <paramref name="p" />와 연결되어 있을 경우 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">그리기 논리를 제공합니다.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics&quot; /&gt; of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" />의 <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" />가 포함된 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary vsli:raw="Gets the component that is associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; .">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />와 연결된 구성 요소를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.ComponentModel.IComponent" />와 연결된 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its control.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />를 해당 컨트롤에 연결합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" />의 범위를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">마우스 포인터가 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 위에 있을 때 표시할 커서를 나타내는 <see cref="T:System.Windows.Forms.Cursor" />입니다.</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />가 연결된 구성 요소입니다.</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />가 연결된 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" />의 범위를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">마우스 포인터가 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 위에 있을 때 표시할 커서를 나타내는 <see cref="T:System.Windows.Forms.Cursor" />입니다.</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />가 연결된 구성 요소입니다.</param>
      <param name="designer" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" />가 연결된 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt;.">지정한 지점에서 발생한 마우스 클릭을 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />에서 처리해야 할지 여부를 나타냅니다.</summary>
      <param name="p" vsli:raw="A point to hit test.">적중 테스트를 수행할 지점입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" />가 <paramref name="p" />와 연결되어 있을 경우 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />의 범위를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" />의 범위를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary vsli:raw="Represents a single user interface (UI) entity managed by an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />에서 관리되는 단일 UI(사용자 인터페이스) 엔터티를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;. Can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />와 연결된 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다. <see langword="null" />일 수 있습니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Provides hit test logic.">적중 테스트 논리를 제공합니다.</summary>
      <param name="p" vsli:raw="A point to hit-test.">적중 테스트를 수행할 지점입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" />가 <paramref name="p" />와 연결되어 있을 경우 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">그리기 논리를 제공합니다.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Changes the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />에 연결된 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />를 변경합니다.</summary>
      <param name="behavior" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to associate with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />에 연결할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />와 연결된 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />에 연결된<see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />이거나, 동작이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />의 범위를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" />의 범위를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects in a strongly typed collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 개체를 강력한 형식의 컬렉션에 저장합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; array.">지정된 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 배열을 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to populate the collection.">컬렉션을 채울 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class based on another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">다른 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />을 기준으로 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to populate the collection.">컬렉션을 채울 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">지정된 값을 가지는 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />를 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />에 추가합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to add to the end of the collection.">컬렉션의 끝에 추가할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
      <returns vsli:raw="The index at which the new element was inserted.">새 요소가 삽입된 인덱스입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />의 끝에 배열의 요소를 복사합니다.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to copy to the end of the collection.">컬렉션의 끝에 복사할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to the end of the collection.">다른 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />의 내용을 컬렉션의 끝에 추가합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to add to the end of the collection.">컬렉션의 끝에 추가할 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />에 지정한 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />가 포함되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">찾을 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">지정한 인덱스에서 1차원 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />에 <see cref="T:System.Array" /> 값을 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />에서 복사된 값의 대상인 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">복사를 시작할 <paramref name="array" />의 인덱스입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Returns the index of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />에 있는 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />의 인덱스를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">찾을 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;, if found; otherwise, -1.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />에 <paramref name="value" />의 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 인덱스가 있으면 반환 값은 해당 인덱스이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; at the specified index.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />의 지정된 인덱스에 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" />를 삽입할 0부터 시작하는 인덱스입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to insert.">삽입할 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />에서 특정한 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />를 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />에서 제거할 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">요소의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; element at the specified index.">지정된 인덱스에 있는 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 요소입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary vsli:raw="Describes the designer selection state of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">디자이너의 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 선택 상태를 설명합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is not selected.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />이 선택되지 않았습니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is selected.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />이 선택되었습니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is the primary selection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />가 기본 선택 항목입니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary vsli:raw="Represents the horizontal and vertical line segments that are dynamically created in the user interface (UI) to assist in the design-time layout of controls in a container. This class cannot be inherited.">디자인 타임에 컨테이너에서 컨트롤의 레이아웃을 쉽게 조정할 수 있도록 UI(사용자 인터페이스)에 동적으로 만들어지는 가로 및 세로 선 세그먼트를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type and offset.">지정한 맞춤선 형식과 오프셋을 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">만들 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />입니다. 맞춤선의 상대 위치와 방향을 나타냅니다.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">소유하고 있는 컨트롤의 왼쪽 위 원점을 기준으로 계산된 맞춤선의 위치(픽셀)입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and filter name.">지정한 맞춤선 형식, 오프셋 및 필터 이름을 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">만들 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />입니다. 맞춤선의 상대 위치와 방향을 나타냅니다.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">소유하고 있는 컨트롤의 왼쪽 위 원점을 기준으로 계산된 맞춤선의 위치(픽셀)입니다.</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">프로그래머가 정의한 맞춤선 범주를 지정하는 데 사용되는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, filter name, and priority.">지정된 맞춤선 형식, 오프셋, 필터 이름 및 우선 순위를 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">만들 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />입니다. 맞춤선의 상대 위치와 방향을 나타냅니다.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">소유하고 있는 컨트롤의 왼쪽 위 원점을 기준으로 계산된 맞춤선의 위치(픽셀)입니다.</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">프로그래머가 정의한 맞춤선 범주를 지정하는 데 사용되는 <see cref="T:System.String" />입니다.</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">맞춤선의 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and priority.">지정된 맞춤선 형식, 오프셋 및 우선 순위를 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">만들 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />입니다. 맞춤선의 상대 위치와 방향을 나타냅니다.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">소유하고 있는 컨트롤의 왼쪽 위 원점을 기준으로 계산된 맞춤선의 위치(픽셀)입니다.</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">맞춤선의 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary vsli:raw="Adjusts the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.SnapLine.Offset&quot; /&gt; property of the snapline.">맞춤선의 <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> 속성을 조정합니다.</summary>
      <param name="adjustment" vsli:raw="The number of pixels to change the snapline offset by.">맞춤선 오프셋을 변경할 픽셀 수입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary vsli:raw="Returns a value indicating whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; should snap to another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">지정한 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />을 다른 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />에 맞출지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="line1" vsli:raw="The specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">지정된 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />입니다.</param>
      <param name="line2" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; to which the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; is expected to snap.">지정한 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />을 맞출 대상 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;line1&quot; /&gt; should snap to &lt;paramref name=&quot;line2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="line1" />을 <paramref name="line2" />에 맞추려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary vsli:raw="Returns a string representation of the current snapline.">현재 맞춤선의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">현재 <see cref="T:System.String" />를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary vsli:raw="Gets the programmer-defined filter category associated with this snapline.">이 맞춤선과 관련하여 프로그래머가 정의한 필터 범주를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the filter category. The default is &lt;see langword=&quot;null&quot; /&gt;.">필터 범주를 정의하는 <see cref="T:System.String" />입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary vsli:raw="Gets a value indicating whether the snapline has a horizontal orientation.">가로 방향 맞춤선인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is horizontal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">가로 방향 맞춤선이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary vsli:raw="Gets a value indicating whether the snapline has a vertical orientation.">세로 방향 맞춤선인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is vertical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">세로 방향 맞춤선이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary vsli:raw="Gets the number of pixels that the snapline is offset from the origin of the associated control.">연결된 컨트롤의 원점부터 계산된 맞춤선의 오프셋(픽셀)을 가져옵니다.</summary>
      <returns vsli:raw="The offset, in pixels, of the snapline.">맞춤선의 오프셋(픽셀)입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary vsli:raw="Gets a value indicating the relative importance of the snapline.">맞춤선의 상대적인 중요도를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; that represents the priority category of a snapline.">맞춤선의 우선 순위 범주를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary vsli:raw="Gets the type of a snapline, which indicates the general location and orientation.">일반적인 위치와 방향을 나타내는 맞춤선의 형식을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; that represents the orientation and general location, relative to control edges, of a snapline.">컨트롤 가장자리를 기준으로 맞춤선의 방향과 일반적인 위치를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary vsli:raw="Specifies the relative importance of a snapline.">맞춤선의 상대적인 중요도를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary vsli:raw="The priority category that is equivalent to the highest priority of all the current snaplines. Indicates that this category of snapline should always be active.">현재의 모든 맞춤선 중 가장 높은 우선 순위에 해당하는 우선 순위 범주입니다. 이 범주에 속하는 맞춤선은 항상 활성화됩니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary vsli:raw="The highest priority category.">가장 높은 우선 순위의 범주입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary vsli:raw="The lowest priority category.">가장 낮은 우선 순위 범주입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary vsli:raw="The middle priority category.">중간 우선 순위 범주입니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary vsli:raw="Specifies the orientation and relative location of a snapline.">맞춤선의 방향과 상대 위치를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary vsli:raw="A horizontal snapline typically associated with a primary internal feature of a control; for example, the base of the text string in a &lt;see cref=&quot;T:System.Windows.Forms.Label&quot; /&gt; control.">일반적으로 컨트롤의 기본 내부 기능과 관련된 가로 맞춤선입니다. 예를 들면 <see cref="T:System.Windows.Forms.Label" /> 컨트롤에 있는 텍스트 문자열의 기준선입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary vsli:raw="A horizontal snapline typically aligned to the bottom edge of a control.">일반적으로 컨트롤의 아래쪽 가장자리에 맞춰진 가로 맞춤선입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary vsli:raw="A horizontal snapline typically not associated with an edge of a control.">일반적으로 컨트롤의 가장자리와 관련되지 않은 가로 맞춤선입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary vsli:raw="A vertical snapline typically aligned to the left edge of a control.">일반적으로 컨트롤의 왼쪽 가장자리에 맞춰진 세로 맞춤선입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary vsli:raw="A vertical snapline typically aligned to the right edge of a control.">일반적으로 컨트롤의 오른쪽 가장자리에 맞춰진 세로 맞춤선입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary vsli:raw="A horizontal snapline typically aligned to the top edge of a control.">일반적으로 컨트롤의 위쪽 가장자리에 맞춰진 가로 맞춤선입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary vsli:raw="A vertical snapline typically not associated with an edge of a control.">일반적으로 컨트롤의 가장자리와 관련되지 않은 세로 맞춤선입니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary vsli:raw="Provides an editor for setting the &lt;see cref=&quot;P:System.Windows.Forms.ToolStripStatusLabel.BorderSides&quot; /&gt; property.">
        <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" /> 속성을 설정할 수 있는 편집기를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.BorderSidesEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot;&gt;&lt;/xref&gt;.">
        <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />에서 제공하는 편집기 스타일을 사용하여 지정된 개체 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; providing information about the control or component.">컨트롤 또는 구성 요소에 대한 정보를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.IServiceProvider&quot;&gt;&lt;/xref&gt; providing custom support to other objects.">다른 개체에 대한 사용자 지정을 지원하는 <see cref="T:System.IServiceProvider" />입니다.</param>
      <param name="value" vsli:raw="The object value to edit.">편집할 개체 값입니다.</param>
      <returns vsli:raw="The edited object.">편집된 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;code data-dev-comment-type=&quot;langword&quot;&gt;EditValue&lt;/code&gt; method.">
        <see langword="EditValue" /> 메서드의 편집 스타일을 검색합니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; providing information about the control or component.">컨트롤 또는 구성 요소에 대한 정보를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values. If the method is not supported, this method returns &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 값 중 하나입니다. 이 메서드가 지원되지 않는 경우에는 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />이 반환됩니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType">
      <summary vsli:raw="Designer action items that can be associated with a component.">구성 요소와 연결할 수 있는 디자이너 작업 항목입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All">
      <summary vsli:raw="Represents component and service type designer actions.">구성 요소 및 서비스 유형 디자이너 작업을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component">
      <summary vsli:raw="Represents pull-model designer actions.">풀 모델 디자이너 작업을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service">
      <summary vsli:raw="Represents push-model designer actions.">푸시 모델 디자이너 작업을 나타냅니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a root design document that supports nested components.">중첩된 구성 요소를 지원하는 루트 디자인 문서의 디자인 모드 동작을 확장하기 위한 기본 디자이너 클래스입니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the designer.">현재 디자이너에서 지정된 도구를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">도구 상자 지원 여부를 테스트할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">도구 상자에서 이 도구를 사용하려면 <see langword="true" />이고 문서 디자이너가 도구 사용 방법을 인식하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">디자이너를 지정된 구성 요소로 초기화합니다.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">디자이너에 연결할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">구성 요소가 <see cref="T:System.ComponentModel.TypeDescriptor" />를 통해 노출하는 속성 집합을 조정합니다.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">구성 요소의 클래스에 대한 속성이 포함된 <see cref="T:System.Collections.IDictionary" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="T:System.ComponentModel.Design.ViewTechnology" />를 참조하세요.</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">특정 뷰 기술을 나타내는 <see cref="T:System.ComponentModel.Design.ViewTechnology" />입니다.</param>
      <returns vsli:raw="An object that represents the view for this designer.">해당 디자이너에 대한 뷰를 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />를 참조하세요.</summary>
      <param name="component" vsli:raw="The component to filter the attributes of.">특성을 필터링할 구성 요소입니다.</param>
      <param name="attributes" vsli:raw="A dictionary of attributes that can be modified.">수정할 수 있는 특성의 사전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered attributes is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">필터링된 특성 집합이 캐시되도록 하려면 <see langword="true" />이고, 필터 서비스가 다시 쿼리하도록 하려면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />를 참조하세요.</summary>
      <param name="component" vsli:raw="The component to filter events for.">이벤트를 필터링할 구성 요소입니다.</param>
      <param name="events" vsli:raw="A dictionary of events that can be modified.">수정할 수 있는 이벤트의 사전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered events is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">필터링된 이벤트 집합이 캐시되도록 하려면 <see langword="true" />이고, 필터 서비스가 다시 쿼리하도록 하려면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />를 참조하세요.</summary>
      <param name="component" vsli:raw="The component to filter properties for.">속성을 필터링할 구성 요소입니다.</param>
      <param name="properties" vsli:raw="A dictionary of properties that can be modified.">수정할 수 있는 속성의 사전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered properties is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">필터링된 속성 집합이 캐시되도록 하려면 <see langword="true" />이고, 필터 서비스가 다시 쿼리하도록 하려면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />를 참조하세요.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">도구 상자 지원 여부를 테스트할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">도구 상자에서 해당 도구를 지원하며 도구를 활성화할 수 있으면 <see langword="true" />이고 문서 디자이너에서 도구 사용 방법을 알지 못하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />를 참조하세요.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">선택할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary vsli:raw="Gets the control for the designer.">디자이너에 대한 컨트롤을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; the designer is editing.">디자이너가 편집하고 있는 <see cref="T:System.Windows.Forms.Control" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />를 참조하세요.</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">지원되는 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 값의 배열입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in auto-arrange mode.">디자이너의 구성 요소 트레이가 자동 정렬 모드인지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in auto-arrange mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">디자이너의 구성 요소 트레이가 자동 정렬 모드이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in large icon mode.">디자이너의 구성 요소 트레이가 큰 아이콘 모드인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in large icon mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">디자이너의 구성 요소 트레이가 큰 아이콘 모드이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary vsli:raw="Provides behavior for the component tray of a designer.">디자이너의 구성 요소 트레이에 대한 동작을 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; class using the specified designer and service provider.">지정된 디자이너와 서비스 공급자를 사용하여 <see cref="T:System.Windows.Forms.Design.ComponentTray" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="mainDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that is the main or document designer for the current project.">현재 프로젝트의 주요 또는 문서 디자이너인 <see cref="T:System.ComponentModel.Design.IDesigner" />입니다.</param>
      <param name="serviceProvider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that can be used to obtain design-time services.">디자인 타임 서비스를 얻는 데 사용할 수 있는 <see cref="T:System.IServiceProvider" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds a component to the tray.">구성 요소를 트레이에 추가합니다.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add to the tray.">트레이에 추가할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool can be used to create a new component.">지정된 도구가 새 구성 요소를 만드는데 사용될 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test.">테스트할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified tool can be used to create a component; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 도구가 새 구성 요소를 만드는데 사용될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets a value indicating whether the specified component can be displayed.">지정된 구성 요소를 표시할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to test.">테스트할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can be displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">구성 요소를 표시할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component from the specified toolbox item, adds the component to the current document, and displays a representation for the component in the component tray.">지정된 도구 상자 항목에서 구성 요소를 만들고, 이 구성 요소를 현재 문서에 추가한 다음, 구성 요소 트레이에 구성 요소를 표시합니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">구성 요소를 만들 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary vsli:raw="Displays an error message to the user with information about the specified exception.">지정된 예외에 대한 정보를 사용해 사용자에게 오류 메시지를 표시합니다.</summary>
      <param name="e" vsli:raw="The exception about which to display information.">정보를 표시할 대상에 대한 예외입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Windows.Forms.Design.ComponentTray" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the location of the specified component, relative to the upper-left corner of the component tray.">구성 요소 트레이의 왼쪽 위 모퉁이를 기준으로 상대적으로 결정된 지정 구성 요소의 위치를 가져옵니다.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to retrieve the location of.">위치를 검색할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the coordinates of the specified component, or an empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; if the specified component could not be found in the component tray. An empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; has an &lt;see cref=&quot;P:System.Drawing.Point.IsEmpty&quot; /&gt; property equal to &lt;see langword=&quot;true&quot; /&gt; and typically has &lt;see cref=&quot;P:System.Drawing.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Point.Y&quot; /&gt; properties that are each equal to zero.">지정된 구성 요소의 좌표를 나타내는 <see cref="T:System.Drawing.Point" />이거나, 지정된 구성 요소가 구성 요소 트레이에 없는 경우 빈 <see cref="T:System.Drawing.Point" />입니다. 빈 <see cref="T:System.Drawing.Point" />에는 <see langword="true" />와 같은 <see cref="P:System.Drawing.Point.IsEmpty" /> 속성이 있고, 일반적으로 각각 0과 같은 <see cref="P:System.Drawing.Point.X" />와 <see cref="P:System.Drawing.Point.Y" /> 속성이 있습니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Similar to &lt;see cref=&quot;M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)&quot; /&gt;, this method returns the next component in the tray, given a starting component.">
        <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />과 마찬가지로 이 메서드는 지정된 시작 구성 요소의 다음 구성 요소를 반환합니다.</summary>
      <param name="component" vsli:raw="The component from which to start enumerating.">열거를 시작할 구성 요소입니다.</param>
      <param name="forward" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enumerate forward through the list; otherwise, &lt;see langword=&quot;false&quot; /&gt; to enumerate backward.">목록에서 앞으로 열거하면 <see langword="true" />이고, 뒤로 열거하면 <see langword="false" />입니다.</param>
      <returns vsli:raw="The next component in the component tray, or &lt;see langword=&quot;null&quot; /&gt;, if the end of the list is encountered (or the beginning, if &lt;paramref name=&quot;forward&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">구성 요소 트레이에 있는 다음 구성 요소이거나, 목록의 끝(<paramref name="forward" />가 <see langword="null" />인 경우에는 목록 맨 앞)에 도달한 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service type.">요청한 서비스 형식을 가져옵니다.</summary>
      <param name="serviceType" vsli:raw="The type of the service to retrieve.">검색할 서비스 형식입니다.</param>
      <returns vsli:raw="An instance of the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service could not be found.">요청한 서비스의 인스턴스이거나, 서비스를 찾을 수 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">
        <see langword="Location" /> 확장 속성의 값을 가져옵니다.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">위치 확장 속성을 받는 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">
        <paramref name="receiver" />의 위치를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Tests a component for presence in the component tray.">구성 요소가 구성 요소 트레이에 있는지 테스트합니다.</summary>
      <param name="comp" vsli:raw="The component to test for presence in the component tray.">구성 요소 트레이에 있는지 테스트할 구성 요소입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;comp&quot; /&gt; is being shown on the tray; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="comp" />가 트레이에 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object that has been dragged is dropped on the component tray.">개체를 구성 요소 트레이에 끌어 놓으면 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over, and has entered the area over, the component tray.">구성 요소 트레이에 개체를 끌어 와 트레이 영역에 들어오면 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when an object is dragged out of the area over the component tray.">개체를 구성 요소 트레이 영역 밖으로 끌어 놓으면 호출됩니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over the component tray.">개체를 구성 요소 트레이 영역으로 끌어 오면 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Called during an OLE drag and drop operation to provide an opportunity for the component tray to give feedback to the user about the results of dropping the object at a specific point.">구성 요소 트레이가 특정 지점의 개체 끌어서 놓기 작업 결과에 대한 피드백을 사용자에게 제공하기 위해 OLE 끌어서 놓기 작업 과정에서 호출됩니다.</summary>
      <param name="gfevent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">
        <see cref="E:System.Windows.Forms.Control.Layout" /> 이벤트를 발생시킵니다.</summary>
      <param name="levent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.LayoutEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary vsli:raw="Called when a mouse drag selection operation is canceled.">마우스 끌기 선택 작업을 취소하면 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse is double clicked over the component tray.">구성 요소 트레이를 마우스로 두 번 클릭하면 호출됩니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button is pressed.">마우스 단추를 누르면 호출됩니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse cursor position has changed.">마우스 커서 위치가 바뀌면 호출됩니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button has been released.">마우스 단추를 놓으면 호출됩니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the view for the component tray should be refreshed.">구성 요소 트레이의 뷰가 새로 고쳐지면 호출됩니다.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary vsli:raw="Called to set the mouse cursor.">마우스 커서를 설정하기 위해 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes the specified component from the tray.">지정된 구성 요소를 트레이에서 제거합니다.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove from the tray.">트레이에서 제거할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the location of the specified component to the specified location.">지정된 구성 요소의 위치를 지정된 위치로 설정합니다.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to set the location of.">위치를 설정할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the new location for the specified component.">지정된 구성 요소의 새 위치를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">
        <see langword="Location" /> 확장 속성의 값을 설정합니다.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">위치 확장 속성을 받는 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">
        <paramref name="receiver" />의 위치를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />를 참조하세요.</summary>
      <param name="extendee" vsli:raw="The object to receive the extender properties.">Extender 속성을 받을 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object can provide extender properties to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 개체가 지정된 개체에 Extender 속성을 제공할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Windows 메시지를 처리합니다.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">처리할 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the tray items are automatically aligned.">트레이 항목이 자동 정렬되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tray items are automatically arranged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">트레이 항목이 자동 정렬되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary vsli:raw="Gets the number of components contained in the tray.">트레이에 포함된 구성 요소의 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of components in the tray.">트레이에 포함된 구성 요소의 수입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary vsli:raw="Gets or sets a value indicating whether the tray displays a large icon to represent each component in the tray.">트레이에 각 구성 요소를 나타내는 큰 아이콘이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if large icons are displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">큰 아이콘이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Control" />의 디자인 모드 동작을 확장합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary vsli:raw="Specifies the accessibility object for the designer.">디자이너에 대한 내게 필요한 옵션 지원 개체를 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary vsli:raw="Defines a local &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that represents the values of an invalid &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;.">잘못된 <see cref="T:System.Drawing.Point" />의 값을 나타내는 로컬 <see cref="T:System.Drawing.Point" />를 정의합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Windows 메시지를 처리합니다.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">처리할 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary vsli:raw="Indicates if this designer's control can be parented by the control of the specified designer.">이 디자이너의 컨트롤이 지정된 디자이너의 컨트롤을 부모로 사용할 수 있는지 여부를 지정합니다.</summary>
      <param name="parentDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that manages the control to check.">확인할 컨트롤을 관리하는 <see cref="T:System.ComponentModel.Design.IDesigner" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can parent the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정한 디자이너가 관리하는 컨트롤이 이 디자이너가 관리하는 컨트롤의 부모일 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Provides default processing for Windows messages.">Windows 메시지에 대한 기본 처리 방법을 제공합니다.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">처리할 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary vsli:raw="Displays information about the specified exception to the user.">지정된 예외에 대한 정보를 사용자에게 표시합니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; to display.">표시할 <see cref="T:System.Exception" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary vsli:raw="Enables design time functionality for a child control.">자식 컨트롤의 디자인 타임 기능을 사용하도록 설정합니다.</summary>
      <param name="child" vsli:raw="The child control for which design mode will be enabled.">디자인 모드를 사용하도록 설정할 자식 컨트롤입니다.</param>
      <param name="name" vsli:raw="The name of &lt;paramref name=&quot;child&quot; /&gt; as exposed to the end user.">최종 사용자에게 표시되는 <paramref name="child" />의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;child&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="child" /> 또는 <paramref name="name" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the child control could be enabled for design time; &lt;see langword=&quot;false&quot; /&gt; if the hosting infrastructure does not support it.">자식 컨트롤을 디자인 타임에 사용할 수 있도록 설정하려면 <see langword="true" />이고, 호스팅 인프라에서 지원하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary vsli:raw="Enables or disables drag-and-drop support for the control being designed.">디자인되는 컨트롤에 대한 끌어서 놓기 지원을 활성화 또는 비활성화합니다.</summary>
      <param name="value" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable drag-and-drop support for the control; &lt;see langword=&quot;false&quot; /&gt; if the control should not have drag-and-drop support. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이면 끌어서 놓기 지원을 컨트롤에 사용하고 <see langword="false" />이면 컨트롤에 끌어서 놓기 지원을 사용하지 않습니다. 기본값은 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">이 컨트롤의 범위를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />를 반환합니다.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">선택 상태를 지정하는 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 값입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">이 컨트롤의 범위를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">표준 컨트롤의 선택 테두리와 잡기 핸들을 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 개체의 컬렉션을 가져옵니다.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">선택 상태를 지정하는 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 값입니다.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">지정된 지점의 마우스 클릭이 컨트롤에 의해 처리되는지 여부를 지정합니다.</summary>
      <param name="point" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">화면 좌표에서 마우스를 클릭한 위치를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 위치의 클릭을 컨트롤에서 처리해야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages from the child controls of the specified control to the designer.">지정한 컨트롤의 자식 컨트롤에서 메시지를 디자이너로 라우트합니다.</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">처리할 첫째 자식 <see cref="T:System.Windows.Forms.Control" />. 이 메서드는 컨트롤의 자식에 대해 자신을 재귀적으로 호출할 수 있습니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">디자이너를 지정된 구성 요소로 초기화합니다.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the designer with. This component must always be an instance of, or derive from, &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">디자이너에 연결할 <see cref="T:System.ComponentModel.IComponent" />. 이 구성 요소는 항상 <see cref="T:System.Windows.Forms.Control" />의 인스턴스이거나 이 컨트롤에서 파생되어야 합니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Re-initializes an existing component.">기존 구성 요소를 다시 초기화합니다.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">속성에 적용할 기본값의 이름/값 사전입니다. 기본값이 지정되지 않은 경우 <see langword="null" /> 일 수 있습니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">새로 만들어진 구성 요소를 초기화합니다.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">속성에 적용할 기본값의 이름/값 사전입니다. 기본값이 지정되지 않은 경우 <see langword="null" /> 일 수 있습니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary vsli:raw="Returns the internal control designer with the specified index in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" />에서 지정된 인덱스에 있는 내부 컨트롤 디자이너를 반환합니다.</summary>
      <param name="internalControlIndex" vsli:raw="A specified index to select the internal control designer. This index is zero-based.">선택할 내부 컨트롤 디자이너의 인덱스입니다. 인덱스는 0부터 시작합니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; at the specified index.">지정한 인덱스에 있는 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary vsli:raw="Returns the number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" />에 포함된 내부 컨트롤 디자이너의 수를 반환합니다.</summary>
      <returns vsli:raw="The number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" />에 포함된 내부 컨트롤 디자이너의 수입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.">상황에 맞는 메뉴를 표시하고 이 메뉴가 표시되려고 할 때 추가 작업을 처리할 수 있는 기회를 제공합니다.</summary>
      <param name="x" vsli:raw="The x coordinate at which to display the context menu.">상황에 맞는 메뉴를 표시할 x 좌표입니다.</param>
      <param name="y" vsli:raw="The y coordinate at which to display the context menu.">상황에 맞는 메뉴를 표시할 y 좌표입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary vsli:raw="Provides an opportunity to perform additional processing immediately after the control handle has been created.">컨트롤 핸들을 만든 직후 추가 작업을 처리할 기회를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call to clean up a drag-and-drop operation.">끌어서 놓기 작업을 정리하기 위해 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dropped onto the control designer view.">끌어서 놓기 개체를 컨트롤 디자이너 뷰에 놓으면 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation enters the control designer view.">끌어서 놓기 작업이 컨트롤 디자이너 뷰에 진입하면 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation leaves the control designer view.">끌어서 놓기 작업이 컨트롤 디자이너 뷰를 벗어나면 호출됩니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dragged over the control designer view.">끌어서 놓기 개체를 컨트롤 디자이너 뷰로 끌어 오면 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.">끌기 작업을 진행하는 동안 마우스 위치에 따라 시각적 정보를 제공하기 위해 끌어서 놓기 작업이 진행되는 동안 호출됩니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call in response to the left mouse button being pressed and held while over the component.">구성 요소를 마우스 왼쪽 단추로 누르고 있는 상태에 대한 응답으로 호출됩니다.</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">화면 좌표에서 마우스의 x 위치입니다.</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">화면 좌표에서 마우스의 y 위치입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.">끌어서 놓기 작업을 완료하거나 취소하기 위해 해당 작업의 마지막에 호출됩니다.</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag; &lt;see langword=&quot;false&quot; /&gt; to commit it.">
        <see langword="true" />이면 끌기를 취소하고 <see langword="false" />이면 끌기를 커밋합니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call for each movement of the mouse during a drag-and-drop operation.">끌어서 놓기 작업 중에 마우스를 움직일 때마다 호출됩니다.</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">화면 좌표에서 마우스의 x 위치입니다.</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">화면 좌표에서 마우스의 y 위치입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">마우스가 컨트롤에 처음으로 진입하면 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary vsli:raw="Receives a call after the mouse hovers over the control.">마우스로 컨트롤을 가리키면 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">마우스가 컨트롤에 처음으로 진입하면 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">디자이너에서 관리하는 컨트롤의 위쪽에 추가 장식을 그릴 수 있도록 해당 컨트롤의 표면이 그려지면 호출됩니다.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; the designer can use to draw on the control.">디자이너가 컨트롤 위에 그리는데 사용하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Called when the designer is initialized.">디자이너가 초기화 될 때 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary vsli:raw="Receives a call each time the cursor needs to be set.">커서를 설정해야 할 때마다 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">구성 요소가 <see cref="T:System.ComponentModel.TypeDescriptor" />를 통해 노출하는 속성 집합을 조정합니다.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; containing the properties for the class of the component.">구성 요소의 클래스에 대한 속성이 포함된 <see cref="T:System.Collections.IDictionary" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages for the children of the specified control to each control rather than to a parent designer.">지정한 컨트롤의 자식에 대한 메시지를 부모 디자이너 대신 각 컨트롤에 라우트합니다.</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">처리할 첫째 자식 <see cref="T:System.Windows.Forms.Control" />. 이 메서드는 컨트롤의 자식에 대해 자신을 재귀적으로 호출할 수 있습니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and optionally routes them to the control.">Windows 메시지를 처리하고 필요에 따라 컨트롤로 라우트합니다.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">처리할 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">컨트롤에 할당된 <see cref="T:System.Windows.Forms.AccessibleObject" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">컨트롤에 할당된 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">디자이너가 관리하는 구성 요소와 관련된 구성 요소 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">디자이너가 관리하는 구성 요소와 관련된 구성 요소입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary vsli:raw="Gets or sets a value indicating whether resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; property.">
        <see cref="P:System.Windows.Forms.Control.AutoSize" /> 속성의 값을 기반으로 크기 조정 핸들이 할당되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; and &lt;see langword=&quot;AutoSizeMode&quot; /&gt; properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Windows.Forms.Control.AutoSize" /> 및 <see langword="true" /> 속성의 값을 기반으로 크기 조정 핸들이 할당되면 <see langword="AutoSizeMode" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; from the design environment.">디자인 환경에서 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service is unavailable.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />이거나, 서비스를 사용할 수 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary vsli:raw="Gets the control that the designer is designing.">디자이너가 디자인하고 있는 컨트롤을 가져옵니다.</summary>
      <returns vsli:raw="The control that the designer is designing.">디자이너가 디자인하고 있는 컨트롤입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles can be drawn on this designer component.">끌기 사각형을 이 디자이너 구성 요소에 그릴 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles can be drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">끌기 사각형을 그리 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the designer.">디자이너의 <see cref="T:System.ComponentModel.InheritanceAttribute" />를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.ComponentModel.InheritanceAttribute.Inherited&quot; /&gt; if the designer is a root designer; otherwise, the value of the parent designer's &lt;see cref=&quot;P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute&quot; /&gt; property.">디자이너가 루트 디자이너이면 <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" />이고, 그렇지 않으면 부모 디자이너의 <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> 속성입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" />의 부모 구성 요소를 가져옵니다.</summary>
      <returns vsli:raw="The parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if there is no parent component.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" />의 부모 구성 요소이거나, 부모 구성 요소가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation.">끌기 작업 동안 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />에서 맞춤선 정렬을 허용하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">끌기 작업 동안 기본 끌기 컨트롤이 디자이너 위에 있을 때 해당 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />에서 맞춤선 정렬을 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary vsli:raw="Gets the selection rules that indicate the movement capabilities of a component.">구성 요소의 이동 기능을 나타내는 선택 규칙을 가져옵니다.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">이 컨트롤의 중요 맞춤 지점을 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 개체의 목록을 가져옵니다.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">이 컨트롤의 중요한 맞춤 지점을 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 개체의 목록입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; for &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" />에 대한 <see cref="T:System.Windows.Forms.AccessibleObject" />를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject&quot; /&gt; class using the specified designer and control.">지정된 디자이너와 컨트롤을 사용하여 <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="designer" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; for the accessible object.">액세스 가능 개체에 대한 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 개체입니다.</param>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the accessible object.">액세스 가능 개체에 대한 <see cref="T:System.Windows.Forms.Control" /> 개체입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary vsli:raw="Retrieves the accessible child corresponding to the specified index.">지정된 인덱스에 해당하는 액세스 가능한 자식을 검색합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the accessible child.">액세스 가능한 자식의 인덱스(0부터 시작)입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the accessible child corresponding to the specified index.">지정한 인덱스에 해당하는 내게 필요한 옵션 지원 자식을 나타내는 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary vsli:raw="Retrieves the number of children belonging to an accessible object.">액세스 가능한 개체에 속하는 자식 수를 검색합니다.</summary>
      <returns vsli:raw="The number of children belonging to an accessible object.">액세스 가능한 개체에 속하는 자식 수입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary vsli:raw="Retrieves the object that has the keyboard focus.">키보드 포커스를 갖는 개체를 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns &lt;see langword=&quot;null&quot; /&gt; if no object has focus.">현재 포커스를 받은 자식을 지정하는 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다. 이 메서드는 호출 개체 자신이 포커스를 받는 경우 자신을 반환합니다. 포커스를 갖는 개체가 없으면 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary vsli:raw="Retrieves the currently selected child.">현재 선택된 자식을 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns &lt;see langword=&quot;null&quot; /&gt; if is no child is currently selected and the object itself does not have focus.">현재 선택된 자식을 나타내는 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다. 이 메서드는 호출 개체 자신이 선택된 경우 자신을 반환합니다. 현재 선택된 자식이 없고 개체 자신에 포커스가 없으면 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary vsli:raw="Retrieves the child object at the specified screen coordinates.">지정된 화면 좌표에 있는 자식 개체를 검색합니다.</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate.">가로 화면 좌표입니다.</param>
      <param name="y" vsli:raw="The vertical screen coordinate.">세로 화면 좌표입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns &lt;see langword=&quot;null&quot; /&gt; if no object is at the tested location.">지정된 화면 좌표에 있는 자식 개체를 나타내는 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다. 이 메서드는 호출하는 개체 자신이 지정된 위치에 있는 경우에 호출하는 개체를 반환합니다. 테스트한 위치에 개체가 없는 경우 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary vsli:raw="Gets the points that define the boundaries of the accessible object for the designer.">디자이너에 대한 액세스 가능 개체의 경계를 정의하는 포인트를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that indicates the boundaries of the accessible object for the designer.">디자이너에 대한 액세스 가능 개체의 경계를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary vsli:raw="Gets a string that describes the default action of the specified object.">지정된 개체의 기본 동작을 설명하는 문자열을 가져옵니다.</summary>
      <returns vsli:raw="A description of the default action for a specified object.">지정된 개체의 기본 동작에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary vsli:raw="Gets a string that describes the visual appearance of the specified object.">지정한 개체의 시각적 모양을 설명하는 문자열을 가져옵니다.</summary>
      <returns vsli:raw="A description of the object's visual appearance to the user, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a description.">사용자에게 표시되는 개체의 시각적 모양에 대한 설명이며 개체에 설명이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary vsli:raw="Gets or sets the object name.">개체 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The object name, or &lt;see langword=&quot;null&quot; /&gt; if the property has not been set.">개체 이름이며 속성이 설정되어 있지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary vsli:raw="Gets the parent of an accessible object.">내게 필요한 옵션 지원 개체의 부모를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the parent of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent object.">액세스할 수 있는 개체의 부모를 나타내는 <see cref="T:System.Windows.Forms.AccessibleObject" /> 또는 부모 개체가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary vsli:raw="Gets the role of this accessible object.">이 액세스 가능성 개체의 역할을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleRole&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleRole.None&quot; /&gt; if no role has been specified.">
        <see cref="T:System.Windows.Forms.AccessibleRole" /> 값 중 하나이며, 지정된 역할이 없으면 <see cref="F:System.Windows.Forms.AccessibleRole.None" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary vsli:raw="Gets the state of this accessible object.">이 액세스 가능 개체의 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleStates&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleStates.None&quot; /&gt;, if no state has been set.">
        <see cref="T:System.Windows.Forms.AccessibleStates" /> 값 중 하나이며, 설정된 상태가 없으면 <see cref="F:System.Windows.Forms.AccessibleStates.None" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary vsli:raw="Gets or sets the value of an accessible object.">액세스 가능 개체의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if the object has no value set.">액세스 가능한 개체의 값이거나, 개체에 설정된 값이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary vsli:raw="Provides access to get and set option values for a designer.">디자이너에 대한 옵션 값을 가져오고 설정하는 액세스를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary vsli:raw="Gets or sets a value that enables or disables in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls.">
        <see cref="T:System.Windows.Forms.ToolStrip" /> 컨트롤에 내부 편집을 사용할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.ToolStrip" /> 컨트롤에 내부 편집을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">모눈 단위의 크기를 나타내는 <see cref="T:System.Drawing.Size" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">모눈 단위의 크기를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary vsli:raw="Gets or sets a value that specifies whether a designer shows a component's smart tag panel automatically on creation.">디자이너에서 구성 요소의 스마트 태그 패널을 생성할 때 자동으로 표시하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow a component's smart tag panel to open automatically upon creation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">구성 요소의 스마트 태그 패널을 생성할 때 자동으로 열 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables the grid in the designer.">디자이너에 모눈을 사용할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the grid is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">모눈을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables whether controls are automatically placed at grid coordinates.">컨트롤을 모눈 좌표에 자동으로 배치할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">자동 맞춤을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary vsli:raw="Gets or sets a value that enables or disables the component cache.">구성 요소 캐시를 사용할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component cache is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">구성 요소 캐시를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary vsli:raw="Gets or sets a value that enables or disables smart tags in the designer.">디자이너에서 스마트 태그를 사용할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if smart tags in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">디자이너에서 스마트 태그를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary vsli:raw="Gets or sets a value that enables or disables snaplines in the designer.">디자이너에서 맞춤선을 사용하거나 사용하지 않도록 설정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snaplines in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">디자이너에서 맞춤선을 사용하도록 설정하면<see langword="true" /> 이고, 사용하지 않도록 설정하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary vsli:raw="Provides a user interface for specifying a &lt;see cref=&quot;P:System.Windows.Forms.Control.Dock&quot; /&gt; property.">
        <see cref="P:System.Windows.Forms.Control.Dock" /> 속성을 지정하기 위한 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DockEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.DockEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.">GetEditorStyle에서 제공된 편집기 스타일을 사용하여 지정된 개체 값을 편집합니다. 필요한 편집 서비스를 얻을 수 있도록 서비스 공급자가 제공됩니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">편집 서비스를 가져오는 데 사용할 수 있는 서비스 공급자 개체입니다.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">편집 중인 값의 인스턴스입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the EditValue method. If the method is not supported, this will return None.">EditValue 메서드의 편집 스타일을 검색합니다. 이 메서드가 지원되지 않는 경우에는 None이 반환됩니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="An enum value indicating the provided editing style.">제공된 편집 스타일을 나타내는 열거형 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of, and providing a root-level design mode view for, a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls and should receive scroll messages.">중첩된 컨트롤을 지원하고 스크롤 메시지를 받아야 하는 <see cref="T:System.Windows.Forms.Control" /> 의 디자인 모드 동작을 확장하고 루트 수준의 디자인 모드 보기를 제공하기 위한 기본 디자이너 클래스입니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Windows.Forms.Design.DocumentDesigner" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>메뉴 편집기 서비스가 있는지 검사하고 없으면 이 서비스를 만듭니다.</summary>
      <param name="c">확인할 <see cref="T:System.ComponentModel.IComponent" />에는 상황에 맞는 메뉴 서비스가 있습니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; representing the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 개체를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />을 가져옵니다.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">선택 상태를 지정하는 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 값입니다.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the specified tool is supported by the designer.">지정한 도구가 디자이너에서 지원되는지 여부를 나타냅니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">도구 상자 지원 여부를 테스트할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">도구 상자에서 이 도구를 사용하려면 <see langword="true" />이고 문서 디자이너가 도구 사용 방법을 인식하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">디자이너를 지정된 구성 요소로 초기화합니다.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">디자이너에 연결할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Called when the context menu should be displayed.">상황에 맞는 메뉴를 표시해야 할 때 호출됩니다.</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate to display the context menu at.">상황에 맞는 메뉴를 표시할 가로 화면 좌표입니다.</param>
      <param name="y" vsli:raw="The vertical screen coordinate to display the context menu at.">상황에 맞는 메뉴를 표시할 세로 화면 좌표입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary vsli:raw="Called immediately after the handle for the designer has been created.">디자이너 핸들이 만들어진 직후 호출됩니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">구성 요소가 <see cref="T:System.ComponentModel.TypeDescriptor" />를 통해 노출하는 속성 집합을 조정합니다.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">구성 요소의 클래스에 대한 속성이 포함된 <see cref="T:System.Collections.IDictionary" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="T:System.ComponentModel.Design.ViewTechnology" />를 참조하세요.</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">특정 뷰 기술을 나타내는 <see cref="T:System.ComponentModel.Design.ViewTechnology" />입니다.</param>
      <returns vsli:raw="An object that represents the view for this designer.">해당 디자이너에 대한 뷰를 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />를 참조하세요.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">도구 상자 지원 여부를 테스트할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">도구 상자에서 해당 도구를 지원하며 도구를 활성화할 수 있으면 <see langword="true" />이고 문서 디자이너에서 도구 사용 방법을 알지 못하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />를 참조하세요.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">선택할 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">지정된 도구를 선택합니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component for.">구성 요소를 만들 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Windows 메시지를 처리합니다.</summary>
      <param name="m">처리할 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; for the designer.">디자이너에 대한 <see cref="T:System.Windows.Forms.Design.SelectionRules" />을 가져옵니다.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />를 참조하세요.</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">지원되는 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 값의 배열입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary vsli:raw="Provides a systematic way to manage event handlers for the current document.">현재 문서의 이벤트 처리기를 관리하는 체계적인 방법을 제공합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary vsli:raw="Fires an OnEventHandlerChanged event.">OnEventHandlerChanged 이벤트를 발생시킵니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.EventHandlerService&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="focusWnd" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which is being designed.">디자인되고 있는 <see cref="T:System.Windows.Forms.Control" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary vsli:raw="Gets the currently active event handler of the specified type.">지정된 형식의 현재 활성 이벤트 처리기를 가져옵니다.</summary>
      <param name="handlerType" vsli:raw="The type of the handler to get.">가져올 처리기의 형식입니다.</param>
      <returns vsli:raw="An instance of the handler, or &lt;see langword=&quot;null&quot; /&gt; if there is no handler of the requested type.">처리기의 인스턴스이거나, 요청된 형식의 처리기가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary vsli:raw="Pops the given handler off of the stack.">지정된 처리기를 스택에서 팝합니다.</summary>
      <param name="handler" vsli:raw="The handler to remove from the stack.">스택에서 제거할 처리기입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary vsli:raw="Pushes a new event handler on the stack.">새 이벤트 처리기를 스택에 푸시합니다.</summary>
      <param name="handler" vsli:raw="The handler to add to the stack.">스택에 추가할 처리기입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary vsli:raw="Gets the control to which event handlers are attached.">이벤트 처리기가 연결되는 컨트롤을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which was attached through the constructor.">생성자를 통해 연결된 <see cref="T:System.Windows.Forms.Control" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary vsli:raw="Provides a user interface for selecting a file name.">파일 이름을 선택할 수 있는 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FileNameEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.FileNameEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object using the editor style provided by the &lt;see cref=&quot;M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 메서드가 제공한 편집기 스타일을 사용하여 지정된 개체를 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">편집 서비스를 가져오는 데 사용할 수 있는 서비스 공급자 개체입니다.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">편집 중인 값의 인스턴스입니다.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 메서드에서 사용하는 편집 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the provided editing style.">제공된 편집 스타일을 나타내는 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary vsli:raw="Initializes the open file dialog when it is created.">파일 열기 대화 상자를 만든 경우 이 대화 상자를 초기화합니다.</summary>
      <param name="openFileDialog" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.OpenFileDialog&quot; /&gt; to use to select a file name.">파일 이름을 선택하는데 사용하는 <see cref="T:System.Windows.Forms.OpenFileDialog" />입니다.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary vsli:raw="Provides a user interface for choosing a folder from the file system.">파일 시스템에서 폴더를 선택하기 위한 사용자 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object using the editor style provided by &lt;see cref=&quot;M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt;.">
        <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />에서 제공하는 편집기 스타일을 사용하여 지정된 개체를 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="A service object provider.">서비스 개체 공급자입니다.</param>
      <param name="value" vsli:raw="The value to set.">설정할 값입니다.</param>
      <returns vsli:raw="The new value of the object, or the old value if the object couldn't be updated.">개체의 새 값이거나, 개체를 업데이트할 수 없는 경우 이전 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">
        <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 메서드에서 사용하는 편집 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; enumeration value indicating the provided editing style.">제공되는 편집 스타일을 나타내는 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary vsli:raw="Initializes the folder browser dialog.">폴더 브라우저 대화 상자를 초기화합니다.</summary>
      <param name="folderBrowser" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; to choose a folder.">폴더를 선택할 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />입니다.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary vsli:raw="Represents a dialog box that allows the user to choose a folder. This class cannot be inherited.">폴더를 선택할 수 있는 대화 상자를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary vsli:raw="Shows the folder browser dialog.">폴더 브라우저 대화 상자를 표시합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; from the form.">폼의 <see cref="T:System.Windows.Forms.DialogResult" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary vsli:raw="Shows the folder browser dialog with the specified owner.">소유자가 지정된 폴더 브라우저 대화 상자를 표시합니다.</summary>
      <param name="owner" vsli:raw="Top-level window that will own the modal dialog (e.g.: System.Windows.Forms.Form).">모달 대화 상자를 소유할 최상위 창입니다(예: System.Windows.Forms.Form).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; from the form.">폼의 <see cref="T:System.Windows.Forms.DialogResult" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary vsli:raw="Gets or sets a description to show above the folders.">폴더 위에 표시할 설명을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The description to show above the folders.">폴더 위에 표시할 설명입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary vsli:raw="Gets the directory path to the object the user picked.">사용자가 선택한 개체의 디렉터리 경로를 가져옵니다.</summary>
      <returns vsli:raw="The directory path to the object the user picked.">사용자가 선택한 개체의 디렉터리 경로입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary vsli:raw="Gets or sets the start location of the root node.">루트 노드의 시작 위치를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder&quot; /&gt; that indicates the location for the folder browser to initially browse to.">처음에 찾아볼 폴더 브라우저의 위치를 나타내는 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary vsli:raw="The styles the folder browser will use when browsing folders. This should be a combination of flags from the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles&quot; /&gt; enumeration.">폴더 브라우저에서 폴더를 찾아볼 때 사용할 스타일입니다. 이 스타일은 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> 열거형의 플래그 조합이어야 합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles&quot; /&gt; enumeration member that indicates behavior for the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; to use.">사용할 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" />의 동작을 나타내는 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 열거형 멤버입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary vsli:raw="Defines identifiers used to indicate the root folder for a folder browser to initially browse to.">폴더 브라우저에서 초기에 찾아볼 루트 폴더를 나타내는 데 사용되는 식별자를 정의합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary vsli:raw="The user's desktop.">사용자의 바탕 화면입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary vsli:raw="The user's favorites list.">사용자의 즐겨찾기 목록입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary vsli:raw="The contents of the My Computer icon.">내 컴퓨터 아이콘의 콘텐츠입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary vsli:raw="The user's My Documents folder.">사용자의 내 문서 폴더입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary vsli:raw="User's location to store pictures.">사용자의 그림 저장 위치입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary vsli:raw="Network and dial-up connections.">네트워크 및 전화 접속 연결입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary vsli:raw="The network neighborhood.">네트워크 환경입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary vsli:raw="A folder containing installed printers.">설치 프린터가 있는 폴더입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary vsli:raw="A folder containing shortcuts to recently opened files.">최근 열어본 파일의 바로 가기가 있는 폴더입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary vsli:raw="A folder containing shortcuts to applications to send documents to.">문서를 보낼 애플리케이션의 바로 가기가 있는 폴더입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary vsli:raw="The user's start menu.">사용자의 시작 메뉴입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary vsli:raw="The user's file templates.">사용자의 파일 템플릿입니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary vsli:raw="Defines identifiers used to specify behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />의 동작을 지정하는 데 사용되는 식별자를 정의합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary vsli:raw="The folder browser can only return computers. If the user selects anything other than a computer, the OK button is grayed.">폴더 브라우저에서 컴퓨터만 반환할 수 있습니다. 사용자가 컴퓨터가 아닌 항목을 선택하면 확인 단추가 회색으로 나타납니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary vsli:raw="The folder browser can return any object that it can return.">폴더 브라우저에서 반환할 수 있는 모든 개체를 반환할 수 있습니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary vsli:raw="The folder browser can only return printers. If the user selects anything other than a printer, the OK button is grayed.">폴더 브라우저에서 프린터만 반환할 수 있습니다. 사용자가 프린터가 아닌 항목을 선택하면 확인 단추가 회색으로 나타납니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary vsli:raw="The folder browser will not include network folders below the domain level in the dialog box's tree view control, or allow navigation to network locations outside of the domain.">폴더 브라우저에서 대화 상자의 트리 뷰 컨트롤에 도메인 수준 아래의 네트워크 폴더를 포함하지 않고 도메인 외부의 네트워크 위치를 탐색할 수 없습니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary vsli:raw="The folder browser will only return local file system directories. If the user selects folders that are not part of the local file system, the OK button is grayed.">폴더 브라우저에서 로컬 파일 시스템의 디렉터리만 반환합니다. 사용자가 로컬 파일 시스템에 있지 않은 폴더를 선택하면 확인 단추가 회색으로 나타납니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary vsli:raw="The folder browser will only return objects of the local file system that are within the root folder or a subfolder of the root folder. If the user selects a subfolder of the root folder that is not part of the local file system, the OK button is grayed.">폴더 브라우저에서 루트 폴더나 루트 폴더의 하위 폴더에 있는 로컬 파일 시스템 개체만 반환합니다. 사용자가 로컬 파일 시스템에 있지 않은 루트 폴더의 하위 폴더를 선택하면 확인 단추가 회색으로 나타납니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary vsli:raw="The folder browser includes a &lt;see cref=&quot;T:System.Windows.Forms.TextBox&quot; /&gt; control in the browse dialog box that allows the user to type the name of an item.">폴더 브라우저의 찾아보기 대화 상자에는 사용자가 항목 이름을 입력할 수 있는 <see cref="T:System.Windows.Forms.TextBox" /> 컨트롤이 있습니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary vsli:raw="Defines a method for getting information about how the scrollbars of windows need to be themed when displayed in the Visual Studio designer.">Visual Studio 디자이너에 표시될 때 창의 스크롤 막대에 테마를 지정하는 방법에 대한 정보를 가져오는 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary vsli:raw="Gets an enumeration of &lt;see cref=&quot;T:System.Windows.Forms.Design.ThemedScrollbarWindow&quot; /&gt; objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">창을 나타내는 <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> 개체의 열거형 및 Visual Studio 디자이너에 표시될 때 이 스크롤 막대에 테마를 지정하는 방법을 가져옵니다.</summary>
      <returns vsli:raw="An enumeration of objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">창을 나타내는 개체의 열거형 및 Visual Studio 디자이너에 표시될 때 이 스크롤 막대에 테마를 지정하는 방법입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary vsli:raw="Serializes string dictionaries.">문자열 사전을 serialize합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListCodeDomSerializer&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized Code Document Object Model (CodeDOM) object into an object.">직렬화된 특정 CodeDOM(코드 문서 개체 모델) 개체를 다른 개체로 역직렬화합니다.</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">deserialization 프로세스를 수행하는 동안 사용할 serialization 관리자 인터페이스입니다.</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">역직렬화할 대상인 직렬화된 CodeDOM 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 또는 <paramref name="codeObject" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The deserialized CodeDOM object.">역직렬화된 CodeDOM 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a Code Document Object Model (CodeDOM) object.">지정된 개체를 CodeDOM(코드 문서 개체 모델) 개체로 serialize합니다.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">serialize하는 동안 사용할 serialization 관리자입니다.</param>
      <param name="value" vsli:raw="The object to serialize.">serialize할 개체입니다.</param>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">serialize된 개체를 나타내는 CodeDOM 개체입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary vsli:raw="Provides an editor that can perform default file searching for bitmap (.bmp) files.">비트맵(.bmp) 파일에 대한 기본 파일 검색을 수행할 수 있는 편집기를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListImageEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 메서드에서 제공한 편집 스타일을 사용하여 지정된 개체 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services can be obtained.">편집 서비스를 얻을 수 있는 <see cref="T:System.IServiceProvider" />입니다.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; being edited.">편집하고 있는 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the new value. If the value of the object has not changed, the &lt;see cref=&quot;M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; method returns the object that was passed to it.">새 값을 나타내는 <see cref="T:System.Object" />입니다. 개체의 값이 변경되지 않은 경우 <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 메서드는 전달된 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">이 편집기에서 제공되는 기본 파일 목록 필터에 대한 설명을 가져옵니다.</summary>
      <returns vsli:raw="The description for the default file-list filter.">기본 파일 목록 필터에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary vsli:raw="Gets an array of supported image types.">지원되는 이미지 형식의 배열을 가져옵니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; representing supported image types.">지원되는 이미지 형식을 나타내는 <see cref="T:System.Type" /> 배열입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">이 편집기에서 개체 값 표현을 칠할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)&quot; /&gt; is implemented; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />이 구현되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a value indicated by the specified &lt;see cref=&quot;T:System.Drawing.Design.PaintValueEventArgs&quot; /&gt;.">지정된 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />가 나타내는 값을 칠합니다.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.PaintValueEventArgs&quot; /&gt; indicating what to paint and where to paint it.">칠할 대상과 칠할 위치를 나타내는 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary vsli:raw="Defines a set of members for derived classes to provide options for the masked text box UI type editor.">마스킹된 텍스트 상자 UI 형식 편집기에 대한 옵션을 제공하기 위해 파생 클래스에서 사용할 수 있는 멤버 집합을 정의합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;.">지정한 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />가 현재 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />와 같은지 여부를 확인합니다.</summary>
      <param name="maskDescriptor" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;.">현재 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />과 비교할 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see langword="true" />가 현재<see cref="T:System.Windows.Forms.Design.MaskDescriptor" />와 같으면 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type.">특정 유형에 대한 해시 함수로 사용합니다.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">현재 <see cref="T:System.Object" />의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary vsli:raw="Returns a value indicating whether the specified mask descriptor is valid and can be added to the masks list.">지정된 마스크 설명자가 유효하며 마스크 목록에 추가할 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="maskDescriptor" vsli:raw="The mask descriptor to test for validity.">유효성을 테스트할 마스크 설명자입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;maskDescriptor&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="maskDescriptor" />가 올바르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary vsli:raw="Returns a value indicating whether the specified mask descriptor is valid, and provides an error description if it is not valid.">지정된 마스크 설명자가 유효한지 여부를 나타내는 값을 반환하고 해당 설명자가 유효하지 않을 경우 오류 설명을 제공합니다.</summary>
      <param name="maskDescriptor" vsli:raw="The mask descriptor to test for validity.">유효성을 테스트할 마스크 설명자입니다.</param>
      <param name="validationErrorDescription" vsli:raw="A string representing a validation error. If no validation error occurred, the &lt;paramref name=&quot;validationErrorDescription&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">유효성 검사 오류를 나타내는 문자열입니다. 유효성 검사 오류가 발생하지 않으면 <paramref name="validationErrorDescription" />은 <see cref="F:System.String.Empty" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;maskDescriptor&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="maskDescriptor" />가 올바르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">현재 개체를 나타내는 문자열을 반환합니다.</summary>
      <returns vsli:raw="A string that represents the current object.">현재 개체를 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; representing the locale the mask is authored for.">마스크가 작성된 로캘을 나타내는 <see cref="T:System.Globalization.CultureInfo" />를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; representing the locale the mask is authored for.">마스크가 작성된 로캘을 나타내는 <see cref="T:System.Globalization.CultureInfo" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary vsli:raw="Gets the mask being defined.">정의되는 마스크를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the mask being defined.">정의되는 마스크가 포함된 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary vsli:raw="Gets the user-friendly name of the mask.">마스크의 이름을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name or brief description of the &lt;see cref=&quot;P:System.Windows.Forms.Design.MaskDescriptor.Mask&quot; /&gt;.">
        <see cref="T:System.String" />의 이름과 간단한 설명이 포함된 <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary vsli:raw="Gets a sample of a formatted string for the mask.">마스크에 대해 서식이 지정된 문자열의 샘플을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing text that is formatted by using the &lt;see cref=&quot;P:System.Windows.Forms.Design.MaskDescriptor.Mask&quot; /&gt;.">
        <see cref="T:System.String" />를 사용하여 서식이 지정된 텍스트가 포함된 <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary vsli:raw="Gets the type providing validation associated with the mask.">마스크와 관련된 유효성 검사를 제공하는 형식을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the formatted string is validated against.">서식이 지정된 문자열의 유효성을 검사하는 기준으로 사용할 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary vsli:raw="Defines a set of &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; fields that each correspond to a command function provided by the host environment.">각 필드가 호스트 환경이 제공하는 명령 함수에 해당하는 <see cref="T:System.ComponentModel.Design.CommandID" /> 필드의 집합을 정의합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the component tray menu.">구성 요소 트레이 메뉴에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the container menu.">컨테이너 메뉴에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the properties page for the designer.">디자이너에 대한 속성 페이지에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the edit label handler.">레이블 편집 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the cancel key handler.">취소 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the default key handler.">기본 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the end key handler.">End 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the home key handler.">Home 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the smart tag invocation handler.">스마트 태그 호출 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move down key handler.">아래쪽으로 이동 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move left key handler.">왼쪽으로 이동 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move right key handler.">오른쪽으로 이동 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move up key handler.">위쪽으로 이동 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge down key handler.">아래쪽으로 조금 이동 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height decrease key handler.">높이 조금 줄이기 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height increase key handler.">높이 조금 늘리기 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge left key handler.">왼쪽으로 조금 이동 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge right key handler.">오른쪽으로 조금 이동 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge up key handler.">위쪽으로 조금 이동 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width decrease key handler.">너비 조금 줄이기 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width increase key handler.">너비 조금 늘리기 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the reverse cancel key handler.">반전 취소 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select next key handler.">다음 선택 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select previous key handler.">이전 선택 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-END key handler.">Shift-End 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-HOME key handler.">Shift-Home 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height decrease key handler.">높이 줄이기 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height increase key handler.">높이 늘리기 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width decrease key handler.">너비 줄이기 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width increase key handler.">너비 늘리기 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tab order select key handler.">탭 순서 선택 키 처리기에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the selection menu.">선택 메뉴에 액세스하는 데 사용하는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle.">상태 사각형을 설정하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle text.">상태 사각형 텍스트를 설정하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tray selection menu.">트레이 선택 메뉴에 액세스하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.Design.CommandID" />입니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.MenuCommands" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls.">중첩 컨트롤을 지원하는 <see cref="T:System.Windows.Forms.Control" /> 의 디자인 모드 동작을 확장합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary vsli:raw="Adds padding snaplines.">패딩 Snaplines를 추가합니다.</summary>
      <param name="snapLines" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects.">
        <see cref="T:System.Collections.ArrayList" /> 개체가 포함된 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Called when a component is added to the parent container.">구성 요소가 부모 컨테이너에 추가되면 호출됩니다.</summary>
      <param name="component" vsli:raw="The component to test for errors.">오류를 테스트할 구성 요소입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;component&quot; /&gt; can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="component" />를 추가할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary vsli:raw="Indicates whether the specified control can be a child of the control managed by this designer.">지정한 컨트롤이 이 디자이너가 관리하는 컨트롤의 자식이 될 수 있는지 여부를 나타냅니다.</summary>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to test.">테스트할 <see cref="T:System.Windows.Forms.Control" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified control can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정한 컨트롤이 이 디자이너가 관리하는 컨트롤의 자식이 될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Indicates whether the control managed by the specified designer can be a child of the control managed by this designer.">지정한 디자이너가 관리하는 컨트롤이 이 디자이너가 관리하는 컨트롤의 자식이 될 수 있는지 여부를 나타냅니다.</summary>
      <param name="controlDesigner" vsli:raw="The designer for the control to test.">테스트할 컨트롤의 디자이너입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정한 디자이너가 관리하는 컨트롤이 이 디자이너가 관리하는 컨트롤의 자식일 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document.">지정한 도구에서 구성 요소나 컨트롤을 만들어 현재 디자인 문서에 추가합니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">구성 요소를 만들 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document at the specified location.">지정한 도구에서 구성 요소나 컨트롤을 만들어 현재 디자인 문서의 지정한 위치에 추가합니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">구성 요소를 만들 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <param name="location" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;, in design-time view screen coordinates, at which to center the component.">구성 요소를 중앙에 위치시킬 디자인 타임 보기 화면 좌표 상의 <see cref="T:System.Drawing.Point" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document within the bounds of the specified rectangle.">지정한 도구에서 구성 요소나 컨트롤을 만들어 현재 디자인 문서의 지정한 사각형 내에 추가합니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">구성 요소를 만들 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the location and size for the component created from the tool. The &lt;see cref=&quot;P:System.Drawing.Rectangle.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Rectangle.Y&quot; /&gt; values of the &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicate the design-time view screen coordinates of the upper-left corner of the component.">도구에서 만든 구성 요소의 위치 및 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />. <see cref="P:System.Drawing.Rectangle.X" />의 <see cref="P:System.Drawing.Rectangle.Y" /> 및 <see cref="T:System.Drawing.Rectangle" /> 값은 디자인 타임 보기 화면 상에 나타나는 구성 요소의 왼쪽 위의 좌표를 나타냅니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary vsli:raw="Provides core functionality for all the &lt;see cref=&quot;M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)&quot; /&gt; methods.">모든 <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" /> 메서드의 핵심 기능을 제공합니다.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">구성 요소를 만들 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
      <param name="x" vsli:raw="The horizontal position, in design-time view coordinates, of the location of the left edge of the tool, if a size is specified; the horizontal position of the center of the tool, if no size is specified.">크기가 지정된 경우 디자인 타임 보기 좌표에서 도구 왼쪽 가장자리의 가로 위치이고, 크기가 지정되지 않은 경우 도구 가운데의 가로 위치입니다.</param>
      <param name="y" vsli:raw="The vertical position, in design-time view coordinates, of the location of the top edge of the tool, if a size is specified; the vertical position of the center of the tool, if no size is specified.">크기가 지정된 경우 디자인 타임 보기 좌표에서 도구 위쪽 가장자리의 세로 위치이고, 크기가 지정되지 않은 경우 도구 가운데의 세로 위치입니다.</param>
      <param name="width" vsli:raw="The width of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">도구의 너비입니다. 이 매개 변수는 <paramref name="hasSize" /> 매개 <see langword="false" />로 설정되어 있으면 무시됩니다.</param>
      <param name="height" vsli:raw="The height of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">도구의 높이입니다. 이 매개 변수는 <paramref name="hasSize" /> 매개 <see langword="false" />로 설정되어 있으면 무시됩니다.</param>
      <param name="hasLocation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a location for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the component is to be positioned in the center of the currently selected control.">구성 요소의 위치가 지정되어 있으면 <see langword="true" />이고 구성 요소가 현재 선택한 컨트롤의 중앙에 위치하게 되면 <see langword="false" />입니다.</param>
      <param name="hasSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a size for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the default height and width values for the component are to be used.">구성 요소의 크기가 지정되어 있으면 <see langword="true" />이고 구성 요소의 기본 높이와 너비가 사용되면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An array of components created from the tool.">도구에서 만든 구성 요소의 배열입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;, and optionally releases the managed resources.">
        <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary vsli:raw="Gets the control from the designer of the specified component.">지정된 구성 요소의 디자이너에서 컨트롤을 가져옵니다.</summary>
      <param name="component" vsli:raw="The component to retrieve the control for.">컨트롤을 검색할 구성 요소입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that the specified component belongs to.">지정한 구성 요소가 속한 <see cref="T:System.Windows.Forms.Control" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a body glyph that represents the bounds of the control.">컨트롤의 범위를 나타내는 본문 문자 모양을 가져옵니다.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">선택 상태를 지정하는 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 값입니다.</param>
      <returns vsli:raw="A body glyph that represents the bounds of the control.">컨트롤의 범위를 나타내는 본문 문자 모양입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">표준 컨트롤의 선택 테두리와 잡기 핸들을 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 개체의 컬렉션을 가져옵니다.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">선택 상태를 지정하는 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 값입니다.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 개체의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Used by deriving classes to determine if it returns the control being designed or some other &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt; while adding a component to it.">파생 클래스에서 구성 요소를 추가할 때 디자인하고 있는 컨트롤이나 다른 <see cref="T:System.ComponentModel.Container" />를 반환하는지 여부를 확인하는 데 사용됩니다.</summary>
      <param name="component" vsli:raw="The component for which to retrieve the parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">부모 <see cref="T:System.Windows.Forms.Control" />을 검색할 구성 요소입니다.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the component.">구성 요소의 부모 <see cref="T:System.Windows.Forms.Control" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary vsli:raw="Updates the position of the specified rectangle, adjusting it for grid alignment if grid alignment mode is enabled.">지정한 사각형의 위치를 업데이트합니다. 모눈 정렬 모드를 사용하는 경우 모눈 정렬에 맞춰 조정합니다.</summary>
      <param name="originalRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the initial position of the component being updated.">업데이트하고 있는 구성 요소의 초기 위치를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
      <param name="dragRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the new position of the component.">구성 요소의 새 위치를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
      <param name="updateSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to update the size of the rectangle, if there has been any change; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">변경 사항이 있는 경우 <see langword="true" />이면 사각형의 크기를 업데이트하고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="A rectangle indicating the position of the component in design-time view screen coordinates. If no changes have been made, this method returns the original rectangle.">디자인 타임 보기 화면 좌표에서 구성 요소의 위치를 나타내는 사각형. 변경 사항이 없으면 이 메서드는 원래의 사각형을 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">디자이너를 지정된 구성 요소로 초기화합니다.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">디자이너에 연결할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">새로 만들어진 구성 요소를 초기화합니다.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">속성에 적용할 기본값의 이름/값 사전입니다. 기본값이 지정되지 않은 경우 <see langword="null" /> 일 수 있습니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a tool from the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">지정한 <see cref="T:System.Drawing.Design.ToolboxItem" />에서 도구를 만듭니다.</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; that the tool is to be used with.">도구가 사용될 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />입니다.</param>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a tool from.">도구를 만들 <see cref="T:System.Drawing.Design.ToolboxItem" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called in order to clean up a drag-and-drop operation.">끌어서 놓기 작업을 정리하기 위해 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dropped onto the control designer view.">끌어서 놓기 개체를 컨트롤 디자이너 보기에 놓았을 때 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation enters the control designer view.">끌어서 놓기 작업이 컨트롤 디자이너 보기로 진입할 때 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation leaves the control designer view.">끌어서 놓기 작업이 컨트롤 디자이너 보기를 벗어날 때 호출됩니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dragged over the control designer view.">끌어서 놓기 개체를 컨트롤 디자이너 보기로 끌어 올 때 호출됩니다.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Called in response to the left mouse button being pressed and held while over the component.">구성 요소를 마우스 왼쪽 단추로 누르고 있을 때의 응답으로 호출됩니다.</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">화면 좌표에서 마우스의 x 좌표입니다.</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">화면 좌표에서 마우스의 y 좌표입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Called at the end of a drag-and-drop operation to complete or cancel the operation.">끌어서 놓기 작업의 마지막에 호출되어 그 작업을 완료하거나 취소합니다.</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag operation; &lt;see langword=&quot;false&quot; /&gt; to commit it.">
        <see langword="true" />이면 끌기 작업을 취소하고, <see langword="false" />이면 커밋합니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Called for each movement of the mouse during a drag-and-drop operation.">끌어서 놓기 작업 도중 마우스를 움직일 때마다 호출됩니다.</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">화면 좌표에서 마우스의 x 좌표입니다.</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">화면 좌표에서 마우스의 y 좌표입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">디자이너가 관리하고 있는 컨트롤이 자신을 색칠할 때 호출되므로 디자이너는 컨트롤 위에 추가로 색칠할 수 있습니다.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">이벤트에 대한 데이터를 제공하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary vsli:raw="Provides an opportunity to change the current mouse cursor.">현재 마우스 커서를 변경할 기회를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">구성 요소가 <see cref="T:System.ComponentModel.TypeDescriptor" />를 통해 노출하는 속성 집합을 조정합니다.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">구성 요소의 클래스에 대한 속성이 포함된 <see cref="T:System.Collections.IDictionary" />입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary vsli:raw="Gets a value indicating whether selected controls will be re-parented.">선택한 컨트롤의 부모가 다시 지정되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the controls that were selected by lassoing on the designer's surface will be re-parented to this designer's control.">디자이너 화면에서 올가미를 지정하여 선택한 컨트롤이 다시 이 디자이너 컨트롤의 부모가 되면 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary vsli:raw="Gets a value indicating whether a generic drag box should be drawn when dragging a toolbox item over the designer's surface.">디자이너 화면 위로 도구 상자 항목을 끌 때 일반 끌기 상자를 그려야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a generic drag box should be drawn when dragging a toolbox item over the designer's surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">디자이너 화면 위로 도구 상자 항목을 끌 때 일반 끌기 상자를 그려야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary vsli:raw="Gets a value indicating whether the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;.">컨트롤을 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />에 놓을 때 컨트롤의 Z 순서를 유지해야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">컨트롤을 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />에 놓을 때 컨트롤의 Z 순서를 유지해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary vsli:raw="Gets the default location for a control added to the designer.">이 디자이너에 추가된 컨트롤의 기본 위치를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that indicates the default location for a control added to the designer.">이 디자이너에 추가된 컨트롤의 기본 위치를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary vsli:raw="Gets or sets a value indicating whether a grid should be drawn on the control for this designer.">이 디자이너에 대한 컨트롤에 모눈을 그려야 할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a grid should be drawn on the control in the designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">이 디자이너에서 컨트롤에 모눈을 그려야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles are drawn by the designer.">끌기 사각형을 디자이너에서 그릴지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles are drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">끌기 사각형을 그리면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary vsli:raw="Gets or sets the size of each square of the grid that is drawn when the designer is in grid draw mode.">디자이너가 모눈 그리기 모드일 때 그려지는 모눈의 각 사각형의 크기를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; is outside the allowed range for &lt;see cref=&quot;P:System.Windows.Forms.Design.ParentControlDesigner.GridSize&quot; /&gt;. The default minimum value is 2, and the default maximum value is 200.">
        <see cref="T:System.Drawing.Size" />가 <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />의 허용되는 범위를 벗어난 경우. 기본 최소값은 2이고 기본 최대값은 200입니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; that represents the size of each square of the grid drawn on a form or user control.">폼이나 사용자 정의 컨트롤에 그려진 모눈의 각 사각형의 크기를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary vsli:raw="Gets a value indicating whether the designer has a valid tool during a drag operation.">끌기 작업 중 디자이너에 유효한 도구가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="The tool being dragged, if creating a component, or &lt;see langword=&quot;null&quot; /&gt; if there is no tool.">구성 요소를 만드는 경우 끌고 있는 도구이거나, 도구가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">이 컨트롤의 중요 맞춤 지점을 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 개체의 목록을 가져옵니다.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">이 컨트롤의 중요한 맞춤 지점을 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 개체의 목록입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which should receive scroll messages.">스크롤 메시지를 받는 <see cref="T:System.Windows.Forms.Control" /> 의 디자인 모드 동작을 확장하기 위한 기본 디자이너 클래스입니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ScrollableControlDesigner&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">지정된 지점의 마우스 클릭이 컨트롤에 의해 처리되는지 여부를 지정합니다.</summary>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">화면 좌표에서 마우스를 클릭한 위치를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 위치의 클릭을 컨트롤에서 처리해야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and passes WM_HSCROLL and WM_VSCROLL messages to the control at design time.">디자인 타임에 Windows 메시지를 처리하고 WM_HSCROLL 및 WM_VSCROLL 메시지를 컨트롤에 전달합니다.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">처리할 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary vsli:raw="Defines identifiers that are used to indicate selection rules for a component.">구성 요소에 대한 선택 규칙을 나타내는 데 사용하는 식별자를 정의합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary vsli:raw="Indicates the component supports sizing in all directions.">구성 요소가 모든 방향으로의 크기 조정을 지원함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary vsli:raw="Indicates the component supports resize from the bottom.">구성 요소가 아래로부터의 크기 조정을 지원함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary vsli:raw="Indicates the component supports resize from the left.">구성 요소가 왼쪽으로부터의 크기 조정을 지원함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary vsli:raw="Indicates the component is locked to its container. Overrides the &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.Moveable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.AllSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.BottomSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.LeftSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.RightSizeable&quot; /&gt;, and &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.TopSizeable&quot; /&gt; bit flags of this enumeration.">구성 요소가 해당 컨테이너에 고정됨을 나타냅니다. 이 열거형의 <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> 및 <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> 비트 플래그를 재정의합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary vsli:raw="Indicates the component supports a location property that allows it to be moved on the screen.">구성 요소가 화면에서 이동할 수 있는 위치 속성을 지원함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary vsli:raw="Indicates no special selection attributes.">특별한 선택 특성이 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary vsli:raw="Indicates the component supports resize from the right.">구성 요소가 오른쪽으로부터의 크기 조정을 지원함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary vsli:raw="Indicates the component supports resize from the top.">구성 요소가 위쪽으로부터의 크기 조정을 지원함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary vsli:raw="Indicates the component has some form of visible user interface and the selection service is drawing a selection border around this user interface. If a selected component has this rule set, you can assume that the component implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; and that it is associated with a corresponding designer instance.">구성 요소에 시각적 사용자 인터페이스의 일부 폼이 있고 선택 서비스가 이 사용자 인터페이스 주위에 선택 테두리를 그리고 있음을 나타냅니다. 선택한 구성 요소에 이 규칙이 설정되어 있으면 구성 요소가 <see cref="T:System.ComponentModel.IComponent" />를 구현했고 해당 디자이너 인스턴스에 연결되어 있음을 가정할 수 있습니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary vsli:raw="Provides an editor for picking shortcut keys.">바로 가기 키를 선택하는 데 사용할 수 있는 편집기를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ShortcutKeysEditor&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">
        <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 메서드에서 제공된 편집기 스타일을 사용하여 지정된 개체 값을 편집합니다.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that this editor can use to obtain services.">이 편집기에서 서비스를 가져오는 데 사용할 수 있는 <see cref="T:System.IServiceProvider" /> 입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to edit.">편집할 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="The new value of the &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" />의 새 값입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.ShortcutKeysEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">
        <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> 메서드에서 사용하는 편집기 스타일을 가져옵니다.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value that indicates the style of editor used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.ShortcutKeysEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 메서드에서 사용하는 편집기 스타일을 나타내는 <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary vsli:raw="A value that indicates whether the scrollbars of a window and its children will be themed when displayed in the Visual Studio designer.">Visual Studio 디자이너에 표시될 때 창과 자식의 스크롤 막대에 테마를 지정할지 여부를 나타내는 값입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary vsli:raw="The window and all of its children will have themed scrollbars.">창과 모든 자식에는 테마가 적용된 스크롤 막대를 갖게 됩니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary vsli:raw="The window and all of its children will not be themed.">창과 모든 자식에는 테마가 적용되지 않습니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary vsli:raw="The window will have themed scrollbars but all of its children will not be themed.">창은 테마가 적용된 스크롤 막대를 갖게 되지만 모든 자식은 테마가 적용되지 않습니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary vsli:raw="Represents a window and a value that indicates how its scrollbars should be themed when displayed in the Visual Studio designer.">Visual Studio 디자이너에 표시될 때 창 스크롤 막대에 테마를 지정하는 방법을 나타내는 값과 창을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary vsli:raw="The window handle.">창 핸들입니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary vsli:raw="A value that indicates how the window scrollbars should be themed when displayed in the Visual Studio designer.">Visual Studio 디자이너에 표시될 때 창 스크롤 막대에 테마를 지정하는 방법을 나타내는 값입니다.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary vsli:raw="Provides access to get and set option values for a Windows Forms designer.">Windows Forms 디자이너의 get 및 set 옵션 값에 대한 액세스를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt; class.">
        <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />을 채웁니다.</summary>
      <param name="options" vsli:raw="The collection to populate.">채울 컬렉션입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.DesignerOptions" />에서 노출하는 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.DesignerOptions" />에서 노출하는 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />입니다.</returns>
    </member>
  </members>
</doc>