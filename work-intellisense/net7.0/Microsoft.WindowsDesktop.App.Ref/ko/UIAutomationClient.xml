<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>UIAutomationClient</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.AndCondition">
      <summary>둘 이상의 <see cref="T:System.Windows.Automation.PropertyCondition" /> 개체를 결합할 때 모두 true여야 일치하는 것으로 판정하는 경우를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.AndCondition.#ctor(System.Windows.Automation.Condition[])">
      <summary>모든 하위 조건이 true여야 true인 <see cref="T:System.Windows.Automation.PropertyCondition" />을 만듭니다.</summary>
      <param name="conditions">둘 이상의 하위 조건입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.AndCondition.GetConditions">
      <summary>이 조건의 하위 조건 배열을 검색합니다.</summary>
      <returns>이 조건의 하위 조건 배열입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Automation">
      <summary>UI 자동화 클라이언트 애플리케이션의 필드 및 메서드를 포함합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Automation.ContentViewCondition">
      <summary>콘텐츠를 포함할 수 있는 UI 자동화 요소만 포함된 미리 정의된 UI 자동화 트리 뷰를 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Automation.ControlViewCondition">
      <summary>컨트롤인 UI 자동화 요소만 포함된 미리 정의된 UI 자동화 트리 뷰를 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Automation.RawViewCondition">
      <summary>모든 UI 자동화 요소가 포함된 미리 정의된 UI 자동화 트리 뷰를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)">
      <summary>UI 자동화 이벤트를 처리하는 메서드를 등록합니다.</summary>
      <param name="eventId">메서드에서 처리할 이벤트의 식별자입니다.</param>
      <param name="element">이벤트 처리기를 연결할 UI 자동화 요소입니다.</param>
      <param name="scope">처리할 이벤트의 범위입니다. 즉, 요소 자체에서만 발생할 수도 있고 상위 및 하위 요소에서 발생할 수도 있습니다.</param>
      <param name="eventHandler">지정된 이벤트가 발생할 때 호출할 메서드입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
      <summary>포커스 변경 이벤트를 처리할 메서드를 등록합니다.</summary>
      <param name="eventHandler">이벤트가 발생할 때 호출할 메서드입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])">
      <summary>속성 변경 이벤트를 처리할 메서드를 등록합니다.</summary>
      <param name="element">이벤트 처리기를 연결할 UI 자동화 요소입니다.</param>
      <param name="scope">처리할 이벤트의 범위입니다. 즉, 요소 자체에서만 발생할 수도 있고 상위 요소 및 자식에서 발생할 수도 있습니다.</param>
      <param name="eventHandler">이벤트가 발생할 때 호출할 메서드입니다.</param>
      <param name="properties">해당 UI 자동화 속성입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)">
      <summary>구조 변경 이벤트를 처리할 메서드를 등록합니다.</summary>
      <param name="element">이벤트 처리기를 연결할 UI 자동화 요소입니다.</param>
      <param name="scope">처리할 이벤트의 범위입니다. 즉, 요소 자체에서만 발생할 수도 있고 상위 및 하위 요소에서 발생할 수도 있습니다.</param>
      <param name="eventHandler">구조 변경 이벤트가 발생할 때 호출할 메서드입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.Compare(System.Int32[],System.Int32[])">
      <summary>런타임 ID(식별자)가 들어 있는 두 정수 배열을 비교하여 내용이 같은지 확인합니다.</summary>
      <param name="runtimeId1">비교할 첫 번째 런타임 ID입니다.</param>
      <param name="runtimeId2">비교할 두 번째 런타임 ID입니다.</param>
      <returns>비교한 런타임 ID가 같은 UI(사용자 인터페이스) 요소를 참조하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
      <summary>두 UI 자동화 요소를 비교하여 두 요소가 같은 UI 요소를 참조하면 <see langword="true" />를 반환합니다.</summary>
      <param name="el1">비교할 첫 번째 UI 자동화 요소입니다.</param>
      <param name="el2">비교할 두 번째 UI 자동화 요소입니다.</param>
      <returns>UI 요소의 런타임 식별자가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Automation.PatternName(System.Windows.Automation.AutomationPattern)">
      <summary>지정된 컨트롤 패턴의 이름을 검색합니다.</summary>
      <param name="pattern">컨트롤 패턴의 식별자입니다.</param>
      <returns>컨트롤 패턴의 이름 또는 지정된 패턴이 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Automation.PropertyName(System.Windows.Automation.AutomationProperty)">
      <summary>지정된 UI 자동화 속성의 이름을 검색합니다.</summary>
      <param name="property">지정된 속성의 UI 자동화 속성 식별자입니다.</param>
      <returns>UI 자동화 속성의 이름이거나, 지정된 UI 자동화 속성을 찾을 수 없으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAllEventHandlers">
      <summary>등록된 UI 자동화 이벤트 처리기를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationEventHandler)">
      <summary>지정된 UI 자동화 이벤트 처리기를 제거합니다.</summary>
      <param name="eventId">이벤트 식별자입니다.</param>
      <param name="element">이벤트 처리기를 제거할 UI 자동화 요소입니다.</param>
      <param name="eventHandler">지정된 이벤트 식별자 및 UI 자동화 요소를 사용하여 <see cref="M:System.Windows.Automation.Automation.AddAutomationEventHandler(System.Windows.Automation.AutomationEvent,System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationEventHandler)" />에 전달한 처리기 메서드입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)">
      <summary>지정된 포커스 변경 이벤트 처리기를 제거합니다.</summary>
      <param name="eventHandler">
        <see cref="M:System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler(System.Windows.Automation.AutomationFocusChangedEventHandler)" />에 전달한 처리기 메서드입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationPropertyChangedEventHandler)">
      <summary>지정된 속성 변경 이벤트 처리기를 제거합니다.</summary>
      <param name="element">이벤트 처리기를 제거할 UI 자동화 요소입니다.</param>
      <param name="eventHandler">지정된 UI 자동화 요소를 사용하여 <see cref="M:System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.AutomationPropertyChangedEventHandler,System.Windows.Automation.AutomationProperty[])" />에 전달한 처리기 메서드입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Automation.RemoveStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.StructureChangedEventHandler)">
      <summary>지정된 구조 변경 이벤트 처리기를 제거합니다.</summary>
      <param name="element">이벤트 처리기를 제거할 UI 자동화 요소입니다.</param>
      <param name="eventHandler">지정된 UI 자동화 요소를 사용하여 <see cref="M:System.Windows.Automation.Automation.AddStructureChangedEventHandler(System.Windows.Automation.AutomationElement,System.Windows.Automation.TreeScope,System.Windows.Automation.StructureChangedEventHandler)" />에 전달한 처리기 메서드입니다.</param>
    </member>
    <member name="T:System.Windows.Automation.AutomationElement">
      <summary>UI Automation 트리의 UI Automation 요소를 나타내며 UI Automation 클라이언트 애플리케이션에서 식별자로 사용되는 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AccessKeyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent">
      <summary>비동기 콘텐츠 로드 중 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent">
      <summary>포커스가 변경될 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AutomationIdProperty">
      <summary>요소를 식별하는 데 사용되는 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent">
      <summary>속성 변경 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ClassNameProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ClickablePointProperty">
      <summary>클릭 가능 지점 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ControlTypeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.CultureProperty">
      <summary>문화권 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.FrameworkIdProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.HelpTextProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsContentElementProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsControlElementProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.DockPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />에서 참조하는 UI(사용자 인터페이스) 항목을 사용할 수 있는지 여부를 지정하는 <see cref="T:System.Windows.Automation.AutomationElement" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.GridItemPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.GridPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.InvokePattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.ItemContainerPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.MultipleViewPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsOffscreenProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" /> 항목이 화면에 표시되는지 여부를 나타내는 UI(사용자 인터페이스) 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsPasswordProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.RangeValuePattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.ScrollItemPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.ScrollPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.SelectionItemPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.SelectionPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.TableItemPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.TablePattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.TextPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.TogglePattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.TransformPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.ValuePattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty">
      <summary>이 <see cref="T:System.Windows.Automation.WindowPattern" /> 에서 <see cref="T:System.Windows.Automation.AutomationElement" />컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ItemStatusProperty">
      <summary>복합 항목의 시각적 표시 상태를 지정하는 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ItemTypeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.LabeledByProperty">
      <summary>컨트롤에 연결된 레이블을 식별하는 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent">
      <summary>레이아웃이 무효화될 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty">
      <summary>로컬 언어로 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.MenuClosedEvent">
      <summary>메뉴가 닫힐 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.MenuOpenedEvent">
      <summary>메뉴가 열릴 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.NameProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.NotSupported">
      <summary>속성이 지원되지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.PositionInSetProperty">
      <summary>형제로 간주되는 일련의 요소 내에서 자동화 요소의 서수 위치를 설명합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ProcessIdProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty">
      <summary>요소의 런타임 식별자를 포함하는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.SizeOfSetProperty">
      <summary>형제로 간주되는 그룹 또는 세트에서 자동화 요소 수를 설명합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.StructureChangedEvent">
      <summary>UI 자동화 트리 구조가 변경될 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ToolTipClosedEvent">
      <summary>도구 설명이 닫힐 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElement.ToolTipOpenedEvent">
      <summary>도구 설명이 열릴 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.Equals(System.Object)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 값이 이 <see cref="T:System.Windows.Automation.AutomationElement" />와 같은지 여부를 확인합니다.</summary>
      <param name="obj">비교할 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
      <returns>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />가 이 <see cref="T:System.Windows.Automation.AutomationElement" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.Finalize">
      <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)">
      <summary>지정된 조건에 맞는 모든 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체를 반환합니다.</summary>
      <param name="scope">검색 범위를 지정하는 값의 비트 조합입니다.</param>
      <param name="condition">대조할 조건이 들어 있는 개체입니다.</param>
      <returns>지정된 조건에 맞는 개체의 컬렉션입니다. 일치 항목이 없으면 빈 컬렉션이 반환됩니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)">
      <summary>지정된 조건에 맞는 첫 번째 자식이나 하위 요소를 반환합니다.</summary>
      <param name="scope">검색 범위를 지정하는 값의 비트 조합입니다.</param>
      <param name="condition">대조할 조건이 들어 있는 개체입니다.</param>
      <returns>조건에 맞는 첫 번째 요소이거나, 조건에 맞는 요소가 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)">
      <summary>지정된 창 핸들에서 참조하는 UI(사용자 인터페이스) 항목의 새 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체를 검색합니다.</summary>
      <param name="hwnd">UI 요소의 핸들입니다.</param>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" />로 식별되는 UI 항목의 <paramref name="hwnd" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>로컬 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> 구현에서 새 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체를 검색합니다.</summary>
      <param name="localImpl">공급자 개체입니다.</param>
      <returns>공급자 개체에서 제공하는 요소를 나타내는 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)">
      <summary>데스크톱에서 지정된 지점에 있는 <see cref="T:System.Windows.Automation.AutomationElement" /> 항목의 새 UI(사용자 인터페이스) 개체를 검색합니다.</summary>
      <param name="pt">데스크톱에서 UI 요소를 찾을 실제 화면 좌표입니다.</param>
      <returns>지정된 지점에 있는 UI 항목입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)">
      <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 캐시에서 지정된 패턴을 검색합니다.</summary>
      <param name="pattern">검색할 패턴의 식별자입니다.</param>
      <exception cref="T:System.InvalidOperationException">요청한 패턴이 캐시에 없거나 요소에서 지원되지 않는 경우</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <returns>지정된 패턴을 나타내는 개체입니다. 일치하는 패턴이 없으면 <see langword="null" />이 반환됩니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)">
      <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 캐시에서 지정된 속성의 값을 검색합니다. 대상 UI(사용자 인터페이스) 요소에서 해당 속성을 명시적으로 지원하지 않는 경우에는 속성 형식의 적절한 기본값이 반환됩니다.</summary>
      <param name="property">검색할 속성의 식별자입니다.</param>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI(사용자 인터페이스) 에 대한 <see cref="T:System.Windows.Automation.AutomationElement" /> 가 더 이상 존재하지 않는 경우</exception>
      <returns>지정된 속성의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)">
      <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 캐시에서 지정된 속성의 값을 검색하고, 기본 속성을 선택적으로 무시할 수 있습니다.</summary>
      <param name="property">검색할 속성의 식별자입니다.</param>
      <param name="ignoreDefaultValue">지정된 속성이 지원되지 않는 경우 기본값을 무시할지 여부를 지정하는 값입니다.</param>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <returns>지정된 속성의 값이 들어 있는 개체이거나, 요소에서 값을 제공하지 않고 <paramref name="ignoreDefaultValue" />가 <see langword="true" />인 경우 <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetClickablePoint">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> 에서 클릭할 수 있는 지점을 검색합니다.</summary>
      <exception cref="T:System.Windows.Automation.NoClickablePointException">클릭할 수 있는 지점이 없습니다.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <returns>클라이언트에서 이 요소를 클릭하는 데 사용할 수 있는 지점의 실제 화면 좌표입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)">
      <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 지정된 패턴 개체를 검색합니다.</summary>
      <param name="pattern">검색할 패턴의 식별자입니다.</param>
      <exception cref="T:System.InvalidOperationException">패턴이 요소에서 지원되지 않는 경우</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <returns>지정된 패턴이 현재 <see cref="T:System.Windows.Automation.AutomationElement" />에서 지원되는 경우 해당 패턴 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)">
      <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 지정된 속성 값을 검색합니다. 대상 UI(사용자 인터페이스) 요소에서 해당 속성을 명시적으로 지원하지 않는 경우에는 속성 형식의 적절한 기본값이 반환됩니다.</summary>
      <param name="property">검색할 속성을 지정하는 UI 자동화 속성 식별자입니다.</param>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <returns>지정된 속성의 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)">
      <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 지정된 속성의 값을 검색하고, 기본 속성을 선택적으로 무시할 수 있습니다.</summary>
      <param name="property">검색할 속성을 지정하는 UI 자동화 속성 식별자입니다.</param>
      <param name="ignoreDefaultValue">지정된 속성이 지원되는 경우 기본값을 무시할지 여부를 지정하는 값입니다.</param>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <returns>지정된 속성의 값이 들어 있는 개체이거나, 요소에서 값을 제공하지 않고 <paramref name="ignoreDefaultValue" />가 <see langword="true" />인 경우 <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetHashCode">
      <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 해시 코드를 검색합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetRuntimeId">
      <summary>UI(사용자 인터페이스) 항목에 할당된 고유 식별자를 검색합니다.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <returns>런타임 식별자를 나타내는 정수 배열입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetSupportedPatterns">
      <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 지원하는 컨트롤 패턴을 검색합니다.</summary>
      <returns>지원되는 컨트롤 패턴을 나타내는 <see cref="T:System.Windows.Automation.AutomationPattern" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetSupportedProperties">
      <summary>요소에서 지원하는 속성의 식별자를 검색합니다.</summary>
      <returns>지원되는 속성 식별자의 배열입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)">
      <summary>캐시가 업데이트된 새 <see cref="T:System.Windows.Automation.AutomationElement" />를 검색합니다.</summary>
      <param name="request">업데이트된 캐시에 포함될 패턴 및 속성입니다.</param>
      <returns>캐시가 업데이트된 새 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체가 같은 UI(사용자 인터페이스) 요소를 참조하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left">비교할 첫 번째 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
      <param name="right">비교할 두 번째 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
      <returns>두  <see cref="T:System.Windows.Automation.AutomationElement" /> 개체가 같은 UI 요소를 참조하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체가 서로 다른 UI(사용자 인터페이스) 요소를 참조하는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="left">비교할 첫 번째 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
      <param name="right">비교할 두 번째 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
      <returns>두 개체가 서로 다른 UI 요소를 참조하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.SetFocus">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" />에 집중합니다.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)">
      <summary>캐시에서 컨트롤 패턴을 검색합니다.</summary>
      <param name="pattern">검색할 컨트롤 패턴의 식별자입니다.</param>
      <param name="patternObject">반환 시 패턴이 캐시에 있으면 해당 패턴을, 그렇지 않으면 <see langword="null" />을 포함합니다.</param>
      <returns>패턴이 캐시에 있으면<see langword="true" /> 이고, 패턴이 캐시에 없거나 지원되지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)">
      <summary>요소 내에서 클릭할 수 있는 지점을 검색합니다.</summary>
      <param name="pt">메서드 반환 시 클릭할 수 있는 지점의 실제 화면 좌표를 포함합니다.</param>
      <returns>클릭할 수 있는 지점이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)">
      <summary>컨트롤 패턴을 구현하는 개체를 검색합니다.</summary>
      <param name="pattern">검색할 컨트롤 패턴의 식별자입니다.</param>
      <param name="patternObject">반환 시 컨트롤 패턴이 지원되면 해당 패턴이고, 그렇지 않으면 <see langword="null" />입니다.</param>
      <returns>해당 패턴이 지원되면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.Cached">
      <summary>이 UI 자동화 개체에 대해 캐시된 <see cref="T:System.Windows.Automation.AutomationElement" /> 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">캐시된 속성이 없는 경우</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대해 캐시된 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.CachedChildren">
      <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 캐시된 하위 요소 1을 가져 옵니다.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException">이 요소의 자식을 캐시하도록 요청하지 않은 경우</exception>
      <returns>자식 요소의 컬렉션입니다. 요소에 자식이 없는 경우 이 컬렉션이 비어 있을 수 있습니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.CachedParent">
      <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 캐시된 부모를 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">부모 요소가 캐시되지 않은 경우</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <returns>부모 요소입니다. <see langword="null" />지정 된 요소에 부모가 없으면 (예:이 요소가 루트 노드인 경우) 반환 값은이 될 수 있습니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.Current">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" />의 현재 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
        <see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      <returns>현재 속성 값이 들어 있는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.FocusedElement">
      <summary>현재 포커스를 받고 있는 <see cref="T:System.Windows.Automation.AutomationElement" />를 가져옵니다.</summary>
      <returns>포커스를 받고 있는 UI 요소입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.RootElement">
      <summary>현재 데스크톱의 루트 <see cref="T:System.Windows.Automation.AutomationElement" />를 가져옵니다.</summary>
      <returns>루트 요소입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationElement.AutomationElementInformation">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationElement.Cached" /> 또는 <see cref="P:System.Windows.Automation.AutomationElement.Current" /> 속성에서 사용하는 속성 접근자를 포함합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey">
      <summary>요소의 액셀러레이터 키 조합이 들어 있는 문자열을 가져옵니다.</summary>
      <returns>요소에 연결된 작업을 호출하는 키 조합 시퀀스입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey">
      <summary>요소의 선택키 문자가 들어 있는 문자열을 가져옵니다.</summary>
      <returns>요소에 연결되어 해당 요소를 활성화하는 데 사용되는 문자입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId">
      <summary>요소의 UI 자동화 ID(식별자)가 들어 있는 문자열을 가져옵니다.</summary>
      <returns>고유한 해당 컨테이너 내에서 형제 사이 있는 요소에 대 한 ID입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle">
      <summary>요소를 완전히 둘러싸는 사각형의 좌표를 가져옵니다.</summary>
      <returns>둘러싸는 사각형의 점 좌표입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName">
      <summary>컨트롤 개발자가 할당한 요소의 클래스 이름이 들어 있는 문자열을 가져옵니다.</summary>
      <returns>컨트롤 개발자가 할당한 클래스 이름입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType">
      <summary>요소의 <see cref="T:System.Windows.Automation.ControlType" />을 가져옵니다.</summary>
      <returns>이 요소의 상호 작용 모델입니다. 기본값은 <see cref="F:System.Windows.Automation.ControlType.Custom" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId">
      <summary>내부 UI 프레임워크의 이름을 가져옵니다.</summary>
      <returns>"Win32", "WinForm" 또는 "DirectUI" 등의 UI 프레임워크 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus">
      <summary>요소에 키보드 포커스가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>요소에 키보드 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText">
      <summary>요소에 연결된 도움말 텍스트를 가져옵니다.</summary>
      <returns>요소의 도구 설명 도움말 텍스트입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement">
      <summary>요소가 콘텐츠 요소인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>요소가 콘텐츠 요소이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement">
      <summary>요소가 컨트롤로 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>요소가 컨트롤로 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled">
      <summary>UI(사용자 인터페이스) 요소에서 참조하는 UI 자동화 항목을 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컨트롤을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable">
      <summary>UI 자동화 요소가 키보드 포커스를 받을 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컨트롤이 키보드 포커스를 받을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen">
      <summary>UI 자동화 요소가 화면에 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컨트롤이 표시되지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword">
      <summary>UI 자동화 요소에 보호된 내용이 들어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>요소에 보호된 내용이 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm">
      <summary>폼에서 UI 자동화 요소를 채워야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>요소를 채워야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus">
      <summary>요소 내의 항목 상태에 대한 설명을 가져옵니다.</summary>
      <returns>상태에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType">
      <summary>항목의 형식에 대한 설명을 가져옵니다.</summary>
      <returns>항목을 설명하는 지역화된 문자열입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy">
      <summary>이 요소의 텍스트 레이블이 들어 있는 요소를 가져옵니다.</summary>
      <returns>이 요소의 레이블인 요소입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType">
      <summary>컨트롤 형식에 대한 설명을 가져옵니다.</summary>
      <returns>"단추"와 같이 컨트롤 형식의 지역화된 설명입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name">
      <summary>요소의 이름을 가져옵니다.</summary>
      <returns>UI(사용자 인터페이스) 요소의 이름입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle">
      <summary>요소의 창 핸들을 가져옵니다.</summary>
      <returns>창의 핸들이 있으면 해당 핸들이고, 그렇지 않으면 0입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation">
      <summary>컨트롤의 방향을 가져옵니다.</summary>
      <returns>방향입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId">
      <summary>이 요소의 프로세스 ID(식별자)를 가져옵니다.</summary>
      <returns>ID 요소를 호스팅하는 프로세스입니다. 속성의 기본값은 0입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationElementCollection">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationElementCollection.CopyTo(System.Array,System.Int32)">
      <summary>컬렉션의 요소를 배열로 복사하며, 대상 배열에서 지정한 인덱스부터 저장합니다.</summary>
      <param name="array">컬렉션에서 복사한 요소가 저장될 대상입니다.</param>
      <param name="index">대상 배열에서 복사를 시작할 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.AutomationElementCollection.CopyTo(System.Windows.Automation.AutomationElement[],System.Int32)">
      <summary>컬렉션의 요소를 특수화된 배열 인스턴스로 복사하며, 대상 배열에서 지정한 인덱스부터 저장합니다.</summary>
      <param name="array">컬렉션에서 복사한 요소가 저장될 대상입니다.</param>
      <param name="index">대상 배열에서 복사를 시작할 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException">대상 배열이 너무 작거나 <paramref name="index" />가 배열의 범위에서 벗어난 경우</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationElementCollection.GetEnumerator">
      <summary>컬렉션의 항목을 반복하는 데 사용할 수 있는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElementCollection" />을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.Count">
      <summary>이 컬렉션의 요소 수를 가져옵니다.</summary>
      <returns>요소의 수입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.IsSynchronized">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElementCollection" /> 개체가 동기화되어 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>항상 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.Item(System.Int32)">
      <summary>지정된 인덱스의 <see cref="T:System.Windows.Automation.AutomationElement" />를 가져옵니다.</summary>
      <param name="index">컬렉션에서 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" />에 음수가 지정되었거나 <paramref name="index" />가 <see cref="P:System.Windows.Automation.AutomationElementCollection.Count" />보다 크거나 같은 경우</exception>
      <returns>지정한 인덱스에 있는 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationElementCollection.SyncRoot">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElementCollection" /> 컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationElementMode">
      <summary>UI Automation 요소를 반환할 때 사용할 참조 형식을 지정하는 값을 포함합니다. 이러한 값은 <see cref="P:System.Windows.Automation.CacheRequest.AutomationElementMode" /> 속성에 사용됩니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementMode.Full">
      <summary>반환된 요소에 내부 UI에 대한 전체 참조가 포함되도록 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementMode.None">
      <summary>반환된 요소에 내부 UI에 대한 참조가 아닌 캐시된 정보만 포함되도록 지정합니다. 예를 들어 이 모드를 사용하면 항목 자체에 대한 참조를 가져오지 않고도 목록 상자의 항목 이름을 검색할 수 있습니다.</summary>
    </member>
    <member name="T:System.Windows.Automation.AutomationFocusChangedEventArgs">
      <summary>포커스 변경 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.AutomationFocusChangedEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationFocusChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="idObject">포커스를 받은 개체의 ID(식별자)입니다.</param>
      <param name="idChild">포커스를 받은 개체의 자식 ID입니다.</param>
    </member>
    <member name="P:System.Windows.Automation.AutomationFocusChangedEventArgs.ChildId">
      <summary>포커스를 받는 개체의 자식 Microsoft Active Accessibility 식별자를 가져옵니다.</summary>
      <returns>식별자입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationFocusChangedEventArgs.ObjectId">
      <summary>이벤트를 생성한 Microsoft Active Accessibility 개체의 ID(식별자)를 가져옵니다.</summary>
      <returns>ID를 UI(사용자 인터페이스) 포커스를 수신 하는 요소입니다. 가능한 값은 개체 식별자를 참조 하세요.</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationFocusChangedEventHandler">
      <summary>포커스가 변경되었을 때 UI 자동화 공급자에서 발생하는 이벤트를 처리하기 위해 UI 자동화 클라이언트 애플리케이션에서 구현하는 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트를 발생시킨 개체입니다.</param>
      <param name="e">이벤트 정보입니다.</param>
    </member>
    <member name="T:System.Windows.Automation.BasePattern">
      <summary>컨트롤 패턴 클래스의 기본 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.BasePattern.Finalize">
      <summary>가비지 수집에 의해 개체가 회수되기 전에 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
    </member>
    <member name="T:System.Windows.Automation.CacheRequest">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" />를 가져올 때 UI Automation 프레임워크에서 캐시하는 속성 및 패턴을 지정합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.#ctor">
      <summary>
        <see cref="T:System.Windows.Automation.CacheRequest" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Activate">
      <summary>같은 스레드에서 <see cref="T:System.Windows.Automation.CacheRequest" />를 요청할 때 이 <see cref="T:System.Windows.Automation.AutomationElement" />를 반환되는 항목에 대한 활성 사양으로 설정합니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.CacheRequest" />를 삭제하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationPattern" /> 식별자를 이 <see cref="T:System.Windows.Automation.CacheRequest" />에 추가합니다.</summary>
      <param name="pattern">캐시할 패턴을 지정하는 식별자입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Automation.CacheRequest" />가 활성 상태인 경우</exception>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationProperty" /> 식별자를 이 <see cref="T:System.Windows.Automation.CacheRequest" />에 추가합니다.</summary>
      <param name="property">캐시할 속성 값을 지정하는 식별자입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Automation.CacheRequest" />가 활성 상태인 경우</exception>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Clone">
      <summary>이 <see cref="T:System.Windows.Automation.CacheRequest" />의 복사본을 만듭니다.</summary>
      <returns>현재 개체의 수정 가능한 복사본입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Pop">
      <summary>현재 스레드의 내부 스택에서 활성 <see cref="T:System.Windows.Automation.CacheRequest" />를 제거합니다.</summary>
      <exception cref="T:System.InvalidOperationException">스택에 마지막으로 푸시되지 않은 캐시 요청을 제거하려고 한 경우</exception>
    </member>
    <member name="M:System.Windows.Automation.CacheRequest.Push">
      <summary>
        <see cref="T:System.Windows.Automation.CacheRequest" />를 내부 상태 스택에 놓아 현재 스레드의 활성 요청으로 만듭니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
      <summary>반환된 요소에 내부 UI(사용자 인터페이스)에 대한 전체 참조가 포함될지 아니면 캐시된 정보만 포함될지를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>반환된 요소에 내부 UI(사용자 인터페이스)에 대한 전체 참조가 포함되면 <see cref="F:System.Windows.Automation.AutomationElementMode.Full" />이고, 그렇지 않으면 <see cref="F:System.Windows.Automation.AutomationElementMode.None" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.Current">
      <summary>현재 스레드에서 활성화된 <see cref="T:System.Windows.Automation.CacheRequest" />입니다.</summary>
      <returns>활성 <see cref="T:System.Windows.Automation.CacheRequest" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.TreeFilter">
      <summary>캐싱 시 사용할 UI 자동화 요소 트리의 뷰를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>UI 자동화 요소 트리 뷰입니다. 기본 보기는 <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.CacheRequest.TreeScope">
      <summary>하위 트리의 루트만 캐시할지 아니면 해당 자식이나 하위 항목도 캐시할지를 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">속성을 <see cref="F:System.Windows.Automation.TreeScope.Parent" /> 또는 <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />로 설정하려고 한 경우</exception>
      <returns>
        <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" /> 또는 <see cref="F:System.Windows.Automation.TreeScope.Subtree" /> 중 하나 이상입니다. 기본값은 <see cref="F:System.Windows.Automation.TreeScope.Element" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.ClientSettings">
      <summary>클라이언트에서 클라이언트측 공급자를 사용할 수 있게 하는 메서드를 포함합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.ClientSettings.RegisterClientSideProviderAssembly(System.Reflection.AssemblyName)">
      <summary>클라이언트 쪽 공급자를 포함하는 어셈블리를 등록합니다.</summary>
      <param name="assemblyName">어셈블리의 이름입니다.</param>
      <exception cref="T:System.Windows.Automation.ProxyAssemblyNotLoadedException">어셈블리를 로드할 수 없는 경우</exception>
    </member>
    <member name="M:System.Windows.Automation.ClientSettings.RegisterClientSideProviders(System.Windows.Automation.ClientSideProviderDescription[])">
      <summary>클라이언트측 공급자를 등록합니다.</summary>
      <param name="clientSideProviderDescription">공급자 설명의 배열입니다.</param>
      <exception cref="T:System.Windows.Automation.ProxyAssemblyNotLoadedException">어셈블리를 로드할 수 없는 경우</exception>
    </member>
    <member name="T:System.Windows.Automation.ClientSideProviderDescription">
      <summary>UI 자동화 클라이언트 애플리케이션에 등록할 수 있도록 클라이언트 쪽 UI 자동화 공급자의 범위를 설명합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String)">
      <summary>
        <see cref="T:System.Windows.Automation.ClientSideProviderDescription" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="clientSideProviderFactoryCallback">창의 클라이언트측 공급자를 만드는 메서드입니다.</param>
      <param name="className">공급자가 사용되는 창의 클래스 이름입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
      <summary>
        <see cref="T:System.Windows.Automation.ClientSideProviderDescription" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="clientSideProviderFactoryCallback">창의 클라이언트측 공급자를 만드는 메서드입니다.</param>
      <param name="className">공급자가 사용되는 창의 클래스 이름입니다.</param>
      <param name="imageName">해당 창이 있는 프로세스의 실행 파일 또는 DLL의 이름입니다.</param>
      <param name="flags">창 클래스 이름을 대조하는 동작을 지정하는 플래그입니다.</param>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.ClassName">
      <summary>공급자가 사용되는 창의 클래스 이름을 가져옵니다.</summary>
      <returns>창 클래스 이름입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.ClientSideProviderFactoryCallback">
      <summary>클라이언트측 공급자를 만드는 메서드를 가져옵니다.</summary>
      <returns>콜백 메서드입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.Flags">
      <summary>창 클래스 이름을 대조하는 동작을 지정하는 플래그를 가져옵니다.</summary>
      <returns>값의 비트 조합입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ClientSideProviderDescription.ImageName">
      <summary>해당 창이 있는 프로세스의 실행 파일 또는 DLL(동적 연결 라이브러리)의 이름을 가져옵니다.</summary>
      <returns>이미지 이름입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.ClientSideProviderFactoryCallback">
      <summary>창의 클라이언트 쪽 UI 자동화 공급자를 만드는 메서드를 나타냅니다.</summary>
      <param name="hwnd">공급자를 만들 창입니다.</param>
      <param name="idChild">개체의 자식 ID입니다.</param>
      <param name="idObject">개체의 ID입니다.</param>
    </member>
    <member name="T:System.Windows.Automation.ClientSideProviderMatchIndicator">
      <summary>
        <see cref="T:System.Windows.Automation.ClientSideProviderDescription" />의 클래스 이름을 대조하는 동작을 지정하는 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ClientSideProviderMatchIndicator.AllowSubstringMatch">
      <summary>클래스 이름을 비교할 때 부분 문자열 비교를 사용하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ClientSideProviderMatchIndicator.DisallowBaseClassNameMatch">
      <summary>창 클래스 이름을 대조할 때 개체의 기본 클래스를 사용하지 않도록 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ClientSideProviderMatchIndicator.None">
      <summary>특수 플래그가 없습니다.</summary>
    </member>
    <member name="T:System.Windows.Automation.Condition">
      <summary>UI Automation 트리에서 요소를 검색할 때 필터링에 사용되는 조건의 기본 형식입니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Condition.FalseCondition">
      <summary>항상 <see langword="false" />로 계산되는 <see cref="T:System.Windows.Automation.Condition" />을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.Condition.TrueCondition">
      <summary>항상 <see langword="true" />로 계산되는 <see cref="T:System.Windows.Automation.Condition" />을 나타냅니다.</summary>
    </member>
    <member name="T:System.Windows.Automation.DockPattern">
      <summary>도킹 컨테이너 내에서 해당 도킹 속성을 공개하는 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPattern.DockPositionProperty">
      <summary>
        <see cref="P:System.Windows.Automation.DockPattern.DockPatternInformation.DockPosition" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.DockPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.DockPattern.SetDockPosition(System.Windows.Automation.DockPosition)">
      <summary>도킹 컨테이너 내 요청된 <see cref="T:System.Windows.Automation.DockPosition" />에서 <see cref="T:System.Windows.Automation.AutomationElement" />를 도킹합니다.</summary>
      <param name="dockPosition">도킹 컨테이너의 경계 및 컨테이너 내 다른 요소에 상대적인 도킹 위치입니다.</param>
      <exception cref="T:System.InvalidOperationException">컨트롤이 요청된 도킹 스타일을 실행할 수 없는 경우.</exception>
    </member>
    <member name="P:System.Windows.Automation.DockPattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.DockPattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>컨트롤 패턴에 대해 캐시된 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.DockPattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.DockPattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
      <returns>컨트롤 패턴에 대한 현재 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.DockPattern.DockPatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.DockPattern" /> 또는 <see cref="P:System.Windows.Automation.DockPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.DockPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.DockPattern.DockPatternInformation.DockPosition">
      <summary>도킹 컨테이너 내에서 <see cref="T:System.Windows.Automation.DockPosition" />의 <see cref="T:System.Windows.Automation.AutomationElement" />을 검색합니다.</summary>
      <returns>컨테이너 내에서 도킹 컨테이너 및 다른 요소의 경계를 기준으로 한 요소의 <see cref="T:System.Windows.Automation.DockPosition" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapsePattern">
      <summary>시각적으로 확장되어 콘텐츠를 표시하거나 축소되어 콘텐츠를 숨기는 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapseStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapsePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.ExpandCollapsePattern.Collapse">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" />의 모든 하위 노드, 컨트롤 또는 콘텐츠를 숨깁니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Automation.ExpandCollapseState" /> = <see cref="F:System.Windows.Automation.ExpandCollapseState.LeafNode" />인 경우 <see cref="M:System.Windows.Automation.ExpandCollapsePattern.Collapse" />가 호출됩니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.ExpandCollapsePattern.Expand">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" />의 모든 자식 노드, 컨트롤 또는 내용을 표시합니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Automation.ExpandCollapseState" /> = <see cref="F:System.Windows.Automation.ExpandCollapseState.LeafNode" />인 경우 <see cref="M:System.Windows.Automation.ExpandCollapsePattern.Expand" />가 호출됩니다.</exception>
    </member>
    <member name="P:System.Windows.Automation.ExpandCollapsePattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.ExpandCollapsePattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>컨트롤 패턴에 대해 캐시된 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ExpandCollapsePattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.ExpandCollapsePattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
      <returns>컨트롤 패턴에 대한 현재 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> 또는 <see cref="P:System.Windows.Automation.ExpandCollapsePattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.ExpandCollapsePattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.ExpandCollapsePattern.ExpandCollapsePatternInformation.ExpandCollapseState">
      <summary>
        <see cref="T:System.Windows.Automation.ExpandCollapseState" />의 <see cref="T:System.Windows.Automation.AutomationElement" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.ExpandCollapseState" />의 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.GridItemPattern">
      <summary>
        <see cref="T:System.Windows.Automation.GridPattern" />을 지원하는 컨테이너의 자식 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.ColumnProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Column" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.ColumnSpanProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ColumnSpan" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.ContainingGridProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ContainingGrid" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.GridItemPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.RowProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Row" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPattern.RowSpanProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.RowSpan" /> 속성을 식별합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.GridItemPattern" />에 대해 캐시된 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>캐시된 속성 값입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.GridItemPattern" />에 대한 현재 속성 값을 가져옵니다.</summary>
      <returns>현재 속성 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.GridItemPattern.GridItemPatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.GridItemPattern" /> 또는 <see cref="P:System.Windows.Automation.GridItemPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.GridItemPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Column">
      <summary>셀 또는 항목을 포함하는 열의 서수를 가져옵니다.</summary>
      <returns>셀 또는 항목을 포함하는 열을 식별하는 서수(0부터 시작)입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ColumnSpan">
      <summary>셀 또는 항목의 범위에 포함되는 열 수를 가져옵니다.</summary>
      <returns>범위에 포함되는 열 수입니다. 기본값은 1입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.ContainingGrid">
      <summary>
        <see cref="T:System.Windows.Automation.GridPattern" />을 지원하고 셀 또는 항목의 컨테이너를 나타내는 UI 자동화 요소를 가져옵니다.</summary>
      <returns>GridPattern을 지원하고 테이블 셀 또는 항목 컨테이너를 나타내는 UI 자동화 요소입니다. 기본값은 null 참조 (<see langword="Nothing" /> Microsoft Visual Basic.net에서).</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.Row">
      <summary>셀 또는 항목을 포함하는 행의 서수를 가져옵니다.</summary>
      <returns>테이블 셀 또는 항목을 포함하는 행을 식별하는 서수(0부터 시작)입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridItemPattern.GridItemPatternInformation.RowSpan">
      <summary>셀 또는 항목의 범위에 포함되는 행 수를 가져옵니다.</summary>
      <returns>범위에 포함되는 행 수입니다. 기본값은 1입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.GridPattern">
      <summary>자식 요소 컬렉션에 대한 컨테이너 역할을 하는 컨트롤을 나타냅니다. 이 컨트롤의 자식은 <see cref="T:System.Windows.Automation.GridItemPattern" />을 지원하고 행과 열로 트래버스할 수 있는 2차원의 논리적 좌표계로 구성됩니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridPattern.ColumnCountProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.GridPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.GridPattern.RowCountProperty">
      <summary>
        <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount" /> 속성을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.GridPattern.GetItem(System.Int32,System.Int32)">
      <summary>지정된 셀을 나타내는 <see cref="T:System.Windows.Automation.AutomationElement" />를 검색합니다.</summary>
      <param name="row">관심 있는 행의 서수입니다.</param>
      <param name="column">관심 있는 열의 서수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">요청된 행 또는 열 좌표가 0보다 작은 경우

또는

요청된 행 좌표가 <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount" />보다 크거나 요청된 열 좌표가 <see cref="P:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount" />보다 큰 경우</exception>
      <returns>검색된 셀을 나타내는 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.GridPattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>컨트롤 패턴에 대해 캐시된 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.GridPattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
      <returns>컨트롤 패턴에 대한 현재 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.GridPattern.GridPatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.GridPattern" /> 또는 <see cref="P:System.Windows.Automation.GridPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.GridPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount">
      <summary>표에 있는 열 수를 가져옵니다.</summary>
      <returns>표에 있는 열의 총 개수입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount">
      <summary>그리드에 있는 행의 총수를 가져옵니다.</summary>
      <returns>그리드에 있는 행의 총수입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.InvokePattern">
      <summary>활성화되었을 때 상태를 유지하지 않고 명확한 단일 작업을 시작하거나 수행하는 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.InvokePattern.InvokedEvent">
      <summary>컨트롤이 호출되거나 활성화될 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.InvokePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.InvokePattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.InvokePattern.Invoke">
      <summary>요청을 보내 컨트롤을 활성화하고 해당하는 명확한 단일 작업을 시작합니다.</summary>
      <exception cref="T:System.InvalidOperationException">이 요소는 <see cref="T:System.Windows.Automation.InvokePattern" /> 컨트롤 패턴을 지원하지 않으며 숨겨져 있거나 차단되었습니다.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">요소가 활성화되지 않았습니다. UI 자동화 공급자가 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> 속성의 자체 처리를 구현했을 때 발생할 수 있습니다.</exception>
    </member>
    <member name="T:System.Windows.Automation.ItemContainerPattern">
      <summary>항목을 관리하는 개체를 나타내며 속성 값별 항목 검색을 지원합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ItemContainerPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.ItemContainerPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.ItemContainerPattern.FindItemByProperty(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationProperty,System.Object)">
      <summary>지정된 속성 값으로 요소를 검색합니다.</summary>
      <param name="startAfter">검색을 시작할 컨테이너의 항목입니다.</param>
      <param name="property">검색할 값이 포함된 속성입니다.</param>
      <param name="value">검색할 값입니다.</param>
      <returns>검색 조건과 일치하는 첫 번째 항목이거나, 일치하는 항목이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.MultipleViewPattern">
      <summary>같은 정보 집합이나 자식 컨트롤을 여러 방식으로 표현하고 각 표현 사이에서 전환할 수 있는 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPattern.CurrentViewProperty">
      <summary>
        <see cref="P:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.CurrentView" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.MultipleViewPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPattern.SupportedViewsProperty">
      <summary>뷰의 컨트롤 관련 컬렉션을 가져오는 속성을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.MultipleViewPattern.GetViewName(System.Int32)">
      <summary>컨트롤별 뷰 이름을 검색합니다.</summary>
      <param name="viewId">컨트롤별 뷰 식별자입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" />가 지원되는 뷰 컬렉션의 멤버가 아닌 경우.</exception>
      <returns>컨트롤별 뷰 이름을 나타내는 지역화된 문자열입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.MultipleViewPattern.SetCurrentView(System.Int32)">
      <summary>현재 컨트롤별 뷰를 설정합니다.</summary>
      <param name="viewId">컨트롤별 뷰 식별자입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" />가 지원되는 뷰 컬렉션의 멤버가 아닌 경우.</exception>
    </member>
    <member name="P:System.Windows.Automation.MultipleViewPattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.MultipleViewPattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>컨트롤 패턴에 대해 캐시된 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.MultipleViewPattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.MultipleViewPattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
      <returns>컨트롤 패턴에 대한 현재 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.MultipleViewPattern" /> 또는 <see cref="P:System.Windows.Automation.MultipleViewPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.MultipleViewPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.GetSupportedViews">
      <summary>컨트롤별 보기 식별자의 컬렉션을 검색합니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" />에서 사용할 수 있는 뷰를 식별하는 정수 값의 컬렉션입니다. 기본값은 빈 정수 배열입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.MultipleViewPattern.MultipleViewPatternInformation.CurrentView">
      <summary>현재 컨트롤별 뷰를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" />의 현재 뷰에 대한 정수 값입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.NotCondition">
      <summary>지정된 <see cref="T:System.Windows.Automation.Condition" />의 부정인 <see cref="T:System.Windows.Automation.Condition" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.NotCondition.#ctor(System.Windows.Automation.Condition)">
      <summary>
        <see cref="T:System.Windows.Automation.NotCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="condition">부정을 구할 조건입니다.</param>
    </member>
    <member name="P:System.Windows.Automation.NotCondition.Condition">
      <summary>이 <see cref="T:System.Windows.Automation.Condition" />에서 부정하는 <see cref="T:System.Windows.Automation.NotCondition" />을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Windows.Automation.Condition" />에서 부정하는 <see cref="T:System.Windows.Automation.NotCondition" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.OrCondition">
      <summary>둘 이상의 조건을 결합할 때 여러 조건 중 하나만 true여도 일치하는 것으로 판정하는 경우를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.OrCondition.#ctor(System.Windows.Automation.Condition[])">
      <summary>
        <see cref="T:System.Windows.Automation.OrCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="conditions">둘 이상의 조건으로, 이 중 하나만 true여도 일치로 판정합니다.</param>
    </member>
    <member name="M:System.Windows.Automation.OrCondition.GetConditions">
      <summary>이 조건에 결합된 여러 조건을 검색합니다.</summary>
      <returns>이 조건에 결합된 여러 조건입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.PropertyCondition">
      <summary>속성에 지정된 값이 있는지 여부를 테스트하는 <see cref="T:System.Windows.Automation.Condition" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.PropertyCondition.#ctor(System.Windows.Automation.AutomationProperty,System.Object)">
      <summary>
        <see cref="T:System.Windows.Automation.PropertyCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="property">테스트할 속성입니다.</param>
      <param name="value">속성과 비교하여 테스트할 값입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.PropertyCondition.#ctor(System.Windows.Automation.AutomationProperty,System.Object,System.Windows.Automation.PropertyConditionFlags)">
      <summary>플래그를 사용하여 <see cref="T:System.Windows.Automation.PropertyCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="property">테스트할 속성입니다.</param>
      <param name="value">속성과 비교하여 테스트할 값입니다.</param>
      <param name="flags">비교에 영향을 주는 플래그입니다.</param>
    </member>
    <member name="P:System.Windows.Automation.PropertyCondition.Flags">
      <summary>속성 값을 테스트하는 데 사용되는 플래그를 가져옵니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.PropertyCondition.Property">
      <summary>이 조건에서 테스트하는 속성을 가져옵니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.PropertyCondition.Value">
      <summary>이 조건에서 테스트하는 속성 값을 가져옵니다.</summary>
    </member>
    <member name="T:System.Windows.Automation.PropertyConditionFlags">
      <summary>
        <see cref="T:System.Windows.Automation.PropertyCondition" />에서 속성 값이 테스트되는 방식을 지정하는 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.PropertyConditionFlags.IgnoreCase">
      <summary>대/소문자를 구분하지 않고 문자열 속성 값을 비교하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.PropertyConditionFlags.None">
      <summary>기본 동작(대/소문자를 구분하며 문자열 비교)을 사용하여 속성 값을 테스트하도록 지정합니다.</summary>
    </member>
    <member name="T:System.Windows.Automation.RangeValuePattern">
      <summary>범위 내의 값으로 설정할 수 있는 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.IsReadOnly" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.LargeChangeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.MaximumProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.MinimumProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.RangeValuePattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.SmallChangeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePattern.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" /> 속성을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.RangeValuePattern.SetValue(System.Double)">
      <summary>UI 자동화 요소와 연결된 값을 설정합니다.</summary>
      <param name="value">요소의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />가 요소의 최소값보다 작거나 최대값보다 큽니다.</exception>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.RangeValuePattern" />에 대해 캐시된 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>캐시된 속성 값입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.RangeValuePattern" />에 대한 현재 속성 값을 가져옵니다.</summary>
      <returns>현재 속성 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.RangeValuePattern" /> 또는 <see cref="P:System.Windows.Automation.TransformPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.TransformPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.IsReadOnly">
      <summary>UI 자동화 요소의 값이 읽기 전용인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>값이 읽기 전용이면 <see langword="true" />이고, 값을 수정할 수 있으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> 속성에 추가되거나 이 속성에서 뺀 컨트롤별 큰 변경 값을 가져옵니다.</summary>
      <returns>큰 변경 값 또는 요소가 <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" />를 지원하지 않는 경우 <see langword="null" />입니다. 기본값은 0.0입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum">
      <summary>UI 자동화 요소에서 지원하는 최대 범위 값을 가져옵니다.</summary>
      <returns>지 원하는 최대 값을 UI 자동화 요소 또는 <see langword="null" /> 요소를 지원 하지 않는 경우 <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" />합니다. 기본값은 0.0입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum">
      <summary>UI 자동화 요소에서 지원하는 최소 범위 값을 가져옵니다.</summary>
      <returns>지 원하는 최소 값을 UI 자동화 요소 또는 <see langword="null" /> 요소를 지원 하지 않는 경우 <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" />합니다. 기본값은 0.0입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange">
      <summary>요소 <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" /> 속성에 더하거나 이 속성에서 뺀 UI 자동화 요소 고유의 작은 변경 값을 가져옵니다.</summary>
      <returns>에 고유한 작은 변경 값을 UI 자동화 요소 또는 <see langword="null" /> 요소를 지원 하지 않는 경우 <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" />합니다. 기본값은 0.0입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value">
      <summary>UI 자동화 요소의 현재 값을 가져옵니다.</summary>
      <returns>현재 값을 UI 자동화 요소 또는 <see langword="null" /> 요소를 지원 하지 않는 경우 <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" />합니다. 기본값은 0.0입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.ScrollItemPattern">
      <summary>
        <see cref="T:System.Windows.Automation.ScrollPattern" /> 컨트롤 패턴을 지원하는 컨테이너의 자식 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollItemPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.ScrollItemPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.ScrollItemPattern.ScrollIntoView">
      <summary>컨테이너의 표시 영역(뷰포트) 내에 <see cref="T:System.Windows.Automation.AutomationElement" />를 표시하기 위해 컨테이너 개체의 콘텐츠 영역을 스크롤합니다.</summary>
      <exception cref="T:System.InvalidOperationException">항목을 스크롤하여 표시할 수 없는 경우</exception>
    </member>
    <member name="T:System.Windows.Automation.ScrollPattern">
      <summary>자식 요소 컬렉션에 대해 스크롤 가능한 컨테이너 역할을 하는 컨트롤을 나타냅니다. 이 요소의 자식은 <see cref="T:System.Windows.Automation.ScrollItemPattern" />을 지원합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.HorizontallyScrollableProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontallyScrollable" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.HorizontalScrollPercentProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalScrollPercent" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.HorizontalViewSizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalViewSize" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.NoScroll">
      <summary>스크롤이 수행되지 않도록 지정합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.ScrollPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.VerticallyScrollableProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticallyScrollable" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.VerticalScrollPercentProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalScrollPercent" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPattern.VerticalViewSizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalViewSize" /> 속성을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>콘텐츠 영역의 표시 영역을 가로 및 세로로 스크롤합니다.</summary>
      <param name="horizontalAmount">컨트롤의 가로 증가값입니다. 컨트롤을 이 방향으로 스크롤할 수 없는 경우<see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> 을 전달해야 합니다.</param>
      <param name="verticalAmount">컨트롤의 세로 증가값입니다. 컨트롤을 이 방향으로 스크롤할 수 없는 경우<see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> 을 전달해야 합니다.</param>
      <exception cref="T:System.ArgumentException">컨트롤이 가로 또는 세로 스크롤에 대해서만 <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> 값만 지원하지만 <see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" /> 값이 전달되는 경우입니다.</exception>
      <exception cref="T:System.InvalidOperationException">지원되지 않는 방향으로 스크롤이 시도되었습니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.ScrollHorizontal(System.Windows.Automation.ScrollAmount)">
      <summary>지정된 <see cref="T:System.Windows.Automation.ScrollAmount" />, 즉 콘텐츠 영역의 현재 표시 영역을 가로로 스크롤합니다.</summary>
      <param name="amount">컨트롤의 가로 <see cref="T:System.Windows.Automation.ScrollAmount" /> 증가값입니다.</param>
      <exception cref="T:System.ArgumentException">컨트롤이 가로 또는 세로 스크롤에 대해서만 <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> 값을 지원하지만 <see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" /> 값이 전달되는 경우입니다.</exception>
      <exception cref="T:System.InvalidOperationException">지원되지 않는 방향으로 스크롤이 시도되었습니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.ScrollVertical(System.Windows.Automation.ScrollAmount)">
      <summary>지정된 <see cref="T:System.Windows.Automation.ScrollAmount" />, 즉 콘텐츠 영역의 현재 표시 영역을 세로로 스크롤합니다.</summary>
      <param name="amount">컨트롤의 세로 <see cref="T:System.Windows.Automation.ScrollAmount" /> 증가값입니다.</param>
      <exception cref="T:System.ArgumentException">컨트롤이 가로 또는 세로 스크롤에 대해서만 <see cref="F:System.Windows.Automation.ScrollAmount.SmallIncrement" /> 값을 지원하지만 <see cref="F:System.Windows.Automation.ScrollAmount.LargeIncrement" /> 값이 전달되는 경우입니다.</exception>
      <exception cref="T:System.InvalidOperationException">지원되지 않는 방향으로 스크롤이 시도되었습니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.ScrollPattern.SetScrollPercent(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" /> 내의 가로 및/또는 세로 스크롤 위치를 전체 콘텐츠 영역의 백분율로 설정합니다.</summary>
      <param name="horizontalPercent">전체 가로 콘텐츠 영역의 백분율입니다. 컨트롤을 이 방향으로 스크롤할 수 없는 경우<see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> 을 전달해야 합니다.</param>
      <param name="verticalPercent">전체 세로 콘텐츠 영역의 백분율입니다. 컨트롤을 이 방향으로 스크롤할 수 없는 경우<see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" /> 을 전달해야 합니다.</param>
      <exception cref="T:System.ArgumentException">double로 변환할 수 없는 값인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">100보다 크거나 0보다 작은 값이 전달되는 경우입니다.(<see cref="F:System.Windows.Automation.ScrollPattern.NoScroll" />에 해당하는 -1 제외) <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalScrollPercent" /> 및 <see cref="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalScrollPercent" /> 값은 0% 또는 100%로 정규화됩니다.</exception>
      <exception cref="T:System.InvalidOperationException">지원되지 않는 방향으로 스크롤이 시도되었습니다.</exception>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.ScrollPattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>컨트롤 패턴에 대해 캐시된 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.ScrollPattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
      <returns>컨트롤 패턴에 대한 현재 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.ScrollPattern.ScrollPatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.ScrollPattern" /> 또는 <see cref="P:System.Windows.Automation.ScrollPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.ScrollPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontallyScrollable">
      <summary>UI 자동화 요소가 가로로 스크롤될 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>UI 자동화 요소를 가로로 스크롤할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalScrollPercent">
      <summary>현재 가로 스크롤 위치를 가져옵니다.</summary>
      <returns>UI 자동화 요소 내에서 전체 콘텐츠 영역의 백분율로서의 가로 스크롤 위치입니다. 기본값은 0.0입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.HorizontalViewSize">
      <summary>현재 가로 뷰 크기를 가져옵니다.</summary>
      <returns>UI 자동화 요소 내에서 표시 가능 영역의 가로 크기로, 전체 콘텐츠 영역의 백분율로 표시됩니다. 기본값은 100.0입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticallyScrollable">
      <summary>UI 자동화 요소를 세로로 스크롤할 수 있는지 여부를 나타내는 값을 검색합니다.</summary>
      <returns>UI 자동화 요소를 가로로 스크롤할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalScrollPercent">
      <summary>현재 세로 스크롤 위치를 가져옵니다.</summary>
      <returns>UI 자동화 요소 내에서 전체 콘텐츠 영역의 백분율로서의 세로 스크롤 위치입니다. 기본값은 0.0입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ScrollPattern.ScrollPatternInformation.VerticalViewSize">
      <summary>현재 세로 뷰 크기를 가져옵니다.</summary>
      <returns>UI 자동화 요소 내에서 표시 가능 영역의 세로 크기로, 전체 콘텐츠 영역의 백분율로 표시됩니다. 기본값은 100.0입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionItemPattern">
      <summary>
        <see cref="T:System.Windows.Automation.SelectionPattern" />을 지원하는 컨테이너 컨트롤의 선택 가능한 자식 항목을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.ElementAddedToSelectionEvent">
      <summary>선택한 항목의 컬렉션에 항목이 추가될 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.ElementRemovedFromSelectionEvent">
      <summary>선택한 항목의 컬렉션에서 항목이 제거될 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.ElementSelectedEvent">
      <summary>
        <see cref="M:System.Windows.Automation.SelectionItemPattern.Select" />, <see cref="M:System.Windows.Automation.SelectionItemPattern.AddToSelection" /> 또는 <see cref="M:System.Windows.Automation.SelectionItemPattern.RemoveFromSelection" /> 중 하나를 호출할 때 단일 항목이 선택되는 경우 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.IsSelected" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.SelectionItemPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPattern.SelectionContainerProperty">
      <summary>
        <see cref="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.SelectionContainer" /> 속성을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.SelectionItemPattern.AddToSelection">
      <summary>선택한 항목 컬렉션에 현재 요소를 추가합니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="F:System.Windows.Automation.SelectionPattern.CanSelectMultipleProperty" /> = <see langword="false" /> 및 다른 요소가 이미 선택되어 있을 때 단일 선택 컨테이너에 선택 항목을 추가하려고 합니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.SelectionItemPattern.RemoveFromSelection">
      <summary>선택한 항목 컬렉션에서 현재 요소를 제거합니다.</summary>
      <exception cref="T:System.InvalidOperationException">항목 하나가 선택되어 있고 <see cref="F:System.Windows.Automation.SelectionPattern.IsSelectionRequiredProperty" /> = <see langword="true" />일 때 선택 컨테이너에서 선택 항목을 제거하려고 합니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.SelectionItemPattern.Select">
      <summary>선택한 항목을 선택 취소한 다음 현재 요소를 선택합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.SelectionItemPattern" />에 대해 캐시된 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>캐시된 속성 값입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.SelectionItemPattern" />에 대한 현재 속성 값을 가져옵니다.</summary>
      <returns>현재 속성 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.SelectionItemPattern" /> 또는 <see cref="P:System.Windows.Automation.SelectionItemPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.SelectionItemPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.IsSelected">
      <summary>항목이 선택되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>해당 항목이 선택되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionItemPattern.SelectionItemPatternInformation.SelectionContainer">
      <summary>
        <see cref="T:System.Windows.Automation.SelectionPattern" /> 컨트롤 패턴을 지원하고 호출하는 개체에 대한 컨테이너 역할을 하는 <see cref="T:System.Windows.Automation.AutomationElement" />를 가져옵니다.</summary>
      <returns>컨테이너 개체입니다. 기본값은 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionPattern">
      <summary>선택 가능한 자식 항목의 컬렉션에 대한 컨테이너 역할을 하는 컨트롤을 나타냅니다. 이 요소의 자식은 <see cref="T:System.Windows.Automation.SelectionItemPattern" />을 지원합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.CanSelectMultipleProperty">
      <summary>
        <see cref="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.InvalidatedEvent">
      <summary>컨테이너의 선택 항목이 현저히 변경되어 <see cref="F:System.Windows.Automation.Provider.AutomationInteropProvider.InvalidateLimit" /> 상수가 허용하는 것보다 더 많은 추가 및 제거 이벤트를 보내야 할 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.IsSelectionRequiredProperty">
      <summary>
        <see cref="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.SelectionPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPattern.SelectionProperty">
      <summary>컨테이너에서 선택한 항목을 가져오는 속성을 식별합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.SelectionPattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>컨트롤 패턴에 대해 캐시된 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.SelectionPattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
      <returns>컨트롤 패턴에 대한 현재 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionPattern.SelectionPatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.SelectionPattern" /> 또는 <see cref="P:System.Windows.Automation.SelectionPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.SelectionPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.GetSelection">
      <summary>선택 컨테이너에서 선택된 모든 항목을 검색합니다.</summary>
      <returns>선택된 항목의 컬렉션입니다. 기본값은 빈 배열입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple">
      <summary>컨테이너에서 둘 이상의 자식 요소를 동시에 선택할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>컨트롤에서 다중 선택을 지원하면 <see langword="true" /> 이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired">
      <summary>컨테이너 하나 이상의 자식 항목을 선택해야 하는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>컨트롤에서 하나 이상의 항목을 선택해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.SynchronizedInputPattern">
      <summary>동기화된 입력 이벤트를 지원하는 개체를 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent">
      <summary>WPF에서 입력을 취소할 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent">
      <summary>현재 입력 수신 대기 중인 요소가 아닌 다른 요소에서 입력이 수신될 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent">
      <summary>현재 입력 수신 대기 중인 요소에서 입력이 수신될 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.SynchronizedInputPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.SynchronizedInputPattern.Cancel">
      <summary>입력 수신 대기를 중지합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.SynchronizedInputPattern.StartListening(System.Windows.Automation.SynchronizedInputType)">
      <summary>공급자가 지정된 형식의 입력에 대한 수신 대기를 시작하도록 지정합니다.</summary>
      <param name="inputType">수신 대기할 입력의 형식입니다.</param>
    </member>
    <member name="T:System.Windows.Automation.TableItemPattern">
      <summary>
        <see cref="T:System.Windows.Automation.TablePattern" />을 지원하는 컨테이너의 자식 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TableItemPattern.ColumnHeaderItemsProperty">
      <summary>테이블 항목 또는 셀과 연결된 모든 열 머리글을 검색하는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TableItemPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.TableItemPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TableItemPattern.RowHeaderItemsProperty">
      <summary>테이블 항목 또는 셀과 연결된 모든 행 머리글을 검색하는 속성을 식별합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.TableItemPattern" />에 대해 캐시된 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>캐시된 속성 값입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.TableItemPattern" />에 대한 현재 속성 값을 가져옵니다.</summary>
      <returns>현재 속성 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.TableItemPattern.TableItemPatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.TableItemPattern" /> 또는 <see cref="P:System.Windows.Automation.TableItemPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.TableItemPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.GetColumnHeaderItems">
      <summary>테이블 항목이나 셀에 연결된 모든 열 머리글을 검색합니다.</summary>
      <returns>열 머리글 요소의 컬렉션입니다. 기본값은 빈 배열입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.GetRowHeaderItems">
      <summary>테이블 항목이나 셀에 연결된 모든 행 머리글을 검색합니다.</summary>
      <returns>행 머리글 요소의 컬렉션입니다. 기본값은 빈 배열입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.Column">
      <summary>테이블 셀 또는 항목을 포함하는 열의 서수를 가져옵니다.</summary>
      <returns>테이블 셀 또는 항목을 포함하는 열을 나타내는 서수(0부터 시작)입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.ColumnSpan">
      <summary>테이블 셀 또는 항목의 범위에 포함되는 열 수를 가져옵니다.</summary>
      <returns>범위에 포함되는 열 수입니다. 기본값은 1입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.ContainingGrid">
      <summary>GridPattern 컨트롤 패턴을 지원하고 테이블 셀 또는 항목 컨테이너를 나타내는 UI 자동화 요소를 가져옵니다.</summary>
      <returns>GridPattern 컨트롤 패턴을 지원하고 테이블 셀 또는 항목 컨테이너를 나타내는 UI 자동화 요소입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.Row">
      <summary>테이블 셀 또는 항목을 포함하는 행의 서수를 가져옵니다.</summary>
      <returns>테이블 셀 또는 항목을 포함하는 열을 나타내는 서수(0부터 시작)입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TableItemPattern.TableItemPatternInformation.RowSpan">
      <summary>테이블 셀 또는 항목의 범위에 포함되는 행 수를 가져옵니다.</summary>
      <returns>범위에 포함되는 열 수입니다. 기본값은 1입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.TablePattern">
      <summary>자식 요소 컬렉션에 대한 컨테이너 역할을 하는 컨트롤을 나타냅니다. 이 요소의 자식은 <see cref="T:System.Windows.Automation.TableItemPattern" />을 지원하고 행과 열로 트래버스할 수 있는 2차원 논리적 좌표계로 구성됩니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.ColumnHeadersProperty">
      <summary>테이블의 열 머리글 컬렉션을 가져오는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.TablePattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.RowHeadersProperty">
      <summary>테이블의 행 머리글 컬렉션을 가져오는 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePattern.RowOrColumnMajorProperty">
      <summary>
        <see cref="P:System.Windows.Automation.TablePattern.TablePatternInformation.RowOrColumnMajor" /> 속성을 식별합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.TablePattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>컨트롤 패턴에 대해 캐시된 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.TablePattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
    </member>
    <member name="T:System.Windows.Automation.TablePattern.TablePatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.TablePattern" /> 또는 <see cref="P:System.Windows.Automation.TablePattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.TablePattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.TablePattern.TablePatternInformation.GetColumnHeaders">
      <summary>테이블의 모든 열 머리글을 나타내는 <see cref="T:System.Windows.Automation.AutomationElement" /> 컬렉션을 검색합니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" />의 컬렉션입니다. 기본값은 빈 배열입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TablePattern.TablePatternInformation.GetRowHeaders">
      <summary>테이블의 모든 행 머리글을 나타내는 <see cref="T:System.Windows.Automation.AutomationElement" /> 컬렉션을 검색합니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" />의 컬렉션입니다. 기본값은 빈 배열입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.TablePatternInformation.ColumnCount">
      <summary>테이블에 있는 열의 총 개수를 가져옵니다.</summary>
      <returns>테이블에 있는 열의 총 개수입니다. 기본값은 영입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.TablePatternInformation.RowCount">
      <summary>테이블에 있는 행의 총 개수를 가져옵니다.</summary>
      <returns>테이블에 있는 행의 총 개수입니다. 기본값은 영입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TablePattern.TablePatternInformation.RowOrColumnMajor">
      <summary>테이블의 기본 탐색 방향(<see cref="F:System.Windows.Automation.RowOrColumnMajor.ColumnMajor" />, <see cref="F:System.Windows.Automation.RowOrColumnMajor.RowMajor" />, <see cref="F:System.Windows.Automation.RowOrColumnMajor.Indeterminate" />)을 검색합니다.</summary>
      <returns>기본 탐색 방향입니다. 기본값은 <see cref="F:System.Windows.Automation.RowOrColumnMajor.Indeterminate" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.Text.TextPatternRange">
      <summary>
        <see cref="T:System.Windows.Automation.TextPattern" /> 컨테이너에서 연속된 텍스트의 범위를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.AddToSelection">
      <summary>서로 분리된 여러 선택 영역을 지원하는 텍스트 컨테이너의 강조 표시된 텍스트 컬렉션에 추가합니다.</summary>
      <exception cref="T:System.InvalidOperationException">텍스트 공급자에서 서로 분리된 여러 선택 영역을 지원하지 않는 경우. 예를 들어 <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" />의 값이 <see langword="Multiple" />이어야 합니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Clone">
      <summary>원래 <see cref="T:System.Windows.Automation.Text.TextPatternRange" />와 동일하고 원본의 모든 속성을 상속하는 새 <see cref="T:System.Windows.Automation.Text.TextPatternRange" />를 검색합니다.</summary>
      <returns>새 텍스트 범위입니다. null 참조(Visual Basic의 경우 <see langword="Nothing" />)는 반환되지 않습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Compare(System.Windows.Automation.Text.TextPatternRange)">
      <summary>텍스트의 범위(<see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 엔드포인트에서 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 엔드포인트까지)가 다른 텍스트 범위와 동일한지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 반환합니다.</summary>
      <param name="range">비교할 텍스트 범위입니다.</param>
      <exception cref="T:System.ArgumentException">비교하는 범위를 같은 텍스트 공급자에서 가져오지 않은 경우</exception>
      <returns>두 텍스트 범위가 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>두 텍스트 범위의 엔드포인트가 동일한지 여부를 나타내는 <see cref="T:System.Int32" />를 반환합니다.</summary>
      <param name="endpoint">호출자의 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 또는 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 엔드포인트입니다.</param>
      <param name="targetRange">비교할 대상 범위입니다.</param>
      <param name="targetEndpoint">대상의 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 또는 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 엔드포인트입니다.</param>
      <exception cref="T:System.ArgumentNullException">범위가 null 참조(Visual Basic에서는 <see langword="Nothing" />)인 경우</exception>
      <exception cref="T:System.ArgumentException">범위를 다른 컨테이너에서 가져온 경우</exception>
      <returns>텍스트에서 호출자의 엔드포인트이 대상 엔드포인트보다 먼저 나타나면 음수 값을 반환합니다.  
  
 호출자의 엔드포인트이 대상 엔드포인트과 같은 위치에 있으면 0을 반환합니다.  
  
 텍스트에서 호출자의 엔드포인트이 대상 엔드포인트보다 나중에 나타나면 양수 값을 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
      <summary>텍스트 범위를 지정된 <see cref="T:System.Windows.Automation.Text.TextUnit" />으로 확장합니다.</summary>
      <param name="unit">텍스트 단위입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.FindAttribute(System.Windows.Automation.AutomationTextAttribute,System.Object,System.Boolean)">
      <summary>지정된 특성 값을 갖는 텍스트 범위 하위 집합을 반환합니다.</summary>
      <param name="attribute">검색할 특성입니다.</param>
      <param name="value">검색할 특성 값입니다. 이 값은 특성에 지정된 형식과 일치해야 합니다.</param>
      <param name="backward">마지막으로 나타나는 텍스트 범위를 반환해야 하면 <see langword="true" />이고, 처음으로 나타나는 텍스트 범위를 반환해야 하면 <see langword="false" />입니다.</param>
      <returns>특성 및 특성 값이 일치하는 텍스트 범위이거나, 이러한 범위가 없으면 null(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.FindText(System.String,System.Boolean,System.Boolean)">
      <summary>지정된 텍스트를 포함하는 텍스트 범위 하위 집합을 반환합니다.</summary>
      <param name="text">검색할 텍스트 문자열입니다.</param>
      <param name="backward">마지막으로 나타나는 텍스트 범위를 반환해야 하면 <see langword="true" />이고, 처음으로 나타나는 텍스트 범위를 반환해야 하면 <see langword="false" />입니다.</param>
      <param name="ignoreCase">대/소문자를 구분하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>지정된 텍스트와 일치하는 텍스트 범위이거나, 이러한 범위가 없으면 null(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetAttributeValue(System.Windows.Automation.AutomationTextAttribute)">
      <summary>전체 텍스트 범위에서 지정된 특성 값을 반환합니다.</summary>
      <param name="attribute">텍스트 특성입니다.</param>
      <exception cref="T:System.ArgumentException">지정된 특성이 유효하지 않은 경우</exception>
      <returns>지정된 특성의 값을 반환합니다. 예를 들어 GetAttributeValue(TextPattern.FontNameAttribute)는 텍스트 범위에 글꼴이 하나만 사용되는 경우 해당 글꼴 이름을 나타내는 문자열을 반환하는 반면 GetAttributeValue(TextPattern.IsItalicAttribute)는 부울 값을 반환합니다.  
  
지정된 특성의 값이 텍스트 범위에서 일정하지 않게 변화하면 <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" />를 반환합니다.  
  
지정된 특성을 공급자 또는 컨트롤에서 지원하지 않으면 <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles">
      <summary>텍스트 범위에서 완전히 표시되거나 부분적으로 표시되는 각 텍스트 줄의 경계 사각형 컬렉션을 검색합니다.</summary>
      <returns>텍스트 범위에서 완전히 표시되거나 부분적으로 표시되는 각 텍스트 줄의 경계 사각형 배열입니다.  
  
 디제너레이트 텍스트 범위의 경우 빈 배열이 반환됩니다.  
  
 텍스트 범위의 화면 좌표가 화면에서 완전히 벗어나거나, 스크롤되어 표시되지 않거나, 겹치는 창으로 가려진 경우 빈 배열이 반환됩니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetChildren">
      <summary>텍스트 범위 안에 있는 모든 포함된 개체의 컬렉션을 검색합니다.</summary>
      <returns>범위에 속하는 모든 자식 개체의 컬렉션입니다. 범위와 겹치지만 완전히 포함되지 않는 자식 개체도 컬렉션에 포함됩니다.  
  
 자식 개체가 없으면 빈 컬렉션을 반환합니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement">
      <summary>텍스트 범위를 포함하는 가장 안쪽의 <see cref="T:System.Windows.Automation.AutomationElement" />를 반환합니다.</summary>
      <returns>호출자를 포함하는 가장 안쪽의 요소입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.GetText(System.Int32)">
      <summary>텍스트 범위의 일반 텍스트를 반환합니다.</summary>
      <param name="maxLength">반환할 문자열의 최대 길이입니다. 제한할 필요가 없으면 <c>-1</c>을 사용합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxLength" />가 -1보다 작은 경우입니다.</exception>
      <returns>텍스트 범위의 일반 문자열이며, 지정된 <paramref name="maxLength" />로 잘릴 수 있습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>지정된 텍스트 단위 수만큼 텍스트 범위를 이동합니다.</summary>
      <param name="unit">텍스트 단위 경계입니다.</param>
      <param name="count">이동할 텍스트 단위 수입니다. 양수 값을 사용하면 텍스트 범위가 앞으로 이동하고, 음수 값을 사용하면 텍스트 범위가 뒤로 이동하며, 0은 효과가 없습니다.</param>
      <returns>실제로 이동한 단위 수입니다. 이 수는 새 텍스트 범위의 엔드포인트 중 하나가 <see cref="P:System.Windows.Automation.TextPattern.DocumentRange" /> 엔드포인트보다 크거나 작으면 요청된 수보다 작을 수 있습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextPatternRange,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>텍스트 범위의 한 엔드포인트를 두 번째 텍스트 범위의 지정된 엔드포인트로 이동합니다.</summary>
      <param name="endpoint">이동할 엔드포인트입니다.</param>
      <param name="targetRange">같은 텍스트 공급자의 다른 범위입니다.</param>
      <param name="targetEndpoint">다른 범위의 엔드포인트입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>텍스트 범위의 한 엔드포인트을 문서 범위 내에서 지정된 <see cref="T:System.Windows.Automation.Text.TextUnit" />수만큼 이동합니다.</summary>
      <param name="endpoint">이동할 엔드포인트입니다.</param>
      <param name="unit">이동할 텍스트 단위입니다.</param>
      <param name="count">이동할 단위 수입니다. 양수를 사용하면 엔드포인트가 앞으로 이동합니다. 음수를 사용하면 뒤로 이동합니다. 0은 효과가 없습니다.</param>
      <returns>실제로 이동한 단위 수이며, 엔드포인트을 이동하면서 문서의 시작이나 끝과 만나게 되면 요청된 수보다 작을 수 있습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection">
      <summary>서로 분리된 여러 선택 영역을 지원하는 텍스트 컨테이너의 강조 표시된 텍스트가 들어 있는 기존 컬렉션에서 호출하는 텍스트 범위의 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 및 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 엔드포인트에 해당하는 강조 표시된 텍스트 섹션을 제거합니다.</summary>
      <exception cref="T:System.InvalidOperationException">텍스트 공급자에서 서로 분리된 여러 선택 영역을 지원하지 않는 경우. 예를 들어 <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" />의 값이 <see langword="Multiple" />이어야 합니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.ScrollIntoView(System.Boolean)">
      <summary>뷰포트에 텍스트 범위가 보일 때까지 텍스트 컨트롤을 세로로 스크롤합니다.</summary>
      <param name="alignToTop">텍스트 범위를 스크롤하여 뷰포트 맨 위에 맞추려면 <see langword="true" />이고, 뷰포트 맨 아래에 맞추려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">스크롤을 컨트롤에서 지원하지 않는 경우입니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.Text.TextPatternRange.Select">
      <summary>텍스트 컨트롤에서 텍스트 범위의 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 및 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 엔드포인트에 해당하는 텍스트를 강조 표시합니다.</summary>
      <exception cref="T:System.InvalidOperationException">텍스트 선택을 텍스트 컨트롤에서 지원하지 않을 때 발생합니다.</exception>
    </member>
    <member name="P:System.Windows.Automation.Text.TextPatternRange.TextPattern">
      <summary>텍스트 범위에 연결된 <see cref="T:System.Windows.Automation.TextPattern" />을 가져옵니다.</summary>
      <returns>텍스트 공급자입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.TextPattern">
      <summary>텍스트가 들어 있는 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.AnimationStyleAttribute">
      <summary>텍스트 범위의 <see cref="T:System.Windows.Automation.Text.AnimationStyle" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.BackgroundColorAttribute">
      <summary>텍스트 범위의 BackgroundColor 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.BulletStyleAttribute">
      <summary>텍스트 범위의 <see cref="T:System.Windows.Automation.Text.BulletStyle" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.CapStyleAttribute">
      <summary>텍스트 범위의 <see cref="T:System.Windows.Automation.Text.CapStyle" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.CultureAttribute">
      <summary>텍스트 범위의 <see langword="Culture" />(<see cref="T:System.Globalization.CultureInfo" />) 특성을 하위 언어 수준까지 식별합니다(예: fr(프랑스어) 대신 fr-CH(프랑스어-스위스)).</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.FontNameAttribute">
      <summary>텍스트 범위의 <see langword="FontName" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.FontSizeAttribute">
      <summary>텍스트 범위의 <see langword="FontSize" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.FontWeightAttribute">
      <summary>텍스트 범위의 <see langword="FontWeight" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.ForegroundColorAttribute">
      <summary>텍스트 범위의 <see langword="ForegroundColor" />(COLORREF) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.HorizontalTextAlignmentAttribute">
      <summary>텍스트 범위의 <see cref="T:System.Windows.Automation.Text.HorizontalTextAlignment" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IndentationFirstLineAttribute">
      <summary>텍스트 범위의 <see langword="IndentationFirstLine" />(<see cref="P:System.Windows.Documents.Paragraph.TextIndent" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IndentationLeadingAttribute">
      <summary>텍스트 범위의 <see langword="IndentationLeading" />(<see cref="P:System.Windows.Documents.Paragraph.TextIndent" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IndentationTrailingAttribute">
      <summary>텍스트 범위의 <see langword="IndentationTrailing" />(<see cref="P:System.Windows.Documents.Paragraph.TextIndent" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsHiddenAttribute">
      <summary>텍스트 범위의 <see langword="IsHidden" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsItalicAttribute">
      <summary>텍스트 범위의 <see langword="IsItalic" />(<see cref="T:System.Windows.FontStyle" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsReadOnlyAttribute">
      <summary>텍스트 범위의 <see langword="IsReadOnly" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsSubscriptAttribute">
      <summary>텍스트 범위의 <see langword="IsSubscript" />(<see cref="T:System.Windows.FontVariants" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.IsSuperscriptAttribute">
      <summary>텍스트 범위의 <see langword="IsSuperscript" />(<see cref="T:System.Windows.FontVariants" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginBottomAttribute">
      <summary>텍스트 범위의 <see langword="MarginBottom" />(<see cref="T:System.Drawing.Printing.PageSettings" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginLeadingAttribute">
      <summary>텍스트 범위의 <see langword="MarginLeading" />(<see cref="T:System.Drawing.Printing.PageSettings" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginTopAttribute">
      <summary>텍스트 범위의 <see langword="MarginTop" />(<see cref="T:System.Drawing.Printing.PageSettings" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MarginTrailingAttribute">
      <summary>텍스트 범위의 <see langword="MarginTrailing" />(<see cref="T:System.Drawing.Printing.PageSettings" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.MixedAttributeValue">
      <summary>지정된 특성 값이 rich edit 컨트롤의 텍스트 범위에서 일정하지 않게 변화하는지 여부를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.OutlineStylesAttribute">
      <summary>텍스트 범위의 <see langword="OutlineStyles" />(<see cref="T:System.Windows.Automation.Text.OutlineStyles" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.OverlineColorAttribute">
      <summary>텍스트 범위의 <see langword="OverlineColor" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.OverlineStyleAttribute">
      <summary>텍스트 범위의 <see langword="OverlineStyle" />(<see cref="T:System.Windows.Automation.Text.TextDecorationLineStyle" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.TextPattern" /> 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.StrikethroughColorAttribute">
      <summary>텍스트 범위의 <see langword="StrikethroughColor" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.StrikethroughStyleAttribute">
      <summary>텍스트 범위의 <see langword="StrikethroughStyle" />(<see cref="T:System.Windows.Automation.Text.TextDecorationLineStyle" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TabsAttribute">
      <summary>텍스트 범위의 <see langword="Tabs" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TextChangedEvent">
      <summary>텍스트 내용이 수정될 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TextFlowDirectionsAttribute">
      <summary>텍스트 범위의 <see langword="TextFlowDirections" />(<see cref="T:System.Windows.Automation.Text.FlowDirections" />) 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.TextSelectionChangedEvent">
      <summary>텍스트 선택 영역이 수정될 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.UnderlineColorAttribute">
      <summary>텍스트 범위의 <see langword="UnderlineColor" /> 특성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPattern.UnderlineStyleAttribute">
      <summary>텍스트 범위의 <see langword="UnderlineStyle" />(<see cref="T:System.Windows.Automation.Text.TextDecorationLineStyle" />) 특성을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.GetSelection">
      <summary>하나 이상의 현재 텍스트 선택 영역과 관련된 서로 분리된 텍스트 범위의 컬렉션을 검색합니다.</summary>
      <exception cref="T:System.InvalidOperationException">텍스트 컨테이너에서 텍스트 선택을 지원하지 않는 경우</exception>
      <returns>서로 분리된 텍스트 범위의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.GetVisibleRanges">
      <summary>텍스트 컨테이너에서 각 텍스트 범위가 부분적으로 표시되는 첫 번째 줄로 시작되고 부분적으로 표시되는 마지막 줄의 끝까지 이어지는 서로 분리된 텍스트 범위의 배열을 검색합니다.</summary>
      <returns>컨테이너 내의 표시되는 텍스트 범위 컬렉션이거나 빈 배열입니다. <see langword="Null" />은 반환되지 않습니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.RangeFromChild(System.Windows.Automation.AutomationElement)">
      <summary>이미지, 하이퍼링크, Microsoft Excel 스프레드시트 또는 기타 포함된 개체 등의 자식 요소를 둘러싸는 텍스트 범위를 검색합니다.</summary>
      <param name="childElement">둘러싸인 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">자식 요소가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">요소가 텍스트 컨테이너의 자식이 아닌 경우</exception>
      <returns>자식 요소가 모두 포함된 범위입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TextPattern.RangeFromPoint(System.Windows.Point)">
      <summary>지정된 화면 좌표와 가장 가까운 중복 제거 텍스트 범위(빈 범위)를 반환합니다.</summary>
      <param name="screenLocation">화면 좌표 위치입니다.</param>
      <exception cref="T:System.ArgumentException">해당 지점이 텍스트 패턴과 연결된 <see cref="T:System.Windows.Automation.AutomationElement" /> 외부에 있는 경우</exception>
      <returns>지정된 위치와 가장 가까운 중복 제거 범위입니다. <see langword="Null" />은 반환되지 않습니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TextPattern.DocumentRange">
      <summary>문서의 주 텍스트를 둘러싸는 텍스트 범위를 가져옵니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.TextPattern.SupportedTextSelection">
      <summary>텍스트 공급자가 선택을 지원하는지 여부 및 지원되는 선택 유형을 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.SupportedTextSelection" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.TogglePattern">
      <summary>상태 집합을 순환하고 설정된 상태를 유지할 수 있는 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TogglePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.TogglePattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TogglePattern.ToggleStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.TogglePattern.TogglePatternInformation.ToggleState" /> 속성을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.TogglePattern.Toggle">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" />의 상태를 설정/해제합니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.TogglePattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.TogglePattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>컨트롤 패턴에 대해 캐시된 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TogglePattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.TogglePattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
      <returns>컨트롤 패턴에 대한 현재 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.TogglePattern.TogglePatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.TogglePattern" /> 또는 <see cref="P:System.Windows.Automation.TogglePattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.TogglePattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.TogglePattern.TogglePatternInformation.ToggleState">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" />의 전환 상태를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.ToggleState" />의 <see cref="T:System.Windows.Automation.AutomationElement" />입니다. 기본값은 <see cref="F:System.Windows.Automation.ToggleState.Indeterminate" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.TransformPattern">
      <summary>2차원 공간 내에서 이동하거나 크기를 조정하거나 회전할 수 있는 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.CanMoveProperty">
      <summary>
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.CanResizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.CanRotateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.TransformPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)">
      <summary>컨트롤을 이동합니다.</summary>
      <param name="x">컨트롤 왼쪽의 절대 화면 좌표입니다.</param>
      <param name="y">컨트롤 위쪽의 절대 화면 좌표입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /> 속성이 false입니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)">
      <summary>컨트롤의 크기를 조정합니다.</summary>
      <param name="width">창의 새 너비(픽셀)입니다.</param>
      <param name="height">창의 새 높이(픽셀)입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /> 속성이 false입니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)">
      <summary>컨트롤을 회전합니다.</summary>
      <param name="degrees">요소를 회전할 각도입니다. 양수이면 시계 방향으로 회전하고, 음수이면 시계 반대 방향으로 회전합니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /> 속성이 false입니다.</exception>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.TransformPattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>컨트롤 패턴에 대해 캐시된 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.TransformPattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
      <returns>컨트롤 패턴에 대한 현재 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.TransformPattern.TransformPatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.TransformPattern" /> 또는 <see cref="P:System.Windows.Automation.TransformPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.TransformPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove">
      <summary>UI 자동화 요소를 이동할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>요소를 이동할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize">
      <summary>UI 자동화 요소의 크기를 조정할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>요소의 크기를 조정할 수 있으면 <see langword="true" />이고, 조정할 수 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate">
      <summary>UI 자동화 요소를 회전할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>요소를 회전할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.TreeWalker">
      <summary>UI Automation 트리를 탐색하는 데 사용한 메서드 및 속성을 제공합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TreeWalker.ContentViewWalker">
      <summary>트리에서 콘텐츠 컨트롤로 표시된 요소의 뷰가 들어 있는 미리 정의된 <see cref="T:System.Windows.Automation.TreeWalker" />를 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TreeWalker.ControlViewWalker">
      <summary>트리에서 컨트롤로 표시된 요소의 뷰가 들어 있는 미리 정의된 <see cref="T:System.Windows.Automation.TreeWalker" />를 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.TreeWalker.RawViewWalker">
      <summary>트리에 있는 모든 요소의 뷰가 들어 있는 미리 정의된 <see cref="T:System.Windows.Automation.TreeWalker" />를 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.#ctor(System.Windows.Automation.Condition)">
      <summary>
        <see cref="T:System.Windows.Automation.TreeWalker" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="condition">
        <see cref="T:System.Windows.Automation.TreeWalker" />에서 탐색할 UI 자동화 요소 트리의 뷰입니다.</param>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 첫 번째 자식 요소를 검색합니다.</summary>
      <param name="element">첫 번째 자식을 검색할 요소입니다.</param>
      <returns>첫 번째 자식 요소이거나, 이러한 요소가 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 첫 번째 자식 요소를 검색하고 속성 및 패턴을 캐시합니다.</summary>
      <param name="element">첫 번째 자식을 검색할 요소입니다.</param>
      <param name="request">반환된 <see cref="T:System.Windows.Automation.AutomationElement" />에서 캐시할 속성 및 패턴을 지정하는 캐시 요청 개체입니다.</param>
      <returns>첫 번째 자식 요소이거나, 이러한 요소가 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 마지막 자식 요소를 검색합니다.</summary>
      <param name="element">마지막 자식을 검색할 요소입니다.</param>
      <returns>마지막 자식 요소인 <see cref="T:System.Windows.Automation.AutomationElement" />이거나, 이러한 요소가 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 마지막 자식 요소를 검색하고 속성 및 패턴을 캐시합니다.</summary>
      <param name="element">마지막 자식을 검색할 요소입니다.</param>
      <param name="request">반환된 <see cref="T:System.Windows.Automation.AutomationElement" />에서 캐시할 속성 및 패턴을 지정하는 캐시 요청 개체입니다.</param>
      <returns>마지막 자식 요소이거나, 이러한 요소가 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 다음 형제 요소를 검색합니다.</summary>
      <param name="element">다음 형제를 검색할 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
      <returns>다음 형제 요소이거나, 이러한 요소가 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 다음 형제 요소를 검색하고 속성 및 패턴을 캐시합니다.</summary>
      <param name="element">다음 형제를 검색할 요소입니다.</param>
      <param name="request">반환된 <see cref="T:System.Windows.Automation.AutomationElement" />에서 캐시할 속성 및 패턴을 지정하는 캐시 요청 개체입니다.</param>
      <returns>다음 형제 요소이거나, 이러한 요소가 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 부모 요소를 검색합니다.</summary>
      <param name="element">부모를 반환할 요소입니다.</param>
      <returns>부모 요소이거나, 지정된 요소가 트리의 루트 요소이거나 부모 요소가 현재 뷰에 표시되지 않는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 부모 요소를 검색하고 속성 및 패턴을 캐시합니다.</summary>
      <param name="element">부모를 반환할 요소입니다.</param>
      <param name="request">반환된 <see cref="T:System.Windows.Automation.AutomationElement" />에서 캐시할 멤버를 지정하는 캐시 요청 개체입니다.</param>
      <returns>부모 요소이거나, 지정된 요소가 트리의 루트 요소이거나 부모 요소가 이 뷰에 표시되지 않는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 이전 형제를 검색합니다.</summary>
      <param name="element">이전 형제를 검색할 요소입니다.</param>
      <returns>이전 형제 요소이거나, 이러한 요소가 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 이전 형제를 검색하고 속성 및 패턴을 캐시합니다.</summary>
      <param name="element">이전 형제를 검색할 요소입니다.</param>
      <param name="request">반환된 <see cref="T:System.Windows.Automation.AutomationElement" />에서 캐시할 속성 및 패턴을 지정하는 캐시 요청 개체입니다.</param>
      <returns>이전 형제 요소이거나, 이러한 요소가 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement)">
      <summary>노드 자체가 <see cref="P:System.Windows.Automation.TreeWalker.Condition" />에 맞으면 노드 자체를 검색하고, 그렇지 않으면 <see cref="P:System.Windows.Automation.TreeWalker.Condition" />에 맞는 가장 가까운 부모나 상위 노드를 검색합니다.</summary>
      <param name="element">정규화를 시작할 요소입니다.</param>
      <returns>현재 뷰에서 가장 가까운 <see cref="T:System.Windows.Automation.AutomationElement" />입니다. 상위 체인을 거슬러 올라가 루트 요소에 도달하게 되면 루트 요소가 반환됩니다.</returns>
    </member>
    <member name="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)">
      <summary>노드 자체가 <see cref="P:System.Windows.Automation.TreeWalker.Condition" />에 맞으면 노드 자체를, 그렇지 않으면 <see cref="P:System.Windows.Automation.TreeWalker.Condition" />에 맞는 가장 가까운 부모나 상위 노드를 검색한 다음 속성 및 패턴을 캐시합니다.</summary>
      <param name="element">정규화를 시작할 요소입니다.</param>
      <param name="request">반환된 <see cref="T:System.Windows.Automation.AutomationElement" />에서 캐시할 속성 및 패턴을 지정하는 캐시 요청 개체입니다.</param>
      <returns>현재 뷰에서 가장 가까운 <see cref="T:System.Windows.Automation.AutomationElement" />입니다. 상위 체인을 거슬러 올라가 루트 요소에 도달하게 되면 루트 요소가 반환됩니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.TreeWalker.Condition">
      <summary>
        <see cref="T:System.Windows.Automation.TreeWalker" /> 개체의 뷰를 정의하는 개체를 가져옵니다.</summary>
      <returns>뷰를 정의하는 조건입니다. 이는 생성자에 전달된 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.ValuePattern">
      <summary>특정 범위로 확장되지 않고 문자열로 나타낼 수 있는 내장 값을 갖는 컨트롤을 나타냅니다. 이 문자열을 편집할 수 있는지 여부는 해당 컨트롤 및 설정에 따라 다릅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePattern.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.ValuePattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePattern.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.Value" /> 속성을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.ValuePattern.SetValue(System.String)">
      <summary>컨트롤의 값을 설정합니다.</summary>
      <param name="value">설정할 값입니다. UI 자동화 공급자는 적절한 데이터 형식으로 값을 변환합니다.</param>
      <exception cref="T:System.InvalidOperationException">컨트롤은 읽기 전용입니다.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">컨트롤이 사용 설정되지 않았습니다.</exception>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.ValuePattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>캐시된 속성 값입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.ValuePattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
      <returns>현재 속성 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.ValuePattern.ValuePatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.ValuePattern" /> 또는 <see cref="P:System.Windows.Automation.ValuePattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.ValuePattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly">
      <summary>UI 자동화 요소의 값이 읽기 전용인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>값이 읽기 전용이면 <see langword="true" />이고, 값을 수정할 수 있으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.Value">
      <summary>UI 자동화 요소의 값을 가져옵니다.</summary>
      <returns>값은 UI 자동화 문자열로 요소입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.VirtualizedItemPattern">
      <summary>가상화되고 UI 자동화 요소로 완전히 액세스할 수 있도록 만들어야 하는 컨테이너 내부의 항목을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.VirtualizedItemPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.VirtualizedItemPattern.Realize">
      <summary>가상 항목을 UI 자동화 요소로 완전히 액세스할 수 있도록 만듭니다.</summary>
    </member>
    <member name="T:System.Windows.Automation.WindowPattern">
      <summary>기존 GUI(그래픽 사용자 인터페이스) 내에서 기본적인 창 기반 기능을 제공하는 컨트롤을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.CanMaximizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.CanMinimizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.IsModalProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.IsTopmostProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.Pattern">
      <summary>
        <see cref="T:System.Windows.Automation.WindowPattern" /> 컨트롤 패턴을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowClosedEvent">
      <summary>창이 닫힐 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowInteractionStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState" /> 속성을 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowOpenedEvent">
      <summary>창이 열릴 때 발생하는 이벤트를 식별합니다.</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPattern.WindowVisualStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState" /> 속성을 식별합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.WindowPattern.Close">
      <summary>현재 창을 닫으려고 시도합니다.</summary>
      <exception cref="T:System.InvalidOperationException">컨트롤이 요청한 작업을 수행할 수 없습니다.</exception>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">컨트롤을 더 이상 사용할 수 없을 때입니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.WindowPattern.SetWindowVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>창의 <see cref="T:System.Windows.Automation.WindowVisualState" />를 변경합니다.</summary>
      <param name="state">요청된 창 <see cref="T:System.Windows.Automation.WindowVisualState" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">컨트롤이 요청된 동작을 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Windows.Automation.WindowPattern.WaitForInputIdle(System.Int32)">
      <summary>지정된 시간 동안 또는 연결된 프로세스가 유휴 상태가 될 때까지 중 먼저 완료되는 시간 동안 코드 호출을 차단합니다.</summary>
      <param name="milliseconds">연결된 프로세스가 유휴 상태가 될 때까지 대기하는 시간(밀리초)입니다. 최대값은 <see cref="F:System.Int32.MaxValue" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">전달된 매개 변수가 유효한 숫자가 아닙니다.</exception>
      <returns>창이 유휴 상태가 되면 <see langword="true" />이고, 시간 초과가 발생하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.Cached">
      <summary>이 <see cref="T:System.Windows.Automation.WindowPattern" />에 대해 캐시된 UI 자동화 속성 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
      <returns>컨트롤 패턴에 대해 캐시된 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.Current">
      <summary>이 <see cref="T:System.Windows.Automation.WindowPattern" />의 현재 UI 자동화 속성 값을 가져옵니다.</summary>
      <returns>컨트롤 패턴에 대한 현재 UI 자동화 속성 값을 포함하는 구조체입니다.</returns>
    </member>
    <member name="T:System.Windows.Automation.WindowPattern.WindowPatternInformation">
      <summary>해당 <see cref="T:System.Windows.Automation.WindowPattern" /> 또는 <see cref="P:System.Windows.Automation.WindowPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.WindowPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMaximize">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" />가 최대화될 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" />를 최대화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.CanMinimize">
      <summary>현재 <see cref="T:System.Windows.Automation.AutomationElement" />를 최소화할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" />를 최소화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsModal">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" />이 모달인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" />가 모달이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.IsTopmost">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElement" />가 z-순서에서 맨 위에 있는 요소인지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.AutomationElement" />가 맨 위에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowInteractionState">
      <summary>
        <see cref="T:System.Windows.Automation.WindowInteractionState" />의 <see cref="T:System.Windows.Automation.AutomationElement" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.WindowInteractionState" />의 <see cref="T:System.Windows.Automation.AutomationElement" />입니다. 기본값은 <see cref="F:System.Windows.Automation.WindowInteractionState.Running" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Automation.WindowPattern.WindowPatternInformation.WindowVisualState">
      <summary>
        <see cref="T:System.Windows.Automation.WindowVisualState" />의 <see cref="T:System.Windows.Automation.AutomationElement" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.WindowVisualState" />의 <see cref="T:System.Windows.Automation.AutomationElement" />입니다. 기본값은 <see cref="F:System.Windows.Automation.WindowVisualState.Normal" />입니다.</returns>
    </member>
  </members>
</doc>