<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Cng</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <summary>CNG(Cryptography Next Generation) 개체에서 사용할 수 있는 SafeHandle을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor">
      <summary>
        <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)">
      <summary>
        <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> 클래스의 새 인스턴스를 인스턴스화합니다.</summary>
      <param name="handle">사용할 기존 핸들입니다. <see cref="F:System.IntPtr.Zero" />를 사용하면 잘못된 핸들이 반환됩니다.</param>
      <param name="parentHandle">이 <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />의 상위 핸들입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentHandle" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parentHandle" />가 닫혀 있습니다.  
  
또는 
 <paramref name="parentHandle" />이 잘못되었습니다.</exception>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle">
      <summary>CNG(Cryptography Next Generation) 개체에 사용되는 핸들을 해제합니다.</summary>
      <returns>핸들이 성공적으로 해제되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle">
      <summary>CNG(Cryptography Next Generation) 개체에 사용되는 네이티브 핸들을 해제합니다.</summary>
      <returns>핸들이 성공적으로 해제되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid">
      <summary>핸들이 잘못되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>핸들이 잘못되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle">
      <summary>키(NCRYPT_KEY_HANDLE)를 나타내는 SafeHandle을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor">
      <summary>
        <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)">
      <summary>
        <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" /> 클래스의 새 인스턴스를 인스턴스화합니다.</summary>
      <param name="handle">사용할 기존 핸들입니다. <see cref="F:System.IntPtr.Zero" />를 사용하면 잘못된 핸들이 반환됩니다.</param>
      <param name="parentHandle">이 <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />의 상위 핸들입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentHandle" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parentHandle" />가 닫혀 있습니다.  
  
또는 
 <paramref name="parentHandle" />이 잘못되었습니다.</exception>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle">
      <summary>키 스토리지 공급자(NCRYPT_PROV_HANDLE)를 나타내는 SafeHandle을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor">
      <summary>
        <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle">
      <summary>비밀 계약 값을 나타내는 SafeHandle(NCRYPT_SECRET_HANDLE)을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor">
      <summary>
        <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.AesCng">
      <summary>AES(Advanced Encryption Standard) 알고리즘의 CNG(Cryptography Next Generation) 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor">
      <summary>임시 키를 사용하여 <see cref="T:System.Security.Cryptography.AesCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor(System.String)">
      <summary>기존의 영구 AES 키를 나타내는 지정된 키 이름을 사용하여 <see cref="T:System.Security.Cryptography.AesCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyName">키의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)">
      <summary>기존의 영구 AES 키를 나타내는 지정된 키 이름과 지정된 KSP(키 스토리지 공급자)를 사용하여 <see cref="T:System.Security.Cryptography.AesCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyName">키의 이름입니다.</param>
      <param name="provider">키를 포함하는 KSP입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="provider" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>기존의 영구 AES 키를 나타내는 지정된 키 이름, 지정된 KSP(키 스토리지 공급자) 및 키 열기 옵션을 사용하여 <see cref="T:System.Security.Cryptography.AesCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyName">키의 이름입니다.</param>
      <param name="provider">키를 포함하는 KSP입니다.</param>
      <param name="openOptions">키가 열리는 위치(머신 또는 사용자 스토리지) 및 UI 프롬프트를 표시하지 않을지 여부와 같은 키 열기 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="provider" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateDecryptor">
      <summary>현재 키 및 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 AES 암호 해독기 개체를 만듭니다.</summary>
      <returns>대칭 AES 암호 해독기 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키 및 IV(초기화 벡터)를 사용하여 대칭 AES 암호 해독기 개체를 만듭니다.</summary>
      <param name="rgbKey">AES 알고리즘에 사용할 비밀 키입니다. 키 크기는 128, 192 또는 256 비트여야 합니다.</param>
      <param name="rgbIV">AES 알고리즘에 사용할 초기화 벡터입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" />가 이 알고리즘에 유효한 크기가 아닌 경우  
  
또는 
 <paramref name="rgbIV" /> 크기가 이 알고리즘에 대한 블록 크기와 일치하지 않는 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" />가 이 알고리즘의 알려진 weak키이며 사용할 수 없는 경우  
  
또는 
 <paramref name="rgbIV" />이(가) <see langword="null" />인 경우</exception>
      <returns>대칭 AES 암호 해독기 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateEncryptor">
      <summary>현재 키 및 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 AES 암호기 개체를 만듭니다.</summary>
      <returns>대칭 AES 암호기 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키 및 IV(초기화 벡터)를 사용하여 대칭 AES 암호기 개체를 만듭니다.</summary>
      <param name="rgbKey">AES 알고리즘에 사용할 비밀 키입니다. 키 크기는 128, 192 또는 256 비트여야 합니다.</param>
      <param name="rgbIV">AES 알고리즘에 사용할 초기화 벡터입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" />가 이 알고리즘에 유효한 크기가 아닌 경우  
  
또는 
 <paramref name="rgbIV" /> 크기가 이 알고리즘에 대한 블록 크기와 일치하지 않는 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" />가 이 알고리즘의 알려진 weak키이며 사용할 수 없는 경우  
  
또는 
 <paramref name="rgbIV" />이(가) <see langword="null" />인 경우</exception>
      <returns>대칭 AES 암호기 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.GenerateIV">
      <summary>AES 알고리즘에 사용할 무작위 IV(초기화 벡터)를 생성합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCng.GenerateKey">
      <summary>AES 알고리즘에 사용할 랜덤 키를 생성합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.AesCng.Key">
      <summary>
        <see cref="T:System.Security.Cryptography.AesCng" /> 알고리즘에 대한 키를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.AesCng" /> 알고리즘에 대한 키입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCng.KeySize">
      <summary>
        <see cref="T:System.Security.Cryptography.AesCng" /> 알고리즘에서 사용하는 비밀 키의 크기(비트)를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.AesCng" /> 알고리즘에서 사용하는 비밀 키의 크기(비트)입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngAlgorithm">
      <summary>암호화 알고리즘의 이름을 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)">
      <summary>
        <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="algorithm">초기화할 알고리즘의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithm" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="algorithm" /> 매개 변수의 길이가 0인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)">
      <summary>지정된 개체를 현재 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체와 비교합니다.</summary>
      <param name="obj">현재 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="obj" /> 매개 변수가 현재 개체와 같은 알고리즘을 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithm" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 현재 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체와 비교합니다.</summary>
      <param name="other">현재 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="other" /> 매개 변수가 현재 개체와 같은 알고리즘을 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.GetHashCode">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체에 포함된 알고리즘 이름의 해시 값을 생성합니다.</summary>
      <returns>포함된 알고리즘 이름의 해시 값입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)">
      <summary>두 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체가 같은 알고리즘 이름을 지정하는지 확인합니다.</summary>
      <param name="left">알고리즘 이름을 지정하는 개체입니다.</param>
      <param name="right">
        <paramref name="left" /> 매개 변수로 식별되는 개체와 비교할 두 번째 개체입니다.</param>
      <returns>두 개체가 같은 알고리즘 이름을 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)">
      <summary>두 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체가 같은 알고리즘을 지정하지 않는지 확인합니다.</summary>
      <param name="left">알고리즘 이름을 지정하는 개체입니다.</param>
      <param name="right">
        <paramref name="left" /> 매개 변수로 식별되는 개체와 비교할 두 번째 개체입니다.</param>
      <returns>두 개체가 같은 알고리즘 이름을 지정하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.ToString">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체가 지정하는 알고리즘의 이름을 가져옵니다.</summary>
      <returns>포함된 알고리즘 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Algorithm">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체가 지정하는 알고리즘 이름을 가져옵니다.</summary>
      <returns>포함된 알고리즘 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellman">
      <summary>해당 곡선이 키 속성을 통해 기술되는 ECDH(타원 곡선 Diffie-Hellman) 키 교환 알고리즘을 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>해당 곡선이 키 속성을 통해 기술되는 ECDH 키 교환 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256">
      <summary>P-256 곡선을 사용하는 ECDH(타원 곡선 Diffie-Hellman) 키 교환 알고리즘을 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>P-256 곡선을 사용하는 ECDH 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384">
      <summary>P-384 곡선을 사용하는 ECDH(타원 곡선 Diffie-Hellman) 키 교환 알고리즘을 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>P-384 곡선을 사용하는 ECDH 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521">
      <summary>P-521 곡선을 사용하는 ECDH(타원 곡선 Diffie-Hellman) 키 교환 알고리즘을 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>P-521 곡선을 사용하는 ECDH 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsa">
      <summary>해당 곡선이 키 속성을 통해 기술되는 ECDSA(타원 곡선 디지털 서명 알고리즘)를 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>해당 곡선이 키 속성을 통해 기술되는 ECDSA를 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP256">
      <summary>P-256 곡선을 사용하는 ECDSA(타원 곡선 디지털 서명 알고리즘)를 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>P-256 곡선을 사용하는 ECDSA 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP384">
      <summary>P-384 곡선을 사용하는 ECDSA(타원 곡선 디지털 서명 알고리즘)를 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>P-384 곡선을 사용하는 ECDSA 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP521">
      <summary>P-521 곡선을 사용하는 ECDSA(타원 곡선 디지털 서명 알고리즘)를 지정하는 새 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>P-521 곡선을 사용하는 ECDSA 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.MD5">
      <summary>MD5(메시지 다이제스트 5) 해시 알고리즘을 지정하는 새 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>MD5 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Rsa">
      <summary>RSA 해시 알고리즘을 지정하는 새 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>RSA 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha1">
      <summary>SHA-1(Secure Hash Algorithm 1) 알고리즘을 지정하는 새 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>SHA-1 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha256">
      <summary>SHA-256(Secure Hash Algorithm 256) 알고리즘을 지정하는 새 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>SHA-256 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha384">
      <summary>SHA-384(Secure Hash Algorithm 384) 알고리즘을 지정하는 새 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>SHA-384 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha512">
      <summary>SHA-512(Secure Hash Algorithm 512) 알고리즘을 지정하는 새 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체를 가져옵니다.</summary>
      <returns>SHA-512 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngAlgorithmGroup">
      <summary>암호화 알고리즘 그룹의 이름을 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)">
      <summary>
        <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="algorithmGroup">초기화할 알고리즘 그룹의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithmGroup" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="algorithmGroup" /> 매개 변수의 길이가 0인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)">
      <summary>지정된 개체를 현재 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체와 비교합니다.</summary>
      <param name="obj">현재 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="obj" /> 매개 변수가 현재 개체와 같은 알고리즘 그룹을 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체를 현재 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체와 비교합니다.</summary>
      <param name="other">현재 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="other" /> 매개 변수가 현재 개체와 같은 알고리즘 그룹을 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체에 포함된 알고리즘 그룹 이름의 해시 값을 생성합니다.</summary>
      <returns>포함된 알고리즘 그룹 이름의 해시 값입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>두 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체가 같은 알고리즘 그룹을 지정하는지 확인합니다.</summary>
      <param name="left">알고리즘 그룹을 지정하는 개체입니다.</param>
      <param name="right">
        <paramref name="left" /> 매개 변수로 식별되는 개체와 비교할 두 번째 개체입니다.</param>
      <returns>두 개체가 같은 알고리즘 그룹을 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>두 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체가 같은 알고리즘 그룹을 지정하지 않는지 확인합니다.</summary>
      <param name="left">알고리즘 그룹을 지정하는 개체입니다.</param>
      <param name="right">
        <paramref name="left" /> 매개 변수로 식별되는 개체와 비교할 두 번째 개체입니다.</param>
      <returns>두 개체가 같은 알고리즘 그룹을 지정하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.ToString">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체가 지정하는 알고리즘 그룹의 이름을 가져옵니다.</summary>
      <returns>포함된 알고리즘 그룹 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 개체가 지정하는 알고리즘 그룹의 이름을 가져옵니다.</summary>
      <returns>포함된 알고리즘 그룹 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman">
      <summary>알고리즘의 Diffie-Hellman 패밀리를 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체를 가져옵니다.</summary>
      <returns>알고리즘의 Diffie-Hellman 패밀리를 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.Dsa">
      <summary>알고리즘의 DSA(Digital Signature Algorithm) 패밀리를 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체를 가져옵니다.</summary>
      <returns>알고리즘의 DSA 패밀리를 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman">
      <summary>알고리즘의 ECDH(Elliptic Curve Diffie-Hellman) 패밀리를 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체를 가져옵니다.</summary>
      <returns>알고리즘의 ECDH 패밀리를 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa">
      <summary>알고리즘의 ECDSA(Elliptic Curve Digital Signature Algorithm) 패밀리를 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체를 가져옵니다.</summary>
      <returns>알고리즘의 ECDSA 패밀리를 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.Rsa">
      <summary>알고리즘의 RSA(Rivest-Shamir-Adleman) 패밀리를 지정하는 <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> 개체를 가져옵니다.</summary>
      <returns>알고리즘의 RSA 패밀리를 지정하는 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngExportPolicies">
      <summary>키의 키 내보내기 정책을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowArchiving">
      <summary>보관을 위해 프라이빗 키를 한 번 내보낼 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowExport">
      <summary>프라이빗 키를 여러 번 내보낼 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextArchiving">
      <summary>프라이빗 키를 일반 텍스트로 한 번 내보낼 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextExport">
      <summary>프라이빗 키를 일반 텍스트로 여러 번 내보낼 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.None">
      <summary>내보내기 정책을 설정하지 않습니다. 키를 제한없이 내보낼 수 있습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKey">
      <summary>CNG(Cryptography Next Generation) 개체에 사용되는 키 관련 핵심 기능을 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)">
      <summary>지정된 알고리즘에 사용할 수 있는 <see cref="T:System.Security.Cryptography.CngKey" /> 개체를 만듭니다.</summary>
      <param name="algorithm">키에 사용할 알고리즘입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithm" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>사용 후 삭제되는 키입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)">
      <summary>지정된 알고리즘을 제공하는 명명된 <see cref="T:System.Security.Cryptography.CngKey" /> 개체를 만듭니다.</summary>
      <param name="algorithm">키에 사용할 알고리즘입니다.</param>
      <param name="keyName">키 이름입니다. 이름을 제공하지 않으면 키가 지속되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithm" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>지정된 알고리즘을 제공하는 사용 후 지속되거나 삭제되는 키입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)">
      <summary>제공된 키 생성 매개 변수를 사용하여 지정된 알고리즘을 제공하는 명명된 <see cref="T:System.Security.Cryptography.CngKey" /> 개체를 만듭니다.</summary>
      <param name="algorithm">키에 사용할 알고리즘입니다.</param>
      <param name="keyName">키 이름입니다. 이름을 제공하지 않으면 키가 지속되지 않습니다.</param>
      <param name="creationParameters">
        <see cref="T:System.Security.Cryptography.CngProvider" />를 비롯한 메서드의 고급 매개 변수를 지정하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithm" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>지정된 알고리즘을 제공하는 사용 후 지속되거나 삭제되는 키입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Delete">
      <summary>개체에 연결된 키를 제거합니다.</summary>
      <exception cref="T:System.ObjectDisposedException">삭제된 키에 액세스하려고 한 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Dispose">
      <summary>
        <see cref="T:System.Security.Cryptography.CngKey" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String)">
      <summary>명명된 키가 기본 KSP(키 스토리지 공급자)에 있는지 확인합니다.</summary>
      <param name="keyName">키 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>명명된 키가 기본 KSP에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)">
      <summary>명명된 키가 지정된 KSP(키 스토리지 공급자)에 있는지 확인합니다.</summary>
      <param name="keyName">키 이름입니다.</param>
      <param name="provider">키를 확인할 KSP입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> 또는 <paramref name="provider" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>명명된 키가 지정된 공급자에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>지정된 옵션에 따라 명명된 키가 지정된 KSP(키 스토리지 공급자)에 있는지 확인합니다.</summary>
      <param name="keyName">키 이름입니다.</param>
      <param name="provider">키를 검색할 KSP입니다.</param>
      <param name="options">키를 여는 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> 또는 <paramref name="provider" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>명명된 키가 지정된 공급자에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>키 자료를 지정된 형식으로 BLOB으로 내보냅니다.</summary>
      <param name="format">키 BLOB의 형식을 지정하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다. 일반적으로 <see cref="P:System.Security.Cryptography.CngKey.ExportPolicy" />에서 키 내보내기를 허용하지 않는 경우입니다.</exception>
      <returns>키 자료가 지정된 형식으로 들어 있는 BLOB입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)">
      <summary>이름 및 속성 옵션 집합을 사용하여 속성을 가져옵니다.</summary>
      <param name="name">원하는 속성의 이름입니다.</param>
      <param name="options">명명된 속성에 대한 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>지정된 속성의 원시 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)">
      <summary>키에 지정된 속성이 있는지 확인합니다.</summary>
      <param name="name">확인할 속성 이름입니다.</param>
      <param name="options">명명된 속성에 대한 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
      <returns>지정된 속성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>지정된 형식을 사용하여 지정된 키 자료를 기본 KSP(키 스토리지 공급자)로 가져와 새 키를 만듭니다.</summary>
      <param name="keyBlob">키 정보를 포함하는 배열입니다.</param>
      <param name="format">
        <paramref name="keyBlob" /> 배열의 형식을 지정하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyBlob" /> 또는 <paramref name="format" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>새 키입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)">
      <summary>지정된 형식을 사용하여 지정된 키 자료를 지정된 KSP(키 스토리지 공급자)로 가져와 새 키를 만듭니다.</summary>
      <param name="keyBlob">키 정보를 포함하는 배열입니다.</param>
      <param name="format">
        <paramref name="keyBlob" /> 배열의 형식을 지정하는 개체입니다.</param>
      <param name="provider">KSP입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyBlob" />, <paramref name="format" /> 또는 <paramref name="provider" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>새 키입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)">
      <summary>기존 키에 대한 핸들을 사용하여 <see cref="T:System.Security.Cryptography.CngKey" /> 개체의 인스턴스를 만듭니다.</summary>
      <param name="keyHandle">기존 키에 대한 핸들입니다.</param>
      <param name="keyHandleOpenOptions">
        <paramref name="keyHandle" />이 사용 후 삭제되는 키를 나타내는지 또는 명명된 키를 나타내는지 여부를 지정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyHandle" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyHandle" />이 유효하지 않거나 형식이 잘못되었거나 이미 닫힌 경우. 이 예외는 키가 CLR(공용 언어 런타임)에서 만든 사용 후 삭제되는 키이지만 <see cref="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey" /> 값이 지정되지 않은 경우에도 throw됩니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>기존 키입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String)">
      <summary>명명된 기존 키를 나타내는 <see cref="T:System.Security.Cryptography.CngKey" /> 개체의 인스턴스를 만듭니다.</summary>
      <param name="keyName">키의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>기존 키입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)">
      <summary>지정된 KSP(키 스토리지 공급자)를 사용하여 명명된 기존 키를 나타내는 <see cref="T:System.Security.Cryptography.CngKey" /> 개체의 인스턴스를 만듭니다.</summary>
      <param name="keyName">키의 이름입니다.</param>
      <param name="provider">키를 포함하는 KSP입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> 또는 <paramref name="provider" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>기존 키입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>지정된 KSP(키 스토리지 공급자) 및 키 열기 옵션을 사용하여 명명된 기존 키를 나타내는 <see cref="T:System.Security.Cryptography.CngKey" /> 개체의 인스턴스를 만듭니다.</summary>
      <param name="keyName">키의 이름입니다.</param>
      <param name="provider">키를 포함하는 KSP입니다.</param>
      <param name="openOptions">키가 열리는 위치(머신 또는 사용자 스토리지) 및 UI 프롬프트를 표시하지 않을지 여부와 같은 키 열기 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> 또는 <paramref name="provider" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>기존 키입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)">
      <summary>키의 명명된 속성을 설정합니다.</summary>
      <param name="property">설정할 키 속성입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Algorithm">
      <summary>키에 사용되는 알고리즘을 가져옵니다.</summary>
      <returns>암호화 알고리즘의 이름을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.AlgorithmGroup">
      <summary>키에 사용되는 알고리즘 그룹을 가져옵니다.</summary>
      <returns>암호화 알고리즘 그룹의 이름을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ExportPolicy">
      <summary>키에 사용되는 내보내기 정책을 가져옵니다.</summary>
      <returns>키의 내보내기 정책을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Handle">
      <summary>네이티브 키를 나타내는 SafeHandle(NCRYPT_KEY_HANDLE)을 제공합니다.</summary>
      <returns>키를 나타내는 SafeHandle입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.IsEphemeral">
      <summary>키의 지속 상태를 가져옵니다.</summary>
      <returns>키가 사용 후 삭제되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.IsMachineKey">
      <summary>키의 범위(컴퓨터 또는 사용자)를 가져옵니다.</summary>
      <returns>컴퓨터 전체에서 키를 사용할 수 있으면 <see langword="true" />이고, 현재 사용자만 키를 사용할 수 있으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeyName">
      <summary>키의 이름을 가져옵니다.</summary>
      <returns>키의 이름입니다. 키가 사용 후 삭제되면 이 값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeySize">
      <summary>키 크기(비트 단위)를 가져옵니다.</summary>
      <returns>키의 크기(비트)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeyUsage">
      <summary>키에 지정된 암호화 작업을 가져옵니다.</summary>
      <returns>키를 사용할 수 있는 방식을 지정하는 열거형 값의 비트 조합입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ParentWindowHandle">
      <summary>키에 액세스하여 발생하는 UI(사용자 인터페이스) 프롬프트에 사용할 HWND(창 핸들)를 가져오거나 설정합니다.</summary>
      <returns>키의 부모 창 핸들입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Provider">
      <summary>키를 관리하는 KSP(키 스토리지 공급자)를 가져옵니다.</summary>
      <returns>키를 관리하는 KSP입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ProviderHandle">
      <summary>KSP(키 스토리지 공급자)에 대한 네이티브 핸들(NCRYPT_PROV_HANDLE)을 가져옵니다.</summary>
      <returns>KSP에 대한 핸들입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.UIPolicy">
      <summary>키에 액세스하는 UI(사용자 인터페이스)를 제어하는 매개 변수를 가져옵니다.</summary>
      <returns>UI 표시에 대한 구성 매개 변수가 들어 있는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.UniqueName">
      <summary>키의 고유 이름을 가져옵니다.</summary>
      <returns>키의 대체 이름입니다. 키가 사용 후 삭제되면 이 값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyBlobFormat">
      <summary>Microsoft CNG(Cryptography Next Generation) 개체에 사용할 키 BLOB 형식을 지정합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)">
      <summary>지정된 형식을 사용하여 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="format">초기화할 키 BLOB 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="format" /> 매개 변수의 길이가 0인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)">
      <summary>지정된 개체를 현재 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체와 비교합니다.</summary>
      <param name="obj">현재 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="obj" /> 매개 변수가 현재 개체와 같은 키 BLOB 형식을 지정하는 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체를 현재 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체와 비교합니다.</summary>
      <param name="other">현재 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="other" /> 매개 변수가 현재 개체와 같은 키 BLOB 형식을 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.GetHashCode">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체에 포함된 키 BLOB 형식의 해시 값을 생성합니다.</summary>
      <returns>포함된 키 BLOB 형식의 해시 값입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>두 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체가 같은 BLOB 형식을 지정하는지 확인합니다.</summary>
      <param name="left">키 BLOB 형식을 지정하는 개체입니다.</param>
      <param name="right">
        <paramref name="left" /> 매개 변수로 식별되는 개체와 비교할 두 번째 개체입니다.</param>
      <returns>두 개체가 같은 키 BLOB 형식을 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>두 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체가 같은 BLOB 형식을 지정하지 않는지 확인합니다.</summary>
      <param name="left">키 BLOB 형식을 지정하는 개체입니다.</param>
      <param name="right">
        <paramref name="left" /> 매개 변수로 식별되는 개체와 비교할 두 번째 개체입니다.</param>
      <returns>두 개체가 같은 키 BLOB 형식을 지정하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.ToString">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체가 지정하는 키 BLOB 형식의 이름을 가져옵니다.</summary>
      <returns>포함된 키 BLOB 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccFullPrivateBlob">
      <summary>명시적 곡선 매개 변수를 포함하는 ECC(타원 곡선 암호화) 키용 프라이빗 키 BLOB을 지정하는 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체를 가져옵니다.</summary>
      <returns>프라이빗 키 BLOB을 설명하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccFullPublicBlob">
      <summary>명시적 곡선 매개 변수를 포함하는 ECC(타원 곡선 암호화) 키용 공개 키 BLOB을 지정하는 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체를 가져옵니다.</summary>
      <returns>공개 키 BLOB을 설명하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob">
      <summary>ECC(elliptic curve cryptography) 키의 프라이빗 키 BLOB을 지정하는 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체를 가져옵니다.</summary>
      <returns>ECC 프라이빗 키 BLOB을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob">
      <summary>ECC(elliptic curve cryptography) 키의 공개 키 BLOB을 지정하는 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체를 가져옵니다.</summary>
      <returns>ECC 공개 키 BLOB을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.Format">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체가 지정하는 키 BLOB 형식의 이름을 가져옵니다.</summary>
      <returns>포함된 키 BLOB 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob">
      <summary>제네릭 프라이빗 키 BLOB을 지정하는 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체를 가져옵니다.</summary>
      <returns>제네릭 프라이빗 키 BLOB을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob">
      <summary>제네릭 공개 키 BLOB을 지정하는 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체를 가져옵니다.</summary>
      <returns>제네릭 공개 키 BLOB을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob">
      <summary>불투명 전송 키 BLOB을 지정하는 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체를 가져옵니다.</summary>
      <returns>불투명 전송 키 BLOB을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob">
      <summary>PKCS #8(Private Key Information Syntax Standard) 키 BLOB을 지정하는 <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> 개체를 가져옵니다.</summary>
      <returns>PKCS #8 프라이빗 키 BLOB을 지정하는 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyCreationOptions">
      <summary>키를 만드는 데 사용되는 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.MachineKey">
      <summary>컴퓨터 전체 수준에서 키를 만듭니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.None">
      <summary>키 만들기 옵션이 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.OverwriteExistingKey">
      <summary>키를 만들면서 기존 키를 덮어씁니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyCreationParameters">
      <summary>키 생성에 대한 고급 옵션이 들어 있습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyCreationParameters.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.CngKeyCreationParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy">
      <summary>키 내보내기 정책을 가져오거나 설정합니다.</summary>
      <returns>키 내보내기 정책을 지정하는 개체입니다. 기본값은 키 스토리지 공급자의 기본 내보내기 정책을 설정하는 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions">
      <summary>키 생성 옵션을 가져오거나 설정합니다.</summary>
      <returns>키 생성에 대한 옵션을 지정하는 개체입니다. 기본값은 키 스토리지 공급자의 기본 키 생성 옵션을 설정하는 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.KeyUsage">
      <summary>현재 키에 적용되는 암호화 작업을 가져오거나 설정합니다.</summary>
      <returns>키 용도를 지정하는 하나 이상의 열거형 값의 비트 조합입니다. 기본값은 키 스토리지 공급자의 기본 키 용도를 설정하는 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.Parameters">
      <summary>키가 완성되기 전에 설정된 추가 속성을 사용하여 <see cref="T:System.Security.Cryptography.CngKey" /> 개체를 만들 수 있습니다.</summary>
      <returns>키를 만드는 도중 <see cref="T:System.Security.Cryptography.CngKey" /> 개체에 대해 설정해야 하는 추가 매개 변수가 들어 있는 컬렉션 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle">
      <summary>CNG(Cryptography Next Generation) 클래스에서 만드는 대화 상자의 부모 창으로 사용할 창 핸들을 가져오거나 설정합니다.</summary>
      <returns>CNG 대화 상자에 사용되는 부모 창의 HWND입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.Provider">
      <summary>키를 만들 KSP(키 스토리지 공급자)를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Cryptography.CngKeyCreationParameters.Provider" /> 속성이 <see langword="null" /> 값으로 설정된 경우</exception>
      <returns>새 키를 만들 KSP를 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.UIPolicy">
      <summary>키를 만들거나 키에 액세스할 때 표시되는 사용자 인터페이스에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns>키를 만들거나 키에 액세스할 때 CNG(Cryptography Next Generation) 클래스에서 표시하는 사용자 인터페이스에 대한 세부 정보가 들어 있는 개체입니다. <see langword="null" /> 값을 지정하면 키 스토리지 공급자의 기본 사용자 인터페이스 정책이 설정됩니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyHandleOpenOptions">
      <summary>키 핸들을 여는 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey">
      <summary>열려 있는 키 핸들이 사용 후 삭제되는 키를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyHandleOpenOptions.None">
      <summary>열려 있는 키 핸들이 사용 후 삭제되는 키를 지정하지 않습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyOpenOptions">
      <summary>키를 여는 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.MachineKey">
      <summary>컴퓨터 전체 수준에서 키를 엽니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.None">
      <summary>키 열기 옵션을 지정하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.Silent">
      <summary>UI 프롬프트를 표시하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.UserKey">
      <summary>
        <see cref="F:System.Security.Cryptography.CngKeyOpenOptions.MachineKey" /> 값을 지정하지 않으면 사용자 키가 대신 열립니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyUsages">
      <summary>CNG(Cryptography Next Generation) 키와 함께 사용할 수 있는 암호화 작업을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.AllUsages">
      <summary>키를 모든 용도로 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.Decryption">
      <summary>키를 암호화 및 암호 해독에 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.KeyAgreement">
      <summary>키를 비밀 계약 생성 및 키 교환에 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.None">
      <summary>키에 용도 값이 할당되지 않았습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.Signing">
      <summary>키를 서명 및 확인에 사용할 수 있습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngProperty">
      <summary>CNG(Cryptography Next Generation) 키 또는 공급자의 속성을 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)">
      <summary>
        <see cref="T:System.Security.Cryptography.CngProperty" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">초기화할 속성 이름입니다.</param>
      <param name="value">초기화할 속성 값입니다.</param>
      <param name="options">속성이 저장되는 방법을 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.Equals(System.Object)">
      <summary>지정된 개체를 현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체와 비교합니다.</summary>
      <param name="obj">현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="obj" /> 매개 변수가 현재 개체와 같은 속성을 지정하는 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체를 현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체와 비교합니다.</summary>
      <param name="other">현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="other" /> 매개 변수가 현재 개체와 같은 속성을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.GetHashCode">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체의 해시 코드를 생성합니다.</summary>
      <returns>현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체의 해시 값입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.GetValue">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체가 지정하는 속성 값을 가져옵니다.</summary>
      <returns>속성에 저장된 값을 나타내는 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)">
      <summary>두 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체가 같은 속성 이름, 값 및 옵션을 지정하는지 확인합니다.</summary>
      <param name="left">CNG(Cryptography Next Generation) 키 또는 공급자의 속성을 지정하는 개체입니다.</param>
      <param name="right">
        <paramref name="left" /> 매개 변수로 식별되는 개체와 비교할 두 번째 개체입니다.</param>
      <returns>두 개체가 같은 속성을 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)">
      <summary>두 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체가 같은 속성 이름, 값 및 옵션을 지정하지 않는지 확인합니다.</summary>
      <param name="left">CNG(Cryptography Next Generation) 키 또는 공급자의 속성을 지정하는 개체입니다.</param>
      <param name="right">
        <paramref name="left" /> 매개 변수로 식별되는 개체와 비교할 두 번째 개체입니다.</param>
      <returns>두 개체가 같은 속성을 지정하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProperty.Name">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체가 지정하는 속성 이름을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체에 설정된 속성 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProperty.Options">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체가 지정하는 속성 옵션을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.Cryptography.CngProperty" /> 개체에 설정된 옵션을 지정하는 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngPropertyCollection">
      <summary>CNG(Cryptography Next Generation) 속성의 강력한 형식 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngPropertyCollection.#ctor">
      <summary>새 <see cref="T:System.Security.Cryptography.CngPropertyCollection" /> 개체를 초기화합니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngPropertyOptions">
      <summary>CNG(Cryptography Next Generation) 키 속성 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.CustomProperty">
      <summary>CNG가 지정하지 않는 속성입니다. 이후에 CNG 속성과 이름이 충돌하지 않게 하려면 이 속성을 사용합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.None">
      <summary>참조되는 속성에 옵션이 없습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.Persist">
      <summary>속성이 지속됩니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngProvider">
      <summary>CNG(Cryptography Next Generation) 개체와 함께 사용할 KSP(키 스토리지 공급자)의 이름을 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.#ctor(System.String)">
      <summary>
        <see cref="T:System.Security.Cryptography.CngProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider">초기화할 KSP(키 스토리지 공급자)의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> 매개 변수의 길이가 0인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.Equals(System.Object)">
      <summary>지정된 개체를 현재 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체와 비교합니다.</summary>
      <param name="obj">현재 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="obj" /> 매개 변수가 현재 개체와 같은 KSP(키 스토리지 공급자)를 지정하는 <see cref="T:System.Security.Cryptography.CngProvider" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체를 현재 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체와 비교합니다.</summary>
      <param name="other">현재 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="other" /> 매개 변수가 현재 개체와 같은 KSP(키 스토리지 공급자)를 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.GetHashCode">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체에 포함된 KSP(키 스토리지 공급자)의 이름에 대한 해시 값을 생성합니다.</summary>
      <returns>포함된 KSP 이름의 해시 값입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)">
      <summary>두 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체가 같은 KSP(키 스토리지 공급자)를 지정하는지 확인합니다.</summary>
      <param name="left">KSP를 지정하는 개체입니다.</param>
      <param name="right">
        <paramref name="left" /> 매개 변수로 식별되는 개체와 비교할 두 번째 개체입니다.</param>
      <returns>두 개체가 같은 KSP를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)">
      <summary>두 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체가 같은 KSP(키 스토리지 공급자)를 나타내지 않는지 확인합니다.</summary>
      <param name="left">KSP를 지정하는 개체입니다.</param>
      <param name="right">
        <paramref name="left" /> 매개 변수로 식별되는 개체와 비교할 두 번째 개체입니다.</param>
      <returns>두 개체가 같은 KSP를 나타내지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.ToString">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체가 지정하는 KSP(키 스토리지 공급자)의 이름을 가져옵니다.</summary>
      <returns>포함된 KSP 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider">
      <summary>Microsoft 스마트 카드 키 스토리지 공급자를 지정하는 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체를 가져옵니다.</summary>
      <returns>Microsoft 스마트 카드 키 스토리지 공급자를 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider">
      <summary>Microsoft 소프트웨어 키 스토리지 공급자를 지정하는 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체를 가져옵니다.</summary>
      <returns>Microsoft 소프트웨어 키 스토리지 공급자를 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.Provider">
      <summary>현재 <see cref="T:System.Security.Cryptography.CngProvider" /> 개체가 지정하는 KSP(키 스토리지 공급자)의 이름을 가져옵니다.</summary>
      <returns>포함된 KSP 이름입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngUIPolicy">
      <summary>보호된 키에 액세스할 때 CNG(Cryptography Next Generation)에서 표시하는 UI(사용자 인터페이스)의 선택적 구성 매개 변수를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)">
      <summary>지정된 보호 수준을 사용하여 <see cref="T:System.Security.Cryptography.CngUIPolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="protectionLevel">보호 수준을 지정하는 열거형 값의 비트 조합입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)">
      <summary>지정된 보호 수준과 이름을 사용하여 <see cref="T:System.Security.Cryptography.CngUIPolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="protectionLevel">보호 수준을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="friendlyName">UI 프롬프트에 사용할 키 이름입니다. null 문자열을 지정하면 기본 이름이 사용됩니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)">
      <summary>지정된 보호 수준, 이름 및 설명을 사용하여 <see cref="T:System.Security.Cryptography.CngUIPolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="protectionLevel">보호 수준을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="friendlyName">UI 프롬프트에 사용할 키 이름입니다. null 문자열을 지정하면 기본 이름이 사용됩니다.</param>
      <param name="description">키의 전체 텍스트 설명입니다. null 문자열을 지정하면 기본 설명이 사용됩니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)">
      <summary>지정된 보호 수준, 이름, 설명 문자열 및 사용 컨텍스트를 사용하여 <see cref="T:System.Security.Cryptography.CngUIPolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="protectionLevel">보호 수준을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="friendlyName">UI 프롬프트에 사용할 키 이름입니다. null 문자열을 지정하면 기본 이름이 사용됩니다.</param>
      <param name="description">키의 전체 텍스트 설명입니다. null 문자열을 지정하면 기본 설명이 사용됩니다.</param>
      <param name="useContext">키를 사용하는 방법에 대한 설명입니다. null 문자열을 지정하면 기본 설명이 사용됩니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)">
      <summary>지정된 보호 수준, 이름, 설명 문자열, 사용 컨텍스트 및 제목을 사용하여 <see cref="T:System.Security.Cryptography.CngUIPolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="protectionLevel">보호 수준을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="friendlyName">UI 프롬프트에 사용할 키 이름입니다. null 문자열을 지정하면 기본 이름이 사용됩니다.</param>
      <param name="description">키의 전체 텍스트 설명입니다. null 문자열을 지정하면 기본 설명이 사용됩니다.</param>
      <param name="useContext">키를 사용하는 방법에 대한 설명입니다. null 문자열을 지정하면 기본 설명이 사용됩니다.</param>
      <param name="creationTitle">UI 프롬프트를 제공하는 대화 상자의 제목입니다. null 문자열을 지정하면 기본 제목이 사용됩니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.CreationTitle">
      <summary>UI 프롬프트에 표시되는 제목을 가져옵니다.</summary>
      <returns>키에 액세스할 때 표시되는 대화 상자의 제목입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.Description">
      <summary>UI 프롬프트에 표시되는 설명 문자열을 가져옵니다.</summary>
      <returns>키에 액세스할 때 표시되는 대화 상자의 설명 텍스트입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.FriendlyName">
      <summary>UI 프롬프트에 표시되는 이름을 가져옵니다.</summary>
      <returns>키에 액세스할 때 표시되는 대화 상자에서 키를 설명하는 데 사용되는 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.ProtectionLevel">
      <summary>키의 UI 보호 수준을 가져옵니다.</summary>
      <returns>키에 적용할 UI 보호 수준을 설명하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.UseContext">
      <summary>키를 사용하는 방법에 대한 설명을 가져옵니다.</summary>
      <returns>키를 사용하는 방법에 대한 설명입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngUIProtectionLevels">
      <summary>UI(사용자 인터페이스) 프롬프트 시나리오에서 키의 보호 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.ForceHighProtection">
      <summary>키에 액세스할 때마다 UI 프롬프트가 표시됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.None">
      <summary>키에 액세스할 때 UI 프롬프트가 표시되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.ProtectKey">
      <summary>프로세스에서 키에 처음 액세스할 때 UI 프롬프트가 표시됩니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.DSACng">
      <summary>DSA(디지털 서명 알고리즘)의 CNG(Cryptography Next Generation) 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.#ctor">
      <summary>난수 2,048비트 키 쌍을 사용하여 <see cref="T:System.Security.Cryptography.DSACng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.#ctor(System.Int32)">
      <summary>지정한 크기의 임의로 생성된 키를 사용하여 <see cref="T:System.Security.Cryptography.DSACng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keySize">생성할 키의 크기(비트)입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keySize" />가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>지정된 키를 사용하여 <see cref="T:System.Security.Cryptography.DSACng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="key">DSA 작업에 사용할 키입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" />가 유효한 DSA 키가 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])">
      <summary>지정된 데이터에 대한 <see cref="T:System.Security.Cryptography.DSA" /> 서명을 만듭니다.</summary>
      <param name="rgbHash">서명할 해시 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbHash" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">이 인스턴스는 퍼블릭 키만 나타냅니다.

또는

시그니처를 만드는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="rgbHash" /> 길이가 DSA 키의 Q 값보다 짧습니다.</exception>
      <returns>지정된 데이터의 디지털 서명입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)">
      <summary>DSA 알고리즘 매개 변수를 내보냅니다.</summary>
      <param name="includePrivateParameters">private 매개 변수를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">DSA 키가 유효한 퍼블릭 또는 프라이빗 키가 아닙니다.</exception>
      <returns>DSA 알고리즘 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)">
      <summary>매개 변수 구조에 대한 새 <see cref="T:System.Security.Cryptography.CngKey" />를 만들어 현재 인스턴스에서 사용 중인 기존 키를 바꿉니다.</summary>
      <param name="parameters">DSA 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentException">지정된 DSA 매개 변수가 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])">
      <summary>지정된 디지털 시그니처와 지정된 해시가 일치하는지를 확인합니다.</summary>
      <param name="rgbHash">서명된 해시입니다.</param>
      <param name="rgbSignature">확인할 디지털 서명입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbHash" /> 또는 <paramref name="rgbSignature" /> 매개 변수는 <see langword="null" />입니다.</exception>
      <returns>
        <paramref name="rgbSignature" />가 지정된 해시를 사용하여 계산된 시그니처와 일치하면 <see langword="true" />이고, 일치하지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.Key">
      <summary>
        <see cref="T:System.Security.Cryptography.DSACng" /> 개체가 수행하는 모든 암호화 작업에 사용할 키를 가져옵니다.</summary>
      <returns>암호화 작업을 수행하는 위해 <see cref="T:System.Security.Cryptography.DSACng" /> 개체에서 사용되는 키입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.KeyExchangeAlgorithm">
      <summary>키 교환 알고리즘의 이름을 가져옵니다.</summary>
      <returns>항상 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.LegalKeySizes">
      <summary>DSA 알고리즘에서 지원하는 키 크기(비트)를 가져옵니다.</summary>
      <returns>알고리즘에서 지원하는 키 크기가 들어 있는 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACng.SignatureAlgorithm">
      <summary>서명 알고리즘의 이름을 가져옵니다.</summary>
      <returns>문자열 "DSA"입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanCng">
      <summary>ECDH(Elliptic Curve Diffie-Hellman) 알고리즘의 CNG(Cryptography Next Generation) 구현을 제공합니다. 이 클래스는 암호화 작업을 수행하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
      <summary>임의의 키 쌍을 사용하여 <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
      <summary>지정된 키 크기를 사용하여 임의의 키 쌍으로 <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keySize">키 크기입니다. 유효한 키 크기는 256, 384 및 521비트입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="keySize" />에서 잘못된 길이를 지정합니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation) 클래스는 이 시스템에서 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CngKey" /> 개체를 사용하여 <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="key">현재 개체에 의해 수행되는 암호화 작업의 입력으로 사용할 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" />가 ECDH(Elliptic Curve Diffie-Hellman) 알고리즘 그룹을 지정하지 않는 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation) 클래스는 이 시스템에서 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
      <summary>해당 퍼블릭/프라이빗 키 쌍이 지정된 곡선에서 생성되는 <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="curve">퍼블릭/프라이빗 키 쌍을 생성하는 데 사용되는 곡선입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" />의 유효성을 검사할 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
      <summary>앞에 추가되거나 뒤에 추가된 선택적 데이터와 함께 지정된 해시 알고리즘을 사용하여 키 파생을 수행합니다.</summary>
      <param name="otherPartyPublicKey">상대방의 공개 키입니다.</param>
      <param name="hashAlgorithm">키 자료를 파생시키는 데 사용할 해시 알고리즘입니다.</param>
      <param name="secretPrepend">해시 전에 파생된 암호 앞에 추가할 값입니다.</param>
      <param name="secretAppend">해시 전에 파생된 암호 뒤에 추가할 값입니다.</param>
      <exception cref="T:System.NotImplementedException">파생 클래스가 이 메서드를 재정의해야 합니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" />에서 사용되는 곡선의 크기는 이 키의 곡선 크기와 다릅니다.

또는

<paramref name="hashAlgorithm" /> 매개 변수는 해시를 지정하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="otherPartyPublicKey" />에서 사용되는 곡선은 이 키의 곡선과 다릅니다.

또는

이 인스턴스는 퍼블릭 키만 나타냅니다.</exception>
      <returns>요청된 대로 데이터를 앞에 추가하거나 뒤에 추가한 후 공유된 비밀의 해시입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
      <summary>앞에 추가되거나 뒤에 추가된 선택적 데이터와 함께 지정된 HMAC(해시 기반 메시지 인증 코드) 알고리즘을 사용하여 키 파생을 수행합니다.</summary>
      <param name="otherPartyPublicKey">상대방의 공개 키입니다.</param>
      <param name="hashAlgorithm">키 자료를 파생시키는 데 사용할 해시 알고리즘입니다.</param>
      <param name="hmacKey">HMAC의 키입니다.</param>
      <param name="secretPrepend">해시 전에 파생된 암호 앞에 추가할 값입니다.</param>
      <param name="secretAppend">해시 전에 파생된 암호 뒤에 추가할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" />에서 사용되는 곡선의 크기는 이 키의 곡선 크기와 다릅니다.

또는

<paramref name="hashAlgorithm" /> 매개 변수는 해시를 지정하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="otherPartyPublicKey" />에서 사용되는 곡선은 이 키의 곡선과 다릅니다.

또는

이 인스턴스는 퍼블릭 키만 나타냅니다.</exception>
      <returns>요청된 대로 데이터를 앞에 추가하거나 뒤에 추가한 후 공유된 비밀의 HMAC입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
      <summary>두 번째 당사자의 공개 키가 들어 있는 <see cref="T:System.Security.Cryptography.CngKey" /> 개체를 사용하여 두 당사자 간의 비밀 계약을 통해 생성되는 키 자료를 파생합니다.</summary>
      <param name="otherPartyPublicKey">키 교환의 다른 당사자가 제공한 ECDH(Elliptic Curve Diffie-Hellman) 키의 공개 부분이 들어 있는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" />이 잘못되었습니다. <see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /> 속성이 <see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" />을 지정하지 않거나 키 크기가 이 인스턴스의 키 크기와 일치하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException">이 개체의 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /> 속성이 <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /> 키 파생 함수를 지정하지만 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> 또는 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>키 자료가 들어 있는 바이트 배열입니다. 이 정보는 현재 개체의 프라이빗 키와 지정된 퍼블릭 키에 따라 계산되는 비밀 계약을 통해 생성됩니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <summary>두 번째 당사자의 공개 키가 들어 있는 <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> 개체를 사용하여 두 당사자 간의 비밀 계약을 통해 생성되는 키 자료를 파생합니다.</summary>
      <param name="otherPartyPublicKey">키 교환의 다른 당사자가 제공한 공개 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" />가 <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> 키가 아닌 경우</exception>
      <returns>키 자료가 들어 있는 바이트 배열입니다. 이 정보는 현재 개체의 프라이빗 키와 지정된 퍼블릭 키에 따라 계산되는 비밀 계약을 통해 생성됩니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
      <summary>TLS(전송 계층 보안) 1.1 PRF(의사 난수 함수)를 사용하여 키 파생을 수행합니다.</summary>
      <param name="otherPartyPublicKey">상대방의 공개 키입니다.</param>
      <param name="prfLabel">ASCII로 인코딩된 PRF 레이블입니다.</param>
      <param name="prfSeed">64바이트 PRF 시드입니다.</param>
      <exception cref="T:System.NotImplementedException">파생 클래스가 이 메서드를 재정의해야 합니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" />에서 사용되는 곡선의 크기는 이 키의 곡선 크기와 다릅니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" />, <paramref name="prfLabel" /> 또는 <paramref name="prfSeed" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="prfSeed" />의 정확한 길이가 64바이트가 아닌 경우

또는

<paramref name="otherPartyPublicKey" />에서 사용되는 곡선은 이 키의 곡선과 다릅니다.

또는

이 인스턴스는 퍼블릭 키만 나타냅니다.</exception>
      <returns>공유된 암호를 키로 사용하는 TLS 1.1 PRF의 처음 48바이트입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
      <summary>두 번째 당사자의 공개 키가 들어 있는 <see cref="T:System.Security.Cryptography.CngKey" /> 개체를 사용하여 두 당사자 간에 생성된 비밀 계약에 대한 핸들을 가져옵니다.</summary>
      <param name="otherPartyPublicKey">키 교환의 다른 당사자가 제공한 ECDH(Elliptic Curve Diffie-Hellman) 키의 공개 부분이 들어 있는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" />가 ECDH 키가 아니거나 올바른 크기가 아닌 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>비밀 계약에 대한 핸들입니다. 이 정보는 현재 개체의 프라이빗 키와 지정된 퍼블릭 키에 따라 계산됩니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <summary>두 번째 당사자의 공개 키가 들어 있는 <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> 개체를 사용하여 두 당사자 간에 생성된 비밀 계약에 대한 핸들을 가져옵니다.</summary>
      <param name="otherPartyPublicKey">키 교환의 다른 당사자가 제공한 공개 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="otherPartyPublicKey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="otherPartyPublicKey" />가 <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> 키가 아닌 경우</exception>
      <returns>비밀 계약에 대한 핸들입니다. 이 정보는 현재 개체의 프라이빗 키와 지정된 퍼블릭 키에 따라 계산됩니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.ECCurve" /> 개체에 사용되는 키 및 명시적 곡선 매개 변수를 <see cref="T:System.Security.Cryptography.ECParameters" /> 개체로 내보냅니다.</summary>
      <param name="includePrivateParameters">private 매개 변수를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">메서드가 곡선 값을 가져올 수 없습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">이 플랫폼에서는 명시적 내보내기가 지원되지 않습니다. Windows 10 이상이 필요합니다.</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.ECCurve" /> 개체에 사용되는 키 및 명시적 곡선 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.ECCurve" /> 개체가 사용하는 키를 <see cref="T:System.Security.Cryptography.ECParameters" /> 개체로 내보냅니다.</summary>
      <param name="includePrivateParameters">private 매개 변수를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">메서드가 곡선 값을 가져올 수 없습니다.</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.ECCurve" /> 개체에 사용되는 키 및 명명된 곡선 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>지정된 형식을 사용하여 XML 문자열에서 키 정보를 역직렬화합니다.</summary>
      <param name="xml">역직렬화할 XML 기반 키 정보입니다.</param>
      <param name="format">XML 문자열의 형식을 지정하는 열거형 값 중 하나입니다. 현재 사용 가능한 형식은 <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />뿐입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xml" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="xml" />의 형식이 잘못된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" />에 지정된 형식이 잘못된 경우. <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /> 값만 사용할 수 있습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
      <summary>지정된 곡선에 대해 사용 후 삭제 퍼블릭/프라이빗 키 쌍을 새로 생성합니다.</summary>
      <param name="curve">사용 후 삭제 퍼블릭/프라이빗 키 쌍을 생성하는 데 사용되는 곡선입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" />의 유효성을 검사할 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
      <summary>
        <see cref="T:System.Security.Cryptography.ECCurve" /> 개체에 대해 지정된 매개 변수를 현재 인스턴스에 키로 가져옵니다.</summary>
      <param name="parameters">가져올 곡선의 매개 변수입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="parameters" />의 유효성을 검사할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="parameters" />가 가져올 수 없는 곡선을 참조합니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="parameters" />가 이 플랫폼에서 지원되지 않는 곡선을 참조합니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>지정된 형식을 사용하여 키 정보를 XML 문자열로 serialize합니다.</summary>
      <param name="format">XML 문자열의 형식을 지정하는 열거형 값 중 하나입니다. 현재 사용 가능한 형식은 <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />뿐입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" />에 지정된 형식이 잘못된 경우. <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /> 값만 사용할 수 있습니다.</exception>
      <returns>요청된 형식에 따라 XML 문자열로 serialize한 키 정보가 들어 있는 문자열 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
      <summary>키 자료를 생성하는 데 사용할 해시 알고리즘을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">값이 <see langword="null" />인 경우</exception>
      <returns>해시 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
      <summary>키 자료를 파생하는 데 사용할 HMAC(해시 기반 메시지 인증 코드) 키를 가져오거나 설정합니다.</summary>
      <returns>키 자료를 파생하는 데 사용할 HMAC(해시 기반 메시지 인증 코드) 키입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
      <summary>현재 개체에서 암호화 작업에 사용하는 <see cref="T:System.Security.Cryptography.CngKey" />를 지정합니다.</summary>
      <returns>이 개체에서 암호화 작업을 수행하는 데 사용하는 키 쌍입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
      <summary>
        <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 클래스의 키 파생 함수를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">열거형 값이 범위에서 벗어난 경우</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /> 열거형 값인 <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />, <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /> 또는 <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /> 중 하나입니다. 기본값은 <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.KeySize">
      <summary>비대칭 알고리즘에서 사용하는 키 모듈러스의 크기(비트 단위)를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" />는 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />에서 허용되지 않습니다.</exception>
      <returns>비대칭 알고리즘에서 사용하는 키 모듈러스의 크기(비트 단위)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
      <summary>키 파생에 사용되는 레이블 값을 가져오거나 설정합니다.</summary>
      <returns>레이블 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
      <summary>다른 <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 개체에서 공유 비밀 계약을 생성하는 데 사용할 수 있는 공개 키를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 개체의 이 인스턴스에 연결된 공개 키입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
      <summary>키 자료를 생성할 때 비밀 계약에 추가되는 값을 가져오거나 설정합니다.</summary>
      <returns>비밀 계약에 추가되는 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
      <summary>키 자료를 파생할 때 비밀 계약의 시작 부분에 추가될 값을 가져오거나 설정합니다.</summary>
      <returns>키를 파생할 때 비밀 계약의 시작 부분에 추가될 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
      <summary>키 자료를 파생할 때 사용될 시드 값을 가져오거나 설정합니다.</summary>
      <returns>시드 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
      <summary>비밀 계약을 HMAC(해시 기반 메시지 인증 코드)로 사용하여 키 자료를 파생하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>비밀 계약을 HMAC 키로 사용하여 키 자료를 파생하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey">
      <summary>
        <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 클래스에 사용할 ECDH(Elliptic Curve Diffie-Hellman) 공개 키를 지정합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ExportExplicitParameters">
      <summary>
        <see cref="T:System.Security.Cryptography.ECCurve" /> 개체에 사용되는 키 및 명시적 곡선 매개 변수를 <see cref="T:System.Security.Cryptography.ECParameters" /> 개체로 내보냅니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">메서드가 곡선 값을 가져올 수 없습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">이 플랫폼에서는 명시적 내보내기가 지원되지 않습니다. Windows 10 이상이 필요합니다.</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.ECCurve" /> 개체에 사용되는 키 및 명시적 곡선 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ExportParameters">
      <summary>
        <see cref="T:System.Security.Cryptography.ECCurve" /> 개체가 사용하는 키를 <see cref="T:System.Security.Cryptography.ECParameters" /> 개체로 내보냅니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">메서드가 곡선 값을 가져올 수 없습니다.</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.ECCurve" /> 개체에 사용되는 키 및 명명된 곡선 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromByteArray(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>공개 키가 들어 있는 바이트 배열을 지정된 형식에 따라 <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> 개체로 변환합니다.</summary>
      <param name="publicKeyBlob">ECDH(Elliptic Curve Diffie-Hellman) 공개 키가 들어 있는 바이트 배열입니다.</param>
      <param name="format">키 BLOB의 형식을 지정하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="publicKeyBlob" /> 또는 <paramref name="format" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="publicKeyBlob" /> 매개 변수에 <see cref="T:System.Security.Cryptography.ECDiffieHellman" /> 키가 들어 있지 않은 경우</exception>
      <returns>바이트 배열에 serialize된 ECDH 공개 키가 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromXmlString(System.String)">
      <summary>XML 문자열을 <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> 개체로 변환합니다.</summary>
      <param name="xml">ECDH(Elliptic Curve Diffie-Hellman) 키가 들어 있는 XML 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xml" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="xml" /> 매개 변수에 <see cref="T:System.Security.Cryptography.ECDiffieHellman" /> 키가 지정되지 않은 경우</exception>
      <returns>특정 XML에 지정된 ECDH 공개 키가 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.Import">
      <summary>
        <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> 개체를 <see cref="T:System.Security.Cryptography.CngKey" /> 개체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> 개체가 나타내는 키가 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ToXmlString">
      <summary>
        <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> 공개 키를 RFC 4050 형식의 XML 문자열로 serialize합니다.</summary>
      <returns>serialize된 <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> 공개 키가 들어 있는 XML 문자열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.BlobFormat">
      <summary>
        <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> 개체의 키 BLOB 형식을 가져옵니다.</summary>
      <returns>키 BLOB을 나타낸 형식입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
      <summary>
        <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 클래스에서 비밀 계약을 키 자료로 변환하는 데 사용할 키 파생 함수를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash">
      <summary>키 자료를 생성하는 데 사용된 해시 알고리즘입니다. <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> 속성은 사용할 알고리즘의 이름을 지정합니다. 알고리즘 이름을 지정하지 않으면 <see cref="T:System.Security.Cryptography.SHA256" />이 기본 알고리즘으로 사용됩니다. <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> 및 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" /> 속성을 지정할 수도 있지만 필요하지는 않습니다. 생성되는 키 자료의 양은 지정된 알고리즘에 대한 해시 값의 크기와 같습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
      <summary>HMAC(해시 기반 메시지 인증 코드) 알고리즘을 사용하여 키 자료를 생성합니다. <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> 속성은 사용할 키를 지정합니다. 이 속성을 설정하거나 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> 속성을 <see langword="true" />로 설정해야 합니다. 이렇게 하지 않으면 <see cref="T:System.Security.Cryptography.CryptographicException" />를 사용할 때 <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />이 throw됩니다. 두 속성을 모두 설정하면 비밀 계약이 HMAC 키로 사용됩니다. <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> 및 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" /> 속성을 지정할 수도 있지만 필요하지는 않습니다. 생성되는 키 자료의 양은 HMAC 값의 크기와 같습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls">
      <summary>TLS(Transport Layer Security) 프로토콜을 사용하여 키 자료를 생성합니다. <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> 및 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> 속성을 설정해야 합니다. 이렇게 하지 않으면 <see cref="T:System.Security.Cryptography.CryptographicException" />를 사용할 때 <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />이 throw됩니다. 이 값은 160비트의 키 자료를 생성합니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.ECDsaCng">
      <summary>ECDSA(타원 곡선 디지털 서명 알고리즘)의 CNG(Cryptography Next Generation) 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor">
      <summary>임의의 키 쌍을 사용하여 <see cref="T:System.Security.Cryptography.ECDsaCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation) 클래스는 이 시스템에서 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
      <summary>지정된 대상 키 크기를 사용하여 <see cref="T:System.Security.Cryptography.ECDsaCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keySize">키 크기입니다. 유효한 키 크기는 256, 384 및 521비트입니다.</param>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation) 클래스는 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keySize" />에서 잘못된 길이를 지정합니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CngKey" /> 개체를 사용하여 <see cref="T:System.Security.Cryptography.ECDsaCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="key">현재 개체에 의해 수행되는 암호화 작업의 입력으로 사용할 키입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" />가 ECDSA(타원 곡선 디지털 서명 알고리즘) 그룹을 지정하지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation) 클래스는 이 시스템에서 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
      <summary>해당 퍼블릭/프라이빗 키 쌍이 지정된 곡선에서 생성되는 <see cref="T:System.Security.Cryptography.ECDsaCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="curve">퍼블릭/프라이빗 키 쌍을 생성하는 데 사용되는 곡선입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" />의 유효성을 검사할 수 없습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="curve" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="curve" />에 FriendlyName이 있는 Oid가 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
      <summary>ECC(타원 곡선 암호화) 개체에 사용되는 키 및 명시적 곡선 매개 변수를 <see cref="T:System.Security.Cryptography.ECParameters" /> 개체로 내보냅니다.</summary>
      <param name="includePrivateParameters">private 매개 변수를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">곡선 값을 가져오는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">이 플랫폼에서는 명시적 내보내기가 지원되지 않습니다. Windows 10 이상이 필요합니다.</exception>
      <returns>ECC 개체에 사용되는 키 및 명시적 곡선 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
      <summary>ECC(타원 곡선 암호화) 개체에 사용되는 키를 <see cref="T:System.Security.Cryptography.ECParameters" /> 개체로 내보냅니다. 키가 명명된 곡선으로 작성된 경우 <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> 필드에는 명명된 곡선 매개 변수가 포함되고 그렇지 않으면 명시적 매개 변수가 포함됩니다.</summary>
      <param name="includePrivateParameters">private 매개 변수를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">곡선 값을 가져오는 동안 오류가 발생했습니다.</exception>
      <returns>ECC 개체에 사용되는 키 및 명명된 곡선 매개 변수입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>지정된 형식을 사용하여 XML 문자열에서 키 정보를 역직렬화합니다.</summary>
      <param name="xml">역직렬화할 XML 기반 키 정보입니다.</param>
      <param name="format">XML 문자열의 형식을 지정하는 열거형 값 중 하나입니다. 현재 사용 가능한 형식은 <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />뿐입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xml" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" />에 지정된 형식이 잘못된 경우. <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /> 값만 사용할 수 있습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
      <summary>지정된 곡선에 대해 사용 후 삭제되는 퍼블릭/프라이빗 키 쌍을 새로 생성하여 현재 키를 바꿉니다.</summary>
      <param name="curve">키를 생성하는 데 사용할 곡선입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="curve" />의 유효성을 검사할 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
      <summary>매개 변수 구조에 대한 새 <see cref="T:System.Security.Cryptography.CngKey" />를 만들어 현재 인스턴스에서 사용 중인 기존 키를 바꿉니다.</summary>
      <param name="parameters">곡선 매개 변수입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="parameters" />에 유효한 값이 포함되어 있지 않습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="parameters" />가 가져올 수 없는 곡선을 참조합니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="parameters" />가 이 플랫폼에서 지원되지 않는 곡선을 참조합니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
      <summary>지정된 데이터에 대한 서명을 생성합니다.</summary>
      <param name="data">서명할 메시지 데이터입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">인스턴스와 연결된 키 정보에는 프라이빗 키가 없습니다.</exception>
      <returns>지정된 데이터에 대한 디지털 서명입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 오프셋에서 시작하여 지정된 길이의 데이터에 대한 디지털 서명을 생성합니다.</summary>
      <param name="data">서명할 메시지 데이터입니다.</param>
      <param name="offset">문자열에서 서명을 시작할 위치입니다.</param>
      <param name="count">문자열에서 <paramref name="offset" />부터 서명할 길이(문자 단위)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> 또는 <paramref name="offset" />으로 인해 데이터 문자열의 경계를 넘어 읽게 된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">인스턴스와 연결된 키 정보에는 프라이빗 키가 없습니다.</exception>
      <returns>지정된 길이의 데이터에 대한 디지털 서명입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
      <summary>스트림 끝까지 읽어들여 지정된 데이터 스트림에 대한 서명을 생성합니다.</summary>
      <param name="data">서명할 데이터 스트림입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">인스턴스와 연결된 키 정보에는 프라이빗 키가 없습니다.</exception>
      <returns>지정된 데이터 스트림에 대한 디지털 서명입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
      <summary>지정된 해시 값의 서명을 생성합니다.</summary>
      <param name="hash">서명할 데이터의 해시 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">인스턴스와 연결된 키 정보에는 프라이빗 키가 없습니다.</exception>
      <returns>지정된 해시 값의 디지털 서명입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>지정된 형식을 사용하여 키 정보를 XML 문자열로 serialize합니다.</summary>
      <param name="format">XML 문자열의 형식을 지정하는 열거형 값 중 하나입니다. 현재 사용 가능한 형식은 <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />뿐입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="format" />에 지정된 형식이 잘못된 경우. <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /> 값만 사용할 수 있습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
      <returns>요청된 형식에 따라 XML 문자열로 serialize한 키 정보가 들어 있는 문자열 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
      <summary>지정된 데이터의 디지털 서명을 확인합니다.</summary>
      <param name="data">서명된 데이터입니다.</param>
      <param name="signature">확인할 서명입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> 또는 <paramref name="signature" />가 <see langword="null" />인 경우</exception>
      <returns>서명이 유효한 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
      <summary>지정된 오프셋에서 시작하여 지정된 길이의 데이터에 대한 서명을 확인합니다.</summary>
      <param name="data">서명된 데이터입니다.</param>
      <param name="offset">데이터에서 서명된 데이터가 시작되는 위치입니다.</param>
      <param name="count">데이터에서 <paramref name="offset" />부터 서명할 길이(문자 단위)입니다.</param>
      <param name="signature">확인할 서명입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 또는 <paramref name="count" />가 0보다 작은 경우  
  
또는 
 <paramref name="offset" /> 또는 <paramref name="count" />가 <paramref name="data" /> 매개 변수에 전달된 바이트 배열의 길이보다 큰 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> 또는 <paramref name="signature" />가 <see langword="null" />인 경우</exception>
      <returns>서명이 유효한 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
      <summary>스트림 끝까지 읽어들여 지정된 데이터 스트림의 디지털 서명을 확인합니다.</summary>
      <param name="data">서명된 데이터 스트림입니다.</param>
      <param name="signature">확인할 서명입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> 또는 <paramref name="signature" />가 <see langword="null" />인 경우</exception>
      <returns>서명이 유효한 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
      <summary>디지털 서명이 현재 키와 제공된 데이터 해시에 적절한지 확인합니다.</summary>
      <param name="hash">확인할 데이터의 해시 값입니다.</param>
      <param name="signature">서명 해시 값에 대해 확인할 데이터의 디지털 서명입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> 또는 <paramref name="signature" />가 <see langword="null" />인 경우</exception>
      <returns>서명이 유효한 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
      <summary>데이터에 서명하고 확인하는 데 사용할 해시 알고리즘을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">값이 <see langword="null" />인 경우</exception>
      <returns>해시 알고리즘을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.Key">
      <summary>데이터에 서명하거나 확인할 때 사용할 키를 가져오거나 설정합니다.</summary>
      <returns>키를 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.KeySize">
      <summary>비대칭 알고리즘에서 사용하는 키 모듈러스의 크기(비트 단위)를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" />는 <see cref="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes" />에서 허용되지 않습니다.</exception>
      <returns>비대칭 알고리즘에서 사용하는 키 모듈러스의 크기(비트 단위)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes">
      <summary>
        <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> 속성 setter에서 지원하는 키 크기(비트)를 가져옵니다.</summary>
      <returns>속성 setter에서 지 원하는 키 크기를 포함 하는 배열입니다 <see cref="P:System.Security.Cryptography.ECDsaCng.KeySize" /> .</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECKeyXmlFormat">
      <summary>타원 곡선(Elliptic Curve) 키에 대한 XML serialization 형식을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050">
      <summary>RFC 4050, "Using the Elliptic Curve Signature Algorithm (ECDSA) for XML Digital Signatures"에 설명된 XML serialization 형식입니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.RSACng">
      <summary>RSA 알고리즘의 CNG(Cryptography Next Generation) 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.#ctor">
      <summary>난수 2,048비트 키 쌍을 사용하여 <see cref="T:System.Security.Cryptography.RSACng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.#ctor(System.Int32)">
      <summary>지정한 크기의 임의로 생성된 키를 사용하여 <see cref="T:System.Security.Cryptography.RSACng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keySize">생성할 키의 크기(비트)입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keySize" />가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>지정된 키를 사용하여 <see cref="T:System.Security.Cryptography.RSACng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="key">RSA 작업에 사용할 키입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" />가 유효한 RSA 키가 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>지정된 패딩 모드를 사용하여 입력 데이터를 해독합니다.</summary>
      <param name="data">해독할 데이터입니다.</param>
      <param name="padding">패딩 모드입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" />이(가) <see langword="null" />인 경우
  
또는 
 <paramref name="padding" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" />.<see cref="P:System.Security.Cryptography.RSAEncryptionPadding.Mode" /> 가 또는와 <see cref="F:System.Security.Cryptography.RSAEncryptionPaddingMode.Pkcs1" /> 같지 <see cref="F:System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep" /> 않은 경우</exception>
      <returns>암호 해독된 데이터입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>지정된 패딩을 사용하여 입력 데이터를 암호화합니다.</summary>
      <param name="data">암호화할 데이터입니다.</param>
      <param name="padding">패딩 모드입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" />이(가) <see langword="null" />인 경우
  
또는 
 <paramref name="padding" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" />.<see cref="P:System.Security.Cryptography.RSAEncryptionPadding.Mode" /> 가 또는와 <see cref="F:System.Security.Cryptography.RSAEncryptionPaddingMode.Pkcs1" /> 같지 <see cref="F:System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep" /> 않은 경우</exception>
      <returns>암호화된 데이터입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)">
      <summary>RSA 개체가 사용하는 키를 <see cref="T:System.Security.Cryptography.RSAParameters" /> 개체로 내보냅니다.</summary>
      <param name="includePrivateParameters">private 매개 변수를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>RSA 개체가 사용하는 키입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)">
      <summary>매개 변수 구조에 대한 새 <see cref="T:System.Security.Cryptography.CngKey" />를 만들어 현재 인스턴스에서 사용 중인 기존 키를 바꿉니다.</summary>
      <param name="parameters">RSA 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="parameters" />가 지수와 모듈러스를 모두 포함하지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="parameters" />가 유효한 RSA 키가 아닙니다.  
  
또는 
 <paramref name="parameters" />가 전체 키 쌍이고 기본 KSP가 사용되었습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>지정된 해시 알고리즘 및 패딩 모드를 사용하여 해시된 데이터에 서명합니다.</summary>
      <param name="hash">서명할 해시입니다.</param>
      <param name="hashAlgorithm">해시 알고리즘 이름입니다.</param>
      <param name="padding">패딩 모드입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="padding" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" />의 <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> 속성 값이 <see langword="null" />이거나 <see cref="F:System.String.Empty" />입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" />가 <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /> 또는 <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pss" />와 같지 않습니다.</exception>
      <returns>서명된 데이터입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>서명된 후 지정된 알고리즘 및 패딩 모드로 이미 해시된 데이터를 확인합니다.</summary>
      <param name="hash">확인할 해시입니다.</param>
      <param name="signature">데이터의 서명입니다.</param>
      <param name="hashAlgorithm">해시 알고리즘 이름입니다.</param>
      <param name="padding">패딩 모드입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="signature" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="padding" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" />의 <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> 속성 값이 <see langword="null" />이거나 <see cref="F:System.String.Empty" />입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" />가 <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /> 또는 <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pss" />와 같지 않습니다.  
  
또는 
서명 형식이 잘못된 경우 (.NET Framework 4.6 및 4.6.1에만 해당) .NET Framework 4.6.2부터 이 메서드는 서명 형식이 잘못될 경우 <see langword="false" />를 반환합니다.</exception>
      <returns>해시에 대해 서명이 확인되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACng.Key">
      <summary>
        <see cref="T:System.Security.Cryptography.RSACng" /> 개체가 수행하는 모든 암호화 작업에 사용할 키를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.RSACng" /> 개체가 사용하는 키입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACng.LegalKeySizes">
      <summary>이 RSA 구현에서 지원되는 키 크기(비트)를 가져옵니다.</summary>
      <returns>알고리즘에서 지원하는 키 크기가 들어 있는 배열입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.TripleDESCng">
      <summary>3DES(Triple Data Encryption Standard) 알고리즘의 CNG(Cryptography Next Generation) 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor">
      <summary>임시 키를 사용하여 <see cref="T:System.Security.Cryptography.TripleDESCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor(System.String)">
      <summary>기존의 영구 3DES 키를 나타내는 지정된 키 이름을 사용하여 <see cref="T:System.Security.Cryptography.TripleDESCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyName">키의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider)">
      <summary>기존의 영구 3DES 키를 나타내는 지정된 키 이름과 지정된 KSP(키 스토리지 공급자)를 사용하여 <see cref="T:System.Security.Cryptography.TripleDESCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyName">키의 이름입니다.</param>
      <param name="provider">키를 포함하는 KSP입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="provider" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>기존의 영구 3DES 키를 나타내는 지정된 키 이름, 지정된 KSP(키 스토리지 공급자) 및 키 열기 옵션을 사용하여 <see cref="T:System.Security.Cryptography.TripleDESCng" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyName">키의 이름입니다.</param>
      <param name="provider">키를 포함하는 KSP입니다.</param>
      <param name="openOptions">키가 열리는 위치(머신 또는 사용자 스토리지) 및 UI 프롬프트를 표시하지 않을지 여부와 같은 키 열기 옵션을 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="provider" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">CNG(Cryptography Next Generation)은 이 시스템에서 지원되지 않습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">다른 모든 오류입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateDecryptor">
      <summary>현재 키 및 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 3DES 암호 해독기 개체를 만듭니다.</summary>
      <returns>대칭 3DES 암호 해독기 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키 및 IV(초기화 벡터)를 사용하여 대칭 3DES 암호 해독기 개체를 만듭니다.</summary>
      <param name="rgbKey">3DES 알고리즘에 사용할 비밀 키입니다. 키 크기는 192비트여야 합니다.</param>
      <param name="rgbIV">3DES 알고리즘에 사용할 초기화 벡터입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" />가 이 알고리즘에 유효한 크기가 아닌 경우  
  
또는 
 <paramref name="rgbIV" /> 크기가 이 알고리즘에 대한 블록 크기와 일치하지 않는 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" />가 이 알고리즘의 알려진 weak키이며 사용할 수 없는 경우  
  
또는 
 <paramref name="rgbIV" />이(가) <see langword="null" />인 경우</exception>
      <returns>대칭 3DES 암호 해독기 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateEncryptor">
      <summary>현재 키 및 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 사용하여 대칭 3DES 암호기 개체를 만듭니다.</summary>
      <returns>대칭 3DES 암호기 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>지정된 키 및 IV(초기화 벡터)를 사용하여 대칭 3DES 암호기 개체를 만듭니다.</summary>
      <param name="rgbKey">3DES 알고리즘에 사용할 비밀 키입니다. 키 크기는 192비트여야 합니다.</param>
      <param name="rgbIV">3DES 알고리즘에 사용할 초기화 벡터입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgbKey" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rgbKey" />가 이 알고리즘에 유효한 크기가 아닌 경우  
  
또는 
 <paramref name="rgbIV" /> 크기가 이 알고리즘에 대한 블록 크기와 일치하지 않는 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="rgbKey" />가 이 알고리즘의 알려진 weak키이며 사용할 수 없는 경우  
  
또는 
 <paramref name="rgbIV" />이(가) <see langword="null" />인 경우</exception>
      <returns>대칭 3DES 암호기 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.GenerateIV">
      <summary>3DES 알고리즘에 사용할 무작위 IV(초기화 벡터)를 생성합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCng.GenerateKey">
      <summary>3DES 알고리즘에 사용할 랜덤 키를 생성합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCng.Key">
      <summary>
        <see cref="T:System.Security.Cryptography.TripleDESCng" /> 알고리즘에 대한 키를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.TripleDESCng" /> 알고리즘에 대한 키입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCng.KeySize">
      <summary>
        <see cref="T:System.Security.Cryptography.TripleDESCng" /> 알고리즘에서 사용하는 비밀 키의 크기(비트)를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.TripleDESCng" /> 알고리즘에서 사용하는 비밀 키의 크기(비트)입니다.</returns>
    </member>
  </members>
</doc>