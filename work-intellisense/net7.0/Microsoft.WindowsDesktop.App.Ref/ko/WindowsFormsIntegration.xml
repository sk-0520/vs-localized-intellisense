<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>WindowsFormsIntegration</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 형식을 UI 자동화에 공개합니다.</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer.#ctor(System.Windows.Forms.Integration.WindowsFormsHost)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="owner">이 <see cref="T:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer" />와 연결된 <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />입니다.</param>
    </member>
    <member name="T:System.Windows.Forms.Integration.ChildChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Forms.Integration.WindowsFormsHost.ChildChanged" /> 및 <see cref="E:System.Windows.Forms.Integration.ElementHost.ChildChanged" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.ChildChangedEventArgs.#ctor(System.Object)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.ChildChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="previousChild">새 값이 할당되기 전의 <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Child" /> 속성 값입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Integration.ChildChangedEventArgs.PreviousChild">
      <summary>새 값이 할당되기 전의 <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Child" /> 속성 값을 가져옵니다.</summary>
      <returns>새 값이 할당되기 전의 <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Child" /> 속성 값입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Integration.ElementHost">
      <summary>WPF(Windows Presentation Foundation) 요소를 호스트하는 데 사용할 수 있는 Windows Forms 컨트롤입니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.BindingContextChanged">
      <summary>
        <see cref="T:System.Windows.Forms.BindingContext" /> 속성 값이 변경되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.ChildChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Child" /> 속성이 설정되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Click">
      <summary>컨트롤을 클릭하면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.ClientSizeChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.ClientSize" /> 속성 값이 변경되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.ControlAdded">
      <summary>
        <see cref="T:System.Windows.Forms.Control.ControlCollection" />에 새로운 컨트롤이 추가되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.ControlRemoved">
      <summary>
        <see cref="T:System.Windows.Forms.Control.ControlCollection" />에서 컨트롤이 제거되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.CursorChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.Cursor" /> 속성 값이 변경되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.DoubleClick">
      <summary>컨트롤을 두 번 클릭하면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.DragDrop">
      <summary>끌어서 놓기 작업이 완료될 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.DragEnter">
      <summary>개체를 컨트롤의 범위 안으로 끌 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.DragLeave">
      <summary>컨트롤의 범위 밖으로 개체를 끌 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.DragOver">
      <summary>개체를 컨트롤의 범위 위로 끌 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Enter">
      <summary>컨트롤이 입력되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.FontChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.Font" /> 속성 값이 변경되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.ForeColorChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.ForeColor" /> 속성 값이 변경되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.GiveFeedback">
      <summary>끌기 작업을 수행하는 동안 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.GotFocus">
      <summary>컨트롤이 포커스를 받으면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Invalidated">
      <summary>컨트롤을 다시 그려야 할 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.KeyDown">
      <summary>컨트롤에 포커스가 있을 때 키를 누르면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.KeyPress">
      <summary>컨트롤에 포커스가 있을 때 키를 누르면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.KeyUp">
      <summary>컨트롤에 포커스가 있을 때 키를 눌렀다 놓으면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Layout">
      <summary>컨트롤이 자식 컨트롤의 위치를 변경하면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Leave">
      <summary>입력 포커스가 컨트롤을 벗어나면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.LostFocus">
      <summary>컨트롤이 포커스를 잃을 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseCaptureChanged">
      <summary>컨트롤이 마우스 캡처를 잃거나 얻을 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseClick">
      <summary>컨트롤을 마우스로 클릭할 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseDoubleClick">
      <summary>컨트롤을 마우스로 두 번 클릭할 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseDown">
      <summary>마우스 포인터가 컨트롤 위에 있을 때 마우스 단추를 클릭하면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseEnter">
      <summary>마우스 포인터가 컨트롤에 들어가면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseHover">
      <summary>마우스 포인터가 컨트롤 위에 있을 때 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseLeave">
      <summary>마우스 포인터가 컨트롤을 벗어나면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseMove">
      <summary>마우스 포인터를 컨트롤 위로 이동하면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseUp">
      <summary>마우스 포인터가 컨트롤 위에 있을 때 마우스 단추를 눌렀다 놓으면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseWheel">
      <summary>컨트롤에 포커스가 있을 때 마우스 휠을 움직이면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.PaddingChanged">
      <summary>컨트롤의 안쪽 여백이 변경되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Paint">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.ElementHost" /> 컨트롤을 다시 그리면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.PreviewKeyDown">
      <summary>이 컨트롤에 포커스가 있는 동안 키를 누르면 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 이벤트 전에 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.QueryContinueDrag">
      <summary>끌어서 놓기 작업 중에 발생하며 끌기 소스가 끌어서 놓기 작업을 취소해야 할지를 결정하도록 합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Resize">
      <summary>컨트롤의 크기를 조정하면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.RightToLeftChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.RightToLeft" /> 속성 값이 변경되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.SizeChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.Size" /> 속성 값이 변경되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.TextChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.Text" /> 속성 값이 변경되면 발생합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.ElementHost" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.ElementHost" /> 컨트롤에서 사용된 시스템 리소스를 즉시 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.EnableModelessKeyboardInterop(System.Windows.Window)">
      <summary>
        <see cref="T:System.Windows.Window" />가 Windows Forms에서 모덜리스 창으로 열리는 경우 키보드 메시지를 제대로 받도록 합니다.</summary>
      <param name="window">모덜리스 창으로 열릴 WPF(Windows Presentation Foundation) 창입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.GetPreferredSize(System.Drawing.Size)">
      <summary>기본 클래스 구현인 <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />를 재정의하여 호스팅된 WPF(Windows Presentation Foundation) 요소에 올바른 레이아웃 동작을 제공합니다.</summary>
      <param name="proposedSize">WPF 요소의 사용자 지정 크기 영역입니다.</param>
      <returns>
        <paramref name="proposedSize" />에 지정된 제약 조건에서 <see cref="T:System.Drawing.Size" /> 컨트롤에 의해 계산된 <see cref="T:System.Windows.Forms.Integration.ElementHost" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.IsInputChar(System.Char)">
      <summary>호스팅된 요소에 모든 WM_CHAR 키 메시지가 전달되었는지 확인합니다.</summary>
      <param name="charCode">전달할 문자입니다.</param>
      <returns>모든 경우에 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnEnabledChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e">이벤트 데이터입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Integration.ElementHost.GotFocus" /> 이벤트를 발생시킵니다.</summary>
      <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnHandleCreated(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 이벤트를 발생시킵니다.</summary>
      <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnLeave(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Leave" /> 이벤트를 발생시킵니다.</summary>
      <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Paint" /> 이벤트를 발생시킵니다.</summary>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>컨트롤의 배경을 그립니다.</summary>
      <param name="pevent">그리려는 컨트롤에 대한 정보가 포함된 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnPrint(System.Windows.Forms.PaintEventArgs)">
      <summary>제공된 <see cref="T:System.Drawing.Graphics" /> 개체를 사용하여 컨트롤을 렌더링합니다.</summary>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnPropertyChanged(System.String,System.Object)">
      <summary>속성이 변경되었음을 <see cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />에 알립니다.</summary>
      <param name="propertyName">변경되었으며 변환이 필요한 속성의 이름입니다.</param>
      <param name="value">속성의 새 값입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnVisibleChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>일반 Windows Forms 처리를 수행하기 전에 호스팅된 요소가 명령을 처리할 수 있도록 명령 키를 처리합니다.</summary>
      <param name="msg">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
      <param name="keyData">처리할 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</param>
      <returns>문자가 WPF(Windows Presentation Foundation) 바로 가기 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.ProcessMnemonic(System.Char)">
      <summary>니모닉 문자를 처리하여 일반 Windows Forms 처리를 수행하기 전에 호스팅된 요소가 니모닉을 처리할 수 있게 합니다.</summary>
      <param name="charCode">처리할 문자입니다.</param>
      <returns>문자가 WPF(Windows Presentation Foundation) 바로 가기 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.ScaleCore(System.Single,System.Single)">
      <summary>부모 컨테이너와 호스팅된 Windows Forms 컨트롤의 크기를 조정합니다.</summary>
      <param name="dx">X축의 배율 인수입니다.</param>
      <param name="dy">Y축의 배율 인수입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.Select(System.Boolean,System.Boolean)">
      <summary>호스팅된 요소를 활성화합니다.</summary>
      <param name="directed">선택할 컨트롤의 방향을 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="forward">탭 순서에서 앞으로 이동하려면 <see langword="true" />이고, 뒤로 이동하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.WndProc(System.Windows.Forms.Message@)">
      <summary>Windows 메시지를 처리합니다.</summary>
      <param name="m">처리할 메시지입니다.</param>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.AutoSize">
      <summary>전체 내용이 표시되도록 컨트롤의 크기를 자동으로 조정할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>컨트롤이 해당 콘텐츠에 맞도록 크기가 조정되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.BackColorTransparent">
      <summary>호스팅된 요소의 배경이 투명한지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>호스팅된 요소의 배경이 투명하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.CanEnableIme">
      <summary>IME 지원을 사용하도록 <see cref="P:System.Windows.Forms.Control.ImeMode" /> 속성을 활성 값으로 설정할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Integration.ElementHost" />에 <see cref="P:System.Windows.Forms.Integration.ElementHost.Child" /> 요소가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.Child">
      <summary>
        <see cref="T:System.Windows.UIElement" /> 컨트롤에서 호스팅하는 <see cref="T:System.Windows.Forms.Integration.ElementHost" />를 가져오거나 설정합니다.</summary>
      <returns>호스팅되는 WPF(Windows Presentation Foundation) 요소입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.DefaultSize">
      <summary>컨트롤의 기본 크기를 가져옵니다.</summary>
      <returns>컨트롤의 기본 <see cref="T:System.Drawing.Size" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.Focused">
      <summary>컨트롤에 입력 포커스가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컨트롤에 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.HostContainer">
      <summary>호스팅된 WPF(Windows Presentation Foundation) 요소의 부모 컨테이너를 가져옵니다.</summary>
      <returns>부모 컨테이너입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.ImeModeBase">
      <summary>컨트롤의 IME 모드를 가져오거나 설정합니다.</summary>
      <returns>컨트롤의 IME 모드입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.PropertyMap">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.ElementHost" /> 컨트롤에서 호스팅된 WPF(Windows Presentation Foundation) 요소에 영향을 주는 속성 설정 방법을 결정하는 속성 맵을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Integration.PropertyMap" />를 호스팅된 WPF 요소의 속성에 매핑하는 <see cref="T:System.Windows.Forms.Integration.ElementHost" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs">
      <summary>선택적 예외 발생을 지원하는 <see cref="T:System.EventArgs" /> 클래스의 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="throwException">
        <paramref name="exception" />에 지정된 <see cref="T:System.Exception" />을 발생시키려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="exception">발생시킬 <see cref="T:System.Exception" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception">
      <summary>이 <see cref="T:System.Exception" />와 연결된 <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Exception" />와 연결된 <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException">
      <summary>
        <see cref="T:System.Exception" /> 속성에 지정된 <see cref="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" />을 발생시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" />이 발생하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Integration.LayoutExceptionEventArgs">
      <summary>
        <see cref="E:System.Windows.Forms.Integration.WindowsFormsHost.LayoutError" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.LayoutExceptionEventArgs.#ctor(System.Exception)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.LayoutExceptionEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="exception">발생시킬 <see cref="T:System.Exception" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="T:System.Windows.Forms.Integration.PropertyMap">
      <summary>Windows Forms 컨트롤 및 WPF(Windows Presentation Foundation) 요소 간 속성 값을 변환하는 방법을 제공합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.PropertyMap.PropertyMappingError">
      <summary>속성 변환기에 의해 예외가 발생하는 경우에 발생합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.#ctor(System.Object)">
      <summary>지정된 소스 개체를 사용하여 <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source">변환할 속성이 있는 개체입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Add(System.String,System.Windows.Forms.Integration.PropertyTranslator)">
      <summary>지정된 속성에 대한 <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> 대리자를 <see cref="T:System.Windows.Forms.Integration.PropertyMap" />에 추가합니다.</summary>
      <param name="propertyName">매핑할 속성의 이름입니다.</param>
      <param name="translator">
        <paramref name="propertyName" />이 변경될 때 호출되는 <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> 대리자입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="propertyName" />에 기존 매핑이 있습니다.</exception>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Apply(System.String)">
      <summary>소스 개체의 현재 속성 값에 따라 지정된 속성에 대한 속성 변환기를 실행합니다.</summary>
      <param name="propertyName">변환할 속성의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyName" />에 의해 지정된 속성이 <see cref="P:System.Windows.Forms.Integration.PropertyMap.SourceObject" />에 없습니다.</exception>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.ApplyAll">
      <summary>소스 개체의 현재 속성 값에 따라 매핑된 각 속성에 대한 속성 변환기를 실행합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Clear">
      <summary>모든 속성 매핑을 제거합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Contains(System.String)">
      <summary>지정된 속성이 매핑되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="propertyName">검색할 속성의 이름입니다.</param>
      <returns>
        <paramref name="propertyName" />이 속성 맵에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Remove(System.String)">
      <summary>매핑에서 지정된 속성을 삭제합니다.</summary>
      <param name="propertyName">제거할 속성의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Reset(System.String)">
      <summary>지정된 속성에 대한 기본 속성 매핑을 복원합니다.</summary>
      <param name="propertyName">복원할 속성의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.ResetAll">
      <summary>기본 속성 매핑을 복원합니다.</summary>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMap.DefaultTranslators">
      <summary>기본적으로 정의된 속성 매핑의 컬렉션을 가져옵니다.</summary>
      <returns>속성 이름을 해당 <see cref="T:System.Collections.Generic.Dictionary`2" /> 대리자에 매핑하는 <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> 입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMap.Item(System.String)">
      <summary>지정된 속성의 <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> 대리자를 가져오거나 설정합니다.</summary>
      <param name="propertyName">매핑할 속성의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> 이(가) <see langword="null" /> 또는 빈 문자열이고, 지정된 <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> 대리자가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyName" />에 의해 지정된 속성이 <see cref="P:System.Windows.Forms.Integration.PropertyMap.SourceObject" />에 없습니다.</exception>
      <returns>
        <paramref name="propertyName" />에 지정된 속성에 해당하는 <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> 대리자입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMap.Keys">
      <summary>
        <see cref="T:System.Collections.ICollection" /> 컬렉션의 값이 포함된 <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 컬렉션의 속성 이름을 포함하는 <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMap.SourceObject">
      <summary>변환할 속성이 있는 개체를 가져옵니다.</summary>
      <returns>변환할 속성이 있는 개체입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMap.Values">
      <summary>
        <see cref="T:System.Collections.ICollection" /> 컬렉션의 속성 변환기가 포함된 <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> 을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 컬렉션의 속성 변환기가 포함된 <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> 입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs">
      <summary>
        <see cref="E:System.Windows.Forms.Integration.PropertyMap.PropertyMappingError" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs.#ctor(System.Exception,System.String,System.Object)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="exception">발생시킬 <see cref="T:System.Exception" />입니다.</param>
      <param name="propertyName">속성 매핑 오류와 연결된 속성 이름입니다.</param>
      <param name="propertyValue">속성 매핑 오류와 연결된 속성 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" />이 <see langword="null" />인 경우. <paramref name="propertyName" />이 <see langword="null" />이거나 빈 문자열을 참조하는 경우</exception>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs.PropertyName">
      <summary>속성 매핑 오류와 연결된 속성의 이름을 가져옵니다.</summary>
      <returns>속성 매핑 오류와 연결된 속성의 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs.PropertyValue">
      <summary>속성 매핑 오류와 연결된 속성 값을 가져옵니다.</summary>
      <returns>속성 매핑 오류와 연결된 속성 값을 나타내는 개체입니다.</returns>
    </member>
    <member name="T:System.Windows.Forms.Integration.PropertyTranslator">
      <summary>호스트 컨트롤의 매핑된 속성에 변환 기능을 제공합니다.</summary>
      <param name="host">속성이 매핑될 호스트 컨트롤입니다. 호스트 컨트롤은 <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 또는 <see cref="T:System.Windows.Forms.Integration.ElementHost" />입니다.</param>
      <param name="propertyName">변환될 속성의 이름입니다.</param>
      <param name="value">속성의 새 값입니다.</param>
    </member>
    <member name="T:System.Windows.Forms.Integration.WindowsFormsHost">
      <summary>WPF 페이지에서 Windows Forms 컨트롤을 호스트할 수 있는 요소입니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.WindowsFormsHost.ChildChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Child" /> 속성이 설정되면 발생합니다.</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.WindowsFormsHost.LayoutError">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />에서 지원되지 않는 기울이기, 회전 등의 레이아웃 오류가 발생하는 경우 발생합니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Background" /> 종속성 속성을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.FontFamily" /> 종속성 속성을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.FontSize" /> 종속성 속성을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.FontStyle" /> 종속성 속성을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.FontWeight" /> 종속성 속성을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Foreground" /> 종속성 속성을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Padding" /> 종속성 속성을 나타냅니다.</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.TabIndexProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.TabIndex" /> 종속성 속성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.ArrangeOverride(System.Windows.Size)">
      <summary>파생 클래스에서 구현되는 경우 자식 요소를 배치하고 <see cref="T:System.Windows.FrameworkElement" /> 파생 클래스의 크기를 결정합니다.</summary>
      <param name="finalSize">이 요소에서 자신과 자식을 정렬하는 데 사용해야 하는 부모 내의 마지막 영역입니다.</param>
      <returns>사용되는 실제 크기입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>호스팅된 Windows Forms 컨트롤을 빌드하기 위해 <see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />의 기본 클래스 구현을 재정의합니다.</summary>
      <param name="hwndParent">부모 창의 핸들(HWND)입니다.</param>
      <returns>이 개체의 창 핸들입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>이 개체가 들어 있는 창을 삭제하기 위해 <see cref="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)" />를 재정의합니다.</summary>
      <param name="hwnd">창 핸들입니다. 이 매개 변수는 사용되지 않습니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.EnableWindowsFormsInterop">
      <summary>
        <see cref="T:System.Windows.Forms.Form" />이 WPF에서 모덜리스 폼으로 열리는 경우 제대로 작동하게 합니다.</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)" /> 개체의 크기를 측정하고 적당한 크기를 레이아웃 엔진에 반환하도록 <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />의 기본 클래스 구현을 재정의합니다.</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 개체에 사용할 수 있는 크기입니다.</param>
      <returns>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 개체에 사용하려는 크기입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer" /> 요소에 대한 <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer" /> 요소의 <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>매핑되는 속성을 변환합니다.</summary>
      <param name="e">변경된 속성을 식별하고 해당 속성의 이전 값과 새 값을 제공하는 인수입니다.</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.ScaleChild(System.Windows.Vector)">
      <summary>호스팅된 Windows Forms 컨트롤의 크기를 조정하고 배율 인수를 추적합니다.</summary>
      <param name="newScale">새 배율 인수입니다.</param>
      <returns>호스팅된 Windows Forms 컨트롤에 적용되는 배율 인수를 나타내는 <see cref="T:System.Windows.Vector" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.TabInto(System.Windows.Input.TraversalRequest)">
      <summary>WPF에서 호스팅된 Windows Forms 컨트롤에 포커스를 전달합니다.</summary>
      <param name="request">포커스 동작을 지정하는 <see cref="T:System.Windows.Input.TraversalRequest" />입니다.</param>
      <returns>컨트롤이 활성화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <summary>파생 클래스에서 구현되는 경우 호스팅된 자식 창의 창 프로세스에 액세스합니다.</summary>
      <param name="hwnd">호스팅된 창의 창 핸들입니다.</param>
      <param name="msg">수행 대상이 되는 메시지입니다.</param>
      <param name="wParam">메시지 처리에 관련된 정보입니다. 이 정보는 일반적으로 플래그와 같이 소량의 정보를 저장하는 데 사용됩니다.</param>
      <param name="lParam">메시지 처리에 관련된 정보입니다. 이 정보는 일반적으로 개체를 참조하는 데 사용됩니다.</param>
      <param name="handled">이벤트 결과가 처리된 것으로 표시되는지 여부입니다.</param>
      <returns>자식 창의 창 핸들입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.Background">
      <summary>앰비언트 속성인 호스트된 컨트롤의 배경을 가져오거나 설정합니다.</summary>
      <returns>배경색으로 설정된 <see cref="T:System.Windows.Media.Brush" />입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.Child">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 요소에서 호스팅하는 자식 컨트롤을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">최상위 폼을 호스팅된 컨트롤로 할당하려고 한 경우</exception>
      <returns>호스팅된 Windows Forms 컨트롤입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.FontFamily">
      <summary>호스팅된 컨트롤의 글꼴 패밀리를 가져오거나 설정합니다.</summary>
      <returns>호스팅된 컨트롤에서 사용하는 글꼴 패밀리입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.FontSize">
      <summary>호스팅된 컨트롤의 글꼴 크기를 가져오거나 설정합니다.</summary>
      <returns>호스팅된 컨트롤에서 사용하는 글꼴 크기입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.FontStyle">
      <summary>호스팅된 컨트롤의 글꼴 스타일을 가져오거나 설정합니다.</summary>
      <returns>호스팅된 컨트롤에서 사용되는 글꼴 스타일입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.FontWeight">
      <summary>호스팅된 컨트롤의 글꼴 두께를 가져오거나 설정합니다.</summary>
      <returns>호스팅된 컨트롤에서 사용되는 글꼴 두께입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.Foreground">
      <summary>호스팅된 컨트롤의 전경색을 가져오거나 설정합니다.</summary>
      <returns>호스팅된 컨트롤의 전경색을 설정하는 데 사용한 <see cref="T:System.Windows.Media.Brush" /> 입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.Padding">
      <summary>호스팅된 Windows Forms 컨트롤 내에서 원하는 안쪽 여백의 크기를 지정합니다.</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> 호스팅된 Windows Forms의 안쪽 여백을 나타내는 구조를 제어 합니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap">
      <summary>호스팅된 Windows Forms 컨트롤에 영향을 주는 <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 요소의 속성을 설정하는 방법을 결정하는 속성 맵을 가져옵니다.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> 매핑되는 <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 호스팅된 Windows Forms 컨트롤에서 속성에는 속성입니다.</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.TabIndex">
      <summary>호스트된 컨트롤의 탭 인덱스를 가져오거나 설정합니다.</summary>
      <returns>탭 탐색 및 포커스에 사용할 탭 인덱스입니다.</returns>
    </member>
  </members>
</doc>