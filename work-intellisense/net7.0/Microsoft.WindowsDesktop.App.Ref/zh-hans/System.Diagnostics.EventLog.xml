<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.EventLog</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.EntryWrittenEventArgs">
      <summary>为 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)">
      <summary>用指定的事件日志项初始化 <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> 类的新实例。</summary>
      <param name="entry">一个 <see cref="T:System.Diagnostics.EventLogEntry" />，它表示写入的项。</param>
    </member>
    <member name="P:System.Diagnostics.EntryWrittenEventArgs.Entry">
      <summary>获取写入到日志中的事件日志项。</summary>
      <returns>一个 <see cref="T:System.Diagnostics.EventLogEntry" />，它表示写入到事件日志中的项。</returns>
    </member>
    <member name="T:System.Diagnostics.EntryWrittenEventHandler">
      <summary>表示将要处理 <see cref="T:System.Diagnostics.EventLog" /> 的 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Diagnostics.EntryWrittenEventArgs" />。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <summary>表示事件流中的占位符（书签）。 可以使用此占位符在事件流中标记一个位置并返回到此位置。 此对象的实例可以从 <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 对象获得，在这种情况下它对应于该事件记录的位置。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <summary>表示事件的关键字。 关键字在事件提供程序中定义，用于按事件的用法将此事件与其他类似事件分到一组中。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <summary>获取关键字的本地化名称。</summary>
      <returns>一个字符串，其中包含此关键字的本地化名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <summary>获取关键字的非本地化名称。</summary>
      <returns>一个字符串，其中包含此关键字的非本地化名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <summary>获取与关键字关联的数值。</summary>
      <returns>与关键字关联的数值。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <summary>包含在事件提供程序中定义的事件级别。 级别表示事件的严重性。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <summary>获取事件级别的本地化名称。 名称描述此级别用于哪种严重级别的事件。</summary>
      <returns>一个字符串，其中包含事件级别的本地化名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <summary>获取事件级别的非本地化名称。</summary>
      <returns>一个包含事件级别的非本地化名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <summary>获取事件级别的数值。</summary>
      <returns>事件级别的数字值。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <summary>包含事件日志的静态信息和配置设置。 许多配置设置是由创建日志的事件提供程序定义的。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <summary>通过指定要获取其信息和配置设置的本地事件日志，初始化新的 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 对象。</summary>
      <param name="logName">要获取其信息和配置设置的本地事件日志的名称。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <summary>通过指定要获取其信息和配置设置的日志的名称，初始化新的 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 对象。 根据指定的事件日志会话，此日志可能位于本地计算机或远程计算机上。</summary>
      <param name="logName">要获取其信息和配置设置的事件日志的名称。</param>
      <param name="session">用于确定指定日志所属的事件日志服务的事件日志会话。 此会话与本地计算机或远程计算机上的事件日志服务相连接。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <summary>释放此对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <summary>释放此对象使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <summary>保存配置设置。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <summary>获取指示事件日志是否为传统型事件日志的值。 传统型事件日志是指在 .mc 文件而非在事件提供程序使用的清单（.xml 文件）中定义其事件的事件日志。</summary>
      <returns>
        <see langword="true" /> 如果事件日志是经典日志，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <summary>获取或设置一个值，该值指示是启用还是禁用事件日志。 启用的日志是指可以在其中记录事件的日志，禁用的日志是指无法在其中记录事件的日志。</summary>
      <returns>
        <see langword="true" /> 如果启用了日志，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <summary>获取或设置存储日志事件的文件位置的文件目录路径。</summary>
      <returns>一个字符串，其中包含事件日志文件的路径。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <summary>获取一个 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> 值，该值指定此事件日志是应用程序事件日志、系统事件日志还是自定义事件日志。</summary>
      <returns>枚举值之一。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <summary>获取或设置一个 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> 值，该值确定在事件日志已满时如何处理事件。</summary>
      <returns>枚举值之一。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <summary>获取事件日志的名称。</summary>
      <returns>事件日志的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <summary>获取一个 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> 值，该值确定事件日志的类型。</summary>
      <returns>枚举值之一。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <summary>获取或设置允许事件日志文件具有的最大大小，以字节为单位。 当文件达到此最大大小时，则视为已满。</summary>
      <returns>允许事件日志文件的最大大小（以字节为单位）。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <summary>获取创建此事件日志的事件提供程序的名称。</summary>
      <returns>创建此事件日志的事件提供程序的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <summary>获取事件提供程序用来将事件发布到日志的缓冲区的大小。</summary>
      <returns>事件提供程序用于将事件发布到日志的缓冲区大小。 它可能是 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <summary>如果此日志是调试日志，则获取事件日志的控件全局唯一标识符 (GUID)。 如果此日志不是调试日志，则此值将为 <see langword="null" />。</summary>
      <returns>GUID 值，或者， <see langword="null" /> 如果日志不是调试日志，则为。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <summary>获取或设置事件提供程序使用的关键字掩码。</summary>
      <returns>事件提供程序使用的关键字掩码; <see langword="null" /> 如果事件提供程序未定义任何关键字，则为。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <summary>获取事件提供程序在将事件发布到日志时所使用的最大滞后时间。</summary>
      <returns>事件提供程序在向日志发布事件时使用的最大延迟时间; <see langword="null" /> 如果事件提供程序未指定延迟时间，则为。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <summary>获取或设置允许在事件日志中记录的最高事件级别（它定义事件的严重性）。 此值由事件提供程序定义。</summary>
      <returns>允许记录在事件日志中的最大事件级别，或者 <see langword="null" /> 如果事件提供程序中未定义最大事件级别，则为。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <summary>获取事件提供程序用于将事件发布到事件日志的缓冲区的最大数目。</summary>
      <returns>事件提供程序用于将事件发布到事件日志的缓冲区的最大数目。 此值可为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <summary>获取事件提供程序用于将事件发布到事件日志的缓冲区的最小数目。</summary>
      <returns>事件提供程序用于将事件发布到事件日志的缓冲区的最小数目。 此值可为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <summary>获取可以将事件发布到此事件日志的所有事件提供程序的名称的可枚举集合。</summary>
      <returns>包含事件提供程序名称的字符串的可枚举集合。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <summary>获取或设置事件日志的安全描述符。 安全描述符定义可以对事件日志进行读写操作的用户和用户组。</summary>
      <returns>一个字符串，其中包含事件日志的安全描述符。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <summary>表示在读取事件日志相关信息的过程中发生错误时引发的所有异常的基类。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <summary>使用异常的错误代码初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 类的新实例。</summary>
      <param name="errorCode">在读取或配置事件日志相关信息时发生的错误的错误代码。 有关更多信息和事件日志相关错误代码的列表，请参阅 https://go.microsoft.com/fwlink/?LinkId=82629。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 类的新实例。</summary>
      <param name="serializationInfo">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <summary>通过指定描述当前异常的错误消息初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的错误消息。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <summary>使用错误消息和内部异常初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的错误消息。</param>
      <param name="innerException">导致当前异常的异常实例。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用有关异常的信息设置 SerializationInfo 对象。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，它包含有关所引发异常的序列化对象数据。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含有关源或目标的上下文信息。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <summary>获取描述当前异常的错误消息。</summary>
      <returns>返回一个包含描述当前异常的错误消息的字符串。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <summary>允许您访问活动事件日志和事件日志文件的运行时属性。 这些属性包括日志中的事件数、日志大小、确定日志是否已满的值以及上次写入或访问日志的时间。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <summary>获取与日志关联的日志文件的文件特性。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <summary>获取与事件日志关联的日志文件的创建时间。</summary>
      <returns>返回一个 <see cref="T:System.DateTime" /> 对象。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <summary>获取与事件日志关联的文件的大小（以字节为单位）。</summary>
      <returns>返回一个长整型值。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <summary>获取一个布尔值，该值确定日志文件是否已达到其最大大小（日志已满）。</summary>
      <returns>如果日志已满，则返回 <see langword="true" />；如果日志未满，则返回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <summary>获取上次访问与事件日志关联的日志文件的时间。</summary>
      <returns>返回一个 <see cref="T:System.DateTime" /> 对象。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <summary>获取上次将数据写入与事件日志关联的日志文件的时间。</summary>
      <returns>返回一个 <see cref="T:System.DateTime" /> 对象。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <summary>获取事件日志中的最早事件记录数。</summary>
      <returns>返回一个表示事件日志中的最早事件记录数的长整型值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <summary>获取事件日志中的事件记录数。</summary>
      <returns>返回一个表示事件日志中的事件记录数的长整型值。 此值可为 NULL。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <summary>表示在事件提供程序发布事件中的无效数据时引发的异常。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 类的新实例。</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，它包含有关所引发异常的序列化对象数据。</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <summary>通过指定描述当前异常的错误消息初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的错误消息。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <summary>使用错误消息和内部异常初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的错误消息。</param>
      <param name="innerException">导致当前异常的异常实例。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <summary>定义事件日志的默认访问权限。 应用程序和系统值指示，日志与相应的 Windows 日志（应用程序或系统事件日志）共享访问控制列表 (ACL)，并与同一隔离的其他日志共享 Windows 事件跟踪 (ETW) 会话。 具有自定义隔离的所有信道均使用专用 ETW 会话。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <summary>日志与应用程序事件日志共享访问控制列表；与具有应用程序隔离的其他日志共享 ETW 会话。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <summary>事件日志是使用其自己的专用 ETW 会话的自定义事件日志。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <summary>日志与系统事件日志共享访问控制列表；与具有系统隔离的其他日志共享 ETW 会话。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <summary>表示事件提供程序与此提供程序要将事件发布到的事件日志之间的链接。 无法实例化此对象。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <summary>获取事件日志的本地化名称。</summary>
      <returns>返回一个包含事件日志的本地化名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <summary>获取一个布尔值，该值确定是否导入了事件日志，而不是确定是否在事件提供程序中定义了事件日志。 在其他提供程序中定义导入的事件日志。</summary>
      <returns>如果事件提供程序已导入事件日志，则返回 <see langword="true" />；如果事件提供程序没有导入事件日志，则返回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <summary>获取与此对象关联的事件日志的非本地化名称。</summary>
      <returns>返回一个包含与此对象关联的事件日志的非本地化名称的字符串。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <summary>确定事件日志服务在日志达到其允许的最大大小时（事件日志已满时）处理事件日志的行为。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <summary>存档已满的日志，不会覆盖事件。 必要时自动存档日志。 不会覆盖任何事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <summary>在日志文件已满时继续存储新事件。 每个新传入的事件会替换日志中的最早事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <summary>不会覆盖事件。 手动而非自动清除日志。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <summary>表示在请求的事件日志（通常由事件日志的名称或事件日志文件的路径来指定）不存在时引发的异常。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 类的新实例。</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，它包含有关所引发异常的序列化对象数据。</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <summary>通过指定描述当前异常的错误消息初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的错误消息。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <summary>使用错误消息和内部异常初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的错误消息。</param>
      <param name="innerException">导致当前异常的异常实例。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <summary>包含表示事件的 XML 表示形式中的元素的 XPath 查询的字符串数组，事件的 XML 表示形式基于 Event Schema（事件架构）。 此对象中的查询用于从事件中提取值。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" /> 类的一个新实例。</summary>
      <param name="propertyQueries">用于从事件的 XML 表示形式中提取值的 XPath 查询。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <summary>释放此对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <summary>释放此对象使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <summary>表示当指定的事件提供程序名称引用禁用的事件提供程序时引发的异常。 禁用的事件提供程序不能发布事件。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 类的新实例。</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，它包含有关所引发异常的序列化对象数据。</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <summary>通过指定描述当前异常的错误消息初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的错误消息。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <summary>使用错误消息和内部异常初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的错误消息。</param>
      <param name="innerException">导致当前异常的异常实例。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <summary>表示事件日志中的事件的查询以及定义如何执行查询和在哪台计算机上执行查询的设置。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>通过指定查询的目标初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 类的新实例。 此目标可以是活动的事件日志，也可以是日志文件。</summary>
      <param name="path">要查询的事件日志的名称，或要查询的事件日志文件的路径。</param>
      <param name="pathType">指定路径参数中使用的字符串是否指定事件日志的名称或事件日志文件的路径。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <summary>通过指定查询的目标和事件查询初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 类的新实例。 此目标可以是活动的事件日志，也可以是日志文件。</summary>
      <param name="path">要查询的事件日志的名称，或要查询的事件日志文件的路径。</param>
      <param name="pathType">指定路径参数中使用的字符串是否指定事件日志的名称或事件日志文件的路径。</param>
      <param name="query">用于检索与查询条件匹配的事件的事件查询。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <summary>获取或设置布尔值，该值确定是否从事件日志中的最新事件向日志中的最早事件读取事件。</summary>
      <returns>如果从日志中的最新事件向最早事件读取事件，则返回 <see langword="true" />；如果从日志中的最早事件向最新事件读取事件，则返回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <summary>获取或设置访问本地计算机或远程计算机上的事件日志服务的会话。 可以通过使用此 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 对象创建 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 对象或 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 对象来将此对象设置为访问远程事件日志。</summary>
      <returns>返回一个 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 对象。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <summary>获取或设置一个布尔值，该值确定在查询出错时此查询是否继续检索事件。</summary>
      <returns>
        <see langword="true" /> 指示即使对某些日志的查询失败，此查询也将继续检索事件；<see langword="false" /> 指示在查询失败时此查询将不继续检索事件。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <summary>允许根据事件查询从事件日志读取事件。 此对象读取的事件作为 <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 对象返回。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>通过指定事件查询来初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 类的新实例。</summary>
      <param name="eventQuery">用于检索事件的事件查询。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>通过指定事件查询和用作查询的开始位置的书签初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 类的新实例。</summary>
      <param name="eventQuery">用于检索事件的事件查询。</param>
      <param name="bookmark">用作事件日志或事件流中的开始位置的书签（占位符）。 查询只返回在书签事件发生后记录的事件。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <summary>通过指定要从中检索事件的活动事件日志，初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 类的新实例。</summary>
      <param name="path">要从中检索事件的事件日志的名称。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>通过指定要从中检索事件的事件日志的名称或要从中检索事件的日志文件的路径，初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 类的新实例。</summary>
      <param name="path">要从中检索事件的事件日志的名称，或要从中检索事件的事件日志文件的路径。</param>
      <param name="pathType">指定路径参数中使用的字符串是否指定事件日志的名称或事件日志文件的路径。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <summary>取消当前查询操作。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <summary>释放此对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <summary>释放此对象使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <summary>读取从此对象中的事件查询返回的下一个事件。</summary>
      <returns>返回一个 <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 对象。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <summary>读取从此对象中的事件查询返回的下一个事件。</summary>
      <param name="timeout">取消读取操作前允许该操作运行的最大时间。</param>
      <returns>返回一个 <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 对象。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>通过指定书签事件更改要读取的下一个事件在事件流中的位置。 不会检索在书签事件前记录的任何事件。</summary>
      <param name="bookmark">用作事件日志或事件流中的开始位置的书签（占位符）。 查询只返回在书签事件发生后记录的事件。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <summary>通过指定书签事件和事件与书签的偏移量，更改要读取的下一个事件在事件流中的位置。 不会检索在书签加上偏移量前记录的任何事件。</summary>
      <param name="bookmark">用作事件日志或事件流中的开始位置的书签（占位符）。 查询只返回在书签事件发生后记录的事件。</param>
      <param name="offset">用于更改书签位置的事件的偏移量。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <summary>通过指定开始位置和与开始位置的偏移量，更改要读取的下一个事件在事件流中的位置。 不会检索在开始位置加上偏移量前记录的任何事件。</summary>
      <param name="origin">来自 <see cref="T:System.IO.SeekOrigin" /> 枚举的值定义从事件流中的什么位置开始查询事件。</param>
      <param name="offset">要添加到原点的事件的偏移量。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <summary>获取或设置从每个读取操作的事件流中检索的事件数。</summary>
      <returns>返回整数值。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <summary>获取与此对象中的事件查询关联的每个事件日志或日志文件的状态。</summary>
      <returns>返回 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" /> 对象的列表，其中每个对象包含有关与此对象中的事件查询关联的事件日志的状态信息。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <summary>表示在读取、查询或订阅事件日志中的事件的过程中发生错误时引发的异常。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 类的新实例。</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，它包含有关所引发异常的序列化对象数据。</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <summary>通过指定描述当前异常的错误消息初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的错误消息。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <summary>使用错误消息和内部异常初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的错误消息。</param>
      <param name="innerException">导致当前异常的异常实例。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <summary>包含从 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 对象接收的事件的事件实例的属性。 这些事件属性提供有关事件的信息，例如记录事件的计算机的名称和事件的创建时间。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <summary>释放此对象使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <summary>获取当前区域设置中的事件消息。</summary>
      <returns>返回一个包含当前区域设置中的事件消息的字符串。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>获取事件消息，将消息中的变量替换为指定值。</summary>
      <param name="values">用于替换事件消息中的变量的值。 变量用 %n 表示，其中 n 是一个数字。</param>
      <returns>返回一个包含当前区域设置中的事件消息的字符串。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <summary>获取用户提供的事件属性值的枚举，或基于 XPath 的数据的结果（如果事件具有 XML 表示形式）。</summary>
      <param name="propertySelector">选择要返回的属性值。</param>
      <returns>返回对象的列表。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <summary>获取事件的 XML 表示形式。 所有的事件属性均以事件的 XML 表示。 XML 符合 事件架构。</summary>
      <returns>返回一个包含事件的 XML 表示形式的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <summary>获取进程中涉及事件的活动的全局唯一标识符 (GUID)。 这样使用方可以对相关活动进行分组。</summary>
      <returns>返回一个 GUID 值。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <summary>获取与此事件对应的占位符（书签）。 它可在事件流中用作占位符。</summary>
      <returns>返回一个 <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> 对象。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <summary>获取在其中存储事件的事件日志或事件日志文件的名称。</summary>
      <returns>返回一个包含在其中存储事件的事件日志或事件日志文件的名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <summary>获取此事件的标识符。 具有此标识符值的所有事件均表示同一类型的事件。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <summary>获取事件的关键字掩码。 获取 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" /> 属性的值以获得此掩码中使用的关键字的名称。</summary>
      <returns>返回一个长整型值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <summary>获取此事件的关键字掩码中使用的关键字的显示名称。</summary>
      <returns>返回一个可枚举的字符串集合，其中包含此事件关键字掩码中使用的关键字的显示名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <summary>获取事件的级别。 级别表示事件的严重性。 若要获得级别名称，请获取 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" /> 属性的值。</summary>
      <returns>返回一个字节值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <summary>获取此事件的级别的显示名称。</summary>
      <returns>返回一个包含此事件的级别的显示名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <summary>获取记录此事件的事件日志的名称。</summary>
      <returns>返回一个包含此事件的事件日志名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <summary>获取在其上记录此事件的计算机的名称。</summary>
      <returns>返回一个包含在其上记录此事件的计算机的名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <summary>获取此事件与之匹配的查询标识符的列表。 此事件与将返回此事件的查询相匹配。</summary>
      <returns>返回整数值的可枚举集合。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <summary>获取事件的操作码。 此操作码定义一个数值，该数值标识应用程序在引发事件时正在执行的活动或活动中的点。 若要获得操作码名称，请获取 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" /> 属性的值。</summary>
      <returns>返回一个短整型值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <summary>获取此事件的操作码的显示名称。</summary>
      <returns>返回一个包含此事件的操作码的显示名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <summary>获取记录此事件的事件提供程序的进程标识符。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <summary>获取事件的用户提供的属性。</summary>
      <returns>返回 <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> 对象的列表。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <summary>获取发布此事件的事件提供程序的全局唯一标识符 (GUID)。</summary>
      <returns>返回一个 GUID 值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <summary>获取发布此事件的事件提供程序的名称。</summary>
      <returns>返回一个包含发布此事件的事件提供程序的名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <summary>获取用于事件标识的限定符数。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <summary>获取日志中事件的事件记录标识符。</summary>
      <returns>返回一个长整型值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <summary>获取进程中涉及事件的相关活动的全局唯一标识符 (GUID)。</summary>
      <returns>返回一个 GUID 值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <summary>获取发布事件的应用程序或组件的一部分的任务标识符。 任务是一个保留了前 16 个值的 16 位值。 此类型允许使用 0x0000 和 0xffef 之间的任何值。 若要获得任务名称，请获取 <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" /> 属性的值。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <summary>获取事件的任务的显示名称。</summary>
      <returns>返回一个包含事件的任务的显示名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <summary>获取在其中运行事件提供程序的线程的线程标识符。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <summary>获取事件的创建时间，格式为 <see cref="T:System.DateTime" />。</summary>
      <returns>返回一个 <see cref="T:System.DateTime" /> 值。 值可以为 Null。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <summary>获取其上下文用于发布事件的用户的安全描述符。</summary>
      <returns>返回一个 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 值。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <summary>获取事件的版本号。</summary>
      <returns>返回一个字节值。 此值可为 NULL。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <summary>用于访问本地计算机或远程计算机上的事件日志服务，以便您可以管理和收集有关计算机上的事件日志和事件提供程序的信息。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <summary>初始化新的 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 对象并建立与本地事件日志服务的连接。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <summary>初始化新的 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 对象，并建立与指定计算机上的事件日志服务的连接。 调用此方法的用户的凭据（用户名和密码）将用作访问远程计算机的凭据。</summary>
      <param name="server">通过其连接到事件日志服务的计算机的名称。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <summary>初始化新的 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 对象，并建立与指定计算机上的事件日志服务的连接。 使用指定的凭据（用户名和密码）作为访问远程计算机的凭据。</summary>
      <param name="server">通过其连接到事件日志服务的计算机的名称。</param>
      <param name="domain">指定用户的域。</param>
      <param name="user">用于连接到远程计算机的用户名。</param>
      <param name="password">用于连接到远程计算机的密码。</param>
      <param name="logOnType">用于连接到远程计算机的连接类型。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <summary>取消当前对此会话对象连接到的事件日志服务处于活动状态的所有操作（例如，读取事件日志或订阅事件日志）。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <summary>从指定的事件日志中清除事件。</summary>
      <param name="logName">要从中清除所有事件的事件日志的名称。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <summary>从指定的事件日志中清除事件，并将已清除的事件保存到指定文件。</summary>
      <param name="logName">要从中清除所有事件的事件日志的名称。</param>
      <param name="backupPath">已清除的事件将保存到的文件的路径。 此文件名应以 .evtx 结尾。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <summary>释放此对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <summary>释放此对象使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>将事件导出到外部日志文件中。 存储事件，不存储事件消息。</summary>
      <param name="path">要从其中导出事件的事件日志名称，或要从其中导出事件的事件日志文件的路径。</param>
      <param name="pathType">指定路径参数中使用的字符串是否指定事件日志的名称或事件日志文件的路径。</param>
      <param name="query">用于选择要导出的事件的查询。  将仅导出从查询返回的事件。</param>
      <param name="targetFilePath">执行此方法后存储导出事件的日志文件（以 .evtx 结尾）的路径。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <summary>将事件导出到外部日志文件中。 可以设置标记来指示即使对某些日志的指定查询失败此方法仍将继续导出事件。 存储事件，不存储事件消息。</summary>
      <param name="path">要从其中导出事件的事件日志名称，或要从其中导出事件的事件日志文件的路径。</param>
      <param name="pathType">指定路径参数中使用的字符串是否指定事件日志的名称或事件日志文件的路径。</param>
      <param name="query">用于选择要导出的事件的查询。 将仅导出从查询返回的事件。</param>
      <param name="targetFilePath">执行此方法后存储导出事件的日志文件（以 .evtx 结尾）的路径。</param>
      <param name="tolerateQueryErrors">
        <see langword="true" /> 指示即使对某些日志的指定查询失败此方法仍将继续导出事件，<see langword="false" /> 指示指定查询失败时此方法将不再继续导出事件。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>将事件及其消息导出到外部日志文件。</summary>
      <param name="path">要从其中导出事件的事件日志名称，或要从其中导出事件的事件日志文件的路径。</param>
      <param name="pathType">指定路径参数中使用的字符串是否指定事件日志的名称或事件日志文件的路径。</param>
      <param name="query">用于选择要导出的事件的查询。  将仅导出从查询返回的事件。</param>
      <param name="targetFilePath">执行此方法后存储导出事件的日志文件（以 .evtx 结尾）的路径。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>将事件及其消息导出到外部日志文件。 可以设置标记来指示即使对某些日志的指定查询失败此方法仍将继续导出事件。 将使用指定语言导出事件消息。</summary>
      <param name="path">要从其中导出事件的事件日志名称，或要从其中导出事件的事件日志文件的路径。</param>
      <param name="pathType">指定路径参数中使用的字符串是否指定事件日志的名称或事件日志文件的路径。</param>
      <param name="query">用于选择要导出的事件的查询。  将仅导出从查询返回的事件。</param>
      <param name="targetFilePath">执行此方法后存储导出事件的日志文件（以 .evtx 结尾）的路径。</param>
      <param name="tolerateQueryErrors">
        <see langword="true" /> 指示即使对某些日志的指定查询失败此方法仍将继续导出事件，<see langword="false" /> 指示指定查询失败时此方法将不再继续导出事件。</param>
      <param name="targetCultureInfo">指定导出的事件消息将使用哪种语言的区域性。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>获取包含指定事件日志的运行时信息的对象。</summary>
      <param name="logName">获取有关其信息的事件日志的名称，或获取有关其信息的事件日志文件的路径。</param>
      <param name="pathType">指定路径参数中使用的字符串是否指定事件日志的名称或事件日志文件的路径。</param>
      <returns>一个对象，该对象包含有关指定日志的信息。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <summary>获取向事件日志服务注册的所有事件日志名称的可枚举集合。</summary>
      <returns>包含事件日志名称的字符串的可枚举集合。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <summary>获取向事件日志服务注册的所有事件提供程序名称的可枚举集合。 事件提供程序是将事件发布到事件日志的应用程序。</summary>
      <returns>包含事件提供程序名称的字符串的可枚举集合。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <summary>获取连接到本地计算机上的事件日志服务的静态预定义会话对象。</summary>
      <returns>连接到本地计算机上的事件日志服务的预定义会话对象。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <summary>包含特定事件日志的状态代码或错误代码。 此状态可用来确定事件日志是否可用于操作。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <summary>获取已获得其状态代码的事件日志的名称。</summary>
      <returns>为其获取状态代码的事件日志的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <summary>获取事件日志的状态代码或错误代码。 此状态或错误是对事件日志执行读取或订阅操作的结果。</summary>
      <returns>事件日志的状态代码或错误代码。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <summary>定义在事件日志中记录的事件的类型。 每个日志只能包含一种类型的事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <summary>这些事件主要针对最终用户、管理员和支持人员。 管理类型日志中的事件指示管理员可以处理的问题以及可以执行的定义完善的解决方案。 例如，在应用程序无法连接到打印机时发生的事件就是一个管理事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <summary>分析事件日志中事件的发布量非常大。 它们描述程序操作并指示用户无法处理的问题。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <summary>调试类型事件日志中的事件仅供开发人员用来诊断要调试的问题。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <summary>操作类型事件日志中的事件用于分析和诊断问题或发生的事件。 它们可用于根据问题或发生的事件触发工具或任务。 例如，在系统中添加或移除打印机时发生的事件就是一个操作事件。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <summary>允许您订阅传入事件。 每次将所需事件发布到事件日志中时，都会引发 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 事件，并将执行处理此事件的方法。</summary>
    </member>
    <member name="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <summary>允许设置一个委托（事件处理程序方法），每次发布与在此对象的事件查询中指定的条件相匹配的事件时都会调用该委托。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>通过指定事件查询来初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 类的新实例。</summary>
      <param name="eventQuery">指定对事件订阅的查询。 当记录与查询中表示的条件相匹配的事件时，会引发 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 事件。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>通过指定事件查询和用作查询的开始位置的书签初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 类的新实例。</summary>
      <param name="eventQuery">指定对事件订阅的查询。 当记录与查询中表示的条件相匹配的事件时，会引发 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 事件。</param>
      <param name="bookmark">用作事件日志或事件流中的开始位置的书签（占位符）。 查询只返回在书签事件发生后记录的事件。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <summary>通过指定事件查询、用作查询的开始位置的书签和确定是否读取事件日志中已存在的事件的布尔值来初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 类的新实例。</summary>
      <param name="eventQuery">指定对事件订阅的查询。 当记录与查询中表示的条件相匹配的事件时，会引发 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 事件。</param>
      <param name="bookmark">用作事件日志或事件流中的开始位置的书签（占位符）。 查询只返回在书签事件发生后记录的事件。</param>
      <param name="readExistingEvents">确定是否读取事件日志中已存在的事件的布尔值。 如果此值为 <see langword="true" />，则读取现有事件；如果此值为 <see langword="false" />，则不读取现有事件。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <summary>通过指定事件日志的名称或路径初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 类的新实例。</summary>
      <param name="path">事件的事件日志监视器的路径或名称。 如果在此事件日志中记录任何事件，则会引发 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 事件。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <summary>释放此对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <summary>释放此对象使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <summary>获取或设置一个值，该值指示此对象是否开始将事件传递给事件委托。</summary>
      <returns>
        <see langword="true" /> 如果此对象可以将事件传递给事件委托，则为; 否则为。 <see langword="false" /> 此对象停止传递时。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <summary>包含在事件提供程序中定义的事件的元数据（属性和设置）。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <summary>使用描述语言的当前线程区域设置获取与事件关联的描述模板。</summary>
      <returns>一个字符串，其中包含与事件关联的描述模板。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <summary>获取在事件提供程序中定义的事件的标识符。</summary>
      <returns>事件标识符。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <summary>获取与在事件提供程序中定义的事件相关联的关键字。</summary>
      <returns>与事件相关联的关键字的可枚举集合。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <summary>获取与在事件提供程序中定义的事件关联的级别。 级别定义事件的严重性。</summary>
      <returns>与事件关联的级别。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <summary>获取提供程序发布此事件时接收此事件的事件日志的链接。</summary>
      <returns>指向事件日志的链接。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <summary>获取与事件提供程序定义的此事件关联的操作码。 此操作码定义一个数值，该数值标识应用程序在引发事件时正在执行的活动或活动中的点。</summary>
      <returns>与此事件关联的操作码。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <summary>获取与事件关联的任务。 任务标识发布事件的应用程序或组件的一部分。</summary>
      <returns>与事件关联的任务。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <summary>获取事件的模板字符串。 模板用于描述提供程序在发布事件时使用的数据。 模板可选择指定提供事件的结构的 XML。 XML 允许事件发布程序提供的要在呈现事件时插入的值。</summary>
      <returns>一个字符串，其中包含事件的模板。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <summary>获取限定事件标识符的事件的版本。</summary>
      <returns>一个字节值，该值包含事件的版本。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <summary>包含在事件提供程序中定义的事件操作码。 操作码定义一个数值，该数值标识应用程序在引发事件时正在执行的活动或活动中的点。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <summary>获取事件操作码的本地化名称。</summary>
      <returns>事件操作码的本地化名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <summary>获取事件操作码的非本地化名称。</summary>
      <returns>事件操作码的非本地化名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <summary>获取与事件操作码关联的数值。</summary>
      <returns>与事件操作码关联的数值。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <summary>包含发布事件时事件提供程序指定的事件属性的值。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <summary>获取发布事件时事件提供程序指定的事件属性的值。</summary>
      <returns>事件属性的值。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <summary>定义从 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 对象接收的事件的事件实例的属性。 事件属性提供有关事件的信息，例如记录事件的计算机的名称和事件的创建时间。 此类是一个抽象类。 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogRecord" /> 类实现此类。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <summary>释放此对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <summary>释放此对象使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <summary>获取当前区域设置中的事件消息。</summary>
      <returns>返回一个包含当前区域设置中的事件消息的字符串。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>获取事件消息，将消息中的变量替换为指定值。</summary>
      <param name="values">用于替换事件消息中的变量的值。 变量用 %n 表示，其中 n 是一个数字。</param>
      <returns>返回一个包含当前区域设置中的事件消息的字符串。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <summary>获取事件的 XML 表示形式。 所有的事件属性均以事件 XML 表示。 XML 符合 事件架构。</summary>
      <returns>返回一个包含事件的 XML 表示形式的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <summary>获取进程中涉及事件的活动的全局唯一标识符 (GUID)。 这样使用方可以对相关活动进行分组。</summary>
      <returns>返回一个 GUID 值。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <summary>获取与此事件对应的占位符（书签）。 它可在事件流中用作占位符。</summary>
      <returns>返回一个 <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> 对象。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <summary>获取此事件的标识符。 具有此标识符值的所有事件均表示同一类型的事件。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <summary>获取事件的关键字掩码。 获取 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" /> 属性的值以获得此掩码中使用的关键字的名称。</summary>
      <returns>返回一个长整型值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <summary>获取此事件的关键字掩码中使用的关键字的显示名称。</summary>
      <returns>返回一个可枚举的字符串集合，其中包含此事件关键字掩码中使用的关键字的显示名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <summary>获取事件的级别。 级别表示事件的严重性。 若要获得级别名称，请获取 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" /> 属性的值。</summary>
      <returns>返回一个字节值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <summary>获取此事件的级别的显示名称。</summary>
      <returns>返回一个包含此事件的级别的显示名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <summary>获取记录此事件的事件日志的名称。</summary>
      <returns>返回一个包含此事件的事件日志名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <summary>获取在其上记录此事件的计算机的名称。</summary>
      <returns>返回一个包含在其上记录此事件的计算机的名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <summary>获取事件的操作码。 此操作码定义一个数值，该数值标识应用程序在引发事件时正在执行的活动或活动中的点。 若要获得操作码名称，请获取 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" /> 属性的值。</summary>
      <returns>返回一个短整型值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <summary>获取此事件的操作码的显示名称。</summary>
      <returns>返回一个包含此事件的操作码的显示名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <summary>获取记录此事件的事件提供程序的进程标识符。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <summary>获取事件的用户提供的属性。</summary>
      <returns>返回 <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> 对象的列表。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <summary>获取发布此事件的事件提供程序的全局唯一标识符 (GUID)。</summary>
      <returns>返回一个 GUID 值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <summary>获取发布此事件的事件提供程序的名称。</summary>
      <returns>返回一个包含发布此事件的事件提供程序的名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <summary>获取用于事件标识的限定符数。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <summary>获取日志中事件的事件记录标识符。</summary>
      <returns>返回一个长整型值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <summary>获取进程中涉及事件的相关活动的全局唯一标识符 (GUID)。</summary>
      <returns>返回一个 GUID 值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <summary>获取发布事件的应用程序或组件的一部分的任务标识符。 任务是一个保留了前 16 个值的 16 位值。 此类型允许使用 0x0000 和 0xffef 之间的任何值。 若要获得任务名称，请获取 <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" /> 属性的值。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <summary>获取事件的任务的显示名称。</summary>
      <returns>返回一个包含事件的任务的显示名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <summary>获取在其中运行事件提供程序的线程的线程标识符。</summary>
      <returns>返回整数值。 此值可为 NULL。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <summary>获取事件的创建时间，格式为 <see cref="T:System.DateTime" />。</summary>
      <returns>返回一个 <see cref="T:System.DateTime" /> 值。 值可以为 Null。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <summary>获取其上下文用于发布事件的用户的安全描述符。</summary>
      <returns>返回一个 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 值。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <summary>获取事件的版本号。</summary>
      <returns>返回一个字节值。 此值可为 NULL。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <summary>当引发 <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> 事件时，此对象的实例将传递给处理该事件的委托方法。 此对象包含发布到事件日志的事件或事件订阅失败时发生的异常。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <summary>获取在事件订阅失败时发生的异常。 此异常包含订阅失败原因的说明。</summary>
      <returns>事件订阅失败时发生的异常。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <summary>获取发布到事件日志的事件记录。 此事件与事件订阅中指定的查询的条件相匹配。</summary>
      <returns>事件记录。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventTask">
      <summary>包含在事件提供程序中定义的事件任务。 任务标识发布事件的应用程序或组件的一部分。 任务是一个保留了前 16 个值的 16 位值。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <summary>获取事件任务的本地化名称。</summary>
      <returns>事件任务的本地化名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <summary>获取与任务关联的事件全局唯一标识符 (GUID)。</summary>
      <returns>与任务关联的事件 GUID。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <summary>获取事件任务的非本地化名称。</summary>
      <returns>事件任务的非本地化名称。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <summary>获取与任务关联的数值。</summary>
      <returns>与任务关联的数值。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.PathType">
      <summary>指定字符串是包含事件日志的名称，还是包含事件日志文件的文件系统路径。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <summary>路径参数包含事件日志文件的文件系统路径。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <summary>路径参数包含事件日志的名称。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <summary>包含有关事件提供程序的静态信息，例如提供程序的名称和 ID 以及在提供程序中定义的事件的集合。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <summary>通过指定要检索有关其的信息的提供程序的名称，初始化 <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> 类的新实例。</summary>
      <param name="providerName">要检索有关其的信息的事件提供程序的名称。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <summary>通过指定要检索有关其的信息的提供程序的名称、向其注册提供程序的事件日志服务以及要返回的信息所使用的语言，初始化 <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> 类的新实例。</summary>
      <param name="providerName">要检索有关其的信息的事件提供程序的名称。</param>
      <param name="session">
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 对象，它指定是从本地计算机上的提供程序，还是从远程计算机上的提供程序获取提供程序信息。</param>
      <param name="targetCultureInfo">指定返回的信息应使用的语言的区域性。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <summary>释放此对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <summary>释放此对象使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <summary>获取事件提供程序的本地化名称。</summary>
      <returns>返回一个包含事件提供程序的本地化名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <summary>获取 <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> 对象的可枚举集合，其中每个对象表示在提供程序中定义的事件。</summary>
      <returns>返回 <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> 对象的可枚举集合。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <summary>获取用于构成此事件提供程序中事件的帮助请求的 URL 基。</summary>
      <returns>返回一个 <see cref="T:System.Uri" /> 值。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <summary>获取事件提供程序的全局唯一标识符 (GUID)。</summary>
      <returns>返回事件提供程序的 GUID 值。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <summary>获取 <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> 对象的可枚举集合，其中每个对象表示在事件提供程序中定义的事件关键字。</summary>
      <returns>返回 <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> 对象的可枚举集合。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <summary>获取 <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> 对象的可枚举集合，其中每个对象表示在事件提供程序中定义的级别。</summary>
      <returns>返回 <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> 对象的可枚举集合。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <summary>获取 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> 对象的可枚举集合，其中每个对象表示事件提供程序使用的事件日志的链接。</summary>
      <returns>返回 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> 对象的可枚举集合。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <summary>获取包含消息表资源的文件的路径，该消息表资源具有与提供程序元数据关联的字符串。</summary>
      <returns>返回一个包含提供程序消息文件的路径的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <summary>获取事件提供程序的唯一名称。</summary>
      <returns>返回一个包含事件提供程序的唯一名称的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <summary>获取 <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> 对象的可枚举集合，其中每个对象表示在事件提供程序中定义的操作码。</summary>
      <returns>返回 <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> 对象的可枚举集合。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <summary>获取包含消息表资源的文件的路径，该消息表资源具有用于事件描述中的参数替换的字符串。</summary>
      <returns>返回一个包含文件路径的字符串，该文件包含消息表资源，该消息表资源具有用于事件描述中的参数替换的字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <summary>获取包含与提供程序关联的元数据的文件的路径。</summary>
      <returns>返回一个包含文件路径的字符串，该文件包含与提供程序关联的元数据。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <summary>获取 <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> 对象的可枚举集合，其中每个对象表示在事件提供程序中定义的任务。</summary>
      <returns>返回 <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> 对象的可枚举集合。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <summary>定义在对服务器进行远程过程调用 (RPC) 登录期间使用的身份验证类型的值。 在创建指定与远程计算机的连接的 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 对象时进行此登录。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <summary>在 RPC 登录期间使用默认的身份验证方法。 默认的身份验证等效于协商。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <summary>在 RPC 登录期间使用 Kerberos 身份验证。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <summary>在 RPC 登录期间使用协商身份验证方法。 这样，客户端应用程序可以根据情况选择最佳的身份验证方法（NTLM 或 Kerberos）。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <summary>在 RPC 登录期间使用 Windows NT LAN Manager (NTLM) 身份验证。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <summary>定义事件提供程序将其附加到事件的标准关键字。 有关关键字的更多信息，请参见 <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <summary>已附加到所有失败的安全审核事件。 此关键字应仅用于安全日志中的事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <summary>已附加到所有成功的安全审核事件。 此关键字应仅用于安全日志中的事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <summary>附加到传输事件，其相关的活动 ID（相关 ID）是一个计算值，不能保证其唯一性（不是真正的 GUID）。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint2">
      <summary>附加到传输事件，其相关的活动 ID（相关 ID）是一个计算值，不能保证其唯一性（不是真正的 GUID）。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <summary>附加到使用 RaiseEvent 函数引发的事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <summary>此值指示在发布事件时未对关键字执行任何筛选。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.ResponseTime">
      <summary>已附加到所有响应时间事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <summary>已附加到所有服务质量机制 (SQM) 事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <summary>附加到所有 Windows 诊断基础结构 (WDI) 上下文事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <summary>附加到所有 Windows 诊断基础结构 (WDI) 诊断事件。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <summary>定义事件日志服务中使用的标准事件级别。 级别定义事件的严重性。 自定义事件级别可以采用这些标准级别以外的级别来定义。 有关级别的更多信息，请参见 <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <summary>此级别与导致严重故障的错误相对应。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <summary>此级别与表示某个问题的一般错误相对应。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <summary>此级别与不是错误的信息性事件或消息相对应。 这些事件可帮助跟踪应用程序的进度或状态。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <summary>此值指示在事件发布期间未完成级别的筛选。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <summary>此级别与冗长的事件或消息相对应。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <summary>此级别与警告事件相对应。 例如，因磁盘容量快满而发布的事件为警告事件。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <summary>定义事件提供程序将其附加到事件的标准操作码。 有关操作码的更多信息，请参见 <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <summary>具有此操作码的事件是一个跟踪集合启动事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <summary>具有此操作码的事件是一个跟踪集合停止事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <summary>具有此操作码的事件是一个扩展事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <summary>具有此操作码的事件是一个信息事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <summary>在应用程序中的一个活动收到数据时发布具有此操作码的事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <summary>在应用程序中的活动答复事件后发布具有此操作码的事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <summary>在应用程序中的活动从挂起状态恢复后发布具有此操作码的事件。 此事件应在具有挂起操作码的事件之后发生。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <summary>在应用程序中的一个活动将数据或系统资源传输到另一个活动时发布具有此操作码的事件。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <summary>在应用程序启动新事务或活动时发布具有此操作码的事件。 当多个具有启动操作码的事件相继发生而没有具有停止操作码的事件时，此事件可以嵌入到另一个事务或活动中。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <summary>在应用程序中的活动或事务结束时发布具有此操作码的事件。 此事件与具有启动操作码的最后一个未成对的事件对应。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <summary>在应用程序中的活动挂起时发布具有此操作码的事件。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <summary>定义事件提供程序将其附加到事件的标准任务。 有关任务的更多信息，请参见 <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <summary>没有用于标识发布事件的应用程序的一部分的任务。</summary>
    </member>
    <member name="T:System.Diagnostics.EventInstance">
      <summary>表示事件日志项的非特定语言信息。</summary>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)">
      <summary>使用事件项的本地化消息和类别文本的指定资源标识符初始化 <see cref="T:System.Diagnostics.EventInstance" /> 类的一个新实例。</summary>
      <param name="instanceId">资源标识符，与事件源的消息资源文件中定义的字符串对应。</param>
      <param name="categoryId">资源标识符，与事件源的类别资源文件中定义的字符串对应。如果没有为事件指定类别，则为零。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="instanceId" /> 参数是负值或大于 <see cref="F:System.UInt32.MaxValue" /> 的值。  
  
- 或 - 
<paramref name="categoryId" /> 参数是负值或大于 <see cref="F:System.UInt16.MaxValue" /> 的值。</exception>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)">
      <summary>使用事件项的本地化消息和类别文本的指定资源标识符以及指定的事件日志项类型初始化 <see cref="T:System.Diagnostics.EventInstance" /> 类的一个新实例。</summary>
      <param name="instanceId">资源标识符，与事件源的消息资源文件中定义的字符串对应。</param>
      <param name="categoryId">资源标识符，与事件源的类别资源文件中定义的字符串对应。如果没有为事件指定类别，则为零。</param>
      <param name="entryType">指示事件类型的 <see cref="T:System.Diagnostics.EventLogEntryType" /> 值。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="entryType" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" /> 值。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="instanceId" /> 是负值或大于 <see cref="F:System.UInt32.MaxValue" /> 的值。  
  
- 或 - 
 <paramref name="categoryId" /> 是负值或大于 <see cref="F:System.UInt16.MaxValue" /> 的值。</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.CategoryId">
      <summary>获取或设置指定事件项的应用程序定义类别的资源标识符。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">该属性设置为负值或大于 <see cref="F:System.UInt16.MaxValue" /> 的值。</exception>
      <returns>数字型类别值或资源标识符，与事件源的类别资源文件中定义的字符串对应。 默认值为零，这意味着将不会为该事件项显示类别。</returns>
    </member>
    <member name="P:System.Diagnostics.EventInstance.EntryType">
      <summary>获取或设置事件日志项的事件类型。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">该属性未设置为有效的 <see cref="T:System.Diagnostics.EventLogEntryType" /> 值。</exception>
      <returns>指示事件项类型的 <see cref="T:System.Diagnostics.EventLogEntryType" /> 值。 默认值是 <see cref="F:System.Diagnostics.EventLogEntryType.Information" />。</returns>
    </member>
    <member name="P:System.Diagnostics.EventInstance.InstanceId">
      <summary>获取或设置指定事件项的消息文本的资源标识符。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">该属性设置为负值或大于 <see cref="F:System.UInt32.MaxValue" /> 的值。</exception>
      <returns>资源标识符，与事件源的消息资源文件中定义的字符串对应。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLog">
      <summary>提供与 Windows 事件日志的交互。</summary>
    </member>
    <member name="E:System.Diagnostics.EventLog.EntryWritten">
      <summary>向本地计算机上的事件日志写入项时发生。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.EventLog" /> 类的新实例。 不将该实例与任何日志关联。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.EventLog" /> 类的新实例。 将该实例与本地计算机上的日志关联。</summary>
      <param name="logName">本地计算机上日志的名称。</param>
      <exception cref="T:System.ArgumentNullException">日志名称为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">日志名称无效。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.EventLog" /> 类的新实例。 将该实例与指定计算机上的日志关联。</summary>
      <param name="logName">指定算机上日志的名称。</param>
      <param name="machineName">日志所在的计算机。</param>
      <exception cref="T:System.ArgumentNullException">日志名称为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">日志名称无效。  
  
 - 或 -  
  
 计算机名称无效。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.EventLog" /> 类的新实例。 将实例与指定的计算机上的日志关联，并为 <see cref="T:System.Diagnostics.EventLog" /> 实例创建或分配指定的源。</summary>
      <param name="logName">指定的计算机上日志的名称</param>
      <param name="machineName">日志所在的计算机。</param>
      <param name="source">事件日志项的源。</param>
      <exception cref="T:System.ArgumentNullException">日志名称为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">日志名称无效。  
  
 - 或 -  
  
 计算机名称无效。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.BeginInit">
      <summary>开始初始化用于窗体或由其他组件使用的 <see cref="T:System.Diagnostics.EventLog" />。 此初始化在运行时发生。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Diagnostics.EventLog" /> 已初始化完毕。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Clear">
      <summary>从事件日志中移除所有项。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">未成功清除事件日志。  
  
 - 或 -  
  
 无法打开日志。 一个 Windows 错误代码不可用。</exception>
      <exception cref="T:System.ArgumentException">没有为 <see cref="P:System.Diagnostics.EventLog.Log" /> 属性指定值。 确保日志名称不是一个空字符串。</exception>
      <exception cref="T:System.InvalidOperationException">该日志不存在。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Close">
      <summary>关闭事件日志并释放读写句柄。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">事件日志的读句柄或写句柄未成功释放。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
      <summary>通过使用为该事件源和对应的事件日志指定的配置属性，建立一个写入本地化事件消息的有效事件源。</summary>
      <param name="sourceData">事件源及其目标事件日志的配置属性。</param>
      <exception cref="T:System.ArgumentException">在 <paramref name="sourceData" /> 中指定的计算机名称无效。  
  
- 或 - 
在 <paramref name="sourceData" /> 中指定的源名称为 <see langword="null" />。  
  
- 或 - 
在 <paramref name="sourceData" /> 中指定的日志名称无效。 事件日志名称必须由可打印字符组成，且不得包含字符“*”、“?”或“\”。  
  
- 或 - 
在 <paramref name="sourceData" /> 中指定的日志名称对用户日志创建无效。 事件日志名称 AppEvent、SysEvent 和 SecEvent 是保留为系统使用的。  
  
- 或 - 
该日志名称与一个现有事件源名称相匹配。  
  
- 或 - 
在 <paramref name="sourceData" /> 中指定的源名称导致注册表项路径的长度超过 254 个字符。  
  
- 或 - 
在 <paramref name="sourceData" /> 中指定的日志名称的前 8 个字符不唯一。  
  
- 或 - 
在 <paramref name="sourceData" /> 中指定的源名称已经注册过。  
  
- 或 - 
在 <paramref name="sourceData" /> 中指定的源名称与一个现有事件日志名称相匹配。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceData" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)">
      <summary>建立指定的源名称作为向本地计算机上的日志中写入日志项的有效事件源。 此方法还可在本地计算机上创建一个新的自定义日志。</summary>
      <param name="source">应用程序在本地计算机上注册时所采用的源名称。</param>
      <param name="logName">源的项写入的日志名。 可能的值包括“应用程序”、“系统”或自定义事件日志。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 为空字符串 ("") 或 <see langword="null" />。  
  
- 或 - 
 <paramref name="logName" /> 不是有效的事件日志名称。 事件日志名称必须由可打印字符组成，且不得包含字符“*”、“?”或“\”。  
  
- 或 - 
 <paramref name="logName" />对用户日志创建无效。 事件日志名称 AppEvent、SysEvent 和 SecEvent 是保留为系统使用的。  
  
- 或 - 
该日志名称与一个现有事件源名称相匹配。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。  
  
- 或 - 
<paramref name="logName" /> 的前 8 个字符与现有事件日志名称的前 8 个字符相匹配。  
  
- 或 - 
无法注册该源，因为它已存在于本地计算机上。  
  
- 或 - 
该源名称与一个现有事件日志名称相匹配。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能在本地计算机上打开。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)">
      <summary>建立指定的源名称作为向指定计算机上的日志中写入项的有效事件源。 此方法还可用于在指定计算机上创建一个新的自定义日志。</summary>
      <param name="source">应用程序在指定计算机上注册时所采用的源。</param>
      <param name="logName">源的项写入的日志名。 可能的值包括“应用程序”、“系统”或自定义事件日志。 如果不指定值，则 <paramref name="logName" /> 默认为应用程序。</param>
      <param name="machineName">用来注册此事件源的计算机名称，对于本地计算机则为“.”。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 不是有效的计算机名称。  
  
- 或 - 
 <paramref name="source" /> 为空字符串 ("") 或 <see langword="null" />。  
  
- 或 - 
 <paramref name="logName" /> 不是有效的事件日志名称。 事件日志名称必须由可打印字符组成，且不得包含字符“*”、“?”或“\”。  
  
- 或 - 
 <paramref name="logName" />对用户日志创建无效。 事件日志名称 AppEvent、SysEvent 和 SecEvent 是保留为系统使用的。  
  
- 或 - 
该日志名称与一个现有事件源名称相匹配。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。  
  
- 或 - 
<paramref name="logName" /> 的前 8 个字符与指定计算机上现有事件日志名称的前 8 个字符相匹配。  
  
- 或 - 
源无法注册，因为它已存在于指定的计算机上。  
  
- 或 - 
该源名称与一个现有事件源名称相匹配。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能在指定的计算机上打开。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String)">
      <summary>从本地计算机上移除事件日志。</summary>
      <param name="logName">要删除的日志的名称。 可能的值包括：“应用程序”、“安全性”、“系统”和计算机上的任何自定义事件日志。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" /> 为空字符串 ("") 或 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能在本地计算机上打开。  
  
- 或 -
  
 本地计算机上不存在该日志。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">未成功清除事件日志。  
  
 - 或 -  
  
 无法打开日志。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String,System.String)">
      <summary>从指定计算机上移除事件日志。</summary>
      <param name="logName">要删除的日志的名称。 可能的值包括：“应用程序”、“安全”、“系统”和指定计算机上的任何自定义事件日志。</param>
      <param name="machineName">要从中删除日志的计算机名称，对于本地计算机则为“.”。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" /> 为空字符串 ("") 或 <see langword="null" />。  
  
- 或 - 
 <paramref name="machineName" /> 不是有效的计算机名称。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能在指定的计算机上打开。  
  
- 或 -
  
 指定的计算机上不存在该日志。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">未成功清除事件日志。  
  
 - 或 -  
  
 无法打开日志。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)">
      <summary>从本地计算机的事件日志中移除事件源注册。</summary>
      <param name="source">应用程序在事件日志系统中用来注册的名称。</param>
      <exception cref="T:System.ArgumentException">本地计算机的注册表中不存在 <paramref name="source" /> 参数。  
  
- 或 - 
您对事件日志的注册表项没有写访问权。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)">
      <summary>从指定的计算机上移除应用程序的事件源注册。</summary>
      <param name="source">应用程序在事件日志系统中用来注册的名称。</param>
      <param name="machineName">要从中移除注册的计算机名，对于本地计算机则为“.”。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 参数无效。  
  
- 或 - 
指定计算机的注册表中不存在 <paramref name="source" /> 参数。  
  
- 或 - 
您对事件日志的注册表项没有写访问权。</exception>
      <exception cref="T:System.InvalidOperationException">无法删除 <paramref name="source" />，原因是在注册表中，<paramref name="source" /> 的父注册表项不包含与其同名的子项。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Diagnostics.EventLog" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.EventLog.EndInit">
      <summary>结束用于窗体或由其他组件使用的 <see cref="T:System.Diagnostics.EventLog" /> 的初始化。 此初始化在运行时发生。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String)">
      <summary>确定该日志是否存在于本地计算机上。</summary>
      <param name="logName">要搜索的日志的名称。 可能的值包括：“应用程序”、“安全性”、“系统”、其他应用程序特定的日志（如与 Active Directory 关联的日志）或计算机上的任何自定义日志。</param>
      <exception cref="T:System.ArgumentException">logName 为 <see langword="null" /> 或该值为空。</exception>
      <returns>如果该日志存在于本地计算机上，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String,System.String)">
      <summary>确定该日志是否存在于指定计算机上。</summary>
      <param name="logName">要搜索的日志。 可能的值包括：“应用程序”、“安全性”、“系统”、其他应用程序特定的日志（如与 Active Directory 关联的日志）或计算机上的任何自定义日志。</param>
      <param name="machineName">要在其上搜索日志的计算机的名称，对于本地计算机则为“.”。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 参数的格式无效。 请确保对在其上执行搜索的计算机使用了正确的语法。  
  
- 或 - 
<paramref name="logName" /> 为 <see langword="null" /> 或该值为空。</exception>
      <returns>如果该日志存在于指定的计算机上，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs">
      <summary>在本地计算机上搜索所有的事件日志并创建一个包含该列表的 <see cref="T:System.Diagnostics.EventLog" /> 对象数组。</summary>
      <exception cref="T:System.SystemException">您对注册表没有读访问权。  
  
 - 或 -  
  
 计算机上没有事件日志服务。</exception>
      <returns>
        <see cref="T:System.Diagnostics.EventLog" /> 类型的数组，表示本地计算机上的日志。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs(System.String)">
      <summary>在给定计算机上搜索所有事件日志并创建一个包含该列表的 <see cref="T:System.Diagnostics.EventLog" /> 对象数组。</summary>
      <param name="machineName">在其上搜索事件日志的计算机。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 参数是无效的计算机名称。</exception>
      <exception cref="T:System.InvalidOperationException">您对注册表没有读访问权。  
  
 - 或 -  
  
 计算机上没有事件日志服务。</exception>
      <returns>
        <see cref="T:System.Diagnostics.EventLog" /> 类型的数组，表示给定计算机上的日志。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)">
      <summary>获取指定的源注册到的日志的名称。</summary>
      <param name="source">事件源的名称。</param>
      <param name="machineName">要从中删除日志的计算机名称，对于本地计算机则为“.”。</param>
      <returns>与注册表中的指定源关联的日志名称。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)">
      <summary>更改已配置的行为，以便在事件日志达到其最大文件大小时写入新项。</summary>
      <param name="action">向事件日志写入新项的溢出行为。</param>
      <param name="retentionDays">每个事件日志项要保留的最小天数。 只有在 <paramref name="action" /> 设置为 <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> 时，才使用此参数。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> 不是有效的 <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> 值。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="retentionDays" /> 小于 1 或大于 365。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 值不是有效的日志名。  
  
- 或 - 
事件日志的注册表项无法在目标计算机上打开。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)">
      <summary>指定该事件日志的本地化名称，它显示在服务器事件查看器中。</summary>
      <param name="resourceFile">本地化资源文件的完全指定的路径。</param>
      <param name="resourceId">在资源文件内指明一个本地化字符串的资源标识符。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 值不是有效的日志名。  
  
- 或 - 
事件日志的注册表项无法在目标计算机上打开。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceFile" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String)">
      <summary>确定事件源是否已在本地计算机上注册。</summary>
      <param name="source">事件源的名称。</param>
      <exception cref="T:System.Security.SecurityException">未找到 <paramref name="source" />，无法搜索部分或全部事件日志。</exception>
      <returns>如果事件源已在本地计算机上注册，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)">
      <summary>确定事件源是否已在指定的计算机上注册。</summary>
      <param name="source">事件源的名称。</param>
      <param name="machineName">在其上查看的计算机的名称，对于本地计算机则为“.”。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 是无效的计算机名称。</exception>
      <exception cref="T:System.Security.SecurityException">未找到 <paramref name="source" />，无法搜索部分或全部事件日志。</exception>
      <returns>如果事件源已在给定计算机上注册，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String)">
      <summary>将信息类型项与给定的消息文本一起写入事件日志。</summary>
      <param name="message">要写入事件日志的字符串。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。  
  
- 或 - 
该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。  
  
- 或 - 
已为其他事件日志注册了该源。  
  
- 或 - 
消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)">
      <summary>将错误、警告、信息、成功审核或失败审核项与给定的消息文本一起写入事件日志。</summary>
      <param name="message">要写入事件日志的字符串。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。  
  
- 或 - 
该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。  
  
- 或 - 
已为其他事件日志注册了该源。  
  
- 或 - 
消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>将一个具有给定消息文本和应用程序定义的事件标识符的项写入事件日志。</summary>
      <param name="message">要写入事件日志的字符串。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</param>
      <param name="eventID">事件的应用程序特定标识符。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。  
  
- 或 - 
该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。  
  
- 或 - 
已为其他事件日志注册了该源。  
  
- 或 - 
 <paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。  
  
- 或 - 
消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>将一个具有给定消息文本、应用程序定义的事件标识符和应用程序定义的类别的项写入事件日志。</summary>
      <param name="message">要写入事件日志的字符串。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</param>
      <param name="eventID">事件的应用程序特定标识符。</param>
      <param name="category">与消息关联的应用程序特定子类别。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。  
  
- 或 - 
该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。  
  
- 或 - 
已为其他事件日志注册了该源。  
  
- 或 - 
 <paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。  
  
- 或 - 
消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>将一个具有给定消息文本、应用程序定义的事件标识符和应用程序定义的类别的项写入事件日志，并向消息追加二进制数据。</summary>
      <param name="message">要写入事件日志的字符串。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</param>
      <param name="eventID">事件的应用程序特定标识符。</param>
      <param name="category">与消息关联的应用程序特定子类别。</param>
      <param name="rawData">包含与此项关联的二进制数据的字节数组。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。  
  
- 或 - 
该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。  
  
- 或 - 
已为其他事件日志注册了该源。  
  
- 或 - 
 <paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。  
  
- 或 - 
消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)">
      <summary>使用指定的注册事件源将信息类型项与给定的消息文本一起写入事件日志。</summary>
      <param name="source">应用程序在指定计算机上注册时所采用的源。</param>
      <param name="message">要写入事件日志的字符串。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 值是空字符串 ("")。  
  
- 或 - 
<paramref name="source" /> 值为 <see langword="null" />。  
  
- 或 - 
消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)">
      <summary>使用指定的注册事件源，将错误、警告、信息、成功审核或失败审核项与给定的消息文本一起写入事件日志。</summary>
      <param name="source">应用程序在指定计算机上注册时所采用的源。</param>
      <param name="message">要写入事件日志的字符串。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 值是空字符串 ("")。  
  
- 或 - 
<paramref name="source" /> 值为 <see langword="null" />。  
  
- 或 - 
消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>使用指定的注册事件源，将一个具有给定消息文本和应用程序定义的事件标识符的项写入事件日志。</summary>
      <param name="source">应用程序在指定计算机上注册时所采用的源。</param>
      <param name="message">要写入事件日志的字符串。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</param>
      <param name="eventID">事件的应用程序特定标识符。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 值是空字符串 ("")。  
  
- 或 - 
<paramref name="source" /> 值为 <see langword="null" />。  
  
- 或 - 
 <paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。  
  
- 或 - 
消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>通过使用指定的注册事件源，将一个具有给定消息文本、应用程序定义的事件标识符和应用程序定义的类别的项写入事件日志。 事件查看器可使用 <paramref name="category" /> 筛选日志中的事件。</summary>
      <param name="source">应用程序在指定计算机上注册时所采用的源。</param>
      <param name="message">要写入事件日志的字符串。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</param>
      <param name="eventID">事件的应用程序特定标识符。</param>
      <param name="category">与消息关联的应用程序特定子类别。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 值是空字符串 ("")。  
  
- 或 - 
<paramref name="source" /> 值为 <see langword="null" />。  
  
- 或 - 
 <paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。  
  
- 或 - 
消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>（使用指定的注册事件源）将一个包含给定消息文本、应用程序定义的事件标识符和应用程序定义的类别的项写入事件日志，并向消息追加二进制数据。</summary>
      <param name="source">应用程序在指定计算机上注册时所采用的源。</param>
      <param name="message">要写入事件日志的字符串。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 值之一。</param>
      <param name="eventID">事件的应用程序特定标识符。</param>
      <param name="category">与消息关联的应用程序特定子类别。</param>
      <param name="rawData">包含与此项关联的二进制数据的字节数组。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 值是空字符串 ("")。  
  
- 或 - 
<paramref name="source" /> 值为 <see langword="null" />。  
  
- 或 - 
 <paramref name="eventID" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。  
  
- 或 - 
消息字符串长于 31,839 字节（在 Windows Vista 之前，在 Windows 操作系统上为 32,766 字节)。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> 不是有效的 <see cref="T:System.Diagnostics.EventLogEntryType" />。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>写入包含给定的事件数据、消息替换字符串和关联的二进制数据的事件日志项。</summary>
      <param name="instance">表示本地化事件日志项的 <see cref="T:System.Diagnostics.EventInstance" /> 实例。</param>
      <param name="data">包含与此项关联的二进制数据的字节数组。</param>
      <param name="values">要合并到事件日志项的消息文本中的字符串数组。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。  
  
- 或 - 
该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。  
  
- 或 - 
已为其他事件日志注册了该源。  
  
- 或 - 
 <paramref name="instance.InstanceId" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。  
  
- 或 - 
 <paramref name="values" /> 超过了 256 个元素。  
  
- 或 - 
<paramref name="values" /> 元素中有一个超过了 32766 个字节。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])">
      <summary>向事件日志写入本地化项。</summary>
      <param name="instance">表示本地化事件日志项的 <see cref="T:System.Diagnostics.EventInstance" /> 实例。</param>
      <param name="values">要合并到事件日志项的消息文本中的字符串数组。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> 的 <see cref="T:System.Diagnostics.EventLog" /> 属性尚未设置。  
  
- 或 - 
该方法尝试注册新的事件源，但 <see cref="P:System.Diagnostics.EventLog.MachineName" /> 中的计算机名称无效。  
  
- 或 - 
已为其他事件日志注册了该源。  
  
- 或 - 
 <paramref name="instance.InstanceId" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。  
  
- 或 - 
 <paramref name="values" /> 超过了 256 个元素。  
  
- 或 - 
<paramref name="values" /> 元素中有一个超过了 32766 个字节。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>使用指定的已注册事件源，写入包含给定的事件数据、消息替换字符串和关联的二进制数据的事件日志项。</summary>
      <param name="source">在指定的计算机上为应用程序注册的事件源的名称。</param>
      <param name="instance">表示本地化事件日志项的 <see cref="T:System.Diagnostics.EventInstance" /> 实例。</param>
      <param name="data">包含与此项关联的二进制数据的字节数组。</param>
      <param name="values">要合并到事件日志项的消息文本中的字符串数组。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 值是空字符串 ("")。  
  
- 或 - 
<paramref name="source" /> 值为 <see langword="null" />。  
  
- 或 - 
 <paramref name="instance.InstanceId" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。  
  
- 或 - 
 <paramref name="values" /> 超过了 256 个元素。  
  
- 或 - 
<paramref name="values" /> 元素中有一个超过了 32766 个字节。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])">
      <summary>使用指定的已注册事件源写入包含给定事件数据和消息替换字符串的事件日志项。</summary>
      <param name="source">在指定的计算机上为应用程序注册的事件源的名称。</param>
      <param name="instance">表示本地化事件日志项的 <see cref="T:System.Diagnostics.EventInstance" /> 实例。</param>
      <param name="values">要合并到事件日志项的消息文本中的字符串数组。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 值是空字符串 ("")。  
  
- 或 - 
<paramref name="source" /> 值为 <see langword="null" />。  
  
- 或 - 
 <paramref name="instance.InstanceId" /> 小于零或大于 <see cref="F:System.UInt16.MaxValue" />。  
  
- 或 - 
 <paramref name="values" /> 超过了 256 个元素。  
  
- 或 - 
<paramref name="values" /> 元素中有一个超过了 32766 个字节。  
  
- 或 - 
此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">事件日志的注册表项未能打开。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">将事件项写入事件日志时，操作系统报告了一个错误。 一个 Windows 错误代码不可用。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.EnableRaisingEvents">
      <summary>获取或设置一个值，用以指示 <see cref="T:System.Diagnostics.EventLog" /> 是否接收 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 事件通知。</summary>
      <exception cref="T:System.InvalidOperationException">事件日志位于远程计算机上。</exception>
      <returns>如果 <see cref="T:System.Diagnostics.EventLog" /> 在有项写入日志时接收通知，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.Entries">
      <summary>获取事件日志的内容。</summary>
      <returns>
        <see cref="T:System.Diagnostics.EventLogEntryCollection" />，保留事件日志中的项。 每个项均与 <see cref="T:System.Diagnostics.EventLogEntry" /> 类的一个实例关联。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.Log">
      <summary>获取或设置读取或写入的日志名称。</summary>
      <returns>日志的名称。 这可以是“应用程序”、“系统”、“安全性”或一个自定义的日志名称。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.LogDisplayName">
      <summary>获取事件日志的友好名称。</summary>
      <exception cref="T:System.InvalidOperationException">此计算机的注册表中不存在指定的 <see cref="P:System.Diagnostics.EventLog.Log" />。</exception>
      <returns>一个表示系统的事件查看器中事件日志的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MachineName">
      <summary>获取或设置在其上读取或写入事件的计算机的名称。</summary>
      <exception cref="T:System.ArgumentException">计算机名称无效。</exception>
      <returns>事件日志驻留的服务器的名称。 默认为本地计算机 (".")。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MaximumKilobytes">
      <summary>获取或设置最大事件日志大小（以 KB 为单位）。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">指定值小于 64，或大于 4194240，或不是 64 的偶数倍。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 值不是有效的日志名。  
  
- 或 - 
事件日志的注册表项无法在目标计算机上打开。</exception>
      <returns>最大事件日志大小（以 KB 为单位）。 默认值为 512，表示最大文件大小为 512 KB。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MinimumRetentionDays">
      <summary>获取要在事件日志中保留项的天数。</summary>
      <returns>事件日志中的项被保留的天数。 默认值为 7。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.OverflowAction">
      <summary>获取已配置的行为，以便在事件日志达到其最大文件大小时存储新项。</summary>
      <returns>
        <see cref="T:System.Diagnostics.OverflowAction" /> 值，指定在事件日志达到其最大日志大小时存储新项的已配置行为。 默认值为 <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" />。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.Source">
      <summary>获取或设置在写入事件日志时要注册和使用的源名称。</summary>
      <exception cref="T:System.ArgumentException">此源名称导致注册表项路径的长度超过 254 个字符。</exception>
      <returns>在事件日志中注册为项源的名称。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.SynchronizingObject">
      <summary>获取或设置用于封送事件处理程序调用的对象，该调用在有 <see cref="T:System.Diagnostics.EventLog" /> 项写入事件时发出。</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISynchronizeInvoke" />，用于封送由事件日志上的 <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> 事件引发的事件处理程序调用。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntry">
      <summary>在事件日志中封装单个记录。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)">
      <summary>对两个事件日志项进行比较。</summary>
      <param name="otherEntry">要比较的 <see cref="T:System.Diagnostics.EventLogEntry" />。</param>
      <returns>如果 <see cref="T:System.Diagnostics.EventLogEntry" /> 对象完全相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Category">
      <summary>获取与该项的 <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> 属性关联的文本。</summary>
      <exception cref="T:System.Exception">未能为与类别关联的插入字符串之一分配空间。</exception>
      <returns>应用程序特定的类别文本。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.CategoryNumber">
      <summary>获取事件日志项的类别号。</summary>
      <returns>该项的应用程序特定类别号。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Data">
      <summary>获取与该项关联的二进制数据。</summary>
      <returns>包含与此项关联的二进制数据的字节数组。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EntryType">
      <summary>获取该项的事件类型。</summary>
      <returns>与事件日志中的项相关联的事件类型。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EventID">
      <summary>获取当前事件项的应用程序特定事件标识符。</summary>
      <returns>事件消息的应用程序特定标识符。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Index">
      <summary>获取该项在事件日志中的索引。</summary>
      <returns>该项在事件日志中的索引。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.InstanceId">
      <summary>获取指定事件项的消息文本的资源标识符。</summary>
      <returns>资源标识符，与事件源的消息资源文件中的字符串定义对应。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.MachineName">
      <summary>获取在其上生成该项的计算机的名称。</summary>
      <returns>包含事件日志的计算机的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Message">
      <summary>获取与该事件项关联的本地化消息。</summary>
      <exception cref="T:System.Exception">未能为与消息关联的插入字符串之一分配空间。</exception>
      <returns>消息的格式化、本地化文本。 其中包含关联的替换字符串。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.ReplacementStrings">
      <summary>获取与事件日志项关联的替换字符串。</summary>
      <returns>包含存储在事件项中的替换字符串的数组。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Source">
      <summary>获取生成该事件的应用程序的名称。</summary>
      <returns>在事件日志中注册为该事件的源的名称。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeGenerated">
      <summary>获取生成该事件的本地时间。</summary>
      <returns>生成该事件的本地时间。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeWritten">
      <summary>获取在日志中写入该事件的本地时间。</summary>
      <returns>在日志中写入该事件的本地时间。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.UserName">
      <summary>获取负责该事件的用户的名称。</summary>
      <exception cref="T:System.SystemException">未能为用户的 SID 获取帐户信息。</exception>
      <returns>唯一标识用户或组的安全标识符 (SID)。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryCollection">
      <summary>定义 <see cref="T:System.Diagnostics.EventLogEntry" /> 实例的集合的大小和枚举器。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
      <summary>从特定的数组索引开始，将 <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 的元素复制到 <see cref="T:System.Diagnostics.EventLogEntry" /> 实例的数组。</summary>
      <param name="entries">
        <see cref="T:System.Diagnostics.EventLogEntry" /> 实例的一维数组，它是从集合复制来的元素的目标。 该数组的索引必须从零开始。</param>
      <param name="index">数组中开始复制的位置的索引（从零开始）。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
      <summary>支持在 <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 对象上进行简单迭代。</summary>
      <returns>可用于在集合上进行迭代的对象。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>将该集合的元素复制到 <see cref="T:System.Array" />（从特定的 <see cref="T:System.Array" /> 索引开始）。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，这是从集合中复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Count">
      <summary>获取事件日志中的项数（即 <see cref="T:System.Diagnostics.EventLogEntry" /> 集合中的元素个数）。</summary>
      <returns>当前在事件日志中的项数。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
      <summary>基于从 0（零）开始的索引，获取事件日志中的项。</summary>
      <param name="index">与事件日志项关联的从零开始的索引。</param>
      <returns>位于 <paramref name="index" /> 参数所指定的位置的事件日志项。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
      <summary>获取一个值，该值指示是否同步对 <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 的访问（线程安全）。</summary>
      <returns>如果对该集合的访问不是同步的（线程安全），则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
      <summary>获取一个对象，该对象可用于同步对 <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 对象的访问。</summary>
      <returns>用于同步对集合的访问的对象。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryType">
      <summary>指定事件日志项的事件类型。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Error">
      <summary>错误事件。 它指示用户应该知道的严重问题（通常是功能或数据的丢失）。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.FailureAudit">
      <summary>失败审核事件。 它指示当审核访问尝试失败（例如打开文件的尝试失败）时发生的安全事件。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Information">
      <summary>信息事件。 它指示重要、成功的操作。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.SuccessAudit">
      <summary>成功审核事件。 它指示当审核访问尝试成功（例如成功登录）时发生的安全事件。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Warning">
      <summary>警告事件。 它指示并不立即具有重要性的问题，但此问题可能表示将来会导致问题的条件。</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogTraceListener">
      <summary>提供一个简单的侦听器，该侦听器将跟踪或调试输出指引至 <see cref="T:System.Diagnostics.EventLog" />。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor">
      <summary>在没有跟踪侦听器的情况下，初始化 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
      <summary>使用指定的事件日志初始化 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 类的新实例。</summary>
      <param name="eventLog">要写入的事件日志。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
      <summary>使用指定的源初始化 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 类的新实例。</summary>
      <param name="source">现有的事件日志源的名称。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Close">
      <summary>关闭事件日志，以使其不再接收跟踪或调试输出。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>将跟踪信息、数据对象和事件信息写入事件日志中。</summary>
      <param name="eventCache">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的对象。</param>
      <param name="source">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</param>
      <param name="severity">指定引发跟踪的事件的类型的其中一个枚举值。</param>
      <param name="id">事件的数值标识符。 <paramref name="source" /> 和 <paramref name="id" /> 的组合可以唯一地标识一个事件。</param>
      <param name="data">要向输出文件或流中写入的数据对象。</param>
      <exception cref="T:System.ArgumentException">未指定 <paramref name="source" />。  
  
- 或 - 
日志项超过 32,766 个字符。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>将跟踪信息、数据对象的数组和事件信息写入事件日志中。</summary>
      <param name="eventCache">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的对象。</param>
      <param name="source">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</param>
      <param name="severity">指定引发跟踪的事件的类型的其中一个枚举值。</param>
      <param name="id">事件的数值标识符。 <paramref name="source" /> 和 <paramref name="id" /> 的组合可以唯一地标识一个事件。</param>
      <param name="data">数据对象的数组。</param>
      <exception cref="T:System.ArgumentException">未指定 <paramref name="source" />。  
  
- 或 - 
日志项超过 32,766 个字符。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>将跟踪信息、消息和事件信息写入事件日志中。</summary>
      <param name="eventCache">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的对象。</param>
      <param name="source">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</param>
      <param name="severity">指定引发跟踪的事件的类型的其中一个枚举值。</param>
      <param name="id">事件的数值标识符。 <paramref name="source" /> 和 <paramref name="id" /> 的组合可以唯一地标识一个事件。</param>
      <param name="message">跟踪消息。</param>
      <exception cref="T:System.ArgumentException">未指定 <paramref name="source" />。  
  
- 或 - 
日志项超过 32,766 个字符。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>将跟踪信息、格式化对象数组和事件信息写入事件日志中。</summary>
      <param name="eventCache">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的对象。</param>
      <param name="source">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</param>
      <param name="severity">指定引发跟踪的事件的类型的其中一个枚举值。</param>
      <param name="id">事件的数值标识符。 <paramref name="source" /> 和 <paramref name="id" /> 的组合可以唯一地标识一个事件。</param>
      <param name="format">包含零个或多个格式项的格式字符串，这些项与 <paramref name="args" /> 数组中的对象相对应。</param>
      <param name="args">包含零个或多个要格式化的对象的 <see langword="object" /> 数组。</param>
      <exception cref="T:System.ArgumentException">未指定 <paramref name="source" />。  
  
- 或 - 
日志项超过 32,766 个字符。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
      <summary>将消息写入此实例的事件日志。</summary>
      <param name="message">要写入的消息。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> 的长度超过 32,766 个字符。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
      <summary>将消息写入此实例的事件日志。</summary>
      <param name="message">要写入的消息。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> 的长度超过 32,766 个字符。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.EventLog">
      <summary>获取或设置要写入的事件日志。</summary>
      <returns>要写入的事件日志。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.Name">
      <summary>获取或设置此 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 的名称。</summary>
      <returns>此跟踪侦听器的名称。</returns>
    </member>
    <member name="T:System.Diagnostics.EventSourceCreationData">
      <summary>表示用于在本地或远程计算机上创建事件日志源的配置设置。</summary>
    </member>
    <member name="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
      <summary>使用指定的事件源和事件日志名称对 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 类的新实例进行初始化。</summary>
      <param name="source">要在事件日志中注册为项源的名称。</param>
      <param name="logName">要将来自源的项写入其中的日志的名称。</param>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
      <summary>获取或设置类别资源文件中类别的数目。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">该属性设置为负值或大于 <see cref="F:System.UInt16.MaxValue" /> 的值。</exception>
      <returns>类别资源文件中的类别的数目。 默认值为零。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
      <summary>获取或设置包含源的类别字符串的资源文件的路径。</summary>
      <returns>类别资源文件的路径。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.LogName">
      <summary>获取或设置事件日志的名称，事件源要向该日志写入项。</summary>
      <returns>事件日志的名称。 这可以是 Application、System 或一个自定义的日志名称。 默认值为“Application”。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MachineName">
      <summary>获取或设置在其上注册事件源的计算机的名称。</summary>
      <exception cref="T:System.ArgumentException">计算机名称无效。</exception>
      <returns>在其上注册事件源的系统的名称。 默认为本地计算机 (".")。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
      <summary>获取或设置消息资源文件的路径，该文件包含源的消息格式字符串。</summary>
      <returns>消息资源文件的路径。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
      <summary>获取或设置资源文件的路径，该文件包含源的消息参数字符串。</summary>
      <returns>参数资源文件的路径。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.Source">
      <summary>获取或设置要在事件日志中注册为事件源的名称。</summary>
      <returns>要在事件日志中注册为项源的名称。 默认值为空字符串("")。</returns>
    </member>
    <member name="T:System.Diagnostics.OverflowAction">
      <summary>指定如何处理已达到最大文件大小的事件日志中的项。</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.DoNotOverwrite">
      <summary>指示当事件日志已满时保留现有日志项，而放弃新日志项。</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteAsNeeded">
      <summary>指示当事件日志已满时用每个新日志项覆盖最旧的日志项。</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteOlder">
      <summary>指示当事件日志已满时用新事件覆盖保留时间已超过 <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> 属性值指定的时间的事件。 如果事件日志已满并且没有任何事件的保留时间已超过 <see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> 属性值指定的时间，则放弃新事件。</summary>
    </member>
  </members>
</doc>