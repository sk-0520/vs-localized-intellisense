<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.AccessControl</name>
  </assembly>
  <members>
    <member name="T:System.Security.AccessControl.EventWaitHandleAccessRule">
      <summary>Stellt eine Gruppe von Zugriffsrechten dar, die einem Benutzer oder einer Gruppe gewährt oder verweigert werden. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />-Klasse und gibt den Benutzer oder die Gruppe an, für den bzw. die die Regel gilt. Außerdem werden die Zugriffsrechte angegeben und ob diese gewährt oder verweigert werden.</summary>
      <param name="identity">Der Benutzer oder die Gruppe, für den bzw. die die Regel gilt. Muss vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> oder einem Typ wie etwa<see cref="T:System.Security.Principal.NTAccount" /> sein, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</param>
      <param name="eventRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />-Werten, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="type" /> gibt einen ungültigen Wert an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="eventRights" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />-Klasse und gibt den Namen des Benutzers oder der Gruppe an, für den bzw. die die Regel gilt. Außerdem werden die Zugriffsrechte angegeben und ob diese gewährt oder verweigert werden.</summary>
      <param name="identity">Der Name des Benutzers oder der Gruppe, für den bzw. die die Regel gilt.</param>
      <param name="eventRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />-Werten, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="type" /> gibt einen ungültigen Wert an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="identity" /> ist eine Zeichenfolge der Länge 0 (null).  
  
- oder - 
 <paramref name="identity" /> ist länger als 512 Zeichen.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights">
      <summary>Ruft die von der Zugriffsregel gewährten oder verweigerten Rechte ab.</summary>
      <returns>Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />-Werten, mit denen die in der Zugriffsregel gewährten oder verweigerten Rechte angegeben werden.</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleAuditRule">
      <summary>Stellt eine Reihe von Zugriffsrechten eines Benutzers oder einer Gruppe dar, die überwacht werden soll. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />-Klasse. Dabei werden der Benutzer bzw. die Gruppe angegeben sowie die Rechte, die überwacht werden sollen. Außerdem wird angegeben, ob Erfolge, Fehler oder beides überwacht werden sollen.</summary>
      <param name="identity">Der Benutzer oder die Gruppe, für den bzw. die die Regel gilt. Muss vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> oder einem Typ wie etwa<see cref="T:System.Security.Principal.NTAccount" /> sein, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</param>
      <param name="eventRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />-Werten, die die Art der zu überwachenden Zugriffe angibt.</param>
      <param name="flags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.AuditFlags" />-Werten, die angibt, ob Erfolgs- oder Fehlerüberwachung oder beides stattfinden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="flags" /> gibt einen ungültigen Wert an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="eventRights" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights">
      <summary>Ruft die von der Überwachungsregel betroffenen Zugriffsrechte ab.</summary>
      <returns>Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />-Werten, die die von der Überwachungsregel betroffenen Rechte angibt.</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleRights">
      <summary>Gibt die Zugriffssteuerungsrechte an, die auf benannte Systemereignisobjekte angewendet werden können.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions">
      <summary>Das Recht, die dem benannten Ereignis zugeordneten Sicherheits- und Überwachungsregeln zu ändern.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Delete">
      <summary>Das Recht, ein benanntes Ereignis zu löschen.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.FullControl">
      <summary>Das Recht, die vollständige Kontrolle über ein benanntes Ereignis auszuüben und seine Zugriffsregeln und Überwachungsregeln zu ändern.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Modify">
      <summary>Das Recht, den signalisierten Zustand eines benannten Ereignisses festzulegen oder zurückzusetzen.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions">
      <summary>Das Recht, die Zugriffsregeln und die Überwachungsregeln eines benannten Ereignisses zu öffnen und zu kopieren.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Synchronize">
      <summary>Das Recht, auf ein benanntes Ereignis zu warten.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership">
      <summary>Das Recht, den Besitzer eines benannten Ereignisses zu ändern.</summary>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleSecurity">
      <summary>Stellt die für ein benanntes System-WaitHandle übernommene Windows-Zugriffssteuerungssicherheit dar. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />-Klasse mit Standardwerten.</summary>
      <exception cref="T:System.NotSupportedException">Diese Klasse wird unter Windows 98 oder Windows Millennium Edition nicht unterstützt.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Erstellt eine neue Zugriffssteuerungsregel für den angegebenen Benutzer mit den angegebenen Zugriffsrechten und Flags sowie der angegebenen Zugriffssteuerung.</summary>
      <param name="identityReference">Eine <see cref="T:System.Security.Principal.IdentityReference" />, mit deren Hilfe der Benutzer oder die Gruppe angegeben wird, für den bzw. die die Regel gilt.</param>
      <param name="accessMask">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />-Werten, die die zu verweigernden oder zu gewährenden Zugriffsrechte angibt (in eine ganze Zahl umgewandelt).</param>
      <param name="isInherited">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="inheritanceFlags">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="propagationFlags">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Für <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> oder <paramref name="type" /> ist ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="accessMask" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</exception>
      <returns>Ein <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />-Objekt, das die angegebenen Rechte für den angegebenen Benutzer darstellt.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Sucht nach einer übereinstimmenden Zugriffssteuerungsregel, mit der die neue Regel zusammengeführt werden kann. Wenn keine Regel gefunden wurde, wird die neue Regel hinzugefügt.</summary>
      <param name="rule">Die hinzuzufügende Zugriffssteuerungsregel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Sucht nach einer Überwachungsregel, mit der die neue Regel zusammengeführt werden kann. Wenn keine Regel gefunden wurde, wird die neue Regel hinzugefügt.</summary>
      <param name="rule">Die hinzuzufügende Überwachungsregel. Der von dieser Regel angegebene Benutzer bestimmt die Suche.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Erstellt eine neue Überwachungsregel, die den Benutzer angibt, auf den diese Regel angewendet wird, sowie die zu überwachenden Zugriffsrechte und das Ergebnis, das die Überwachungsregel auslöst.</summary>
      <param name="identityReference">Eine <see cref="T:System.Security.Principal.IdentityReference" />, mit deren Hilfe der Benutzer oder die Gruppe angegeben wird, für den bzw. die die Regel gilt.</param>
      <param name="accessMask">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />-Werten, die die zu überwachenden Zugriffsrechte angibt (in eine ganze Zahl umgewandelt).</param>
      <param name="isInherited">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="inheritanceFlags">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="propagationFlags">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="flags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.AuditFlags" />-Werten, die angibt, ob erfolgreiche Zugriffsversuche und/oder fehlgeschlagene Zugriffsversuche überwacht werden sollen.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Für <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> oder <paramref name="flags" /> ist ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="accessMask" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</exception>
      <returns>Ein <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />-Objekt, das die angegebene Überwachungsregel für den angegebenen Benutzer darstellt. Der Rückgabetyp der Methode entspricht der Basisklasse <see cref="T:System.Security.AccessControl.AuditRule" />, er kann jedoch problemlos in die abgeleitete Klasse umgewandelt werden.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Sucht nach einer Zugriffssteuerungsregel mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Zugriffsregel sowie mit kompatiblen Vererbungs- und Weitergabeflags. Wenn eine solche Regel gefunden wird, werden die in der angegebenen Zugriffsregel enthaltenen Rechte daraus entfernt.</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, die den Benutzer und den <see cref="T:System.Security.AccessControl.AccessControlType" /> angibt, nach denen gesucht werden soll, sowie eine Reihe von Vererbungs- und Weitergabeflags, mit denen eine übereinstimmende Regel (falls vorhanden) kompatibel sein muss. Gibt die Rechte an, die aus der kompatiblen Regel entfernt werden sollen (falls vorhanden).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn eine kompatible Regel gefunden wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Sucht nach allen Zugriffssteuerungsregeln mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel und entfernt diese (falls vorhanden).</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, die den Benutzer und den <see cref="T:System.Security.AccessControl.AccessControlType" /> angibt, nach denen gesucht werden soll. Alle von dieser Regel angegebenen Rechte werden ignoriert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Sucht nach einer Zugriffssteuerungsregel, die genau mit der angegebenen Regel übereinstimmt, und entfernt diese (falls vorhanden).</summary>
      <param name="rule">Das zu entfernende <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />-Element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Sucht nach einer Überwachungsregel mit demselben Benutzer wie die angegebene Regel und mit kompatiblen Vererbungs- und Weitergabeflags; wenn eine solche Regel gefunden wird, werden die in der angegebenen Regel enthaltenen Rechte daraus entfernt.</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />, die den zu suchenden Benutzer angibt, sowie eine Reihe von Vererbungs- und Weitergabeflags, mit denen eine übereinstimmende Regel (falls vorhanden) kompatibel sein muss. Gibt die Rechte an, die aus der kompatiblen Regel entfernt werden sollen (falls vorhanden).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn eine kompatible Regel gefunden wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Sucht alle Überwachungsregeln, die denselben Benutzer wie die angegebene Regel aufweisen, und entfernt sie, sofern sie gefunden wurden.</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />, die den zu suchenden Benutzer angibt. Alle von dieser Regel angegebenen Rechte werden ignoriert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Sucht nach einer Überwachungsregel, die genau mit der angegebenen Regel übereinstimmt, und entfernt diese (falls vorhanden).</summary>
      <param name="rule">Das zu entfernende <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />-Element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Entfernt alle Zugriffssteuerungsregeln mit demselben Benutzer wie in der angegebenen Regel, unabhängig von <see cref="T:System.Security.AccessControl.AccessControlType" />, und fügt anschließend die angegebene Regel hinzu.</summary>
      <param name="rule">Das hinzuzufügende <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />. Der von dieser Regel angegebene Benutzer bestimmt die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>Entfernt alle Zugriffssteuerungsregeln mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel und fügt anschließend die angegebene Regel hinzu.</summary>
      <param name="rule">Das hinzuzufügende <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />. Der Benutzer und der <see cref="T:System.Security.AccessControl.AccessControlType" /> dieser Regel bestimmen die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>Entfernt alle Überwachungsregeln mit demselben Benutzer wie in der angegebenen Regel, unabhängig vom <see cref="T:System.Security.AccessControl.AuditFlags" />-Wert, und fügt danach die angegebene Regel hinzu.</summary>
      <param name="rule">Das hinzuzufügende <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />. Der von dieser Regel angegebene Benutzer bestimmt die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType">
      <summary>Ruft den Enumerationstyp ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />-Klasse Zugriffsrechte darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />-Enumeration darstellt.</returns>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType">
      <summary>Ruft den Typ ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />-Klasse die Zugriffsregeln darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />-Klasse darstellt.</returns>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType">
      <summary>Ruft den Typ ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />-Klasse Überwachungsregeln darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />-Klasse darstellt.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAccessRule">
      <summary>Stellt eine Gruppe von Zugriffsrechten dar, die einem Benutzer oder einer Gruppe gewährt oder verweigert werden. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.MutexAccessRule" />-Klasse und gibt den Benutzer oder die Gruppe an, für den bzw. die die Regel gilt. Außerdem werden die Zugriffsrechte angegeben und ob diese gewährt oder verweigert werden.</summary>
      <param name="identity">Der Benutzer oder die Gruppe, für den bzw. die die Regel gilt. Muss vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> oder einem Typ wie etwa<see cref="T:System.Security.Principal.NTAccount" /> sein, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</param>
      <param name="eventRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.MutexRights" />-Werten, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="type" /> gibt einen ungültigen Wert an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="eventRights" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.MutexAccessRule" />-Klasse und gibt den Namen des Benutzers oder der Gruppe an, für den bzw. die die Regel gilt. Außerdem werden die Zugriffsrechte angegeben und ob diese gewährt oder verweigert werden.</summary>
      <param name="identity">Der Name des Benutzers oder der Gruppe, für den bzw. die die Regel gilt.</param>
      <param name="eventRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.MutexRights" />-Werten, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="type" /> gibt einen ungültigen Wert an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="identity" /> ist eine Zeichenfolge der Länge 0 (null).  
  
- oder - 
 <paramref name="identity" /> ist länger als 512 Zeichen.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
      <summary>Ruft die von der Zugriffsregel gewährten oder verweigerten Rechte ab.</summary>
      <returns>Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.MutexRights" />-Werten, mit denen die in der Zugriffsregel gewährten oder verweigerten Rechte angegeben werden.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAuditRule">
      <summary>Stellt eine Reihe von Zugriffsrechten eines Benutzers oder einer Gruppe dar, die überwacht werden soll. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.MutexAuditRule" />-Klasse. Dabei werden der Benutzer bzw. die Gruppe angegeben sowie die Rechte, die überwacht werden sollen. Außerdem wird angegeben, ob Erfolge, Fehler oder beides überwacht werden sollen.</summary>
      <param name="identity">Der Benutzer oder die Gruppe, für den bzw. die die Regel gilt. Muss vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> oder einem Typ wie etwa<see cref="T:System.Security.Principal.NTAccount" /> sein, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</param>
      <param name="eventRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.MutexRights" />-Werten, die die Art der zu überwachenden Zugriffe angibt.</param>
      <param name="flags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.AuditFlags" />-Werten, die angibt, ob Erfolgs- oder Fehlerüberwachung oder beides stattfinden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="flags" /> gibt einen ungültigen Wert an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="eventRights" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> übersetzt werden kann.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAuditRule.MutexRights">
      <summary>Ruft die von der Überwachungsregel betroffenen Zugriffsrechte ab.</summary>
      <returns>Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.MutexRights" />-Werten, die die von der Überwachungsregel betroffenen Rechte angibt.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexRights">
      <summary>Gibt die Zugriffssteuerungsrechte an, die auf benannte Systemmutexobjekte angewendet werden können.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ChangePermissions">
      <summary>Das Recht, die dem benannten Mutex zugeordneten Sicherheits- und Überwachungsregeln zu ändern.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Delete">
      <summary>Das Recht, einen benannten Mutex zu löschen.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.FullControl">
      <summary>Das Recht, die vollständige Kontrolle über einen benannten Mutex auszuüben und seine Zugriffsregeln und Überwachungsregeln zu ändern.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Modify">
      <summary>Das Recht, einen benannten Mutex freizugeben.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ReadPermissions">
      <summary>Das Recht, die Zugriffsregeln und die Überwachungsregeln eines benannten Mutex zu öffnen und zu kopieren.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Synchronize">
      <summary>Das Recht, auf einen benannten Mutex zu warten.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.TakeOwnership">
      <summary>Das Recht, den Besitzer eines benannten Mutex zu ändern.</summary>
    </member>
    <member name="T:System.Security.AccessControl.MutexSecurity">
      <summary>Stellt die Windows-Zugriffsteuerungssicherheit für einen benannten Mutex dar. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.MutexSecurity" />-Klasse mit Standardwerten.</summary>
      <exception cref="T:System.NotSupportedException">Diese Klasse wird unter Windows 98 oder Windows Millennium Edition nicht unterstützt.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.MutexSecurity" />-Klasse mit den angegebenen Abschnitten der Regeln für die Zugriffssteuerungssicherheit aus dem Systemmutex mit dem angegebenen Namen.</summary>
      <param name="name">Der Name des Systemmutex, dessen Regeln für die Zugriffssteuerungssicherheit abgerufen werden sollten.</param>
      <param name="includeSections">Eine Kombination von <see cref="T:System.Security.AccessControl.AccessControlSections" />-Flags, die die abzurufenden Abschnitte angeben.</param>
      <exception cref="T:System.IO.FileNotFoundException">Es ist kein Systemobjekt mit dem angegebenen Namen vorhanden.</exception>
      <exception cref="T:System.NotSupportedException">Diese Klasse wird unter Windows 98 oder Windows Millennium Edition nicht unterstützt.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Erstellt eine neue Zugriffssteuerungsregel für den angegebenen Benutzer mit den angegebenen Zugriffsrechten und Flags sowie der angegebenen Zugriffssteuerung.</summary>
      <param name="identityReference">Eine <see cref="T:System.Security.Principal.IdentityReference" />, mit deren Hilfe der Benutzer oder die Gruppe angegeben wird, für den bzw. die die Regel gilt.</param>
      <param name="accessMask">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.MutexRights" />-Werten, die die zu verweigernden oder zu gewährenden Zugriffsrechte angibt (in eine ganze Zahl umgewandelt).</param>
      <param name="isInherited">Besitzt keine Bedeutung für benannte Mutexe, da diese über keine Hierarchie verfügen.</param>
      <param name="inheritanceFlags">Besitzt keine Bedeutung für benannte Mutexe, da diese über keine Hierarchie verfügen.</param>
      <param name="propagationFlags">Besitzt keine Bedeutung für benannte Mutexe, da diese über keine Hierarchie verfügen.</param>
      <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Für <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> oder <paramref name="type" /> ist ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="accessMask" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</exception>
      <returns>Ein <see cref="T:System.Security.AccessControl.MutexAccessRule" />-Objekt, das die angegebenen Rechte für den angegebenen Benutzer darstellt.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Sucht nach einer übereinstimmenden Zugriffssteuerungsregel, mit der die neue Regel zusammengeführt werden kann. Wenn keine Regel gefunden wurde, wird die neue Regel hinzugefügt.</summary>
      <param name="rule">Die hinzuzufügende Zugriffssteuerungsregel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Principal.IdentityNotMappedException">
        <paramref name="rule" /> kann keiner bekannten Identität zugeordnet werden.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Sucht nach einer Überwachungsregel, mit der die neue Regel zusammengeführt werden kann. Wenn keine Regel gefunden wurde, wird die neue Regel hinzugefügt.</summary>
      <param name="rule">Die hinzuzufügende Überwachungsregel. Der von dieser Regel angegebene Benutzer bestimmt die Suche.</param>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Erstellt eine neue Überwachungsregel, die den Benutzer angibt, auf den diese Regel angewendet wird, sowie die zu überwachenden Zugriffsrechte und das Ergebnis, das die Überwachungsregel auslöst.</summary>
      <param name="identityReference">Eine <see cref="T:System.Security.Principal.IdentityReference" />, mit deren Hilfe der Benutzer oder die Gruppe angegeben wird, für den bzw. die die Regel gilt.</param>
      <param name="accessMask">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.MutexRights" />-Werten, die die zu überwachenden Zugriffsrechte angibt (in eine ganze Zahl umgewandelt).</param>
      <param name="isInherited">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="inheritanceFlags">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="propagationFlags">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="flags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.AuditFlags" />-Werten, die angeben, ob erfolgreiche Zugriffsversuche und/oder fehlgeschlagene Zugriffsversuche überwacht werden sollen.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Für <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> oder <paramref name="flags" /> ist ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="accessMask" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</exception>
      <returns>Ein <see cref="T:System.Security.AccessControl.MutexAuditRule" />-Objekt, das die angegebene Überwachungsregel für den angegebenen Benutzer darstellt. Der Rückgabetyp der Methode entspricht der Basisklasse <see cref="T:System.Security.AccessControl.AuditRule" />, er kann jedoch problemlos in die abgeleitete Klasse umgewandelt werden.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Sucht nach einer Zugriffssteuerungsregel mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel sowie mit kompatiblen Vererbungs- und Weitergabeflags. Wenn eine solche Regel gefunden wird, werden die in der angegebenen Zugriffsregel enthaltenen Rechte daraus entfernt.</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.MutexAccessRule" />, die den Benutzer und den <see cref="T:System.Security.AccessControl.AccessControlType" /> angibt, nach denen gesucht werden soll, sowie eine Reihe von Vererbungs- und Weitergabeflags, mit denen eine übereinstimmende Regel (falls vorhanden) kompatibel sein muss. Gibt die Rechte an, die aus der kompatiblen Regel entfernt werden sollen (falls vorhanden).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn eine kompatible Regel gefunden wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
      <summary>Sucht nach allen Zugriffssteuerungsregeln mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel und entfernt diese (falls vorhanden).</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.MutexAccessRule" />, die den Benutzer und den <see cref="T:System.Security.AccessControl.AccessControlType" /> angibt, nach denen gesucht werden soll. Alle von dieser Regel angegebenen Rechte werden ignoriert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
      <summary>Sucht nach einer Zugriffssteuerungsregel, die genau mit der angegebenen Regel übereinstimmt, und entfernt diese (falls vorhanden).</summary>
      <param name="rule">Das zu entfernende <see cref="T:System.Security.AccessControl.MutexAccessRule" />-Element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Sucht nach einer Überwachungssteuerungsregel mit demselben Benutzer wie die angegebene Regel und mit kompatiblen Vererbungs- und Weitergabeflags; wenn eine solche Regel gefunden wird, werden die in der angegebenen Regel enthaltenen Rechte daraus entfernt.</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.MutexAuditRule" />, die den zu suchenden Benutzer angibt, sowie eine Reihe von Vererbungs- und Weitergabeflags, mit denen eine übereinstimmende Regel (falls vorhanden) kompatibel sein muss. Gibt die Rechte an, die aus der kompatiblen Regel entfernt werden sollen (falls vorhanden).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn eine kompatible Regel gefunden wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
      <summary>Sucht alle Überwachungsregeln, die denselben Benutzer wie die angegebene Regel aufweisen, und entfernt sie, sofern sie gefunden wurden.</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.MutexAuditRule" />, die den zu suchenden Benutzer angibt. Alle von dieser Regel angegebenen Rechte werden ignoriert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
      <summary>Sucht nach einer Überwachungsregel, die genau mit der angegebenen Regel übereinstimmt, und entfernt diese (falls vorhanden).</summary>
      <param name="rule">Das <see cref="T:System.Security.AccessControl.MutexAuditRule" />-Objekt, das entfernt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Entfernt alle Zugriffssteuerungsregeln mit demselben Benutzer wie in der angegebenen Regel, unabhängig von <see cref="T:System.Security.AccessControl.AccessControlType" />, und fügt anschließend die angegebene Regel hinzu.</summary>
      <param name="rule">Das hinzuzufügende <see cref="T:System.Security.AccessControl.MutexAccessRule" />. Der von dieser Regel angegebene Benutzer bestimmt die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>Entfernt alle Zugriffssteuerungsregeln mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel und fügt anschließend die angegebene Regel hinzu.</summary>
      <param name="rule">Das hinzuzufügende <see cref="T:System.Security.AccessControl.MutexAccessRule" />. Der Benutzer und der <see cref="T:System.Security.AccessControl.AccessControlType" /> dieser Regel bestimmen die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>Entfernt alle Überwachungsregeln mit demselben Benutzer wie in der angegebenen Regel, unabhängig vom <see cref="T:System.Security.AccessControl.AuditFlags" />-Wert, und fügt danach die angegebene Regel hinzu.</summary>
      <param name="rule">Das hinzuzufügende <see cref="T:System.Security.AccessControl.MutexAuditRule" />. Der von dieser Regel angegebene Benutzer bestimmt die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
      <summary>Ruft die Enumeration ab, mit deren Hilfe die <see cref="T:System.Security.AccessControl.MutexSecurity" />-Klasse Zugriffsrechte darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.MutexRights" />-Enumeration darstellt.</returns>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
      <summary>Ruft den Typ ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.MutexSecurity" />-Klasse die Zugriffsregeln darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.MutexAccessRule" />-Klasse darstellt.</returns>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
      <summary>Ruft den Typ ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.MutexSecurity" />-Klasse Überwachungsregeln darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.MutexAuditRule" />-Klasse darstellt.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAccessRule">
      <summary>Stellt eine Gruppe von Zugriffsrechten dar, die einem Benutzer oder einer Gruppe gewährt oder verweigert werden. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />-Klasse und gibt den Benutzer oder die Gruppe an, für den bzw. die die Regel gilt. Außerdem werden die Zugriffsrechte angegeben und ob diese gewährt oder verweigert werden.</summary>
      <param name="identity">Der Benutzer oder die Gruppe, für den bzw. die die Regel gilt. Muss vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> oder einem Typ wie etwa<see cref="T:System.Security.Principal.NTAccount" /> sein, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</param>
      <param name="eventRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Werten, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="type" /> gibt einen ungültigen Wert an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="eventRights" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />-Klasse und gibt den Namen des Benutzers oder der Gruppe an, für den bzw. die die Regel gilt. Außerdem werden die Zugriffsrechte angegeben und ob diese gewährt oder verweigert werden.</summary>
      <param name="identity">Der Name des Benutzers oder der Gruppe, für den bzw. die die Regel gilt.</param>
      <param name="eventRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Werten, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="type" /> gibt einen ungültigen Wert an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="identity" /> ist eine Zeichenfolge der Länge 0 (null).  
  
- oder - 
 <paramref name="identity" /> ist länger als 512 Zeichen.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
      <summary>Ruft die von der Zugriffsregel gewährten oder verweigerten Rechte ab.</summary>
      <returns>Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Werten, mit denen die in der Zugriffsregel gewährten oder verweigerten Rechte angegeben werden.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAuditRule">
      <summary>Stellt eine Reihe von Zugriffsrechten eines Benutzers oder einer Gruppe dar, die überwacht werden soll. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />-Klasse. Dabei werden der Benutzer bzw. die Gruppe angegeben sowie die Rechte, die überwacht werden sollen. Außerdem wird angegeben, ob Erfolge, Fehler oder beides überwacht werden sollen.</summary>
      <param name="identity">Der Benutzer oder die Gruppe, für den bzw. die die Regel gilt. Muss vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> oder einem Typ wie etwa<see cref="T:System.Security.Principal.NTAccount" /> sein, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</param>
      <param name="eventRights">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Werten, die die Art der zu überwachenden Zugriffe angibt.</param>
      <param name="flags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.AuditFlags" />-Werten, die angibt, ob Erfolgs- oder Fehlerüberwachung oder beides stattfinden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> gibt einen ungültigen Wert an.  
  
- oder - 
 <paramref name="flags" /> gibt einen ungültigen Wert an.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="eventRights" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> konvertiert werden kann.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights">
      <summary>Ruft die von der Überwachungsregel betroffenen Zugriffsrechte ab.</summary>
      <returns>Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Werten, die die von der Überwachungsregel betroffenen Rechte angibt.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreRights">
      <summary>Gibt die Zugriffssteuerungsrechte an, die auf benannte Systemsemaphorobjekte angewendet werden können.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions">
      <summary>Das Recht, die dem benannten Semaphor zugeordneten Sicherheits- und Überwachungsregeln zu ändern.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Delete">
      <summary>Das Recht, einen benannten Semaphor zu löschen.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.FullControl">
      <summary>Das Recht, die vollständige Kontrolle über einen benannten Semaphor auszuüben und seine Zugriffsregeln und Überwachungsregeln zu ändern.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Modify">
      <summary>Das Recht, einen benannten Semaphor freizugeben.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions">
      <summary>Das Recht, die Zugriffsregeln und die Überwachungsregeln eines benannten Semaphors zu öffnen und zu kopieren.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Synchronize">
      <summary>Das Recht, auf einen benannten Semaphor zu warten.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.TakeOwnership">
      <summary>Das Recht, den Besitzer eines benannten Semaphors zu ändern.</summary>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreSecurity">
      <summary>Stellt die Windows-Zugriffssteuerungssicherheit für ein benanntes Semaphor dar. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse mit Standardwerten.</summary>
      <exception cref="T:System.NotSupportedException">Diese Klasse wird unter Windows 98 oder Windows Millennium Edition nicht unterstützt.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse mit den angegebenen Abschnitten der Regeln für die Zugriffssteuerungssicherheit aus dem Systemsemaphor mit dem angegebenen Namen.</summary>
      <param name="name">Der Name des Systemsemaphors, dessen Regeln für die Zugriffssteuerungssicherheit abgerufen werden sollen.</param>
      <param name="includeSections">Eine Kombination von <see cref="T:System.Security.AccessControl.AccessControlSections" />-Flags, die die abzurufenden Abschnitte angeben.</param>
      <exception cref="T:System.NotSupportedException">Diese Klasse wird unter Windows 98 oder Windows Millennium Edition nicht unterstützt.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Erstellt eine neue Zugriffssteuerungsregel für den angegebenen Benutzer mit den angegebenen Zugriffsrechten und Flags sowie der angegebenen Zugriffssteuerung.</summary>
      <param name="identityReference">Eine <see cref="T:System.Security.Principal.IdentityReference" />, mit deren Hilfe der Benutzer oder die Gruppe angegeben wird, für den bzw. die die Regel gilt.</param>
      <param name="accessMask">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Werten, die die zu verweigernden oder zu gewährenden Zugriffsrechte angibt (in eine ganze Zahl umgewandelt).</param>
      <param name="isInherited">Besitzt keine Bedeutung für benannte Semaphore, da diese über keine Hierarchie verfügen.</param>
      <param name="inheritanceFlags">Besitzt keine Bedeutung für benannte Semaphore, da diese über keine Hierarchie verfügen.</param>
      <param name="propagationFlags">Besitzt keine Bedeutung für benannte Semaphore, da diese über keine Hierarchie verfügen.</param>
      <param name="type">Einer der <see cref="T:System.Security.AccessControl.AccessControlType" />-Werte, mit denen angegeben wird, ob die Rechte gewährt oder verweigert werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Für <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> oder <paramref name="type" /> ist ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="accessMask" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</exception>
      <returns>Ein <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />-Objekt, das die angegebenen Rechte für den angegebenen Benutzer darstellt.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Sucht nach einer übereinstimmenden Regel, mit der die neue Regel zusammengeführt werden kann. Wenn keine Regel gefunden wurde, wird die neue Regel hinzugefügt.</summary>
      <param name="rule">Die hinzuzufügende Zugriffssteuerungsregel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Sucht nach einer Überwachungsregel, mit der die neue Regel zusammengeführt werden kann. Wenn keine Regel gefunden wurde, wird die neue Regel hinzugefügt.</summary>
      <param name="rule">Die hinzuzufügende Überwachungsregel. Der von dieser Regel angegebene Benutzer bestimmt die Suche.</param>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Erstellt eine neue Überwachungsregel, die den Benutzer angibt, auf den diese Regel angewendet wird, sowie die zu überwachenden Zugriffsrechte und das Ergebnis, das die Überwachungsregel auslöst.</summary>
      <param name="identityReference">Eine <see cref="T:System.Security.Principal.IdentityReference" />, mit deren Hilfe der Benutzer oder die Gruppe angegeben wird, für den bzw. die die Regel gilt.</param>
      <param name="accessMask">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Werten, die die zu überwachenden Zugriffsrechte angibt (in eine ganze Zahl umgewandelt).</param>
      <param name="isInherited">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="inheritanceFlags">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="propagationFlags">Besitzt keine Bedeutung für benannte WaitHandles, da diese über keine Hierarchie verfügen.</param>
      <param name="flags">Eine bitweise Kombination von <see cref="T:System.Security.AccessControl.AuditFlags" />-Werten, die angeben, ob erfolgreiche Zugriffsversuche und/oder fehlgeschlagene Zugriffsversuche überwacht werden sollen.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Für <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> oder <paramref name="flags" /> ist ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="accessMask" /> ist 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> ist weder vom Typ <see cref="T:System.Security.Principal.SecurityIdentifier" /> noch von einem Typ wie etwa <see cref="T:System.Security.Principal.NTAccount" />, der in den <see cref="T:System.Security.Principal.SecurityIdentifier" />-Typ konvertiert werden kann.</exception>
      <returns>Ein <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />-Objekt, das die angegebene Überwachungsregel für den angegebenen Benutzer darstellt. Der Rückgabetyp der Methode entspricht der Basisklasse <see cref="T:System.Security.AccessControl.AuditRule" />, er kann jedoch problemlos in die abgeleitete Klasse umgewandelt werden.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Sucht nach einer Zugriffssteuerungsregel mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel sowie mit kompatiblen Vererbungs- und Weitergabeflags. Wenn eine solche Regel gefunden wird, werden die in der angegebenen Zugriffsregel enthaltenen Rechte daraus entfernt.</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />, die den Benutzer und den <see cref="T:System.Security.AccessControl.AccessControlType" /> angibt, nach denen gesucht werden soll, sowie eine Reihe von Vererbungs- und Weitergabeflags, mit denen eine übereinstimmende Regel (falls vorhanden) kompatibel sein muss. Gibt die Rechte an, die aus der kompatiblen Regel entfernt werden sollen (falls vorhanden).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn eine kompatible Regel gefunden wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Sucht nach allen Zugriffssteuerungsregeln mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel und entfernt diese (falls vorhanden).</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />, die den Benutzer und den <see cref="T:System.Security.AccessControl.AccessControlType" /> angibt, nach denen gesucht werden soll. Alle von dieser Regel angegebenen Rechte werden ignoriert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Sucht nach einer Zugriffssteuerungsregel, die genau mit der angegebenen Regel übereinstimmt, und entfernt diese (falls vorhanden).</summary>
      <param name="rule">Das zu entfernende <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />-Element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Sucht nach einer Überwachungssteuerungsregel mit demselben Benutzer wie die angegebene Regel und mit kompatiblen Vererbungs- und Weitergabeflags; wenn eine solche Regel gefunden wird, werden die in der angegebenen Regel enthaltenen Rechte daraus entfernt.</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />, die den zu suchenden Benutzer angibt, sowie eine Reihe von Vererbungs- und Weitergabeflags, mit denen eine übereinstimmende Regel (falls vorhanden) kompatibel sein muss. Gibt die Rechte an, die aus der kompatiblen Regel entfernt werden sollen (falls vorhanden).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn eine kompatible Regel gefunden wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Sucht alle Überwachungsregeln, die denselben Benutzer wie die angegebene Regel aufweisen, und entfernt sie, sofern sie gefunden wurden.</summary>
      <param name="rule">Eine <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />, die den zu suchenden Benutzer angibt. Alle von dieser Regel angegebenen Rechte werden ignoriert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Sucht nach einer Überwachungsregel, die genau mit der angegebenen Regel übereinstimmt, und entfernt diese (falls vorhanden).</summary>
      <param name="rule">Das zu entfernende <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />-Element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Entfernt alle Zugriffssteuerungsregeln mit demselben Benutzer wie in der angegebenen Regel, unabhängig von <see cref="T:System.Security.AccessControl.AccessControlType" />, und fügt anschließend die angegebene Regel hinzu.</summary>
      <param name="rule">Das hinzuzufügende <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />. Der von dieser Regel angegebene Benutzer bestimmt die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>Entfernt alle Zugriffssteuerungsregeln mit demselben Benutzer und demselben <see cref="T:System.Security.AccessControl.AccessControlType" /> (gewähren oder verweigern) wie die angegebene Regel und fügt anschließend die angegebene Regel hinzu.</summary>
      <param name="rule">Das hinzuzufügende <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />. Der Benutzer und der <see cref="T:System.Security.AccessControl.AccessControlType" /> dieser Regel bestimmen die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>Entfernt alle Überwachungsregeln mit demselben Benutzer wie in der angegebenen Regel, unabhängig vom <see cref="T:System.Security.AccessControl.AuditFlags" />-Wert, und fügt danach die angegebene Regel hinzu.</summary>
      <param name="rule">Das hinzuzufügende <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />. Der von dieser Regel angegebene Benutzer bestimmt die Regeln, die vor dem Hinzufügen dieser Regel entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
      <summary>Ruft die Enumeration ab, mit deren Hilfe die <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse Zugriffsrechte darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.SemaphoreRights" />-Enumeration darstellt.</returns>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
      <summary>Ruft den Typ ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse die Zugriffsregeln darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />-Klasse darstellt.</returns>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
      <summary>Ruft den Typ ab, mit dessen Hilfe die <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Klasse Überwachungsregeln darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />-Klasse darstellt.</returns>
    </member>
    <member name="T:System.Threading.EventWaitHandleAcl">
      <summary>Bietet eine Windows-spezifische Erweiterungsmethode zum Erstellen von <see cref="T:System.Threading.EventWaitHandle" />-Objekten mit spezifischer ACL-Sicherheit (Access Control List, Zugriffssteuerungsliste).</summary>
    </member>
    <member name="M:System.Threading.EventWaitHandleAcl.Create(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)">
      <summary>Hiermit wird eine <see cref="T:System.Threading.EventWaitHandle" />-Instanz abgerufen oder erstellt, sodass optional eine <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />-Instanz angegeben werden kann, um eine Festlegung bei der Ereigniserstellung zu ermöglichen.</summary>
      <param name="initialState">
        <see langword="true" /> zum Festlegen des anfänglichen Zustands auf „signalisiert“, wenn das benannte Ereignis als Ergebnis dieses Aufrufs erstellt wird; <see langword="false" /> zum Festlegen auf „nicht signalisiert“.</param>
      <param name="mode">Dies ist einer der Enummerationswerte, der bestimmt, ob das Ereignis automatisch oder manuell zurückgesetzt wird.</param>
      <param name="name">Dies ist der Name, wenn das Ereignis für andere Prozesse freigegeben werden soll; andernfalls <see langword="null" /> oder eine leere Zeichenfolge.</param>
      <param name="createdNew">Wenn diese Methode zurückgegeben wird, wird dieses Argument immer auf <see langword="true" /> festgelegt, wenn ein lokales Ereignis erstellt wird (d. h. wenn <paramref name="name" /> entweder <see langword="null" /> oder dem Feld <see cref="F:System.String.Empty" /> entspricht). Wenn <paramref name="name" /> über einen gültigen und nicht leeren Wert verfügt, wird dieses Argument auf <see langword="true" /> festgelegt, wenn das Systemereignis erstellt wird, oder es wird auf <see langword="false" /> festgelegt, wenn ein vorhandenes Systemereignis mit diesem Namen gefunden wird.</param>
      <param name="eventSecurity">Dies ist die optional anzuwendende Windows-Zugriffssteuerungssicherheit.</param>
      <exception cref="T:System.ArgumentException">Nur .NET Framework: Die Länge <paramref name="name" /> überschreitet MAX_PATH (260 Zeichen).

- oder -

Nur .NET Framework: Der Wert der Enumeration <paramref name="mode" /> lag außerhalb des zulässigen Bereichs.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Enumerationswert <paramref name="mode" /> lag außerhalb des zulässigen Bereichs.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Ein Teil des in <paramref name="name" /> angegebenen Pfads wurde nicht gefunden.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">Ein systemweites Synchronisierungsereignis mit der Angabe für <paramref name="name" /> wurde nicht gefunden.
Weitere Möglichkeit: Eine <see cref="T:System.Threading.EventWaitHandle" />-Klasse mit einem systemweiten Wert für <paramref name="name" /> kann nicht erstellt werden. Eine <see cref="T:System.Threading.EventWaitHandle" />-Klasse eines anderen Typs kann denselben Namen aufweisen.</exception>
      <returns>Dies ist ein Objekt, das wie angefordert ein Ereignis-Wait-Handle darstellt.</returns>
    </member>
    <member name="T:System.Threading.MutexAcl">
      <summary>Bietet eine Windows-spezifische Erweiterungsmethode zum Erstellen von <see cref="T:System.Threading.Mutex" />-Objekten mit spezifischer ACL-Sicherheit (Access Control List, Zugriffssteuerungsliste).</summary>
    </member>
    <member name="M:System.Threading.MutexAcl.Create(System.Boolean,System.String,System.Boolean@,System.Security.AccessControl.MutexSecurity)">
      <summary>Hiermit wird eine <see cref="T:System.Threading.Mutex" />-Instanz abgerufen oder erstellt, sodass optional eine <see cref="T:System.Security.AccessControl.MutexSecurity" />-Instanz angegeben werden kann, um eine Festlegung bei der Mutexerstellung zu ermöglichen.</summary>
      <param name="initiallyOwned">
        <see langword="true" />, um dem aufrufenden Thread den anfänglichen Besitz des benannten Systemmutex zuzuweisen, wenn der benannte Systemmutex als Ergebnis dieses Aufrufs erstellt wird, andernfalls <see langword="false" />.</param>
      <param name="name">Dies ist der optionale Name des Systemmutex. Wenn dieses Argument auf <see langword="null" /> oder <see cref="F:System.String.Empty" /> festgelegt ist, wird ein lokales Mutex erstellt.</param>
      <param name="createdNew">Wenn diese Methode zurückgegeben wird, wird dieses Argument immer auf <see langword="true" /> festgelegt, wenn ein lokales Mutex erstellt wird (d. h. wenn <paramref name="name" /> entweder <see langword="null" /> oder <see cref="F:System.String.Empty" /> ist). Wenn <paramref name="name" /> über einen gültigen und nicht leeren Wert verfügt, wird dieses Argument auf <see langword="true" /> festgelegt, wenn das Systemmutex erstellt wird, oder es wird auf <see langword="false" /> festgelegt, wenn ein vorhandenes Systemmutex mit diesem Namen gefunden wird. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <param name="mutexSecurity">Dies ist die optional anzuwendende Zugriffssteuerungssicherheit für das Mutex.</param>
      <exception cref="T:System.ArgumentException">Nur .NET Framework: Die Länge des Namens überschreitet den maximalen Grenzwert.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">Ein Mutexhandle mit systemweitem <paramref name="name" /> kann nicht erstellt werden. Ein Mutexhandle eines anderen Typs kann denselben Namen aufweisen.</exception>
      <returns>Dies ist ein Objekt, das bei einem angegebenen Namen ein Systemmutex und bei keinem angegebenen Namen ein lokales Mutex darstellt.</returns>
    </member>
    <member name="T:System.Threading.SemaphoreAcl">
      <summary>Bietet eine Windows-spezifische Erweiterungsmethode zum Erstellen von <see cref="T:System.Threading.Semaphore" />-Objekten mit spezifischer ACL-Sicherheit (Access Control List, Zugriffssteuerungsliste).</summary>
    </member>
    <member name="M:System.Threading.SemaphoreAcl.Create(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)">
      <summary>Hiermit wird eine <see cref="T:System.Threading.Semaphore" />-Instanz abgerufen oder erstellt, sodass optional eine <see cref="T:System.Security.AccessControl.SemaphoreSecurity" />-Instanz angegeben werden kann, um eine Festlegung bei der Ereigniserstellung zu ermöglichen.</summary>
      <param name="initialCount">Die ursprüngliche Anzahl von Anforderungen für das Semaphor, die gleichzeitig ausgeführt werden können.</param>
      <param name="maximumCount">Die maximale Anzahl von Anforderungen für das Semaphor, die gleichzeitig ausgeführt werden können.</param>
      <param name="name">Dies ist ein optionales Argument zum Erstellen eines Systemsemaphors. Durch das Festlegen auf <see langword="null" /> oder das Feld <see cref="F:System.String.Empty" /> können Sie ein lokales Semaphor erstellen.</param>
      <param name="createdNew">Wenn diese Methode zurückgegeben wird, wird dieses Argument immer auf <see langword="true" /> festgelegt, wenn ein lokales Semaphor erstellt wird (d. h. wenn <paramref name="name" /> entweder <see langword="null" /> oder dem Feld <see cref="F:System.String.Empty" /> entspricht). Wenn <paramref name="name" /> über einen gültigen und nicht leeren Wert verfügt, wird dieses Argument auf <see langword="true" /> festgelegt, wenn das Systemsemaphor erstellt wird, oder es wird auf <see langword="false" /> festgelegt, wenn ein vorhandenes Systemsemaphor mit diesem Namen gefunden wird. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <param name="semaphoreSecurity">Dies ist die optional anzuwendende Zugriffssteuerungssicherheit für das Semaphor.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCount" /> ist eine negative Zahl.
- oder -

<paramref name="maximumCount" /> ist keine positive Zahl.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> ist größer als <paramref name="maximumCount" />.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">Es kann kein Semaphorhandle mit dem systemweiten Namen „<paramref name="name" />“ erstellt werden Ein Semaphorhandle eines anderen Typs kann denselben Namen aufweisen.</exception>
      <returns>Dies ist ein Objekt, das bei einem angegebenen Namen ein Systemsemaphor und bei keinem angegebenen Namen ein lokales Semaphor darstellt.</returns>
    </member>
    <member name="T:System.Threading.ThreadingAclExtensions">
      <summary>Stellt Windows-spezifische Erweiterungsmethoden zum Verwalten der Sicherheitsbeschreibungen von Zugriffssteuerungslisten (ACL) für <see cref="T:System.Threading.EventWaitHandle" />, <see cref="T:System.Threading.Mutex" /> und <see cref="T:System.Threading.Semaphore" /> bereit.</summary>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)">
      <summary>Gibt die Sicherheitsbeschreibungen für das angegebene <paramref name="handle" /> zurück.</summary>
      <param name="handle">Das Ereigniswartehandle, aus dem die Sicherheitsbeschreibungen zurückgegeben werden sollen.</param>
      <returns>Die Sicherheitsbeschreibungen für das angegebene <paramref name="handle" />.</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)">
      <summary>Gibt die Sicherheitsbeschreibungen für den angegebenen <paramref name="mutex" /> zurück.</summary>
      <param name="mutex">Der Mutex, aus dem die Sicherheitsbeschreibungen zurückgegeben werden sollen.</param>
      <returns>Die Sicherheitsbeschreibungen für den angegebenen <paramref name="mutex" />.</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)">
      <summary>Gibt die Sicherheitsbeschreibungen für den angegebenen <paramref name="semaphore" /> zurück.</summary>
      <param name="semaphore">Der Semaphor, aus dem die Sicherheitsbeschreibungen zurückgegeben werden sollen.</param>
      <returns>Die Sicherheitsbeschreibungen für den angegebenen Semaphor.</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)">
      <summary>Legt die Sicherheitsbeschreibungen für das angegebene Ereigniswartehandle fest.</summary>
      <param name="handle">Das Ereigniswartehandle, auf das <paramref name="eventSecurity" /> angewendet wird.</param>
      <param name="eventSecurity">Die Sicherheitsbeschreibungen, die auf das angegebene <paramref name="handle" /> angewendet werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSecurity" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)">
      <summary>Legt die Sicherheitsbeschreibungen für den angegebenen Mutex fest.</summary>
      <param name="mutex">Der Mutex, auf den <paramref name="mutexSecurity" /> angewendet wird.</param>
      <param name="mutexSecurity">Die Sicherheitsbeschreibungen, die auf den angegebenen <paramref name="mutex" /> angewendet werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mutexSecurity" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)">
      <summary>Legt die Sicherheitsbeschreibungen für den angegebenen Semaphor fest.</summary>
      <param name="semaphore">Der Semaphor, auf den <paramref name="semaphoreSecurity" /> angewendet wird.</param>
      <param name="semaphoreSecurity">Die Sicherheitsbeschreibungen, die auf den angegebenen <paramref name="semaphore" /> angewendet werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="semaphoreSecurity" /> ist <see langword="null" />.</exception>
    </member>
  </members>
</doc>