<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Configuration.ConfigurationManager</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.ApplicationScopedSettingAttribute">
      <summary>Especifica que una propiedad de configuración de aplicación tiene un valor común para todos los usuarios de una aplicación. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ApplicationScopedSettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsBase">
      <summary>Actúa como clase base para derivar clases contenedoras concretas con el fin de implementar la característica de configuración de la aplicación en las aplicaciones de formularios Windows Forms.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
      <summary>Se produce después de cambiar el valor de una propiedad de configuración de la aplicación.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
      <summary>Se produce antes de cambiar el valor de una propiedad de configuración de la aplicación.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
      <summary>Se produce después de recuperar del almacenamiento la configuración de la aplicación.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
      <summary>Se produce antes de guardar los valores en el almacén de datos.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.ApplicationSettingsBase" /> en su estado predeterminado.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.ApplicationSettingsBase" /> utilizando el componente propietario proporcionado.</summary>
      <param name="owner">Componente que actuará como propietario del objeto de configuración de la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.ApplicationSettingsBase" /> utilizando el componente de propietario y la clave de configuración proporcionados.</summary>
      <param name="owner">Componente que actuará como propietario del objeto de configuración de la aplicación.</param>
      <param name="settingsKey">Objeto <see cref="T:System.String" /> que identifica de forma única las instancias independientes de la clase contenedora.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.ApplicationSettingsBase" /> utilizando la clave de configuración proporcionada.</summary>
      <param name="settingsKey">Objeto <see cref="T:System.String" /> que identifica de forma única las instancias independientes de la clase contenedora.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
      <summary>Devuelve el valor de la propiedad de configuración con nombre para la versión anterior de la misma aplicación.</summary>
      <param name="propertyName">Objeto <see cref="T:System.String" /> que contiene el nombre de la propiedad de configuración cuyo valor se va a devolver.</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">La propiedad no existe. El recuento de la propiedad es cero o no se ha podido encontrar la propiedad en el almacén de datos.</exception>
      <returns>
        <see cref="T:System.Object" /> que contiene el valor del objeto <see cref="T:System.Configuration.SettingsProperty" /> especificado, si se encuentra; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Genera el evento <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
      <summary>Genera el evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.Configuration.SettingChangingEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
      <summary>Genera el evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>Genera el evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.CancelEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reload">
      <summary>Actualiza los valores de propiedades de configuración de la aplicación del almacenamiento persistente.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reset">
      <summary>Restaura los valores de configuración de la aplicación conservados a sus propiedades predeterminadas correspondientes.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo analizar el archivo de configuración.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Save">
      <summary>Almacena los valores actuales de las propiedades de configuración de la aplicación.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Upgrade">
      <summary>Actualiza la configuración de la aplicación para reflejar una instalación más reciente de la aplicación.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo analizar el archivo de configuración.</exception>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Context">
      <summary>Obtiene el contexto de configuración de la aplicación asociado al grupo de configuración.</summary>
      <returns>Objeto <see cref="T:System.Configuration.SettingsContext" /> asociado al grupo de configuración.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
      <summary>Obtiene o establece el valor de la propiedad de configuración de la aplicación especificada.</summary>
      <param name="propertyName">Objeto <see cref="T:System.String" /> que contiene el nombre de la propiedad a la que se va a obtener acceso.</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">No hay ninguna propiedad asociada al contenedor actual o no se ha podido encontrar la propiedad especificada.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Se ha intentado establecer una propiedad de sólo lectura.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">El tipo de valor proporcionado no es compatible con la propiedad de configuración, durante una operación de conjunto.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo analizar el archivo de configuración.</exception>
      <returns>Valor de la propiedad de configuración con nombre, si se encuentra uno; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Properties">
      <summary>Obtiene la colección de propiedades de configuración que hay en el contenedor.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se ha podido encontrar el proveedor de configuración asociado o se ha producido un error en la creación de sus instancias.</exception>
      <returns>Colección <see cref="T:System.Configuration.SettingsPropertyCollection" /> que contiene todos los objetos <see cref="T:System.Configuration.SettingsProperty" /> que se utilizan en el contenedor actual.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
      <summary>Obtiene una colección de valores de propiedad.</summary>
      <returns>Colección <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> de valores de propiedad.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Providers">
      <summary>Obtiene la colección de proveedores de configuración de la aplicación utilizada por el contenedor.</summary>
      <returns>Objeto <see cref="T:System.Configuration.SettingsProviderCollection" /> que contiene todos los objetos <see cref="T:System.Configuration.SettingsProvider" /> que utilizan las propiedades de configuración del contenedor de configuración actual.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
      <summary>Obtiene o establece la clave de configuración para el grupo de configuración de la aplicación.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene la clave de configuración para el grupo de configuración actual.</returns>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsGroup">
      <summary>Representa una agrupación de secciones de configuración de aplicación relacionadas incluidas en un archivo de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsGroup.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ApplicationSettingsGroup" />.</summary>
    </member>
    <member name="T:System.Configuration.AppSettingsReader">
      <summary>Proporciona un método para leer valores de un tipo concreto de la configuración.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.AppSettingsReader" />.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
      <summary>Obtiene el valor de una clave especificada de la propiedad <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> y devuelve un objeto del tipo especificado que contiene el valor de la configuración.</summary>
      <param name="key">Clave para la que se obtiene el valor.</param>
      <param name="type">El tipo de objeto que se va a devolver.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.  
  
o bien 
 <paramref name="type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El valor <paramref name="key" /> no existe en la sección de configuración de <see langword="&lt;appSettings&gt;" />.  
  
o bien 
El valor de la sección de configuración <see langword="&lt;appSettings&gt;" /> de <paramref name="key" /> no es del tipo <paramref name="type" />.</exception>
      <returns>Valor de la clave especificada.</returns>
    </member>
    <member name="T:System.Configuration.AppSettingsSection">
      <summary>Proporciona compatibilidad con el sistema de configuración para la sección de configuración <see langword="appSettings" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsSection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.AppSettingsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.File">
      <summary>Obtiene o establece un archivo de configuración que proporciona una configuración adicional o reemplaza la configuración especificada en el elemento <see langword="appSettings" />.</summary>
      <returns>Archivo de configuración que proporciona una configuración adicional o reemplaza la configuración especificada en el elemento <see langword="appSettings" />.</returns>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.Settings">
      <summary>Obtiene una colección de pares clave-valor que contiene la configuración de la aplicación.</summary>
      <returns>Colección de pares clave-valor que contiene la configuración de la aplicación del archivo de configuración.</returns>
    </member>
    <member name="T:System.Configuration.CallbackValidator">
      <summary>Proporciona la validación dinámica de un objeto.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.CallbackValidator" />.</summary>
      <param name="type">Tipo de objeto que se va a validar.</param>
      <param name="callback">
        <see cref="T:System.Configuration.ValidatorCallback" /> utilizado como delegado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <summary>Determina si se puede validar el tipo del objeto.</summary>
      <param name="type">Tipo del objeto.</param>
      <returns>
        <see langword="true" /> si el parámetro <see langword="type" /> coincide con el tipo utilizado como primer parámetro al crear una instancia de <see cref="T:System.Configuration.CallbackValidator" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <summary>Determina si el valor de un objeto es válido.</summary>
      <param name="value">Valor de un objeto.</param>
    </member>
    <member name="T:System.Configuration.CallbackValidatorAttribute">
      <summary>Especifica un objeto <see cref="T:System.Configuration.CallbackValidator" /> para su uso en la validación del código. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.CallbackValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <summary>Obtiene o establece el nombre del método de devolución de llamada.</summary>
      <returns>Nombre del método que se va a llamar.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
      <summary>Obtiene o establece el tipo del validador.</summary>
      <returns>
        <see cref="T:System.Type" /> de la instancia del atributo del validador actual.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <summary>Obtiene la instancia del validador.</summary>
      <exception cref="T:System.ArgumentNullException">El valor de la propiedad <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> no se establece en un método void estático público con un parámetro de objeto.</exception>
      <returns>Instancia de <see cref="T:System.Configuration.ConfigurationValidatorBase" /> actual.</returns>
    </member>
    <member name="T:System.Configuration.ClientSettingsSection">
      <summary>Representa un grupo de configuración de aplicación de ámbito de usuario en un archivo de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ClientSettingsSection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ClientSettingsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.ClientSettingsSection.Settings">
      <summary>Obtiene la colección de configuración de cliente para la sección.</summary>
      <returns>Objeto <see cref="T:System.Configuration.SettingElementCollection" /> que contiene todos la configuración de cliente que se encuentra en la sección de configuración actual.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollection">
      <summary>Representa una colección de elementos de cadena separados por comas. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <summary>Agrega una cadena a la colección separada por comas.</summary>
      <param name="value">Valor de cadena.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <summary>Agrega todas las cadenas de una matriz de cadenas a la colección.</summary>
      <param name="range">Matriz de cadenas que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <summary>Borra la colección.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <summary>Crea una copia de la colección.</summary>
      <returns>Una copia de <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <summary>Agrega un elemento de cadena en el índice especificado de la colección.</summary>
      <param name="index">Índice de la colección en el que se va a agregar el nuevo elemento.</param>
      <param name="value">Valor del nuevo elemento que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <summary>Quita un elemento de cadena de la colección.</summary>
      <param name="value">Cadena que se va a quitar.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <summary>Establece el objeto de colección como de sólo lectura.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <summary>Devuelve una representación de cadena del objeto.</summary>
      <returns>Una representación en forma de cadena del objeto.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <summary>Obtiene un valor que indica si se ha modificado la colección.</summary>
      <returns>
        <see langword="true" /> si se ha modificado <see cref="T:System.Configuration.CommaDelimitedStringCollection" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <summary>Obtiene un valor que indica si el objeto de la colección es de sólo lectura.</summary>
      <returns>
        <see langword="true" /> si el elemento de cadena especificado en <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> es de sólo lectura; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <summary>Obtiene o establece un elemento de cadena de la colección basándose en el índice.</summary>
      <param name="index">índice del elemento de cadena de la colección.</param>
      <returns>Elemento de cadena incluido en la colección.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <summary>Convierte un valor de cadena separada por comas en un objeto <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> y viceversa. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte un objeto <see cref="T:System.String" /> en un objeto <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</summary>
      <param name="ctx">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se utiliza para las conversiones de tipo.</param>
      <param name="ci">
        <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="data">Objeto <see cref="T:System.String" /> separado por comas que se va a convertir.</param>
      <returns>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> que contiene el valor convertido.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte un objeto <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> en un objeto <see cref="T:System.String" />.</summary>
      <param name="ctx">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se utiliza para las conversiones de tipo.</param>
      <param name="ci">
        <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="value">Valor que se va a convertir.</param>
      <param name="type">Tipo de conversión.</param>
      <returns>
        <see cref="T:System.String" /> que representa el parámetro <paramref name="value" /> convertido, que es un objeto <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
    </member>
    <member name="T:System.Configuration.Configuration">
      <summary>Representa un archivo de configuración aplicable a un equipo, aplicación o recurso en concreto. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.Configuration.GetSection(System.String)">
      <summary>Devuelve el objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado.</summary>
      <param name="sectionName">Ruta de acceso a la sección que se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado o <see langword="null" /> si la sección solicitada no existe.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> especificado.</summary>
      <param name="sectionGroupName">Nombre de ruta del objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> que se va a devolver.</param>
      <returns>El <see cref="T:System.Configuration.ConfigurationSectionGroup" /> especificado, o <see langword="null" /> si el grupo de sección solicitado no existe.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.Save">
      <summary>Escribe en el archivo de configuración XML actual los valores de configuración que incluye este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se ha podido escribir en el archivo de configuración.  
  
o bien
  
 El archivo de configuración ha cambiado.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <summary>Escribe en el archivo de configuración XML actual los valores de configuración que incluye este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="saveMode">Valor de <see cref="T:System.Configuration.ConfigurationSaveMode" /> que determina los valores de propiedad que se van a guardar.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se ha podido escribir en el archivo de configuración.  
  
o bien
  
 El archivo de configuración ha cambiado.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>Escribe en el archivo de configuración XML actual los valores de configuración que incluye este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="saveMode">Valor de <see cref="T:System.Configuration.ConfigurationSaveMode" /> que determina los valores de propiedad que se van a guardar.</param>
      <param name="forceSaveAll">
        <see langword="true" /> para guardar aun cuando no se haya modificado la configuración; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se ha podido escribir en el archivo de configuración.  
  
o bien
  
 El archivo de configuración ha cambiado.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
      <summary>Escribe en el archivo de configuración XML especificado los valores de configuración que incluye este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="filename">Ruta de acceso y nombre del archivo en que se va a guardar el archivo de configuración.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se ha podido escribir en el archivo de configuración.  
  
o bien
  
 El archivo de configuración ha cambiado.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>Escribe en el archivo de configuración XML especificado los valores de configuración que incluye este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="filename">Ruta de acceso y nombre del archivo en que se va a guardar el archivo de configuración.</param>
      <param name="saveMode">Valor de <see cref="T:System.Configuration.ConfigurationSaveMode" /> que determina los valores de propiedad que se van a guardar.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se ha podido escribir en el archivo de configuración.  
  
o bien
  
 El archivo de configuración ha cambiado.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>Escribe en el archivo de configuración XML especificado los valores de configuración que incluye este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="filename">Ruta de acceso y nombre del archivo en que se va a guardar el archivo de configuración.</param>
      <param name="saveMode">Valor de <see cref="T:System.Configuration.ConfigurationSaveMode" /> que determina los valores de propiedad que se van a guardar.</param>
      <param name="forceSaveAll">
        <see langword="true" /> para guardar aun cuando no se haya modificado la configuración; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="filename" /> es null o una cadena vacía ("").</exception>
    </member>
    <member name="P:System.Configuration.Configuration.AppSettings">
      <summary>Obtiene la sección de configuración del objeto <see cref="T:System.Configuration.AppSettingsSection" /> que se aplica a este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Objeto <see cref="T:System.Configuration.AppSettingsSection" /> que representa la sección de configuración <see langword="appSettings" /> que se aplica a este objeto <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <summary>Especifica un delegado de función que se usa para transformar las cadenas de ensamblado en archivos de configuración.</summary>
      <returns>Un delegado que transforma las cadenas de tipo. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.ConnectionStrings">
      <summary>Obtiene un objeto de sección de configuración <see cref="T:System.Configuration.ConnectionStringsSection" /> que se aplica a este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Objeto de sección de configuración <see cref="T:System.Configuration.ConnectionStringsSection" /> que representa la sección de configuración <see langword="connectionStrings" /> que se aplica a este objeto <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.EvaluationContext">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ContextInformation" /> para el objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>El objeto <see cref="T:System.Configuration.ContextInformation" /> para el objeto <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.FilePath">
      <summary>Obtiene la ruta de acceso física al archivo de configuración que representa este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Ruta de acceso física al archivo de configuración que representa este objeto <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.HasFile">
      <summary>Obtiene un valor que indica si existe un archivo para el recurso representado por este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>
        <see langword="true" /> si existe un archivo de configuración; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Locations">
      <summary>Obtiene las ubicaciones que hay definidas en este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Colección <see cref="T:System.Configuration.ConfigurationLocationCollection" /> que contiene las ubicaciones que hay definidas en este objeto <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.NamespaceDeclared">
      <summary>Obtiene o establece un valor que indica si el archivo de configuración tiene un espacio de nombres XML.</summary>
      <returns>
        <see langword="true" /> si el archivo de configuración tiene un espacio de nombres XML; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.RootSectionGroup">
      <summary>Obtiene el objeto raíz <see cref="T:System.Configuration.ConfigurationSectionGroup" /> para este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Grupo de sección raíz para este objeto <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.SectionGroups">
      <summary>Obtiene una colección de los grupos de sección que define esta configuración.</summary>
      <returns>Colección <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> que representa la colección de grupos de sección para este objeto <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Sections">
      <summary>Obtiene una colección de las secciones definidas por este objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Una colección de las secciones definidas por este objeto <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TargetFramework">
      <summary>Especifica la versión de destino de .NET Framework cuando el destino es una versión anterior a la actual.</summary>
      <returns>Nombre de la versión de destino de .NET Framework. El valor predeterminado es <see langword="null" />, que indica que el destino es la versión actual.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TypeStringTransformer">
      <summary>Especifica un delegado de función que se usa para transformar las cadenas de tipo en archivos de configuración.</summary>
      <returns>Un delegado que transforma las cadenas de tipo. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowDefinition">
      <summary>Especifica las ubicaciones de la jerarquía del archivo de configuración que pueden establecer o reemplazar las propiedades contenidas dentro de un objeto <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> se puede definir en cualquier parte.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> solamente se puede definir en el archivo Machine.config.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> se puede definir en el archivo Machine.config, en el archivo Web.config del equipo que se encuentra en el mismo directorio que Machine.config, o en el archivo Web.config de la aplicación de nivel superior que se encuentra en la raíz del directorio virtual, pero no en los subdirectorios de una raíz virtual.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> se puede definir en el archivo Machine.config o en el archivo Web.config del equipo que se encuentra en el mismo directorio que Machine.config, pero no en archivos Web.config de aplicaciones.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
      <summary>Especifica las ubicaciones de la jerarquía del archivo de configuración que pueden establecer o reemplazar las propiedades contenidas dentro de un objeto <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> solamente se puede definir en el archivo Machine.config.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <summary>El objeto <see cref="T:System.Configuration.ConfigurationSection" /> se puede definir en el archivo Machine.config o en el archivo Exe.config del directorio de aplicación cliente. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <summary>El objeto <see cref="T:System.Configuration.ConfigurationSection" /> se puede definir en el archivo Machine.config, en el archivo Exe.config del directorio de aplicación cliente, en el archivo User.config del directorio de usuario itinerante o en el archivo User.config del directorio de usuario local.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <summary>El objeto <see cref="T:System.Configuration.ConfigurationSection" /> se puede definir en el archivo Machine.config, en el archivo Exe.config del directorio de aplicación cliente o en el archivo User.config del directorio de usuario itinerante.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationCollectionAttribute">
      <summary>Mediante declaración, le indica a .NET Framework que cree una instancia de una colección de elementos de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</summary>
      <param name="itemType">Tipo de la colección de propiedades que se va a crear.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <summary>Obtiene o establece el nombre del elemento de configuración <see langword="&lt;add&gt;" />.</summary>
      <returns>Nombre que reemplaza el nombre estándar "add" para el elemento de configuración.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <summary>Obtiene o establece el nombre del elemento de configuración <see langword="&lt;clear&gt;" />.</summary>
      <returns>Nombre que reemplaza el nombre estándar "clear" para el elemento de configuración.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <summary>Obtiene o establece el tipo del atributo <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</summary>
      <returns>Tipo de la propiedad <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <summary>Obtiene el tipo del elemento de colección.</summary>
      <returns>Tipo del elemento de colección.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <summary>Obtiene o establece el nombre del elemento de configuración <see langword="&lt;remove&gt;" />.</summary>
      <returns>Nombre que reemplaza el nombre estándar "remove" para el elemento de configuración.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationConverterBase">
      <summary>Es la clase base para los tipos de convertidor de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationConverterBase" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si se permite la conversión.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="type">
        <see cref="T:System.Type" /> desde el que se va a convertir.</param>
      <returns>
        <see langword="true" /> si se permite la conversión; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si se permite la conversión.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se utiliza para la conversión de tipos.</param>
      <param name="type">Tipo al que se va a convertir.</param>
      <returns>
        <see langword="true" /> si se permite la conversión; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElement">
      <summary>Representa un elemento de configuración de un archivo de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>Lee XML del archivo de configuración.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> que lee el archivo de configuración.</param>
      <param name="serializeCollectionKey">
        <see langword="true" /> para serializar sólo las propiedades clave de la colección; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se bloquea el elemento de lectura.  
  
o bien
  
 No se reconoce un atributo del nodo actual.  
  
o bien
  
 No se puede determinar el estado de bloqueo del nodo actual.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <summary>Compara la instancia actual de <see cref="T:System.Configuration.ConfigurationElement" /> con el objeto especificado.</summary>
      <param name="compareTo">Objeto con el que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto con el que se compara es igual a la instancia actual de <see cref="T:System.Configuration.ConfigurationElement" />; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
      <summary>Obtiene un valor único que representa la instancia actual de <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Valor único que representa la instancia actual de <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <summary>Devuelve la versión transformada del nombre de ensamblado especificado.</summary>
      <param name="assemblyName">Nombre del ensamblado.</param>
      <returns>Versión transformada del nombre de ensamblado. Si no hay ningún transformador disponible, el valor del parámetro <paramref name="assemblyName" /> se devuelve sin modificar. La propiedad <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> es <see langword="null" /> si no hay ningún transformador disponible.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <summary>Devuelve la versión transformada del nombre de tipo especificado.</summary>
      <param name="typeName">Nombre del tipo.</param>
      <returns>Versión transformada del nombre de tipo especificado. Si no hay ningún transformador disponible, el valor del parámetro <paramref name="typeName" /> se devuelve sin modificar. La propiedad <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> es <see langword="null" /> si no hay ningún transformador disponible.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Init">
      <summary>Establece el objeto <see cref="T:System.Configuration.ConfigurationElement" /> en su estado inicial.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <summary>Se utiliza para inicializar un conjunto predeterminado de valores para el objeto <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsModified">
      <summary>Indica si se ha modificado este elemento de configuración desde la última vez en que se guardo o cargó al implementarlo en una clase derivada.</summary>
      <returns>
        <see langword="true" /> si el elemento se ha modificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> es de solo lectura.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> es de solo lectura; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <summary>Agrega a la lista que se pasa los errores de propiedad no válida que hay en este objeto <see cref="T:System.Configuration.ConfigurationElement" /> y en todos los subelementos.</summary>
      <param name="errorList">Objeto que implementa la interfaz <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary>Obtiene un valor que indica si se ha encontrado un atributo desconocido durante la deserialización.</summary>
      <param name="name">Nombre del atributo no reconocido.</param>
      <param name="value">Valor del atributo no reconocido.</param>
      <returns>
        <see langword="true" /> cuando se encuentra un atributo desconocido durante la deserialización; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Obtiene un valor que indica si se ha encontrado un elemento desconocido durante la deserialización.</summary>
      <param name="elementName">Nombre del subelemento desconocido.</param>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> que se va a utilizar para la deserialización.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se bloquea el elemento identificado por <paramref name="elementName" />.  
  
o bien 
Se bloquean uno o más de los atributos del elemento.  
  
o bien 
 No se reconoce <paramref name="elementName" /> o el elemento tiene un atributo desconocido.  
  
o bien 
El elemento tiene un atributo booleano con un valor no válido.  
  
o bien 
Se intentó deserializar una propiedad varias veces.  
  
o bien 
Se intentó deserializar una propiedad que no es un miembro válido del elemento.  
  
o bien 
El elemento no puede contener CDATA ni ningún elemento de texto.</exception>
      <returns>Es <see langword="true" /> cuando se encuentra un elemento desconocido durante la deserialización; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <summary>Se inicia una excepción cuando no se encuentra una propiedad necesaria.</summary>
      <param name="name">Nombre del atributo requerido que no se ha encontrado.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">En todos los casos.</exception>
      <returns>Ninguno.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <summary>Se llama a este método después de la deserialización.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <summary>Se llama a este método antes de la serialización.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se va a usar para serializar <see cref="T:System.Configuration.ConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>Restablece el estado interno del objeto <see cref="T:System.Configuration.ConfigurationElement" />, incluyendo los bloqueos y las colecciones de propiedades.</summary>
      <param name="parentElement">Nodo primario del elemento de configuración.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ResetModified">
      <summary>Restablece el valor del método <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> en <see langword="false" /> cuando se implementa en una clase derivada.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Escribe el contenido de este elemento de configuración en el archivo de configuración cuando se implementa en una clase derivada.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> que escribe en el archivo de configuración.</param>
      <param name="serializeCollectionKey">
        <see langword="true" /> para serializar sólo las propiedades clave de la colección; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El atributo actual se bloquea en un nivel de configuración más alto.</exception>
      <returns>
        <see langword="true" /> si realmente se ha serializado algún dato; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary>Escribe las etiquetas externas de este elemento de configuración en el archivo de configuración cuando se implementa en una clase derivada.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> que escribe en el archivo de configuración.</param>
      <param name="elementName">Nombre del objeto <see cref="T:System.Configuration.ConfigurationElement" /> que se va a escribir.</param>
      <exception cref="T:System.Exception">El elemento tiene varios elementos secundarios.</exception>
      <returns>Es <see langword="true" /> si la operación de escritura se realizó correctamente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <summary>Establece una propiedad en el valor especificado.</summary>
      <param name="prop">Propiedad de elemento que se va a establecer.</param>
      <param name="value">Valor que se asigna a la propiedad.</param>
      <param name="ignoreLocks">
        <see langword="true" /> si se deben omitir los bloqueos de la propiedad; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se produce si el elemento es de sólo lectura o el valor de <paramref name="ignoreLocks" /> es <see langword="true" />, pero no se pueden omitir los bloqueos.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <summary>Establece la propiedad <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> para el objeto <see cref="T:System.Configuration.ConfigurationElement" /> y todos los subelementos.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Modifica el objeto <see cref="T:System.Configuration.ConfigurationElement" /> para quitar todos los valores que no se deben guardar.</summary>
      <param name="sourceElement">
        <see cref="T:System.Configuration.ConfigurationElement" /> del nivel actual que contiene una vista combinada de las propiedades.</param>
      <param name="parentElement">Objeto <see cref="T:System.Configuration.ConfigurationElement" /> primario o es <see langword="null" /> si éste está en el nivel superior.</param>
      <param name="saveMode">Uno de los valores de enumeración que determina los valores de propiedad que se van a incluir.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <summary>Obtiene una referencia a la instancia de <see cref="T:System.Configuration.Configuration" /> de nivel superior que representa la jerarquía de configuración a la que pertenece la instancia actual de <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Instancia de <see cref="T:System.Configuration.Configuration" /> de nivel superior a la que pertenece la instancia actual de <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.ElementInformation" /> que contiene la funcionalidad e información no personalizable del objeto <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>
        <see cref="T:System.Configuration.ElementInformation" /> que contiene la funcionalidad y la información no personalizable de <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ConfigurationElementProperty" /> que representa al propio objeto <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementProperty" /> que representa el propio <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ContextInformation" /> para el objeto <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El elemento actual no está asociado a ningún contexto.</exception>
      <returns>
        <see cref="T:System.Configuration.ContextInformation" /> para <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.HasContext">
      <summary>Obtiene un valor que indica si la propiedad <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> es <see langword="null" />.</summary>
      <returns>false si la propiedad <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> es <see langword="null" />; en caso contrario, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <summary>Obtiene o establece una propiedad o atributo de este elemento de configuración.</summary>
      <param name="prop">Propiedad a la que se va a obtener acceso.</param>
      <exception cref="T:System.Configuration.ConfigurationException">
        <paramref name="prop" /> es <see langword="null" /> o no existe en el elemento.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="prop" /> es de sólo lectura o se bloquea.</exception>
      <returns>Propiedad, atributo o elemento secundario especificado.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <summary>Obtiene o establece una propiedad, un atributo o un elemento secundario de este elemento de configuración.</summary>
      <param name="propertyName">Nombre del objeto <see cref="T:System.Configuration.ConfigurationProperty" /> al que se va a obtener acceso.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="prop" /> es de sólo lectura o se bloquea.</exception>
      <returns>Propiedad, atributo o elemento secundario especificados.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <summary>Obtiene la colección de atributos bloqueados.</summary>
      <returns>Colección <see cref="T:System.Configuration.ConfigurationLockCollection" /> de atributos bloqueados (propiedades) para el elemento.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <summary>Obtiene la colección de elementos bloqueados.</summary>
      <returns>Colección <see cref="T:System.Configuration.ConfigurationLockCollection" /> de elementos bloqueados.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
      <summary>Obtiene la colección de atributos bloqueados.</summary>
      <returns>Colección <see cref="T:System.Configuration.ConfigurationLockCollection" /> de atributos bloqueados (propiedades) para el elemento.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockElements">
      <summary>Obtiene la colección de elementos bloqueados.</summary>
      <returns>Colección <see cref="T:System.Configuration.ConfigurationLockCollection" /> de elementos bloqueados.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockItem">
      <summary>Obtiene o establece un valor que indica si el elemento está bloqueado.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El elemento ya se ha bloqueado en un nivel de configuración más alto.</exception>
      <returns>
        <see langword="true" /> si el elemento está bloqueado; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Properties">
      <summary>Obtiene la colección de propiedades.</summary>
      <returns>La clase <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> de propiedades correspondiente al elemento.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollection">
      <summary>Representa un elemento de configuración que contiene una colección de elementos secundarios.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="comparer">Comparador <see cref="T:System.Collections.IComparer" /> que se va a utilizar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comparer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Agrega un elemento de configuración a la colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> que se va a agregar.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <summary>Agrega un elemento de configuración a la colección de elementos de configuración.</summary>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> que se va a agregar.</param>
      <param name="throwIfExists">Es <see langword="true" /> para producir una excepción si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> especificado ya está incluido en el objeto <see cref="T:System.Configuration.ConfigurationElementCollection" />; de lo contrario, es <see langword="false" />.</param>
      <exception cref="T:System.Exception">El objeto <see cref="T:System.Configuration.ConfigurationElement" /> que se quiere agregar ya existe en la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> y el parámetro <paramref name="throwIfExists" /> es <see langword="true" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary>Agrega un elemento de configuración a la colección de elementos de configuración.</summary>
      <param name="index">Ubicación del índice en el que se va a agregar el objeto <see cref="T:System.Configuration.ConfigurationElement" /> especificado.</param>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> que se va a agregar.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <summary>Quita todos los objetos de elemento de configuración de la colección.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La configuración es de solo lectura.  
  
o bien
  
 Un elemento de la colección se ha bloqueado en una configuración de nivel superior.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <summary>Obtiene el elemento de configuración en la ubicación de índice especificada.</summary>
      <param name="index">Ubicación de índice del objeto <see cref="T:System.Configuration.ConfigurationElement" /> que se va a devolver.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" /> es menor que <see langword="0" />.  
  
o bien 
No hay ningún objeto <see cref="T:System.Configuration.ConfigurationElement" /> en el índice <paramref name="index" /> especificado.</exception>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationElement" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <summary>Devuelve el elemento de configuración con la clave especificada.</summary>
      <param name="key">Clave del elemento que se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationElement" /> con la clave especificada; en caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <summary>Devuelve una matriz de claves para todos los elementos de configuración incluidos en la colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Una matriz que contiene las claves para todos los objetos <see cref="T:System.Configuration.ConfigurationElement" /> incluidos en <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <summary>Obtiene la clave para el objeto <see cref="T:System.Configuration.ConfigurationElement" /> en la ubicación de índice especificada.</summary>
      <param name="index">Ubicación de índice para el objeto <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" /> es menor que <see langword="0" />.  
  
o bien 
No hay ningún objeto <see cref="T:System.Configuration.ConfigurationElement" /> en el índice <paramref name="index" /> especificado.</exception>
      <returns>Clave para el objeto  <see cref="T:System.Configuration.ConfigurationElement" /> especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <summary>Indica el índice del objeto <see cref="T:System.Configuration.ConfigurationElement" /> especificado.</summary>
      <param name="element">Objeto <see cref="T:System.Configuration.ConfigurationElement" /> para la ubicación de índice especificada.</param>
      <returns>Índice del objeto <see cref="T:System.Configuration.ConfigurationElement" /> especificado; de lo contrario, -1.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <summary>Indica si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> con la clave especificada se ha quitado de la colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="key">Clave del elemento que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si se ha quitado el objeto <see cref="T:System.Configuration.ConfigurationElement" /> con la clave especificada; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <summary>Quita una clase <see cref="T:System.Configuration.ConfigurationElement" /> de la colección.</summary>
      <param name="key">Clave del objeto <see cref="T:System.Configuration.ConfigurationElement" /> que se va a quitar.</param>
      <exception cref="T:System.Exception">En la colección no existe un objeto <see cref="T:System.Configuration.ConfigurationElement" /> con la clave especificada, el elemento ya se ha quitado o no se puede quitar porque el valor de su propiedad <see cref="P:System.Configuration.ConfigurationProperty.Type" /> no es <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <summary>Quita el objeto <see cref="T:System.Configuration.ConfigurationElement" /> en la ubicación de índice especificada.</summary>
      <param name="index">Ubicación de índice del objeto <see cref="T:System.Configuration.ConfigurationElement" /> que se va a quitar.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La configuración es de solo lectura.  
  
o bien 
 <paramref name="index" /> es menor que <see langword="0" /> o mayor que el número de objetos <see cref="T:System.Configuration.ConfigurationElement" /> de la colección.  
  
o bien 
El objeto <see cref="T:System.Configuration.ConfigurationElement" /> ya se ha quitado.  
  
o bien 
El valor del objeto <see cref="T:System.Configuration.ConfigurationElement" /> se ha bloqueado en un nivel superior.  
  
o bien 
El objeto <see cref="T:System.Configuration.ConfigurationElement" /> se ha heredado.  
  
o bien 
El valor de la propiedad <see cref="T:System.Configuration.ConfigurationElement" /> del objeto <see cref="P:System.Configuration.ConfigurationProperty.Type" /> no es <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> ni <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <summary>Copia el contenido de la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> en una matriz.</summary>
      <param name="array">Matriz en la que se va a copiar el contenido de la colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index">Ubicación de índice en la que se va a empezar a copiar.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <summary>Cuando se reemplaza en una clase derivada, se crea un nuevo objeto <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Una celda <see cref="T:System.Configuration.ConfigurationElement" /> recién creada.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <summary>Crea un nuevo objeto <see cref="T:System.Configuration.ConfigurationElement" /> cuando se reemplaza en una clase derivada.</summary>
      <param name="elementName">Nombre del objeto <see cref="T:System.Configuration.ConfigurationElement" /> que se va a crear.</param>
      <returns>Un nuevo <see cref="T:System.Configuration.ConfigurationElement" /> con un nombre especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <summary>Compara la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> con el objeto especificado.</summary>
      <param name="compareTo">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto con el que se compara es igual a la instancia actual de <see cref="T:System.Configuration.ConfigurationElementCollection" />; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Cuando se reemplaza en una clase derivada, obtiene la clave de elemento para un elemento de configuración especificado.</summary>
      <param name="element">Objeto <see cref="T:System.Configuration.ConfigurationElement" /> para el que se va a devolver la clave.</param>
      <returns>
        <see cref="T:System.Object" /> que actúa como clave para el objeto <see cref="T:System.Configuration.ConfigurationElement" /> especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <summary>Obtiene una interfaz <see cref="T:System.Collections.IEnumerator" /> que se utiliza para recorrer en iteración la colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que se utiliza para recorrer en iteración la colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <summary>Obtiene un valor único que representa la instancia de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Un valor único que representa la instancia actual de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <summary>Indica si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> especificado existe en la colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="elementName">Nombre del elemento que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si el elemento está en la colección; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary>Indica si la <see cref="T:System.Configuration.ConfigurationElement" /> se puede quitar de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="element">Elemento que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> especificado se puede quitar de esta colección <see cref="T:System.Configuration.ConfigurationElementCollection" />; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <summary>Indica si se ha modificado esta colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> desde la última vez en que se guardo o cargó al reemplazarla en una clase derivada.</summary>
      <returns>
        <see langword="true" /> si se ha modificado alguno de los elementos incluidos; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <summary>Indica si la el objeto <see cref="T:System.Configuration.ConfigurationElementCollection" /> es de solo lectura.</summary>
      <returns>
        <see langword="true" /> si la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> es de sólo lectura; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Hace que el sistema de configuración produzca una excepción.</summary>
      <param name="elementName">Nombre del elemento no reconocido.</param>
      <param name="reader">Flujo de entrada que lee XML del archivo de configuración.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El elemento especificado en <paramref name="elementName" /> es el elemento <see langword="&lt;clear&gt;" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementName" /> empieza con el prefijo reservado "config" o "lock".</exception>
      <returns>
        <see langword="true" /> si se ha deserializado correctamente el elemento no reconocido; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <summary>Restablece la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> a su estado sin modificaciones cuando se reemplaza en una clase derivada.</summary>
      <param name="parentElement">Objeto <see cref="T:System.Configuration.ConfigurationElement" /> que representa el elemento principal de colección, si existe; de lo contrario, <see langword="null" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <summary>Restablece el valor de la propiedad <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> en <see langword="false" /> cuando se invalida en una clase derivada.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Escribe los datos de configuración en un elemento XML del archivo de configuración cuando se reemplaza en una clase derivada.</summary>
      <param name="writer">Flujo de salida que escribe código XML en el archivo de configuración.</param>
      <param name="serializeCollectionKey">Es <see langword="true" /> para serializar la clave de la colección; de lo contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Se ha agregado o reemplazado uno de los elementos de la colección y empieza con el prefijo reservado "config" o "lock".</exception>
      <returns>
        <see langword="true" /> si se ha escrito correctamente la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> en el archivo de configuración.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <summary>Establece la propiedad <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> para el objeto <see cref="T:System.Configuration.ConfigurationElementCollection" /> y para todos los subelementos.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> en una matriz.</summary>
      <param name="arr">Matriz en la que se va a copiar esta colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index">Ubicación de índice en la que se va a empezar a copiar.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Invierte el efecto de combinar la información de configuración de distintos niveles de la jerarquía de configuración.</summary>
      <param name="sourceElement">Objeto <see cref="T:System.Configuration.ConfigurationElement" /> en el nivel actual que contiene una vista combinada de las propiedades.</param>
      <param name="parentElement">Objeto <see cref="T:System.Configuration.ConfigurationElement" /> primario del elemento actual o <see langword="null" /> si es el nivel superior.</param>
      <param name="saveMode">Uno de los valores de enumeración que determina los valores de propiedad que se van a incluir.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <summary>Obtiene o establece el nombre del objeto <see cref="T:System.Configuration.ConfigurationElement" /> que se va a asociar a la operación de adición en la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> cuando se reemplaza en una clase derivada.</summary>
      <exception cref="T:System.ArgumentException">El valor seleccionado empieza con el prefijo reservado "config" o "lock".</exception>
      <returns>Nombre del elemento.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <summary>Obtiene o establece el nombre del objeto <see cref="T:System.Configuration.ConfigurationElement" /> que se va a asociar a la operación de borrado en la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> cuando se reemplaza en una clase derivada.</summary>
      <exception cref="T:System.ArgumentException">El valor seleccionado empieza con el prefijo reservado "config" o "lock".</exception>
      <returns>Nombre del elemento.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <summary>Obtiene el tipo de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Enumerador <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> de esta colección.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.Count">
      <summary>Obtiene el número de elementos de la colección.</summary>
      <returns>Número de elementos de la colección.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <summary>Obtiene el nombre que se utiliza para identificar esta colección de elementos en el archivo de configuración cuando se reemplaza en una clase derivada.</summary>
      <returns>Nombre de la colección; de lo contrario, una cadena vacía. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <summary>Obtiene o establece un valor que especifica si se ha borrado la colección.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La configuración es de solo lectura.</exception>
      <returns>
        <see langword="true" /> si la colección se ha borrado; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si se sincroniza el acceso a la recopilación.</summary>
      <returns>
        <see langword="true" /> si se sincroniza el acceso a la colección <see cref="T:System.Configuration.ConfigurationElementCollection" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <summary>Obtiene o establece el nombre del objeto <see cref="T:System.Configuration.ConfigurationElement" /> que se va a asociar a la operación de eliminación en la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> cuando se reemplaza en una clase derivada.</summary>
      <exception cref="T:System.ArgumentException">El valor seleccionado empieza con el prefijo reservado "config" o "lock".</exception>
      <returns>Nombre del elemento.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <summary>Obtiene un objeto que se utiliza para sincronizar el acceso a la colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Objeto que se utiliza para sincronizar el acceso a la colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <summary>Obtiene un valor que indica si el intento de agregar un objeto <see cref="T:System.Configuration.ConfigurationElement" /> duplicado a la colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> va a hacer que se produzca una excepción.</summary>
      <returns>
        <see langword="true" /> si el intento de agregar un objeto <see cref="T:System.Configuration.ConfigurationElement" /> duplicado a esta colección <see cref="T:System.Configuration.ConfigurationElementCollection" /> va a hacer que se produzca una excepción; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollectionType">
      <summary>Especifica el tipo de un objeto <see cref="T:System.Configuration.ConfigurationElementCollectionType" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <summary>Tipo predeterminado de <see cref="T:System.Configuration.ConfigurationElementCollection" />. Las colecciones de este tipo contienen elementos que se pueden combinar por una jerarquía de archivos de configuración. En cualquier nivel determinado dentro de este tipo de jerarquía, se utilizan directivas <see langword="add" />, <see langword="remove" /> y <see langword="clear" /> para modificar cualquier propiedad heredada y especificar nuevas propiedades.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <summary>Es igual que <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />, salvo en que este tipo hace que el objeto <see cref="T:System.Configuration.ConfigurationElementCollection" /> ordene su contenido de tal modo que los elementos heredados se muestran en último lugar.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <summary>Las colecciones de este tipo contienen elementos que se aplican en el nivel en que se especifican y en todos los niveles secundarios. Un nivel secundario no puede modificar las propiedades especificadas por un elemento principal de este tipo.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <summary>Es igual que <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" />, salvo en que este tipo hace que el objeto <see cref="T:System.Configuration.ConfigurationElementCollection" /> ordene su contenido de tal modo que los elementos heredados se muestran en último lugar.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationElementProperty">
      <summary>Especifica la propiedad de un elemento de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationElementProperty" /> basándose en un parámetro proporcionado.</summary>
      <param name="validator">Un objeto <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.ConfigurationValidatorBase" /> utilizado para validar el objeto <see cref="T:System.Configuration.ConfigurationElementProperty" />.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationErrorsException">
      <summary>Excepción que se inicia cuando se produce un error de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="info">Objeto que contiene la información que se va a deserializar.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.InvalidOperationException">El tipo actual no es una excepción <see cref="T:System.Configuration.ConfigurationException" /> ni una excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Excepción que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Excepción interna que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="filename">Ruta de acceso al archivo de configuración que ha hecho que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="line">Número de línea del archivo de configuración en que se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Excepción interna que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="node">Objeto <see cref="T:System.Xml.XmlNode" /> que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Excepción interna que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="filename">Ruta de acceso al archivo de configuración que ha hecho que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="line">Número de línea del archivo de configuración en que se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="node">Objeto <see cref="T:System.Xml.XmlNode" /> que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <summary>Obtiene la ruta de acceso al archivo de configuración desde el que se estaba cargando el objeto <see cref="T:System.Xml.XmlNode" /> interno al producirse esta excepción de configuración.</summary>
      <param name="node">Objeto <see cref="T:System.Xml.XmlNode" /> que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Ruta de acceso al archivo de configuración desde el que se estaba cargando el objeto <see cref="T:System.Xml.XmlNode" /> interno al producirse esta excepción de configuración.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <summary>Obtiene la ruta de acceso al archivo de configuración que estaba leyendo el objeto <see cref="T:System.Xml.XmlReader" /> interno al producirse esta excepción de configuración.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Ruta de acceso del archivo de configuración al que estaba obteniendo acceso el objeto <see cref="T:System.Xml.XmlReader" /> interno cuando se produjo la excepción.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <summary>Obtiene el número de línea del archivo de configuración que representaba el objeto <see cref="T:System.Xml.XmlNode" /> interno al producirse esta excepción de configuración.</summary>
      <param name="node">Objeto <see cref="T:System.Xml.XmlNode" /> que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Número de línea del archivo de configuración que contiene el objeto <see cref="T:System.Xml.XmlNode" /> que se estaba analizando al producirse esta excepción de configuración.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <summary>Obtiene el número de línea del archivo de configuración que estaba procesando el objeto <see cref="T:System.Xml.XmlReader" /> interno al producirse esta excepción de configuración.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Número de línea del archivo de configuración al que estaba obteniendo acceso el objeto <see cref="T:System.Xml.XmlReader" /> cuando se produjo la excepción.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con el nombre del archivo y el número de línea en que se ha producido esta excepción de configuración.</summary>
      <param name="info">Objeto que contiene la información que se va a serializar.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <summary>Obtiene una descripción de por qué se ha producido esta excepción de configuración.</summary>
      <returns>Descripción de por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
      <summary>Obtiene una colección de errores que detallan las razones por las que se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <returns>Un objeto <see cref="T:System.Collections.ICollection" /> que contiene los errores que identifican las razones por las que se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
      <summary>Obtiene la ruta de acceso al archivo de configuración que ha hecho que se produzca esta excepción de configuración.</summary>
      <returns>Ruta de acceso al archivo de configuración que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Line">
      <summary>Obtiene el número de línea del archivo de configuración en que se ha producido esta excepción de configuración.</summary>
      <returns>Número de línea del archivo de configuración en que se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Message">
      <summary>Obtiene una descripción extensa de por qué se ha producido esta excepción de configuración.</summary>
      <returns>Descripción extensa de por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationException">
      <summary>Excepción que se produce cuando se produce un error en el sistema de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationException" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="info">Objeto que contiene la información que se va a deserializar.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="inner">Excepción interna que ha hecho que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationException" />, si existe alguna.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="inner">Excepción interna que ha hecho que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationException" />, si existe alguna.</param>
      <param name="filename">Ruta de acceso al archivo de configuración que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="line">Número de línea del archivo de configuración en que se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="inner">Excepción interna que ha hecho que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationException" />, si existe alguna.</param>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> que ha hecho que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="filename">Ruta de acceso al archivo de configuración que ha provocado que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="line">Número de línea del archivo de configuración en que se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> que ha hecho que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con el nombre del archivo y el número de línea en que se ha producido esta excepción de configuración.</summary>
      <param name="info">Objeto que contiene la información que se va a serializar.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
      <summary>Obtiene la ruta de acceso al archivo de configuración desde el que se estaba cargando el objeto <see cref="T:System.Xml.XmlNode" /> interno al producirse esta excepción de configuración.</summary>
      <param name="node">Objeto <see cref="T:System.Xml.XmlNode" /> que ha hecho que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <returns>
        <see langword="string" /> que representa el nombre de archivo del nodo.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
      <summary>Obtiene el número de línea del archivo de configuración que representaba el objeto <see cref="T:System.Xml.XmlNode" /> interno al producirse esta excepción de configuración.</summary>
      <param name="node">Objeto <see cref="T:System.Xml.XmlNode" /> que ha hecho que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <returns>
        <see langword="int" /> que representa el número de línea del nodo.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.BareMessage">
      <summary>Obtiene una descripción de por qué se ha producido esta excepción de configuración.</summary>
      <returns>Descripción de por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Filename">
      <summary>Obtiene la ruta de acceso al archivo de configuración que ha hecho que se produzca esta excepción de configuración.</summary>
      <returns>Ruta de acceso al archivo de configuración que ha hecho que se produzca esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Line">
      <summary>Obtiene el número de línea del archivo de configuración en que se ha producido esta excepción de configuración.</summary>
      <returns>Número de línea del archivo de configuración en que se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Message">
      <summary>Obtiene una descripción extensa de por qué se ha producido esta excepción de configuración.</summary>
      <returns>Descripción extensa de por qué se ha producido esta excepción <see cref="T:System.Configuration.ConfigurationException" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationFileMap">
      <summary>Define la asignación del archivo de configuración para el archivo de configuración del equipo.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationFileMap" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationFileMap" /> basándose en el parámetro proporcionado.</summary>
      <param name="machineConfigFilename">Nombre del archivo de configuración del equipo.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.Clone">
      <summary>Crea una copia del objeto <see cref="T:System.Configuration.ConfigurationFileMap" /> existente.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.ConfigurationFileMap" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <summary>Obtiene o establece el nombre del archivo de configuración del equipo.</summary>
      <returns>El nombre del archivo de configuración del equipo.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocation">
      <summary>Representa un elemento <see langword="location" /> en un archivo de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <summary>Crea una instancia de un objeto Configuration.</summary>
      <returns>Objeto Configuration.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLocation.Path">
      <summary>Obtiene la ruta de acceso relativa al recurso para el que este objeto <see cref="T:System.Configuration.ConfigurationLocation" /> representa sus valores de configuración.</summary>
      <returns>Ruta de acceso relativa al recurso para el que el objeto <see cref="T:System.Configuration.ConfigurationLocation" /> representa sus valores de configuración.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocationCollection">
      <summary>Contiene una colección de objetos <see cref="T:System.Configuration.ConfigurationLocationCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ConfigurationLocationCollection" /> en el índice especificado.</summary>
      <param name="index">Ubicación de índice del objeto <see cref="T:System.Configuration.ConfigurationLocationCollection" /> que se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationLocationCollection" /> en el índice especificado.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLockCollection">
      <summary>Contiene una colección de objetos de configuración bloqueados. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <summary>Bloquea un objeto de configuración agregándolo a la colección.</summary>
      <param name="name">Nombre del objeto de configuración.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se produce cuando el parámetro <paramref name="name" /> no coincide con un objeto de configuración existente en la colección.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
      <summary>Borra todos los objetos de configuración de la colección.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <summary>Comprueba si un objeto de configuración específico está bloqueado.</summary>
      <param name="name">Nombre del objeto de configuración que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si la colección <see cref="T:System.Configuration.ConfigurationLockCollection" /> contiene el objeto de configuración especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copia toda la colección <see cref="T:System.Configuration.ConfigurationLockCollection" /> en una matriz <see cref="T:System.Array" /> unidimensional y compatible, comenzando en el índice especificado de la matriz de destino.</summary>
      <param name="array">Matriz <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados desde la colección <see cref="T:System.Configuration.ConfigurationLockCollection" />. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <summary>Obtiene un objeto <see cref="T:System.Collections.IEnumerator" /> que se usa para iterar por esta colección <see cref="T:System.Configuration.ConfigurationLockCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <summary>Comprueba si un objeto de configuración concreto es de sólo lectura.</summary>
      <param name="name">Nombre del objeto de configuración que se va a comprobar.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El objeto de configuración especificado no está en la colección.</exception>
      <returns>
        <see langword="true" /> si el objeto de configuración especificado de la colección <see cref="T:System.Configuration.ConfigurationLockCollection" /> es de sólo lectura; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <summary>Quita un objeto de configuración de la colección.</summary>
      <param name="name">Nombre del objeto de configuración.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se produce cuando el parámetro <paramref name="name" /> no coincide con un objeto de configuración existente en la colección.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <summary>Bloquea un conjunto de objetos de configuración basándose en la lista proporcionada.</summary>
      <param name="attributeList">Cadena separada por comas.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se produce cuando un elemento del parámetro <paramref name="attributeList" /> no es un atributo de configuración válido que se pueda bloquear.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia toda la colección <see cref="T:System.Configuration.ConfigurationLockCollection" /> en una matriz <see cref="T:System.Array" /> unidimensional y compatible, comenzando en el índice especificado de la matriz de destino.</summary>
      <param name="array">Matriz <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados desde la colección <see cref="T:System.Configuration.ConfigurationLockCollection" />. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <summary>Obtiene una lista de objetos de configuración incluidos en la colección.</summary>
      <returns>Cadena separada por comas que relaciona los objetos de configuración bloqueados en la colección.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.Count">
      <summary>Obtiene el número de objetos de configuración bloqueados que contiene la colección.</summary>
      <returns>Número de objetos de configuración bloqueados que contiene la colección.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <summary>Obtiene un valor que especifica si la colección de objetos bloqueados tiene elementos principales.</summary>
      <returns>
        <see langword="true" /> si la colección <see cref="T:System.Configuration.ConfigurationLockCollection" /> tiene elementos principales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <summary>Obtiene un valor que especifica si se ha modificado la colección.</summary>
      <returns>
        <see langword="true" /> si se ha modificado la colección <see cref="T:System.Configuration.ConfigurationLockCollection" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <summary>Obtiene un valor que especifica si la colección está sincronizada.</summary>
      <returns>
        <see langword="true" /> si la colección <see cref="T:System.Configuration.ConfigurationLockCollection" /> está sincronizada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <summary>Obtiene un objeto que se utiliza para sincronizar el acceso a esta colección <see cref="T:System.Configuration.ConfigurationLockCollection" />.</summary>
      <returns>Objeto que se utiliza para sincronizar el acceso a esta colección <see cref="T:System.Configuration.ConfigurationLockCollection" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationManager">
      <summary>Proporciona acceso a los archivos de configuración para las aplicaciones cliente. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <summary>Recupera una sección de configuración especificada para la configuración predeterminada de la aplicación actual.</summary>
      <param name="sectionName">Ruta de acceso y nombre de la sección de configuración. Los nombres de los nodos están separados por barras diagonales, por ejemplo "system.net/mailSettings/smtp".</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo cargar un archivo de configuración.</exception>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado o <see langword="null" /> si la sección no existe.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <summary>Abre el archivo de configuración para la aplicación actual como un objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="userLevel">Uno de los valores de enumeración que especifica el nivel de usuario para el que se está abriendo la configuración.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo cargar un archivo de configuración.</exception>
      <returns>El archivo de configuración para la aplicación actual.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <summary>Abre el archivo de configuración de cliente especificado como un objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="exePath">Ruta de acceso del archivo ejecutable (exe).</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo cargar un archivo de configuración.</exception>
      <returns>El archivo de configuración especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <summary>Abre el archivo de configuración del equipo como un objeto <see cref="T:System.Configuration.Configuration" /> en el equipo actual.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo cargar un archivo de configuración.</exception>
      <returns>El archivo de configuración de la máquina.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <summary>Abre el archivo de configuración de cliente especificado como un objeto <see cref="T:System.Configuration.Configuration" /> que utiliza la asignación de archivos y el nivel de usuario indicados.</summary>
      <param name="fileMap">El archivo de configuración que se va a usar en lugar del archivo de configuración predeterminado de la aplicación.</param>
      <param name="userLevel">Uno de los valores de enumeración que especifica el nivel de usuario para el que se está abriendo la configuración.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo cargar un archivo de configuración.</exception>
      <returns>Objeto de configuración.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)">
      <summary>Abre el archivo de configuración de cliente especificado como un objeto <see cref="T:System.Configuration.Configuration" /> que usa la asignación de archivos, nivel de usuario y opción de carga previa.</summary>
      <param name="fileMap">El archivo de configuración que se va a usar en lugar del archivo de configuración de la aplicación predeterminado.</param>
      <param name="userLevel">Uno de los valores de enumeración que especifica el nivel de usuario para el que se está abriendo la configuración.</param>
      <param name="preLoad">
        <see langword="true" /> para cargar previamente todos los grupos de secciones y secciones; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo cargar un archivo de configuración.</exception>
      <returns>Objeto de configuración.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary>Abre el archivo de configuración del equipo como un objeto <see cref="T:System.Configuration.Configuration" /> que utiliza la asignación de archivos especificada.</summary>
      <param name="fileMap">El archivo de configuración que se va a usar en lugar del archivo de configuración predeterminado de la aplicación.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo cargar un archivo de configuración.</exception>
      <returns>El archivo de configuración de la máquina.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <summary>Actualiza la sección con nombre para que se vuelva a leer desde el disco la próxima vez que se recupere.</summary>
      <param name="sectionName">Nombre de la sección de configuración o ruta de acceso y nombre de sección de configuración de la sección que se va a actualizar.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.AppSettings">
      <summary>Obtiene los datos <see cref="T:System.Configuration.AppSettingsSection" /> para la configuración predeterminada de la aplicación actual.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo recuperar un objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> con los datos de configuración de la aplicación.</exception>
      <returns>Contenido del <see cref="T:System.Configuration.AppSettingsSection" /> objeto para la configuración predeterminada de la aplicación actual.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <summary>Obtiene los datos <see cref="T:System.Configuration.ConnectionStringsSection" /> para la configuración predeterminada de la aplicación actual.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">No se pudo recuperar un objeto <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</exception>
      <returns>Contenido del <see cref="T:System.Configuration.ConnectionStringsSection" /> objeto para la configuración predeterminada de la aplicación actual.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationProperty">
      <summary>Representa un atributo o un elemento secundario de un elemento de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Nombre de la entidad de configuración.</param>
      <param name="type">Tipo de la entidad de configuración.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Nombre de la entidad de configuración.</param>
      <param name="type">Tipo de la entidad de configuración.</param>
      <param name="defaultValue">Valor predeterminado de la entidad de configuración.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Nombre de la entidad de configuración.</param>
      <param name="type">Tipo de la entidad de configuración.</param>
      <param name="defaultValue">Valor predeterminado de la entidad de configuración.</param>
      <param name="typeConverter">Tipo del convertidor que se va a aplicar.</param>
      <param name="validator">Validador que se va a utilizar.</param>
      <param name="options">Uno de los valores de enumeración de <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Nombre de la entidad de configuración.</param>
      <param name="type">Tipo de la entidad de configuración.</param>
      <param name="defaultValue">Valor predeterminado de la entidad de configuración.</param>
      <param name="typeConverter">Tipo del convertidor que se va a aplicar.</param>
      <param name="validator">Validador que se va a utilizar.</param>
      <param name="options">Uno de los valores de enumeración de <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
      <param name="description">Descripción de la entidad de configuración.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Nombre de la entidad de configuración.</param>
      <param name="type">Tipo de la entidad de configuración.</param>
      <param name="defaultValue">Valor predeterminado de la entidad de configuración.</param>
      <param name="options">Uno de los valores de enumeración de <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Converter">
      <summary>Obtiene el objeto <see cref="T:System.ComponentModel.TypeConverter" /> que se ha utilizado para convertir este objeto <see cref="T:System.Configuration.ConfigurationProperty" /> en la representación XML que se escribe en el archivo de configuración.</summary>
      <exception cref="T:System.Exception">Este objeto <see cref="T:System.Configuration.ConfigurationProperty" /> no se puede convertir.</exception>
      <returns>Objeto <see cref="T:System.ComponentModel.TypeConverter" /> que se ha utilizado para convertir este objeto <see cref="T:System.Configuration.ConfigurationProperty" /> en la representación XML que se escribe en el archivo de configuración.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <summary>Obtiene el valor predeterminado para esta propiedad <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>
        <see cref="T:System.Object" /> que se puede convertir al tipo que especifica la propiedad <see cref="P:System.Configuration.ConfigurationProperty.Type" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Description">
      <summary>Obtiene la descripción asociada al objeto <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Valor de tipo <see langword="string" /> que describe la propiedad.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <summary>Indica si el nombre de ensamblado para la propiedad de configuración requiere la transformación cuando se serializa para una versión anterior de .NET Framework.</summary>
      <returns>
        <see langword="true" /> si la propiedad requiere la transformación de nombre del ensamblado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <summary>Obtiene un valor que indica si la propiedad es la colección predeterminada de un elemento.</summary>
      <returns>
        <see langword="true" /> si la propiedad es la colección predeterminada de un elemento; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsKey">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Configuration.ConfigurationProperty" /> es la clave para el objeto <see cref="T:System.Configuration.ConfigurationElement" /> contenedor.</summary>
      <returns>
        <see langword="true" /> si este objeto <see cref="T:System.Configuration.ConfigurationProperty" /> es la clave para el elemento contenedor; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
      <summary>Obtiene un valor que indica si es necesario este objeto <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Configuration.ConfigurationProperty" /> es necesario; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <summary>Indica si el nombre de tipo para la propiedad de configuración requiere la transformación cuando se serializa para una versión anterior de .NET Framework.</summary>
      <returns>
        <see langword="true" /> si la propiedad requiere la transformación de nombre del tipo; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <summary>Indica si la sección de configuración principal de la propiedad de configuración se debe consultar en el momento de la serialización para determinar si la propiedad de configuración se debe serializar en XML.</summary>
      <returns>
        <see langword="true" /> si se debe consultar la sección de configuración principal; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Name">
      <summary>Obtiene el nombre de <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Nombre del objeto <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Type">
      <summary>Obtiene el tipo de este objeto <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Objeto <see cref="T:System.Type" /> que representa el tipo de este objeto <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Validator">
      <summary>Obtiene el validador <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> que se utiliza para validar este objeto <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Validador <see cref="T:System.Configuration.ConfigurationValidatorBase" /> que se utiliza para validar este objeto <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyAttribute">
      <summary>Mediante declaración, le indica a .NET Framework que cree instancias de una propiedad de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationPropertyAttribute" />.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.ConfigurationProperty" /> definido.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <summary>Obtiene o establece el valor predeterminado de la propiedad representativa.</summary>
      <returns>Objeto que representa el valor predeterminado de la propiedad representativa de elemento de configuración.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <summary>Obtiene o establece un valor que indica si ésta es la colección de propiedades predeterminada para la propiedad de configuración representativa.</summary>
      <returns>
        <see langword="true" /> si la propiedad representa la colección predeterminada de un elemento; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <summary>Obtiene o establece un valor que indica si ésta es una propiedad clave para la propiedad representativa de elemento.</summary>
      <returns>
        <see langword="true" /> si la propiedad es una propiedad clave para un elemento de la colección; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <summary>Obtiene o establece un valor que indica si se requiere la propiedad representativa de elemento.</summary>
      <returns>
        <see langword="true" /> si es necesaria la propiedad; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <summary>Obtiene el nombre de la propiedad representativa de elemento de configuración.</summary>
      <returns>Nombre de la propiedad representativa de elemento de configuración.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <summary>Obtiene o establece la enumeración <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> para la propiedad representativa de elemento de configuración.</summary>
      <returns>Uno de los valores de la enumeración <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> asociado a la propiedad.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyCollection">
      <summary>Representa una colección de propiedades de elemento de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <summary>Agrega una propiedad de configuración a la colección.</summary>
      <param name="property">
        <see cref="T:System.Configuration.ConfigurationProperty" /> que se va a agregar.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <summary>Quita todos los objetos de propiedad de configuración de la colección.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <summary>Especifica si la propiedad de configuración está incluida en esta colección.</summary>
      <param name="name">Identificador para comprobar el objeto <see cref="T:System.Configuration.ConfigurationProperty" />.</param>
      <returns>Es <see langword="true" /> si la colección contiene el objeto <see cref="T:System.Configuration.ConfigurationProperty" /> especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <summary>Copia esta colección ConfigurationPropertyCollection en una matriz.</summary>
      <param name="array">Matiz en la que se va a copiar.</param>
      <param name="index">Índice en el que se va a empezar a copiar.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <summary>Obtiene el objeto <see cref="T:System.Collections.IEnumerator" /> a medida que se aplica a la colección.</summary>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> a medida que se aplica a la colección</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <summary>Quita una propiedad de configuración de la colección.</summary>
      <param name="name">
        <see cref="T:System.Configuration.ConfigurationProperty" /> que se va a quitar.</param>
      <returns>
        <see langword="true" /> si se pudo quitar el objeto <see cref="T:System.Configuration.ConfigurationProperty" /> especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia esta colección en una matriz.</summary>
      <param name="array">Matriz en la que se va a copiar.</param>
      <param name="index">Ubicación de índice en la que se va a empezar a copiar.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <summary>Obtiene el número de propiedades de la colección.</summary>
      <returns>Número de propiedades de la colección.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
      <returns>
        <see langword="true" /> si se sincroniza el acceso a la colección <see cref="T:System.Configuration.ConfigurationPropertyCollection" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <summary>Obtiene el elemento de la colección con el nombre especificado.</summary>
      <param name="name">
        <see cref="T:System.Configuration.ConfigurationProperty" /> que se va a devolver.</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationProperty" /> con la propiedad <paramref name="name" /> especificada.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <summary>Obtiene el objeto para sincronizar el acceso a la colección.</summary>
      <returns>El objeto para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyOptions">
      <summary>Especifica las opciones que se van a aplicar a una propiedad.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <summary>Indica si el nombre de ensamblado para la propiedad de configuración requiere la transformación cuando se serializa para una versión anterior de .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <summary>Indica que la propiedad es una colección predeterminada.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <summary>Indica que la propiedad es una propiedad clave de la colección.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <summary>Indica que se requiere la propiedad.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <summary>Indica si el nombre de tipo para la propiedad de configuración requiere la transformación cuando se serializa para una versión anterior de .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <summary>Indica si la sección de configuración principal de la propiedad de configuración se debe consultar en el momento de la serialización para determinar si la propiedad de configuración se debe serializar en XML.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
      <summary>Indica que no se aplica ninguna opción a la propiedad.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSaveMode">
      <summary>Determina qué propiedades se escriben en un archivo de configuración.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Full">
      <summary>Hace que todas las propiedades se escriban en el archivo de configuración. Esto es principalmente útil para crear archivos de configuración de información o  para trasladar valores de configuración de un equipo a otro.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <summary>Hace que sólo las propiedades que difieren de los valores heredados se escriban en el archivo de configuración.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
      <summary>Hace que sólo las propiedades modificadas se escriban en el archivo de configuración, incluso cuando el valor es igual que el valor heredado.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSection">
      <summary>Representa una sección dentro de un archivo de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <summary>Lee XML del archivo de configuración.</summary>
      <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" />, que lee el archivo de configuración.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="reader" /> no encontró ningún elemento en el archivo de configuración.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <summary>Devuelve un objeto personalizado cuando se reemplaza en una clase derivada.</summary>
      <returns>Objeto que representa la sección.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.IsModified">
      <summary>Indica si se ha modificado este elemento de configuración desde la última vez en que se guardo o cargó al implementarlo en una clase derivada.</summary>
      <returns>
        <see langword="true" /> si el elemento se ha modificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ResetModified">
      <summary>Restablece el valor del método <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> en <see langword="false" /> cuando se implementa en una clase derivada.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>Crea una cadena XML que contiene una vista separada del objeto <see cref="T:System.Configuration.ConfigurationSection" /> como una sección única para escribir en un archivo.</summary>
      <param name="parentElement">Instancia de <see cref="T:System.Configuration.ConfigurationElement" /> que se va a utilizar como elemento primario al realizar la separación.</param>
      <param name="name">Nombre de la sección que se va a crear.</param>
      <param name="saveMode">Instancia de <see cref="T:System.Configuration.ConfigurationSaveMode" /> que se va a usar al escribir en una cadena.</param>
      <returns>Cadena XML que contiene la vista separada del objeto <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>Indica si se debe serializar el elemento especificado cuando la jerarquía de objetos de configuración se serializa para la versión de destino especificada de .NET Framework.</summary>
      <param name="element">Objeto <see cref="T:System.Configuration.ConfigurationElement" /> que es un candidato para la serialización.</param>
      <param name="elementName">Nombre del objeto <see cref="T:System.Configuration.ConfigurationElement" /> tal como aparece en XML.</param>
      <param name="targetFramework">Versión de destino de .NET Framework.</param>
      <returns>
        <see langword="true" /> si <paramref name="element" /> debe serializarse; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <summary>Indica si se debe serializar la propiedad especificada cuando la jerarquía de objetos de configuración se serializa para la versión de destino especificada de .NET Framework.</summary>
      <param name="property">Objeto <see cref="T:System.Configuration.ConfigurationProperty" /> que es un candidato para la serialización.</param>
      <param name="propertyName">Nombre del objeto <see cref="T:System.Configuration.ConfigurationProperty" /> tal como aparece en XML.</param>
      <param name="targetFramework">Versión de destino de .NET Framework.</param>
      <param name="parentConfigurationElement">Elemento primario de la propiedad.</param>
      <returns>
        <see langword="true" /> si <paramref name="property" /> debe serializarse; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>Indica si se debe serializar la instancia actual de <see cref="T:System.Configuration.ConfigurationSection" /> cuando la jerarquía de objetos de configuración se serializa para la versión de destino especificada de .NET Framework.</summary>
      <param name="targetFramework">Versión de destino de .NET Framework.</param>
      <returns>
        <see langword="true" /> si debe serializarse la sección actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.SectionInformation" /> que contiene la funcionalidad e información no personalizable del objeto <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
      <returns>
        <see cref="T:System.Configuration.SectionInformation" /> que contiene la funcionalidad e información no personalizable de <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionCollection">
      <summary>Representa una colección de secciones relacionadas en un archivo de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.ConfigurationSection" /> al objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Nombre de la sección que se va a agregar.</param>
      <param name="section">Sección que se va a agregar.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <summary>Borra este objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <summary>Copia esta colección <see cref="T:System.Configuration.ConfigurationSectionCollection" /> en una matriz.</summary>
      <param name="array">Matriz a la que se va a copiar el objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</param>
      <param name="index">Ubicación de índice en la que se va a empezar a copiar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longitud de <paramref name="array" /> es menor que el valor de <see cref="P:System.Configuration.ConfigurationSectionCollection.Count" /> más <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado que incluye este objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index">Índice del objeto <see cref="T:System.Configuration.ConfigurationSection" /> que se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSection" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado que incluye este objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.ConfigurationSection" /> que se va a devolver.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="name" /> es null o una cadena vacía ("").</exception>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSection" /> con el nombre especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <summary>Obtiene un enumerador que recorre en iteración este objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Interfaz <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración este objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <summary>Obtiene la clave del objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado incluido en este objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index">Índice del objeto <see cref="T:System.Configuration.ConfigurationSection" /> cuya clave se va a devolver.</param>
      <returns>Clave del objeto <see cref="T:System.Configuration.ConfigurationSection" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Método que utiliza el sistema durante la serialización.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> aplicable.</param>
      <param name="context">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> aplicable.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <summary>Quita el objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado de este objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Nombre de la sección que se va a quitar.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <summary>Quita el objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado de este objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index">Índice de la sección que se va a quitar.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
      <summary>Obtiene el número de secciones que hay en este objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Entero que representa el número de secciones que hay en la colección.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado.</summary>
      <param name="index">Índice del objeto <see cref="T:System.Configuration.ConfigurationSection" /> que se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSection" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.ConfigurationSection" /> que se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSection" /> con el nombre especificado.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <summary>Obtiene las claves de todos los objetos <see cref="T:System.Configuration.ConfigurationSection" /> incluidos en este objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> que contiene las claves de todas las secciones de esta colección.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroup">
      <summary>Representa un grupo de las secciones relacionadas de un archivo de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <summary>Fuerza la declaración de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <summary>Fuerza la declaración de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <param name="force">Es <see langword="true" /> si se debe escribir el objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> en el archivo; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException">El objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> es el grupo de sección raíz.  
  
o bien 
El objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> tiene una ubicación.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>Indica si se debe serializar la instancia actual de <see cref="T:System.Configuration.ConfigurationSectionGroup" /> cuando la jerarquía de objetos de configuración se serializa para la versión de destino especificada de .NET Framework.</summary>
      <param name="targetFramework">Versión de destino de .NET Framework.</param>
      <returns>
        <see langword="true" /> si debe serializarse el grupo de secciones actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <summary>Obtiene un valor que indica si es necesario declarar este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>
        <see langword="true" /> si es necesario declarar este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <summary>Obtiene un valor que indica si se declara este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>
        <see langword="true" /> si se declara este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
      <summary>Obtiene el nombre de propiedad de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Nombre de propiedad de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <summary>Obtiene el nombre de grupo de sección asociado a este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Nombre del grupo de sección de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> que contiene todos los objetos <see cref="T:System.Configuration.ConfigurationSectionGroup" /> que son secundarios respecto de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> que contiene todos los objetos <see cref="T:System.Configuration.ConfigurationSectionGroup" /> que son secundarios respecto de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" /> que contiene todos los objetos <see cref="T:System.Configuration.ConfigurationSection" /> de  este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSectionCollection" /> que contiene todos los objetos <see cref="T:System.Configuration.ConfigurationSection" /> de  este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
      <summary>Obtiene o establece el tipo de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <exception cref="T:System.InvalidOperationException">El objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> es el grupo de sección raíz.  
  
o bien 
El objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> tiene una ubicación.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La sección o el grupo ya están definidos en otro nivel.</exception>
      <returns>Tipo de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
      <summary>Representa una colección de objetos <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> a este objeto <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> que se va a agregar.</param>
      <param name="sectionGroup">El objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> que se va a agregar.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <summary>Borra la colección.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <summary>Copia esta colección <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> en una matriz.</summary>
      <param name="array">Matriz en la que se va a copiar el objeto.</param>
      <param name="index">Ubicación de índice en la que se va a empezar a copiar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longitud de <paramref name="array" /> es menor que el valor de <see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" /> más <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> especificado incluido en la colección.</summary>
      <param name="index">Índice del objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> que se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> especificado de la colección.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> que se va a devolver.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="name" /> es null o una cadena vacía ("").</exception>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> con el nombre especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <summary>Obtiene un enumerador que puede recorrer en iteración el objeto <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns>Interfaz <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración el objeto <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <summary>Obtiene la clave del objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> especificado incluido en este objeto <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="index">Índice del grupo de sección cuya clave se va a devolver.</param>
      <returns>Clave del objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Método que utiliza el sistema durante la serialización.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> aplicable.</param>
      <param name="context">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> aplicable.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <summary>Quita el objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> cuyo nombre se especifica a partir de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="name">Nombre del grupo de sección que se va a quitar.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <summary>Quita el objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> cuyo índice se especifica a partir de este objeto <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="index">Índice del grupo de sección que se va a quitar.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <summary>Obtiene el número de grupos de sección que hay en la colección.</summary>
      <returns>Entero que representa el número de grupos de sección que hay en la colección.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <summary>Obtiene de la colección el objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> del que se especifica el índice.</summary>
      <param name="index">Índice del objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> que se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> en el índice especificado.  
  
En C#, esta propiedad es el indizador para la clase <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <summary>Obtiene de la colección el objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> del que se especifica el nombre.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> que se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSectionGroup" /> con el nombre especificado.  
  
En C#, esta propiedad es el indizador para la clase <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <summary>Obtiene las claves de todos los objetos <see cref="T:System.Configuration.ConfigurationSectionGroup" /> incluidos en este objeto <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> que contiene los nombres de todos los grupos de sección de esta colección.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSettings">
      <summary>Proporciona la compatibilidad de las versiones del motor en tiempo de ejecución 1.0 y 1.1 para leer secciones de configuración y los valores de configuración habituales.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
      <summary>Devuelve el objeto <see cref="T:System.Configuration.ConfigurationSection" /> para el nombre y la ruta de acceso de sección de configuración que se han pasado.</summary>
      <param name="sectionName">Nombre y ruta de acceso de configuración, como "system.net/settings".</param>
      <exception cref="T:System.Configuration.ConfigurationException">No se ha podido recuperar la sección solicitada.</exception>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationSection" /> correspondiente al nombre y la ruta de acceso de sección de configuración que se han pasado.  
  
 <block subset="none" type="note"><para>  
 La clase <see cref="T:System.Configuration.ConfigurationSettings" /> sólo proporciona compatibilidad con versiones anteriores. En su lugar, use la clase <see cref="T:System.Configuration.ConfigurationManager" /> o la clase <see cref="T:System.Web.Configuration.WebConfigurationManager" />.</para></block></returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSettings.AppSettings">
      <summary>Obtiene una colección de solo lectura de la configuración de la aplicación del archivo de configuración.</summary>
      <returns>Una colección de solo lectura de la configuración de la aplicación del archivo de configuración.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationUserLevel">
      <summary>Se utiliza para especificar qué archivo de configuración va a representar el objeto Configuration.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.None">
      <summary>Obtiene el elemento <see cref="T:System.Configuration.Configuration" /> que se aplica a todos los usuarios.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <summary>Obtiene el elemento <see cref="T:System.Configuration.Configuration" /> itinerante que se aplica al usuario actual.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <summary>Obtiene el elemento <see cref="T:System.Configuration.Configuration" /> local que se aplica al usuario actual.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorAttribute">
      <summary>Actúa como la clase base para los tipos de atributos del validador de <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> utilizando el tipo de validador especificado.</summary>
      <param name="validator">Tipo de validador que se va a utilizar al crear una instancia de <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="validator" /> no se deriva de <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <summary>Obtiene la instancia del atributo del validador.</summary>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationValidatorBase" /> actual.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <summary>Obtiene el tipo del atributo del validador.</summary>
      <returns>
        <see cref="T:System.Type" /> de la instancia del atributo del validador actual.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorBase">
      <summary>Actúa como clase base para derivar una clase de validación, de manera que se pueda comprobar el valor de un objeto.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <summary>Determina si un objeto se puede validar basándose en el tipo.</summary>
      <param name="type">Tipo del objeto.</param>
      <returns>Es <see langword="true" /> si el valor del parámetro <paramref name="type" /> coincide con el tipo <see langword="type" /> esperado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <summary>Determina si el valor de un objeto es válido.</summary>
      <param name="value">Valor del objeto.</param>
    </member>
    <member name="T:System.Configuration.ConfigXmlDocument">
      <summary>Encapsula el tipo <see cref="T:System.Xml.XmlDocument" /> correspondiente y también incluye la información necesaria para informar de nombres de archivo y números de línea.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConfigXmlDocument" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>Crea un atributo de elemento de configuración.</summary>
      <param name="prefix">Definición del prefijo.</param>
      <param name="localName">Nombre que se usa localmente.</param>
      <param name="namespaceUri">Dirección URL asignada al espacio de nombres.</param>
      <returns>El atributo <see cref="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
      <summary>Crea una sección XML CData.</summary>
      <param name="data">Datos que se van a utilizar.</param>
      <returns>Valor de <see cref="T:System.Xml.XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)">
      <summary>Crea un comentario XML.</summary>
      <param name="data">Datos del comentario.</param>
      <returns>Valor de <see cref="T:System.Xml.XmlComment" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Crea un elemento de configuración.</summary>
      <param name="prefix">Definición del prefijo.</param>
      <param name="localName">Nombre usado localmente.</param>
      <param name="namespaceUri">Espacio de nombres para la dirección URL.</param>
      <returns>Valor de <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>Crea espacios en blanco.</summary>
      <param name="data">Datos que se van a utilizar.</param>
      <returns>Valor de <see cref="T:System.Xml.XmlSignificantWhitespace" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
      <summary>Crear un nodo de texto</summary>
      <param name="text">Texto que va a usarse.</param>
      <returns>Valor de <see cref="T:System.Xml.XmlText" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
      <summary>Crea un espacio en blanco.</summary>
      <param name="data">Datos que se van a utilizar.</param>
      <returns>Valor de <see cref="T:System.Xml.XmlWhitespace" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.Load(System.String)">
      <summary>Carga el archivo de configuración.</summary>
      <param name="filename">Nombre del archivo.</param>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
      <summary>Carga un solo elemento de configuración.</summary>
      <param name="filename">Nombre del archivo.</param>
      <param name="sourceReader">Origen para el lector.</param>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.Filename">
      <summary>Obtiene el nombre del archivo de configuración.</summary>
      <returns>Nombre del archivo de configuración.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.LineNumber">
      <summary>Obtiene el número de línea del nodo actual.</summary>
      <returns>Número de línea para el nodo actual.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename">
      <summary>Obtiene el nombre del archivo de configuración.</summary>
      <returns>Nombre del archivo.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
      <summary>Obtiene el número de línea de configuración.</summary>
      <returns>Número de línea.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettings">
      <summary>Representa una única cadena de conexión con nombre en la sección de cadenas de conexión del archivo de configuración.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
      <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <param name="name">Nombre de la cadena de conexión.</param>
      <param name="connectionString">La cadena de conexión.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de un objeto <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <param name="name">Nombre de la cadena de conexión.</param>
      <param name="connectionString">La cadena de conexión.</param>
      <param name="providerName">Nombre del proveedor que se va a utilizar con la cadena de conexión.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.ToString">
      <summary>Devuelve una representación de cadena del objeto.</summary>
      <returns>Una representación en forma de cadena del objeto.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <summary>Obtiene o establece la cadena de conexión.</summary>
      <returns>Valor de cadena que se asigna a la propiedad <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" />.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.Name">
      <summary>Obtiene o establece el nombre de <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <returns>Valor de cadena que se asigna a la propiedad <see cref="P:System.Configuration.ConnectionStringSettings.Name" />.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <summary>Obtiene o establece la propiedad de nombre de proveedor.</summary>
      <returns>Propiedad <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" /></returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettingsCollection">
      <summary>Contiene una colección de objetos <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> a la colección.</summary>
      <param name="settings">Objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <summary>Quita todos los objetos <see cref="T:System.Configuration.ConnectionStringSettings" /> de la colección.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <summary>Devuelve el índice de la colección del objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> pasado.</summary>
      <param name="settings">Objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> de la colección.</param>
      <returns>Índice en la colección del objeto <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> especificado.</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <summary>Quita el objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> especificado de la colección.</summary>
      <param name="settings">Objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> de la colección.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <summary>Quita el objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> especificado de la colección.</summary>
      <param name="name">Nombre de un objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> de la colección.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <summary>Quita de la colección el objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> que está en el índice especificado.</summary>
      <param name="index">Índice de un objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> de la colección.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <summary>Obtiene o establece la cadena de conexión en el índice especificado de la colección.</summary>
      <param name="index">Índice de un objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> de la colección.</param>
      <returns>Objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> con el nombre especificado en la colección.</summary>
      <param name="name">Nombre de un objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> de la colección.</param>
      <returns>El objeto <see cref="T:System.Configuration.ConnectionStringSettings" /> con el nombre especificado; en caso contrario, el valor <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringsSection">
      <summary>Proporciona acceso mediante programación a la sección de archivos de configuración relacionados con cadenas de conexión.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ConnectionStringsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <summary>Obtiene una colección <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> de objetos <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <returns>colección <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> de los objetos <see cref="T:System.Configuration.ConnectionStringSettings" />.</returns>
    </member>
    <member name="T:System.Configuration.ContextInformation">
      <summary>Encapsula la información de contexto que se asocia a un objeto <see cref="T:System.Configuration.ConfigurationElement" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <summary>Proporciona un objeto que contiene la información de sección de configuración basándose en el nombre de sección especificado.</summary>
      <param name="sectionName">Nombre de la sección de configuración.</param>
      <returns>Objeto que contiene la sección especificada de la configuración.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.HostingContext">
      <summary>Obtiene el contexto del entorno en el que se evalúa la propiedad de configuración.</summary>
      <returns>Objeto que especifica el entorno en el que se evalúa la propiedad de configuración.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
      <summary>Obtiene un valor que especifica si la propiedad de configuración se evalúa en el nivel de configuración de equipo.</summary>
      <returns>
        <see langword="true" /> si la propiedad de configuración se evalúa en el nivel de configuración de equipo; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.DefaultSection">
      <summary>Representa un controlador básico de sección de configuración que expone el código XML de la sección de configuración para el acceso de lectura y el de escritura.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.DefaultSection" />.</summary>
    </member>
    <member name="T:System.Configuration.DefaultSettingValueAttribute">
      <summary>Especifica el valor predeterminado para una propiedad de configuración de aplicación.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.DefaultSettingValueAttribute" />.</summary>
      <param name="value">Objeto <see cref="T:System.String" /> que representa el valor predeterminado para la propiedad.</param>
    </member>
    <member name="P:System.Configuration.DefaultSettingValueAttribute.Value">
      <summary>Obtiene el valor predeterminado para la propiedad de configuración de aplicación.</summary>
      <returns>Objeto <see cref="T:System.String" /> que representa el valor predeterminado para la propiedad.</returns>
    </member>
    <member name="T:System.Configuration.DefaultValidator">
      <summary>Proporciona la validación de un objeto. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.DefaultValidator" />.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <summary>Determina si se puede validar un objeto basándose en el tipo.</summary>
      <param name="type">Tipo del objeto.</param>
      <returns>
        <see langword="true" /> para todos los tipos que se van a validar.</returns>
    </member>
    <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <summary>Determina si el valor de un objeto es válido.</summary>
      <param name="value">Valor del objeto.</param>
    </member>
    <member name="T:System.Configuration.DictionarySectionHandler">
      <summary>Proporciona información de configuración del par de clave y valor de la sección de configuración.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.DictionarySectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Crea un nuevo controlador de configuración y lo agrega a la colección de controladores de sección basándose en los parámetros especificados.</summary>
      <param name="parent">Objeto primario.</param>
      <param name="context">Objeto de contexto de configuración.</param>
      <param name="section">Nodo XML de la sección.</param>
      <returns>Objeto de configuración.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
      <summary>Obtiene el nombre del atributo XML que se utiliza como clave en el par de clave y valor.</summary>
      <returns>Una valor de cadena que contiene el nombre del atributo de clave.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
      <summary>Obtiene el nombre del atributo XML que se utiliza como valor en el par de clave y valor.</summary>
      <returns>Un valor de cadena que contiene el nombre del atributo de valor.</returns>
    </member>
    <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <summary>Proporciona un objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> que usa la API de protección de datos (DPAPI) de Windows para cifrar y descifrar los datos de configuración.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> usando la configuración predeterminada.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Descifra el objeto <see cref="T:System.Xml.XmlNode" /> pasado.</summary>
      <param name="encryptedNode">Objeto <see cref="T:System.Xml.XmlNode" /> que se va a descifrar.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="encryptedNode" /> no tiene establecida la propiedad <see cref="P:System.Xml.XmlNode.Name" /> en "EncryptedData" y <see cref="T:System.Xml.XmlNodeType" /> establecido en <see cref="F:System.Xml.XmlNodeType.Element" />.  
  
o bien 
 <paramref name="encryptedNode" /> no tiene un nodo secundario denominado "CipherData" con un nodo secundario denominado "CipherValue."  
  
o bien 
El nodo secundario denominado "CipherData" es un nodo vacío.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlNode" /> descifrado.</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Cifra el objeto <see cref="T:System.Xml.XmlNode" /> pasado.</summary>
      <param name="node">Objeto <see cref="T:System.Xml.XmlNode" /> que se va a cifrar.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlNode" /> cifrado.</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Inicializa el proveedor con la configuración predeterminada.</summary>
      <param name="name">Nombre del proveedor que se va a utilizar para el objeto.</param>
      <param name="configurationValues">Colección <see cref="T:System.Collections.Specialized.NameValueCollection" /> de valores que se van a usar al inicializar el objeto.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> contiene un valor de configuración no reconocido.</exception>
    </member>
    <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> está utilizando la protección específica de equipo o la protección específica de cuenta de usuario.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> está utilizando la protección específica de equipo; <see langword="false" /> si está utilizando la protección específica de cuenta de usuario.</returns>
    </member>
    <member name="T:System.Configuration.ElementInformation">
      <summary>Contiene la metainformación sobre un elemento concreto de la configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="P:System.Configuration.ElementInformation.Errors">
      <summary>Obtiene los errores para el elemento y subelementos asociados.</summary>
      <returns>Colección que contiene los errores para el elemento y subelementos asociados.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsCollection">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado es una colección <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado es una colección <see cref="T:System.Configuration.ConfigurationElementCollection" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsLocked">
      <summary>Obtiene un valor que indica si no puede modificarse el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado no se puede modificar; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsPresent">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado está en el archivo de configuración.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado está en el archivo de configuración; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.LineNumber">
      <summary>Obtiene el número de línea del archivo de configuración donde se define el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</summary>
      <returns>Número de línea del archivo de configuración donde se define el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Properties">
      <summary>Obtiene una colección <see cref="T:System.Configuration.PropertyInformationCollection" /> de las propiedades del objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</summary>
      <returns>Colección <see cref="T:System.Configuration.PropertyInformationCollection" /> de las propiedades del objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Source">
      <summary>Obtiene el archivo de código fuente en el que se creó el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</summary>
      <returns>Archivo de código fuente en el que se creó el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Type">
      <summary>Obtiene el tipo del objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</summary>
      <returns>Tipo del objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Validator">
      <summary>Obtiene el objeto que se ha utilizado para validar el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</summary>
      <returns>Objeto que se ha utilizado para validar el objeto <see cref="T:System.Configuration.ConfigurationElement" /> asociado.</returns>
    </member>
    <member name="T:System.Configuration.ExeConfigurationFileMap">
      <summary>Define la asignación del archivo de configuración para una aplicación .exe. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ExeConfigurationFileMap" /> utilizando el nombre de archivo de configuración de máquina especificado.</summary>
      <param name="machineConfigFileName">Nombre del archivo de configuración de máquina que incluye la ruta de acceso física completa (por ejemplo, <c>c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config</c>).</param>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <summary>Crea una copia del objeto <see cref="T:System.Configuration.ExeConfigurationFileMap" /> existente.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <summary>Obtiene o establece el nombre del archivo de configuración.</summary>
      <returns>Nombre del archivo de configuración.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <summary>Obtiene o establece el nombre del archivo de configuración del usuario local.</summary>
      <returns>Nombre del archivo de configuración.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <summary>Obtiene o establece el nombre del archivo de configuración del usuario móvil.</summary>
      <returns>Nombre del archivo de configuración.</returns>
    </member>
    <member name="T:System.Configuration.ExeContext">
      <summary>Administra el contexto de la ruta de acceso de la aplicación actual. Esta clase no puede heredarse.</summary>
    </member>
    <member name="P:System.Configuration.ExeContext.ExePath">
      <summary>Obtiene la ruta de acceso actual de la aplicación.</summary>
      <returns>Un valor de cadena que contiene la ruta de acceso actual.</returns>
    </member>
    <member name="P:System.Configuration.ExeContext.UserLevel">
      <summary>Obtiene un objeto que representa el nivel de la ruta de acceso de la aplicación actual.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.ConfigurationUserLevel" /> que representa el nivel de la ruta de acceso de la aplicación actual.</returns>
    </member>
    <member name="T:System.Configuration.GenericEnumConverter">
      <summary>Realiza conversiones entre una cadena y un tipo de enumeración.</summary>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.GenericEnumConverter" />.</summary>
      <param name="typeEnum">Tipo de enumeración que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeEnum" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte un valor <see cref="T:System.String" /> en un tipo <see cref="T:System.Enum" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="data">Objeto <see cref="T:System.String" /> que se va a convertir.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="data" /> es null o una cadena vacía ("").  
  
o bien 
 <paramref name="data" /> se inicia con un carácter numérico.  
  
o bien 
 <paramref name="data" /> incluye espacios en blanco.</exception>
      <returns>El tipo <see cref="T:System.Enum" /> que representa el parámetro <paramref name="data" />.</returns>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte un tipo <see cref="T:System.Enum" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="value">Valor en el que se va a convertir.</param>
      <param name="type">Tipo al que se va a convertir.</param>
      <returns>
        <see cref="T:System.String" /> que representa el parámetro <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.IApplicationSettingsProvider">
      <summary>Define funciones extendidas para los proveedores de configuración de aplicación basada en cliente.</summary>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>Devuelve el valor de la propiedad de configuración especificada para la versión anterior de la misma aplicación.</summary>
      <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
      <param name="property">Objeto <see cref="T:System.Configuration.SettingsProperty" /> cuyo valor se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.SettingsPropertyValue" /> que contiene el último valor de la configuración de propiedad especificada establecido en la versión anterior de la aplicación; o <see langword="null" /> si no se puede encontrar la configuración.</returns>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>Reestablece los valores predeterminados de la configuración de aplicación asociada a la aplicación especificada.</summary>
      <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Indica al proveedor que se ha actualizado la aplicación. De este modo el proveedor tiene una oportunidad de actualizar su configuración almacenada según resulte conveniente.</summary>
      <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
      <param name="properties">Colección <see cref="T:System.Configuration.SettingsPropertyCollection" /> que contiene el grupo de propiedades de configuración cuyos valores se van a recuperar.</param>
    </member>
    <member name="T:System.Configuration.IConfigurationSectionHandler">
      <summary>Controla el acceso a determinadas secciones de configuración.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Crea un controlador de secciones de configuración.</summary>
      <param name="parent">Objeto primario.</param>
      <param name="configContext">Objeto de contexto de configuración.</param>
      <param name="section">Nodo XML de la sección.</param>
      <returns>El objeto controlador de secciones creado.</returns>
    </member>
    <member name="T:System.Configuration.IConfigurationSystem">
      <summary>Proporciona métodos de configuración estándar.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)">
      <summary>Obtiene la configuración especificada.</summary>
      <param name="configKey">Clave de configuración.</param>
      <returns>Objeto que representa la configuración.</returns>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.Init">
      <summary>Se utiliza para la inicialización.</summary>
    </member>
    <member name="T:System.Configuration.IdnElement">
      <summary>Proporciona el valor de configuración para el procesamiento IDN (nombres de dominio internacionales) en la clase <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.Configuration.IdnElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.IdnElement" />.</summary>
    </member>
    <member name="P:System.Configuration.IdnElement.Enabled">
      <summary>Obtiene o establece el valor del parámetro de configuración <see cref="T:System.Configuration.IdnElement" />.</summary>
      <returns>
        <see cref="T:System.UriIdnScope" /> que contiene el valor de configuración actual para el procesamiento IDN.</returns>
    </member>
    <member name="T:System.Configuration.IgnoreSection">
      <summary>Proporciona una definición de tipo del contenedor para secciones de configuración que no son controladas por los tipos <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.IgnoreSection" />.</summary>
    </member>
    <member name="T:System.Configuration.IgnoreSectionHandler">
      <summary>Proporciona una definición de controlador de sección heredada para secciones de configuración que no están controladas por los tipos <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.IgnoreSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Crea un controlador de configuración nuevo y agrega el objeto de configuración especificado a la colección de controladores de sección.</summary>
      <param name="parent">Valores de configuración de la sección de configuración principal correspondiente.</param>
      <param name="configContext">Ruta de acceso virtual para la que el controlador de la sección de configuración calcula los valores de configuración. Normalmente, este parámetro está reservado y es <see langword="null" />.</param>
      <param name="section">
        <see cref="T:System.Xml.XmlNode" /> que contiene la información de configuración que se va a controlar. Proporciona acceso directo al contenido XML de la sección de configuración.</param>
      <returns>Objeto de controlador de configuración creado.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteIntConverter">
      <summary>Realiza conversiones entre una cadena y el valor entero o infinito estándar.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.InfiniteIntConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte <see cref="T:System.String" /> en <see cref="T:System.Int32" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="data">Objeto <see cref="T:System.String" /> que se va a convertir.</param>
      <returns>
        <see cref="F:System.Int32.MaxValue" /> si el parámetro <paramref name="data" /> es <see cref="T:System.String" /> "infinito"; en caso contrario, <see cref="T:System.Int32" /> que representa el valor entero del parámetro <paramref name="data" />.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte un valor <see cref="T:System.Int32" /> en <see cref="T:System.String" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="value">Valor en el que se va a convertir.</param>
      <param name="type">Tipo al que se va a convertir.</param>
      <returns>
        <see cref="T:System.String" /> "infinito" si <paramref name="value" /> es <see cref="F:System.Int32.MaxValue" />; de lo contrario, <see cref="T:System.String" /> que representa el parámetro <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteTimeSpanConverter">
      <summary>Realiza conversiones entre una cadena y el valor estándar infinito de <see cref="T:System.TimeSpan" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.InfiniteTimeSpanConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte <see cref="T:System.String" /> en <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="data">Objeto <see cref="T:System.String" /> que se va a convertir.</param>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" /> si el parámetro <paramref name="data" /> es el valor <see cref="T:System.String" /> "infinito"; en caso contrario, <see cref="T:System.TimeSpan" /> que representa el parámetro <paramref name="data" /> en minutos.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión de objetos.</param>
      <param name="value">Valor que se va a convertir.</param>
      <param name="type">Tipo de conversión.</param>
      <returns>
        <see cref="T:System.String" /> "infinito" si el parámetro <paramref name="value" /> es <see cref="F:System.TimeSpan.MaxValue" />; en caso contrario, <see cref="T:System.String" /> que representa el parámetro <paramref name="value" /> en minutos.</returns>
    </member>
    <member name="T:System.Configuration.IntegerValidator">
      <summary>Valida un valor <see cref="T:System.Int32" />.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue">Un objeto <see cref="T:System.Int32" /> que especifica el valor mínimo.</param>
      <param name="maxValue">Un objeto <see cref="T:System.Int32" /> que especifica el valor máximo.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue">Un objeto <see cref="T:System.Int32" /> que especifica el valor mínimo.</param>
      <param name="maxValue">Un objeto <see cref="T:System.Int32" /> que especifica el valor máximo.</param>
      <param name="rangeIsExclusive">
        <see langword="true" /> para especificar que el intervalo de validación es exclusivo. El término "incluido" significa que el valor que se va a validar debe estar dentro del intervalo especificado; "exclusivo" significa que debe estar por debajo del mínimo o por encima del máximo.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue">Objeto <see cref="T:System.Int32" /> que especifica la longitud mínima del valor del entero.</param>
      <param name="maxValue">Objeto <see cref="T:System.Int32" /> que especifica la longitud máxima del valor del entero.</param>
      <param name="rangeIsExclusive">Valor <see cref="T:System.Boolean" /> que especifica si el intervalo de validación es exclusivo.</param>
      <param name="resolution">Objeto <see cref="T:System.Int32" /> que especifica un valor con el que debe coincidir el entero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" /> es menor que <see langword="0" />.  
  
o bien 
 <paramref name="minValue" /> es mayor que <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <summary>Determina si se puede validar el tipo del objeto.</summary>
      <param name="type">Tipo del objeto.</param>
      <returns>Es <see langword="true" /> si el valor del parámetro <paramref name="type" /> coincide con un valor <see cref="T:System.Int32" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <summary>Determina si el valor de un objeto es válido.</summary>
      <param name="value">Valor que se va a validar.</param>
    </member>
    <member name="T:System.Configuration.IntegerValidatorAttribute">
      <summary>Mediante declaración, indica a .NET Framework que realice la validación de enteros en una propiedad de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Configuration.IntegerValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <summary>Obtiene o establece un valor que indica si se deben incluir o excluir los enteros comprendidos en el intervalo definido por los valores de propiedades <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> y <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</summary>
      <returns>
        <see langword="true" /> si se debe excluir el valor; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <summary>Obtiene o establece el valor máximo permitido para la propiedad.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es menor que <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />.</exception>
      <returns>Entero que indica el valor máximo permitido.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <summary>Obtiene o establece el valor mínimo permitido para la propiedad.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es mayor que <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</exception>
      <returns>Entero que indica el valor mínimo permitido.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <summary>Obtiene una instancia de la clase <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <returns>Instancia del validador <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.DelegatingConfigHost">
      <summary>Delega todos los miembros de la interfaz <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> en otra instancia de un host.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.Internal.DelegatingConfigHost" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>Crea un nuevo contexto de configuración.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <param name="locationSubPath">Cadena que representa una subruta de ubicación.</param>
      <returns>Un <see cref="T:System.Object" /> que representa un nuevo contexto de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>Crea un contexto de configuración obsoleto.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <returns>Un <see cref="T:System.Object" /> que representa un contexto de configuración obsoleto.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Descifra una sección de configuración cifrada.</summary>
      <param name="encryptedXml">Sección cifrada de un archivo de configuración.</param>
      <param name="protectionProvider">Objeto que contiene los proveedores que cifran y descifran los datos de configuración protegidos.</param>
      <param name="protectedConfigSection">Objeto que proporciona acceso de mediante programación a la sección de configuración <c>configProtectedData</c>.</param>
      <returns>Una cadena que representa una sección de configuración descifrada.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
      <summary>Elimina el objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Cifra una sección de un objeto de configuración.</summary>
      <param name="clearTextXml">Sección de la configuración que no está cifrada.</param>
      <param name="protectionProvider">Objeto que contiene los proveedores que cifran y descifran los datos de configuración protegidos.</param>
      <param name="protectedConfigSection">Objeto que proporciona acceso de mediante programación a la sección de configuración <c>configProtectedData</c>.</param>
      <returns>Una cadena que representa una sección cifrada del objeto de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>Devuelve una ruta de acceso de configuración basada en una subruta de ubicación.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <param name="locationSubPath">Cadena que representa una subruta de ubicación.</param>
      <returns>Una cadena que representa una ruta de acceso de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>Devuelve un objeto <see cref="T:System.Type" /> que representa el tipo de la configuración.</summary>
      <param name="typeName">Cadena que representa el tipo de la configuración.</param>
      <param name="throwOnError">Es <see langword="true" /> si debe producirse una excepción si se encuentra un error; es <see langword="false" /> si no debe producirse una excepción si se encuentra un error.</param>
      <returns>Un objeto <see cref="T:System.Type" /> que representa el tipo de la configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
      <summary>Devuelve una cadena que representa el nombre de tipo del objeto de configuración.</summary>
      <param name="t">Un objeto <see cref="T:System.Type" />.</param>
      <returns>Una cadena que representa el nombre de tipo del objeto de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>Establece el conjunto de permisos especificado, si están disponibles, del objeto host.</summary>
      <param name="configRecord">Un objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <param name="permissionSet">Un objeto <see cref="T:System.Security.PermissionSet" />.</param>
      <param name="isHostReady">Es <see langword="true" /> si el host ha finalizado la inicialización; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
      <summary>Devuelve el nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <returns>Cadena que representa el nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>Devuelve el nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un origen de configuración.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <param name="configSource">Cadena que representa el origen de configuración.</param>
      <returns>Una cadena que representa el nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un origen de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
      <summary>Devuelve un objeto <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> que representa la versión de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <returns>Un objeto <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> que representa la versión de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
      <summary>Indica al host que realice una suplantación y devuelve un objeto <see cref="T:System.IDisposable" /> requerido internamente por .NET Framework.</summary>
      <returns>Valor <see cref="T:System.IDisposable" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Inicializa el host de configuración.</summary>
      <param name="configRoot">Un objeto <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</param>
      <param name="hostInitParams">Objeto de parámetro que contiene los valores utilizados para inicializar el host de configuración.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Inicializa el host para la configuración.</summary>
      <param name="locationSubPath">Cadena que representa una subruta de ubicación (pasada por referencia).</param>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <param name="locationConfigPath">Ruta de acceso de configuración de ubicación.</param>
      <param name="configRoot">Elemento raíz de configuración.</param>
      <param name="hostInitConfigurationParams">Objeto de parámetro que representa los parámetros utilizados para inicializar el host.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
      <summary>Devuelve un valor que indica si la configuración está por encima de la configuración de la aplicación en la jerarquía de configuración.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <returns>Es <see langword="true" /> si la configuración está por encima de la configuración de la aplicación en la jerarquía de configuración; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
      <summary>Devuelve un valor que indica si se requiere un registro de configuración para la inicialización de configuración del host.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <returns>Es <see langword="true" /> si se requiere un registro de configuración para la inicialización de configuración del host; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>Restringe o permite definiciones en la configuración del host.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <param name="allowDefinition">Objeto <see cref="T:System.Configuration.ConfigurationAllowDefinition" />.</param>
      <param name="allowExeDefinition">Objeto <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <returns>
        <see langword="true" /> si la concesión o la restricción de definiciones en la configuración del host tuvieron éxito; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
      <summary>Devuelve un valor que indica si la ruta de acceso de archivo utilizada por un objeto <see cref="T:System.IO.Stream" /> para leer un archivo de configuración es una ruta de acceso válida.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <returns>Es <see langword="true" /> si la ruta de acceso utilizada por un objeto <see cref="T:System.IO.Stream" /> para leer un archivo de configuración es una ruta de acceso válida; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Devuelve un valor que indica si una sección de configuración requiere un nivel de seguridad de acceso del código de plena confianza y no permite que el atributo <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> deshabilite las peticiones implícitas de vínculo.</summary>
      <param name="configRecord">Objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>Es <see langword="true" /> si la sección de configuración requiere un nivel de seguridad de acceso del código de plena confianza y no permite que el atributo <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> deshabilite las peticiones implícitas de vínculo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Devuelve un valor que indica si la inicialización de un objeto de configuración se considera retrasada.</summary>
      <param name="configRecord">Objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>Es <see langword="true" /> si la inicialización de un objeto de configuración se considera retrasada; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
      <summary>Devuelve un valor que indica si el objeto de configuración admite una etiqueta de ubicación.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <returns>Es <see langword="true" /> si el objeto de configuración admite una etiqueta de ubicación; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
      <summary>Devuelve un valor que indica si una ruta de acceso de configuración va dirigida a un nodo de configuración cuyo contenido se debe tratar como raíz.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <returns>Es <see langword="true" /> si la ruta de acceso de configuración va dirigida a un nodo de configuración cuyo contenido se debe tratar como raíz; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
      <summary>Devuelve un valor que indica si la ruta de acceso de configuración es de confianza.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <returns>Es <see langword="true" /> si la ruta de acceso de configuración es de confianza; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
      <summary>Abre un objeto <see cref="T:System.IO.Stream" /> para leer un archivo de configuración.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <returns>Objeto especificado por <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>Abre un objeto <see cref="T:System.IO.Stream" /> para leer un archivo de configuración.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <param name="assertPermissions">Es <see langword="true" /> para declarar los permisos; en caso contrario, es <see langword="false" />.</param>
      <returns>Objeto especificado por <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>Abre un objeto <see cref="T:System.IO.Stream" /> para escribir en un archivo de configuración o para escribir en un archivo temporal utilizado para crear un archivo de configuración. Permite la designación de un objeto <see cref="T:System.IO.Stream" /> como plantilla para copiar los atributos de archivo.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <param name="templateStreamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> del que se van a copiar los atributos de archivo como plantilla.</param>
      <param name="writeContext">Contexto de escritura del objeto <see cref="T:System.IO.Stream" /> (pasado por referencia).</param>
      <returns>Un objeto <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>Abre un objeto <see cref="T:System.IO.Stream" /> para escribir en un archivo de configuración. Permite la designación de un objeto <see cref="T:System.IO.Stream" /> como plantilla para copiar los atributos de archivo.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <param name="templateStreamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> del que se van a copiar los atributos de archivo como plantilla.</param>
      <param name="writeContext">Contexto de escritura del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración (pasado por referencia).</param>
      <param name="assertPermissions">Es <see langword="true" /> para declarar los permisos; en caso contrario, es <see langword="false" />.</param>
      <returns>Objeto que especifica el parámetro <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
      <summary>Devuelve un valor que indica si el archivo de configuración completo puede ser leído por un objeto <see cref="T:System.IO.Stream" /> designado.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <returns>Es <see langword="true" /> si el archivo de configuración completo puede ser leído por el objeto <see cref="T:System.IO.Stream" /> designado por <paramref name="streamName" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
      <summary>Indica al objeto <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> que lea una sección designada del archivo de configuración asociado.</summary>
      <param name="sectionGroupName">Cadena que representa el nombre del grupo de una sección del archivo de configuración.</param>
      <param name="sectionName">Cadena que representa el nombre de una sección del archivo de configuración.</param>
      <returns>
        <see langword="true" /> si una sección del archivo de configuración designada por los parámetros <paramref name="sectionGroupName" /> y <paramref name="sectionName" /> puede ser leída por un objeto <see cref="T:System.IO.Stream" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RefreshConfigPaths">
      <summary>Invoca el método del host delegado que actualiza las rutas de acceso de configuración.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Indica que un nuevo registro de configuración requiere una inicialización completa.</summary>
      <param name="configRecord">Un objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Indica al host que supervise un objeto <see cref="T:System.IO.Stream" /> asociado para los cambios efectuados en un archivo de configuración.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <param name="callback">Objeto <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> que recibe los datos devueltos que representan los cambios efectuados en el archivo de configuración.</param>
      <returns>Una instancia de <see cref="T:System.Object" /> que contiene los valores de configuración que se han cambiado.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Indica al objeto host que detenga la supervisión de un objeto <see cref="T:System.IO.Stream" /> asociado para los cambios efectuados en un archivo de configuración.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <param name="callback">Un objeto <see cref="T:System.Configuration.Internal.StreamChangeCallback" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Comprueba si una definición de configuración se permite para un registro de configuración.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <param name="allowDefinition">Un objeto <see cref="P:System.Configuration.SectionInformation.AllowDefinition" />.</param>
      <param name="allowExeDefinition">Objeto <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /></param>
      <param name="errorInfo">Un objeto <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>Indica que se ha realizado toda la escritura en el archivo de configuración.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <param name="success">
        <see langword="true" /> si la escritura en el archivo de configuración se ha realizado con éxito; en caso contrario, <see langword="false" />.</param>
      <param name="writeContext">Contexto de escritura del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Indica que se ha realizado toda la escritura en el archivo de configuración y especifica si se deben declarar los permisos.</summary>
      <param name="streamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración.</param>
      <param name="success">
        <see langword="true" /> para indicar que la escritura se ha realizado con éxito; en caso contrario, <see langword="false" />.</param>
      <param name="writeContext">Contexto de escritura del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="assertPermissions">Es <see langword="true" /> para declarar los permisos; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig">
      <summary>Determina si el host delegado tiene una configuración local.</summary>
      <returns>
        <see langword="true" /> Si la instancia actual tiene una configuración local; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig">
      <summary>Determina si el host delegado tiene una configuración móvil.</summary>
      <returns>
        <see langword="true" /> Si la instancia actual tiene una configuración de itinerancia; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
      <summary>Obtiene o establece el objeto <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp">
      <summary>Determina si el archivo de configuración de la aplicación procede de un URI no local (es decir, <c>http://</c>) o si es un archivo local.</summary>
      <returns>
        <see langword="true" /> Si las secciones del host delegado pertenecen a <c>System.net</c> y el archivo de configuración de la aplicación se descarga mediante http mediante <see cref="T:System.Net.WebClient" /> ; de lo contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
      <summary>Obtiene un valor que indica si la configuración es remota.</summary>
      <returns>Es <see langword="true" /> si la configuración es remota; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
      <summary>Obtiene un valor que indica si la configuración del host admite notificaciones de cambios.</summary>
      <returns>Es <see langword="true" /> si el host admite notificaciones de cambios; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
      <summary>Obtiene un valor que indica si la configuración del host admite etiquetas de ubicación.</summary>
      <returns>Es <see langword="true" /> si el host admite etiquetas de ubicación; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
      <summary>Obtiene un valor que indica si la configuración del host tiene compatibilidad de ruta de acceso.</summary>
      <returns>Es <see langword="true" /> si la configuración del host tiene compatibilidad de ruta de acceso; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
      <summary>Obtiene un valor que indica si la configuración del host admite su actualización.</summary>
      <returns>Es <see langword="true" /> si la configuración del host admite su actualización; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigErrorInfo">
      <summary>Define una interfaz utilizada por .NET Framework para que se puedan crear registros de configuración de error.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
      <summary>Obtiene una cadena que especifica el nombre de archivo relacionado con los detalles de configuración.</summary>
      <returns>Cadena que especifica un nombre de archivo.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
      <summary>Obtiene un entero que especifica el número de línea relacionado con los detalles de configuración.</summary>
      <returns>Entero que especifica un número de línea.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigSystem">
      <summary>Define una interfaz utilizada por .NET Framework para admitir la inicialización de las propiedades de configuración.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
      <summary>Inicializa un objeto de configuración.</summary>
      <param name="typeConfigHost">Tipo de host de configuración.</param>
      <param name="hostInitParams">Matriz de parámetros del host de configuración.</param>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Host">
      <summary>Obtiene el host de configuración.</summary>
      <returns>Objeto <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> que .NET Framework usa para inicializar las propiedades de configuración de la aplicación.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Root">
      <summary>Obtiene la raíz de la jerarquía de configuración.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
      <summary>Define una interfaz utilizada por .NET Framework para ser compatible con la administración de configuración.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
      <summary>Garantiza que se carga la configuración de la red.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
      <summary>Define una interfaz utilizada por .NET Framework para inicializar las propiedades de configuración.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
      <summary>Obtiene el nombre del archivo de configuración relacionado con la ruta de la aplicación.</summary>
      <returns>Valor de cadena que representa el nombre de archivo de configuración.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
      <summary>Obtiene el directorio de configuración local de la aplicación basado en el ensamblado de entrada.</summary>
      <returns>Cadena que representa el directorio de configuración local.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
      <summary>Obtiene la ruta de acceso de configuración local de la aplicación basada en el ensamblado de entrada.</summary>
      <returns>Valor de cadena que representa la ruta de acceso de configuración local de la aplicación.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
      <summary>Obtiene el nombre del producto de la aplicación basado en el ensamblado de entrada.</summary>
      <returns>Valor de cadena que representa el nombre del producto de la aplicación.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
      <summary>Obtiene la versión del producto de la aplicación basado en el ensamblado de entrada.</summary>
      <returns>Valor de cadena que representa la versión del producto de la aplicación.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
      <summary>Obtiene el directorio de configuración móvil de la aplicación basado en el ensamblado de entrada.</summary>
      <returns>Valor de cadena que representa el directorio de configuración móvil de la aplicación.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
      <summary>Obtiene la ruta de acceso de configuración del usuario móvil basada en el ensamblado de entrada de la aplicación.</summary>
      <returns>Valor de cadena que representa la ruta de acceso de configuración del usuario móvil.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
      <summary>Obtiene la ruta de acceso de configuración del archivo Machine.config.</summary>
      <returns>Valor de cadena que representa la ruta de acceso del archivo Machine.config.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
      <summary>Obtiene un valor que representa el estado del sistema de configuración.</summary>
      <returns>Es <see langword="true" /> si el sistema de configuración se está inicializando; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
      <summary>Obtiene un valor que especifica si se admiten los parámetros de configuración de usuario.</summary>
      <returns>Es <see langword="true" /> si el sistema de configuración admite los parámetros de configuración de usuario; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
      <summary>Obtiene el nombre del archivo utilizado para almacenar los parámetros de configuración de usuario.</summary>
      <returns>Cadena que especifica el nombre del archivo utilizado para almacenar la configuración del usuario.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
      <summary>Define las interfaces que permiten a la infraestructura interna de .NET Framework personalizar la configuración.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
      <summary>Devuelve la ruta de acceso al archivo de configuración de la aplicación.</summary>
      <returns>Una cadena que representa la ruta de acceso al archivo de configuración de la aplicación.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
      <summary>Devuelve una cadena que representa la ruta de acceso al archivo de configuración del usuario local conocido.</summary>
      <returns>Una cadena que representa la ruta de acceso al archivo de configuración del usuario local conocido.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
      <summary>Devuelve una cadena que representa la ruta de acceso al archivo de configuración del usuario móvil conocido.</summary>
      <returns>Una cadena que representa la ruta de acceso al archivo de configuración del usuario móvil conocido.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
      <summary>Devuelve un valor que indica si la ruta de acceso de un archivo de configuración es la misma que la ruta de acceso de un archivo de configuración de la aplicación conocida actualmente.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso al archivo de configuración de la aplicación.</param>
      <returns>Es <see langword="true" /> si una cadena que representa una ruta de acceso de configuración es la misma que una ruta de acceso al archivo de configuración de la aplicación; es <see langword="false" /> si una cadena que representa una ruta de acceso de configuración no es la misma que una ruta de acceso al archivo de configuración de la aplicación.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
      <summary>Devuelve un valor que indica si la ruta de acceso de un archivo de configuración es la misma que la ruta de acceso del archivo de configuración para el usuario local conocido actualmente.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso al archivo de configuración de la aplicación.</param>
      <returns>Es <see langword="true" /> si una cadena que representa una ruta de acceso de configuración es la misma que una ruta de acceso a un archivo de configuración del usuario local conocido; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
      <summary>Devuelve un valor que indica si la ruta de acceso de un archivo de configuración es la misma que la ruta de acceso del archivo de configuración para el usuario móvil conocido actualmente.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso a un archivo de configuración de la aplicación.</param>
      <returns>Es <see langword="true" /> si una cadena que representa una ruta de acceso de configuración es la misma que una ruta de acceso a un archivo de configuración del usuario móvil conocido; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
      <summary>Define las interfaces utilizadas por la API interna en tiempo de diseño para crear un objeto <see cref="T:System.Configuration.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
      <summary>Crea e inicializa un objeto <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="typeConfigHost">
        <see cref="T:System.Type" /> del objeto <see cref="T:System.Configuration.Configuration" /> que se va a crear.</param>
      <param name="hostInitConfigurationParams">Matriz de parámetros de <see cref="T:System.Object" /> que contiene los parámetros que se van a aplicar al objeto <see cref="T:System.Configuration.Configuration" /> creado.</param>
      <returns>Un objeto <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Normaliza una subruta de ubicación de una ruta de acceso a un archivo de configuración.</summary>
      <param name="subPath">Cadena que representa la ruta de acceso al archivo de configuración.</param>
      <param name="errorInfo">Instancia de <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> o <see langword="null" />.</param>
      <returns>Una cadena de subruta normalizada.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigHost">
      <summary>Define las interfaces utilizadas por las estructuras internas de .NET para inicializar las propiedades de configuración de la aplicación.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>Crea y devuelve un objeto de contexto para un objeto <see cref="T:System.Configuration.ConfigurationElement" /> de una configuración de la aplicación.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <param name="locationSubPath">Cadena que representa la ubicación de una subruta del elemento de configuración.</param>
      <returns>Un objeto de contexto para un objeto <see cref="T:System.Configuration.ConfigurationElement" /> de una configuración de la aplicación.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>Crea y devuelve un objeto de contexto obsoleto de la configuración de la aplicación.</summary>
      <param name="configPath">Cadena que representa una ruta de acceso a un archivo de configuración de la aplicación.</param>
      <returns>Un objeto de contexto obsoleto de la configuración de la aplicación.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Descifra una sección de configuración cifrada y la devuelve como una cadena.</summary>
      <param name="encryptedXml">Cadena XML cifrada que representa una sección de configuración.</param>
      <param name="protectionProvider">Objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Objeto <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns>Una sección de configuración descifrada como una cadena.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
      <summary>Elimina el objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración de la aplicación.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Cifra una sección de configuración y la devuelve como una cadena.</summary>
      <param name="clearTextXml">Cadena XML que representa una sección de configuración para cifrar.</param>
      <param name="protectionProvider">Objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Objeto <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns>Una sección de configuración cifrada representada como una cadena.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>Devuelve la ruta de acceso completa a un archivo de configuración de la aplicación tomando como base la subruta de ubicación.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <param name="locationSubPath">Ubicación de la subruta del archivo de configuración.</param>
      <returns>Una cadena que representa la ruta de acceso completa a un archivo de configuración de la aplicación.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>Devuelve un objeto <see cref="T:System.Type" /> que representa el tipo del objeto de configuración.</summary>
      <param name="typeName">Nombre del tipo.</param>
      <param name="throwOnError">
        <see langword="true" /> para producir una excepción si se presenta un error; en caso contrario,<see langword="false" /></param>
      <returns>Un objeto <see cref="T:System.Type" /> que representa el tipo del objeto de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
      <summary>Devuelve una cadena que representa un nombre de tipo del objeto <see cref="T:System.Type" /> que representa el tipo de la configuración.</summary>
      <param name="t">Un objeto <see cref="T:System.Type" />.</param>
      <returns>Una cadena que representa el nombre de tipo de un objeto <see cref="T:System.Type" /> que representa el tipo de la configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>Asocia la configuración a un objeto <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="configRecord">Un objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <param name="permissionSet">Objeto <see cref="T:System.Security.PermissionSet" /> al que se va a asociar la configuración.</param>
      <param name="isHostReady">Es <see langword="true" /> para indicar que el host de configuración ha completado la creación de los permisos asociados; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
      <summary>Devuelve una cadena que representa el nombre del archivo de configuración asociado al objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <returns>Una cadena que representa el nombre del archivo de configuración asociado al objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>Devuelve una cadena que representa el nombre del archivo de configuración asociado al objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en un archivo de configuración remota.</summary>
      <param name="streamName">Cadena que representa el nombre del archivo de configuración asociado al objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="configSource">Cadena que representa una ruta de acceso a un archivo de configuración remota.</param>
      <returns>Cadena que representa el nombre del archivo de configuración asociado al objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
      <summary>Devuelve la versión del objeto <see cref="T:System.IO.Stream" /> asociado al archivo de configuración.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <returns>La versión del objeto <see cref="T:System.IO.Stream" /> asociado al archivo de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
      <summary>Indica al host que realice una suplantación y devuelve un objeto <see cref="T:System.IDisposable" /> requerido por la estructura interna de .NET.</summary>
      <returns>Valor <see cref="T:System.IDisposable" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Inicializa un host de configuración.</summary>
      <param name="configRoot">Objeto raíz de configuración.</param>
      <param name="hostInitParams">Objeto de parámetro que contiene los valores utilizados para inicializar el host de configuración.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Inicializa un objeto de configuración.</summary>
      <param name="locationSubPath">Ubicación de la subruta del archivo de configuración.</param>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <param name="locationConfigPath">Cadena que representa la ubicación de una ruta de acceso de configuración.</param>
      <param name="configRoot">Objeto <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</param>
      <param name="hostInitConfigurationParams">Objeto de parámetro que contiene los valores utilizados para inicializar el host de configuración.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
      <summary>Devuelve un valor que indica si el archivo de configuración se encuentra en un nivel más alto en la jerarquía de configuración que la configuración de la aplicación.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <returns>Es <see langword="true" /> si el archivo de configuración se encuentra en un nivel más alto en la jerarquía de configuración que la configuración de la aplicación; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
      <summary>Devuelve un valor que indica si se requiere un registro secundario para una ruta de acceso de configuración secundaria.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <returns>Es <see langword="true" /> si se requiere un registro secundario para una ruta de acceso de configuración secundaria; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>Determina si se permite una definición <see cref="T:System.Type" /> diferente para un objeto de configuración de la aplicación.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <param name="allowDefinition">Un objeto <see cref="T:System.Configuration.ConfigurationAllowDefinition" />.</param>
      <param name="allowExeDefinition">Un objeto <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <returns>Es <see langword="true" /> si se permite una definición <see cref="T:System.Type" /> diferente para un objeto de configuración de la aplicación; en caso contrario es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
      <summary>Devuelve un valor que indica si la ruta de acceso de archivo utilizada por un objeto <see cref="T:System.IO.Stream" /> para leer un archivo de configuración es una ruta de acceso válida.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <returns>Es <see langword="true" /> si la ruta de acceso utilizada por un objeto <see cref="T:System.IO.Stream" /> para leer un archivo de configuración es una ruta de acceso válida; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Devuelve un valor que indica si una sección de configuración requiere un nivel de seguridad de acceso del código de plena confianza y no permite que el atributo <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> deshabilite las peticiones implícitas de vínculo.</summary>
      <param name="configRecord">Objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>Es <see langword="true" /> si la sección de configuración requiere un nivel de seguridad de acceso del código de plena confianza y no permite que el atributo <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> deshabilite las peticiones implícitas de vínculo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Devuelve un valor que indica si la inicialización de un objeto de configuración se considera retrasada.</summary>
      <param name="configRecord">Objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>Es <see langword="true" /> si la inicialización de un objeto de configuración se considera retrasada; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
      <summary>Devuelve un valor que indica si el objeto de configuración admite una etiqueta de ubicación.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <returns>Es <see langword="true" /> si el objeto de configuración admite una etiqueta de ubicación; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
      <summary>Devuelve un valor que indica si una ruta de acceso de configuración va dirigida a un nodo de configuración cuyo contenido se debe tratar como raíz.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <returns>Es <see langword="true" /> si la ruta de acceso de configuración va dirigida a un nodo de configuración cuyo contenido se debe tratar como raíz; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
      <summary>Devuelve un valor que indica si la ruta de acceso de configuración es de confianza.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <returns>Es <see langword="true" /> si la ruta de acceso de configuración es de confianza; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
      <summary>Abre un objeto <see cref="T:System.IO.Stream" /> para leer un archivo de configuración.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <returns>Un objeto <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>Abre un objeto <see cref="T:System.IO.Stream" /> para leer un archivo de configuración.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="assertPermissions">Es <see langword="true" /> para declarar los permisos; en caso contrario, es <see langword="false" />.</param>
      <returns>Objeto especificado por <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>Abre un objeto <see cref="T:System.IO.Stream" /> para escribir en un archivo de configuración o para escribir en un archivo temporal utilizado para crear un archivo de configuración. Permite la designación de un objeto <see cref="T:System.IO.Stream" /> como plantilla para copiar los atributos de archivo.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="templateStreamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> del que se van a copiar los atributos de archivo como plantilla.</param>
      <param name="writeContext">Contexto de escritura del objeto <see cref="T:System.IO.Stream" />.</param>
      <returns>Un objeto <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>Abre un objeto <see cref="T:System.IO.Stream" /> para escribir en un archivo de configuración. Permite la designación de un objeto <see cref="T:System.IO.Stream" /> como plantilla para copiar los atributos de archivo.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="templateStreamName">Nombre de un objeto <see cref="T:System.IO.Stream" /> del que se van a copiar los atributos de archivo como plantilla.</param>
      <param name="writeContext">Contexto de escritura del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="assertPermissions">Es <see langword="true" /> para declarar los permisos; en caso contrario, es <see langword="false" />.</param>
      <returns>Objeto especificado por <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
      <summary>Devuelve un valor que indica si el archivo de configuración completo puede ser leído por un objeto <see cref="T:System.IO.Stream" /> designado.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <returns>Es <see langword="true" /> si el archivo de configuración completo puede ser leído por el objeto <see cref="T:System.IO.Stream" /> designado por <paramref name="streamName" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
      <summary>Indica al objeto <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> que lea una sección designada del archivo de configuración asociado.</summary>
      <param name="sectionGroupName">Cadena que representa el nombre de identificación del grupo de una sección de un archivo de configuración.</param>
      <param name="sectionName">Cadena que representa el nombre de identificación de una sección de un archivo de configuración.</param>
      <returns>Es <see langword="true" /> si una sección del archivo de configuración designada por <paramref name="sectionGroupName" /> y <paramref name="sectionName" /> puede ser leída por un objeto <see cref="T:System.IO.Stream" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Indica que un nuevo registro de configuración requiere una inicialización completa.</summary>
      <param name="configRecord">Un objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Indica al objeto <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> que supervise un objeto <see cref="T:System.IO.Stream" /> asociado para los cambios efectuados en un archivo de configuración.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="callback">Objeto <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> que recibe los datos devueltos que representan los cambios efectuados en el archivo de configuración.</param>
      <returns>Un <see cref="T:System.Object" /> que contiene los valores de configuración que se han cambiado.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Indica al objeto <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> que detenga la supervisión de un objeto <see cref="T:System.IO.Stream" /> asociado para los cambios efectuados en un archivo de configuración.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="callback">Un objeto <see cref="T:System.Configuration.Internal.StreamChangeCallback" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Comprueba si una definición de configuración se permite para un registro de configuración.</summary>
      <param name="configPath">Cadena que representa la ruta de acceso del archivo de configuración de la aplicación.</param>
      <param name="allowDefinition">Un objeto <see cref="P:System.Configuration.SectionInformation.AllowDefinition" />.</param>
      <param name="allowExeDefinition">Objeto <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /></param>
      <param name="errorInfo">Un objeto <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>Indica que se ha realizado toda la escritura en el archivo de configuración.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="success">Es <see langword="true" /> si la escritura en el archivo de configuración se ha realizado con éxito; en caso contrario es <see langword="false" />.</param>
      <param name="writeContext">Contexto de escritura del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Indica que se ha realizado toda la escritura en el archivo de configuración y especifica si se deben declarar los permisos.</summary>
      <param name="streamName">Cadena que representa el nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="success">Es <see langword="true" /> para indicar que la escritura se ha realizado con éxito; en caso contrario, es <see langword="false" />.</param>
      <param name="writeContext">Contexto de escritura del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
      <param name="assertPermissions">Es <see langword="true" /> para declarar los permisos; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
      <summary>Devuelve un valor que indica si la configuración es remota.</summary>
      <returns>Es <see langword="true" /> si la configuración es remota; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
      <summary>Devuelve un valor que indica si la configuración del host admite notificaciones de cambios.</summary>
      <returns>Es <see langword="true" /> si la configuración admite notificaciones de cambios; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
      <summary>Devuelve un valor que indica si la configuración del host admite etiquetas de ubicación.</summary>
      <returns>Es <see langword="true" /> si la configuración admite etiquetas de ubicación; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
      <summary>Devuelve un valor que indica si la configuración del host admite etiquetas de ruta de acceso.</summary>
      <returns>Es <see langword="true" /> si la configuración admite etiquetas de ruta de acceso; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
      <summary>Devuelve un valor que indica si la configuración del host admite su actualización.</summary>
      <returns>Es <see langword="true" /> si la configuración admite su actualización; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRecord">
      <summary>Define las interfaces utilizadas por las estructuras internas de .NET para admitir la creación de nuevos registros de configuración.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
      <summary>Devuelve un objeto que representa una sección de la última configuración válida conocida (LKG).</summary>
      <param name="configKey">Cadena que representa una clave a una sección de configuración.</param>
      <returns>Una instancia de <see cref="T:System.Object" /> que representa la sección de la última configuración válida conocida especificada por <paramref name="configKey" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
      <summary>Devuelve una instancia de <see cref="T:System.Object" /> que representa una sección de un archivo de configuración.</summary>
      <param name="configKey">Cadena que representa una clave a una sección de configuración.</param>
      <returns>Una instancia de <see cref="T:System.Object" /> que representa una sección de un archivo de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
      <summary>Produce una sección especificada del objeto de configuración que se va a reinicializar.</summary>
      <param name="configKey">Cadena que representa una clave a una sección de configuración que se va a actualizar.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
      <summary>Quita un registro de configuración.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
      <summary>Concede al objeto de configuración el permiso necesario para producir una excepción si tiene lugar un error durante la inicialización.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
      <summary>Obtiene una cadena que representa la ruta de acceso de un archivo de configuración.</summary>
      <returns>Una cadena que representa la ruta de acceso de un archivo de configuración.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
      <summary>Devuelve un valor que indica si se ha producido un error durante la inicialización de un objeto de configuración.</summary>
      <returns>Es <see langword="true" /> si se ha producido un error durante la inicialización de un objeto de configuración; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
      <summary>Devuelve el nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</summary>
      <returns>Cadena que representa el nombre de un objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRoot">
      <summary>Define las interfaces utilizadas por las estructuras internas de .NET para admitir un objeto raíz de configuración.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
      <summary>Representa el método que controlará el evento <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> de un objeto <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
      <summary>Representa el método que controla el evento <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> de un objeto <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
      <summary>Devuelve un objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> que representa una configuración especificada por una ruta de acceso de configuración.</summary>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <returns>Objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> que representa una configuración especificada por <paramref name="configPath" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
      <summary>Devuelve un <see cref="T:System.Object" /> que representa los datos de una sección de un archivo de configuración.</summary>
      <param name="section">Cadena que representa una sección de un archivo de configuración.</param>
      <param name="configPath">Una cadena que representa la ruta de acceso a un archivo de configuración.</param>
      <returns>
        <see cref="T:System.Object" /> que representa los datos de una sección de un archivo de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
      <summary>Devuelve un valor que representa la ruta de acceso de archivo de la configuración antecesora más próxima que tiene los datos de configuración.</summary>
      <param name="configPath">Ruta de acceso del archivo de configuración.</param>
      <returns>Cadena que representa la ruta de acceso de archivo del antecesor de configuración más próximo con datos de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
      <summary>Devuelve un objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> que representa un registro único de configuración para la ruta de acceso de configuración determinada.</summary>
      <param name="configPath">Ruta de acceso del archivo de configuración.</param>
      <returns>Objeto <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> que representa un registro único de configuración para la ruta de acceso de configuración determinada.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
      <summary>Inicializa un objeto de configuración.</summary>
      <param name="host">Un objeto <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</param>
      <param name="isDesignTime">Es <see langword="true" /> si es en tiempo de diseño; es <see langword="false" /> si es en tiempo de ejecución.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
      <summary>Busca y quita un registro de configuración y todos sus elementos secundarios para una ruta de acceso de configuración determinada.</summary>
      <param name="configPath">Ruta de acceso del archivo de configuración.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
      <summary>Devuelve un valor que indica si la configuración es una configuración en tiempo de diseño.</summary>
      <returns>Es <see langword="true" /> si la configuración es una configuración en tiempo de diseño; es <see langword="false" /> si la configuración no es una configuración en tiempo de diseño.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
      <summary>Define una interfaz que usa el sistema de configuración para establecer la clase <see cref="T:System.Configuration.ConfigurationSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
      <summary>Indica que la inicialización del sistema de configuración ha finalizado.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
      <summary>Proporciona los valores de configuración jerárquicos y las extensiones específicas de ASP.NET al sistema de configuración.</summary>
      <param name="internalConfigSystem">Objeto <see cref="T:System.Configuration.Internal.IInternalConfigSystem" /> que usa la clase <see cref="T:System.Configuration.ConfigurationSettings" />.</param>
      <param name="initComplete">Es <see langword="true" /> si el proceso de inicialización del sistema de configuración ha finalizado; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSystem">
      <summary>Define una interfaz utilizada por .NET Framework para inicializar las propiedades de configuración de la aplicación.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
      <summary>Devuelve el objeto de configuración basado en la clave especificada.</summary>
      <param name="configKey">Valor de clave de configuración.</param>
      <returns>Objeto de configuración.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
      <summary>Actualiza el sistema de configuración basado en el nombre de sección especificado.</summary>
      <param name="sectionName">Nombre de la sección de configuración.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
      <summary>Obtiene un valor que indica si la configuración del usuario es compatible.</summary>
      <returns>Es <see langword="true" /> si se admite la configuración del usuario; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
      <summary>Define una clase que permite que la infraestructura de .NET Framework especifique los argumentos de evento de los eventos de configuración.</summary>
    </member>
    <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" />.</summary>
      <param name="configPath">Ruta de acceso de configuración.</param>
    </member>
    <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
      <summary>Obtiene o establece la ruta de acceso de configuración relacionada con el objeto <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" />.</summary>
      <returns>Valor de cadena que especifica la ruta de configuración actual.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
      <summary>Define una clase utilizada por la infraestructura de .NET Framework para admitir los eventos de configuración.</summary>
      <param name="sender">Objeto de origen del evento.</param>
      <param name="e">Argumento de evento de configuración.</param>
    </member>
    <member name="T:System.Configuration.Internal.StreamChangeCallback">
      <summary>Representa un método para que los host llamen cuando se haya modificado una secuencia supervisada.</summary>
      <param name="streamName">Nombre del objeto <see cref="T:System.IO.Stream" /> que realiza las tareas de E/S en el archivo de configuración.</param>
    </member>
    <member name="T:System.Configuration.IPersistComponentSettings">
      <summary>Define la funcionalidad estándar para los controles o bibliotecas que almacenan y recuperan la configuración de aplicación.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
      <summary>Atribuye la configuración de aplicación del control a sus propiedades correspondientes y actualiza el estado del control.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
      <summary>Restablece los valores predeterminados de las propiedades de configuración de aplicación del control.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
      <summary>Conserva las propiedades de configuración de aplicación del control.</summary>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SaveSettings">
      <summary>Obtiene o establece un valor que indica si el control debe conservar automáticamente sus propiedades de configuración de aplicación.</summary>
      <returns>
        <see langword="true" /> si el control debe conservar automáticamente su estado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SettingsKey">
      <summary>Obtiene o establece el valor de la clave de configuración de aplicación para la instancia actual del control.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene la clave de configuración para la instancia actual del control.</returns>
    </member>
    <member name="T:System.Configuration.IriParsingElement">
      <summary>Proporciona el valor de configuración para el procesamiento de los identificadores de recursos internacionales (IRI) en la clase <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.Configuration.IriParsingElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.IriParsingElement" />.</summary>
    </member>
    <member name="P:System.Configuration.IriParsingElement.Enabled">
      <summary>Obtiene o establece el valor del parámetro de configuración <see cref="T:System.Configuration.IriParsingElement" />.</summary>
      <returns>Valor booleano que indica si el procesamiento de los identificadores de recursos internacionales (IRI) está habilitado.</returns>
    </member>
    <member name="T:System.Configuration.ISettingsProviderService">
      <summary>Proporciona una interfaz para definir un proveedor de configuración de aplicación alternativo.</summary>
    </member>
    <member name="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)">
      <summary>Devuelve el proveedor de configuración compatible con la propiedad de configuración especificada.</summary>
      <param name="property">Objeto <see cref="T:System.Configuration.SettingsProperty" /> que requiere la serialización.</param>
      <returns>Si se encuentra, objeto <see cref="T:System.Configuration.SettingsProvider" /> que puede conservar la propiedad de configuración especificada; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationCollection">
      <summary>Contiene una colección de objetos <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" /> a la colección basándose en los parámetros proporcionados.</summary>
      <param name="keyValue">Objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" /> a la colección basándose en los parámetros proporcionados.</summary>
      <param name="key">Cadena que representa la clave.</param>
      <param name="value">Cadena que representa el valor.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <summary>Borra la colección <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <summary>Cuando se reemplaza en una clase derivada, el método <see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" /> crea un nuevo objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>Una celda <see cref="T:System.Configuration.KeyValueConfigurationElement" /> recién creada.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Cuando se reemplaza en una clase derivada, obtiene la clave de elemento para un elemento de configuración especificado.</summary>
      <param name="element">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> para el que se debe devolver la clave.</param>
      <returns>Objeto que actúa como la clave del elemento <see cref="T:System.Configuration.KeyValueConfigurationElement" /> especificado.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <summary>Quita un objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" /> de la colección.</summary>
      <param name="key">Cadena que especifica el parámetro <paramref name="key" />.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <summary>Obtiene las claves de todos los elementos incluidos en la colección <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
      <returns>Matriz de cadenas.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" /> basándose en el parámetro proporcionado.</summary>
      <param name="key">Clave del objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" /> incluido en la colección.</param>
      <returns>Un elemento de configuración, o <see langword="null" /> si la clave no existe en la colección.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <summary>Obtiene una colección de propiedades de configuración.</summary>
      <returns>Colección de propiedades de configuración.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <summary>Obtiene un valor que indica si el intento de agregar un objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" /> duplicado a la colección <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> va a provocar que se inicie una excepción.</summary>
      <returns>
        <see langword="true" /> si el intento de agregar un objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" /> duplicado a <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> va a provocar que se inicie una excepción; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationElement">
      <summary>Representa un elemento de configuración que contiene un par clave/valor.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.KeyValueConfigurationElement" /> basándose en los parámetros proporcionados.</summary>
      <param name="key">Clave de <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
      <param name="value">Valor del objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
      <summary>Establece el objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" /> en su estado inicial.</summary>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
      <summary>Obtiene la clave del objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>Clave de <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <summary>Obtiene la colección de propiedades.</summary>
      <returns>La clase <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> de propiedades correspondiente al elemento.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
      <summary>Obtiene o establece el valor del objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>Valor del objeto <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.LocalFileSettingsProvider">
      <summary>Proporciona persistencia a las clases de configuración de la aplicación.</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.LocalFileSettingsProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>Devuelve el valor de la propiedad de configuración con nombre para la versión anterior de la misma aplicación.</summary>
      <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe dónde se utiliza la propiedad de configuración de la aplicación.</param>
      <param name="property">Objeto <see cref="T:System.Configuration.SettingsProperty" /> cuyo valor se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Configuration.SettingsPropertyValue" /> que representa la configuración de la aplicación, si se encuentra; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Devuelve la colección de valores de las propiedades de configuración para la instancia de la aplicación y el grupo de propiedades de configuración especificados.</summary>
      <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
      <param name="properties">Colección <see cref="T:System.Configuration.SettingsPropertyCollection" /> que contiene el grupo de propiedades de configuración cuyos valores se van a recuperar.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se ha detectado una configuración con ámbito de usuario pero la configuración actual sólo admite valores de configuración con ámbito de aplicación.</exception>
      <returns>Objeto <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> que contiene los valores para el grupo de propiedades de configuración especificado.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Inicializa el proveedor.</summary>
      <param name="name">Nombre descriptivo del proveedor.</param>
      <param name="values">Una colección de los pares de nombre/valor que representan los atributos específicos del proveedor definidos en la configuración de este proveedor.</param>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>Reestablece los valores predeterminados de todas las propiedades de configuración de la aplicación asociadas a la aplicación especificada.</summary>
      <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se ha detectado una configuración con ámbito de usuario pero la configuración actual sólo admite valores de configuración con ámbito de aplicación.</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>Establece los valores del grupo especificado de valores de propiedades.</summary>
      <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
      <param name="values">Objeto <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> que representa el grupo de valores de propiedades que se va a establecer.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se ha detectado una configuración con ámbito de usuario pero la configuración actual sólo admite valores de configuración con ámbito de aplicación.  
  
 o bien  
  
 Se ha producido un error general al guardar la configuración en el archivo de configuración.</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Intenta migrar la anterior configuración de ámbito de usuario de una versión anterior de la misma aplicación.</summary>
      <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
      <param name="properties">Colección <see cref="T:System.Configuration.SettingsPropertyCollection" /> que contiene el grupo de propiedades de configuración cuyos valores se van a recuperar.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se ha detectado una configuración con ámbito de usuario pero la configuración actual sólo admite valores de configuración con ámbito de aplicación.  
  
 o bien  
  
 No se ha podido obtener acceso a la versión anterior del archivo de configuración.</exception>
    </member>
    <member name="P:System.Configuration.LocalFileSettingsProvider.ApplicationName">
      <summary>Obtiene o establece el nombre de la aplicación que se está ejecutando actualmente.</summary>
      <returns>Una cadena que contiene el nombre descriptivo de la aplicación</returns>
    </member>
    <member name="T:System.Configuration.LongValidator">
      <summary>Valida un valor <see cref="T:System.Int64" />.</summary>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue">Valor <see cref="T:System.Int64" /> que especifica la longitud mínima del valor <see langword="long" />.</param>
      <param name="maxValue">Valor <see cref="T:System.Int64" /> que especifica la longitud máxima del valor <see langword="long" />.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue">Valor <see cref="T:System.Int64" /> que especifica la longitud mínima del valor <see langword="long" />.</param>
      <param name="maxValue">Valor <see cref="T:System.Int64" /> que especifica la longitud máxima del valor <see langword="long" />.</param>
      <param name="rangeIsExclusive">Valor <see cref="T:System.Boolean" /> que especifica si el intervalo de validación es exclusivo.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue">Valor <see cref="T:System.Int64" /> que especifica la longitud mínima del valor <see langword="long" />.</param>
      <param name="maxValue">Valor <see cref="T:System.Int64" /> que especifica la longitud máxima del valor <see langword="long" />.</param>
      <param name="rangeIsExclusive">Valor <see cref="T:System.Boolean" /> que especifica si el intervalo de validación es exclusivo.</param>
      <param name="resolution">Valor <see cref="T:System.Int64" /> que especifica un valor concreto con el que se debe coincidir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" /> es igual o menor que <see langword="0" />.  
  
o bien 
 <paramref name="maxValue" /> es menor que <paramref name="minValue" />.</exception>
    </member>
    <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <summary>Determina si se puede validar el tipo del objeto.</summary>
      <param name="type">Tipo del objeto.</param>
      <returns>Es <see langword="true" /> si el valor del parámetro <paramref name="type" /> coincide con un valor <see cref="T:System.Int64" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
      <summary>Determina si el valor de un objeto es válido.</summary>
      <param name="value">Valor de un objeto.</param>
    </member>
    <member name="T:System.Configuration.LongValidatorAttribute">
      <summary>Mediante declaración, indica a .NET Framework que realice la validación de entero largo en una propiedad de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.LongValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <summary>Obtiene o establece un valor que indica si se deben incluir o excluir los enteros comprendidos en el intervalo definido por los valores de propiedades <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> y <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</summary>
      <returns>
        <see langword="true" /> si se debe excluir el valor; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <summary>Obtiene o establece el valor máximo permitido para la propiedad.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es menor que <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />.</exception>
      <returns>Entero largo que indica el valor máximo permitido.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
      <summary>Obtiene o establece el valor mínimo permitido para la propiedad.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es mayor que <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</exception>
      <returns>Entero que indica el valor mínimo permitido.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <summary>Obtiene una instancia de la clase <see cref="T:System.Configuration.LongValidator" />.</summary>
      <returns>Instancia del validador <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationCollection">
      <summary>Contiene una colección de objetos <see cref="T:System.Configuration.NameValueConfigurationElement" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.NameValueConfigurationElement" /> a la colección.</summary>
      <param name="nameValue">Objeto <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <summary>Borra la colección <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <summary>Quita un objeto <see cref="T:System.Configuration.NameValueConfigurationElement" /> de la colección basándose en el parámetro proporcionado.</summary>
      <param name="nameValue">Un objeto <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <summary>Quita un objeto <see cref="T:System.Configuration.NameValueConfigurationElement" /> de la colección basándose en el parámetro proporcionado.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <summary>Obtiene las claves de todos los elementos incluidos en la colección <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
      <returns>Matriz de cadenas.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Configuration.NameValueConfigurationElement" /> basándose en el parámetro proporcionado.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.NameValueConfigurationElement" /> incluido en la colección.</param>
      <returns>Un objeto <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationElement">
      <summary>Elemento de configuración que contiene un nombre <see cref="T:System.String" /> y un valor <see cref="T:System.String" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.NameValueConfigurationElement" /> basándose en los parámetros proporcionados.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
      <param name="value">El valor del objeto <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Name">
      <summary>Obtiene el nombre del objeto <see cref="T:System.Configuration.NameValueConfigurationElement" />.</summary>
      <returns>Nombre del objeto <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Value">
      <summary>Obtiene o establece el valor del objeto <see cref="T:System.Configuration.NameValueConfigurationElement" />.</summary>
      <returns>El valor del objeto <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueFileSectionHandler">
      <summary>Proporciona acceso a un archivo de configuración. Este tipo admite la infraestructura de configuración de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.NameValueFileSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Crea un nuevo controlador de configuración y lo agrega a la colección de controladores de sección basándose en los parámetros especificados.</summary>
      <param name="parent">Objeto primario .</param>
      <param name="configContext">Objeto de contexto de configuración.</param>
      <param name="section">Nodo XML de la sección.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El archivo especificado en el atributo de <see langword="file" /> de <paramref name="section" /> existe pero no se puede cargar.  
  
o bien 
El atributo <see langword="name" /> de <paramref name="section" /> no coincide con el elemento raíz del archivo especificado en el atributo <see langword="file" />.</exception>
      <returns>Objeto de configuración.</returns>
    </member>
    <member name="T:System.Configuration.NameValueSectionHandler">
      <summary>Proporciona información de configuración del par de nombre y valor de la sección de configuración.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.NameValueSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Crea un nuevo controlador de configuración y lo agrega a la colección de controladores de sección basándose en los parámetros especificados.</summary>
      <param name="parent">Objeto primario.</param>
      <param name="context">Objeto de contexto de configuración.</param>
      <param name="section">Nodo XML de la sección.</param>
      <returns>Objeto de configuración.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
      <summary>Obtiene el nombre del atributo XML que se utiliza como clave en el par de clave y valor.</summary>
      <returns>Valor <see cref="T:System.String" /> que contiene el nombre del atributo de clave.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
      <summary>Obtiene el nombre del atributo XML que se utiliza como valor en el par de clave y valor.</summary>
      <returns>Valor <see cref="T:System.String" /> que contiene el nombre del atributo de valor.</returns>
    </member>
    <member name="T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <summary>Especifica que un proveedor de configuración debe deshabilitar cualquier lógica que se invoque al detectar la actualización de una aplicación. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.OverrideMode">
      <summary>Especifica el comportamiento de invalidación de un elemento de configuración para los elementos de configuración de los directorios secundarios.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Allow">
      <summary>Los valores de configuración que están en directorios secundarios pueden invalidar el valor de configuración del elemento o grupo.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Deny">
      <summary>Los valores de configuración que están en directorios secundarios no pueden invalidar el valor de configuración del elemento o grupo.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Inherit">
      <summary>Los valores de configuración que están en directorios secundarios invalidarán el valor de configuración del elemento o grupo si lo permite explícitamente un elemento primario del elemento o grupo de configuración. El permiso para invalidar se especifica utilizando el atributo <see langword="OverrideMode" />.</summary>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidator">
      <summary>Proporciona la validación de un objeto <see cref="T:System.TimeSpan" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.PositiveTimeSpanValidator" />.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <summary>Determina si se puede validar el tipo de objeto.</summary>
      <param name="type">Tipo del objeto.</param>
      <returns>Es <see langword="true" /> si el parámetro <paramref name="type" /> coincide con un objeto <see cref="T:System.TimeSpan" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <summary>Determina si el valor de un objeto es válido.</summary>
      <param name="value">Valor de un objeto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no se puede resolver como un valor de <see cref="T:System.TimeSpan" /> positivo.</exception>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <summary>Mediante declaración, indica a .NET Framework que realice la validación de tiempo en una propiedad de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <summary>Obtiene una instancia de la clase <see cref="T:System.Configuration.PositiveTimeSpanValidator" />.</summary>
      <returns>Instancia del validador <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformation">
      <summary>Contiene metainformación sobre una propiedad concreta de la configuración. Este tipo no se puede heredar.</summary>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Converter">
      <summary>Obtiene el objeto <see cref="T:System.ComponentModel.TypeConverter" /> relacionado con el atributo de configuración.</summary>
      <returns>Un objeto <see cref="T:System.ComponentModel.TypeConverter" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.DefaultValue">
      <summary>Obtiene un objeto que contiene el valor predeterminado relacionado con un atributo de configuración.</summary>
      <returns>Objeto que contiene el valor predeterminado del atributo de configuración.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Description">
      <summary>Obtiene la descripción del objeto que corresponde a un atributo de configuración.</summary>
      <returns>Descripción del atributo de configuración.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsKey">
      <summary>Obtiene un valor que especifica si el atributo de configuración es una clave.</summary>
      <returns>
        <see langword="true" /> si el atributo de configuración es una clave; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsLocked">
      <summary>Obtiene un valor que especifica si el atributo de configuración está bloqueado.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Configuration.PropertyInformation" /> está bloqueado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsModified">
      <summary>Obtiene un valor que especifica si se ha modificado el atributo de configuración.</summary>
      <returns>
        <see langword="true" /> si se ha modificado el objeto <see cref="T:System.Configuration.PropertyInformation" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsRequired">
      <summary>Obtiene un valor que especifica si el atributo de configuración es necesario.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Configuration.PropertyInformation" /> es necesario; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.LineNumber">
      <summary>Obtiene el número de línea del archivo de configuración que está relacionado con el atributo de configuración.</summary>
      <returns>Número de línea del archivo de configuración.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Name">
      <summary>Obtiene el nombre del objeto que corresponde a un atributo de configuración.</summary>
      <returns>Nombre del objeto <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Source">
      <summary>Obtiene el archivo de código fuente que corresponde a un atributo de configuración.</summary>
      <returns>Archivo de código fuente del objeto <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Type">
      <summary>Obtiene el <see cref="T:System.Type" /> del objeto que corresponde a un atributo de configuración.</summary>
      <returns>
        <see cref="T:System.Type" /> del objeto <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Validator">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.ConfigurationValidatorBase" /> relacionado con el atributo de configuración.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Value">
      <summary>Obtiene o establece un objeto que contiene el valor relacionado con un atributo de configuración.</summary>
      <returns>Objeto que contiene el valor para el objeto <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.PropertyValueOrigin" /> relacionado con el atributo de configuración.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.PropertyValueOrigin" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformationCollection">
      <summary>Contiene una colección de objetos <see cref="T:System.Configuration.PropertyInformation" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <summary>Copia toda la colección <see cref="T:System.Configuration.PropertyInformationCollection" /> en una matriz <see cref="T:System.Array" /> unidimensional y compatible, comenzando en el índice especificado de la matriz de destino.</summary>
      <param name="array">Matriz <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados desde la colección <see cref="T:System.Configuration.PropertyInformationCollection" />. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La propiedad <see cref="P:System.Array.Length" /> de <paramref name="array" /> es menor que <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> + <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <summary>Obtiene un objeto <see cref="T:System.Collections.IEnumerator" /> que se usa para iterar por esta colección <see cref="T:System.Configuration.PropertyInformationCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Collections.IEnumerator" /> que se utiliza para recorrer en iteración esta colección <see cref="T:System.Configuration.PropertyInformationCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar la instancia <see cref="T:System.Configuration.PropertyInformationCollection" />.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información requerida para serializar la instancia de <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <param name="context">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada a la instancia de la <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.PropertyInformation" /> de la colección, basándose en el nombre de propiedad especificado.</summary>
      <param name="propertyName">Nombre del atributo de configuración contenido en el objeto <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <returns>Un objeto <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyValueOrigin">
      <summary>Especifica el nivel en la jerarquía de configuración donde se originó un valor de propiedad de configuración.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Default">
      <summary>El valor de la propiedad de configuración viene de la propiedad <see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
      <summary>El valor de la propiedad de configuración se hereda de un nivel primario de la configuración.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
      <summary>El valor de la propiedad de configuración se define en el nivel actual de la jerarquía.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfiguration">
      <summary>Proporciona acceso a los proveedores de configuración protegida para el archivo de configuración de la aplicación actual.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <summary>Nombre del proveedor de protección de datos.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <summary>Nombre de la sección de datos protegidos.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <summary>Nombre del proveedor de RSA.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <summary>Obtiene el nombre del proveedor de configuración protegida predeterminado.</summary>
      <returns>Nombre del proveedor de configuración protegida predeterminado.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.Providers">
      <summary>Obtiene una colección de los proveedores de configuración protegida instalados.</summary>
      <returns>Colección <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> de objetos <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> instalados.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProvider">
      <summary>Clase base para crear proveedores para el cifrado y descifrado de datos de configuración protegida.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> usando la configuración predeterminada.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Descifra el objeto <see cref="T:System.Xml.XmlNode" /> pasado de un archivo de configuración.</summary>
      <param name="encryptedNode">Objeto <see cref="T:System.Xml.XmlNode" /> que se va a descifrar.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlNode" /> que contiene los datos descifrados.</returns>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Cifra el objeto <see cref="T:System.Xml.XmlNode" /> pasado de un archivo de configuración.</summary>
      <param name="node">Objeto <see cref="T:System.Xml.XmlNode" /> que se va a cifrar.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlNode" /> que contiene los datos cifrados.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <summary>Proporciona una colección de objetos <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> usando la configuración predeterminada.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> a la colección.</summary>
      <param name="provider">Objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> que se va a agregar a la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> no es un objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</exception>
      <exception cref="T:System.Configuration.ConfigurationException">En la colección ya existe el objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> que se va a agregar.  
  
o bien 
La colección es de solo lectura.</exception>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> de la colección con el nombre especificado.</summary>
      <param name="name">Nombre de un objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> de la colección.</param>
      <returns>El objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> con el nombre especificado o <see langword="null" /> si no hay ningún objeto con ese nombre.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationSection">
      <summary>Proporciona acceso mediante programación a la sección de configuración <see langword="configProtectedData" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ProtectedConfigurationSection" /> usando la configuración predeterminada.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <summary>Obtiene o establece el nombre del objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> predeterminado en la propiedad de colección <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" />.</summary>
      <returns>Nombre del objeto <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> predeterminado en la propiedad de colección <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" />.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <summary>Obtiene una colección <see cref="T:System.Configuration.ProviderSettingsCollection" /> de todos los objetos <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> que hay en todos los archivos de configuración participantes.</summary>
      <returns>Colección <see cref="T:System.Configuration.ProviderSettingsCollection" /> de todos los objetos <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> que hay en todos los archivos de configuración participantes.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedProviderSettings">
      <summary>Representa un grupo de elementos de configuración que configuran los proveedores para la sección de configuración <see langword="&lt;configProtectedData&gt;" />.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ProtectedProviderSettings" />.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
      <summary>Obtiene una colección <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> que representa las propiedades de los proveedores de los datos de configuración protegidos.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> que representa las propiedades de los proveedores de los datos de configuración protegidos.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
      <summary>Obtiene una colección de objetos <see cref="T:System.Configuration.ProviderSettings" /> que representan las propiedades de los proveedores de los datos de configuración protegidos.</summary>
      <returns>Colección de objetos <see cref="T:System.Configuration.ProviderSettings" /> que representan las propiedades de los proveedores de los datos de configuración protegidos.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderBase">
      <summary>Proporciona una implementación base para el modelo de proveedor extensible.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Inicializa el generador de configuración.</summary>
      <param name="name">Nombre descriptivo del proveedor.</param>
      <param name="config">Una colección de los pares de nombre/valor que representan los atributos específicos del proveedor definidos en la configuración de este proveedor.</param>
      <exception cref="T:System.ArgumentNullException">El nombre del proveedor es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre del proveedor tiene una longitud de cero.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha hecho un intento para llamar a <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> en un proveedor después de que el un proveedor se haya inicializado.</exception>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Description">
      <summary>Obtiene una descripción breve y fácil de comprender apropiada para mostrarla en las herramientas administrativas u otras interfaces de usuario.</summary>
      <returns>Descripción breve y fácil de comprender apropiada para mostrarla en las herramientas administrativas u otras interfaces de usuario.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Name">
      <summary>Obtiene el nombre descriptivo utilizado para hacer referencia al proveedor durante la configuración.</summary>
      <returns>Nombre descriptivo utilizado para hacer referencia al proveedor durante la configuración.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderCollection">
      <summary>Representa una colección de objetos de proveedor que heredan de <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.Provider.ProviderCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Agrega un proveedor a la colección.</summary>
      <param name="provider">Proveedor que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException">La colección es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La propiedad <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> de <paramref name="provider" /> es <see langword="null" />.  
  
o bien 
La longitud del valor de la propiedad <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> de <paramref name="provider" /> es menor que 1.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
      <summary>Quita todos los elementos de la colección.</summary>
      <exception cref="T:System.NotSupportedException">Se ha establecido la colección como de sólo lectura.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
      <summary>Copia el contenido de la colección en la matriz determinada, comenzando por el índice especificado.</summary>
      <param name="array">Matriz en la que se van a copiar los elementos de la colección.</param>
      <param name="index">Índice del elemento de la colección en el que va a comenzar el proceso de copia.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
      <summary>Devuelve un objeto que implementa la interfaz <see cref="T:System.Collections.IEnumerator" /> para recorrer en iteración la colección.</summary>
      <returns>Objeto que implementa <see cref="T:System.Collections.IEnumerator" /> para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
      <summary>Quita un proveedor de la colección.</summary>
      <param name="name">Nombre del proveedor que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException">Se ha establecido la colección como de sólo lectura.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
      <summary>Establece la colección para que sea de sólo lectura.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Configuration.Provider.ProviderCollection" /> en una matriz, comenzando en un índice concreto de la matriz.</summary>
      <param name="array">Matriz en la que se van a copiar los elementos de la colección.</param>
      <param name="index">Índice de la matriz a partir del cual se van a copiar las instancias de proveedor de la colección.</param>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Count">
      <summary>Obtiene el número de proveedores que hay en la colección.</summary>
      <returns>Número de proveedores que hay en la colección.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
      <returns>
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
      <summary>Obtiene el proveedor con el nombre especificado.</summary>
      <param name="name">Clave que identifica al proveedor.</param>
      <returns>Proveedor con el nombre especificado.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
      <summary>Obtiene el objeto actual.</summary>
      <returns>Objeto actual.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderException">
      <summary>Excepción que se produce cuando se produce un error en un proveedor de configuración. Los proveedores también utilizan esta clase de excepción para producir excepciones cuando en el proveedor se producen errores internos que no se asignan a ninguna otra clase de excepción ya existente.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="info">Objeto que contiene la información que se va a deserializar.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.Provider.ProviderException" />.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="message">Mensaje que describe por qué se ha producido esta excepción <see cref="T:System.Configuration.Provider.ProviderException" />.</param>
      <param name="innerException">Excepción que ha ocasionado que se produzca esta excepción <see cref="T:System.Configuration.Provider.ProviderException" />.</param>
    </member>
    <member name="T:System.Configuration.ProviderSettings">
      <summary>Representa los elementos de configuración asociados a un proveedor.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ProviderSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ProviderSettings" />.</summary>
      <param name="name">Nombre del proveedor para el que se van a configurar los valores.</param>
      <param name="type">Tipo del proveedor para el que se van a configurar los valores.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Name">
      <summary>Obtiene o establece el nombre del proveedor que configura esta clase.</summary>
      <returns>Nombre del proveedor.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Parameters">
      <summary>Obtiene una colección de parámetros definidos por el usuario para el proveedor.</summary>
      <returns>Objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> de parámetros para el proveedor.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Type">
      <summary>Obtiene o establece el nombre del proveedor que configura esta clase.</summary>
      <returns>Espacio de nombres y nombre de clase completos para el tipo de proveedor que configura esta instancia de <see cref="T:System.Configuration.ProviderSettings" />.</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettingsCollection">
      <summary>Representa una colección de objetos <see cref="T:System.Configuration.ProviderSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.ProviderSettingsCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.ProviderSettings" /> a la colección.</summary>
      <param name="provider">Objeto <see cref="T:System.Configuration.ProviderSettings" /> que se agrega.</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
      <summary>Borra la colección.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <summary>Quita un elemento de la colección.</summary>
      <param name="name">El nombre del objeto <see cref="T:System.Configuration.ProviderSettings" /> que se va a quitar.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <summary>Obtiene o establece un valor en el índice especificado de la colección <see cref="T:System.Configuration.ProviderSettingsCollection" />.</summary>
      <param name="index">El índice del objeto <see cref="T:System.Configuration.ProviderSettings" /> que se devolverá.</param>
      <returns>Objeto <see cref="T:System.Configuration.ProviderSettings" /> especificado.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <summary>Obtiene un elemento de la colección.</summary>
      <param name="key">Referencia de cadena al objeto <see cref="T:System.Configuration.ProviderSettings" /> dentro de la colección.</param>
      <returns>Objeto <see cref="T:System.Configuration.ProviderSettings" /> incluido en la colección.</returns>
    </member>
    <member name="T:System.Configuration.RegexStringValidator">
      <summary>Proporciona la validación de una cadena según las reglas basándose en una expresión regular.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.RegexStringValidator" />.</summary>
      <param name="regex">Cadena que especifica una expresión regular.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="regex" /> es null o una cadena vacía ("").</exception>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <summary>Determina si se puede validar el tipo del objeto.</summary>
      <param name="type">Tipo del objeto.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="type" /> coincide con una cadena; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <summary>Determina si el valor de un objeto es válido.</summary>
      <param name="value">Valor de un objeto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no se ajusta a los parámetros de la clase <see cref="T:System.Text.RegularExpressions.Regex" />.</exception>
    </member>
    <member name="T:System.Configuration.RegexStringValidatorAttribute">
      <summary>Mediante declaración, indica a .NET Framework que realice una validación de cadenas en una propiedad de configuración utilizando una expresión regular. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia del objeto <see cref="T:System.Configuration.RegexStringValidatorAttribute" />.</summary>
      <param name="regex">Cadena que se va a utilizar para validar la expresión regular.</param>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <summary>Obtiene la cadena que se utiliza para llevar a cabo la validación de expresión regular.</summary>
      <returns>Cadena que contiene la expresión regular que se utiliza para filtrar la cadena asignada a la propiedad representativa del elemento de configuración.</returns>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <summary>Obtiene una instancia de la clase <see cref="T:System.Configuration.RegexStringValidator" />.</summary>
      <returns>Instancia del validador <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
      <summary>Proporciona una instancia de <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> que usa el cifrado RSA para cifrar y descifrar los datos de configuración.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <summary>Agrega una clave al contenedor de claves RSA.</summary>
      <param name="keySize">Tamaño de la clave que se va a agregar.</param>
      <param name="exportable">
        <see langword="true" /> para indicar que la clave se puede exportar; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Descifra el nodo de XML que se le pasó.</summary>
      <param name="encryptedNode">Objeto <see cref="T:System.Xml.XmlNode" /> que se va a descifrar.</param>
      <returns>Nodo XML descifrado.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <summary>Quita una clave del contenedor de claves RSA.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Cifra el nodo de XML que se le pasó.</summary>
      <param name="node">Objeto <see cref="T:System.Xml.XmlNode" /> que se va a cifrar.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlNode" /> cifrado.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <summary>Exporta una clave RSA del contenedor de claves.</summary>
      <param name="xmlFileName">Nombre de archivo y ruta de acceso donde exportar la clave.</param>
      <param name="includePrivateParameters">Es <see langword="true" /> para indicar que se exportan parámetros privados; de lo contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> es una cadena de longitud cero que solo contiene espacios en blanco o uno o varios caracteres no válidos definidos por <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso especificada no es válida, por ejemplo, está en una unidad no asignada.</exception>
      <exception cref="T:System.IO.IOException">Se ha producido un error al abrir el archivo.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> especificó un archivo que es de solo lectura.  
  
o bien 
Esta operación no es compatible con la plataforma actual.  
  
o bien 
 <paramref name="path" /> especificó un directorio.  
  
o bien 
El llamador no dispone del permiso requerido.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encontró el archivo especificado en <paramref name="path" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <summary>Importa una clave RSA al contenedor de claves.</summary>
      <param name="xmlFileName">Nombre de archivo y ruta de acceso de donde se importa la clave.</param>
      <param name="exportable">
        <see langword="true" /> para indicar que la clave se puede exportar; en caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> es una cadena de longitud cero que solo contiene espacios en blanco o uno o varios caracteres no válidos definidos por <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso especificada no es válida, por ejemplo, está en una unidad no asignada.</exception>
      <exception cref="T:System.IO.IOException">Se ha producido un error al abrir el archivo.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> ha especificado un archivo que es de sólo escritura.  
  
o bien 
Esta operación no es compatible con la plataforma actual.  
  
o bien 
 <paramref name="path" /> especificó un directorio.  
  
o bien 
El llamador no dispone del permiso requerido.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encontró el archivo especificado en <paramref name="path" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> está en un formato no válido.</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Inicializa el proveedor con la configuración predeterminada.</summary>
      <param name="name">Nombre del proveedor que se va a utilizar para el objeto.</param>
      <param name="configurationValues">Colección <see cref="T:System.Collections.Specialized.NameValueCollection" /> de valores que se van a usar al inicializar el objeto.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> incluye uno o más valores no reconocidos.</exception>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <summary>Obtiene el nombre del proveedor de servicios criptográficos (CSP) de la API de Windows Cryptography (CryptoAPI).</summary>
      <returns>Nombre del proveedor de servicios criptográficos de CryptoAPI.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <summary>Obtiene el nombre del contenedor de claves.</summary>
      <returns>Nombre del contenedor de claves.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <summary>Obtiene la clave pública que usa el proveedor.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.RSAParameters" /> que contiene la clave pública que usa el proveedor.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS">
      <summary>Obtiene un valor que indica si el proveedor usa FIPS.</summary>
      <returns>
        <see langword="true" /> Si el proveedor usa FIPS; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> está usando el contenedor de claves del equipo.</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> está usando el contenedor de claves del equipo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <summary>Obtiene un valor que indica si el proveedor está usando los datos de intercambio de claves de OAEP (Optimal Asymmetric Encryption Padding, Relleno óptimo de cifrado asimétrico).</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> está usando los datos de intercambio de claves de Relleno óptimo de cifrado asimétrico (Optimal Asymmetric Encryption Padding, OAEP); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElement">
      <summary>Representa un elemento de la clase <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions">
      <summary>Obtiene el valor de la entrada GenericUriParserOptions de una instancia de <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
      <returns>Valor de la entrada GenericUriParserOptions.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.Name">
      <summary>Obtiene el valor de la entrada Name de una instancia de <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
      <returns>Protocolo utilizado por este valor de esquema.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElementCollection">
      <summary>Representa una colección de objetos <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
      <summary>Índice del objeto <see cref="T:System.Configuration.SchemeSettingElement" /> especificado.</summary>
      <param name="element">Objeto <see cref="T:System.Configuration.SchemeSettingElement" /> para la ubicación de índice especificada.</param>
      <returns>Índice del objeto <see cref="T:System.Configuration.SchemeSettingElement" /> especificado; de lo contrario, -1.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.CollectionType">
      <summary>Obtiene el tipo de colección predeterminado de <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <returns>Tipo de colección predeterminado de <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)">
      <summary>Obtiene el elemento situado en el índice especificado de la colección <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <param name="index">El índice del objeto <see cref="T:System.Configuration.SchemeSettingElement" /> que se devolverá.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El parámetro <paramref name="index" /> es menor que cero.  
  
o bien 
El elemento especificado por el parámetro es <see langword="null" /> o se ha quitado.</exception>
      <returns>Objeto <see cref="T:System.Configuration.SchemeSettingElement" /> especificado.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
      <summary>Obtiene un elemento de la colección <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <param name="name">Referencia de cadena al objeto <see cref="T:System.Configuration.SchemeSettingElement" /> dentro de la colección.</param>
      <returns>Objeto <see cref="T:System.Configuration.SchemeSettingElement" /> incluido en la colección.</returns>
    </member>
    <member name="T:System.Configuration.SectionInformation">
      <summary>Contiene metadatos sobre una sección concreta de la jerarquía de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
      <summary>Fuerza que la sección de configuración asociada aparezca en el archivo de configuración.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <summary>Fuerza que la sección de configuración asociada aparezca en el archivo de configuración o quita una sección existente del archivo de configuración.</summary>
      <param name="force">Es <see langword="true" /> si la sección asociada debe escribirse en el archivo de configuración; de lo contrario, es <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="force" /> es <see langword="true" /> y la sección asociada no se puede exportar al archivo de configuración secundario o no se ha declarado.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetParentSection">
      <summary>Obtiene la sección de configuración que contiene la sección de configuración asociada a este objeto.</summary>
      <exception cref="T:System.InvalidOperationException">El método se invoca desde una sección primaria.</exception>
      <returns>Sección de configuración que contiene el objeto <see cref="T:System.Configuration.ConfigurationSection" /> asociado a este objeto <see cref="T:System.Configuration.SectionInformation" />.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetRawXml">
      <summary>Devuelve un objeto de nodo XML que representa el objeto de sección de configuración asociado.</summary>
      <exception cref="T:System.InvalidOperationException">Este objeto de configuración está bloqueado y no se puede editar.</exception>
      <returns>Representación XML de esta sección de configuración.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <summary>Marca una sección de configuración para la protección.</summary>
      <param name="protectionProvider">Nombre del proveedor de protección que se va a usar.</param>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> se establece en <see langword="false" />.  
  
o bien 
La sección de destino ya es una sección de datos protegidos.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.RevertToParent">
      <summary>Hace que la sección de configuración asociada herede todos sus valores de la sección primaria.</summary>
      <exception cref="T:System.InvalidOperationException">No se puede llamar a este método si no está en el modo de edición.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <summary>Establece el objeto en una representación XML de la sección de configuración asociada del archivo de configuración.</summary>
      <param name="rawXml">XML que se va a usar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rawXml" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.UnprotectSection">
      <summary>Quita el cifrado de configuración protegida de la sección de configuración asociada.</summary>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowDefinition">
      <summary>Obtiene o establece un valor que indica el lugar de la jerarquía del archivo de configuración en el que se puede definir la sección de configuración asociada.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El valor seleccionado está en conflicto con un valor ya definido.</exception>
      <returns>Valor que indica el lugar en la jerarquía del archivo de configuración donde se puede declarar el objeto <see cref="T:System.Configuration.ConfigurationSection" /> asociado.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <summary>Obtiene o establece un valor que indica el lugar de la jerarquía del archivo de configuración en el que se puede declarar la sección de configuración asociada.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El valor seleccionado está en conflicto con un valor ya definido.</exception>
      <returns>Valor que indica el lugar en la jerarquía del archivo de configuración donde se puede declarar el objeto <see cref="T:System.Configuration.ConfigurationSection" /> asociado para los archivos .exe.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowLocation">
      <summary>Obtiene o establece un valor que indica si la sección de configuración permite el atributo <see langword="location" />.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El valor seleccionado está en conflicto con un valor ya definido.</exception>
      <returns>Es <see langword="true" /> si se permite el atributo <see langword="location" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowOverride">
      <summary>Obtiene o establece un valor que indica si los archivos de configuración con un nivel inferior pueden invalidar la sección de configuración asociada.</summary>
      <returns>Es <see langword="true" /> si se puede invalidar la sección; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ConfigSource">
      <summary>Obtiene o establece el nombre del archivo de inclusión en el que se define la sección de configuración asociada, si existe tal archivo.</summary>
      <returns>Nombre del archivo de inclusión en el que se define el objeto <see cref="T:System.Configuration.ConfigurationSection" /> asociado, si existe tal archivo; de lo contrario, se trata de una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ForceSave">
      <summary>Obtiene o establece un valor que indica si se va a guardar la sección de configuración asociada aunque no se haya modificado.</summary>
      <returns>Es <see langword="true" /> si se va a guardar el objeto <see cref="T:System.Configuration.ConfigurationSection" /> asociado aunque no se haya modificado; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Si se guarda el archivo de configuración (aunque no haya ninguna modificación), ASP.NET reinicia la aplicación.</para></block></returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <summary>Obtiene o establece un valor que indica si los valores especificados en la sección de configuración asociada los heredan las aplicaciones que residen en un subdirectorio de la aplicación correspondiente.</summary>
      <returns>Es <see langword="true" /> si las aplicaciones secundarias heredan los valores especificados en este objeto <see cref="T:System.Configuration.ConfigurationSection" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <summary>Obtiene un valor que indica si la sección de configuración debe declararse en el archivo de configuración.</summary>
      <returns>Es <see langword="true" /> si se debe declarar el objeto <see cref="T:System.Configuration.ConfigurationSection" /> asociado en el archivo de configuración; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclared">
      <summary>Obtiene un valor que indica si la sección de configuración asociada se declara en el archivo de configuración.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Configuration.ConfigurationSection" /> se declara en el archivo de configuración; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsLocked">
      <summary>Obtiene un valor que indica si la sección de configuración asociada está bloqueada.</summary>
      <returns>Es <see langword="true" /> si la sección está bloqueada; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsProtected">
      <summary>Obtiene un valor que indica si la sección de configuración asociada está protegida.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Configuration.ConfigurationSection" /> está protegido; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Name">
      <summary>Obtiene el nombre de la sección de configuración asociada.</summary>
      <returns>Nombre completo de la sección de configuración.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideMode">
      <summary>Obtiene o establece el valor de la enumeración <see cref="T:System.Configuration.OverrideMode" /> que especifica si los archivos de configuración secundarios pueden invalidar la sección de configuración asociada.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se ha intentado cambiar las propiedades <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> y <see cref="P:System.Configuration.SectionInformation.OverrideMode" />, lo cual no se admite por razones de compatibilidad.</exception>
      <returns>Uno de los valores de enumeración de <see cref="T:System.Configuration.OverrideMode" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <summary>Obtiene o establece un valor que especifica el comportamiento de invalidación predeterminado de una sección de configuración por parte de los archivos de configuración secundarios.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El comportamiento de invalidación se especifica en una sección de configuración primaria.</exception>
      <returns>Uno de los valores de enumeración de <see cref="T:System.Configuration.OverrideMode" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <summary>Obtiene el comportamiento de invalidación de una sección de configuración que, a su vez, depende de si los archivos de configuración secundarios pueden bloquear la sección de configuración.</summary>
      <returns>Uno de los valores de enumeración de <see cref="T:System.Configuration.OverrideMode" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
      <summary>Obtiene el proveedor de configuración protegida para la sección de configuración asociada.</summary>
      <returns>Proveedor de configuración protegida para este objeto <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.RequirePermission">
      <summary>Obtiene un valor que indica si la sección de configuración asociada necesita permisos de acceso.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El valor seleccionado está en conflicto con un valor ya definido.</exception>
      <returns>Es <see langword="true" /> si el atributo <see langword="requirePermission" /> se establece en <see langword="true" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <summary>Obtiene o establece un valor que especifica si un cambio en un archivo de inclusión de configuración externo necesita el reinicio de una aplicación.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El valor seleccionado está en conflicto con un valor ya definido.</exception>
      <returns>Es <see langword="true" /> si un cambio en un archivo de inclusión de configuración externo necesita el reinicio de una aplicación; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.SectionName">
      <summary>Obtiene el nombre de la sección de configuración asociada.</summary>
      <returns>Nombre del objeto <see cref="T:System.Configuration.ConfigurationSection" /> asociado.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Type">
      <summary>Obtiene o establece el nombre de la clase de sección.</summary>
      <exception cref="T:System.ArgumentException">El valor seleccionado es <see langword="null" /> o una cadena vacía ("").</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">El valor seleccionado está en conflicto con un valor ya definido.</exception>
      <returns>Nombre de la clase asociada a esta sección <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingAttribute">
      <summary>Representa un atributo de configuración personalizado utilizado para asociar información de configuración con una propiedad de configuración.</summary>
    </member>
    <member name="M:System.Configuration.SettingAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.SettingChangingEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.SettingChangingEventArgs" />.</summary>
      <param name="settingName">Objeto <see cref="T:System.String" /> que contiene el nombre de la configuración de aplicación.</param>
      <param name="settingClass">Objeto <see cref="T:System.String" /> que contiene una descripción de categoría de la configuración. A menudo, este parámetro se establece en el nombre del grupo de configuración de aplicación.</param>
      <param name="settingKey">Objeto <see cref="T:System.String" /> que contiene la clave de configuración de aplicación.</param>
      <param name="newValue">
        <see cref="T:System.Object" /> que contiene el nuevo valor que se va a asignar a la propiedad de configuración de aplicación.</param>
      <param name="cancel">
        <see langword="true" /> para cancelar el evento; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.NewValue">
      <summary>Obtiene el nuevo valor que se asigna a la propiedad de configuración de aplicación.</summary>
      <returns>
        <see cref="T:System.Object" /> que contiene el nuevo valor que se va a asignar a la propiedad de configuración de aplicación.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingClass">
      <summary>Obtiene la categoría de la propiedad de configuración de aplicación.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene una descripción de categoría de la configuración. Normalmente, este parámetro se establece en el nombre de grupo de configuración de aplicación.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingKey">
      <summary>Obtiene la clave de configuración de aplicación asociada a la propiedad.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene la clave de configuración de aplicación.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingName">
      <summary>Obtiene el nombre de la configuración de aplicación asociado a la propiedad de configuración de aplicación.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene el nombre de la configuración de aplicación.</returns>
    </member>
    <member name="T:System.Configuration.SettingChangingEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
      <param name="sender">Origen del evento, normalmente una clase contenedora de configuración de aplicación derivada de la clase <see cref="T:System.Configuration.ApplicationSettingsBase" />.</param>
      <param name="e">Objeto <see cref="T:System.Configuration.SettingChangingEventArgs" /> que contiene los datos para el evento.</param>
    </member>
    <member name="T:System.Configuration.SettingElement">
      <summary>Representa un elemento de configuración simplificado utilizado para actualizar elementos de la configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingElement" /> basándose en los parámetros proporcionados.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.SettingElement" />.</param>
      <param name="serializeAs">Un objeto <see cref="T:System.Configuration.SettingsSerializeAs" />. Este objeto es una enumeración utilizada como esquema de serialización para almacenar opciones de configuración.</param>
    </member>
    <member name="M:System.Configuration.SettingElement.Equals(System.Object)">
      <summary>Compara la instancia actual de <see cref="T:System.Configuration.SettingElement" /> con el objeto especificado.</summary>
      <param name="settings">Objeto con el que se va a comparar.</param>
      <returns>
        <see langword="true" /> si la instancia de <see cref="T:System.Configuration.SettingElement" /> es igual que el objeto especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingElement.GetHashCode">
      <summary>Obtiene un valor único que representa la instancia actual de <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns>Un valor único que representa la instancia actual de <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Name">
      <summary>Obtiene o establece el nombre del objeto <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns>Nombre del objeto <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.SerializeAs">
      <summary>Obtiene o establece el mecanismo de serialización utilizado para conservar los valores del objeto <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.SettingsSerializeAs" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Value">
      <summary>Obtiene o establece el valor de un objeto <see cref="T:System.Configuration.SettingElement" /> utilizando un objeto <see cref="T:System.Configuration.SettingValueElement" />.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.SettingValueElement" /> que contiene el valor del objeto<see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingElementCollection">
      <summary>Contiene una colección de objetos <see cref="T:System.Configuration.SettingElement" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.SettingElement" /> a la colección.</summary>
      <param name="element">Objeto <see cref="T:System.Configuration.SettingElement" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Clear">
      <summary>Quita todos los objetos <see cref="T:System.Configuration.SettingElement" /> de la colección.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Get(System.String)">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.SettingElement" /> de la colección.</summary>
      <param name="elementKey">Valor de cadena que representa el objeto <see cref="T:System.Configuration.SettingElement" /> en la colección.</param>
      <returns>Un objeto <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
      <summary>Quita un objeto <see cref="T:System.Configuration.SettingElement" /> de la colección.</summary>
      <param name="element">Un objeto <see cref="T:System.Configuration.SettingElement" />.</param>
    </member>
    <member name="P:System.Configuration.SettingElementCollection.CollectionType">
      <summary>Obtiene el tipo de la colección de configuración.</summary>
      <returns>Objeto <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> de la colección.</returns>
    </member>
    <member name="T:System.Configuration.SettingsAttributeDictionary">
      <summary>Representa una colección de pares de clave y valor utilizada para describir un objeto de configuración así como un objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</summary>
      <param name="attributes">Una colección de pares clave-valor relacionados con las opciones de configuración.</param>
    </member>
    <member name="T:System.Configuration.SettingsBase">
      <summary>Proporciona la clase base que se utiliza para admitir la configuración de propiedades por parte del usuario.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsBase" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)">
      <summary>Inicializa las propiedades internas que utiliza el objeto <see cref="T:System.Configuration.SettingsBase" />.</summary>
      <param name="context">Contexto de configuración relacionado con las propiedades de configuración.</param>
      <param name="properties">Propiedades de configuración a las que se podrá obtener acceso desde la instancia de <see cref="T:System.Configuration.SettingsBase" />.</param>
      <param name="providers">Proveedores inicializados que se deben utilizar al cargar y guardar los valores de propiedad.</param>
    </member>
    <member name="M:System.Configuration.SettingsBase.Save">
      <summary>Almacena los valores actuales de las propiedades de configuración.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
      <summary>Proporciona una clase <see cref="T:System.Configuration.SettingsBase" /> que está sincronizada (es segura para la ejecución de subprocesos).</summary>
      <param name="settingsBase">Clase que se utiliza para admitir la configuración de propiedades por parte del usuario.</param>
      <returns>Clase <see cref="T:System.Configuration.SettingsBase" /> que se sincroniza.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Context">
      <summary>Obtiene el contexto de configuración asociado.</summary>
      <returns>Objeto <see cref="T:System.Configuration.SettingsContext" /> asociado a la instancia de configuración.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso al objeto está sincronizado (es seguro para la ejecución de subprocesos).</summary>
      <returns>
        <see langword="true" /> si se sincroniza el acceso a la colección <see cref="T:System.Configuration.SettingsBase" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Item(System.String)">
      <summary>Obtiene o establece el valor de la propiedad de configuración especificada.</summary>
      <param name="propertyName">Objeto <see cref="T:System.String" /> que contiene el nombre de la propiedad a la que se va a obtener acceso.</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">No hay ninguna propiedad asociada al objeto actual o no se ha podido encontrar la propiedad especificada.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Se ha intentado establecer una propiedad de sólo lectura.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">El tipo de valor proporcionado no es compatible con la propiedad de configuración, durante una operación de conjunto.</exception>
      <returns>Valor de la propiedad de configuración con nombre, si se encuentra uno.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Properties">
      <summary>Obtiene la colección de propiedades de configuración.</summary>
      <returns>Colección <see cref="T:System.Configuration.SettingsPropertyCollection" /> que contiene todos los objetos <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.PropertyValues">
      <summary>Obtiene una colección de valores de propiedad de configuración.</summary>
      <returns>Colección de objetos <see cref="T:System.Configuration.SettingsPropertyValue" /> que representan los valores de datos reales para las propiedades que administra la instancia de <see cref="T:System.Configuration.SettingsBase" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Providers">
      <summary>Obtiene una colección de proveedores de configuración.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProviderCollection" /> que contiene objetos <see cref="T:System.Configuration.SettingsProvider" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsContext">
      <summary>Proporciona información contextual que el proveedor puede utilizar al conservar la configuración.</summary>
    </member>
    <member name="M:System.Configuration.SettingsContext.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsContext" />.</summary>
    </member>
    <member name="T:System.Configuration.SettingsDescriptionAttribute">
      <summary>Proporciona una cadena que describe una propiedad de configuración individual. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.SettingsDescriptionAttribute" />.</summary>
      <param name="description">Objeto <see cref="T:System.String" /> que se utiliza como texto descriptivo.</param>
    </member>
    <member name="P:System.Configuration.SettingsDescriptionAttribute.Description">
      <summary>Obtiene el texto descriptivo para la propiedad de configuración asociada.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene el texto descriptivo para la propiedad de configuración asociada.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupDescriptionAttribute">
      <summary>Proporciona una cadena que describe un grupo de propiedades de configuración de aplicación. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsGroupDescriptionAttribute" />.</summary>
      <param name="description">Objeto <see cref="T:System.String" /> que contiene el texto descriptivo para el grupo de configuración de aplicación.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupDescriptionAttribute.Description">
      <summary>Texto descriptivo para el grupo de propiedades de configuración de aplicación.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene el texto descriptivo para el grupo de configuración de aplicación.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupNameAttribute">
      <summary>Especifica un nombre para el grupo de propiedades de configuración de aplicación. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsGroupNameAttribute" />.</summary>
      <param name="groupName">Objeto <see cref="T:System.String" /> que contiene el nombre del grupo de propiedades de configuración de aplicación.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupNameAttribute.GroupName">
      <summary>Obtiene el nombre del grupo de propiedades de configuración de aplicación.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene el nombre del grupo de propiedades de configuración de aplicación.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsLoadedEventArgs" />.</summary>
      <param name="provider">Objeto <see cref="T:System.Configuration.SettingsProvider" /> del que se carga la configuración.</param>
    </member>
    <member name="P:System.Configuration.SettingsLoadedEventArgs.Provider">
      <summary>Obtiene el proveedor de configuración utilizado para almacenar las opciones de configuración.</summary>
      <returns>Un proveedor de configuración.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
      <param name="sender">Origen del evento, normalmente la clase de configuración.</param>
      <param name="e">Objeto <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Configuration.SettingsManageability">
      <summary>Proporciona valores que indican los servicios que se deben poner a disposición de la configuración de aplicación.</summary>
    </member>
    <member name="F:System.Configuration.SettingsManageability.Roaming">
      <summary>Permite almacenar la configuración de la aplicación en perfiles de usuario móvil. Para más información sobre los perfiles de usuario móviles, vea Isolated Storage and Roaming (Almacenamiento aislado e itinerancia).</summary>
    </member>
    <member name="T:System.Configuration.SettingsManageabilityAttribute">
      <summary>Especifica servicios especiales para las propiedades de configuración de aplicación. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsManageabilityAttribute" />.</summary>
      <param name="manageability">Valor <see cref="T:System.Configuration.SettingsManageability" /> que enumera los servicios que se solicitan.</param>
    </member>
    <member name="P:System.Configuration.SettingsManageabilityAttribute.Manageability">
      <summary>Obtiene el conjunto de los servicios especiales que se han solicitado.</summary>
      <returns>Valor que es el resultado de utilizar el operador lógico <see langword="OR" /> para combinar todos los valores de la enumeración <see cref="T:System.Configuration.SettingsManageability" /> que se corresponden con los servicios solicitados.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProperty">
      <summary>Se utiliza internamente como la clase que representa los metadatos sobre una propiedad de configuración concreta.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsProperty" /> basándose en el parámetro proporcionado.</summary>
      <param name="propertyToCopy">Especifica una copia de un objeto <see cref="T:System.Configuration.SettingsProperty" /> existente.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsProperty" />. basándose en el parámetro proporcionado.</summary>
      <param name="name">Especifica el nombre de un objeto <see cref="T:System.Configuration.SettingsProperty" /> existente.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Configuration.SettingsProperty" /> basándose en los parámetros proporcionados.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="propertyType">Tipo del objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="provider">Objeto <see cref="T:System.Configuration.SettingsProvider" /> que se utiliza para la persistencia.</param>
      <param name="isReadOnly">Valor <see cref="T:System.Boolean" /> que especifica si el objeto <see cref="T:System.Configuration.SettingsProperty" /> es de sólo lectura.</param>
      <param name="defaultValue">Valor predeterminado del objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="serializeAs">Un objeto <see cref="T:System.Configuration.SettingsSerializeAs" />. Este objeto es una enumeración que se utiliza para establecer el esquema de serialización para almacenar la configuración de la aplicación.</param>
      <param name="attributes">Un objeto <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</param>
      <param name="throwOnErrorDeserializing">Valor Boolean que especifica si se va a producir un error cuando la propiedad no se deserialice correctamente.</param>
      <param name="throwOnErrorSerializing">Valor Boolean que especifica si se va a producir un error cuando la propiedad no se serialice correctamente.</param>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Attributes">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.SettingsAttributeDictionary" /> que contiene los atributos del objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.DefaultValue">
      <summary>Obtiene o establece el valor predeterminado del objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Objeto que contiene el valor predeterminado del objeto <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.IsReadOnly">
      <summary>Obtiene o establece un valor que especifica si la instancia de <see cref="T:System.Configuration.SettingsProperty" /> es de sólo lectura.</summary>
      <returns>Es <see langword="true" /> si la interfaz <see cref="T:System.Configuration.SettingsProperty" /> es de solo lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Name">
      <summary>Obtiene o establece el nombre de <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Nombre del objeto <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.PropertyType">
      <summary>Obtiene o establece el tipo para el objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Tipo del objeto <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Provider">
      <summary>Obtiene o establece el proveedor para el objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.SettingsProvider" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.SerializeAs">
      <summary>Obtiene o establece un objeto <see cref="T:System.Configuration.SettingsSerializeAs" /> para el objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Un objeto <see cref="T:System.Configuration.SettingsSerializeAs" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing">
      <summary>Obtiene o establece un valor que especifica si se va a producir un error cuando la propiedad no se deserialice correctamente.</summary>
      <returns>
        <see langword="true" /> si se va a producir un error cuando la deserialización de la propiedad no se realice correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing">
      <summary>Obtiene o establece un valor que especifica si se va a producir un error cuando la propiedad no se serialice correctamente.</summary>
      <returns>
        <see langword="true" /> si se va a producir un error cuando la serialización de la propiedad no se realice correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyCollection">
      <summary>Contiene una colección de objetos <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.SettingsProperty" /> a la colección.</summary>
      <param name="property">Un objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <exception cref="T:System.NotSupportedException">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clear">
      <summary>Quita todos los objetos <see cref="T:System.Configuration.SettingsProperty" /> de la colección.</summary>
      <exception cref="T:System.NotSupportedException">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clone">
      <summary>Crea una copia de la colección existente.</summary>
      <returns>Clase <see cref="T:System.Configuration.SettingsPropertyCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia esta colección <see cref="T:System.Configuration.SettingsPropertyCollection" /> en una matriz.</summary>
      <param name="array">Matriz en la que se va a copiar el objeto.</param>
      <param name="index">Índice en el que se va a empezar a copiar.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
      <summary>Obtiene el objeto <see cref="T:System.Collections.IEnumerator" /> a medida que se aplica a la colección.</summary>
      <returns>El objeto <see cref="T:System.Collections.IEnumerator" /> según se aplica a la colección.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
      <summary>Realiza procesos personalizados adicionales al agregar al contenido de la instancia de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Un objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
      <summary>Realiza procesos personalizados adicionales después de agregar al contenido de la instancia de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Un objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClear">
      <summary>Realiza procesos personalizados adicionales al borrar el contenido de la instancia de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClearComplete">
      <summary>Realiza procesos personalizados adicionales después de borrar el contenido de la instancia de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
      <summary>Realiza procesos personalizados adicionales al quitar el contenido de la instancia de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Un objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
      <summary>Realiza procesos personalizados adicionales después de quitar el contenido de la instancia de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Un objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
      <summary>Quita un objeto <see cref="T:System.Configuration.SettingsProperty" /> de la colección.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <exception cref="T:System.NotSupportedException">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.SetReadOnly">
      <summary>Establece la colección para que sea de sólo lectura.</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Count">
      <summary>Obtiene un valor que especifica el número de objetos <see cref="T:System.Configuration.SettingsProperty" /> de la colección.</summary>
      <returns>El número de objetos <see cref="T:System.Configuration.SettingsProperty" /> de la colección.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado. Es decir, es seguro para la ejecución de subprocesos.</summary>
      <returns>
        <see langword="true" /> si se sincroniza el acceso a la colección <see cref="T:System.Configuration.SettingsPropertyCollection" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
      <summary>Obtiene el elemento de la colección con el nombre especificado.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <returns>Objeto <see cref="T:System.Configuration.SettingsProperty" /> con el parámetro <paramref name="name" /> especificado.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
      <summary>Obtiene el objeto para sincronizar el acceso a la colección.</summary>
      <returns>El objeto para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <summary>Proporciona una excepción para los objetos <see cref="T:System.Configuration.SettingsProperty" /> de sólo lectura.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> basándose en los parámetros proporcionados.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto sobre la excepción iniciada.</param>
      <param name="context">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino de la secuencia serializada.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> basándose en un parámetro proporcionado.</summary>
      <param name="message">Cadena que contiene un mensaje de excepción.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> basándose en los parámetros proporcionados.</summary>
      <param name="message">Cadena que contiene un mensaje de excepción.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyNotFoundException">
      <summary>Proporciona una excepción para los objetos <see cref="T:System.Configuration.SettingsProperty" /> que no se encuentren.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyNotFoundException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> basándose en los parámetros proporcionados.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto sobre la excepción iniciada.</param>
      <param name="context">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino de la secuencia serializada.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> basándose en un parámetro proporcionado.</summary>
      <param name="message">Cadena que contiene un mensaje de excepción.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> basándose en los parámetros proporcionados.</summary>
      <param name="message">Cadena que contiene un mensaje de excepción.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValue">
      <summary>Contiene el valor de una propiedad de configuración que una instancia de <see cref="T:System.Configuration.SettingsBase" /> puede cargar y almacenar.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyValue" /> basándose en los parámetros proporcionados.</summary>
      <param name="property">Especifica un objeto <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Deserialized">
      <summary>Obtiene o establece si se ha deserializado el valor de un objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>
        <see langword="true" /> si se ha deserializado el valor de un objeto <see cref="T:System.Configuration.SettingsProperty" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.IsDirty">
      <summary>Obtiene o establece si el valor de un objeto <see cref="T:System.Configuration.SettingsProperty" /> ha cambiado.</summary>
      <returns>
        <see langword="true" /> si ha cambiado el valor de un objeto <see cref="T:System.Configuration.SettingsProperty" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Name">
      <summary>Obtiene el nombre de la propiedad a partir del objeto <see cref="T:System.Configuration.SettingsProperty" /> asociado.</summary>
      <returns>Nombre del objeto <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Property">
      <summary>Obtiene el objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Objeto <see cref="T:System.Configuration.SettingsProperty" /> que describe el objeto <see cref="T:System.Configuration.SettingsPropertyValue" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.PropertyValue">
      <summary>Obtiene o establece el valor del objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <exception cref="T:System.ArgumentException">Se produjo un error mientras se intentaba utilizar el valor predeterminado de la propiedad <see cref="P:System.Configuration.SettingsProperty.DefaultValue" />.  Se ha producido un error al intentar convertir la propiedad <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> en un tipo válido o el valor resultante no era compatible con el tipo definido por <see cref="P:System.Configuration.SettingsProperty.PropertyType" />.</exception>
      <returns>El valor del objeto <see cref="T:System.Configuration.SettingsProperty" />. Cuando se establece este valor, la propiedad <see cref="P:System.Configuration.SettingsPropertyValue.IsDirty" /> se establece en <see langword="true" /> y <see cref="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" /> se establece en <see langword="false" />.  
  
Cuando se obtiene acceso por primera vez a un valor desde la propiedad <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> y en el caso de que el valor se haya guardado inicialmente en el objeto <see cref="T:System.Configuration.SettingsPropertyValue" /> como una representación serializada utilizando la propiedad <see cref="P:System.Configuration.SettingsPropertyValue.SerializedValue" />, la propiedad <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> desencadenará la deserialización del valor subyacente.  Como efecto secundario, la propiedad <see cref="P:System.Configuration.SettingsPropertyValue.Deserialized" /> se establecerá en <see langword="true" />.  
  
Si esta cadena de eventos se produce en ASP.NET, y si se produce un error durante el proceso de deserialización, el error se registra mediante la característica de supervisión de estado de ASP.NET. De forma predeterminada, esto significa que los errores de deserialización se presentarán en el registro de eventos de aplicación que se ejecuta bajo ASP.NET. Si este proceso se produce fuera de ASP.NET, y si se produce un error durante la deserialización, se suprime el error y se usa el resto de la lógica durante la deserialización. Si, cuando se intenta la deserialización, no existe ningún valor serializado que haya que deserializar, el objeto <see cref="T:System.Configuration.SettingsPropertyValue" /> intentará en su lugar devolver un valor predeterminado si hay alguno configurado según la definición de la instancia asociada de <see cref="T:System.Configuration.SettingsProperty" />. En este caso, si la propiedad <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> se ha establecido en <see langword="null" /> o en la cadena "[null]", el objeto <see cref="T:System.Configuration.SettingsPropertyValue" /> inicializará la propiedad <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> en <see langword="null" /> para los tipos de referencia o en el valor predeterminado para el tipo de valor asociado.  Por otra parte, si la propiedad <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> contiene una referencia válida a un objeto o un valor de cadena (distinto de "[null]"), se devuelve la propiedad <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> en su lugar.  
  
Si no hay ningún valor serializado que haya que deserializar en el momento de intentar la deserialización, y no se ha especificado ningún valor predeterminado, se devolverá una cadena vacía para los tipos de cadena. En el caso de todos los demás tipos, se devolverá una instancia predeterminada mediante una llamada a en los <see cref="M:System.Activator.CreateInstance(System.Type)" /> tipos de referencia, lo que significa que se intentará crear una instancia de objeto mediante el constructor sin parámetros.  Si se produce un error en este intento, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.SerializedValue">
      <summary>Obtiene o establece el valor serializado del objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <exception cref="T:System.ArgumentException">Las opciones de serialización para la propiedad indicaban el uso de un convertidor de tipos de cadena, pero no había ningún convertidor de tipos disponible.</exception>
      <returns>Valor serializado de un objeto <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue">
      <summary>Obtiene un valor Boolean que especifica si el valor del objeto <see cref="T:System.Configuration.SettingsPropertyValue" /> es el valor predeterminado tal como define el valor de la propiedad <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> en el objeto <see cref="T:System.Configuration.SettingsProperty" /> asociado.</summary>
      <returns>
        <see langword="true" /> si el valor del objeto <see cref="T:System.Configuration.SettingsProperty" /> es el valor predeterminado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValueCollection">
      <summary>Contiene una colección de valores de propiedades de configuración que asigna objetos <see cref="T:System.Configuration.SettingsProperty" /> a objetos <see cref="T:System.Configuration.SettingsPropertyValue" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyValueCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
      <summary>Agrega un objeto <see cref="T:System.Configuration.SettingsPropertyValue" /> a la colección.</summary>
      <param name="property">Un objeto <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <exception cref="T:System.NotSupportedException">Se ha producido un intento de agregar un elemento a la colección, pero la colección se marcó como de sólo lectura.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clear">
      <summary>Quita todos los objetos <see cref="T:System.Configuration.SettingsPropertyValue" /> de la colección.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clone">
      <summary>Crea una copia de la colección existente.</summary>
      <returns>Clase <see cref="T:System.Configuration.SettingsPropertyValueCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia esta colección <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> en una matriz.</summary>
      <param name="array">Matriz en la que se va a copiar la colección.</param>
      <param name="index">Índice en el que se va a empezar a copiar.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
      <summary>Obtiene el objeto <see cref="T:System.Collections.IEnumerator" /> a medida que se aplica a la colección.</summary>
      <returns>El objeto <see cref="T:System.Collections.IEnumerator" /> según se aplica a la colección.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
      <summary>Quita un objeto <see cref="T:System.Configuration.SettingsPropertyValue" /> de la colección.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <exception cref="T:System.NotSupportedException">Se ha producido un intento de quitar un elemento de la colección, pero la colección se marcó como de sólo lectura.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly">
      <summary>Establece la colección para que sea de sólo lectura.</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Count">
      <summary>Obtiene un valor que especifica el número de objetos <see cref="T:System.Configuration.SettingsPropertyValue" /> de la colección.</summary>
      <returns>El número de objetos <see cref="T:System.Configuration.SettingsPropertyValue" /> de la colección.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</summary>
      <returns>Es <see langword="true" /> si está sincronizado el acceso a la colección <see cref="T:System.Configuration.SettingsPropertyValueCollection" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
      <summary>Obtiene un elemento de la colección.</summary>
      <param name="name">Un objeto <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <returns>Objeto <see cref="T:System.Configuration.SettingsPropertyValue" /> con el parámetro <paramref name="name" /> especificado.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
      <summary>Obtiene el objeto para sincronizar el acceso a la colección.</summary>
      <returns>El objeto para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyWrongTypeException">
      <summary>Proporciona una excepción que se inicia al utilizar un tipo no válido con un objeto <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> basándose en los parámetros proporcionados.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino de la secuencia serializada.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> basándose en el parámetro proporcionado.</summary>
      <param name="message">Cadena que contiene un mensaje de excepción.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> basándose en los parámetros proporcionados.</summary>
      <param name="message">Cadena que contiene un mensaje de excepción.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual.</param>
    </member>
    <member name="T:System.Configuration.SettingsProvider">
      <summary>Actúa como una clase base para derivar los proveedores de configuración personalizados de la arquitectura de configuración de aplicación.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.#ctor">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.SettingsProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Devuelve la colección de valores de propiedades de configuración para la instancia de la aplicación y el grupo de propiedades de configuración especificados.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
      <param name="collection">Colección <see cref="T:System.Configuration.SettingsPropertyCollection" /> que contiene el grupo de propiedades de configuración cuyos valores se van a recuperar.</param>
      <returns>Objeto <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> que contiene los valores para el grupo de propiedades de configuración especificado.</returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>Establece los valores del grupo especificado de valores de propiedades.</summary>
      <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
      <param name="collection">Objeto <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> que representa el grupo de valores de propiedades que se va a establecer.</param>
    </member>
    <member name="P:System.Configuration.SettingsProvider.ApplicationName">
      <summary>Obtiene o establece el nombre de la aplicación que se está ejecutando actualmente.</summary>
      <returns>Un <see cref="T:System.String" /> que contiene el nombre abreviado de la aplicación, que no contiene una ruta de acceso completa o una extensión, por ejemplo, <c>SimpleAppSettings</c>.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderAttribute">
      <summary>Especifica el proveedor de configuración que se utiliza con el fin de proporcionar almacenamiento para la propiedad o clase de configuración de aplicación actual. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.SettingsProviderAttribute" />.</summary>
      <param name="providerTypeName">Objeto <see cref="T:System.String" /> que contiene el nombre del proveedor de configuración.</param>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsProviderAttribute" />.</summary>
      <param name="providerType">Un <see cref="T:System.Type" /> que contiene el tipo de proveedor de configuración.</param>
    </member>
    <member name="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName">
      <summary>Obtiene el nombre de tipo del proveedor de configuración.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene el nombre del proveedor de configuración.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderCollection">
      <summary>Representa una colección de proveedores de configuración de aplicación.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingsProviderCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Agrega un nuevo proveedor de configuración a la colección.</summary>
      <param name="provider">Objeto <see cref="T:System.Configuration.Provider.ProviderBase" /> que se va a agregar a la colección.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="provider" /> no es de tipo <see cref="T:System.Configuration.SettingsProvider" />.  
  
o bien 
La propiedad <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> del parámetro provider es null o una cadena vacía.  
  
o bien 
En la colección ya existe un proveedor de configuración con la misma propiedad <see cref="P:System.Configuration.Provider.ProviderBase.Name" />.</exception>
      <exception cref="T:System.NotSupportedException">La colección es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="provider" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
      <summary>Obtiene el proveedor de configuración de la colección que coincide con el nombre especificado.</summary>
      <param name="name">Objeto <see cref="T:System.String" /> que contiene el nombre descriptivo del proveedor de configuración.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Cuando se establece este valor, la colección es de sólo lectura.</exception>
      <returns>Si se encuentra, objeto <see cref="T:System.Configuration.SettingsProvider" /> cuyo nombre coincide con el que especifica el parámetro name; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsSavingEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</summary>
      <param name="sender">Origen del evento, normalmente un contenedor de datos o una colección enlazada a datos.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.CancelEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAs">
      <summary>Determina el esquema de serialización utilizado para almacenar la configuración de aplicación.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Binary">
      <summary>La propiedad de configuración se serializa utilizando una serialización de objeto binario.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.ProviderSpecific">
      <summary>El proveedor de configuración tiene un conocimiento implícito de la propiedad o de su tipo y elige un mecanismo de serialización adecuado. Se utiliza a menudo para la serialización personalizada.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.String">
      <summary>La propiedad de configuración se serializa como texto sin formato.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Xml">
      <summary>La propiedad de configuración se serializa como XML utilizando la serialización XML.</summary>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAsAttribute">
      <summary>Especifica el mecanismo de serialización que debe utilizar el proveedor de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.SettingsSerializeAsAttribute" />.</summary>
      <param name="serializeAs">Valor enumerado de <see cref="T:System.Configuration.SettingsSerializeAs" /> que especifica el esquema de serialización.</param>
    </member>
    <member name="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs">
      <summary>Obtiene el valor de la enumeración <see cref="T:System.Configuration.SettingsSerializeAs" /> que especifica el esquema de serialización.</summary>
      <returns>Valor enumerado de <see cref="T:System.Configuration.SettingsSerializeAs" /> que especifica el esquema de serialización.</returns>
    </member>
    <member name="T:System.Configuration.SettingValueElement">
      <summary>Contiene el archivo XML que representa el valor serializado de la configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SettingValueElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.Equals(System.Object)">
      <summary>Compara la instancia actual de <see cref="T:System.Configuration.SettingValueElement" /> con el objeto especificado.</summary>
      <param name="settingValue">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si la instancia de <see cref="T:System.Configuration.SettingValueElement" /> es igual que el objeto especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingValueElement.GetHashCode">
      <summary>Obtiene un valor único que representa la instancia actual de <see cref="T:System.Configuration.SettingValueElement" />.</summary>
      <returns>Un valor único que representa la instancia actual de <see cref="T:System.Configuration.SettingValueElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingValueElement.ValueXml">
      <summary>Obtiene o establece el valor de un objeto <see cref="T:System.Configuration.SettingValueElement" /> utilizando un objeto <see cref="T:System.Xml.XmlNode" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlNode" /> que contiene el valor de <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="T:System.Configuration.SingleTagSectionHandler">
      <summary>Controla secciones de configuración representadas por una sola etiqueta de XML en el archivo .config.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SingleTagSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Se utiliza internamente para crear una nueva instancia de este objeto.</summary>
      <param name="parent">Elemento primario de este objeto.</param>
      <param name="context">Contexto de este objeto.</param>
      <param name="section">Objeto <see cref="T:System.Xml.XmlNode" /> incluido en la configuración.</param>
      <returns>Controlador de objetos creado.</returns>
    </member>
    <member name="T:System.Configuration.SpecialSetting">
      <summary>Especifica la categoría de configuración especial de una propiedad de configuración de aplicación.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.ConnectionString">
      <summary>La propiedad de configuración representa una cadena de conexión, normalmente para un almacén de datos o un recurso de red.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.WebServiceUrl">
      <summary>La propiedad de configuración representa un localizador de recursos universal (dirección URL) para un servicio Web.</summary>
    </member>
    <member name="T:System.Configuration.SpecialSettingAttribute">
      <summary>Indica que una propiedad de configuración de aplicación tiene una importancia especial. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SpecialSettingAttribute" />.</summary>
      <param name="specialSetting">Valor de la enumeración <see cref="T:System.Configuration.SpecialSetting" /> que define la categoría de la propiedad de configuración de aplicación.</param>
    </member>
    <member name="P:System.Configuration.SpecialSettingAttribute.SpecialSetting">
      <summary>Obtiene el valor que describe la categoría de configuración especial de la propiedad de configuración de aplicación.</summary>
      <returns>Valor de la enumeración <see cref="T:System.Configuration.SpecialSetting" /> que define la categoría de la propiedad de configuración de aplicación.</returns>
    </member>
    <member name="T:System.Configuration.StringValidator">
      <summary>Proporciona la validación de una cadena.</summary>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.StringValidator" /> basándose en un parámetro proporcionado.</summary>
      <param name="minLength">Entero que especifica la longitud mínima del valor de cadena.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.StringValidator" /> basándose en los parámetros proporcionados.</summary>
      <param name="minLength">Entero que especifica la longitud mínima del valor de cadena.</param>
      <param name="maxLength">Entero que especifica la longitud máxima del valor de cadena.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.StringValidator" /> basándose en los parámetros proporcionados.</summary>
      <param name="minLength">Entero que especifica la longitud mínima del valor de cadena.</param>
      <param name="maxLength">Entero que especifica la longitud máxima del valor de cadena.</param>
      <param name="invalidCharacters">Cadena que representa los caracteres no válidos.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <summary>Determina si un objeto se puede validar basándose en el tipo.</summary>
      <param name="type">Tipo del objeto.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="type" /> coincide con una cadena; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
      <summary>Determina si el valor de un objeto es válido.</summary>
      <param name="value">Valor del objeto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> es menor que <paramref name="minValue" /> o mayor que <paramref name="maxValue" /> de la forma definida en el constructor.  
  
o bien 
 <paramref name="value" /> contiene caracteres no válidos.</exception>
    </member>
    <member name="T:System.Configuration.StringValidatorAttribute">
      <summary>Mediante declaración, indica a .NET Framework que realice la validación de cadenas en una propiedad de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.StringValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <summary>Obtiene o establece el juego de caracteres no válidos para la propiedad.</summary>
      <returns>Cadena que contiene el conjunto de caracteres que no se permiten para la propiedad.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <summary>Obtiene o establece la longitud máxima permitida para la cadena que se va a asignar a la propiedad.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es menor que <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" />.</exception>
      <returns>Entero que indica la longitud máxima permitida para la cadena que se va a asignar a la propiedad.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
      <summary>Obtiene o establece el valor mínimo permitido para la cadena que se va a asignar a la propiedad.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es mayor que <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" />.</exception>
      <returns>Entero que indica la longitud mínima permitida para la cadena que se va a asignar a la propiedad.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <summary>Obtiene una instancia de la clase <see cref="T:System.Configuration.StringValidator" />.</summary>
      <returns>Configuración actual de <see cref="T:System.Configuration.StringValidator" /> de una instancia de validador <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidator">
      <summary>Valida que un objeto es una clase derivada de un tipo especificado.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SubclassTypeValidator" />.</summary>
      <param name="baseClass">Clase base respecto de la cual se va a validar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseClass" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <summary>Determina si un objeto se puede validar basándose en el tipo.</summary>
      <param name="type">Tipo del objeto.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="type" /> coincide con un tipo que se puede validar; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <summary>Determina si el valor de un objeto es válido.</summary>
      <param name="value">Valor del objeto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no es de un <see cref="T:System.Type" /> que se pueda derivar de <paramref name="baseClass" /> como se define en el constructor.</exception>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
      <summary>Mediante declaración, indica a .NET Framework que realice la validación en una propiedad de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" />.</summary>
      <param name="baseClass">Tipo de clase base.</param>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <summary>Obtiene el tipo base del objeto que se está validando.</summary>
      <returns>Tipo base del objeto que se está validando.</returns>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <summary>Obtiene la instancia del atributo del validador.</summary>
      <returns>Instancia de <see cref="T:System.Configuration.ConfigurationValidatorBase" /> actual.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesConverter">
      <summary>Convierte un intervalo de tiempo expresado en minutos.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.TimeSpanMinutesConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte <see cref="T:System.String" /> en <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="data">Objeto <see cref="T:System.String" /> que se va a convertir.</param>
      <returns>El objeto <see cref="T:System.TimeSpan" /> que representa el parámetro <paramref name="data" /> en minutos.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="value">Valor en el que se va a convertir.</param>
      <param name="type">Tipo al que se va a convertir.</param>
      <returns>El objeto <see cref="T:System.String" /> que representa el parámetro <paramref name="value" /> en minutos.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <summary>Convierte un objeto <see cref="T:System.TimeSpan" /> expresado en minutos o en un intervalo de tiempo infinito estándar.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte <see cref="T:System.String" /> en <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="data">Objeto <see cref="T:System.String" /> que se va a convertir.</param>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" /> si el parámetro <paramref name="data" /> es <see cref="T:System.String" /> "infinito"; en caso contrario, <see cref="T:System.TimeSpan" /> que representa el parámetro <paramref name="data" /> en minutos.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="value">Valor que se va a convertir.</param>
      <param name="type">Tipo de conversión.</param>
      <returns>
        <see cref="T:System.String" /> "infinito" si el parámetro <paramref name="value" /> es <see cref="F:System.TimeSpan.MaxValue" />; en caso contrario, <see cref="T:System.String" /> que representa el parámetro <paramref name="value" /> en minutos.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsConverter">
      <summary>Convierte un intervalo de tiempo expresado en segundos.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.TimeSpanSecondsConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte <see cref="T:System.String" /> en <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="data">Objeto <see cref="T:System.String" /> que se va a convertir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> no se pueden analizar como valor entero.</exception>
      <returns>El objeto <see cref="T:System.TimeSpan" /> que representa el parámetro <paramref name="data" /> en segundos.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="value">Valor en el que se va a convertir.</param>
      <param name="type">Tipo al que se va a convertir.</param>
      <returns>Objeto <see cref="T:System.String" /> que representa el parámetro <paramref name="value" /> en minutos.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <summary>Convierte un valor <see cref="T:System.TimeSpan" /> expresado en segundos o como intervalo de tiempo infinito estándar.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte <see cref="T:System.String" /> en <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="data">Objeto <see cref="T:System.String" /> que se va a convertir.</param>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" /> si el parámetro <paramref name="data" /> es el valor <see cref="T:System.String" /> "infinito"; en caso contrario, <see cref="T:System.TimeSpan" /> que representa el parámetro <paramref name="data" /> en segundos.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte un objeto <see cref="T:System.TimeSpan" /> en. <see cref="T:System.String" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="value">Valor que se va a convertir.</param>
      <param name="type">Tipo de conversión.</param>
      <returns>
        <see cref="T:System.String" /> "infinito" si el parámetro <paramref name="value" /> es <see cref="F:System.TimeSpan.MaxValue" />; en caso contrario, <see cref="T:System.String" /> que representa el parámetro <paramref name="value" /> en segundos.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanValidator">
      <summary>Proporciona la validación de un objeto <see cref="T:System.TimeSpan" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.TimeSpanValidator" /> basándose en los parámetros proporcionados.</summary>
      <param name="minValue">Objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo mínimo permitido para pasar la validación.</param>
      <param name="maxValue">Objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo máximo permitido para pasar la validación.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.TimeSpanValidator" /> basándose en los parámetros proporcionados.</summary>
      <param name="minValue">Objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo mínimo permitido para pasar la validación.</param>
      <param name="maxValue">Objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo máximo permitido para pasar la validación.</param>
      <param name="rangeIsExclusive">Valor <see cref="T:System.Boolean" /> que especifica si el intervalo de validación es exclusivo.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.TimeSpanValidator" /> basándose en los parámetros proporcionados.</summary>
      <param name="minValue">Objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo mínimo permitido para pasar la validación.</param>
      <param name="maxValue">Objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo máximo permitido para pasar la validación.</param>
      <param name="rangeIsExclusive">Valor <see cref="T:System.Boolean" /> que especifica si el intervalo de validación es exclusivo.</param>
      <param name="resolutionInSeconds">Valor <see cref="T:System.Int64" /> que especifica un número de segundos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolutionInSeconds" /> es menor que <see langword="0" />.  
  
o bien 
 <paramref name="minValue" /> es mayor que <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <summary>Determina si se puede validar el tipo del objeto.</summary>
      <param name="type">Tipo del objeto.</param>
      <returns>
        <see langword="true" /> si el parámetro <paramref name="type" /> coincide con un valor <see cref="T:System.TimeSpan" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <summary>Determina si el valor de un objeto es válido.</summary>
      <param name="value">Valor de un objeto.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidatorAttribute">
      <summary>Mediante declaración, indica a .NET Framework que realice la validación de tiempo en una propiedad de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <summary>Obtiene el valor máximo absoluto permitido.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <summary>Obtiene el valor mínimo absoluto permitido.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.TimeSpanValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <summary>Obtiene o establece un valor que indica si se deben incluir o excluir los enteros en el intervalo que definen <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> y <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />.</summary>
      <returns>
        <see langword="true" /> si se debe excluir el valor; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <summary>Obtiene el valor máximo absoluto de <see cref="T:System.TimeSpan" />.</summary>
      <returns>Valor máximo permitido de <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <summary>Obtiene o establece el valor máximo relativo de <see cref="T:System.TimeSpan" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es menor que <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />.</exception>
      <returns>Valor máximo permitido de <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <summary>Obtiene el valor mínimo absoluto de <see cref="T:System.TimeSpan" />.</summary>
      <returns>Valor mínimo permitido de <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <summary>Obtiene o establece el valor mínimo relativo de <see cref="T:System.TimeSpan" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es mayor que <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />.</exception>
      <returns>Valor mínimo permitido de <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <summary>Obtiene una instancia de la clase <see cref="T:System.Configuration.TimeSpanValidator" />.</summary>
      <returns>Instancia del validador <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.TypeNameConverter">
      <summary>Realiza conversiones entre valores de cadena y tipo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.TypeNameConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte un objeto <see cref="T:System.String" /> en un objeto <see cref="T:System.Type" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="data">Objeto <see cref="T:System.String" /> que se va a convertir.</param>
      <exception cref="T:System.ArgumentException">El valor <see cref="T:System.Type" /> no se puede resolver.</exception>
      <returns>
        <see cref="T:System.Type" /> que representa el parámetro <paramref name="data" />.</returns>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte un objeto <see cref="T:System.Type" /> en un objeto <see cref="T:System.String" />.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="value">Valor en el que se va a convertir.</param>
      <param name="type">Tipo al que se va a convertir.</param>
      <returns>
        <see cref="T:System.String" /> que representa el parámetro <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.UriSection">
      <summary>Representa la sección de URI en un archivo de configuración.</summary>
    </member>
    <member name="M:System.Configuration.UriSection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.UriSection" />.</summary>
    </member>
    <member name="P:System.Configuration.UriSection.Idn">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.IdnElement" /> que contiene el valor de configuración para el procesamiento de los nombres de dominio internacionales (IDN) en la clase <see cref="T:System.Uri" />.</summary>
      <returns>Valor de configuración para el procesamiento de los nombres de dominio internacionales (IDN) en la clase <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.IriParsing">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.IriParsingElement" /> que contiene el valor de configuración para el análisis de los identificadores de recursos internacionales (IRI) en la clase <see cref="T:System.Uri" />.</summary>
      <returns>Valor de configuración para el análisis de los identificadores de recursos internacionales (IRI) en la clase <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.SchemeSettings">
      <summary>Obtiene un objeto <see cref="T:System.Configuration.SchemeSettingElementCollection" /> que contiene los valores de configuración para el análisis de esquemas en la clase <see cref="T:System.Uri" />.</summary>
      <returns>Valores de configuración para el análisis de esquemas en la clase <see cref="T:System.Uri" /></returns>
    </member>
    <member name="T:System.Configuration.UserScopedSettingAttribute">
      <summary>Especifica que una propiedad o un grupo de configuración de aplicación contiene los distintos valores para cada usuario de una aplicación. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.UserScopedSettingAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.UserScopedSettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.UserSettingsGroup">
      <summary>Representa una agrupación de secciones relacionadas de la configuración de usuario de un archivo de configuración. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Configuration.UserSettingsGroup.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.UserSettingsGroup" />.</summary>
    </member>
    <member name="T:System.Configuration.ValidatorCallback">
      <summary>Representa un método que se va a llamar después de la validación de un objeto.</summary>
      <param name="value">Método de devolución de llamada.</param>
    </member>
    <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <summary>Convierte una cadena al formato canónico.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte un objeto <see cref="T:System.String" /> a la forma canónica.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="data">Objeto <see cref="T:System.String" /> que se va a convertir.</param>
      <returns>Objeto que representa el valor convertido.</returns>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte un objeto <see cref="T:System.String" /> a la forma canónica.</summary>
      <param name="ctx">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilizado para conversiones de tipo.</param>
      <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se utiliza durante la conversión.</param>
      <param name="value">Valor en el que se va a convertir.</param>
      <param name="type">Tipo al que se va a convertir.</param>
      <returns>Objeto que representa el valor convertido.</returns>
    </member>
    <member name="T:System.Drawing.Configuration.SystemDrawingSection">
      <summary>Representa la sección de configuración que usan las clases en el espacio de nombres <see cref="N:System.Drawing" />.</summary>
    </member>
    <member name="M:System.Drawing.Configuration.SystemDrawingSection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Configuration.SystemDrawingSection" />.</summary>
    </member>
    <member name="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix">
      <summary>Obtiene o establece el sufijo para anexar a un nombre de archivo indicado por <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> cuando se declara un ensamblado con <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> o <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" />.</summary>
      <returns>El sufijo de mapa de bits.</returns>
    </member>
    <member name="T:System.UriIdnScope">
      <summary>Proporciona los posibles valores para el valor de configuración de <see cref="T:System.Configuration.IdnElement" /> en el espacio de nombres <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary>Este valor convierte cualquier nombre de dominio Unicode a su equivalente Punycode (nombres IDN).</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary>Este valor convertirá todos los nombres de dominio Unicode externos para que se utilicen sus equivalentes Punycode (nombres IDN). En este caso, para administrar los nombres internacionales en la intranet local, los servidores DNS que se utilizan para la intranet deben admitir los nombres Unicode.</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary>Este valor no convierte ningún nombre de dominio Unicode para que se use Punycode. Este es el valor predeterminado que es coherente con el comportamiento de .NET Framework 2.0.</summary>
    </member>
  </members>
</doc>