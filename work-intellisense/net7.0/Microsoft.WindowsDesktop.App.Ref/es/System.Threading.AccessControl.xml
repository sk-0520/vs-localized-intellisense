<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.AccessControl</name>
  </assembly>
  <members>
    <member name="T:System.Security.AccessControl.EventWaitHandleAccessRule">
      <summary vsli:raw="Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.">Representa un conjunto de derechos de acceso concedidos o denegados para un usuario o grupo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAccessRule&quot; /&gt; class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, que especifica el usuario o grupo al que se aplica la regla, los derechos de acceso y si se conceden o deniegan los derechos de acceso especificados.</summary>
      <param name="identity" vsli:raw="The user or group the rule applies to. Must be of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; or a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">Usuario o grupo al que se aplica la regla. Debe ser de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleRights&quot; /&gt; values specifying the rights allowed or denied.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que especifica los derechos concedidos o denegados.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; values specifying whether the rights are allowed or denied.">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; specifies an invalid value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;type&quot; /&gt; specifies an invalid value.">
        <paramref name="eventRights" /> especifica un valor no válido.  
  
o bien 
 <paramref name="type" /> especifica un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;eventRights&quot; /&gt; is zero.">
        <paramref name="identity" /> es <see langword="null" />.  
  
o bien 
 <paramref name="eventRights" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identity" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAccessRule&quot; /&gt; class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, que especifica el nombre del usuario o grupo al que se aplica la regla, los derechos de acceso y si se conceden o deniegan los derechos de acceso especificados.</summary>
      <param name="identity" vsli:raw="The name of the user or group the rule applies to.">Nombre del usuario o grupo al que se aplica la regla.</param>
      <param name="eventRights" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleRights&quot; /&gt; values specifying the rights allowed or denied.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que especifica los derechos concedidos o denegados.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; values specifying whether the rights are allowed or denied.">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; specifies an invalid value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;type&quot; /&gt; specifies an invalid value.">
        <paramref name="eventRights" /> especifica un valor no válido.  
  
o bien 
 <paramref name="type" /> especifica un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; is zero.">
        <paramref name="eventRights" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;identity&quot; /&gt; is a zero-length string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;identity&quot; /&gt; is longer than 512 characters.">
        <paramref name="identity" /> es <see langword="null" />.  
  
o bien 
 <paramref name="identity" /> es cadena de longitud cero.  
  
o bien 
 <paramref name="identity" /> tiene más de 512 caracteres.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights">
      <summary vsli:raw="Gets the rights allowed or denied by the access rule.">Obtiene los derechos concedidos o denegados por la regla de acceso.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleRights&quot; /&gt; values indicating the rights allowed or denied by the access rule.">Combinación bit a bit de valores <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que indica los derechos concedidos o denegados mediante la regla de acceso.</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleAuditRule">
      <summary vsli:raw="Represents a set of access rights to be audited for a user or group. This class cannot be inherited.">Representa un conjunto de derechos de acceso que se va a auditar para un usuario o grupo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAuditRule&quot; /&gt; class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />, que especifica el usuario o grupo que se va a auditar, los derechos que se van a auditar y si el resultado de operación auditada es de éxito, error o ambos.</summary>
      <param name="identity" vsli:raw="The user or group the rule applies to. Must be of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; or a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">Usuario o grupo al que se aplica la regla. Debe ser de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleRights&quot; /&gt; values specifying the kinds of access to audit.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que especifica los tipos de acceso que se van a auditar.</param>
      <param name="flags" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.AuditFlags&quot; /&gt; values specifying whether to audit success, failure, or both.">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que indica si el resultado de la operación auditada es de éxito, error o ambos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; specifies an invalid value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;flags&quot; /&gt; specifies an invalid value.">
        <paramref name="eventRights" /> especifica un valor no válido.  
  
o bien 
 <paramref name="flags" /> especifica un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;eventRights&quot; /&gt; is zero.">
        <paramref name="identity" /> es <see langword="null" />.  
  
o bien 
 <paramref name="eventRights" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identity" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights">
      <summary vsli:raw="Gets the access rights affected by the audit rule.">Obtiene los derechos de acceso que se ven afectados por la regla de auditoría.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleRights&quot; /&gt; values that indicates the rights affected by the audit rule.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que indica los derechos afectados por la regla de auditoría.</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleRights">
      <summary vsli:raw="Specifies the access control rights that can be applied to named system event objects.">Especifica los derechos de control de acceso que se pueden aplicar a los objetos de evento de sistema con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions">
      <summary vsli:raw="The right to change the security and audit rules associated with a named event.">Derecho a cambiar la seguridad y las reglas de auditoría asociadas a un evento con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Delete">
      <summary vsli:raw="The right to delete a named event.">Derecho a eliminar un evento con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.FullControl">
      <summary vsli:raw="The right to exert full control over a named event, and to modify its access rules and audit rules.">Derecho a ejercer el control completo sobre un evento con nombre y a modificar sus reglas de acceso y de auditoría.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Modify">
      <summary vsli:raw="The right to set or reset the signaled state of a named event.">El derecho a establecer o restablecer el estado señalado de un evento con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions">
      <summary vsli:raw="The right to open and copy the access rules and audit rules for a named event.">Derecho a abrir y copiar las reglas de acceso y de auditoría para un evento con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Synchronize">
      <summary vsli:raw="The right to wait on a named event.">Derecho a esperar en un evento con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership">
      <summary vsli:raw="The right to change the owner of a named event.">Derecho a cambiar el propietario de un evento con nombre.</summary>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleSecurity">
      <summary vsli:raw="Represents the Windows access control security applied to a named system wait handle. This class cannot be inherited.">Representa la seguridad de control de acceso de Windows aplicada a un identificador de espera de sistema con nombre. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleSecurity&quot; /&gt; class with default values.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> con valores predeterminados.</summary>
      <exception cref="T:System.NotSupportedException">Esta clase no se admite en Windows 98 ni en Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary vsli:raw="Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.">Crea una nueva regla de control de acceso para el usuario indicado con los derechos de acceso, el control de acceso y los marcadores especificados.</summary>
      <param name="identityReference" vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IdentityReference&quot; /&gt; that identifies the user or group the rule applies to.">Objeto <see cref="T:System.Security.Principal.IdentityReference" /> que identifica al usuario o grupo al que se aplica la regla.</param>
      <param name="accessMask" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleRights&quot; /&gt; values specifying the access rights to allow or deny, cast to an integer.">Combinación de valores <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> bit a bit que especifica los derechos de acceso que se van a conceder o denegar, convertidos a un entero.</param>
      <param name="isInherited" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="inheritanceFlags" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="propagationFlags" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; values specifying whether the rights are allowed or denied.">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;accessMask&quot; /&gt;, &lt;paramref name=&quot;inheritanceFlags&quot; /&gt;, &lt;paramref name=&quot;propagationFlags&quot; /&gt;, or &lt;paramref name=&quot;type&quot; /&gt; specifies an invalid value.">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="type" /> especifican un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;accessMask&quot; /&gt; is zero.">
        <paramref name="identityReference" /> es <see langword="null" />.  
  
o bien 
 <paramref name="accessMask" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;, nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identityReference" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAccessRule&quot; /&gt; object representing the specified rights for the specified user.">Objeto <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> que representa los derechos indicados para el usuario especificado.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary vsli:raw="Searches for a matching access control rule with which the new rule can be merged. If none are found, adds the new rule.">Busca una regla de control de acceso coincidente con la que se pueda combinar la nueva regla. Si no se encuentra ninguna, agrega la nueva regla.</summary>
      <param name="rule" vsli:raw="The access control rule to add.">La regla de control de acceso que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary vsli:raw="Searches for an audit rule with which the new rule can be merged. If none are found, adds the new rule.">Busca una regla de auditoría con la que se pueda combinar la nueva regla. Si no se encuentra ninguna, agrega la nueva regla.</summary>
      <param name="rule" vsli:raw="The audit rule to add. The user specified by this rule determines the search.">La regla de auditoría que se va a agregar. El usuario especificado por esta regla determina la búsqueda.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary vsli:raw="Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.">Crea una nueva regla de auditoría, que especifica el usuario al que se aplica la regla, los derechos de acceso que se van a auditar y el resultado que desencadena la regla de auditoría.</summary>
      <param name="identityReference" vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IdentityReference&quot; /&gt; that identifies the user or group the rule applies to.">Objeto <see cref="T:System.Security.Principal.IdentityReference" /> que identifica al usuario o grupo al que se aplica la regla.</param>
      <param name="accessMask" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleRights&quot; /&gt; values specifying the access rights to audit, cast to an integer.">Combinación de valores <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> bit a bit que especifica los derechos de acceso que se van a auditar, convertidos a un entero.</param>
      <param name="isInherited" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="inheritanceFlags" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="propagationFlags" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="flags" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.AuditFlags&quot; /&gt; values specifying whether to audit successful access, failed access, or both.">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especifica si el resultado de la operación auditada de acceso es de éxito, error o ambos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;accessMask&quot; /&gt;, &lt;paramref name=&quot;inheritanceFlags&quot; /&gt;, &lt;paramref name=&quot;propagationFlags&quot; /&gt;, or &lt;paramref name=&quot;flags&quot; /&gt; specifies an invalid value.">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="flags" /> especifican un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;accessMask&quot; /&gt; is zero.">
        <paramref name="identityReference" /> es <see langword="null" />.  
  
o bien 
 <paramref name="accessMask" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;, nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identityReference" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAuditRule&quot; /&gt; object representing the specified audit rule for the specified user. The return type of the method is the base class, &lt;see cref=&quot;T:System.Security.AccessControl.AuditRule&quot; /&gt;, but the return value can be cast safely to the derived class.">Objeto <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> que representa la regla de auditoría indicada para el usuario especificado. El tipo de valor devuelto del método es la clase base, <see cref="T:System.Security.AccessControl.AuditRule" />, pero el valor devuelto se puede convertir sin ningún riesgo a la clase derivada.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary vsli:raw="Searches for an access control rule with the same user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.">Busca una regla de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla de acceso especificada y con marcadores de herencia y propagación compatibles; si encuentra este tipo de regla, quita de ésta los derechos contenidos en la regla de acceso especificada.</summary>
      <param name="rule" vsli:raw="An &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAccessRule&quot; /&gt; that specifies the user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> que especifica el usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> que se va a buscar y un conjunto de marcadores de herencia y propagación con los que una regla coincidente, si se encuentra, debe ser compatible. Especifica los derechos que se van a quitar de la regla compatible, si se encuentra.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a compatible rule is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se ha encontrado una regla compatible; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary vsli:raw="Searches for all access control rules with the same user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; (allow or deny) as the specified rule and, if found, removes them.">Busca todas las reglas de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla especificada y, si las encuentra, las quita.</summary>
      <param name="rule" vsli:raw="An &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAccessRule&quot; /&gt; that specifies the user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; to search for. Any rights specified by this rule are ignored.">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> que especifica el usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> que se va a buscar. Se pasa por alto cualquier derecho especificado por esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary vsli:raw="Searches for an access control rule that exactly matches the specified rule and, if found, removes it.">Busca una regla de control de acceso que coincida exactamente con la regla especificada y, si la encuentra, la quita.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAccessRule&quot; /&gt; to remove.">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary vsli:raw="Searches for an audit rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.">Busca una regla de auditoría con el mismo usuario que la regla especificada y con marcadores de herencia y propagación compatibles; si encuentra una regla compatible, quita de ésta los derechos contenidos en la regla especificada.</summary>
      <param name="rule" vsli:raw="An &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAuditRule&quot; /&gt; that specifies the user to search for and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> que especifica el usuario que se va a buscar y un conjunto de marcadores de herencia y propagación con los que una regla coincidente, si se encuentra, debe ser compatible. Especifica los derechos que se van a quitar de la regla compatible, si se encuentra.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a compatible rule is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se ha encontrado una regla compatible; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary vsli:raw="Searches for all audit rules with the same user as the specified rule and, if found, removes them.">Busca todas las reglas de auditoría con el mismo usuario que la regla especificada y, si las encuentra, las quita.</summary>
      <param name="rule" vsli:raw="An &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAuditRule&quot; /&gt; that specifies the user to search for. Any rights specified by this rule are ignored.">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> que especifica el usuario que se va a buscar. Se pasa por alto cualquier derecho especificado por esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary vsli:raw="Searches for an audit rule that exactly matches the specified rule and, if found, removes it.">Busca una regla de auditoría que coincida exactamente con la regla especificada y, si la encuentra, la quita.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAuditRule&quot; /&gt; to remove.">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary vsli:raw="Removes all access control rules with the same user as the specified rule, regardless of &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt;, and then adds the specified rule.">Quita todas las reglas de control de acceso con el mismo usuario que la regla especificada, independientemente de <see cref="T:System.Security.AccessControl.AccessControlType" />, y, a continuación, agrega la regla especificada.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAccessRule&quot; /&gt; to add. The user specified by this rule determines the rules to remove before this rule is added.">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> que se va a agregar. El usuario especificado por esta regla determina las reglas que se van a quitar antes de agregar esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary vsli:raw="Removes all access control rules with the same user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; (allow or deny) as the specified rule, and then adds the specified rule.">Quita todas las reglas de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla especificada y, a continuación, agrega la regla especificada.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAccessRule&quot; /&gt; to add. The user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; of this rule determine the rules to remove before this rule is added.">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> que se va a agregar. El usuario y el objeto <see cref="T:System.Security.AccessControl.AccessControlType" /> de esta regla determinan las reglas que se van a quitar antes de agregar esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary vsli:raw="Removes all audit rules with the same user as the specified rule, regardless of the &lt;see cref=&quot;T:System.Security.AccessControl.AuditFlags&quot; /&gt; value, and then adds the specified rule.">Quita todas las reglas de auditoría con el mismo usuario que la regla especificada, sin tener en cuenta el valor de <see cref="T:System.Security.AccessControl.AuditFlags" />, y, a continuación, agrega la regla especificada.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAuditRule&quot; /&gt; to add. The user specified by this rule determines the rules to remove before this rule is added.">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> que se va a agregar. El usuario especificado por esta regla determina las reglas que se van a quitar antes de agregar esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType">
      <summary vsli:raw="Gets the enumeration type that the &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleSecurity&quot; /&gt; class uses to represent access rights.">Obtiene el tipo de enumeración que la clase <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> utiliza para representar los derechos de acceso.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleRights&quot; /&gt; enumeration.">Objeto <see cref="T:System.Type" /> que representa la enumeración <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType">
      <summary vsli:raw="Gets the type that the &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleSecurity&quot; /&gt; class uses to represent access rules.">Obtiene el tipo que utiliza la clase <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> para representar las reglas de acceso.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAccessRule&quot; /&gt; class.">Objeto <see cref="T:System.Type" /> que representa la clase <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType">
      <summary vsli:raw="Gets the type that the &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleSecurity&quot; /&gt; class uses to represent audit rules.">Obtiene el tipo que utiliza la clase <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> para representar las reglas de auditoría.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleAuditRule&quot; /&gt; class.">Objeto <see cref="T:System.Type" /> que representa la clase <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAccessRule">
      <summary vsli:raw="Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.">Representa un conjunto de derechos de acceso concedidos o denegados para un usuario o grupo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.MutexAccessRule&quot; /&gt; class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.MutexAccessRule" />, que especifica el usuario o grupo al que se aplica la regla, los derechos de acceso y si se conceden o deniegan los derechos de acceso especificados.</summary>
      <param name="identity" vsli:raw="The user or group the rule applies to. Must be of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; or a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">Usuario o grupo al que se aplica la regla. Debe ser de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.MutexRights&quot; /&gt; values specifying the rights allowed or denied.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.MutexRights" /> que especifica los derechos concedidos o denegados.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; values specifying whether the rights are allowed or denied.">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; specifies an invalid value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;type&quot; /&gt; specifies an invalid value.">
        <paramref name="eventRights" /> especifica un valor no válido.  
  
o bien 
 <paramref name="type" /> especifica un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;eventRights&quot; /&gt; is zero.">
        <paramref name="identity" /> es <see langword="null" />.  
  
o bien 
 <paramref name="eventRights" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identity" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.MutexAccessRule&quot; /&gt; class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.MutexAccessRule" />, que especifica el nombre del usuario o grupo al que se aplica la regla, los derechos de acceso y si se conceden o deniegan los derechos de acceso especificados.</summary>
      <param name="identity" vsli:raw="The name of the user or group the rule applies to.">Nombre del usuario o grupo al que se aplica la regla.</param>
      <param name="eventRights" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.MutexRights&quot; /&gt; values specifying the rights allowed or denied.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.MutexRights" /> que especifica los derechos concedidos o denegados.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; values specifying whether the rights are allowed or denied.">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; specifies an invalid value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;type&quot; /&gt; specifies an invalid value.">
        <paramref name="eventRights" /> especifica un valor no válido.  
  
o bien 
 <paramref name="type" /> especifica un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; is zero.">
        <paramref name="eventRights" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;identity&quot; /&gt; is a zero-length string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;identity&quot; /&gt; is longer than 512 characters.">
        <paramref name="identity" /> es <see langword="null" />.  
  
o bien 
 <paramref name="identity" /> es cadena de longitud cero.  
  
o bien 
 <paramref name="identity" /> tiene más de 512 caracteres.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
      <summary vsli:raw="Gets the rights allowed or denied by the access rule.">Obtiene los derechos concedidos o denegados por la regla de acceso.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.MutexRights&quot; /&gt; values indicating the rights allowed or denied by the access rule.">Combinación bit a bit de valores <see cref="T:System.Security.AccessControl.MutexRights" /> que indica los derechos concedidos o denegados mediante la regla de acceso.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAuditRule">
      <summary vsli:raw="Represents a set of access rights to be audited for a user or group. This class cannot be inherited.">Representa un conjunto de derechos de acceso que se va a auditar para un usuario o grupo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.MutexAuditRule&quot; /&gt; class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.MutexAuditRule" />, que especifica el usuario o grupo que se va a auditar, los derechos que se van a auditar y si el resultado de operación auditada es de éxito, error o ambos.</summary>
      <param name="identity" vsli:raw="The user or group the rule applies to. Must be of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; or a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">Usuario o grupo al que se aplica la regla. Debe ser de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.MutexRights&quot; /&gt; values specifying the kinds of access to audit.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.MutexRights" /> que especifica los tipos de acceso que se van a auditar.</param>
      <param name="flags" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.AuditFlags&quot; /&gt; values specifying whether to audit success, failure, or both.">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que indica si el resultado de la operación auditada es de éxito, error o ambos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; specifies an invalid value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;flags&quot; /&gt; specifies an invalid value.">
        <paramref name="eventRights" /> especifica un valor no válido.  
  
o bien 
 <paramref name="flags" /> especifica un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;eventRights&quot; /&gt; is zero.">
        <paramref name="identity" /> es <see langword="null" />.  
  
o bien 
 <paramref name="eventRights" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be translated to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identity" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo como <see cref="T:System.Security.Principal.NTAccount" /> que se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAuditRule.MutexRights">
      <summary vsli:raw="Gets the access rights affected by the audit rule.">Obtiene los derechos de acceso que se ven afectados por la regla de auditoría.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.MutexRights&quot; /&gt; values that indicates the rights affected by the audit rule.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.MutexRights" /> que indica los derechos afectados por la regla de auditoría.</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexRights">
      <summary vsli:raw="Specifies the access control rights that can be applied to named system mutex objects.">Especifica los derechos de control de acceso que se pueden aplicar a los objetos de exclusión mutua de sistema con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ChangePermissions">
      <summary vsli:raw="The right to change the security and audit rules associated with a named mutex.">Derecho para cambiar la seguridad y las reglas de auditoría asociadas a una exclusión mutua con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Delete">
      <summary vsli:raw="The right to delete a named mutex.">Derecho para eliminar una exclusión mutua con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.FullControl">
      <summary vsli:raw="The right to exert full control over a named mutex, and to modify its access rules and audit rules.">Derecho para ejercer el control total sobre una exclusión mutua con nombre y modificar sus reglas de acceso y de auditoría.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Modify">
      <summary vsli:raw="The right to release a named mutex.">Derecho para liberar una exclusión mutua con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ReadPermissions">
      <summary vsli:raw="The right to open and copy the access rules and audit rules for a named mutex.">Derecho para abrir y copiar las reglas de acceso y de auditoría de una exclusión mutua con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Synchronize">
      <summary vsli:raw="The right to wait on a named mutex.">Derecho para esperar en una exclusión mutua con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.TakeOwnership">
      <summary vsli:raw="The right to change the owner of a named mutex.">Derecho para cambiar el propietario de una exclusión mutua con nombre.</summary>
    </member>
    <member name="T:System.Security.AccessControl.MutexSecurity">
      <summary vsli:raw="Represents the Windows access control security for a named mutex. This class cannot be inherited.">Representa la seguridad de control de acceso de Windows para una exclusión mutua con nombre. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.MutexSecurity&quot; /&gt; class with default values.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.MutexSecurity" /> con valores predeterminados.</summary>
      <exception cref="T:System.NotSupportedException">Esta clase no se admite en Windows 98 ni en Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.MutexSecurity&quot; /&gt; class with the specified sections of the access control security rules from the system mutex with the specified name.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.MutexSecurity" /> con las secciones especificadas de las reglas de seguridad de control de acceso de la exclusión mutua de sistema con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the system mutex whose access control security rules are to be retrieved.">El nombre de la exclusión mutua de sistema cuyas reglas de seguridad de control de acceso se recuperarán.</param>
      <param name="includeSections" vsli:raw="A combination of &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlSections&quot; /&gt; flags specifying the sections to retrieve.">Una combinación de marcadores <see cref="T:System.Security.AccessControl.AccessControlSections" /> que especifica las secciones que se van a recuperar.</param>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="There is no system object with the specified name.">No hay ningún objeto de sistema con el nombre especificado.</exception>
      <exception cref="T:System.NotSupportedException">Esta clase no se admite en Windows 98 ni en Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary vsli:raw="Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.">Crea una nueva regla de control de acceso para el usuario indicado con los derechos de acceso, el control de acceso y los marcadores especificados.</summary>
      <param name="identityReference" vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IdentityReference&quot; /&gt; that identifies the user or group the rule applies to.">Objeto <see cref="T:System.Security.Principal.IdentityReference" /> que identifica al usuario o grupo al que se aplica la regla.</param>
      <param name="accessMask" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.MutexRights&quot; /&gt; values specifying the access rights to allow or deny, cast to an integer.">Combinación de valores <see cref="T:System.Security.AccessControl.MutexRights" /> bit a bit que especifica los derechos de acceso que se van a conceder o denegar, convertidos a un entero.</param>
      <param name="isInherited" vsli:raw="Meaningless for named mutexes, because they have no hierarchy.">No tiene sentido para las exclusiones mutuas con nombre porque no tienen ninguna jerarquía.</param>
      <param name="inheritanceFlags" vsli:raw="Meaningless for named mutexes, because they have no hierarchy.">No tiene sentido para las exclusiones mutuas con nombre porque no tienen ninguna jerarquía.</param>
      <param name="propagationFlags" vsli:raw="Meaningless for named mutexes, because they have no hierarchy.">No tiene sentido para las exclusiones mutuas con nombre porque no tienen ninguna jerarquía.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; values specifying whether the rights are allowed or denied.">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;accessMask&quot; /&gt;, &lt;paramref name=&quot;inheritanceFlags&quot; /&gt;, &lt;paramref name=&quot;propagationFlags&quot; /&gt;, or &lt;paramref name=&quot;type&quot; /&gt; specifies an invalid value.">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="type" /> especifican un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;accessMask&quot; /&gt; is zero.">
        <paramref name="identityReference" /> es <see langword="null" />.  
  
o bien 
 <paramref name="accessMask" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;, nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identityReference" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.MutexAccessRule&quot; /&gt; object representing the specified rights for the specified user.">Objeto <see cref="T:System.Security.AccessControl.MutexAccessRule" /> que representa los derechos indicados para el usuario especificado.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary vsli:raw="Searches for a matching access control rule with which the new rule can be merged. If none are found, adds the new rule.">Busca una regla de control de acceso coincidente con la que se pueda combinar la nueva regla. Si no se encuentra ninguna, agrega la nueva regla.</summary>
      <param name="rule" vsli:raw="The access control rule to add.">La regla de control de acceso que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Principal.IdentityNotMappedException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; cannot be mapped to a known identity.">
        <paramref name="rule" /> no se puede asignar a una identidad conocida.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary vsli:raw="Searches for an audit rule with which the new rule can be merged. If none are found, adds the new rule.">Busca una regla de auditoría con la que se pueda combinar la nueva regla. Si no se encuentra ninguna, agrega la nueva regla.</summary>
      <param name="rule" vsli:raw="The audit rule to add. The user specified by this rule determines the search.">La regla de auditoría que se va a agregar. El usuario especificado por esta regla determina la búsqueda.</param>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary vsli:raw="Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.">Crea una nueva regla de auditoría, que especifica el usuario al que se aplica la regla, los derechos de acceso que se van a auditar y el resultado que desencadena la regla de auditoría.</summary>
      <param name="identityReference" vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IdentityReference&quot; /&gt; that identifies the user or group the rule applies to.">Objeto <see cref="T:System.Security.Principal.IdentityReference" /> que identifica al usuario o grupo al que se aplica la regla.</param>
      <param name="accessMask" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.MutexRights&quot; /&gt; values specifying the access rights to audit, cast to an integer.">Combinación de valores <see cref="T:System.Security.AccessControl.MutexRights" /> bit a bit que especifica los derechos de acceso que se van a auditar, convertidos a un entero.</param>
      <param name="isInherited" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="inheritanceFlags" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="propagationFlags" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="flags" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.AuditFlags&quot; /&gt; values that specify whether to audit successful access, failed access, or both.">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especifica si el resultado de la operación auditada de acceso es de éxito, error o ambos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;accessMask&quot; /&gt;, &lt;paramref name=&quot;inheritanceFlags&quot; /&gt;, &lt;paramref name=&quot;propagationFlags&quot; /&gt;, or &lt;paramref name=&quot;flags&quot; /&gt; specifies an invalid value.">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="flags" /> especifican un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;accessMask&quot; /&gt; is zero.">
        <paramref name="identityReference" /> es <see langword="null" />.  
  
o bien 
 <paramref name="accessMask" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;, nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identityReference" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.MutexAuditRule&quot; /&gt; object representing the specified audit rule for the specified user. The return type of the method is the base class, &lt;see cref=&quot;T:System.Security.AccessControl.AuditRule&quot; /&gt;, but the return value can be cast safely to the derived class.">Objeto <see cref="T:System.Security.AccessControl.MutexAuditRule" /> que representa la regla de auditoría indicada para el usuario especificado. El tipo de valor devuelto del método es la clase base, <see cref="T:System.Security.AccessControl.AuditRule" />, pero el valor devuelto se puede convertir sin ningún riesgo a la clase derivada.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary vsli:raw="Searches for an access control rule with the same user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.">Busca una regla de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla especificada y con marcadores de herencia y propagación compatibles; si encuentra este tipo de regla, quita de ésta los derechos contenidos en la regla de acceso especificada.</summary>
      <param name="rule" vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.MutexAccessRule&quot; /&gt; that specifies the user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> que especifica el usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> que se va a buscar y un conjunto de marcadores de herencia y propagación con los que una regla coincidente, si se encuentra, debe ser compatible. Especifica los derechos que se van a quitar de la regla compatible, si se encuentra.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a compatible rule is found; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha encontrado una regla compatible; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
      <summary vsli:raw="Searches for all access control rules with the same user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; (allow or deny) as the specified rule and, if found, removes them.">Busca todas las reglas de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla especificada y, si las encuentra, las quita.</summary>
      <param name="rule" vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.MutexAccessRule&quot; /&gt; that specifies the user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; to search for. Any rights specified by this rule are ignored.">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> que especifica el usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> que se va a buscar. Se pasa por alto cualquier derecho especificado por esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
      <summary vsli:raw="Searches for an access control rule that exactly matches the specified rule and, if found, removes it.">Busca una regla de control de acceso que coincida exactamente con la regla especificada y, si la encuentra, la quita.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.MutexAccessRule&quot; /&gt; to remove.">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary vsli:raw="Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.">Busca una regla de control de auditoría con el mismo usuario que la regla especificada y con marcadores de herencia y propagación compatibles; si encuentra una regla compatible, quita de ésta los derechos contenidos en la regla especificada.</summary>
      <param name="rule" vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.MutexAuditRule&quot; /&gt; that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.">
        <see cref="T:System.Security.AccessControl.MutexAuditRule" /> que especifica el usuario que se va a buscar y un conjunto de marcadores de herencia y propagación con los que una regla coincidente, si se encuentra, debe ser compatible. Especifica los derechos que se van a quitar de la regla compatible, si se encuentra.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a compatible rule is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se ha encontrado una regla compatible; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
      <summary vsli:raw="Searches for all audit rules with the same user as the specified rule and, if found, removes them.">Busca todas las reglas de auditoría con el mismo usuario que la regla especificada y, si las encuentra, las quita.</summary>
      <param name="rule" vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.MutexAuditRule&quot; /&gt; that specifies the user to search for. Any rights specified by this rule are ignored.">
        <see cref="T:System.Security.AccessControl.MutexAuditRule" /> que especifica el usuario que se va a buscar. Se pasa por alto cualquier derecho especificado por esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
      <summary vsli:raw="Searches for an audit rule that exactly matches the specified rule and, if found, removes it.">Busca una regla de auditoría que coincida exactamente con la regla especificada y, si la encuentra, la quita.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.MutexAuditRule&quot; /&gt; to be removed.">
        <see cref="T:System.Security.AccessControl.MutexAuditRule" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary vsli:raw="Removes all access control rules with the same user as the specified rule, regardless of &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt;, and then adds the specified rule.">Quita todas las reglas de control de acceso con el mismo usuario que la regla especificada, independientemente de <see cref="T:System.Security.AccessControl.AccessControlType" />, y, a continuación, agrega la regla especificada.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.MutexAccessRule&quot; /&gt; to add. The user specified by this rule determines the rules to remove before this rule is added.">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> que se va a agregar. El usuario especificado por esta regla determina las reglas que se van a quitar antes de agregar esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary vsli:raw="Removes all access control rules with the same user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; (allow or deny) as the specified rule, and then adds the specified rule.">Quita todas las reglas de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla especificada y, a continuación, agrega la regla especificada.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.MutexAccessRule&quot; /&gt; to add. The user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; of this rule determine the rules to remove before this rule is added.">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> que se va a agregar. El usuario y el objeto <see cref="T:System.Security.AccessControl.AccessControlType" /> de esta regla determinan las reglas que se van a quitar antes de agregar esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary vsli:raw="Removes all audit rules with the same user as the specified rule, regardless of the &lt;see cref=&quot;T:System.Security.AccessControl.AuditFlags&quot; /&gt; value, and then adds the specified rule.">Quita todas las reglas de auditoría con el mismo usuario que la regla especificada, sin tener en cuenta el valor de <see cref="T:System.Security.AccessControl.AuditFlags" />, y, a continuación, agrega la regla especificada.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.MutexAuditRule&quot; /&gt; to add. The user specified by this rule determines the rules to remove before this rule is added.">
        <see cref="T:System.Security.AccessControl.MutexAuditRule" /> que se va a agregar. El usuario especificado por esta regla determina las reglas que se van a quitar antes de agregar esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
      <summary vsli:raw="Gets the enumeration that the &lt;see cref=&quot;T:System.Security.AccessControl.MutexSecurity&quot; /&gt; class uses to represent access rights.">Obtiene la enumeración que la clase <see cref="T:System.Security.AccessControl.MutexSecurity" /> utiliza para representar los derechos de acceso.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the &lt;see cref=&quot;T:System.Security.AccessControl.MutexRights&quot; /&gt; enumeration.">Objeto <see cref="T:System.Type" /> que representa la enumeración <see cref="T:System.Security.AccessControl.MutexRights" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
      <summary vsli:raw="Gets the type that the &lt;see cref=&quot;T:System.Security.AccessControl.MutexSecurity&quot; /&gt; class uses to represent access rules.">Obtiene el tipo que utiliza la clase <see cref="T:System.Security.AccessControl.MutexSecurity" /> para representar las reglas de acceso.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the &lt;see cref=&quot;T:System.Security.AccessControl.MutexAccessRule&quot; /&gt; class.">Objeto <see cref="T:System.Type" /> que representa la clase <see cref="T:System.Security.AccessControl.MutexAccessRule" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
      <summary vsli:raw="Gets the type that the &lt;see cref=&quot;T:System.Security.AccessControl.MutexSecurity&quot; /&gt; class uses to represent audit rules.">Obtiene el tipo que utiliza la clase <see cref="T:System.Security.AccessControl.MutexSecurity" /> para representar las reglas de auditoría.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the &lt;see cref=&quot;T:System.Security.AccessControl.MutexAuditRule&quot; /&gt; class.">Objeto <see cref="T:System.Type" /> que representa la clase <see cref="T:System.Security.AccessControl.MutexAuditRule" />.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAccessRule">
      <summary vsli:raw="Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.">Representa un conjunto de derechos de acceso concedidos o denegados para un usuario o grupo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAccessRule&quot; /&gt; class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />, que especifica el usuario o grupo al que se aplica la regla, los derechos de acceso y si se conceden o deniegan los derechos de acceso especificados.</summary>
      <param name="identity" vsli:raw="The user or group the rule applies to. Must be of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; or a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">Usuario o grupo al que se aplica la regla. Debe ser de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreRights&quot; /&gt; values specifying the rights allowed or denied.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especifica los derechos concedidos o denegados.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; values specifying whether the rights are allowed or denied.">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; specifies an invalid value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;type&quot; /&gt; specifies an invalid value.">
        <paramref name="eventRights" /> especifica un valor no válido.  
  
o bien 
 <paramref name="type" /> especifica un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;eventRights&quot; /&gt; is zero.">
        <paramref name="identity" /> es <see langword="null" />.  
  
o bien 
 <paramref name="eventRights" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identity" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAccessRule&quot; /&gt; class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />, que especifica el nombre del usuario o grupo al que se aplica la regla, los derechos de acceso y si se conceden o deniegan los derechos de acceso especificados.</summary>
      <param name="identity" vsli:raw="The name of the user or group the rule applies to.">Nombre del usuario o grupo al que se aplica la regla.</param>
      <param name="eventRights" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreRights&quot; /&gt; values specifying the rights allowed or denied.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especifica los derechos concedidos o denegados.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; values specifying whether the rights are allowed or denied.">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; specifies an invalid value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;type&quot; /&gt; specifies an invalid value.">
        <paramref name="eventRights" /> especifica un valor no válido.  
  
o bien 
 <paramref name="type" /> especifica un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; is zero.">
        <paramref name="eventRights" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;identity&quot; /&gt; is a zero-length string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;identity&quot; /&gt; is longer than 512 characters.">
        <paramref name="identity" /> es <see langword="null" />.  
  
o bien 
 <paramref name="identity" /> es cadena de longitud cero.  
  
o bien 
 <paramref name="identity" /> tiene más de 512 caracteres.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
      <summary vsli:raw="Gets the rights allowed or denied by the access rule.">Obtiene los derechos concedidos o denegados por la regla de acceso.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreRights&quot; /&gt; values indicating the rights allowed or denied by the access rule.">Combinación bit a bit de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que indica los derechos concedidos o denegados mediante la regla de acceso.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAuditRule">
      <summary vsli:raw="Represents a set of access rights to be audited for a user or group. This class cannot be inherited.">Representa un conjunto de derechos de acceso que se va a auditar para un usuario o grupo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAuditRule&quot; /&gt; class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />, que especifica el usuario o grupo que se va a auditar, los derechos que se van a auditar y si el resultado de operación auditada es de éxito, error o ambos.</summary>
      <param name="identity" vsli:raw="The user or group the rule applies to. Must be of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; or a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">Usuario o grupo al que se aplica la regla. Debe ser de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="eventRights" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreRights&quot; /&gt; values specifying the kinds of access to audit.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especifica los tipos de acceso que se van a auditar.</param>
      <param name="flags" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.AuditFlags&quot; /&gt; values specifying whether to audit success, failure, or both.">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que indica si el resultado de la operación auditada es de éxito, error o ambos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;eventRights&quot; /&gt; specifies an invalid value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;flags&quot; /&gt; specifies an invalid value.">
        <paramref name="eventRights" /> especifica un valor no válido.  
  
o bien 
 <paramref name="flags" /> especifica un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;eventRights&quot; /&gt; is zero.">
        <paramref name="identity" /> es <see langword="null" />.  
  
o bien 
 <paramref name="eventRights" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identity&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt; nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identity" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights">
      <summary vsli:raw="Gets the access rights affected by the audit rule.">Obtiene los derechos de acceso que se ven afectados por la regla de auditoría.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreRights&quot; /&gt; values that indicates the rights affected by the audit rule.">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que indica los derechos afectados por la regla de auditoría.</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreRights">
      <summary vsli:raw="Specifies the access control rights that can be applied to named system semaphore objects.">Especifica los derechos de control de acceso que se pueden aplicar a los objetos de semáforo de sistema con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions">
      <summary vsli:raw="The right to change the security and audit rules associated with a named semaphore.">Derecho para cambiar las reglas de auditoría y de seguridad asociadas a un semáforo con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Delete">
      <summary vsli:raw="The right to delete a named semaphore.">Derecho para eliminar un semáforo con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.FullControl">
      <summary vsli:raw="The right to exert full control over a named semaphore, and to modify its access rules and audit rules.">Derecho para ejercer el control total sobre un semáforo con nombre y modificar sus reglas de acceso y de auditoría.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Modify">
      <summary vsli:raw="The right to release a named semaphore.">Derecho para liberar un semáforo con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions">
      <summary vsli:raw="The right to open and copy the access rules and audit rules for a named semaphore.">Derecho para abrir y copiar las reglas de acceso y de auditoría de un semáforo con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Synchronize">
      <summary vsli:raw="The right to wait on a named semaphore.">Derecho para esperar un semáforo con nombre.</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.TakeOwnership">
      <summary vsli:raw="The right to change the owner of a named semaphore.">Derecho para cambiar el propietario de un semáforo con nombre.</summary>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreSecurity">
      <summary vsli:raw="Represents the Windows access control security for a named semaphore. This class cannot be inherited.">Representa la seguridad de control de acceso de Windows para semáforos con nombre. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreSecurity&quot; /&gt; class with default values.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> con valores predeterminados.</summary>
      <exception cref="T:System.NotSupportedException">Esta clase no se admite en Windows 98 ni en Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreSecurity&quot; /&gt; class with the specified sections of the access control security rules from the system semaphore with the specified name.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> con las secciones especificadas de las reglas de seguridad de control de acceso del semáforo de sistema con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the system semaphore whose access control security rules are to be retrieved.">El nombre del semáforo de sistema cuyas reglas de seguridad de control de acceso se recuperarán.</param>
      <param name="includeSections" vsli:raw="A combination of &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlSections&quot; /&gt; flags specifying the sections to retrieve.">Una combinación de marcadores <see cref="T:System.Security.AccessControl.AccessControlSections" /> que especifica las secciones que se van a recuperar.</param>
      <exception cref="T:System.NotSupportedException">Esta clase no se admite en Windows 98 ni en Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary vsli:raw="Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.">Crea una nueva regla de control de acceso para el usuario indicado con los derechos de acceso, el control de acceso y los marcadores especificados.</summary>
      <param name="identityReference" vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IdentityReference&quot; /&gt; that identifies the user or group the rule applies to.">Objeto <see cref="T:System.Security.Principal.IdentityReference" /> que identifica al usuario o grupo al que se aplica la regla.</param>
      <param name="accessMask" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreRights&quot; /&gt; values specifying the access rights to allow or deny, cast to an integer.">Combinación de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> bit a bit que especifica los derechos de acceso que se van a conceder o denegar, convertidos a un entero.</param>
      <param name="isInherited" vsli:raw="Meaningless for named semaphores, because they have no hierarchy.">No tiene sentido para los semáforos con nombre porque no tienen ninguna jerarquía.</param>
      <param name="inheritanceFlags" vsli:raw="Meaningless for named semaphores, because they have no hierarchy.">No tiene sentido para los semáforos con nombre porque no tienen ninguna jerarquía.</param>
      <param name="propagationFlags" vsli:raw="Meaningless for named semaphores, because they have no hierarchy.">No tiene sentido para los semáforos con nombre porque no tienen ninguna jerarquía.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; values specifying whether the rights are allowed or denied.">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;accessMask&quot; /&gt;, &lt;paramref name=&quot;inheritanceFlags&quot; /&gt;, &lt;paramref name=&quot;propagationFlags&quot; /&gt;, or &lt;paramref name=&quot;type&quot; /&gt; specifies an invalid value.">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="type" /> especifican un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;accessMask&quot; /&gt; is zero.">
        <paramref name="identityReference" /> es <see langword="null" />.  
  
o bien 
 <paramref name="accessMask" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;, nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identityReference" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAccessRule&quot; /&gt; object representing the specified rights for the specified user.">Objeto <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que representa los derechos indicados para el usuario especificado.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary vsli:raw="Searches for a matching rule with which the new rule can be merged. If none are found, adds the new rule.">Busca una regla coincidente con la que se pueda combinar la nueva regla. Si no se encuentra ninguna, agrega la nueva regla.</summary>
      <param name="rule" vsli:raw="The access control rule to add.">La regla de control de acceso que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary vsli:raw="Searches for an audit rule with which the new rule can be merged. If none are found, adds the new rule.">Busca una regla de auditoría con la que se pueda combinar la nueva regla. Si no se encuentra ninguna, agrega la nueva regla.</summary>
      <param name="rule" vsli:raw="The audit rule to add. The user specified by this rule determines the search.">La regla de auditoría que se va a agregar. El usuario especificado por esta regla determina la búsqueda.</param>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary vsli:raw="Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.">Crea una nueva regla de auditoría, que especifica el usuario al que se aplica la regla, los derechos de acceso que se van a auditar y el resultado que desencadena la regla de auditoría.</summary>
      <param name="identityReference" vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IdentityReference&quot; /&gt; that identifies the user or group the rule applies to.">Objeto <see cref="T:System.Security.Principal.IdentityReference" /> que identifica al usuario o grupo al que se aplica la regla.</param>
      <param name="accessMask" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreRights&quot; /&gt; values specifying the access rights to audit, cast to an integer.">Combinación de valores <see cref="T:System.Security.AccessControl.SemaphoreRights" /> bit a bit que especifica los derechos de acceso que se van a auditar, convertidos a un entero.</param>
      <param name="isInherited" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="inheritanceFlags" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="propagationFlags" vsli:raw="Meaningless for named wait handles, because they have no hierarchy.">No tiene sentido para los marcadores de espera con nombre porque no tienen ninguna jerarquía.</param>
      <param name="flags" vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Security.AccessControl.AuditFlags&quot; /&gt; values that specify whether to audit successful access, failed access, or both.">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especifica si el resultado de la operación auditada de acceso es de éxito, error o ambos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;accessMask&quot; /&gt;, &lt;paramref name=&quot;inheritanceFlags&quot; /&gt;, &lt;paramref name=&quot;propagationFlags&quot; /&gt;, or &lt;paramref name=&quot;flags&quot; /&gt; specifies an invalid value.">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="flags" /> especifican un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;accessMask&quot; /&gt; is zero.">
        <paramref name="identityReference" /> es <see langword="null" />.  
  
o bien 
 <paramref name="accessMask" /> es cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;identityReference&quot; /&gt; is neither of type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;, nor of a type such as &lt;see cref=&quot;T:System.Security.Principal.NTAccount&quot; /&gt; that can be converted to type &lt;see cref=&quot;T:System.Security.Principal.SecurityIdentifier&quot; /&gt;.">
        <paramref name="identityReference" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAuditRule&quot; /&gt; object representing the specified audit rule for the specified user. The return type of the method is the base class, &lt;see cref=&quot;T:System.Security.AccessControl.AuditRule&quot; /&gt;, but the return value can be cast safely to the derived class.">Objeto <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que representa la regla de auditoría indicada para el usuario especificado. El tipo de valor devuelto del método es la clase base, <see cref="T:System.Security.AccessControl.AuditRule" />, pero el valor devuelto se puede convertir sin ningún riesgo a la clase derivada.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary vsli:raw="Searches for an access control rule with the same user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.">Busca una regla de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla especificada y con marcadores de herencia y propagación compatibles; si encuentra este tipo de regla, quita de ésta los derechos contenidos en la regla de acceso especificada.</summary>
      <param name="rule" vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAccessRule&quot; /&gt; that specifies the user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que especifica el usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> que se va a buscar y un conjunto de marcadores de herencia y propagación con los que una regla coincidente, si se encuentra, debe ser compatible. Especifica los derechos que se van a quitar de la regla compatible, si se encuentra.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a compatible rule is found; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha encontrado una regla compatible; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary vsli:raw="Searches for all access control rules with the same user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; (allow or deny) as the specified rule and, if found, removes them.">Busca todas las reglas de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla especificada y, si las encuentra, las quita.</summary>
      <param name="rule" vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAccessRule&quot; /&gt; that specifies the user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; to search for. Any rights specified by this rule are ignored.">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que especifica el usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> que se va a buscar. Se pasa por alto cualquier derecho especificado por esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary vsli:raw="Searches for an access control rule that exactly matches the specified rule and, if found, removes it.">Busca una regla de control de acceso que coincida exactamente con la regla especificada y, si la encuentra, la quita.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAccessRule&quot; /&gt; to remove.">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary vsli:raw="Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.">Busca una regla de control de auditoría con el mismo usuario que la regla especificada y con marcadores de herencia y propagación compatibles; si encuentra una regla compatible, quita de ésta los derechos contenidos en la regla especificada.</summary>
      <param name="rule" vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAuditRule&quot; /&gt; that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.">
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que especifica el usuario que se va a buscar y un conjunto de marcadores de herencia y propagación con los que una regla coincidente, si se encuentra, debe ser compatible. Especifica los derechos que se van a quitar de la regla compatible, si se encuentra.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a compatible rule is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se ha encontrado una regla compatible; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary vsli:raw="Searches for all audit rules with the same user as the specified rule and, if found, removes them.">Busca todas las reglas de auditoría con el mismo usuario que la regla especificada y, si las encuentra, las quita.</summary>
      <param name="rule" vsli:raw="A &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAuditRule&quot; /&gt; that specifies the user to search for. Any rights specified by this rule are ignored.">
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que especifica el usuario que se va a buscar. Se pasa por alto cualquier derecho especificado por esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary vsli:raw="Searches for an audit rule that exactly matches the specified rule and, if found, removes it.">Busca una regla de auditoría que coincida exactamente con la regla especificada y, si la encuentra, la quita.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAuditRule&quot; /&gt; to remove.">
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary vsli:raw="Removes all access control rules with the same user as the specified rule, regardless of &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt;, and then adds the specified rule.">Quita todas las reglas de control de acceso con el mismo usuario que la regla especificada, independientemente de <see cref="T:System.Security.AccessControl.AccessControlType" />, y, a continuación, agrega la regla especificada.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAccessRule&quot; /&gt; to add. The user specified by this rule determines the rules to remove before this rule is added.">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que se va a agregar. El usuario especificado por esta regla determina las reglas que se van a quitar antes de agregar esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary vsli:raw="Removes all access control rules with the same user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; (allow or deny) as the specified rule, and then adds the specified rule.">Quita todas las reglas de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla especificada y, a continuación, agrega la regla especificada.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAccessRule&quot; /&gt; to add. The user and &lt;see cref=&quot;T:System.Security.AccessControl.AccessControlType&quot; /&gt; of this rule determine the rules to remove before this rule is added.">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> que se va a agregar. El usuario y el objeto <see cref="T:System.Security.AccessControl.AccessControlType" /> de esta regla determinan las reglas que se van a quitar antes de agregar esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary vsli:raw="Removes all audit rules with the same user as the specified rule, regardless of the &lt;see cref=&quot;T:System.Security.AccessControl.AuditFlags&quot; /&gt; value, and then adds the specified rule.">Quita todas las reglas de auditoría con el mismo usuario que la regla especificada, sin tener en cuenta el valor de <see cref="T:System.Security.AccessControl.AuditFlags" />, y, a continuación, agrega la regla especificada.</summary>
      <param name="rule" vsli:raw="The &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAuditRule&quot; /&gt; to add. The user specified by this rule determines the rules to remove before this rule is added.">
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> que se va a agregar. El usuario especificado por esta regla determina las reglas que se van a quitar antes de agregar esta regla.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rule" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
      <summary vsli:raw="Gets the enumeration that the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreSecurity&quot; /&gt; class uses to represent access rights.">Obtiene la enumeración que la clase <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> utiliza para representar los derechos de acceso.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreRights&quot; /&gt; enumeration.">Objeto <see cref="T:System.Type" /> que representa la enumeración <see cref="T:System.Security.AccessControl.SemaphoreRights" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
      <summary vsli:raw="Gets the type that the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreSecurity&quot; /&gt; class uses to represent access rules.">Obtiene el tipo que utiliza la clase <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> para representar las reglas de acceso.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAccessRule&quot; /&gt; class.">Objeto <see cref="T:System.Type" /> que representa la clase <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />.</returns>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
      <summary vsli:raw="Gets the type that the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreSecurity&quot; /&gt; class uses to represent audit rules.">Obtiene el tipo que utiliza la clase <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> para representar las reglas de auditoría.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreAuditRule&quot; /&gt; class.">Objeto <see cref="T:System.Type" /> que representa la clase <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />.</returns>
    </member>
    <member name="T:System.Threading.EventWaitHandleAcl">
      <summary vsli:raw="Provides a Windows-specific extension method for creating &lt;see cref=&quot;T:System.Threading.EventWaitHandle&quot; /&gt; objects with specific access control list (ACL) security.">Proporciona un método de extensión específico de Windows para crear objetos <see cref="T:System.Threading.EventWaitHandle" /> con seguridad específica de la lista de control de acceso (ACL).</summary>
    </member>
    <member name="M:System.Threading.EventWaitHandleAcl.Create(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)">
      <summary vsli:raw="Gets or creates an &lt;see cref=&quot;T:System.Threading.EventWaitHandle&quot; /&gt; instance, allowing a &lt;see cref=&quot;T:System.Security.AccessControl.EventWaitHandleSecurity&quot; /&gt; instance to be optionally specified to set it during the event creation.">Obtiene o crea una instancia de <see cref="T:System.Threading.EventWaitHandle" />, lo que permite especificar opcionalmente una instancia de <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> para establecerla durante la creación del evento.</summary>
      <param name="initialState" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to set the initial state to signaled if the named event is created as a result of this call; &lt;see langword=&quot;false&quot; /&gt; to set it to non-signaled.">
        <see langword="true" /> para establecer el estado inicial en señalado si el evento con nombre se crea como resultado de esta llamada; <see langword="false" /> para establecerlo en no señalado.</param>
      <param name="mode" vsli:raw="One of the enum values that determines whether the event resets automatically or manually.">Uno de los valores de enumeración que determina si el evento se restablece automática o manualmente.</param>
      <param name="name" vsli:raw="The name, if the synchronization object is to be shared with other processes; otherwise, &lt;see langword=&quot;null&quot; /&gt; or an empty string. The name is case-sensitive. The backslash character (\) is reserved and may only be used to specify a namespace. For more information on namespaces, see the remarks section. There may be further restrictions on the name depending on the operating system. For example, on Unix-based operating systems, the name after excluding the namespace must be a valid file name.">Nombre, si el evento se va a compartir con otros procesos; en caso contrario, <see langword="null" /> o una cadena vacía.</param>
      <param name="createdNew" vsli:raw="When this method returns, this argument is always set to &lt;see langword=&quot;true&quot; /&gt; if a local event is created; that is, when &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;. If &lt;paramref name=&quot;name&quot; /&gt; has a valid, non-empty value, this argument is set to &lt;see langword=&quot;true&quot; /&gt; when the system event is created, or it is set to &lt;see langword=&quot;false&quot; /&gt; if an existing system event is found with that name.">Cuando este método devuelve un valor, este argumento siempre se establece en <see langword="true" /> si se crea un evento local, es decir, cuando <paramref name="name" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />. Si <paramref name="name" /> tiene un valor no vacío válido, este argumento se establece en <see langword="true" /> cuando se crea el evento del sistema, o bien se establece en <see langword="false" /> si se encuentra un evento del sistema existente con ese nombre.</param>
      <param name="eventSecurity" vsli:raw="The optional Windows access control security to apply.">Seguridad del control de acceso de Windows opcional que se va a aplicar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&#xA;          The &lt;paramref name=&quot;mode&quot; /&gt; enum value was out of legal range.&#xA;&#xA;-or-&#xA;&#xA;.NET Framework only: &lt;paramref name=&quot;name&quot; /&gt; is longer than MAX_PATH (260 characters).">Solo .NET Framework: la longitud de <paramref name="name" /> es superior a MAX_PATH (260 caracteres).

o bien

Solo .NET Framework: el valor de enumeración <paramref name="mode" /> estaba fuera del intervalo legal.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;mode&quot; /&gt; enum value was out of legal range. In some cases &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; is thrown instead.">El valor de enumeración <paramref name="mode" /> está fuera del intervalo válido.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="Windows only: &lt;paramref name=&quot;name&quot; /&gt; specified an unknown namespace. See Object Names for more information.">No se encuentra una parte de la ruta de acceso especificada en <paramref name="name" />.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException" vsli:raw="A synchronization object with the provided &lt;paramref name=&quot;name&quot; /&gt; cannot be created. A synchronization object of a different type might have the same name.">No se encontró un evento de sincronización de todo el sistema con el objeto <paramref name="name" /> proporcionado.
O bien, no se puede crear un objeto <see cref="T:System.Threading.EventWaitHandle" /> con un nombre <paramref name="name" /> para todo el sistema. Un objeto <see cref="T:System.Threading.EventWaitHandle" /> de un tipo diferente podría tener el mismo nombre.</exception>
      <returns vsli:raw="An object that represents an event wait handle as requested.">Objeto que representa un controlador de espera de evento según se solicite.</returns>
    </member>
    <member name="T:System.Threading.MutexAcl">
      <summary vsli:raw="Provides a Windows-specific extension method for creating &lt;see cref=&quot;T:System.Threading.Mutex&quot; /&gt; objects with specific access control list (ACL) security.">Proporciona un método de extensión específico de Windows para crear objetos <see cref="T:System.Threading.Mutex" /> con seguridad de la lista de control de acceso (ACL) específica.</summary>
    </member>
    <member name="M:System.Threading.MutexAcl.Create(System.Boolean,System.String,System.Boolean@,System.Security.AccessControl.MutexSecurity)">
      <summary vsli:raw="Gets or creates &lt;see cref=&quot;T:System.Threading.Mutex&quot; /&gt; instance, allowing a &lt;see cref=&quot;T:System.Security.AccessControl.MutexSecurity&quot; /&gt; to be optionally specified to set it during the mutex creation.">Obtiene o crea una instancia de <see cref="T:System.Threading.Mutex" />, lo que permite especificar opcionalmente un objeto <see cref="T:System.Security.AccessControl.MutexSecurity" /> para establecerlo durante la creación de la exclusión mutua.</summary>
      <param name="initiallyOwned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to give the calling thread initial ownership of the named system mutex if the named system mutex is created as a result of this call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para otorgar al subproceso que realiza la llamada la propiedad inicial de la exclusión mutua del sistema con nombre si esta se crea como resultado de dicha llamada; de lo contrario, <see langword="false" />.</param>
      <param name="name" vsli:raw="The name, if the synchronization object is to be shared with other processes; otherwise, &lt;see langword=&quot;null&quot; /&gt; or an empty string. The name is case-sensitive. The backslash character (\) is reserved and may only be used to specify a namespace. For more information on namespaces, see the remarks section. There may be further restrictions on the name depending on the operating system. For example, on Unix-based operating systems, the name after excluding the namespace must be a valid file name.">Nombre óptimo de la exclusión mutua del sistema. Si este argumento se establece en <see langword="null" /> o <see cref="F:System.String.Empty" />, se crea una exclusión mutua local.</param>
      <param name="createdNew" vsli:raw="When this method returns, this argument is always set to &lt;see langword=&quot;true&quot; /&gt; if a local mutex is created; that is, when &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;. If &lt;paramref name=&quot;name&quot; /&gt; has a valid non-empty value, this argument is set to &lt;see langword=&quot;true&quot; /&gt; when the system mutex is created, or it is set to &lt;see langword=&quot;false&quot; /&gt; if an existing system mutex is found with that name. This parameter is passed uninitialized.">Cuando este método devuelve un valor, este argumento siempre se establece en <see langword="true" /> si se crea una exclusión mutua local, es decir, cuando <paramref name="name" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />. Si <paramref name="name" /> tiene un valor no vacío válido, este argumento se establece en <see langword="true" /> cuando se crea la exclusión mutua del sistema, o bien se establece en <see langword="false" /> si se encuentra una exclusión mutua del sistema existente con ese nombre. Este parámetro se pasa sin inicializar.</param>
      <param name="mutexSecurity" vsli:raw="The optional mutex access control security to apply.">Seguridad del control de acceso de exclusión mutua opcional que se va a aplicar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&#xA;          .NET Framework only: &lt;paramref name=&quot;name&quot; /&gt; is longer than MAX_PATH (260 characters).">Solo .NET Framework: La longitud del nombre supera el límite máximo.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException" vsli:raw="A synchronization object with the provided &lt;paramref name=&quot;name&quot; /&gt; cannot be created. A synchronization object of a different type might have the same name.">No se puede crear un controlador de exclusión mutua con un valor <paramref name="name" /> para todo el sistema. Un controlador de exclusión mutua de un tipo diferente podría tener el mismo nombre.</exception>
      <returns vsli:raw="An object that represents a system mutex, if named, or a local mutex, if nameless.">Objeto que representa una exclusión mutua del sistema, si tiene nombre, o una exclusión mutua local, si no tiene nombre.</returns>
    </member>
    <member name="T:System.Threading.SemaphoreAcl">
      <summary vsli:raw="Provides a Windows-specific extension method for creating &lt;see cref=&quot;T:System.Threading.Semaphore&quot; /&gt; objects with specific access control list (ACL) security.">Proporciona un método de extensión específico de Windows para crear objetos <see cref="T:System.Threading.Semaphore" /> con seguridad de la lista de control de acceso (ACL) específica.</summary>
    </member>
    <member name="M:System.Threading.SemaphoreAcl.Create(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)">
      <summary vsli:raw="Gets or creates an &lt;see cref=&quot;T:System.Threading.Semaphore&quot; /&gt; instance, allowing a &lt;see cref=&quot;T:System.Security.AccessControl.SemaphoreSecurity&quot; /&gt; instance to be optionally specified to set it during the event creation.">Obtiene o crea una instancia de <see cref="T:System.Threading.Semaphore" />, lo que permite especificar opcionalmente una instancia de <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> para establecerla durante la creación del evento.</summary>
      <param name="initialCount" vsli:raw="The initial number of requests for the semaphore that can be satisfied concurrently.">Número inicial de solicitudes para el semáforo que se puede satisfacer simultáneamente.</param>
      <param name="maximumCount" vsli:raw="The maximum number of requests for the semaphore that can be satisfied concurrently.">Número máximo de solicitudes para el semáforo que se puede satisfacer simultáneamente.</param>
      <param name="name" vsli:raw="The name, if the synchronization object is to be shared with other processes; otherwise, &lt;see langword=&quot;null&quot; /&gt; or an empty string. The name is case-sensitive. The backslash character (\) is reserved and may only be used to specify a namespace. For more information on namespaces, see the remarks section. There may be further restrictions on the name depending on the operating system. For example, on Unix-based operating systems, the name after excluding the namespace must be a valid file name.">Argumento opcional para crear un semáforo de sistema. Establézcalo en <see langword="null" /> o <see cref="F:System.String.Empty" /> para crear un semáforo local.</param>
      <param name="createdNew" vsli:raw="When this method returns, this argument is always set to &lt;see langword=&quot;true&quot; /&gt; if a local semaphore is created; that is, when &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;. If &lt;paramref name=&quot;name&quot; /&gt; has a valid, non-empty value, this argument is set to &lt;see langword=&quot;true&quot; /&gt; when the system semaphore is created, or it is set to &lt;see langword=&quot;false&quot; /&gt; if an existing system semaphore is found with that name. This parameter is passed uninitialized.">Cuando este método devuelve un valor, este argumento siempre se establece en <see langword="true" /> si se crea un semáforo local, es decir, cuando <paramref name="name" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />. Si <paramref name="name" /> tiene un valor no vacío válido, este argumento se establece en <see langword="true" /> cuando se crea el semáforo del sistema, o bien se establece en <see langword="false" /> si se encuentra un semáforo del sistema existente con ese nombre. Este parámetro se pasa sin inicializar.</param>
      <param name="semaphoreSecurity" vsli:raw="The optional semaphore access control security to apply.">Seguridad del control de acceso de semáforo opcional que se va a aplicar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCount&quot; /&gt; is a negative number.&#xA; -or- &#xA;&#xA;&lt;paramref name=&quot;maximumCount&quot; /&gt; is not a positive number.">
        <paramref name="initialCount" /> es un número negativo.
o bien

<paramref name="maximumCount" /> no es un número positivo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;initialCount&quot; /&gt; is greater than &lt;paramref name=&quot;maximumCount&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;.NET Framework only: &lt;paramref name=&quot;name&quot; /&gt; is longer than MAX_PATH (260 characters).">
        <paramref name="initialCount" /> es mayor que <paramref name="maximumCount" />.</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException" vsli:raw="A synchronization object with the provided &lt;paramref name=&quot;name&quot; /&gt; cannot be created. A synchronization object of a different type might have the same name.">No se puede crear un controlador de semáforo con el nombre "<paramref name="name" />" para todo el sistema. Un controlador de semáforo de un tipo diferente podría tener el mismo nombre.</exception>
      <returns vsli:raw="An object that represents a system semaphore, if named, or a local semaphore, if nameless.">Objeto que representa un semáforo del sistema, si tiene nombre, o un semáforo local, si no tiene nombre.</returns>
    </member>
    <member name="T:System.Threading.ThreadingAclExtensions">
      <summary vsli:raw="Provides Windows-specific extension methods for managing the access control list (ACL) security descriptors for &lt;see cref=&quot;T:System.Threading.EventWaitHandle&quot; /&gt;, &lt;see cref=&quot;T:System.Threading.Mutex&quot; /&gt;, and &lt;see cref=&quot;T:System.Threading.Semaphore&quot; /&gt;.">Proporciona métodos de extensión específicos de Windows para administrar los descriptores de seguridad de la lista de control de acceso (ACL) de <see cref="T:System.Threading.EventWaitHandle" />, <see cref="T:System.Threading.Mutex" /> y <see cref="T:System.Threading.Semaphore" />.</summary>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)">
      <summary vsli:raw="Returns the security descriptors for the specified &lt;paramref name=&quot;handle&quot; /&gt;.">Devuelve los descriptores de seguridad para el objeto <paramref name="handle" /> especificado.</summary>
      <param name="handle" vsli:raw="The event wait handle from which the security descriptors should be returned.">Identificador de espera de evento del que se deben devolver los descriptores de seguridad.</param>
      <returns vsli:raw="The security descriptors for the specified &lt;paramref name=&quot;handle&quot; /&gt;.">Descriptores de seguridad para el objeto <paramref name="handle" /> especificado.</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)">
      <summary vsli:raw="Returns the security descriptors for the specified &lt;paramref name=&quot;mutex&quot; /&gt;.">Devuelve los descriptores de seguridad para el objeto <paramref name="mutex" /> especificado.</summary>
      <param name="mutex" vsli:raw="The mutex from which the security descriptors should be returned.">La exclusión mutua de la que se deben devolver los descriptores de seguridad.</param>
      <returns vsli:raw="The security descriptors for the specified &lt;paramref name=&quot;mutex&quot; /&gt;.">Descriptores de seguridad para el objeto <paramref name="mutex" /> especificado.</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)">
      <summary vsli:raw="Returns the security descriptors for the specified &lt;paramref name=&quot;semaphore&quot; /&gt;.">Devuelve los descriptores de seguridad para el objeto <paramref name="semaphore" /> especificado.</summary>
      <param name="semaphore" vsli:raw="The semaphore from which the security descriptors should be returned.">Semáforo del que se deben devolver los descriptores de seguridad.</param>
      <returns vsli:raw="The security descriptors for the specified semaphore.">Descriptores de seguridad para el semáforo especificado.</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)">
      <summary vsli:raw="Sets the security descriptors for the specified event wait handle.">Establece los descriptores de seguridad para el identificador de espera de evento especificado.</summary>
      <param name="handle" vsli:raw="The event wait handle onto which the &lt;paramref name=&quot;eventSecurity&quot; /&gt; will be applied.">Identificador de espera de evento en el que se aplicará <paramref name="eventSecurity" />.</param>
      <param name="eventSecurity" vsli:raw="The security descriptors to apply to the specified &lt;paramref name=&quot;handle&quot; /&gt;.">Descriptores de seguridad que se van a aplicar al objeto <paramref name="handle" /> especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;eventSecurity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="eventSecurity" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)">
      <summary vsli:raw="Sets the security descriptors for the specified mutex.">Establece los descriptores de seguridad para la exclusión mutua especificada.</summary>
      <param name="mutex" vsli:raw="The mutex onto which the &lt;paramref name=&quot;mutexSecurity&quot; /&gt; will be applied.">La exclusión mutua en la que se aplicará <paramref name="mutexSecurity" />.</param>
      <param name="mutexSecurity" vsli:raw="The security descriptors to apply to the specified &lt;paramref name=&quot;mutex&quot; /&gt;.">Descriptores de seguridad que se van a aplicar al objeto <paramref name="mutex" /> especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mutexSecurity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mutexSecurity" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)">
      <summary vsli:raw="Sets the security descriptors for the specified semaphore.">Establece los descriptores de seguridad para el semáforo especificado.</summary>
      <param name="semaphore" vsli:raw="The semaphore onto which the &lt;paramref name=&quot;semaphoreSecurity&quot; /&gt; will be applied.">Semáforo en el que se aplicará <paramref name="semaphoreSecurity" />.</param>
      <param name="semaphoreSecurity" vsli:raw="The security descriptors to apply to the specified &lt;paramref name=&quot;semaphore&quot; /&gt;.">Descriptores de seguridad que se van a aplicar al objeto <paramref name="semaphore" /> especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;semaphoreSecurity&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="semaphoreSecurity" /> es <see langword="null" />.</exception>
    </member>
  </members>
</doc>