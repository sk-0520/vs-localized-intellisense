<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Proporciona una implementación de <see cref="T:System.Windows.WeakEventManager" /> para que pueda usar el modelo de "agente de escucha de evento débil" con el fin de asociar agentes de escucha para el evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Agrega el controlador de eventos especificado, que se llama cuando el origen especificado provoca el evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> .</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Delegado que controla el evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Agrega el agente de escucha especificado al evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> del origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Objeto que se va a agregar como agente de escucha.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Devuelve un nuevo objeto para contener agentes de escucha para el evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Nuevo objeto para contener agentes de escucha para el evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Quita el controlador de eventos especificado del origen indicado.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">Delegado que controla el evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">Quita el agente de escucha especificado del evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> del origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
      <param name="listener" vsli:raw="The listener to remove.">Agente de escucha que se va a quitar.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Inicia la escucha del evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> en el origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">Detiene la escucha del evento <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> en el origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Proporciona una implementación de <see cref="T:System.Windows.WeakEventManager" /> para que pueda usar el modelo de "agente de escucha de evento débil" con el fin de asociar agentes de escucha para el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Agrega el controlador de eventos especificado, que se llama cuando el origen especificado provoca el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> .</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Agrega el agente de escucha especificado al evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> del origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Objeto que se va a agregar como agente de escucha.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Devuelve un nuevo objeto para contener agentes de escucha para el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Nuevo objeto para contener agentes de escucha para el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Quita el controlador de eventos especificado del origen indicado.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">Delegado que controla el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">Quita el agente de escucha especificado del evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> del origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
      <param name="listener" vsli:raw="The listener to remove.">Agente de escucha que se va a quitar.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Inicia la escucha del evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> en el origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">Detiene la escucha del evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> en el origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary vsli:raw="Provides information for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Proporciona información del evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class with the specified &lt;paramref name=&quot;isCancelable&quot; /&gt; value.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> con el valor <paramref name="isCancelable" /> especificado.</summary>
      <param name="isCancelable" vsli:raw="A value that indicates whether the event is cancelable.">Valor que indica si se puede cancelar el evento.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary vsli:raw="Gets or sets a value that indicates whether to cancel the event.">Obtiene o establece un valor que indica si se cancelará el evento.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the value of &lt;see cref=&quot;P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Si el valor de <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> es <see langword="false" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is to be canceled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se va a cancelar el evento; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary vsli:raw="Gets a value that indicates whether the event is cancelable.">Obtiene un valor que indica si se puede cancelar el evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is cancelable, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si el evento se puede cancelar, de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Data.CollectionView.CurrentChanging&quot; /&gt; event.">Representa el método que controla el evento <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">El objeto que ha generado el evento.</param>
      <param name="e" vsli:raw="Information about the event.">Información acerca del evento.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Proporciona una implementación de <see cref="T:System.Windows.WeakEventManager" /> para que pueda usar el modelo de "agente de escucha de evento débil" con el fin de asociar agentes de escucha para el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Agrega el controlador de eventos especificado, que se llama cuando el origen especificado provoca el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> .</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Delegado que controla el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Agrega el agente de escucha especificado al evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> del origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Objeto que se va a agregar como agente de escucha.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Devuelve un nuevo objeto para contener agentes de escucha para el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Nuevo objeto para contener agentes de escucha para el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Quita el controlador de eventos especificado del origen indicado.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">Delegado que controla el evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">Quita el agente de escucha especificado del evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> del origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
      <param name="listener" vsli:raw="The listener to remove.">Agente de escucha que se va a quitar.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Inicia la escucha del evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> en el origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">Detiene la escucha del evento <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> en el origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary vsli:raw="Provides an extension of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that accounts for the additional property characteristics of a dependency property.">Proporciona una extensión de <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa las características de propiedad adicionales de una propiedad de dependencia.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Habilita la notificación a otros objetos cuando cambia esta propiedad.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">Componente para el cual se va a agregar el controlador.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">Delegado que se va a agregar como agente de escucha.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary vsli:raw="Returns whether resetting an object changes its value.">Devuelve un valor que indica si al restablecer un objeto, cambia su valor.</summary>
      <param name="component" vsli:raw="The component to test for reset capability.">Componente cuya capacidad de restablecerse se va a probar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resetting the component changes its value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si al restablecer el componente cambia su valor; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; instances for equality.">Compara dos instancias de <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para determinar si sus valores son iguales.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; to compare with the current instance.">Objeto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> que se va a comparar con la instancia actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si los valores son equivalentes; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Devuelve <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para un nombre de propiedad proporcionado.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">El nombre registrado de una propiedad de dependencia o una propiedad adjunta.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">
        <see cref="T:System.Type" /> del objeto que posee la definición de propiedad.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">
        <see cref="T:System.Type" /> del objeto para el que quiere establecer la propiedad.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> solicitado.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">Devuelve <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para un nombre de propiedad proporcionado.</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">El nombre registrado de una propiedad de dependencia o una propiedad adjunta.</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">
        <see cref="T:System.Type" /> del objeto que posee la definición de propiedad.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">
        <see cref="T:System.Type" /> del objeto para el que quiere establecer la propiedad.</param>
      <param name="ignorePropertyType" vsli:raw="Specifies to ignore the property type.">Especifica que debe omitirse el tipo de propiedad.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> solicitado.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Devuelve una clase <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para una clase <see cref="T:System.ComponentModel.PropertyDescriptor" /> suministrada.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to check.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se va a comprobar.</param>
      <returns vsli:raw="If the property described by &lt;paramref name=&quot;property&quot; /&gt; is a dependency property, returns a valid &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;. Otherwise, returns a &lt;see langword=&quot;null&quot; /&gt;&lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Si la propiedad descrita por el parámetro <paramref name="property" /> es una propiedad de dependencia, devuelve una clase <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> válida. De lo contrario, devuelve <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided dependency property and target type.">Devuelve un <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para un tipo de destino y una propiedad de dependencia proporcionados.</summary>
      <param name="dependencyProperty" vsli:raw="The identifier for a dependency property.">Identificador de una propiedad de dependencia.</param>
      <param name="targetType" vsli:raw="The type of the object where the property is set.">Tipo del objeto en el que está establecida la propiedad.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for the provided dependency property.">
        <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> para la propiedad de dependencia proporcionada.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt;.">Devuelve un <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</summary>
      <param name="instance" vsli:raw="A component to get the properties for.">Componente cuyas propiedades se van a obtener.</param>
      <param name="filter" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; to use as a filter.">Matriz de tipo <see cref="T:System.Attribute" /> que se va a usar como filtro.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; with the properties that match the specified attributes for the specified component.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades que coinciden con los atributos especificados del componente especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary vsli:raw="Gets an editor of the specified type.">Obtiene un editor del tipo especificado.</summary>
      <param name="editorBaseType" vsli:raw="The base type of editor, which is used to differentiate between multiple editors that a property supports.">Tipo base del editor que se utiliza para diferenciar entre varios editores compatibles con una propiedad.</param>
      <returns vsli:raw="An instance of the requested editor type, or &lt;see langword=&quot;null&quot; /&gt; if an editor cannot be found.">Instancia del tipo de editor solicitado o <see langword="null" /> si no se encuentra ningún editor.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">Devuelve el código hash de este objeto <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary vsli:raw="Returns the current value of the property on a component.">Devuelve el valor actual de la propiedad en un componente.</summary>
      <param name="component" vsli:raw="The component instance.">Instancia del componente.</param>
      <returns vsli:raw="The requested value.">Valor solicitado.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">Habilita la notificación a otros objetos cuando cambia esta propiedad.</summary>
      <param name="component" vsli:raw="The component to add the handler for.">Componente para el cual se va a agregar el controlador.</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">Delegado que se va a agregar como agente de escucha.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary vsli:raw="Resets the value for this property of the component to the default value.">Restablece el valor de esta propiedad del componente en el valor predeterminado.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be reset to the default value.">Componente cuyo valor de propiedad se va a restablecer en el valor predeterminado.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets the value of the component to a different value.">Establece el valor del componente en otro valor.</summary>
      <param name="component" vsli:raw="The component with the property value that is to be set.">Componente con el valor de propiedad que se va a establecer.</param>
      <param name="value" vsli:raw="The new value.">Nuevo valor.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value of this property needs to be persisted by serialization processes.">Indica si se debe conservar el valor de esta propiedad mediante procesos de serialización.</summary>
      <param name="component" vsli:raw="The component with the property to be examined for persistence.">Componente con la propiedad cuya persistencia se va a examinar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property should be persisted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se debe almacenar la propiedad; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary vsli:raw="Converts the value of this instance to its equivalent string representation.">Convierte el valor de esta instancia en la representación de cadena equivalente.</summary>
      <returns vsli:raw="Returns the &lt;see cref=&quot;P:System.ComponentModel.MemberDescriptor.Name&quot; /&gt; value.">Devuelve el valor de <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary vsli:raw="Gets the collection of attributes for this member.">Obtiene la colección de atributos de este miembro.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; collection of attributes.">Colección de atributos <see cref="T:System.ComponentModel.AttributeCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary vsli:raw="Gets the name of the category that the member belongs to, as specified in the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">Obtiene el nombre de la categoría a la que pertenece el miembro, tal como se especifica en <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <returns vsli:raw="The name of the category to which the member belongs. If there is no &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;, the category name is set to the default category, &lt;see langword=&quot;Misc&quot; /&gt;.">Nombre de la categoría a la que pertenece el miembro. Si no hay ningún <see cref="T:System.ComponentModel.CategoryAttribute" />, el nombre de categoría se establece en la categoría predeterminada, <see langword="Misc" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary vsli:raw="Gets the type of the component this property is bound to.">Obtiene el tipo del componente al que está enlazada esta propiedad.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of component this property is bound to. When &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt; are invoked, the object specified might be an instance of this type.">
        <see cref="T:System.Type" /> que representa el tipo de componente al que está enlazada esta propiedad. Cuando se llama al método <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> o <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />, el objeto especificado puede ser una instancia de este tipo.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary vsli:raw="Gets the type converter for this property.">Obtiene el convertidor de tipos de esta propiedad.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is used to convert the &lt;see cref=&quot;T:System.Type&quot; /&gt; of this property.">
        <see cref="T:System.ComponentModel.TypeConverter" /> que se utiliza para convertir el <see cref="T:System.Type" /> de esta propiedad.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary vsli:raw="Returns the dependency property identifier.">Devuelve el identificador de la propiedad de dependencia.</summary>
      <returns vsli:raw="The dependency property identifier.">Identificador de la propiedad de dependencia.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary vsli:raw="Gets the description of the member, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">Obtiene la descripción del miembro tal como se especifica en <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <returns vsli:raw="The description of the member. If there is no &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, the property value is set to the default, which is an empty string (&quot;&quot;).">Descripción del miembro. Si no hay ningún objeto <see cref="T:System.ComponentModel.DescriptionAttribute" />, el valor de propiedad se establece en el valor predeterminado, que es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary vsli:raw="Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Obtiene o establece una devolución de llamada que los diseñadores usan para modificar el valor vigente de una propiedad de dependencia antes de que el valor de propiedad de dependencia se almacene en el motor de propiedad de dependencia.</summary>
      <returns vsli:raw="A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">Devolución de llamada que los diseñadores usan para modificar el valor vigente de una propiedad de dependencia antes de que el valor de propiedad de dependencia se almacene en el motor de propiedad de dependencia.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary vsli:raw="Gets whether this member should be set only at design time, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Obtiene si este miembro debe establecerse sólo en tiempo de diseño según se especifica en <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this member should be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the member can be set during run time. If there is no &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, the return value is the default, which is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este miembro debe establecerse sólo en tiempo de diseño; <see langword="false" /> si el miembro puede establecerse en tiempo de ejecución. Si no hay ningún <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, el valor que se devuelve es el valor predeterminado, siendo éste <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary vsli:raw="Gets the name that can be displayed in a window, such as a Properties window.">Obtiene el nombre que se puede mostrar en una ventana, como la ventana Propiedades.</summary>
      <returns vsli:raw="The name to display for the property.">Nombre que se va a mostrar para la propiedad.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary vsli:raw="Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.">Obtiene un valor que indica si la propiedad está registrada como propiedad adjunta y si se utiliza a través de un uso adjunto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propiedad es una propiedad adjunta; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary vsli:raw="Gets a value that indicates the value of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; on the property.">Obtiene un valor que indica el valor de <see cref="T:System.ComponentModel.BrowsableAttribute" /> en la propiedad.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; was specified on the property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se especificó <see cref="T:System.ComponentModel.BrowsableAttribute" /> en la propiedad; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether this property should be localized, as specified in the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Obtiene un valor que indica si esta propiedad se debe traducir, según se especifica en <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is marked with the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; constructor of the value true; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el miembro está marcado con el constructor <see cref="T:System.ComponentModel.LocalizableAttribute" /> del valor true; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether this property is read-only.">Obtiene un valor que indica si esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propiedad es de sólo lectura; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary vsli:raw="Gets the metadata associated with the dependency property.">Obtiene los metadatos asociados con la propiedad de dependencia.</summary>
      <returns vsli:raw="The dependency property metadata.">Metadatos de la propiedad de dependencia.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary vsli:raw="Gets the represented &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">Obtiene la clase <see cref="T:System.Type" /> representada de la propiedad de dependencia.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">
        <see cref="T:System.Type" /> de la propiedad de dependencia.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary vsli:raw="Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">Indica si las notificaciones de cambio de valor de esta propiedad pueden originarse fuera del descriptor de la propiedad (por ejemplo, en el propio componente) o si se originarán únicamente en las llamadas directas al método <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications for this property may originate from outside the property descriptor, such as from the component itself. &lt;see langword=&quot;false&quot; /&gt; if notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">Es <see langword="true" /> si las notificaciones de esta propiedad pueden originarse fuera del descriptor de la propiedad (por ejemplo, en el propio componente). Es <see langword="false" /> si las notificaciones se originarán únicamente en las llamadas directas realizadas al método <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the weak event listener pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Proporciona una implementación de <see cref="T:System.Windows.WeakEventManager" /> para que pueda usar el modelo de "agente de escucha de evento débil" con el fin de asociar agentes de escucha para el evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Agrega el controlador de eventos especificado, que se llama cuando el origen especificado provoca el evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> .</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Delegado que controla el evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Devuelve un nuevo objeto para contener agentes de escucha para el evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Nuevo objeto para contener agentes de escucha para el evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Quita el controlador de eventos especificado del origen indicado.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Delegado que controla el evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Inicia la escucha del evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> en el origen especificado.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">Detiene la escucha del evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> en el origen especificado.</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary vsli:raw="Provides an abstract base class for types that describe how to divide the items in a collection into groups.">Proporciona una clase base abstracta para los tipos que describen cómo dividir los elementos de una colección en grupos.</summary>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Tiene lugar cuando cambia un valor de propiedad.</summary>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Tiene lugar cuando cambia un valor de propiedad.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.GroupDescription" />.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns the group name(s) for the given item.">Devuelve los nombres de grupo para el elemento especificado.</summary>
      <param name="item" vsli:raw="The item to return group names for.">Elemento para el que se van a devolver nombres de grupo.</param>
      <param name="level" vsli:raw="The level of grouping.">Nivel de agrupación.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to supply to the converter.">
        <see cref="T:System.Globalization.CultureInfo" /> que se va a suministrar al convertidor.</param>
      <returns vsli:raw="The group name(s) for the given item.">Nombres de grupo para el elemento especificado.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the group name and the item name match such that the item belongs to the group.">Devuelve un valor que indica si el nombre del grupo y el nombre del elemento coinciden, lo que indica que el elemento pertenece al grupo.</summary>
      <param name="groupName" vsli:raw="The name of the group to check.">Nombre del grupo que se va a comprobar.</param>
      <param name="itemName" vsli:raw="The name of the item to check.">Nombre del elemento que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the names match and the item belongs to the group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si los nombres coinciden y el elemento pertenece al grupo; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.GroupDescription.PropertyChanged&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Argumentos del evento que se está generando.</param>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property on instances of this class.">Devuelve si los procesos de serialización deben serializar el valor efectivo de la propiedad <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> en instancias de esta clase.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor de propiedad <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> debe serializarse; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property on instances of this class.">Devuelve si los procesos de serialización deben serializar el valor efectivo de la propiedad <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> en instancias de esta clase.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor de propiedad <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> debe serializarse; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary vsli:raw="Gets or sets a custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Obtiene o establece un comparador personalizado que ordena grupos mediante un objeto que implementa <see cref="T:System.Collections.IComparer" />.</summary>
      <returns vsli:raw="A custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">Comparador personalizado que ordena grupos mediante un objeto que implementa <see cref="T:System.Collections.IComparer" />.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary vsli:raw="Gets the collection of names that are used to initialize a group with a set of subgroups with the given names.">Obtiene la colección de nombres que se usan para inicializar un grupo con un conjunto de subgrupos con los nombres especificados.</summary>
      <returns vsli:raw="The collection of names that are used to initialize a group with a set of subgroups with the given names.">Colección de nombres que se usan para inicializar un grupo con un conjunto de subgrupos con los nombres especificados.</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary vsli:raw="Gets the collection of sort criteria in which to sort the groups.">Obtiene la colección de criterios de ordenación por los que ordenar los grupos.</summary>
      <returns vsli:raw="The collection of sort criteria in which to sort the groups.">La colección de criterios de ordenación por los que ordenar los grupos.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary vsli:raw="Enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping.">Permite que las colecciones tengan las funcionalidades de administración de registros actual, ordenación personalizada, filtrado y agrupación.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary vsli:raw="When implementing this interface, raise this event after the current item has been changed.">Al implementar esta interfaz, se genera este evento después de cambiar el elemento actual.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary vsli:raw="When implementing this interface, raise this event before changing the current item. Event handler can cancel this event.">Al implementar esta interfaz, se genera este evento antes de cambiar el elemento actual. El controlador de eventos puede cancelar este evento.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether a given item belongs to this collection view.">Devuelve un valor que indica si un determinado elemento pertenece a esta vista de colección.</summary>
      <param name="item" vsli:raw="The object to check.">Objeto que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item belongs to this collection view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el elemento pertenece a esta vista de colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.">Especifica un ciclo de aplazamiento que puede usar para fusionar mediante combinación los cambios en la vista y retrasar la actualización automática.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Objeto <see cref="T:System.IDisposable" /> que puede usar para eliminar el objeto que realiza la llamada.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary vsli:raw="Sets the specified item to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Establece que el elemento especificado sea la propiedad <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vista.</summary>
      <param name="item" vsli:raw="The item to set as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Elemento que se va a establecer como <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propiedad resultante <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> está en la vista; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary vsli:raw="Sets the first item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Establece el primer elemento de la vista como <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante es un elemento que se encuentra dentro de la vista; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary vsli:raw="Sets the last item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Establece el último elemento de la vista como <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la propiedad <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante es un elemento de la vista; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary vsli:raw="Sets the item after the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Establece el elemento situado después de <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> en la vista como <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante es un elemento que se encuentra dentro de la vista; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary vsli:raw="Sets the item at the specified index to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">Establece que el elemento en el índice especificado sea la propiedad <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vista.</summary>
      <param name="position" vsli:raw="The index to set the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; to.">Índice en el que se va a establecer <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante es un elemento que se encuentra dentro de la vista; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary vsli:raw="Sets the item before the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">Establece el elemento situado delante de la propiedad <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vista como la propiedad <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> resultante es un elemento que se encuentra dentro de la vista; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary vsli:raw="Recreates the view.">Vuelve a crear la vista.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary vsli:raw="Gets a value that indicates whether this view supports filtering via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.Filter&quot; /&gt; property.">Obtiene un valor que indica si esta vista admite el filtrado mediante la propiedad <see cref="P:System.ComponentModel.ICollectionView.Filter" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view support filtering; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta vista admite el filtrado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary vsli:raw="Gets a value that indicates whether this view supports grouping via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.GroupDescriptions&quot; /&gt; property.">Obtiene un valor que indica si esta vista admite la agrupación mediante la propiedad <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports grouping; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta vista admite la agrupación; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary vsli:raw="Gets a value that indicates whether this view supports sorting via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.SortDescriptions&quot; /&gt; property.">Obtiene un valor que indica si esta vista admite la ordenación mediante la propiedad <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports sorting; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta vista admite la ordenación; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary vsli:raw="Gets or sets the cultural info for any operations of the view that may differ by culture, such as sorting.">Obtiene o establece la información de referencia cultural de cualquier operación de la vista que pueda diferir en la referencia cultural, como la ordenación.</summary>
      <returns vsli:raw="The culture to use during sorting.">Referencia cultural que se va a usar durante la ordenación.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary vsli:raw="Gets the current item in the view.">Obtiene el elemento actual de la vista.</summary>
      <returns vsli:raw="The current item of the view or &lt;see langword=&quot;null&quot; /&gt; if there is no current item.">Elemento actual de la vista o <see langword="null" /> si no hay ningún elemento actual.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary vsli:raw="Gets the ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Obtiene la posición ordinal de <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dentro de la vista.</summary>
      <returns vsli:raw="The ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">Posición ordinal de <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> dentro de la vista.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary vsli:raw="Gets or sets a callback used to determine if an item is suitable for inclusion in the view.">Obtiene o establece una devolución de llamada que se usa para determinar si un elemento es adecuado para su inclusión en la vista.</summary>
      <returns vsli:raw="A method used to determine if an item is suitable for inclusion in the view.">Método usado para determinar si un elemento es adecuado para su inclusión en la vista.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Obtiene una colección de objetos <see cref="T:System.ComponentModel.GroupDescription" /> que describen cómo se agrupan los elementos de la colección en la vista.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">Colección de objetos <see cref="T:System.ComponentModel.GroupDescription" /> que describen cómo se agrupan los elementos de la colección en la vista.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary vsli:raw="Gets the top-level groups.">Obtiene los grupos de nivel superior.</summary>
      <returns vsli:raw="A read-only collection of the top-level groups or &lt;see langword=&quot;null&quot; /&gt; if there are no groups.">Colección de solo lectura de los grupos de nivel superior o <see langword="null" /> si no hay ningún grupo.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection.">Obtiene un valor que indica si la propiedad <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vista está más allá del final de la colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el elemento <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vista está más allá del final de la colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection.">Obtiene un valor que indica si la propiedad <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vista está más allá del comienzo de la colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> es si el <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> de la vista está más allá del principio de la colección; en caso contrario, es <see langword="false" /> .</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary vsli:raw="Returns a value that indicates whether the resulting view is empty.">Devuelve un valor que indica si la vista resultante está vacía.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting view is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la vista resultante está vacía; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Obtiene una colección de objetos <see cref="T:System.ComponentModel.SortDescription" /> que describen cómo se ordenan los elementos de la colección en la vista.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">Colección de objetos <see cref="T:System.ComponentModel.SortDescription" /> que describen cómo se ordenan los elementos de la colección en la vista.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary vsli:raw="Returns the underlying collection.">Devuelve la colección subyacente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; object that is the underlying collection.">Un objeto <see cref="T:System.Collections.IEnumerable" /> de la colección subyacente.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary vsli:raw="An interface that enables implementing collections to create a view to their data. Normally, user code does not call methods on this interface.">Interfaz que habilita la implementación de colecciones a fin de crear una vista para sus datos. Normalmente, el código de usuario no llama a métodos en esta interfaz.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary vsli:raw="Creates a new view on the collection that implements this interface. Typically, user code does not call this method.">Crea una nueva vista en la colección que implementa esta interfaz. Normalmente, el código de usuario no llama a este método.</summary>
      <returns vsli:raw="The newly created view.">Vista recién creada.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary vsli:raw="Defines properties that enables sorting, grouping, and filtering on a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; in real time.">Define propiedades que permiten ordenar, agrupar y filtrar un objeto <see cref="T:System.Windows.Data.CollectionView" /> en tiempo real.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.">Obtiene un valor que indica si la vista de colección admite la activación o desactivación del filtrado de datos en tiempo real.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live filtering on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la vista de colección admite la activación o desactivación del filtrado en tiempo real; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.">Obtiene un valor que indica si la vista de colección admite activar o desactivar la agrupación de datos en tiempo real.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live grouping on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la vista de colección admite activar o desactivar la agrupación activa; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.">Obtiene un valor que indica si la vista de colección admite activar o desactivar la ordenación de datos en tiempo real.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live sorting on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la vista de colección admite activar o desactivar la ordenación activa; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering data in real time is enabled.">Obtiene o establece un valor que indica si está habilitado el filtrado de datos en tiempo real.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if filtering data in real time is enabled; &lt;see langword=&quot;false&quot; /&gt; if live filtering is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live filtering.">Es <see langword="true" /> si el filtrado de datos en tiempo real está habilitado; es <see langword="false" /> si el filtrado activo no está habilitado; es <see langword="null" /> si no se puede determinar si la vista de colección implementa el filtrado activo.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary vsli:raw="Gets or sets a value that indicates whether grouping data in real time is enabled.">Obtiene o establece un valor que indica si está habilitado la agrupación de datos en tiempo real.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if grouping data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live grouping is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live grouping.">Es <see langword="true" /> si la agrupación de datos en tiempo real está habilitada; es <see langword="false" /> si la agrupación activa no está habilitada; es <see langword="null" /> si no se puede determinar si la vista de colección implementa la agrupación activa.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary vsli:raw="Gets or sets a value that indicates whether sorting in real time is enabled.">Obtiene o establece un valor que indica si está habilitado la ordenación en tiempo real.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if sorting data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live sorting is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live sorting.">Es <see langword="true" /> si la ordenación de datos en tiempo real está habilitada; es <see langword="false" /> si la ordenación activa no está habilitada; es <see langword="null" /> si no se puede determinar si la vista de colección implementa la ordenación activa.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in filtering data in real time.">Obtiene una colección de cadenas que especifican las propiedades que participan en el filtrado de datos en tiempo real.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in filtering data in real time.">Colección de cadenas que especifican las propiedades que participan en el filtrado de datos en tiempo real.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in grouping data in real time.">Obtiene una colección de cadenas que especifican las propiedades que participan en la agrupación de datos en tiempo real.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in grouping data in real time.">Colección de cadenas que especifican las propiedades que participan en la agrupación de datos en tiempo real.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in sorting data in real time.">Obtiene una colección de cadenas que especifican las propiedades que participan en la ordenación de datos en tiempo real.</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in sorting data in real time.">Colección de cadenas que especifican las propiedades que participan en la ordenación de datos en tiempo real.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to provide editing capabilities to a collection.">Define métodos y propiedades que <see cref="T:System.Windows.Data.CollectionView" /> implementa para ofrecer capacidades de edición a una colección.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary vsli:raw="Adds a new item to the collection.">Agrega un nuevo elemento a la colección.</summary>
      <returns vsli:raw="The new item that is added to the collection.">Nuevo elemento que se agrega a la colección.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary vsli:raw="Ends the edit transaction and, if possible, restores the original value to the item.">Finaliza la transacción de edición y, si es posible, restaura el valor original del elemento.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary vsli:raw="Ends the add transaction and discards the pending new item.">Finaliza la transacción de adición y descarta el nuevo elemento pendiente.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary vsli:raw="Ends the edit transaction and saves the pending changes.">Finaliza la transacción de edición y guarda los cambios pendientes.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary vsli:raw="Ends the add transaction and saves the pending new item.">Finaliza la transacción de adición y guarda el nuevo elemento pendiente.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary vsli:raw="Begins an edit transaction of the specified item.">Inicia una transacción de edición del elemento especificado.</summary>
      <param name="item" vsli:raw="The item to edit.">Elemento que va a editarse.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary vsli:raw="Removes the specified item from the collection.">Quita el elemento especificado de la colección.</summary>
      <param name="item" vsli:raw="The item to remove.">Elemento que se va a quitar.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the item at the specified position from the collection.">Quita de la colección un elemento situado en la posición especificada.</summary>
      <param name="index" vsli:raw="The position of the item to remove.">Posición del elemento que va a quitarse.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the number of items in the collection view.">
        <paramref name="index" /> es menor que 0 o mayor que el número de elementos de la vista de colección.</exception>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary vsli:raw="Gets a value that indicates whether a new item can be added to the collection.">Obtiene un valor que indica si puede agregarse un elemento nuevo a la colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a new item can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si puede agregarse un nuevo elemento a la colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary vsli:raw="Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.">Obtiene un valor que indica si la vista de colección puede descartar los cambios pendientes y restaurar los valores originales de un objeto editado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view can discard pending changes and restore the original values of an edited object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la vista de colección puede descartar los cambios pendientes y restaurar los valores originales de un objeto editado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary vsli:raw="Gets a value that indicates whether an item can be removed from the collection.">Obtiene un valor que indica si un elemento puede quitarse de la colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item can be removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un elemento puede quitarse de la colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary vsli:raw="Gets the item that is being added during the current add transaction.">Obtiene el elemento que se está agregando durante la transacción de adición actual.</summary>
      <returns vsli:raw="The item that is being added if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsAddingNew&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Elemento que se está agregando si <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> es <see langword="true" />; en caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary vsli:raw="Gets the item in the collection that is being edited.">Obtiene el elemento de la colección que se está editando.</summary>
      <returns vsli:raw="The item in the collection that is being edited if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsEditingItem&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Elemento de la colección que se está editando si <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> es <see langword="true" />; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary vsli:raw="Gets a value that indicates whether an add transaction is in progress.">Obtiene un valor que indica si hay una transacción de adición en curso.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an add transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si hay una transacción de adición en curso; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary vsli:raw="Gets a value that indicates whether an edit transaction is in progress.">Obtiene un valor que indica si hay una transacción de edición en curso.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an edit transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si hay una transacción de edición en curso; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary vsli:raw="Gets or sets the position of the new item placeholder in the collection view.">Obtiene o establece la posición del nuevo marcador de posición de elemento en la vista de colección.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the position of the new item placeholder in the collection view.">Uno de los valores de enumeración que especifica la posición del nuevo marcador de posición de elemento en la vista de colección.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to enable specifying adding items of a specific type.">Define métodos y propiedades que una clase <see cref="T:System.Windows.Data.CollectionView" /> implementa para poder especificar elementos de adición de un tipo determinado.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary vsli:raw="Adds the specified object to the collection.">Agrega a la colección el objeto especificado.</summary>
      <param name="newItem" vsli:raw="The object to add to the collection.">El objeto que se va a agregar a la colección.</param>
      <returns vsli:raw="The object that is added to the collection.">Objeto que se agrega a la colección.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary vsli:raw="Gets a value that indicates whether a specified object can be added to the collection.">Obtiene un valor que indica si el objeto especificado puede agregarse a la colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a specified object can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se puede agregar el objeto especificado a la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary vsli:raw="Defines a property that provides information about an object's properties.">Define una propiedad que proporciona información sobre las propiedades de un objeto.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary vsli:raw="Gets a collection that contains information about the properties that are available on the items in a collection.">Obtiene una colección que contiene información sobre las propiedades que están disponibles en los elementos de una colección.</summary>
      <returns vsli:raw="A collection that contains information about the properties that are available on the items in a collection.">Colección que contiene información sobre las propiedades que están disponibles en los elementos de una colección.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary vsli:raw="Contains information about a property.">Contiene información de una propiedad.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ItemPropertyInfo&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ItemPropertyInfo" />.</summary>
      <param name="name" vsli:raw="The name of the property.">Nombre de la propiedad.</param>
      <param name="type" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="descriptor" vsli:raw="An object that contains additional information about the property.">Objeto que contiene información adicional sobre la propiedad.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary vsli:raw="Gets an object that contains additional information about the property.">Obtiene un objeto que contiene información adicional sobre la propiedad.</summary>
      <returns vsli:raw="An object that contains additional information about the property.">Objeto que contiene información adicional sobre la propiedad.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary vsli:raw="Gets the name of the property.">Obtiene el nombre de la propiedad.</summary>
      <returns vsli:raw="The name of the property.">Nombre de la propiedad.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary vsli:raw="Gets the type of the property.">Obtiene el tipo de la propiedad.</summary>
      <returns vsli:raw="The type of the property.">Tipo de la propiedad.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary vsli:raw="Specifies where the placeholder for a new item appears in the collection.">Especifica en qué lugar de la colección aparece el marcador de posición de un nuevo elemento.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary vsli:raw="The placeholder for a new item appears at the beginning of the collection.  New items are at the beginning of the collection, after the new item placeholder.">El marcador de posición de un elemento nuevo aparece al principio de la colección.  Los elementos nuevos están al principio de la colección, detrás del correspondiente marcador de posición.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary vsli:raw="The placeholder for a new item appears at the end of the collection. New items are added at the end of the collection, before the new item placeholder.">El marcador de posición de un elemento nuevo aparece al final de la colección. Los elementos nuevos se agregan al final de la colección, delante del correspondiente marcador de posición.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary vsli:raw="The collection does not use a new item placeholder. The position of items that are added depends on the underlying collection.  Usually, they are added at the end of the collection.">La colección no usa un marcador de posición de elemento nuevo. La posición de los elementos agregados depende de la colección subyacente.  Normalmente, se agregan al final de la colección.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Proporciona una implementación de <see cref="T:System.Windows.WeakEventManager" /> para que pueda usar el modelo de "agente de escucha de evento débil" con el fin de asociar agentes de escucha para el evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event for the specified property.">Agrega el controlador de eventos especificado, que se llama cuando el origen especificado provoca el evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> para la propiedad especificada.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Delegado que controla el evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nombre de la propiedad existente en <paramref name="source" /> donde se escucharán los cambios. Se establece en <see cref="F:System.String.Empty" /> para indicar "cualquier propiedad".</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">Hay más de un método asociado a <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Adds the specified listener to the list of listeners on the specified source.">Agrega el agente de escucha especificado a la lista de agentes de escucha en el origen especificado.</summary>
      <param name="source" vsli:raw="The object with the event.">Objeto con el evento.</param>
      <param name="listener" vsli:raw="The object to add as a listener.">Objeto que se va a agregar como agente de escucha.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nombre de la propiedad existente en <paramref name="source" /> donde se escucharán los cambios. Se establece en <see cref="F:System.String.Empty" /> para indicar "cualquier propiedad".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Devuelve un nuevo objeto para contener agentes de escucha para el evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Nuevo objeto para contener agentes de escucha para el evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes listeners that are no longer active from the data for the provided source.">Quita de los datos los agentes de escucha que ya no están activos para el origen especificado.</summary>
      <param name="source" vsli:raw="Source object to remove all listeners from.">Objeto de origen del que quitar todos los agentes de escucha.</param>
      <param name="data" vsli:raw="The data to purge. This is expected to be a &lt;see cref=&quot;T:System.Collections.Specialized.HybridDictionary&quot; /&gt;.">Datos que se van a purgar. Se esperaba que fuese <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
      <param name="purgeAll" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to stop listening and to completely remove all data.">Se establece en <see langword="true" /> para dejar de escuchar y quitar todos los datos.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se han quitado algunas entradas; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Removes the specified event handler from the specified source.">Quita el controlador de eventos especificado del origen indicado.</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Objeto de origen que provoca el evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Delegado que controla el evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nombre de la propiedad existente en <paramref name="source" /> donde se dejarán de escuchar los cambios. Se establece en <see cref="F:System.String.Empty" /> para indicar "cualquier propiedad".</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">Hay más de un método asociado a <paramref name="handler" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Removes the specified listener from the list of listeners on the provided source.">Quita el agente de escucha especificado de la lista de agentes de escucha en el origen proporcionado.</summary>
      <param name="source" vsli:raw="The object to remove the listener from.">Objeto que se va a quitar del agente de escucha.</param>
      <param name="listener" vsli:raw="The listener to remove.">Agente de escucha que se va a quitar.</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">Nombre de la propiedad existente en <paramref name="source" /> donde se dejarán de escuchar los cambios. Se establece en <see cref="F:System.String.Empty" /> para indicar "cualquier propiedad".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Inicia la escucha del evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> en el origen proporcionado.</summary>
      <param name="source" vsli:raw="The object on which to start listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">Objeto en el que se inicia la escucha de <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">Detiene la escucha del evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> en el origen proporcionado.</summary>
      <param name="source" vsli:raw="The source object on which to stop listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">Objeto de origen en el que se detiene la escucha de <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method.">Especifica de qué propiedades deben informar los descriptores de tipos, específicamente el método <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</summary>
      <param name="filter" vsli:raw="The options that describe this property filter.">Las opciones que describen este filtro de propiedad.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Devuelve un valor que indica si el actual <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Atributo de .NET Framework es igual a un objeto especificado.</summary>
      <param name="value" vsli:raw="The object to compare to this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">Objeto que se va a comparar con <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> especificado es igual al objeto <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Devuelve el código hash del <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Atributo de .NET Framework actual.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">Un valor entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the property filter options of the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute match the property filter options of the provided object.">Devuelve un valor que indica si las opciones de filtro de propiedades de la actual <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Atributo de .NET Framework coinciden con las opciones de filtro de propiedades del objeto proporcionado.</summary>
      <param name="value" vsli:raw="The object to compare. This object is expected to be a &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">Objeto que se va a comparar. Se espera que este objeto sea <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a match exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si existe una coincidencia; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary vsli:raw="Gets the filter options for this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">Obtiene las opciones de filtro para este <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Atributo de .NET Framework .</summary>
      <returns vsli:raw="The property filter options.">Las opciones de filtro de la propiedad.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method. This enumeration is used to specify the value of the &lt;see cref=&quot;P:System.ComponentModel.PropertyFilterAttribute.Filter&quot; /&gt; property.">Especifica de qué propiedades deben informar los descriptores de tipos, específicamente el método <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />. Esta enumeración se usa para especificar el valor de la propiedad <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary vsli:raw="Return all properties.">Devuelve todas las propiedades.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary vsli:raw="Return only those properties that are not valid given the current context of the object.">Devuelve solamente las propiedades que no son válidas según el contexto actual del objeto.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary vsli:raw="Return no properties.">No devuelve ninguna propiedad.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary vsli:raw="Return only those properties that have local values currently set.">Solo devuelve las propiedades que tienen valores locales establecidos actualmente.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary vsli:raw="Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).">Solo devuelve las propiedades cuyos valores locales no están establecidas o no tienen propiedades establecidas en un almacén de expresiones externo (como un recurso de enlace o diferido).</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary vsli:raw="Return any property that is valid on the object in the current scope.">Devuelve cualquier propiedad que sea válida en el objeto en el ámbito actual.</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary vsli:raw="Defines the direction and the property name to be used as the criteria for sorting a collection.">Define la dirección y el nombre de propiedad que se usará como criterio para ordenar una colección.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; structure.">Inicializa una nueva instancia de la estructura <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <param name="propertyName" vsli:raw="The name of the property to sort the list by. If the collection contains strings or value types, set this parameter to the empty string (&quot;&quot;).">Nombre de la propiedad con la que se ordenará la lista.</param>
      <param name="direction" vsli:raw="The sort order.">El criterio de ordenación.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The &lt;paramref name=&quot;direction&quot; /&gt; parameter does not specify a valid value.">El parámetro <paramref name="direction" /> no especifica un valor válido.</exception>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary vsli:raw="Compares the specified instance and the current instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; for value equality.">Compara la instancia especificada y la instancia actual de <see cref="T:System.ComponentModel.SortDescription" /> para determinar si son iguales.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; instance to compare.">Instancia <see cref="T:System.ComponentModel.SortDescription" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; have the same values.">
        <see langword="true" /> si <paramref name="obj" /> y esta instancia de <see cref="T:System.ComponentModel.SortDescription" /> tienen los mismos valores.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Devuelve el código hash de esta instancia de <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">Código hash de esta instancia de <see cref="T:System.ComponentModel.SortDescription" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value equality.">Compara dos objetos <see cref="T:System.ComponentModel.SortDescription" /> para determinar si sus valores son iguales.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">Primera instancia que se va a comparar.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">Segunda instancia que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los dos objetos son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value inequality.">Compara dos objetos <see cref="T:System.ComponentModel.SortDescription" /> para determinar si no son iguales.</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">Primera instancia que se va a comparar.</param>
      <param name="sd2" vsli:raw="The second instance to compare.">Segunda instancia que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si los valores no son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether to sort in ascending or descending order.">Obtiene o establece un valor que indica si se debe ordenar en orden ascendente o descendente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; value to indicate whether to sort in ascending or descending order.">Valor de <see cref="T:System.ComponentModel.ListSortDirection" /> que indica si se debe ordenar en orden ascendente o descendente.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this object is in an immutable state.">Obtiene un valor que indica si este objeto se encuentra en un estado inmutable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object is in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si este objeto se está usando; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary vsli:raw="Gets or sets the property name being used as the sorting criteria.">Obtiene o establece el nombre de propiedad que se usa como criterio de ordenación.</summary>
      <returns vsli:raw="The default value is null.">El valor predeterminado es null.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects.">Representa una colección de objetos <see cref="T:System.ComponentModel.SortDescription" />.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Tiene lugar cuando se agrega o quita un elemento.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">Tiene lugar cuando se agrega o quita un elemento.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary vsli:raw="Gets an empty and non-modifiable instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt;.">Obtiene una instancia vacía y no modificable de <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.SortDescriptionCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary vsli:raw="Removes all items from the collection.">Quita todos los elementos de la colección.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Inserts an item into the collection at the specified index.">Inserta un elemento en el índice especificado de la colección.</summary>
      <param name="index" vsli:raw="The zero-based index where the &lt;paramref name=&quot;item&quot; /&gt; is inserted.">Índice de base cero donde debe insertarse <paramref name="item" />.</param>
      <param name="item" vsli:raw="The object to insert.">Objeto que se va a insertar.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary vsli:raw="Removes the item at the specified index in the collection.">Quita el elemento situado en el índice especificado de la colección.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Índice de base cero del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Replaces the element at the specified index.">Reemplaza el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to replace.">Índice de base cero del elemento que se va a reemplazar.</param>
      <param name="item" vsli:raw="The new value for the element at the specified index.">El nuevo valor del elemento en el índice especificado.</param>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary vsli:raw="Describes the level of detail to trace about a particular object.">Describe el nivel de detalle que se va a obtener de un objeto determinado.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary vsli:raw="Traces all additional information.">Realiza un seguimiento de toda la información adicional.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary vsli:raw="Traces some additional information.">Realiza un seguimiento de alguna información adicional.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary vsli:raw="Traces a medium amount of additional information.">Realiza un seguimiento de una cantidad media de información adicional.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary vsli:raw="Traces no available additional information.">No realiza ningún seguimiento de la información adicional disponible.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary vsli:raw="Provides debug tracing support that is specifically targeted for Windows Presentation Foundation (WPF) applications.">Ofrece compatibilidad de traza de depuración que está específicamente destinada para aplicaciones de Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property.">Identifica la propiedad adjunta <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" />.</summary>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property for a specified element.">Obtiene el valor de la propiedad adjunta <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> para un elemento especificado.</summary>
      <param name="element" vsli:raw="The element from which the property value is read.">Elemento del que se lee el valor de la propiedad.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; property value for the element.">Valor de propiedad <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> del elemento.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary vsli:raw="Refreshes trace sources, by forcing the app.config file to be re-read.">Actualiza los orígenes de las trazas, obligando a que vuelva a leerse el archivo app.config.</summary>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary vsli:raw="Sets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property to a specified element.">Establece el valor de la propiedad adjunta <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> en un elemento especificado.</summary>
      <param name="element" vsli:raw="The element to which the attached property is written.">Elemento en el que se escribe la propiedad adjunta.</param>
      <param name="traceLevel" vsli:raw="The needed &lt;see cref=&quot;T:System.Diagnostics.PresentationTraceLevel&quot; /&gt; value.">Valor <see cref="T:System.Diagnostics.PresentationTraceLevel" /> necesario.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary vsli:raw="Gets an animation trace source.">Obtiene un origen de la traza de animaciones.</summary>
      <returns vsli:raw="An animation trace source.">El origen de la traza de animaciones.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary vsli:raw="Gets a data-binding trace source.">Obtiene un origen de la traza de enlace de datos.</summary>
      <returns vsli:raw="A data-binding trace source.">El origen de la traza del enlace de datos.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary vsli:raw="Gets a dependency property trace source.">Obtiene un origen de seguimiento de la propiedad de dependencia.</summary>
      <returns vsli:raw="A dependency property trace source.">Origen de seguimiento de la propiedad de dependencia.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary vsli:raw="Gets a document trace source.">Obtiene un origen de la traza del documento.</summary>
      <returns vsli:raw="A document trace source.">El origen de la traza del documento.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary vsli:raw="Gets a Freezable trace source.">Obtiene un origen de la traza de objetos Freezable.</summary>
      <returns vsli:raw="A Freezable trace source.">El origen de la traza de objetos Freezable.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary vsli:raw="Gets an hwnd host trace source.">Obtiene el origen de la traza del host de hwnd.</summary>
      <returns vsli:raw="An hwnd host trace source.">Origen de la traza del host de hwnd.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary vsli:raw="Gets a markup trace source.">Obtiene un origen de la traza de marcado.</summary>
      <returns vsli:raw="A markup trace source.">El origen de la traza de marcado.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary vsli:raw="Gets a name scope trace source.">Obtiene un origen de la traza del ámbito de nombres.</summary>
      <returns vsli:raw="A name scope trace source.">El origen de la traza del ámbito de nombres.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary vsli:raw="Gets a resource dictionary trace source.">Obtiene un origen de la traza del diccionario de recursos.</summary>
      <returns vsli:raw="A resource dictionary trace source.">Un origen de la traza del diccionario de recursos.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary vsli:raw="Gets a routed event trace source.">Obtiene un origen de seguimiento de eventos enrutados.</summary>
      <returns vsli:raw="A routed event trace source.">Origen de seguimiento de eventos enrutados.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary vsli:raw="Gets a shell trace source.">Obtiene un origen de traza del shell.</summary>
      <returns vsli:raw="A shell trace source.">Origen de traza del shell.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.TraceLevel" />
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary vsli:raw="Specifies the location where the X.509 certificate that is used in signing is stored.">Especifica la ubicación donde se almacena el certificado X.509 que se usa en la firma.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary vsli:raw="The certificate is embedded in its own &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">El certificado se inserta en su propia <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary vsli:raw="The certificate is embedded in the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SignaturePart&quot; /&gt; that is created for the signature being added.">El certificado se inserta en la <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" /> que se crea para la signatura que se está agregando.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary vsli:raw="The certificate in not embedded in the package.">El certificado no está insertado en el paquete.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary vsli:raw="Represents an OLE compound file that contains an encrypted package.">Representa un archivo compuesto OLE que contiene un paquete cifrado.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary vsli:raw="Closes the encrypted package and the OLE compound file that holds it.">Cierra el paquete cifrado y el archivo compuesto OLE que lo contiene.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; on the specified stream.">Crea y devuelve un objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> en la secuencia especificada.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">Secuencia en la que se va a crear el archivo.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licencia de publicación que está incrustada en el archivo compuesto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Objeto que determina las operaciones que puede realizar el usuario actual en el contenido cifrado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> no proporciona acceso de lectura ni escritura.</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Colección <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> creada recientemente.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and gives it the specified file name.">Crea y devuelve un objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> y le asigna el nombre de archivo especificado.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">Nombre del archivo compuesto OLE.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licencia de publicación que está incrustada en el archivo compuesto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Objeto que determina las operaciones que puede realizar el usuario actual en el contenido cifrado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Colección <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> creada recientemente.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; (on the specified stream) that uses the specified unencrypted package as its content.">Crea y devuelve un objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (en la secuencia especificada) que utiliza el paquete no cifrado especificado como su contenido.</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">Secuencia en la que se va a crear el archivo.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">Secuencia que representa el paquete no cifrado existente.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licencia de publicación que está incrustada en el archivo compuesto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Objeto que determina las operaciones que puede realizar el usuario actual en el contenido cifrado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> o <paramref name="packageStream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> no proporciona acceso de lectura ni escritura.</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Colección <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> creada recientemente.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that uses the specified unencrypted package as its content, and gives it the specified file name.">Crea y devuelve un objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que utiliza el paquete no cifrado especificado como su contenido y le asigna el nombre de archivo especificado.</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">Nombre del archivo compuesto OLE.</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">Secuencia que representa el paquete no cifrado existente.</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">Licencia de publicación que está incrustada en el archivo compuesto.</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">Objeto que determina las operaciones que puede realizar el usuario actual en el contenido cifrado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> o <paramref name="packageStream" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Colección <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> creada recientemente.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Libera todos los recursos que usa <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary vsli:raw="Flush the stream for both the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and its package content.">Vacíe la secuencia de <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> y su contenido del paquete.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary vsli:raw="Gets the encrypted package inside the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Obtiene el paquete cifrado incluido en <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; in the envelope.">
        <see cref="T:System.IO.Packaging.Package" /> del sobre.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary vsli:raw="Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.">Obtiene un valor que especifica si la secuencia indicada es un archivo compuesto OLE con una secuencia del paquete cifrada.</summary>
      <param name="stream" vsli:raw="The stream that is tested.">Secuencia que se prueba.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified stream is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la secuencia especificada es un archivo compuesto OLE con una secuencia del paquete cifrada; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary vsli:raw="Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.">Obtiene un valor que especifica si la el archivo indicado es un archivo compuesto OLE con una secuencia del paquete cifrada.</summary>
      <param name="fileName" vsli:raw="The file that is tested.">Archivo que se prueba.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified file is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el archivo especificado es un archivo compuesto OLE con una secuencia del paquete cifrada; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary vsli:raw="Open the encrypted package in the specified stream.">Abre el paquete cifrado en la secuencia especificada.</summary>
      <param name="envelopeStream" vsli:raw="The stream containing the encrypted package.">Secuencia que contiene el paquete cifrado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">El objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que se abre.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary vsli:raw="Open the encrypted package in the specified file as read only and unshared.">Abre el paquete cifrado en el archivo especificado como sólo lectura y uso no compartido.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Archivo que contiene el paquete cifrado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">El objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que se abre.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary vsli:raw="Open the encrypted package in the specified file as unshared and with the specified access.">Abre el paquete cifrado en el archivo especificado como de uso no compartido y con el acceso indicado.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Archivo que contiene el paquete cifrado.</param>
      <param name="access" vsli:raw="The type of access.">Tipo de acceso.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">El objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que se abre.</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary vsli:raw="Open the encrypted package in the specified file and gives it the specified access and sharing.">Abre el paquete cifrado en el archivo especificado y le asigna el acceso especificado y un uso compartido.</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">Archivo que contiene el paquete cifrado.</param>
      <param name="access" vsli:raw="The type of access.">Tipo de acceso.</param>
      <param name="sharing" vsli:raw="The type of sharing.">Tipo de uso compartido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">El objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que se abre.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary vsli:raw="Gets a value that specifies whether the file was opened with access to read, write, or both.">Obtiene un valor que especifica si el archivo se abrió con acceso de lectura, escritura o ambos.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; value that was used to open the file.">El valor de <see cref="T:System.IO.FileAccess" /> que se utilizó al abrir el archivo.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary vsli:raw="Gets the core package properties (such as Title and Subject) of the rights managed document.">Obtiene las propiedades básicas del paquete (como Title y Subject) del documento con derechos administrados.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; for the package.">
        <see cref="T:System.IO.Packaging.PackageProperties" /> del paquete.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary vsli:raw="Gets the rights management information stored in the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;; specifically, the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;s stored in the OLE compound file that embodies the rights-management protected package.">Obtiene la información de administración de derechos almacenada en <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; en concreto, los objetos <see cref="T:System.Security.RightsManagement.PublishLicense" /> y <see cref="T:System.Security.RightsManagement.UseLicense" /> almacenados en el archivo compuesto OLE que contiene el paquete protegido de administración de derechos.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.RightsManagementInformation&quot; /&gt; for the package.">
        <see cref="T:System.IO.Packaging.RightsManagementInformation" /> del paquete.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary vsli:raw="Gets an object that provides access to the compound file streams outside the encrypted package.">Obtiene un objeto que proporciona acceso a las secuencias del archivo compuesto que están fuera del paquete cifrado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; representing streams in the OLE compound file that are outside the encrypted package.">
        <see cref="T:System.IO.Packaging.StorageInfo" /> que representa las secuencias del archivo compuesto de OLE que están fuera del paquete cifrado.</returns>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent&quot; /&gt; that is raised when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; detects an invalid signature.">Representa el método que controla el evento <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> que se provoca cuando el método <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> detecta una firma no válida.</summary>
      <param name="sender" vsli:raw="The invalid &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; source of the event.">El origen de la clase <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> del evento no válido.</param>
      <param name="e" vsli:raw="The event data.">Datos del evento.</param>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary vsli:raw="Represents a digital signature that is applied to a set of package parts and relationships.">Representa una firma digital que se aplica a un conjunto de relaciones y partes del paquete.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary vsli:raw="Returns an ordered list of the &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt; operations applied to a given part.">Devuelve una lista ordenada de las operaciones de <see cref="T:System.Security.Cryptography.Xml.Transform" /> aplicadas a un elemento especificado.</summary>
      <param name="partName" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to return the transform list for.">
        <see cref="T:System.Uri" /> de <see cref="T:System.IO.Packaging.PackagePart" /> para el que devolver la lista de transformaciones.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="An ordered list of URI strings, such as &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot; /&gt; or &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;, that represents the canonical XML transformations applied to the part with the given &lt;paramref name=&quot;partName&quot; /&gt; URI.">Una lista ordenada de cadenas URI, como <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> o <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, que representa las transformaciones XML canónicas aplicadas al elemento con el URI <paramref name="partName" /> especificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary vsli:raw="Verifies the digital signature against an X.509 certificate.">Comprueba la firma digital con un certificado X.509 especificado.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> si la comprobación se realizó correctamente; en caso contrario, uno de los valores <see cref="T:System.IO.Packaging.VerifyResult" /> que identifica un problema.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies the digital signature against a given X.509 certificate.">Comprueba la firma digital con un certificado X.509 especificado.</summary>
      <param name="signingCertificate" vsli:raw="The signer's X.509 certificate to verify the digital signature against.">Certificado X.509 del firmante con el que se comprobará la firma digital.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> si la comprobación se realizó correctamente; en caso contrario, uno de los valores <see cref="T:System.IO.Packaging.VerifyResult" /> que identifica un problema.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary vsli:raw="Gets the X.509 certificate embedding option.">Obtiene la opción de incrustación del certificado X.509.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values that specifies the option for the digital signature.">Uno de los valores de <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> que especifica la opción para la firma digital.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary vsli:raw="Gets or sets the XML digital signature.">Obtiene o establece la firma digital XML.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="The XML digital signature.">Firma digital XML.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; that contains the signature.">Obtiene la clase <see cref="T:System.IO.Packaging.PackagePart" /> que contiene la firma.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="The package part that contains the signature.">Elemento del paquete que contiene la firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary vsli:raw="Gets the URI string that identifies the signature type.">Obtiene la cadena URI que identifica el tipo de firma.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="A URI string that identifies the signature type. The default is &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;.">Cadena URI que identifica el tipo de firma. De manera predeterminada, es <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary vsli:raw="Gets the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Obtiene el valor hash cifrado de la propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="A byte array that contains the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">Matriz de bytes que contiene el valor hash cifrado de la propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary vsli:raw="Gets a collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects signed with the signature.">Obtiene una colección de todos los objetos <see cref="T:System.IO.Packaging.PackagePart" /> firmados con la firma.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="A collection that contains all the package parts signed with the signature.">Colección que contiene todos los elementos del paquete firmados con la firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary vsli:raw="Gets the list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">Obtiene la lista de elementos de <see cref="T:System.IO.Packaging.PackageRelationship" /> firmados con la firma.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="The list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">Lista de elementos de <see cref="T:System.IO.Packaging.PackageRelationship" /> firmados con la firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary vsli:raw="Gets the X.509 certificate of the signer.">Obtiene el certificado X.509 del firmante.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="The digital certificate of the signer, or &lt;see langword=&quot;null&quot; /&gt; if the certificate is not stored in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">El certificado digital del firmante, o <see langword="null" /> si el certificado no se almacena en <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary vsli:raw="Gets the date and time that the signature was created.">Obtiene la fecha y la hora de creación de la firma.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="The date and time that the signature was created.">Fecha y hora de creación de la firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary vsli:raw="Gets the format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Obtiene el formato de fecha y hora devuelto por la propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">La <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> digital se ha eliminado.</exception>
      <returns vsli:raw="The format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">Formato de fecha y hora devuelto por la propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary vsli:raw="Provides a utility class for the creation and verification of digital signatures in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Proporciona una clase de utilidad para la creación y comprobación de firmas digitales en una clase <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; encounters an invalid signature.">Se produce cuando el método <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> detecta una firma no válida.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignatureManager&quot; /&gt; class for use with a specified &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> para su uso con una clase <see cref="T:System.IO.Packaging.Package" /> especificada.</summary>
      <param name="package" vsli:raw="The package associated with this signature manager.">Paquete asociado a este administrador de firmas.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary vsli:raw="Countersigns all the signatures in the package with a user-selected X.509 certificate.">Contrafirma todas las firmas del paquete con un certificado X.509 seleccionado por el usuario.</summary>
      <returns vsli:raw="The signature that was added as a countersign; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be located or the user canceled the certificate selection dialog.">Firma que se agregó como contrafirma o <see langword="null" /> si no se encontró ningún certificado o el usuario canceló el cuadro de diálogo de selección de certificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Countersigns all the signatures in the package with a specified X.509 certificate.">Contrafirma todas las signaturas del paquete con un certificado X.509 especificado.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to add as a countersign signature.">Certificado X.509 que se debe agregar como contrafirma.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;certificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="certificate" /> es <see langword="null" /></exception>
      <returns vsli:raw="The signature that was added as a countersign.">Signatura que se agregó como contrafirma.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Countersigns a list of signatures with a given X.509 certificate.">Contrafirma una lista de firmas con un certificado X.509 determinado.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to countersign each of the specified &lt;paramref name=&quot;signatures&quot; /&gt;.">Certificado X.509 que se usará para contrafirmar cada uno de los elementos <paramref name="signatures" /> especificados.</param>
      <param name="signatures" vsli:raw="The list of signatures to countersign.">Lista de firmas que se van a contrafirmar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;signatures&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O bien el parámetro <paramref name="certificate" /> o el parámetro <paramref name="signatures" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The package contains no signed &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects.">El paquete no contiene objetos <see cref="T:System.IO.Packaging.PackagePart" /> firmados.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The package contains no &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; parts.">El paquete no contiene partes <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</exception>
      <returns vsli:raw="The digital signature used to countersign each of the &lt;paramref name=&quot;signatures&quot; /&gt;.">Firma digital usada para contrafirmar cada uno de los elementos <paramref name="signatures" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary vsli:raw="Returns the digital signature for a given signature uniform resource identifier (URI).">Devuelve la firma digital de un identificador uniforme de recursos (URI) de firma especificado.</summary>
      <param name="signatureUri" vsli:raw="The URI of the digital signature to return.">URI de la firma digital que se va a devolver.</param>
      <returns vsli:raw="The digital signature for the specified &lt;paramref name=&quot;signatureUri&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if a signature for the given &lt;paramref name=&quot;signatureUri&quot; /&gt; cannot be found.">Su valor es la firma digital del <paramref name="signatureUri" /> especificado o <see langword="null" />, si no se puede encontrar una firma para el <paramref name="signatureUri" /> especificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary vsli:raw="Removes all digital signatures from the package.">Quita todas las firmas digitales del paquete.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary vsli:raw="Removes the digital signature with a given signature uniform resource identifier (URI).">Quita la firma digital con un identificador uniforme de recursos (URI) de firma especificado.</summary>
      <param name="signatureUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; to remove.">URI de <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> que se va a quitar.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.">Pide al usuario un certificado X.509, que se usa para firmar digitalmente una lista de elementos del paquete especificada.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">Lista de identificadores uniformes de recursos (URI) de los elementos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
      <returns vsli:raw="The digital signature used to sign the list of &lt;paramref name=&quot;parts&quot; /&gt;.">Firma digital usada para firmar la lista de <paramref name="parts" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Signs a list of package parts with a given X.509 certificate.">Firma una lista de elementos de paquete con un certificado X.509 especificado.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">Lista de identificadores uniformes de recursos (URI) de los elementos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified &lt;paramref name=&quot;parts&quot; /&gt;.">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los <paramref name="parts" /> especificados.</param>
      <returns vsli:raw="The digital signature used to sign the given list of &lt;paramref name=&quot;parts&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be found or the user clicked &quot;Cancel&quot; in the certificate selection dialog box.">Firma digital usada para firmar la lista proporcionada de <paramref name="parts" />; o <see langword="null" /> si no se encontró ningún certificado o el usuario hizo clic en "Cancelar" en el cuadro de diálogo de selección de certificados.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate.">Firma una lista de partes de paquete y relaciones de paquete con un certificado X.509 especificado.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Lista de identificadores uniformes de recursos (URI) de los objetos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los elementos y relaciones especificados.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Lista de objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> que se van a firmar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any objects to sign.">Ni <paramref name="parts" /> ni <paramref name="relationshipSelectors" /> especifican objetos para firmar.</exception>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Firma digital que se usa para firmar los elementos especificados en las listas <paramref name="parts" /> y <paramref name="relationshipSelectors" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate and identifier (ID).">Firma una lista de partes de paquete y relaciones de paquete con un certificado X.509 y identificador (id.) especificados.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Lista de identificadores uniformes de recursos (URI) de los objetos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los elementos y relaciones especificados.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Lista de objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> que se van a firmar.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Cadena de identificación para asociar a la firma.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any elements to sign.">Ni el parámetro <paramref name="parts" /> ni el <paramref name="relationshipSelectors" /> especifican elementos que se deban firmar.</exception>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Firma digital que se usa para firmar los elementos especificados en las listas <paramref name="parts" /> y <paramref name="relationshipSelectors" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary vsli:raw="Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature identifier (ID).">Firma una lista de elementos de paquete, relaciones de paquete u objetos personalizados con un certificado X.509 especificado y un identificador (id.) de firma.</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">Lista de identificadores uniformes de recursos (URI) de los objetos <see cref="T:System.IO.Packaging.PackagePart" /> que se van a firmar.</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">Certificado X.509 que se va a usar para firmar digitalmente cada uno de los elementos y relaciones especificados.</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">Lista de objetos <see cref="T:System.IO.Packaging.PackageRelationship" /> que se van a firmar.</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">Cadena de identificación para asociar a la firma.</param>
      <param name="signatureObjects" vsli:raw="A list of custom data objects to sign.">Lista de objetos de datos personalizados que firmar.</param>
      <param name="objectReferences" vsli:raw="A list of references to custom objects to sign.">Lista de referencias a objetos personalizados que firmar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt;, &lt;paramref name=&quot;relationshipSelectors&quot; /&gt;, &lt;paramref name=&quot;signatureObjects&quot; /&gt;, nor &lt;paramref name=&quot;objectReferences&quot; /&gt; specify any elements to sign.">Ninguno de los parámetros <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> y <paramref name="objectReferences" /> especifican elementos para firmar.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; of a part being signed references an empty, &lt;see langword=&quot;null&quot; /&gt;, or undefined &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping&quot; /&gt;.">Una propiedad <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> de un elemento cuya firma está en curso hace referencia a una propiedad <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> vacía, no definida o que tiene un valor <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;signatureId&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not a valid XML schema ID (for example, begins with a leading numeric digit).">
        <paramref name="signatureId" /> no tiene un valor <see langword="null" /> y no es un identificador de esquema XML válido (por ejemplo, empieza con un dígito numérico inicial).</exception>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">Firma digital que se usa para firmar los elementos especificados en las listas <paramref name="parts" /> y <paramref name="relationshipSelectors" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies a given X.509 certificate.">Comprueba un certificado X.509 especificado.</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to verify.">Certificado X.509 que se va a comprobar.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError&quot; /&gt; (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.">Devuelve <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (valor 0) si el certificado se comprueba correctamente; de lo contrario, devuelve una enumeración bit a bit de marcas de error.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary vsli:raw="Verifies the signatures on all signed parts within the package.">Comprueba las firmas de todos los elementos firmados del paquete.</summary>
      <param name="exitOnFailure" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to exit on first failure; otherwise, &lt;see langword=&quot;false&quot; /&gt; to continue and check all signatures.">Use <see langword="true" /> para salir del primer error; de lo contrario, use <see langword="false" /> para continuar y comprobar todas las firmas.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.">
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (valor 0) si todas las firmas se comprueban correctamente; de lo contrario, una enumeración que identifica el error.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary vsli:raw="Gets or sets the X.509 certificate embedding option used by the &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})&quot; /&gt; method to digitally sign package parts.">Obtiene o establece la opción de inserción del certificado X.509 que el método <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> usa para firmar digitalmente las partes del paquete.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values.">Uno de los valores de <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary vsli:raw="Gets a URI string that identifies the default hash algorithm used to create and verify signatures.">Obtiene una cadena de URI que identifica el algoritmo hash predeterminado usado para crear y comprobar firmas.</summary>
      <returns vsli:raw="A URI string that identifies the default hash algorithm used to create and verify signatures.">Cadena URI que identifica el algoritmo hash predeterminado usado para crear y comprobar firmas.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary vsli:raw="Gets or sets the URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">Obtiene o establece el identificador URI de la instancia de <see cref="T:System.Security.Cryptography.HashAlgorithm" /> usada para crear y comprobar firmas.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string for the URI to set is &lt;see langword=&quot;null&quot; /&gt;.">La cadena del URI que se va a establecer es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The string for the URI to set is empty.">La cadena del URI que se va a establecer está vacía.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Xml.SignedXml&quot; /&gt; URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">
        <see cref="T:System.Security.Cryptography.Xml.SignedXml" />Identificador URI de la instancia de <see cref="T:System.Security.Cryptography.HashAlgorithm" /> utilizada para crear y comprobar firmas.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary vsli:raw="Gets a value that indicates whether the package contains any signatures.">Obtiene un valor que indica si el paquete contiene firmas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the package contains signatures; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el paquete contiene firmas; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary vsli:raw="Gets or sets a handle to the parent window for displaying a certificate selection dialog box.">Obtiene o establece un identificador en la ventana primaria para mostrar un cuadro de diálogo de selección de certificado.</summary>
      <returns vsli:raw="The handle of the parent window to use to display the certificate selection dialog box.">Identificador de la ventana primaria para usarlo con el fin de mostrar el cuadro de diálogo de selección de certificado.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary vsli:raw="Gets the uniform resource identifier (URI) of the signature origin part.">Obtiene el identificador uniforme de recursos (URI) del elemento de origen de firma.</summary>
      <returns vsli:raw="The URI of the signature origin part.">URI de la parte de origen de la firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary vsli:raw="Gets the type of default signature origin relationship.">Obtiene el tipo de relación de origen de firma predeterminado.</summary>
      <returns vsli:raw="The type of default signature origin relationship.">Tipo de relación de origen de firma predeterminado.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary vsli:raw="Gets a collection of all the signatures contained in the package.">Obtiene una colección de todas las firmas contenidas en el paquete.</summary>
      <returns vsli:raw="A collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; objects.">Colección de todos los objetos <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary vsli:raw="Gets or sets the date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Obtiene o establece el formato de fecha y hora utilizado para crear la <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />de la firma.</summary>
      <returns vsli:raw="The date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">Formato de fecha y hora utilizado para crear la <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />de la firma.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary vsli:raw="Gets a dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Obtiene un diccionario que contiene todos los objetos <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> definidos y su identificador <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> de XML asociado.</summary>
      <returns vsli:raw="A dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">Diccionario que contiene cada definido <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> y su asociado XML <see cref="T:System.Security.Cryptography.Xml.Transform" /> .<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> asociado.</returns>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary vsli:raw="Represents Digital Rights Management (DRM) information that is stored in an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">Representa la información de administración de derechos digitales (DRM) que se almacena en un <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user from the encrypted rights management data stream.">Elimina del flujo de datos de administración de derechos cifrada el objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> de un usuario especificado.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; to be deleted.">El usuario de <see cref="T:System.Security.RightsManagement.UseLicense" /> que se va a eliminar.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary vsli:raw="Returns a dictionary collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs from the encrypted rights management data stream.">Devuelve una colección de diccionarios de usuario y pares clave/valor de <see cref="T:System.Security.RightsManagement.UseLicense" /> del flujo de datos de administración de derechos cifrada.</summary>
      <returns vsli:raw="A collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs that are contained in the rights managed protected package.">Una colección de usuarios y pares clave/valor de <see cref="T:System.Security.RightsManagement.UseLicense" /> incluidos en el paquete protegido de administración de derechos.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary vsli:raw="Returns the embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; from the encrypted rights management data stream.">Devuelve el objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> incrustado a partir del flujo de datos de administración de derechos cifrada.</summary>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">La información de administración de derechos de este paquete no la puede leer la versión actual de esta clase.</exception>
      <returns vsli:raw="The embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">El objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> incrustado, o <see langword="null" /> si el paquete no contiene ningún objeto <see cref="T:System.Security.RightsManagement.PublishLicense" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Returns a specified user's embedded &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; from the encrypted rights management data stream.">Devuelve un objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> incrustado de un usuario especificado a partir del flujo de datos de administración de derechos cifrada.</summary>
      <param name="userKey" vsli:raw="The user or user group to return the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for.">Usuario o grupo de usuarios para el que se va a devolver el objeto <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;userKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="userKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">La información de administración de derechos de este paquete no la puede leer la versión actual de esta clase.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the specified user; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; that matches the given &lt;paramref name=&quot;userKey&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> para el usuario especificado, o <see langword="null" /> si el paquete no contiene ningún objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> que coincide con el valor <paramref name="userKey" /> indicado.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; to the encrypted rights management data stream.">Guarda un objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> determinado en el flujo de datos de administración de derechos cifrada.</summary>
      <param name="publishLicense" vsli:raw="The publish license to store and embed in the package.">Licencia de publicación que se va a almacenar e incrustar en el paquete.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;publishLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="publishLicense" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">La información de administración de derechos de este paquete no la puede leer la versión actual de esta clase.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user to the encrypted rights management data stream.">Guarda un objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> determinado para un usuario especificado en el flujo de datos de administración de derechos cifrada.</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Usuario de <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <param name="useLicense" vsli:raw="The use license to store and embed in the package.">Licencia de uso que se va a almacenar e incrustar en el paquete.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;userKey&quot; /&gt; or &lt;paramref name=&quot;useLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">O bien el parámetro <paramref name="userKey" /> o el parámetro <paramref name="useLicense" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">La información de administración de derechos de este paquete no la puede leer la versión actual de esta clase.</exception>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the package's encrypted rights management data stream.">Obtiene o establece el objeto <see cref="T:System.Security.RightsManagement.CryptoProvider" /> para obtener acceso al flujo de datos de administración de derechos cifrada del paquete.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the rights management information.">El objeto <see cref="T:System.Security.RightsManagement.CryptoProvider" /> para obtener acceso a la información de administración de derechos.</returns>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary vsli:raw="Specifies the event args provided to the &lt;see cref=&quot;T:System.IO.Packaging.InvalidSignatureEventHandler&quot; /&gt;.">Especifica los argumentos de evento proporcionados a <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary vsli:raw="Gets the digital signature being verified.">Obtiene la firma digital que se comprueba.</summary>
      <returns vsli:raw="The digital signature being verified.">Firma digital que se comprueba.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary vsli:raw="Gets the signature verification error.">Obtiene el error de comprobación de firmas.</summary>
      <returns vsli:raw="The signature verification error.">Error de comprobación de firmas.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary vsli:raw="Provides access and information for manipulating data stores in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Proporciona acceso e información para manipular los almacenes de datos en un <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary vsli:raw="Creates a new stream with a given name.">Crea una nueva secuencia con un nombre específico.</summary>
      <param name="name" vsli:raw="The name for the new stream.">Nombre de la nueva secuencia.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Nueva secuencia con el parámetro <paramref name="name" /> especificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary vsli:raw="Creates a new stream with a given name, &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt;, and &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt;.">Crea una nueva secuencia con un nombre específico, <see cref="T:System.IO.Packaging.CompressionOption" /> y <see cref="T:System.IO.Packaging.EncryptionOption" />.</summary>
      <param name="name" vsli:raw="The name for the new stream.">Nombre de la nueva secuencia.</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream.">Opción de compresión del flujo de datos.</param>
      <param name="encryptionOption" vsli:raw="The encryption option for the data stream.">Opción de cifrado del flujo de datos.</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;, &lt;paramref name=&quot;compressionOption&quot; /&gt;, and &lt;paramref name=&quot;encryptionOption&quot; /&gt;.">Nueva secuencia con el parámetro <paramref name="name" />, <paramref name="compressionOption" /> y <paramref name="encryptionOption" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary vsli:raw="Creates a new child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; with this &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; as the parent.">Crea un nuevo elemento secundario <see cref="T:System.IO.Packaging.StorageInfo" /> con este objeto <see cref="T:System.IO.Packaging.StorageInfo" /> como elemento principal.</summary>
      <param name="name" vsli:raw="The name for the new child data store.">Nombre del nuevo almacén de datos secundario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The new child data store.">Nuevo almacén de datos secundario.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the stream with a specified name.">Elimina la secuencia con un nombre especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name of the stream to delete.">Nombre <see cref="T:System.IO.Packaging.StreamInfo" /> de la secuencia que se va a eliminar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary vsli:raw="Deletes a specified sub-store.">Elimina un subalmacén especificado.</summary>
      <param name="name" vsli:raw="The name of the sub-store to delete.">Nombre del subalmacén que se va a eliminar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance with the given name.">Devuelve la instancia de <see cref="T:System.IO.Packaging.StreamInfo" /> con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance to return.">Nombre de la instancia de <see cref="T:System.IO.Packaging.StreamInfo" /> que se va a devolver.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Secuencia con el parámetro <paramref name="name" /> especificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary vsli:raw="Returns an array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instances that are currently contained in this store.">Devuelve una matriz de instancias de <see cref="T:System.IO.Packaging.StreamInfo" /> actualmente incluidas en este almacén.</summary>
      <returns vsli:raw="An array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; objects, each pointing to an I/O steam defined within this store.">Matriz de los objetos <see cref="T:System.IO.Packaging.StreamInfo" />, cada uno de los cuales señala a una secuencia de E/S definida dentro de este almacén.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary vsli:raw="Returns the child sub-store with a given name.">Devuelve el subalmacén secundario con un nombre específico.</summary>
      <param name="name" vsli:raw="The name of the sub-store to return.">Nombre del subalmacén que se va a devolver.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt;.">Subalmacén secundario con el <paramref name="name" /> especificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary vsli:raw="Returns an array of the child sub-stores that are currently contained in this store.">Devuelve una matriz de los subalmacenes secundarios que se encuentran actualmente en este almacén.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; objects, each pointing to a sub-store defined within this store.">Una matriz de los objetos <see cref="T:System.IO.Packaging.StorageInfo" />, cada uno de los cuales apunta a un subalmacén definido dentro de este almacén.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given stream exists.">Devuelve un valor que indica si existe una secuencia determinada.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name to check for.">Nombre de <see cref="T:System.IO.Packaging.StreamInfo" /> que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a stream with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existe una secuencia con el parámetro <paramref name="name" /> especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given child sub-store exists.">Devuelve un valor que indica si existe un subalmacén secundario determinado.</summary>
      <param name="name" vsli:raw="The child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; name to check for.">Nombre del objeto <see cref="T:System.IO.Packaging.StorageInfo" /> secundario que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existe un subalmacén secundario con el parámetro <paramref name="name" /> especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary vsli:raw="Gets the name of the store.">Obtiene el nombre del almacén.</summary>
      <returns vsli:raw="The name of this store.">Nombre del almacén.</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary vsli:raw="Provides access and information for manipulating I/O streams within a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">Proporciona acceso e información para manipular secuencias de E/S dentro de <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary vsli:raw="Returns a stream opened in a default &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Devuelve una secuencia abierta con un tipo de <see cref="T:System.IO.FileMode" /> y <see cref="T:System.IO.FileAccess" /> predeterminado.</summary>
      <returns vsli:raw="The I/O stream opened in a default &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">La secuencia de E/S abierta con un tipo de <see cref="T:System.IO.Packaging.Package" /> y <see cref="T:System.IO.FileMode" /> de raíz de <see cref="T:System.IO.FileAccess" /> predeterminado.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt;.">Devuelve una secuencia de E/S abierta con un tipo de <see cref="T:System.IO.FileMode" /> especificado.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">El modo de archivo en el que se va a abrir la secuencia.</param>
      <returns vsli:raw="The stream opened in the specified file &lt;paramref name=&quot;mode&quot; /&gt;.">La secuencia abierta en el <paramref name="mode" /> de archivo especificado.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">Devuelve una secuencia de E/S abierta en un tipo de <see cref="T:System.IO.FileMode" /> especificado y con un tipo de <see cref="T:System.IO.FileAccess" /> determinado.</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">El modo de archivo en el que se va a abrir la secuencia.</param>
      <param name="access" vsli:raw="The file access mode in which to read or write to the stream.">El modo de acceso a archivos con el que se va a leer o escribir en la secuencia.</param>
      <returns vsli:raw="The I/O stream opened in the specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">La secuencia de E/S abierta en el tipo de <see cref="T:System.IO.FileMode" /> especificado y con un tipo de <see cref="T:System.IO.FileAccess" /> determinado.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt; setting for the stream.">Obtiene la configuración de <see cref="T:System.IO.Packaging.CompressionOption" /> de la secuencia.</summary>
      <returns vsli:raw="The compression option setting for the package stream.">La configuración de la opción de compresión de la secuencia de paquetes.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt; setting for the stream.">Obtiene la configuración de <see cref="T:System.IO.Packaging.EncryptionOption" /> de la secuencia.</summary>
      <returns vsli:raw="The encryption option setting for the package stream.">La configuración de la opción de cifrado de la secuencia de paquetes.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary vsli:raw="Gets the name of the stream.">Obtiene el nombre de la secuencia.</summary>
      <returns vsli:raw="The name of this stream.">El nombre de esta secuencia.</returns>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary vsli:raw="Specifies the result of a certificate or signature verification.">Especifica el resultado de una comprobación de un certificado o una signatura.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary vsli:raw="The X.509 certificate is not available to verify the signature.">El certificado X.509 no está disponible para comprobar la signatura.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary vsli:raw="The X.509 certificate is not valid.">El certificado X.509 no es válido.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary vsli:raw="The signature is not valid.">La signatura no es válida.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary vsli:raw="The specified package or part has no signature.">El paquete o el elemento especificado no tiene ninguna signatura.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary vsli:raw="A reference relationship to the signature was not found.">No se encontró ninguna relación de referencia con la signatura.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary vsli:raw="The verification was successful.">La comprobación se realizó correctamente.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary vsli:raw="Specifies the method of rights management authentication.">Especifica el método de autenticación de administración de derechos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary vsli:raw="Implicit authentication to any requesting user.">Autenticación implícita para cualquier usuario solicitante.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary vsli:raw="Windows Live ID authentication.">Autenticación de Windows Live ID.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary vsli:raw="Windows authentication in a corporate domain environment.">Autenticación de Windows en un entorno de dominio corporativo.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary vsli:raw="Either Windows authentication or Windows Live ID authentication.">Autenticación de Windows o autenticación de Windows Live ID.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary vsli:raw="Represents a right granted to a user to access information in a rights managed document.">Representa un derecho concedido a un usuario para acceder a información de un documento con derechos administrados.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.ContentGrant" /> que concede un <see cref="T:System.Security.RightsManagement.ContentUser" /> especificado a un <see cref="T:System.Security.RightsManagement.ContentRight" /> especificado.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">Usuario al que se concede el derecho de acceso.</param>
      <param name="right" vsli:raw="The access right that is granted.">Derecho de acceso que se concede.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; for a specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; duration.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.ContentGrant" />, que concede un <see cref="T:System.Security.RightsManagement.ContentUser" /> especificado a un <see cref="T:System.Security.RightsManagement.ContentRight" /> especificado para una duración <see cref="T:System.DateTime" /> especificada.</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">Usuario al que se concede el derecho de acceso.</param>
      <param name="right" vsli:raw="The access right that is granted.">Derecho de acceso que se concede.</param>
      <param name="validFrom" vsli:raw="The starting date and time that the right begins.">Fecha y hora de inicio en la que comienza el derecho.</param>
      <param name="validUntil" vsli:raw="The ending date and time that the right expires.">Fecha y hora de fin en la que expira el derecho.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; that is granted.">Obtiene la enumeración <see cref="T:System.Security.RightsManagement.ContentRight" /> que se concede.</summary>
      <returns vsli:raw="The access right that is granted to the &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.User&quot; /&gt;, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">Derecho de acceso que se concede a <see cref="P:System.Security.RightsManagement.ContentGrant.User" />, tal como se especificó en el constructor <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary vsli:raw="Gets the user who is granted the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt;.">Obtiene el usuario al que se concede la propiedad <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> de acceso.</summary>
      <returns vsli:raw="The user that the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; is granted to, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">Usuario al que se concede la propiedad <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> de acceso, tal como se especificó en el constructor <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary vsli:raw="Gets the starting date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins.">Obtiene la fecha y hora de inicio en la que comienza la propiedad <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> concedida.</summary>
      <returns vsli:raw="The start date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt; if there is there is no starting limitation.">Fecha y hora de inicio en que comienza el concedido <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> , o <see cref="T:System.DateTime" /> .<see cref="F:System.DateTime.MinValue" /> Si no hay ninguna limitación de inicio.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary vsli:raw="Gets the ending date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires.">Obtiene la fecha y hora de fin en la que expira la propiedad <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> concedida.</summary>
      <returns vsli:raw="The end date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MaxValue&quot;&gt;DateTime.MaxValue&lt;/see&gt; if there is no ending limitation.">Fecha y hora de finalización del concedido <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> , o <see cref="T:System.DateTime" /> .<see cref="F:System.DateTime.MaxValue" /> Si no hay ninguna limitación de cierre.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary vsli:raw="Specifies rights that can be granted to users for accessing content in a rights managed document.">Especifica los derechos que se pueden conceder a los usuarios para acceder al contenido de un documento con derechos administrados.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary vsli:raw="The user can edit the document that contains the protected content.">El usuario puede modificar el documento que contiene el contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary vsli:raw="The user can edit and encrypt the protected content.">El usuario puede modificar y cifrar el contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary vsli:raw="The user can export the protected content.">El usuario puede exportar el contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary vsli:raw="The user can extract (copy and paste) the protected content.">El usuario puede extraer (copiar y pegar) el contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary vsli:raw="The user can forward the protected content to another user.">El usuario puede reenviar el contenido protegido a otro usuario.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary vsli:raw="The user can control programmed access to the protected content.">El usuario puede controlar el acceso programado al contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary vsli:raw="The user is the content owner.  The owner can edit and encrypt the protected content, and decrypt the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">El usuario es el propietario del contenido.  El propietario puede modificar y cifrar el contenido protegido y descifrar el elemento <see cref="T:System.Security.RightsManagement.PublishLicense" /> con firma.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary vsli:raw="The user can print the protected content.">El usuario puede imprimir el contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary vsli:raw="The user can reply to the sender of the protected content.">El usuario puede responder al remitente del contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary vsli:raw="The user can &quot;reply all&quot; to recipients of the protected content.">El usuario puede "responder a todos" los destinatarios del contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary vsli:raw="The user can digitally sign the protected content.">El usuario puede firmar digitalmente el contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary vsli:raw="The user can view the protected content.">El usuario puede ver el contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary vsli:raw="The user can decrypt and view the rights specified in the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">El usuario puede descifrar y ver los derechos especificados en el elemento <see cref="T:System.Security.RightsManagement.PublishLicense" /> con firma.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary vsli:raw="Represents a user or user-group for granting access to rights managed content.">Representa un usuario o grupo de usuarios a los que se concede acceso al contenido con derechos administrados.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.ContentUser" />.</summary>
      <param name="name" vsli:raw="The user or group name.">Nombre del usuario o grupo.</param>
      <param name="authenticationType" vsli:raw="The method for authentication.">Método de autenticación.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; is equivalent to another given instance.">Devuelve un valor que indica si <see cref="T:System.Security.RightsManagement.ContentUser" /> es equivalente a otra instancia dada.</summary>
      <param name="obj" vsli:raw="The user instance to compare for equality.">Instancia de usuario cuya igualdad se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt; are the same for both this user and the given user; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> y <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> son iguales para este usuario y el usuario dado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary vsli:raw="Returns a computed hash code based on the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Devuelve un código hash calculado basado en los valores <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> y <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> del usuario.</summary>
      <returns vsli:raw="A hash code computed from the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">Código hash calculado a partir de los valores <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> y <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> del usuario.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary vsli:raw="Returns a value that indicates whether the user is currently authenticated.">Devuelve un valor que indica si el usuario está actualmente autenticado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user is currently authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt; until authenticated.">
        <see langword="true" /> si el usuario está autenticado actualmente; en caso contrario, <see langword="false" />.  El valor predeterminado es <see langword="false" /> hasta que se autentica.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary vsli:raw="Gets an instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Obtiene una instancia del rol de <see cref="T:System.Security.RightsManagement.ContentUser" /> "Anyone".</summary>
      <returns vsli:raw="An instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Instancia del rol de <see cref="T:System.Security.RightsManagement.ContentUser" /> "Anyone".</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Obtiene el objeto <see cref="T:System.Security.RightsManagement.AuthenticationType" /> especificado para el constructor <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">
        <see cref="T:System.Security.RightsManagement.AuthenticationType" /> que se ha especificado para el constructor <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary vsli:raw="Gets the user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Obtiene el nombre de usuario o grupo especificado para el constructor <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns vsli:raw="The user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">Nombre de usuario o grupo especificado para el constructor <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary vsli:raw="Gets an instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Obtiene una instancia del rol de <see cref="T:System.Security.RightsManagement.ContentUser" /> "Owner".</summary>
      <returns vsli:raw="An instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">Instancia del rol de <see cref="T:System.Security.RightsManagement.ContentUser" /> "Owner".</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary vsli:raw="Provides digital rights management services for encrypting and decrypting protected content.">Proporciona servicios de administración de derechos digitales para cifrar y descifrar contenido protegido.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary vsli:raw="Decrypts cipher text to clear text.">Descifra texto cifrado para obtener texto no cifrado.</summary>
      <param name="cryptoText" vsli:raw="The cipher text to decrypt.">Texto cifrado que se va a descifrar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cipherText&quot; /&gt; is null.">
        <paramref name="cipherText" /> es null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Decryption right not granted.">Derecho de descifrado no concedido.</exception>
      <returns vsli:raw="The decrypted clear text of &lt;paramref name=&quot;cryptoText&quot; /&gt;.">Texto descifrado de <paramref name="cryptoText" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt;.">Libera todos los recursos que usa <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Security.RightsManagement.CryptoProvider" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary vsli:raw="Encrypts clear text to cipher text.">Cifra texto no cifrado para obtener texto cifrado.</summary>
      <param name="clearText" vsli:raw="The clear text content to encrypt.">Contenido de texto no cifrado que se va a cifrar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;clearText&quot; /&gt; is null.">
        <paramref name="clearText" /> es null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Encryption is not permitted.">No se permite el cifrado.</exception>
      <returns vsli:raw="Encrypted cipher text of the given &lt;paramref name=&quot;clearText&quot; /&gt;.">Cifra texto cifrado del <paramref name="clearText" /> proporcionado.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary vsli:raw="Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.">Libera recursos y realiza la limpieza interna antes de que recopilación de elementos no utilizados reclame la instancia.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary vsli:raw="Gets the cipher block size, in bytes.">Obtiene el tamaño del bloque cifrado, en bytes.</summary>
      <returns vsli:raw="The cipher block size, in bytes.  The default block size for Advanced Encryption Standard (AES) is 8.">Tamaño del bloque cifrado, en bytes.  El tamaño de bloque predeterminado para Estándar de cifrado avanzado (AES) es 8.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary vsli:raw="Gets a collection listing the rights that passed verification and that are granted to the user.">Obtiene una colección que enumera los derechos que han pasado la comprobación y que se conceden al usuario.</summary>
      <returns vsli:raw="A collection enumerating the rights that passed verification and that are granted to the user.">Colección que enumera los derechos que han pasado la comprobación y que se conceden al usuario.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to decrypt.">Obtiene un valor que indica si el usuario tiene derechos para descifrar.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to decrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si <see cref="T:System.Security.RightsManagement.UseLicense" /> concede al usuario derechos para descifrar; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to encrypt.">Obtiene un valor que indica si el usuario tiene derechos para cifrar.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to encrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si <see cref="T:System.Security.RightsManagement.UseLicense" /> concede al usuario derechos para cifrar; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; can accept buffers that are different block sizes in length.">Obtiene un valor que indica si <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> y <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> pueden aceptar búferes con tamaños de bloque de longitud diferente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; can be a different length from the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the buffers passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; must be the exact same length.  For AES the default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> es si el búfer pasado a <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> puede tener una longitud diferente a la del búfer pasado a <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> ; de lo contrario, es <see langword="false" /> si los búferes pasados a <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> y <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> deben tener la misma longitud exacta.  Para AES, el valor predeterminado es <see langword="true" /> .</returns>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary vsli:raw="Represents an immutable (read-only) pair of &quot;Name&quot; and &quot;Description&quot; strings.">Representa un par inmutable (de solo lectura) de cadenas "Name" y "Description".</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="name" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; property.">Valor de la propiedad <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> de la configuración regional.</param>
      <param name="description" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; property.">Valor de la propiedad <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> de la configuración regional.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;name&quot; /&gt; parameter or &lt;paramref name=&quot;description&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="name" /> o <paramref name="description" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of a given object match those of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Indica si las propiedades <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> y <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> de un objeto dado coinciden con las de este objeto <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="obj" vsli:raw="The object to compare the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of.">Objeto cuyas propiedades <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> y <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> se comparan.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of the given object match those of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las propiedades <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> y <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> del objeto dado coinciden con las de esta instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary vsli:raw="Gets a computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties.">Obtiene un código hash calculado basado en las propiedades <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> y <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</summary>
      <returns vsli:raw="A computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">Código hash calculado basado en las propiedades <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> y <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> de este <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary vsli:raw="Gets the locale description.">Obtiene la descripción de la configuración regional.</summary>
      <returns vsli:raw="The locale description.">Descripción de la configuración regional.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary vsli:raw="Gets the locale name.">Obtiene el nombre de la configuración regional.</summary>
      <returns vsli:raw="The locale name.">El nombre de la configuración regional.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary vsli:raw="Represents a signed rights managed publish license.">Representa una licencia de publicación con derechos administrados firmada.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; class from a specified serialized and signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.PublishLicense" /> desde un objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> concreto serializado y firmado.</summary>
      <param name="signedPublishLicense" vsli:raw="A signed and serialized publish license.">Licencia de publicación firmada y serializada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signedPublishLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="signedPublishLicense" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The license is invalid.">La licencia no es válida.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Intenta adquirir <see cref="T:System.Security.RightsManagement.UseLicense" /> para un usuario o grupo de usuarios en un objeto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> especificado.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Entorno seguro para la activación de la licencia y el enlace.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">Se produjo un error en la autenticación.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">Objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> para un usuario o grupo de usuarios en el parámetro <paramref name="secureEnvironment" />especificado.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Intenta adquirir <see cref="T:System.Security.RightsManagement.UseLicense" /> para un usuario o grupo de usuarios en un objeto <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> especificado.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Entorno seguro para la activación de la licencia y el enlace.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">Se produjo un error en la autenticación.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">Objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> para un usuario o grupo de usuarios en el parámetro <paramref name="secureEnvironment" />especificado.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Returns a decrypted &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; version of this signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">Devuelve una versión de <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> descifrada de este objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmado.</summary>
      <param name="cryptoProvider" vsli:raw="The rights management service to use for decrypting the license.">Servicio con derechos administrados que se usa para descifrar la licencia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cryptoProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cryptoProvider" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A decrypted, unsigned version of this license.">Versión descifrada sin firma de esta licencia.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string that was used to create this license.">Devuelve la cadena XrML serializada que se usó para crear esta licencia.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string that was used to create this license.">Cadena Lenguaje de marcado con derechos extensible (XrML) serializada que se usó para crear esta licencia.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary vsli:raw="Gets the publisher-created content identifier.">Obtiene el identificador de contenido creado por el editor.</summary>
      <returns vsli:raw="The publisher-created content identifier.">Identificador de contenido creado por el editor.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets the contact name for the author or publisher of the content.">Obtiene el nombre de contacto del autor o editor del contenido.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">Nombre de contacto del autor o editor del contenido.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets the contact URI for the author or publisher of the content.">Obtiene el URI de contacto del autor o publicador del contenido.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">Identificador uniforme de recursos (URI) de contacto del autor o editor del contenido.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary vsli:raw="Gets the URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">Obtiene el URI que se va a usar para adquirir <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <returns vsli:raw="The URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">URI que se va a utilizar para adquirir <see cref="T:System.Security.RightsManagement.UseLicense" /> .</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary vsli:raw="Represents an error condition when a rights management operation cannot complete successfully.">Representa una condición de error cuando una operación de administración de derechos no se completa correctamente.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.RightsManagementException" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class and sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with information about the exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.RightsManagementException" /> y establece el almacén de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con información sobre la excepción.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Objeto que aloja los datos serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con el valor de <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> especificado.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Código de error del error.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con los valores de <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> y <see cref="P:System.Exception.InnerException" /> dados.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Código de error del error.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">Instancia de excepción que provocó el error.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con los valores de <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> y <see cref="P:System.Exception.Message" /> dados.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Código de error del error.</param>
      <param name="message" vsli:raw="A message that describes the error.">Mensaje que describe el error.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con los valores de <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, <see cref="P:System.Exception.Message" /> y <see cref="P:System.Exception.InnerException" /> dados.</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">Código de error del error.</param>
      <param name="message" vsli:raw="A message that describes the error.">Mensaje que describe el error.</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">Instancia de excepción que provocó el error.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given message.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con un mensaje dado.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Mensaje que describe el error.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.RightsManagementException" /> con los valores de <see cref="P:System.Exception.Message" /> y <see cref="P:System.Exception.InnerException" /> dados.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Mensaje que describe el error.</param>
      <param name="innerException" vsli:raw="The exception instance that caused this exception.">Instancia de excepción que produjo esta excepción.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with the parameter name and information about the exception.">Establece el almacén de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con el nombre del parámetro e información sobre la excepción.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Objeto que aloja los datos serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; for the error.">Obtiene el <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> del error.</summary>
      <returns vsli:raw="The failure code for the error.">Código de error del error.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary vsli:raw="Specifies error conditions that can occur when performing a rights management operation.">Especifica las condiciones de error que se pueden producir al realizar una operación de administración de derechos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary vsli:raw="Asynchronous operation canceled, or a non-recoverable error has occurred.">La operación asincrónica se canceló o se produjo un error no recuperable.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary vsli:raw="License activation failed; rights management services are not properly configured.">Error de activación de licencia: los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary vsli:raw="The current user was not found in the Active Directory (AD) for certification under Windows authentication.">El usuario actual no se encontró en Active Directory (AD) para su certificación en la autenticación de Windows.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary vsli:raw="The requested operation is already in progress.">Ya hay una operación solicitada en curso.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary vsli:raw="Possible authentication error (HTTP error 401) returned by an Internet request. Or, the current user does not have valid domain credentials in a silent user activation attempt. Or, the certification server in silent user activation is not in the local intranet or trusted sites zone.">Posible error de autenticación (error HTTP 401) devuelto por una solicitud de Internet. O bien, el usuario actual no tiene credenciales de dominio válidas en un intento de activación de usuario silenciosa. O bien, el servidor de certificación en la activación de usuario silenciosa no está en la intranet local o en la zona de sitios de confianza.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary vsli:raw="An invalid constant was passed.">Se pasó una constante no válida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary vsli:raw="The access condition is not matched to the enabling principal that is handed into the bind.">La condición de acceso no coincide con la entidad de seguridad de habilitación que se pasa en el enlace.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary vsli:raw="The current user does not satisfy the conditions defined in the End Use License (EUL).">El usuario actual no satisface las condiciones definidas en la licencia de uso final.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary vsli:raw="The specified resource is not contained in any WORK node of the license.">El recurso especificado no está incluido en ningún nodo WORK de la licencia.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary vsli:raw="The enabling principal does not match the issued principal of the End Use License (EUL).">La entidad de seguridad habilitante no coincide con la entidad de seguridad emitida de la licencia de uso final.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Ha expirado el período de tiempo definido para el contenido protegido; ya no se permite el acceso.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary vsli:raw="The current machine is not defined within the rights managed group identity.">El equipo actual no está definido en la identidad de grupo administrado con derechos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary vsli:raw="The current user does not have rights to access the protected content.">El usuario actual no tiene derechos de acceso al contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary vsli:raw="The specified rights group is not contained in the End Use License (EUL).">El grupo de derechos especificado no está incluido en la licencia de uso final.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary vsli:raw="The current user does not have rights to access the protected content.">El usuario actual no tiene derechos de acceso al contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary vsli:raw="The license requires that a new revocation list must be acquired.">La licencia requiere que se debe adquirir una nueva lista de revocación.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary vsli:raw="The current user does not have rights to access the protected content.">El usuario actual no tiene derechos de acceso al contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary vsli:raw="The current user does not have rights to access the protected content.">El usuario actual no tiene derechos de acceso al contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary vsli:raw="The current user does not have rights to access the protected content.">El usuario actual no tiene derechos de acceso al contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary vsli:raw="The current user does not have rights to access the protected content.">El usuario actual no tiene derechos de acceso al contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary vsli:raw="The End Use License (EUL) contains no WORK node.">La licencia de uso final no contiene ningún nodo TRABAJO.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Ha expirado el período de tiempo definido para el contenido protegido; ya no se permite el acceso.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary vsli:raw="The rights management certificate chain is broken.">La cadena de certificados de administración de derechos se ha interrumpido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary vsli:raw="Clock rollback has been detected. Protected content cannot be accessed.">Se ha detectado una reversión de reloj. No se puede acceder al contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary vsli:raw="A cryptographic operation that was requested is not supported. For example, passing an RMS encrypting object for decrypting purposes.">No se admite una operación criptográfica solicitada. Por ejemplo, pasar un objeto de cifrado de RMS con fines de descifrado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary vsli:raw="Cannot open or publish content with restricted permissions because a debugger has been detected.">No se puede abrir o publicar contenido con permisos restringidos porque se ha detectado un depurador.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary vsli:raw="The user's email address cannot be verified.">No se puede comprobar la dirección de correo electrónico del usuario.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary vsli:raw="The specified principal cannot be enabled.">No se puede habilitar la entidad de seguridad especificada.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary vsli:raw="Encryption is not permitted.">No se permite el cifrado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">
        <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> no puede cargar.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">
        <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> no puede cargar.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary vsli:raw="The authorized time period defined in the issuance license template has expired; access is no longer permitted.">Ha expirado el período de tiempo autorizado definido en la plantilla de licencia de emisión; ya no se permite el acceso.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary vsli:raw="The option specified has already been set.">Ya se ha establecido la opción especificada.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary vsli:raw="A user name was not specified for the client session.">No se ha especificado un nombre de usuario para la sesión de cliente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is incorrectly formatted. Rights management services are not properly configured.">El identificador de hardware (HID) utilizado en un intento de activación de la máquina tiene un formato incorrecto. Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is invalid. Rights management services are not properly configured.">El identificador de hardware (HID) utilizado en un intento de activación de la máquina no es válido. Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary vsli:raw="The content ID from the license does not match the content ID the license storage session.">El identificador de contenido de la licencia no coincide con el identificador de contenido de la sesión de almacenamiento de licencia.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary vsli:raw="An object type passed is incompatible with this operation.">Un tipo de objeto pasado no es compatible con esta operación.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary vsli:raw="When creating a bound license, an issuance license, not an end-use license, was specified.">Al crear una licencia enlazada, se especificó una licencia de emisión, no una licencia de usuario final.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary vsli:raw="Some information is missing.">Falta cierta información.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary vsli:raw="An installation operation failed.">Error en una operación de instalación.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary vsli:raw="The algorithm type specified is invalid.">El tipo de algoritmo especificado no es válido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary vsli:raw="RMS Server email address verification failed.">Error de comprobación de dirección de correo electrónico de servidor RMS.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary vsli:raw="The specified encoding type is invalid.">El tipo de codificación especificado no es válido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary vsli:raw="Either the environment or the enabling principal handle is invalid.">El entorno o el identificador principal de habilitación no es válido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary vsli:raw="The Rights Management Services template contains one or more errors.">La plantilla de Rights Management Services contiene uno o más errores.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary vsli:raw="The key length specified in a key/value pair is invalid.">La longitud de clave especificada en un par de clave/valor no es válida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary vsli:raw="The license structure in one of the certificates is invalid.">La estructura de licencias en uno de los certificados no es válida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary vsli:raw="Rights management signed digital certificate cannot be validated. (The signed certificate may have been tampered.)">No se puede validar el certificado digital firmado derechos de administración. (El certificado de firma puede haber sido alterado).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary vsli:raw="The numeric value specified is invalid.">El valor numérico especificado no es válido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary vsli:raw="The specified registry path is invalid.">La ruta de acceso del registro especificada no es válida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary vsli:raw="The time information specified is invalid.">La información de hora especificada no es válida.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary vsli:raw="The rights management version is incorrect.">La versión de administración de derechos es incorrecta.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary vsli:raw="The key type specified in a key/value pair is not supported.">No se admite el tipo de clave especificado en un par de clave/valor.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary vsli:raw="A library operation failed.">Error en la operación de biblioteca.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary vsli:raw="The specified library plug-in is not supported.">No se admite el complemento de biblioteca especificado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary vsli:raw="An End Use License (EUL) could not be acquired from the rights management server.">No se pudo adquirir una licencia de uso final desde el servidor de administración de derechos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary vsli:raw="The current user credentials are not valid for acquiring a license.">Las credenciales del usuario actual no son válidas para adquirir una licencia.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary vsli:raw="An operation is in violation of the rights management manifest policy.">Una operación supone una infracción de la directiva de manifiesto de administración de derechos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary vsli:raw="The specified metadata could net be set.">No se pudieron establecer los metadatos especificados.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary vsli:raw="The user is not activated, or no Rights Account Certificate (RAC) was submitted and none was found in the license store to match the license associated with this session.">El usuario no está activado, o se envió ningún certificado de cuenta de derechos (RAC) y no se encontró ninguno en el almacén de licencias para que coincida con la licencia asociada a esta sesión.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary vsli:raw="The computer must be activated before the user can be activated.">El equipo debe activarse antes de poder activar el usuario.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary vsli:raw="Rights management cannot connect to the URI specified for the license server.">Rights Management no puede conectarse al URI especificado del servidor de licencias.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary vsli:raw="The protected content is corrupted.">El contenido protegido está dañado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary vsli:raw="A required license is not available.">La licencia necesaria no está disponible.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary vsli:raw="No license or certificate exists at the specified index.">No existe ninguna licencia o certificado en el índice especificado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary vsli:raw="Rights managed content is corrupted.">El contenido con derechos administrados está dañado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary vsli:raw="The item requested to delete does not exist.">El elemento solicitado para eliminar no existe.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary vsli:raw="The license server's maximum quota of End Use Licenses (EULs) has been reached.">Se ha alcanzado la cuota máxima del servidor de licencias de uso final.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary vsli:raw="The document does not contain an Owner License.">El documento no contiene ninguna licencia de propietario.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary vsli:raw="No instances of the requested attribute exist.">No existe ninguna instancia del atributo solicitado.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary vsli:raw="The specified license was not found.">No se encontró la licencia especificada.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary vsli:raw="The Rights Management server does not allow temporary certification of the current user.">El servidor de Rights Management no permite la certificación temporal del usuario actual.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary vsli:raw="Certificate or license revocation information has not been set.">No se estableció la información de revocación de certificados o licencias.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary vsli:raw="The current user does not have rights to access the protected content.">El usuario actual no tiene derechos de acceso al contenido protegido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary vsli:raw="The requested right was not specified when the content was published with rights management.">El derecho solicitado no se ha especificado cuando se publicó el contenido con administración de derechos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">Los servicios de Rights Management no están configurados correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary vsli:raw="Operation has competed successfully.">La operación se ha completado correctamente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary vsli:raw="The number of certificates has exceeded the maximum number allowed.">El número de certificados ha superado el máximo permitido.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary vsli:raw="Too many &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; instance have been created.">Se han creado demasiadas instancias de <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary vsli:raw="An unspecified error occurred.  Also thrown when an application runs in debug mode.">Se ha producido un error no especificado.  También se produce cuando una aplicación se ejecuta en modo de depuración.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary vsli:raw="If a request is made for computer activation or a rights account certificate, receiving &lt;see cref=&quot;F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault&quot; /&gt; indicates that the application should pass &lt;see langword=&quot;null&quot; /&gt; into the ActServInfo parameter.">Si se realiza una solicitud de activación de equipo o un certificado de cuenta de derechos, la recepción de <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" /> indica que la aplicación debe pasar <see langword="null" /> en el parámetro ActServInfo.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">Ha expirado el período de tiempo definido para el contenido protegido; ya no se permite el acceso.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary vsli:raw="Represents a secure client session for user activation, license binding, and other rights management operations.">Representa una sesión de cliente segura para la activación de usuario, el enlace de licencias y otras operaciones de administración de derechos.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary vsli:raw="Creates a secure client session given an application rights manifest, &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt;, and &lt;see cref=&quot;T:System.Security.RightsManagement.UserActivationMode&quot; /&gt;.">Crea una sesión de cliente segura dado un manifiesto de derechos de aplicación, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> y <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">Manifiesto de derechos de aplicación.</param>
      <param name="authentication" vsli:raw="The method of authentication.">Método de autenticación.</param>
      <param name="userActivationMode" vsli:raw="The type of the user rights account certificate.">Tipo de certificado de cuenta de derechos de usuario.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Una sesión de cliente segura para la activación, el enlace de licencias y otras operaciones de administración de derechos.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Creates a secure client session for a specified user with a given rights manifest.">Crea una sesión de cliente segura para un usuario especificado con un determinado manifiesto de derechos.</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">Manifiesto de derechos de aplicación.</param>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">Usuario o grupo de usuarios a los que se concede acceso al contenido con derechos administrados.</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">Una sesión de cliente segura para la activación, el enlace de licencias y otras operaciones de administración de derechos.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Libera todos los recursos que usa <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary vsli:raw="Returns a list of the activated users.">Devuelve una lista de los usuarios activados.</summary>
      <returns vsli:raw="A list of the currently activated users.">Lista de los usuarios activados actualmente.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Indicates whether a given user has been activated for accessing rights managed content.">Indica si se activó un usuario determinado para tener acceso al contenido con derechos administrados.</summary>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">Usuario o grupo de usuarios a los que se concede acceso al contenido con derechos administrados.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given &lt;paramref name=&quot;user&quot; /&gt; has been activated for accessing rights managed content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se activó el <paramref name="user" /> determinado para tener acceso al contenido con derechos administrados; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Removes the license activation for a specified user.">Quita la activación de licencia de un usuario especificado.</summary>
      <param name="user" vsli:raw="The user to remove the license activation for.">Usuario al que se quitará la activación de licencia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;user&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="user" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The given &lt;paramref name=&quot;user&quot; /&gt; is not authenticated with either Windows authentication or Passport authentication.">El elemento <paramref name="user" /> dado no está autenticado con la autenticación de Windows o autenticación de Passport.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest&quot; /&gt; specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Obtiene el valor <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> especificado cuando se creó <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns vsli:raw="The application manifest specified to the &lt;see cref=&quot;Overload:System.Security.RightsManagement.SecureEnvironment.Create&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; is created.">Manifiesto de aplicación especificado para el método <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> cuando se crea <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary vsli:raw="Gets the user or user-group specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Obtiene el usuario o el grupo de usuarios especificado cuando se creó <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns vsli:raw="The user or user-group specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">Usuario o grupo de usuarios especificado para el método <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> cuando se creó <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary vsli:raw="Represents an unsigned rights managed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; or an unsigned &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; template.">Representa una <see cref="T:System.Security.RightsManagement.PublishLicense" /> administrada de derechos sin firmar o una plantilla de <see cref="T:System.Security.RightsManagement.PublishLicense" /> sin firmar.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class from a specified XrML publish-license template.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> a partir de una plantilla de licencia de publicación de XrML especificada.</summary>
      <param name="publishLicenseTemplate" vsli:raw="The Extensible Rights Markup Language (XrML) publish-license template to use to create this license.">Plantilla de licencia de publicación de Lenguaje de marcado con derechos extensible (XrML) usada para crear esta licencia.</param>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary vsli:raw="Creates a signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and returns a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Crea un objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmado y devuelve un objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> para el autor del documento.</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">Entorno seguro para la activación de la licencia y el enlace.</param>
      <param name="authorUseLicense" vsli:raw="A returned &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">Objeto <see cref="T:System.Security.RightsManagement.UseLicense" /> devuelto para el autor del documento.</param>
      <returns vsli:raw="The signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; that is created by signing this &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Objeto <see cref="T:System.Security.RightsManagement.PublishLicense" /> firmado que se crea al firmar <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary vsli:raw="Returns a serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Devuelve una plantilla serializada creada a partir del elemento XrML del objeto <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
      <returns vsli:raw="A serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">Plantilla serializada creada a partir del elemento XrML del objeto <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary vsli:raw="Gets or sets the publisher-created content identifier.">Obtiene o establece el identificador de contenido creado por el publicador.</summary>
      <returns vsli:raw="The publisher-created rights-managed content identifier.">Identificador de contenido con derechos administrados creado por el publicador.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary vsli:raw="Gets a collection of assigned user rights.">Obtiene una colección de derechos del usuario asignados.</summary>
      <returns vsli:raw="A collection of the assigned user rights that are provided in this license.">Colección de derechos de usuario asignados que se proporcionan en esta licencia.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary vsli:raw="Gets a collection of name and description pairs.">Obtiene una colección de pares de nombre y descripción.</summary>
      <returns vsli:raw="A collection of name and description pairs.">Colección de pares de nombre y descripción.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary vsli:raw="Gets or sets the content owner.">Obtiene o establece el propietario del contenido.</summary>
      <returns vsli:raw="The user who owns the published content.">Usuario propietario del contenido publicado.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets or sets the contact name for the author or publisher of the content.">Obtiene o establece el nombre de contacto del autor o editor del contenido.</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">Nombre de contacto del autor o editor del contenido.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets or sets the contact URI for the author or publisher of the content.">Obtiene o establece el URI de contacto del autor o publicador del contenido.</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">Identificador uniforme de recursos (URI) de contacto del autor o editor del contenido.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary vsli:raw="Represents a license that enables access to protected rights managed content.">Representa una licencia que permite el acceso a contenido administrado con derechos protegidos.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <param name="useLicense" vsli:raw="A use license in serialized Extensible Rights Markup Language (XrML) form.">Licencia de uso en formato Lenguaje de marcado con derechos extensible (XrML) serializado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="useLicense" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is invalid.">
        <paramref name="useLicense" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Binds the license to a given &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">Enlaza la licencia a un <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> determinado.</summary>
      <param name="secureEnvironment" vsli:raw="The environment to bind the license to.">Entorno al que se va a enlazar la licencia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; instance if the license binding succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Instancia <see cref="T:System.Security.RightsManagement.CryptoProvider" /> si el enlace de la licencia se realizó correctamente; en caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary vsli:raw="Indicates if this license is equivalent to another given license.">Indica si esta licencia es equivalente a otra licencia determinada.</summary>
      <param name="x" vsli:raw="The license to compare.">Licencia que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both licenses are the equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ambas licencias son equivalentes; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary vsli:raw="Returns the hash code associated with this license.">Devuelve el código hash asociado con esta licencia.</summary>
      <returns vsli:raw="A hash code for this license.">Código hash para esta licencia.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string used to create this license.">Devuelve la cadena XrML serializada utilizada para crear esta licencia.</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string originally passed to the &lt;see cref=&quot;M:System.Security.RightsManagement.UseLicense.#ctor(System.String)&quot; /&gt; constructor.">Cadena Lenguaje de marcado con derechos extensible (XrML) serializada pasada originalmente al constructor <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary vsli:raw="Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Obtiene el diccionario de datos de aplicación que contiene los pares de clave y valor pasados de la aplicación de publicación a la aplicación que los utiliza.</summary>
      <returns vsli:raw="The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">Diccionario de datos de aplicación que contiene los pares de clave y valor pasados de la aplicación de publicación a la aplicación que los utiliza.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary vsli:raw="Gets the content identifier created by the publisher.">Obtiene el identificador de contenido creado por el editor.</summary>
      <returns vsli:raw="The content identifier created by the publisher.">Identificador de contenido creado por el editor.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary vsli:raw="Gets the owner of the license.">Obtiene el propietario de la licencia.</summary>
      <returns vsli:raw="The owner of the license.">Propietario de la licencia.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary vsli:raw="Specifies the type of user Rights Account Certificate to request for rights management activation.">Especifica el tipo de Certificado de cuenta de derechos del usuario para solicitar la activación de la administración de derechos.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary vsli:raw="A permanent Rights Account Certificate.">Certificado de cuenta de derechos permanente.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary vsli:raw="A temporary Rights Account Certificate.">Certificado de cuenta de derechos temporal.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary vsli:raw="Provides a base class for .NET attributes that report the use scope of attached properties.">Proporciona una clase base para atributos de .NET Framework que indica el ámbito de uso de las propiedades adjuntas.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary vsli:raw="Specifies that an attached property is browsable only for elements that derive from a specified type.">Especifica que una propiedad adjunta es examinable solo para los elementos que se derivan de un tipo especificado.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; class, using the provided &lt;paramref name=&quot;targetType&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> con el <paramref name="targetType" /> proporcionado.</summary>
      <param name="targetType" vsli:raw="The intended type that scopes the use of the attached property where this .NET Framework attribute applies.">Tipo deseado que establece un ámbito de uso de la propiedad adjunta en la que se aplica este Atributo de .NET Framework.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Determina si el actual <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Atributo de .NET Framework es igual a un objeto especificado.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">
        <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> que se va a comparar con el <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> especificado es igual al objeto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Devuelve el código hash de este objeto <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Atributo de .NET Framework.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">Valor entero de 32 bits sin signo.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary vsli:raw="Gets the base type that scopes the use of the attached property where this .NET Framework attribute applies.">Obtiene el tipo base que abarca el uso de la propiedad adjunta donde se aplica Atributo de .NET Framework.</summary>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Type&quot; /&gt;.">
        <see cref="T:System.Type" /> solicitado.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary vsli:raw="Gets a unique type identifier for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">Obtiene un identificador de tipo único para este <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Atributo de .NET Framework .</summary>
      <returns vsli:raw="An object that is a unique identifier for the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">Objeto que es un identificador único de <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary vsli:raw="Specifies that an attached property is only browsable on an element that also has another specific .NET attribute applied to its class definition.">Especifica que una propiedad adjunta solo es explorable en un elemento que también tiene otro atributo de .NET Framework específico aplicado a su definición de clase.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</summary>
      <param name="attributeType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the  .NET Framework attribute that must also be applied on a class in order for the attached property to be browsable on the class where &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is applied.">
        <see cref="T:System.Type" /> del Atributo de .NET Framework que también se tiene que aplicar en una clase para que la propiedad asociada se pueda explorar en la clase donde se aplica <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">Determina si el actual <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> Atributo de .NET Framework es igual a un objeto especificado.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;.">
        <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> que se va a comparar con el <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> especificado es igual al objeto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute.">Devuelve el código hash de este objeto <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> Atributo de .NET Framework.</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">Valor entero de 32 bits sin signo.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary vsli:raw="Gets the type of the  .NET Framework attribute that must also be applied on a class.">Obtiene el tipo del Atributo de .NET Framework que también se debe aplicar en una clase.</summary>
      <returns vsli:raw="The  .NET Framework attribute type.">Atributo de .NET FrameworkTipo.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary vsli:raw="Contains properties that specify how an application should behave relative to new WPF features that are in the WindowsBase assembly.">Contiene las propiedades que especifican cómo una aplicación debe comportarse en relación con las nuevas características WPF que están en el ensamblado WindowsBase.</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary vsli:raw="Gets or sets a value that indicates whether information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Obtiene o establece un valor que indica si la información acerca de <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> se guarda en <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la información sobre <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> se guarda en <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary vsli:raw="Defines how the dispatcher reacts to failures encountered when it requests processing.">Define cómo el distribuidor reacciona ante errores que se producen cuando se solicita el procesamiento.</summary>
      <returns vsli:raw="A value that defines how the dispatcher reacts to failures.">Valor que define cómo el distribuidor reacciona ante errores.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked.">Obtiene o establece un valor que indica si el método <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> coloca los delegados en la cola del distribuidor o si se invoca el delegado directamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el método <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> coloca los delegados en la cola del distribuidor o si se invoca el delegado directamente; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary vsli:raw="Gets or sets a value that indicates whether a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations.">Obtiene o establece un valor que indica si solo <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> se usa para varias operaciones del distribuidor.</summary>
      <returns vsli:raw="true if a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">true si se usa un solo <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> para varias operaciones del distribuidor; si no, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary vsli:raw="Provides a set of values that describes how the dispatcher responds to failures that are encountered while requesting processing.">Proporciona un conjunto de valores que describe la forma en la que el distribuidor responde a los errores que se producen durante la solicitud de procesamiento.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary vsli:raw="Continue after the failure.  &#xA;  &#xA; This is the default value. It defines the behavior of the Windows Presentation Foundation dispatcher prior to the .NET Framework 4.7.1. The dispatcher may become unresponsive when this option is selected.">Continúe después del error.  
  
 Este es el valor predeterminado. Define el comportamiento del distribuidor de Windows Presentation Foundation antes de .NET Framework 4.7.1. Puede que el distribuidor deje de responder cuando se selecciona esta opción.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary vsli:raw="Reset the dispatcher's state to try another request the next time one is needed.  &#xA;  &#xA; While this option can sometimes &quot;repair&quot; unresponsiveness, it cannot honor the usual timing of processing, which can be crucial. Selecting this option can lead to unexpected behavior.">Restablezca el estado del distribuidor para intentar otra solicitud la próxima vez que se necesite una.  
  
 Aunque esta opción a veces puede “reparar” errores de este tipo, no puede soportar la sincronización habitual de procesamiento, que puede ser crucial. Si selecciona esta opción puede sufrir un comportamiento inesperado.</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary vsli:raw="Throw an exception.  &#xA;  &#xA; This option immediately brings the problem to the application developer's attention.">Iniciar una excepción.  
  
 Esta opción indica inmediatamente el problema al desarrollador de la aplicación.</summary>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary vsli:raw="Provides a template for a method that is called whenever a dependency property value is being re-evaluated, or coercion is specifically requested.">Proporciona una plantilla para un método al que se llama cuando se vuelve a evaluar el valor de una propiedad de dependencia o cuando se solicita específicamente la conversión.</summary>
      <param name="d" vsli:raw="The object that the property exists on. When the callback is invoked, the property system will pass this value.">Objeto en el que existe la propiedad. Cuando se invoca la devolución de llamada, el sistema de propiedades pasará este valor.</param>
      <param name="baseValue" vsli:raw="The new value of the property, prior to any coercion attempt.">Nuevo valor de la propiedad, antes de cualquier intento de conversión.</param>
      <returns vsli:raw="The coerced value (with appropriate type).">Valor convertido (con el tipo apropiado).</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Convierte instancias de <see cref="T:System.String" /> en y desde instancias de <see cref="T:System.Windows.Int32Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.Int32RectValueSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Determina si el <see cref="T:System.String" /> especificado puede convertirse en una instancia de <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadena que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina si la estructura <see cref="T:System.Windows.Int32Rect" /> especificada se puede convertir en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objeto que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="value" /> se puede convertir a <see cref="T:System.String" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Convierte <see cref="T:System.String" /> a <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Una nueva instancia de <see cref="T:System.Windows.Int32Rect" /> según el parámetro <paramref name="value" /> proporcionado.</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una instancia de <see cref="T:System.Windows.Int32Rect" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objeto que se va a convertir en una cadena.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Representación de cadena del elemento <see cref="T:System.Windows.Int32Rect" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Convierte instancias de <see cref="T:System.String" /> en y desde instancias de <see cref="T:System.Windows.Point" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.PointValueSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Converters.PointValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Determina si el <see cref="T:System.String" /> especificado puede convertirse en una instancia de <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadena que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina si la estructura <see cref="T:System.Windows.Point" /> especificada se puede convertir en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objeto que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="value" /> se puede convertir a <see cref="T:System.String" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Convierte <see cref="T:System.String" /> a <see cref="T:System.Windows.Point" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Una nueva instancia de <see cref="T:System.Windows.Point" /> según el parámetro <paramref name="value" /> proporcionado.</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una instancia de <see cref="T:System.Windows.Point" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objeto que se va a convertir en una cadena.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Representación de cadena del elemento <see cref="T:System.Windows.Point" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Convierte instancias de <see cref="T:System.String" /> en y desde instancias de <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.RectValueSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Converters.RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Determina si el <see cref="T:System.String" /> especificado puede convertirse en una instancia de <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadena que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina si la estructura <see cref="T:System.Windows.Rect" /> especificada se puede convertir en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objeto que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="value" /> se puede convertir a <see cref="T:System.String" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Convierte <see cref="T:System.String" /> a <see cref="T:System.Windows.Rect" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Una nueva instancia de <see cref="T:System.Windows.Rect" /> según el parámetro <paramref name="value" /> proporcionado.</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una instancia de <see cref="T:System.Windows.Rect" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objeto que se va a convertir en una cadena.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Representación de cadena del elemento <see cref="T:System.Windows.Rect" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Convierte instancias de <see cref="T:System.String" /> en y desde instancias de <see cref="T:System.Windows.Size" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.SizeValueSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Converters.SizeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Determina si el <see cref="T:System.String" /> especificado puede convertirse en una instancia de <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadena que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina si la estructura <see cref="T:System.Windows.Size" /> especificada se puede convertir en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objeto que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="value" /> se puede convertir a <see cref="T:System.String" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Convierte <see cref="T:System.String" /> a <see cref="T:System.Windows.Size" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Una nueva instancia de <see cref="T:System.Windows.Size" /> según el parámetro <paramref name="value" /> proporcionado.</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una instancia de <see cref="T:System.Windows.Size" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objeto que se va a convertir en una cadena.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Representación de cadena del elemento <see cref="T:System.Windows.Size" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Convierte instancias de <see cref="T:System.String" /> en y desde instancias de <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.VectorValueSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Converters.VectorValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Determina si el <see cref="T:System.String" /> especificado puede convertirse en una instancia de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadena que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina si la estructura <see cref="T:System.Windows.Vector" /> especificada se puede convertir en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Objeto que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="value" /> se puede convertir a <see cref="T:System.String" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Convierte <see cref="T:System.String" /> a <see cref="T:System.Windows.Vector" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Una nueva instancia de <see cref="T:System.Windows.Vector" /> según el parámetro <paramref name="value" /> proporcionado.</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una instancia de <see cref="T:System.Windows.Vector" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Objeto que se va a convertir en una cadena.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Representación de cadena del elemento <see cref="T:System.Windows.Vector" /> especificado.</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary vsli:raw="Common base class and contract for &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.">Clase base común y contrato para objetos <see cref="T:System.Windows.Data.DataSourceProvider" />, que son fábricas que ejecutan algunas consultas para generar un objeto único o una lista de objetos que pueda utilizar como objetos de origen de enlace.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property has a new value.">Se produce cuando la propiedad <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> tiene un nuevo valor.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Tiene lugar cuando cambia un valor de propiedad.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">Tiene lugar cuando cambia un valor de propiedad.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; class. This is a protected constructor.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Data.DataSourceProvider" />. Se trata de un constructor protegido.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary vsli:raw="Indicates that initialization of this object is about to begin; no implicit &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; occurs until the matched &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.EndInit&quot; /&gt; method is called.">Indica que la inicialización de este objeto está a punto de comenzar; no se producirá ninguna operación <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> implícita hasta que se llame al método <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /> correspondiente.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary vsli:raw="When overridden in a derived class, this base class calls this method when &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.InitialLoad&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; has been called. The base class delays the call if refresh is deferred or initial load is disabled.">Cuando se invalida en una clase derivada, esta clase base llama a este método cuando se ha llamado a <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> o <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />. La clase base retrasa la llamada si se aplaza la actualización o si la carga inicial está deshabilitada.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.">Especifica un ciclo de aplazamiento que puede usar para cambiar las propiedades del proveedor y retrasar la actualización automática.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">Objeto <see cref="T:System.IDisposable" /> que puede usar para eliminar el objeto que realiza la llamada.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary vsli:raw="Indicates that the initialization of this object has completed; this causes a &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; if no other &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; is outstanding.">Indica que se ha completado la inicialización de este objeto; de esta forma tiene lugar <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> si no hay ningún otro método <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> pendiente.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary vsli:raw="Starts the initial query to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Inicia la consulta inicial al modelo de datos subyacente. El resultado se devuelve en la propiedad <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Data.DataSourceProvider.PropertyChanged&quot; /&gt; event with the provided arguments.">Genera el evento <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> con los argumentos proporcionados.</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">Argumentos del evento que se está generando.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Las clases derivadas llaman a este método para indicar que ha finalizado una consulta.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Datos obtenidos como resultado de la consulta.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">Las clases derivadas llaman a este método para indicar que ha finalizado una consulta.</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">Datos obtenidos como resultado de la consulta.</param>
      <param name="error" vsli:raw="The error that occurred while running the query. This value is &lt;see langword=&quot;null&quot; /&gt; if there is no error.">Error producido durante la ejecución de la consulta. Este valor es <see langword="null" /> si no hay ningún error.</param>
      <param name="completionWork" vsli:raw="Optional delegate that is used to execute completion work on the UI thread, for example, to set additional properties.">Delegado opcional que se utiliza para ejecutar trabajo de finalización en el subproceso de UI, por ejemplo, para establecer propiedades adicionales.</param>
      <param name="callbackArguments" vsli:raw="Optional arguments to send as a parameter with the &lt;paramref name=&quot;completionWork&quot; /&gt; delegate.">Argumentos opcionales que se envían como parámetro con el delegado <paramref name="completionWork" />.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary vsli:raw="Initiates a refresh operation to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">Inicia una operación de actualización del modelo de datos subyacente. El resultado se devuelve en la propiedad <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Este miembro es compatible con la infraestructura de Windows Presentation Foundation (WPF) y no está diseñado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Este miembro es compatible con la infraestructura de Windows Presentation Foundation (WPF) y no está diseñado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary vsli:raw="Gets the underlying data object.">Obtiene el objeto de datos subyacente.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the underlying data object.">Valor de tipo <see cref="T:System.Object" /> que es el objeto de datos subyacente.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary vsli:raw="Gets or sets the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use.">Obtiene o establece el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> actual en el subproceso UI que se va a usar.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use. By default, this is the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object that is associated with the thread on which this instance was created.">Objeto actual que se va a <see cref="T:System.Windows.Threading.Dispatcher" /> usar en el UI subproceso. De forma predeterminada, éste es el objeto de <see cref="T:System.Windows.Threading.Dispatcher" /> asociado al subproceso en el que esta instancia se creó.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary vsli:raw="Gets the error of the last query operation.">Obtiene el error de la última operación de consulta.</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the error of the last query operation, or &lt;see langword=&quot;null&quot; /&gt; if there was no error.">Un valor de tipo <see cref="T:System.Exception" /> que representa el error de la última operación de consulta o <see langword="null" /> si no se produjo ningún error.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.">Obtiene o establece un valor que indica si debe impedirse o retrasarse la carga automática de datos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; to prevent or delay the automatic loading of data; otherwise, &lt;see langword=&quot;true&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="false" /> para impedir o retrasar la carga automática de datos; de lo contrario, es <see langword="true" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary vsli:raw="Gets a value that indicates whether there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use.">Obtiene un valor que indica si hay un método <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> pendiente en uso.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si hay un método <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> pendiente en uso; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary vsli:raw="Represents an object that participates in the dependency property system.">Representa un objeto que forma parte del sistema de propiedades de dependencia.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Clears the local value of a property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier.">Borra el valor local de una propiedad. La propiedad que se va a borrar se especifica mediante un identificador <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <param name="dp" vsli:raw="The dependency property to be cleared, identified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; object reference.">Propiedad de dependencia que se va a borrar, identificada con una referencia de objeto <see cref="T:System.Windows.DependencyProperty" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Se intentó llamar a <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> en un <see cref="T:System.Windows.DependencyObject" /> sellado.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Clears the local value of a read-only property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt;.">Borra el valor local de una propiedad de solo lectura. La propiedad que se va a borrar se especifica mediante un <see cref="T:System.Windows.DependencyPropertyKey" />.</summary>
      <param name="key" vsli:raw="The key for the dependency property to be cleared.">Clave de la propiedad de dependencia que se va a borrar.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Se intentó llamar a <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> en un <see cref="T:System.Windows.DependencyObject" /> sellado.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Coerces the value of the specified dependency property. This is accomplished by invoking any &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; function specified in property metadata for the dependency property as it exists on the calling &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Convierte el valor de la propiedad de dependencia especificada. Esto se logra invocando cualquier función <see cref="T:System.Windows.CoerceValueCallback" /> especificada en los metadatos de la propiedad de dependencia tal como existe en la clase <see cref="T:System.Windows.DependencyObject" /> que llama.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property to coerce.">Identificador de la propiedad de dependencia que se va a convertir.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value were invalid or do not exist.">El parámetro <paramref name="dp" /> especificado o su valor no eran válidos o no existían.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary vsli:raw="Determines whether a provided &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Determina si un objeto <see cref="T:System.Windows.DependencyObject" /> proporcionado es equivalente al objeto <see cref="T:System.Windows.DependencyObject" /> actual.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; to compare to the current instance.">
        <see cref="T:System.Windows.DependencyObject" /> que se va a comparar con la instancia actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances are the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las dos instancias son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Obtiene un código hash de este objeto <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Código hash entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary vsli:raw="Creates a specialized enumerator for determining which dependency properties have locally set values on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Crea un enumerador especializado para determinar qué propiedades de dependencia han establecido localmente los valores en <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns vsli:raw="A specialized local value enumerator.">Enumerador de valor local especializado.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the current effective value of a dependency property on this instance of a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Devuelve el valor efectivo actual de una propiedad de dependencia en esta instancia de un <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">Identificador <see cref="T:System.Windows.DependencyProperty" /> de la propiedad de la que se debe recuperar el valor.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value was invalid, or the specified &lt;paramref name=&quot;dp&quot; /&gt; does not exist.">El <paramref name="dp" /> especificado o su valor no eran válidos, o el <paramref name="dp" /> especificado no existe.</exception>
      <returns vsli:raw="Returns the current effective value.">Devuelve el valor efectivo actual.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Re-evaluates the effective value for the specified dependency property.">Vuelve a evaluar el valor efectivo para la propiedad de dependencia especificada.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to invalidate.">Identificador de <see cref="T:System.Windows.DependencyProperty" /> de la propiedad que se debe invalidar.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Invoked whenever the effective value of any dependency property on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; has been updated. The specific dependency property that changed is reported in the event data.">Se invoca cuando se actualiza el valor efectivo de alguna propiedad de dependencia en este <see cref="T:System.Windows.DependencyObject" />. La propiedad de dependencia específica que cambió se notifica en los datos de evento.</summary>
      <param name="e" vsli:raw="Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.">Datos de evento que contendrán el identificador de propiedad de dependencia de interés, los metadatos del tipo de propiedad, y valores antiguos y nuevos.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the local value of a dependency property, if it exists.">Devuelve el valor local de una propiedad de dependencia, si existe.</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">Identificador <see cref="T:System.Windows.DependencyProperty" /> de la propiedad de la que se debe recuperar el valor.</param>
      <returns vsli:raw="Returns the local value, or returns the sentinel value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; if no local value is set.">Devuelve el valor local o devuelve el valor centinela <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> si no se establece ningún valor local.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the value of a dependency property without changing its value source.">Establece el valor de una propiedad de dependencia sin cambiar el origen del valor.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">Identificador de la propiedad de dependencia que se va a establecer.</param>
      <param name="value" vsli:raw="The new local value.">Nuevo valor local.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Se intentó modificar una propiedad de dependencia de solo lectura o una propiedad en una clase <see cref="T:System.Windows.DependencyObject" /> sellada.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> no era el tipo correcto registrado para la propiedad <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the local value of a dependency property, specified by its dependency property identifier.">Establece el valor local de una propiedad de dependencia, especificado mediante el identificador de la propiedad de dependencia.</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">Identificador de la propiedad de dependencia que se va a establecer.</param>
      <param name="value" vsli:raw="The new local value.">Nuevo valor local.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Se intentó modificar una propiedad de dependencia de solo lectura o una propiedad en una clase <see cref="T:System.Windows.DependencyObject" /> sellada.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> no era el tipo correcto registrado para la propiedad <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary vsli:raw="Sets the local value of a read-only dependency property, specified by the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the dependency property.">Establece el valor local de una propiedad de dependencia de solo lectura, especificado por el identificador <see cref="T:System.Windows.DependencyPropertyKey" /> de la propiedad de dependencia.</summary>
      <param name="key" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the property to set.">Identificador <see cref="T:System.Windows.DependencyPropertyKey" /> de la propiedad que se debe establecer.</param>
      <param name="value" vsli:raw="The new local value.">Nuevo valor local.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.">Devuelve un valor que indica si los procesos de serialización deben serializar el valor de la propiedad de dependencia especificada.</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property that should be serialized.">El identificador de la propiedad de dependencia que se debe serializar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property that is supplied should be value-serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la propiedad de dependencia que se proporciona debe serializarse por valor; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">Obtiene el objeto <see cref="T:System.Windows.DependencyObjectType" /> que ajusta el tipo CLR de esta instancia.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">
        <see cref="T:System.Windows.DependencyObjectType" /> que ajusta el tipo CLR de esta instancia.</returns>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this instance is currently sealed (read-only).">Obtiene un valor que indica si esta instancia está actualmente sellada (es de solo lectura).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is sealed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se sella esta instancia; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary vsli:raw="Implements an underlying type cache for all &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; derived types.">Implementa una caché de tipo subyacente para todos los tipos derivados de <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents a given system (CLR) type.">Devuelve un <see cref="T:System.Windows.DependencyObjectType" /> que representa un tipo (CLR) de un sistema determinado.</summary>
      <param name="systemType" vsli:raw="The system (CLR) type to convert.">Tipo (CLR) del sistema que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents the system (CLR) type.">
        <see cref="T:System.Windows.DependencyObjectType" /> que representa el tipo (CLR) del sistema.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Devuelve el código hash de este objeto <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero con signo de 32 bits.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary vsli:raw="Determines whether the specified object is an instance of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Determina si el objeto especificado es una instancia del objeto <see cref="T:System.Windows.DependencyObjectType" /> actual.</summary>
      <param name="dependencyObject" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Objeto que se va a comparar con el objeto <see cref="T:System.Windows.DependencyObjectType" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; is in the inheritance hierarchy of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; passed as &lt;paramref name=&quot;d&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la clase representada por el <see cref="T:System.Windows.DependencyObjectType" /> actual está en la jerarquía de herencia de <see cref="T:System.Windows.DependencyObject" /> pasada como <paramref name="d" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the specified &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Determina si el <see cref="T:System.Windows.DependencyObjectType" /> actual se deriva del <see cref="T:System.Windows.DependencyObjectType" /> especificado.</summary>
      <param name="dependencyObjectType" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; to compare.">
        <see cref="T:System.Windows.DependencyObjectType" /> que se va comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; parameter and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent types of classes, and the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the class represented by &lt;paramref name=&quot;dependencyObjectType&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent the same class.">
        <see langword="true" /> si el parámetro <paramref name="dependencyObjectType" /> y el <see cref="T:System.Windows.DependencyObjectType" /> actual representan tipos de clases, y la clase representada por el <see cref="T:System.Windows.DependencyObjectType" /> actual se deriva de la clase representada por <paramref name="dependencyObjectType" />. En caso contrario, es <see langword="false" />. Este método también devuelve <see langword="false" /> si <paramref name="dependencyObjectType" /> y el objeto <see cref="T:System.Windows.DependencyObjectType" /> actual representan la misma clase.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; of the immediate base class of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Obtiene el <see cref="T:System.Windows.DependencyObjectType" /> de la clase base inmediata del <see cref="T:System.Windows.DependencyObjectType" /> actual.</summary>
      <returns vsli:raw="The type of the base class.">Tipo de la clase base.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary vsli:raw="Gets a zero-based unique identifier for constant-time array lookup operations.">Obtiene un identificador único de base cero para operaciones de búsqueda de matrices de tiempo constante.</summary>
      <returns vsli:raw="An internal identifier.">Identificador interno.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary vsli:raw="Gets the name of the represented common language runtime (CLR) system type.">Obtiene el nombre del tipo de sistema Common Language Runtime (CLR) representado.</summary>
      <returns vsli:raw="The name of the represented CLR system type.">Nombre del tipo de sistema CLR representado.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary vsli:raw="Gets the common language runtime (CLR) system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Obtiene el tipo de sistema Common Language Runtime (CLR) representado por este <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns vsli:raw="The CLR system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">Tipo de sistema CLR representado por este <see cref="T:System.Windows.DependencyObjectType" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary vsli:raw="Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.">Representa una propiedad que se puede establecer a través de métodos como, por ejemplo, el estilo, el enlace de datos, la animación y la herencia.</summary>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary vsli:raw="Specifies a static value that is used by the WPF property system rather than &lt;see langword=&quot;null&quot; /&gt; to indicate that the property exists, but does not have its value set by the property system.">Especifica un valor estático que usa el sistema de propiedades de WPF en vez de <see langword="null" /> para indicar que la propiedad existe, pero el sistema de propiedades no ha establecido su valor.</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered.">Agrega otro tipo como propietario de una propiedad de dependencia que ya está registrada.</summary>
      <param name="ownerType" vsli:raw="The type to add as an owner of this dependency property.">Tipo que se va a agregar como propietario de esta propiedad de dependencia.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Referencia al identificador <see cref="T:System.Windows.DependencyProperty" /> original que identifica la propiedad de dependencia. Este identificador debe exponerse mediante la adición de la clase como un campo <see langword="public static readonly" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.">Agrega otro tipo como propietario de una propiedad de dependencia que ya se ha registrado y ofrece los metadatos de propiedad de dependencia para la propiedad de dependencia como se verá en el tipo de propietario proporcionado.</summary>
      <param name="ownerType" vsli:raw="The type to add as owner of this dependency property.">Tipo que se va a agregar como propietario de esta propiedad de dependencia.</param>
      <param name="typeMetadata" vsli:raw="The metadata that qualifies the dependency property as it exists on the provided type.">Metadatos que califican la propiedad de dependencia tal como existe en el tipo proporcionado.</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">Referencia al identificador <see cref="T:System.Windows.DependencyProperty" /> original que identifica la propiedad de dependencia. Este identificador debe exponerse mediante la adición de la clase como un campo <see langword="public static readonly" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary vsli:raw="Returns a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Devuelve un código hash para esta <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Código hash de esta <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified existing type.">Devuelve los metadatos de esta propiedad de dependencia tal como existe en un tipo especificado.</summary>
      <param name="forType" vsli:raw="The specific type from which to retrieve the dependency property metadata.">El tipo específico del que se deben recuperar los metadatos de la propiedad de dependencia.</param>
      <returns vsli:raw="A property metadata object.">Objeto de metadatos de una propiedad.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on the specified object instance.">Devuelve los metadatos de esta propiedad de dependencia tal como existe en la instancia de objeto especificado.</summary>
      <param name="dependencyObject" vsli:raw="A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.">Objeto de dependencia que se comprueba para el tipo, para determinar de qué versión específica del tipo de la propiedad de dependencia deben proceder los metadatos.</param>
      <returns vsli:raw="A property metadata object.">Objeto de metadatos de una propiedad.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified type.">Devuelve los metadatos de esta propiedad de dependencia tal como existe en un tipo especificado.</summary>
      <param name="dependencyObjectType" vsli:raw="A specific object that records the dependency object type from which the dependency property metadata is desired.">Objeto específico que registra el tipo de objeto de dependencia del que se quieren obtener los metadatos de la propiedad de dependencia.</param>
      <returns vsli:raw="A property metadata object.">Objeto de metadatos de una propiedad.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary vsli:raw="Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.">Determina si un valor especificado es aceptable para el tipo de esta propiedad de dependencia, como se ha comprobado en el tipo de propiedad proporcionado en el registro de propiedad de dependencia original.</summary>
      <param name="value" vsli:raw="The value to check.">El valor que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is the registered property type or an acceptable derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor especificado es el tipo de propiedad registrado o un tipo derivado aceptable; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary vsli:raw="Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.">Determina si el valor proporcionado se acepta para el tipo de propiedad mediante la comprobación de tipo básico y, potencialmente, si está comprendido en el intervalo permitido de valores de ese tipo.</summary>
      <param name="value" vsli:raw="The value to check.">El valor que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is acceptable and is of the correct type or a derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor es aceptable y es del tipo correcto o un tipo derivado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.">Especifica los metadatos alternativos para esta propiedad de dependencia cuando se encuentra en instancias de un tipo especificado y reemplaza los metadatos existentes para la propiedad de dependencia tal y como se heredó de los tipos base.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">Tipo en el que se hereda esta propiedad de dependencia y donde se aplicarán los metadatos alternativos proporcionados.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Metadatos que se deben aplicar a la propiedad de dependencia en el tipo de reemplazo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).">Se intentaron reemplazar los metadatos en una propiedad de dependencia de solo lectura (esa operación no se puede realizar con esta signatura).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the dependency property as it exists on the provided type.">Los metadatos ya se establecieron para la propiedad de dependencia tal como existe en el tipo proporcionado.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration. You must pass the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; for the read-only dependency property to avoid raising an exception.">Proporciona los metadatos alternativos para una propiedad de dependencia de solo lectura cuando se encuentra en instancias de un tipo especificado y reemplaza los metadatos que se proporcionaron en el registro inicial de la propiedad de dependencia. Debe pasar la <see cref="T:System.Windows.DependencyPropertyKey" /> para la propiedad de dependencia de solo lectura evitar que se genere una excepción.</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">Tipo en el que se hereda esta propiedad de dependencia y donde se aplicarán los metadatos alternativos proporcionados.</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">Metadatos que se deben aplicar a la propiedad de dependencia en el tipo de reemplazo.</param>
      <param name="key" vsli:raw="The access key for a read-only dependency property.">Clave de acceso para una propiedad de dependencia de solo lectura.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, and owner type.">Registra una propiedad de dependencia con el nombre de propiedad, el tipo de propiedad y el tipo de propietario especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.">Nombre de la propiedad de dependencia que se va a registrar. El nombre debe ser único dentro del espacio de nombres de registro del tipo de propietario.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo de propietario que registra la propiedad de dependencia.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificador de propiedad de dependencia que se debe usar para establecer el valor de un campo <see langword="public static readonly" /> en su clase. Ese identificador se usa posteriormente para hacer referencia a la propiedad de dependencia, en operaciones como el establecimiento de su valor mediante programación o la obtención de metadatos.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, and property metadata.">Registra una propiedad de dependencia con el nombre de la propiedad, el tipo de propiedad, el tipo de propietario y los metadatos de propiedad especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nombre de la propiedad de dependencia que se va a registrar.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo de propietario que registra la propiedad de dependencia.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Metadatos de propiedad de la propiedad de dependencia.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificador de propiedad de dependencia que se debe usar para establecer el valor de un campo <see langword="public static readonly" /> en su clase. Ese identificador se usa posteriormente para hacer referencia a la propiedad de dependencia, en operaciones como el establecimiento de su valor mediante programación o la obtención de metadatos.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.">Registra una propiedad de dependencia con los valores especificados de nombre de la propiedad, tipo de propiedad, tipo de propietario, metadatos de propiedad y una devolución de llamada de validación de la propiedad.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nombre de la propiedad de dependencia que se va a registrar.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo de propietario que registra la propiedad de dependencia.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Metadatos de propiedad de la propiedad de dependencia.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Referencia a una devolución de llamada que debe realizar cualquier validación personalizada del valor de la propiedad de dependencia además de la validación habitual de tipo.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificador de propiedad de dependencia que se debe usar para establecer el valor de un campo <see langword="public static readonly" /> en su clase. Ese identificador se usa posteriormente para hacer referencia a la propiedad de dependencia, en operaciones como el establecimiento de su valor mediante programación o la obtención de metadatos.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, and owner type.">Registra una propiedad adjunta con el nombre de propiedad, el tipo de propiedad y el tipo de propietario especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nombre de la propiedad de dependencia que se va a registrar.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo de propietario que registra la propiedad de dependencia.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificador de propiedad de dependencia que se debe usar para establecer el valor de un campo <see langword="public static readonly" /> en su clase. Ese identificador se usa posteriormente para hacer referencia a la propiedad de dependencia, en operaciones como el establecimiento de su valor mediante programación o la obtención de metadatos.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, owner type, and property metadata.">Registra una propiedad adjunta con el nombre de la propiedad, el tipo de propiedad, el tipo de propietario y los metadatos de propiedad especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nombre de la propiedad de dependencia que se va a registrar.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo de propietario que registra la propiedad de dependencia.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Metadatos de propiedad de la propiedad de dependencia. Esto puede incluir el valor predeterminado, así como otras características.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificador de propiedad de dependencia que se debe usar para establecer el valor de un campo <see langword="public static readonly" /> en su clase. Ese identificador se usa posteriormente para hacer referencia a la propiedad de dependencia, en operaciones como el establecimiento de su valor mediante programación o la obtención de metadatos.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.">Registra una propiedad adjunta con el tipo de propiedad, el tipo de propietario, los metadatos de propiedad y una devolución de llamada de validación de valor especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nombre de la propiedad de dependencia que se va a registrar.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo de propietario que registra la propiedad de dependencia.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">Metadatos de propiedad de la propiedad de dependencia. Esto puede incluir el valor predeterminado, así como otras características.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">Referencia a una devolución de llamada que debe realizar cualquier validación personalizada del valor de la propiedad de dependencia además de la validación habitual de tipo.</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">Identificador de propiedad de dependencia que se debe usar para establecer el valor de un campo <see langword="public static readonly" /> en su clase. Ese identificador se usa posteriormente para hacer referencia a la propiedad de dependencia, en operaciones como el establecimiento de su valor mediante programación o la obtención de metadatos.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, and property metadata.">Registra una propiedad adjunta de solo lectura, con el tipo de propiedad, el tipo de propietario y los metadatos de propiedad especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nombre de la propiedad de dependencia que se va a registrar.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo de propietario que registra la propiedad de dependencia.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Metadatos de propiedad de la propiedad de dependencia.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Clave de propiedad de dependencia que debe usarse para establecer el valor de un campo estático de solo lectura en la clase, que se usa para hacer referencia a la propiedad de dependencia más tarde.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.">Registra una propiedad adjunta de solo lectura, con el tipo de propiedad, el tipo de propietario, los metadatos de propiedad y una devolución de llamada de validación especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nombre de la propiedad de dependencia que se va a registrar.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo de propietario que registra la propiedad de dependencia.</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">Metadatos de propiedad de la propiedad de dependencia.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Referencia a una devolución de llamada creada por el usuario que debe realizar cualquier validación personalizada del valor de la propiedad de dependencia además de la validación habitual de tipo.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Clave de propiedad de dependencia que debe usarse para establecer el valor de un campo estático de solo lectura en la clase, que se usa para hacer referencia a la propiedad de dependencia.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, and property metadata.">Registra una propiedad de dependencia de solo lectura, con el tipo de propiedad, el tipo de propietario y los metadatos de propiedad especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nombre de la propiedad de dependencia que se va a registrar.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo de propietario que registra la propiedad de dependencia.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Metadatos de propiedad de la propiedad de dependencia.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">Clave de propiedad de dependencia que debe usarse para establecer el valor de un campo estático de solo lectura en la clase, que se usa para hacer referencia a la propiedad de dependencia.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.">Registra una propiedad de dependencia de solo lectura, con el tipo de propiedad, el tipo de propietario, los metadatos de propiedad y una devolución de llamada de validación especificados.</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">Nombre de la propiedad de dependencia que se va a registrar.</param>
      <param name="propertyType" vsli:raw="The type of the property.">Tipo de la propiedad.</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">Tipo de propietario que registra la propiedad de dependencia.</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">Metadatos de propiedad de la propiedad de dependencia.</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">Referencia a una devolución de llamada creada por el usuario que debe realizar cualquier validación personalizada del valor de la propiedad de dependencia además de la validación habitual de tipo.</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">Clave de propiedad de dependencia que debe usarse para establecer el valor de un campo estático de solo lectura en la clase, que se usa para hacer referencia a la propiedad de dependencia más tarde.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary vsli:raw="Returns the string representation of the dependency property.">Devuelve la representación de cadena de la propiedad de dependencia.</summary>
      <returns vsli:raw="The string representation of the dependency property.">Representación de cadena de la propiedad de dependencia.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary vsli:raw="Gets the default metadata of the dependency property.">Obtiene los metadatos predeterminados de la propiedad de dependencia.</summary>
      <returns vsli:raw="The default metadata of the dependency property.">Metadatos predeterminados de la propiedad de dependencia.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary vsli:raw="Gets an internally generated value that uniquely identifies the dependency property.">Obtiene un valor generado internamente que identifica exclusivamente la propiedad de dependencia.</summary>
      <returns vsli:raw="A unique numeric identifier.">Identificador numérico único.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary vsli:raw="Gets the name of the dependency property.">Obtiene el nombre de la propiedad de dependencia.</summary>
      <returns vsli:raw="The name of the property.">Nombre de la propiedad.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary vsli:raw="Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.">Obtiene el tipo del objeto que registró la propiedad de dependencia con el sistema de propiedades o se agregó a sí mismo como su propietario.</summary>
      <returns vsli:raw="The type of the object that registered the property or added itself as owner of the property.">Tipo del objeto que registró la propiedad o se agregó a sí mismo como su propietario.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary vsli:raw="Gets the type that the dependency property uses for its value.">Obtiene el tipo que usa la propiedad de dependencia para su valor.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the property value.">Clase <see cref="T:System.Type" /> del valor de propiedad.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the dependency property identified by this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; instance is a read-only dependency property.">Obtiene un valor que indica si la propiedad de dependencia identificada por esta instancia de <see cref="T:System.Windows.DependencyProperty" /> es una propiedad de dependencia de sólo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la propiedad de dependencia es de sólo lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary vsli:raw="Gets the value validation callback for the dependency property.">Obtiene la devolución de llamada de validación del valor de la propiedad de dependencia.</summary>
      <returns vsli:raw="The value validation callback for this dependency property, as provided for the &lt;paramref name=&quot;validateValueCallback&quot; /&gt; parameter in the original dependency property registration.">La devolución de llamada de validación del valor de esta propiedad de dependencia, tal y como se proporciona para el parámetro <paramref name="validateValueCallback" /> del registro de propiedad de dependencia original.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary vsli:raw="Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation.">Proporciona datos de los distintos eventos de cambio de propiedades. Normalmente, estos eventos notifican cambios de valor efectivos en el valor de una propiedad de dependencia de solo lectura. Otro uso es como parte de una implementación de <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="property" vsli:raw="The identifier for the dependency property that changed.">Identificador de la propiedad de dependencia que ha cambiado.</param>
      <param name="oldValue" vsli:raw="The value of the property before the change reported by the relevant event or state change.">Valor de la propiedad antes del cambio notificado por el evento o cambio de estado correspondiente.</param>
      <param name="newValue" vsli:raw="The value of the property after the change reported by the relevant event or state change.">Valor de la propiedad después del cambio notificado por el evento o cambio de estado correspondiente.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Determina si el objeto proporcionado es equivalente al <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">El objeto que se va a comparar con el objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto proporcionado es equivalente al <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Determina si el <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> proporcionado es equivalente al <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actual.</summary>
      <param name="args" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que se va a comparar con el <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> proporcionado es equivalente a la estructura <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary vsli:raw="Gets a hash code  for this &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">Obtiene un código hash de este <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Código hash entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects have the same value.">Determina si dos objetos <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> especificados tienen el mismo valor.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que se va a comparar.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si las dos instancias de <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> son equivalentes; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects are different.">Determina si dos objetos <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> especificados son diferentes.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Primer objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que se va a comparar.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">Segundo objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si las dos instancias de <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> son diferentes; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the value of the property after the change.">Obtiene el valor de la propiedad después del cambio.</summary>
      <returns vsli:raw="The property value after the change.">Valor de la propiedad después del cambio.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the value of the property before the change.">Obtiene el valor de la propiedad antes del cambio.</summary>
      <returns vsli:raw="The property value before the change.">Valor de la propiedad después del cambio.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary vsli:raw="Gets the identifier for the dependency property where the value change occurred.">Obtiene el identificador para la propiedad de dependencia en la que se produjo el cambio de valor.</summary>
      <returns vsli:raw="The identifier field of the dependency property where the value change occurred.">Campo del identificador de la propiedad de dependencia en la que se produjo el cambio de valor.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle events raised when a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; is changed on a particular &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation.">Representa el método que controlará los eventos generados cuando se cambia una <see cref="T:System.Windows.DependencyProperty" /> en una implementación de <see cref="T:System.Windows.DependencyObject" /> determinada.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The event data.">Datos del evento.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary vsli:raw="Provides a dependency property identifier for limited write access to a read-only dependency property.">Proporciona un identificador de propiedad de dependencia para un acceso de escritura limitado a una propiedad de dependencia de sólo lectura.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.">Invalida los metadatos de una propiedad de dependencia de sólo lectura que está representada por este identificador de propiedad de dependencia.</summary>
      <param name="forType" vsli:raw="The type on which this dependency property exists and metadata should be overridden.">Se deben invalidar el tipo en el que existe esta propiedad de dependencia y los metadatos.</param>
      <param name="typeMetadata" vsli:raw="Metadata supplied for this type.">Metadatos proporcionados para este tipo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted metadata override on a read-write dependency property (cannot be done using this signature).">Se ha intentado invalidar metadatos en una propiedad de dependencia de lectura y escritura (no se puede hacer utilizando esta firma).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the property as it exists on the provided type.">Los metadatos ya estaban establecidos para la propiedad tal y como existen en el tipo proporcionado.</exception>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary vsli:raw="Gets the dependency property identifier associated with this specialized read-only dependency property identifier.">Obtiene el identificador de propiedad de dependencia asociado a este identificador de propiedad de dependencia de sólo lectura especializado.</summary>
      <returns vsli:raw="The relevant dependency property identifier.">Identificador de la propiedad de dependencia pertinente.</returns>
    </member>
    <member name="T:System.Windows.Expression">
      <summary vsli:raw="This type supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Este tipo admite la infraestructura de Windows Presentation Foundation (WPF) y no está previsto su uso directo desde el código.</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; to and from other types.">Convierte instancias de <see cref="T:System.Windows.Expression" /> a otros tipos y viceversa.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.ExpressionConverter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.ExpressionConverter" />.</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert from a source object to an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object.">Devuelve un valor que especifica si este convertidor puede convertir un objeto de origen en un objeto <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert from.">
        <see cref="T:System.Type" /> que representa el tipo de origen de la conversión.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Siempre es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to a specific destination type.">Devuelve un valor que indica si este convertidor puede convertir un objeto <see cref="T:System.Windows.Expression" /> en un tipo de destino concreto.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">Clase <see cref="T:System.Type" /> que representa el tipo al que se desea convertir.</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Siempre es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided value to the &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; type.">Convierte el valor proporcionado en el tipo <see cref="T:System.Windows.Expression" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se va a usar como referencia cultural actual.</param>
      <param name="value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Siempre inicia una excepción y devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the provided &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to the specified type.">Convierte el objeto <see cref="T:System.Windows.Expression" /> proporcionado en el tipo especificado.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se va a usar como referencia cultural actual.</param>
      <param name="value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">Clase <see cref="T:System.Type" /> que representa el tipo al que se desea convertir.</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">Siempre inicia una excepción y devuelve <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary vsli:raw="Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; provide detailed change notification, can be made immutable, and can clone themselves.">Define un objeto que tiene un estado modificable y un estado de solo lectura (inmovilizado). Las clases que derivan de <see cref="T:System.Windows.Freezable" /> proporcionan una notificación de cambios detallada, puede hacerse inmutables y pueden clonarse a sí mismas.</summary>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; or an object it contains is modified.">Se produce cuando se modifican la clase <see cref="T:System.Windows.Freezable" /> o un objeto que la contiene.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary vsli:raw="Initializes a new instance of a &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Inicializa una nueva instancia de una clase <see cref="T:System.Windows.Freezable" /> derivada.</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary vsli:raw="Creates a modifiable clone of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.">Crea un clon modificable del elemento <see cref="T:System.Windows.Freezable" /> y hace copias en profundidad de los valores del objeto. Cuando se copian las propiedades de dependencia del objeto, este método copia las expresiones (que puede que ya no se resuelvan), pero no copia las animaciones ni sus valores actuales.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Convierte la instancia en un clon (copia en profundidad) de la clase <see cref="T:System.Windows.Freezable" /> especificada con valores de propiedad base (no animadas).</summary>
      <param name="sourceFreezable" vsli:raw="The object to clone.">Objeto que se va a clonar.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary vsli:raw="Creates a modifiable clone (deep copy) of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using its current values.">Crea un clon modificable (copia en profundidad) de <see cref="T:System.Windows.Freezable" /> con sus valores actuales.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a modifiable clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values.">Convierte esta instancia en un clon modificable (copia en profundidad) del <see cref="T:System.Windows.Freezable" /> especificado mediante los valores de propiedad actuales.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to be cloned.">
        <see cref="T:System.Windows.Freezable" /> que se va a clonar.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Freezable" />.</summary>
      <returns vsli:raw="The new instance.">La nueva instancia.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary vsli:raw="When implemented in a derived class, creates a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">Cuando se implementa en una clase derivada, crea una nueva instancia de la clase <see cref="T:System.Windows.Freezable" /> derivada.</summary>
      <returns vsli:raw="The new instance.">La nueva instancia.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary vsli:raw="Makes the current object unmodifiable and sets its &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt;.">Convierte el objeto actual en no modificable y establece su propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> en <see langword="true" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be made unmodifiable.">
        <see cref="T:System.Windows.Freezable" /> no se puede convertir en no modificable.</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary vsli:raw="If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;, this method indicates whether the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable. If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;false&quot; /&gt;, this method attempts to make the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; unmodifiable and indicates whether the operation succeeded.">Si el valor del parámetro <paramref name="isChecking" /> es <see langword="true" />, este método indica si la clase <see cref="T:System.Windows.Freezable" /> especificada se puede convertir en no modificable. Si el valor del parámetro <paramref name="isChecking" /> es <see langword="false" />, este método intenta convertir la clase <see cref="T:System.Windows.Freezable" /> especificada en no modificable e indica si la operación se realiza correctamente.</summary>
      <param name="freezable" vsli:raw="The object to check or make unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the object is checked to determine whether it can be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the object is made unmodifiable, if possible.">Objeto que se va a comprobar o a convertir en no modificable. Si el valor de <paramref name="isChecking" /> es <see langword="true" />, se comprueba el objeto para determinar si se puede convertir en no modificable. Si el valor de <paramref name="isChecking" /> es <see langword="false" />, el objeto se convierte en no modificable, si es posible.</param>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">Es <see langword="true" /> para devolver una indicación de si se puede inmovilizar el objeto (sin inmovilizarlo realmente); es <see langword="false" /> para inmovilizarlo realmente.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="When &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the attempt to make &lt;paramref name=&quot;freezable&quot; /&gt; unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).">Cuando el valor de <paramref name="isChecking" /> es <see langword="false" />, el intento para convertir <paramref name="freezable" /> en no modificable no dio resultado; el estado del objeto es desconocido puede estar parcialmente inmovilizado.</exception>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Si el valor de <paramref name="isChecking" /> es <see langword="true" />, este método devuelve <see langword="true" /> si la clase <see cref="T:System.Windows.Freezable" /> especificada se puede convertir en no modificable o <see langword="false" /> si no se puede convertir en no modificable. Si el valor de <paramref name="isChecking" /> es <see langword="false" />, este método devuelve <see langword="true" /> si la clase <see cref="T:System.Windows.Freezable" /> especificada ahora no es modificable o <see langword="false" /> si no se puede convertir en no modificable.</returns>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object unmodifiable or tests whether it can be made unmodifiable.">Convierte el objeto <see cref="T:System.Windows.Freezable" /> en no modificable o prueba si se puede convertir en no modificable.</summary>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">Es <see langword="true" /> para devolver una indicación de si se puede inmovilizar el objeto (sin inmovilizarlo realmente); es <see langword="false" /> para inmovilizarlo realmente.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">Si el valor de <paramref name="isChecking" /> es <see langword="true" />, este método devuelve <see langword="true" /> si la clase <see cref="T:System.Windows.Freezable" /> se puede convertir en no modificable o <see langword="false" /> si no se puede convertir en no modificable. Si el valor de <paramref name="isChecking" /> es <see langword="false" />, este método devuelve <see langword="true" /> si la clase <see cref="T:System.Windows.Freezable" /> especificada ahora no es modificable o <see langword="false" /> si no se puede convertir en no modificable.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Crea una copia inmovilizada de <see cref="T:System.Windows.Freezable" />, con los valores de propiedades base (no animadas). Puesto que se inmoviliza la copia, se copia cualquier subobjeto inmovilizado por referencia.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be frozen because it contains expressions or animated properties.">No se puede inmovilizar <see cref="T:System.Windows.Freezable" /> porque contiene expresiones o propiedades animadas.</exception>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Copia inmovilizada de <see cref="T:System.Windows.Freezable" />. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> de la copia se establece en <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">Convierte la instancia en un clon inmovilizado de la clase <see cref="T:System.Windows.Freezable" /> especificada con los valores de propiedades base (no animadas).</summary>
      <param name="sourceFreezable" vsli:raw="The instance to copy.">Instancia que se va a copiar.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">Crea una copia inmovilizada de <see cref="T:System.Windows.Freezable" /> con los valores de propiedad actuales. Puesto que se inmoviliza la copia, se copia cualquier subobjeto inmovilizado por referencia.</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Copia inmovilizada de <see cref="T:System.Windows.Freezable" />. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> de la copia se establece en <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the current instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. If the object has animated dependency properties, their current animated values are copied.">Convierte la instancia actual en un clon inmovilizado del valor de <see cref="T:System.Windows.Freezable" /> especificado. Si el objeto tiene propiedades de dependencia animadas, se copian sus valores animados actuales.</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to copy and freeze.">Clase <see cref="T:System.Windows.Freezable" /> que se va a copiar e inmovilizar.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary vsli:raw="Called when the current &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object is modified.">Se le llama cuando el objeto <see cref="T:System.Windows.Freezable" /> actual se modifica.</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary vsli:raw="Ensures that appropriate context pointers are established for a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; data member that has just been set.">Se asegura de que se establecen los punteros contextuales adecuados para un miembro de datos <see cref="T:System.Windows.DependencyObjectType" /> que se acaba de establecer.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">Valor previo del miembro de datos.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">Valor actual del miembro de datos.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Este miembro es compatible con la infraestructura de Windows Presentation Foundation (WPF) y no está diseñado para utilizarse directamente desde el código.</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">Valor previo del miembro de datos.</param>
      <param name="newValue" vsli:raw="The current value of the data member.">Valor actual del miembro de datos.</param>
      <param name="property" vsli:raw="The property that changed.">La propiedad que ha cambiado.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation of &lt;see cref=&quot;M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)&quot; /&gt; to also invoke any &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; handlers in response to a changing dependency property of type &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;.">Reemplaza la implementación <see cref="T:System.Windows.DependencyObject" /> de <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> para invocar también cualquier controlador <see cref="E:System.Windows.Freezable.Changed" /> en respuesta a una propiedad de dependencia cambiante de tipo <see cref="T:System.Windows.Freezable" />.</summary>
      <param name="e" vsli:raw="Event data that contains information about which property changed, and its old and new values.">Datos de evento que contienen información acerca de qué propiedad ha cambiado y de sus valores antiguos y nuevos.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary vsli:raw="Ensures that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is being accessed from a valid thread. Inheritors of &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; must call this method at the beginning of any API that reads data members that are not dependency properties.">Se asegura de que se tiene acceso a <see cref="T:System.Windows.Freezable" /> desde un subproceso válido. Los herederos de <see cref="T:System.Windows.Freezable" /> deben llamar a este método al inicio de las API que leen miembros de datos que no son propiedades de dependencia.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; event for the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; and invokes its &lt;see cref=&quot;M:System.Windows.Freezable.OnChanged&quot; /&gt; method. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; should call this method at the end of any API that modifies class members that are not stored as dependency properties.">Genera el evento <see cref="E:System.Windows.Freezable.Changed" /> para <see cref="T:System.Windows.Freezable" /> e invoca su método <see cref="M:System.Windows.Freezable.OnChanged" />. Las clases que derivan de <see cref="T:System.Windows.Freezable" /> deben llamar a este método al final de cualquier API que modifique miembros de clase que no estén almacenados como propiedades de dependencia.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary vsli:raw="Verifies that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is not frozen and that it is being accessed from a valid threading context. &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; inheritors should call this method at the beginning of any API that writes to data members that are not dependency properties.">Comprueba que no se inmovilice <see cref="T:System.Windows.Freezable" /> y que se tiene acceso desde un contexto de subproceso válido. Los herederos de <see cref="T:System.Windows.Freezable" /> deben llamar a este método al inicio de las API que escriben en miembros de datos que no son propiedades de dependencia.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; instance is frozen and cannot have its members written to.">La instancia de <see cref="T:System.Windows.Freezable" /> se inmoviliza y no se puede escribir en sus miembros.</exception>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary vsli:raw="Gets a value that indicates whether the object can be made unmodifiable.">Obtiene un valor que indica si el objeto se puede convertir en no modificable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object can be made unmodifiable or is already unmodifiable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto actual se puede convertir en no modificable o ya lo es; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary vsli:raw="Gets a value that indicates whether the object is currently modifiable.">Obtiene un valor que indica si el objeto se puede modificar actualmente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is frozen and cannot be modified; &lt;see langword=&quot;false&quot; /&gt; if the object can be modified.">
        <see langword="true" /> si el objeto se inmoviliza y no se puede modificar; <see langword="false" /> si se puede modificar el objeto.</returns>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary vsli:raw="Specifies the direction within a user interface (UI) in which a desired focus change request is attempted. The direction is either based on tab order or by relative direction in layout.">Especifica la dirección dentro de una interfaz de usuario en la que se intenta llevar a cabo una solicitud de cambio de foco. La dirección se basa en el orden de tabulación o la dirección relativa en el diseño.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary vsli:raw="Move focus to another focusable element downwards from the currently focused element.">Mueve el foco a otro elemento enfocable situado debajo del elemento que tiene actualmente el foco.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary vsli:raw="Move focus to the first focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Mueve el foco al primer elemento enfocable en el orden de tabulación. No se admite para <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary vsli:raw="Move focus to the last focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Mueve el foco al último elemento enfocable en el orden de tabulación. No se admite para <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary vsli:raw="Move focus to another focusable element to the left of the currently focused element.">Mueve el foco a otro elemento enfocable situado a la izquierda del elemento que tiene actualmente el foco.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary vsli:raw="Move focus to the next focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Mueve el foco al siguiente elemento enfocable en el orden de tabulación. No se admite para <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary vsli:raw="Move focus to the previous focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">Mueve el foco al anterior elemento enfocable en el orden de tabulación. No se admite para <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary vsli:raw="Move focus to another focusable element to the right of the currently focused element.">Mueve el foco a otro elemento enfocable situado a la derecha del elemento que tiene actualmente el foco.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary vsli:raw="Move focus to another focusable element upwards from the currently focused element.">Mueve el foco a otro elemento enfocable situado encima del elemento que tiene actualmente el foco.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary vsli:raw="Specifies the possible key values on a keyboard.">Especifica los valores de tecla posibles en un teclado.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary vsli:raw="The A key.">Tecla A.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary vsli:raw="The ABNT_C1 (Brazilian) key.">Tecla ABNT_C1 (portugués de Brasil).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary vsli:raw="The ABNT_C2 (Brazilian) key.">Tecla ABNT_C2 (portugués de Brasil).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary vsli:raw="The Add key.">Tecla Agregar.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary vsli:raw="The Application key (Microsoft Natural Keyboard). Also known as the Menu key, as it displays an application-specific context menu.">Tecla de aplicación (Microsoft Natural Keyboard). También conocida como tecla de menú, ya que muestra un menú contextual específico de la aplicación.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary vsli:raw="The ATTN key.">Tecla ATTN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary vsli:raw="The B key.">Tecla B.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary vsli:raw="The Backspace key.">Tecla Retroceso.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary vsli:raw="The Browser Back key.">Tecla Atrás del explorador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary vsli:raw="The Browser Favorites key.">Tecla Favoritos del explorador</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary vsli:raw="The Browser Forward key.">Tecla Adelante del explorador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary vsli:raw="The Browser Home key.">Tecla Inicio del explorador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary vsli:raw="The Browser Refresh key.">Tecla Actualizar del explorador</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary vsli:raw="The Browser Search key.">Tecla Buscar del explorador</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary vsli:raw="The Browser Stop key.">Tecla Detener del explorador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary vsli:raw="The C key.">Tecla C.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary vsli:raw="The Cancel key.">Tecla Cancelar.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary vsli:raw="The Caps Lock key.">Tecla Bloq Mayús.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary vsli:raw="The Caps Lock key.">Tecla Bloq Mayús.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary vsli:raw="The Clear key.">Tecla Borrar.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary vsli:raw="The CRSEL key.">Tecla CRSEL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary vsli:raw="The D key.">Tecla D.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary vsli:raw="The 0 (zero) key.">Tecla 0 (cero).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary vsli:raw="The 1 (one) key.">Tecla 1 (uno).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary vsli:raw="The 2 key.">Tecla 2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary vsli:raw="The 3 key.">Tecla 3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary vsli:raw="The 4 key.">Tecla 4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary vsli:raw="The 5 key.">Tecla 5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary vsli:raw="The 6 key.">Tecla 6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary vsli:raw="The 7 key.">Tecla 7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary vsli:raw="The 8 key.">Tecla 8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary vsli:raw="The 9 key.">Tecla 9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary vsli:raw="The DBE_ALPHANUMERIC key.">Tecla DBE_ALPHANUMERIC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary vsli:raw="The DBE_CODEINPUT key.">Tecla DBE_CODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary vsli:raw="The DBE_DBCSCHAR key.">Tecla DBE_SBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary vsli:raw="The DBE_DETERMINESTRING key.">Tecla DBE_DETERMINESTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary vsli:raw="The DBE_ENTERDLGCONVERSIONMODE key.">Tecla DBE_ENTERDLGCONVERSIONMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary vsli:raw="The DBE_ENTERIMECONFIGMODE key.">Tecla DBE_ENTERIMECONFIGMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary vsli:raw="The DBE_ENTERWORDREGISTERMODE key.">Tecla DBE_ENTERWORDREGISTERMODE.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary vsli:raw="The DBE_FLUSHSTRING key.">Tecla DBE_FLUSHSTRING.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary vsli:raw="The DBE_HIRAGANA key.">Tecla DBE_HIRAGANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary vsli:raw="The DBE_KATAKANA key.">Tecla DBE_KATAKANA.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary vsli:raw="The DBE_NOCODEINPUT key.">Tecla DBE_NOCODEINPUT.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary vsli:raw="The DBE_NOROMAN key.">Tecla DBE_NOROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary vsli:raw="The DBE_ROMAN key.">Tecla DBE_ROMAN.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary vsli:raw="The DBE_SBCSCHAR key.">Tecla DBE_SBCSCHAR.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary vsli:raw="The key is used with another key to create a single combined character.">Tecla que se usa con otra tecla para crear un solo carácter combinado.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary vsli:raw="The Decimal key.">Tecla Decimal.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary vsli:raw="The Delete key.">Tecla Supr.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary vsli:raw="The Divide key.">Tecla Dividir.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary vsli:raw="The Down Arrow key.">Tecla Flecha abajo.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary vsli:raw="The E key.">Tecla E.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary vsli:raw="The End key.">Tecla Fin.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary vsli:raw="The Enter key.">Tecla Entrar.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary vsli:raw="The ERASE EOF key.">Tecla ERASE EOF.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary vsli:raw="The ESC key.">Tecla ESC.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary vsli:raw="The Execute key.">Tecla Ejecutar.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary vsli:raw="The EXSEL key.">Tecla EXSEL.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary vsli:raw="The F key.">Tecla F.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary vsli:raw="The F1 key.">Tecla F1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary vsli:raw="The F10 key.">Tecla F10.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary vsli:raw="The F11 key.">Tecla F11.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary vsli:raw="The F12 key.">Tecla F12.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary vsli:raw="The F13 key.">Tecla F13.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary vsli:raw="The F14 key.">Tecla F14.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary vsli:raw="The F15 key.">Tecla F15.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary vsli:raw="The F16 key.">Tecla F16.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary vsli:raw="The F17 key.">Tecla F17.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary vsli:raw="The F18 key.">Tecla F18.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary vsli:raw="The F19 key.">Tecla F19.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary vsli:raw="The F2 key.">Tecla F2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary vsli:raw="The F20 key.">Tecla F20.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary vsli:raw="The F21 key.">Tecla F21.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary vsli:raw="The F22 key.">Tecla F22.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary vsli:raw="The F23 key.">Tecla F23.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary vsli:raw="The F24 key.">Tecla F24.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary vsli:raw="The F3 key.">Tecla F3.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary vsli:raw="The F4 key.">Tecla F4.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary vsli:raw="The F5 key.">Tecla F5.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary vsli:raw="The F6 key.">Tecla F6.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary vsli:raw="The F7 key.">Tecla F7.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary vsli:raw="The F8 key.">Tecla F8.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary vsli:raw="The F9 key.">Tecla F9.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary vsli:raw="The IME Final mode key.">Tecla de modo Final de IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary vsli:raw="The G key.">Tecla G.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary vsli:raw="The H key.">Tecla H.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary vsli:raw="The IME Hangul mode key.">Tecla de modo Hangul de IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary vsli:raw="The IME Hanja mode key.">Tecla de modo Hanja de IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary vsli:raw="The Help key.">Tecla Ayuda.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary vsli:raw="The Home key.">Tecla Inicio.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary vsli:raw="The I key.">Tecla I.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary vsli:raw="The IME Accept key.">Tecla Aceptar de IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary vsli:raw="The IME Convert key.">Tecla Convertir de IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary vsli:raw="The IME Mode change request.">Solicitud de cambio del modo IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary vsli:raw="The IME NonConvert key.">Tecla No convertir de IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary vsli:raw="A special key masking the real key being processed by an IME.">Tecla especial especial que enmascara la tecla real que está procesando un IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary vsli:raw="The Insert key.">Tecla Insertar.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary vsli:raw="The J key.">Tecla J.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary vsli:raw="The IME Junja mode key.">Tecla de modo Junja de IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary vsli:raw="The K key.">Tecla K.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary vsli:raw="The IME Kana mode key.">Tecla de modo Kana de IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary vsli:raw="The IME Kanji mode key.">Tecla de modo Kanji de IME.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary vsli:raw="The L key.">Tecla L.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary vsli:raw="The Launch Application1 key.">Tecla Iniciar aplicación1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary vsli:raw="The Launch Application2 key.">Tecla Iniciar aplicación2.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary vsli:raw="The Launch Mail key.">Tecla Iniciar correo.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary vsli:raw="The Left Arrow key.">Tecla Flecha izquierda.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary vsli:raw="The left ALT key.">Tecla ALT izquierda.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary vsli:raw="The left CTRL key.">Tecla CTRL izquierda.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary vsli:raw="The left Shift key.">Tecla Mayús izquierda.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary vsli:raw="The Linefeed key.">Tecla Avance de línea.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary vsli:raw="The left Windows logo key (Microsoft Natural Keyboard).">Tecla del logotipo de Windows izquierda (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary vsli:raw="The M key.">Tecla M.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary vsli:raw="The Media Next Track key.">Tecla multimedia Pista siguiente.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary vsli:raw="The Media Play Pause key.">Tecla multimedia Pausa de reproducción.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary vsli:raw="The Media Previous Track key.">Tecla multimedia Pista anterior.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary vsli:raw="The Media Stop key.">Tecla multimedia Detener.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary vsli:raw="The Multiply key.">Tecla Multiplicar.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary vsli:raw="The N key.">Tecla N.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary vsli:raw="The Page Down key.">Tecla Av Pág.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary vsli:raw="A constant reserved for future use.">Constante reservada para un uso futuro.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary vsli:raw="No key pressed.">Ninguna tecla presionada.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary vsli:raw="The Num Lock key.">Tecla Bloq Num.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary vsli:raw="The 0 key on the numeric keypad.">Tecla 0 del teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary vsli:raw="The 1 key on the numeric keypad.">Tecla 1 del teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary vsli:raw="The 2 key on the numeric keypad.">Tecla 2 del teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary vsli:raw="The 3 key on the numeric keypad.">Tecla 3 del teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary vsli:raw="The 4 key on the numeric keypad.">Tecla 4 del teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary vsli:raw="The 5 key on the numeric keypad.">Tecla 5 del teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary vsli:raw="The 6 key on the numeric keypad.">Tecla 6 del teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary vsli:raw="The 7 key on the numeric keypad.">Tecla 7 del teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary vsli:raw="The 8 key on the numeric keypad.">Tecla 8 del teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary vsli:raw="The 9 key on the numeric keypad.">Tecla 9 del teclado numérico.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary vsli:raw="The O key.">Tecla O.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary vsli:raw="The OEM 1 key.">Tecla 1 de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary vsli:raw="The OEM 102 key.">Tecla 102 de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary vsli:raw="The OEM 2 key.">Tecla 2 de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary vsli:raw="The OEM 3 key.">Tecla 3 de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary vsli:raw="The OEM 4 key.">Tecla 4 de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary vsli:raw="The OEM 5 key.">Tecla 5 de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary vsli:raw="The OEM 6 key.">Tecla 6 de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary vsli:raw="The OEM 7 key.">Tecla 7 de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary vsli:raw="The OEM 8 key.">Tecla 8 de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary vsli:raw="The OEM ATTN key.">Tecla ATTN de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary vsli:raw="The OEM AUTO key.">Tecla AUTOMÁTICO de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary vsli:raw="The OEM Backslash key.">Tecla Barra diagonal inversa de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary vsli:raw="The OEM BACKTAB key.">Tecla TABATRÁS de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary vsli:raw="The OEM Clear key.">Tecla Borrar de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary vsli:raw="The OEM Close Brackets key.">Tecla Corchete de cierre de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary vsli:raw="The OEM Comma key.">Tecla Coma de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary vsli:raw="The OEM COPY key.">Tecla COPIAR de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary vsli:raw="The OEM ENLW key.">Tecla ENLW de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary vsli:raw="The OEM FINISH key.">Tecla FINALIZAR de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary vsli:raw="The OEM Minus key.">Tecla Menos de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary vsli:raw="The OEM Open Brackets key.">Tecla Corchete de apertura de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary vsli:raw="The OEM Period key.">Tecla Punto de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary vsli:raw="The OEM Pipe key.">Tecla Barra vertical de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary vsli:raw="The OEM Addition key.">Tecla Adición de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary vsli:raw="The OEM Question key.">Tecla Pregunta de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary vsli:raw="The OEM Quotes key.">Tecla Comillas de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary vsli:raw="The OEM Semicolon key.">Tecla Punto y coma de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary vsli:raw="The OEM Tilde key.">Tecla Tilde de OEM.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary vsli:raw="The P key.">Tecla P.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary vsli:raw="The PA1 key.">Tecla PA1.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary vsli:raw="The Page Down key.">Tecla Av Pág.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary vsli:raw="The Page Up key.">Tecla Re Pág.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary vsli:raw="The Pause key.">Tecla Pausa.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary vsli:raw="The PLAY key.">Tecla PLAY.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary vsli:raw="The Print key.">Tecla Imprimir.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary vsli:raw="The Print Screen key.">Tecla Impr Pant.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary vsli:raw="The Page Up key.">Tecla Re Pág.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary vsli:raw="The Q key.">Tecla Q.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary vsli:raw="The R key.">Tecla R.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary vsli:raw="The Return key.">Tecla Return.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary vsli:raw="The Right Arrow key.">Tecla Flecha derecha.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary vsli:raw="The right ALT key.">Tecla ALT derecha.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary vsli:raw="The right CTRL key.">Tecla CTRL derecha.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary vsli:raw="The right Shift key.">Tecla Mayús derecha.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary vsli:raw="The right Windows logo key (Microsoft Natural Keyboard).">Tecla del logotipo de Windows derecha (Microsoft Natural Keyboard).</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary vsli:raw="The S key.">Tecla S.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary vsli:raw="The Scroll Lock key.">Tecla Bloq Despl.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary vsli:raw="The Select key.">Tecla Seleccionar.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary vsli:raw="The Select Media key.">Tecla Seleccionar medio.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary vsli:raw="The Separator key.">Tecla Separador.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary vsli:raw="The Computer Sleep key.">Tecla de suspensión del equipo.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary vsli:raw="The Print Screen key.">Tecla Impr Pant.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary vsli:raw="The Spacebar key.">Tecla Barra espaciadora.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary vsli:raw="The Subtract key.">Tecla Restar.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary vsli:raw="A special key masking the real key being processed as a system key.">Tecla especial especial que enmascara la tecla real que se está procesando como una tecla del sistema.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary vsli:raw="The T key.">Tecla T.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary vsli:raw="The Tab key.">Tecla Tab.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary vsli:raw="The U key.">Tecla U.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary vsli:raw="The Up Arrow key.">Tecla Flecha arriba.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary vsli:raw="The V key.">Tecla V.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary vsli:raw="The Volume Down key.">Tecla Bajar volumen.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary vsli:raw="The Volume Mute key.">Tecla Silenciar volumen.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary vsli:raw="The Volume Up key.">Tecla Subir volumen.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary vsli:raw="The W key.">Tecla W.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary vsli:raw="The X key.">Tecla X.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary vsli:raw="The Y key.">Tecla Y.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary vsli:raw="The Z key.">Tecla Z.</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary vsli:raw="The ZOOM key.">Tecla ZOOM.</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; object to and from other types.">Convierte un objeto <see cref="T:System.Windows.Input.Key" /> en otros tipos y viceversa.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Determina si un objeto del tipo especificado puede convertirse en una instancia de <see cref="T:System.Windows.Input.Key" /> usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Tipo cuya conversión se evalúa.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="sourceType" /> es de tipo <see cref="T:System.String" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to the specified type, using the specified context.">Determina si una instancia de <see cref="T:System.Windows.Input.Key" /> puede convertirse en el tipo especificado usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Tipo cuya conversión se evalúa.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="destinationType" /> es de tipo <see cref="T:System.String" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">Intenta convertir el objeto especificado en una instancia de <see cref="T:System.Windows.Input.Key" /> usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="culture" vsli:raw="Culture specific information.">Información específica de la referencia cultural.</param>
      <param name="source" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" /> no se puede convertir.</exception>
      <returns vsli:raw="The converted object.">El objeto convertido.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to the specified type, using the specified context.">Intenta convertir una instancia de <see cref="T:System.Windows.Input.Key" /> en el tipo especificado usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="culture" vsli:raw="Culture specific information.">Información específica de la referencia cultural.</param>
      <param name="value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Tipo en el que se va a convertir el objeto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;.">
        <paramref name="value" /> no se pueden convertir en <paramref name="destinationType" />.</exception>
      <returns vsli:raw="The converted object.">El objeto convertido.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary vsli:raw="Provides static methods to convert between Win32 Virtual-Keys and the WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; enumeration.">Proporciona métodos estáticos para realizar conversiones entre teclas virtuales de Win32 y la enumeración <see cref="T:System.Windows.Input.Key" /> de WPF.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary vsli:raw="Converts a Win32 Virtual-Key into WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Convierte una tecla virtual de Win32 en la enumeración <see cref="T:System.Windows.Input.Key" /> de WPF.</summary>
      <param name="virtualKey" vsli:raw="The virtual key to convert.">Tecla virtual que se va a convertir.</param>
      <returns vsli:raw="The WPF key.">La tecla de WPF.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary vsli:raw="Converts a WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; into a Win32 Virtual-Key.">Convierte una enumeración <see cref="T:System.Windows.Input.Key" /> de WPF en una tecla virtual de Win32.</summary>
      <param name="key" vsli:raw="The WPF to convert.">Valor WPF que se va a convertir.</param>
      <returns vsli:raw="The Win32 Virtual-Key.">La tecla virtual de Win32.</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Convierte instancias de <see cref="T:System.String" /> en y desde instancias de <see cref="T:System.Windows.Input.Key" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.KeyValueSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.KeyValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Determina si la <see cref="T:System.String" /> especificada puede convertirse en una instancia de <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadena que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina si la instancia especificada de <see cref="T:System.Windows.Input.Key" /> puede convertirse en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to evaluate for conversion.">Tecla que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="value" /> se puede convertir a <see cref="T:System.String" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Convierte <see cref="T:System.String" /> a <see cref="T:System.Windows.Input.Key" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Cadena que se va a convertir a <see cref="T:System.Windows.Input.Key" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Una nueva instancia de <see cref="T:System.Windows.Input.Key" /> según el parámetro <paramref name="value" /> proporcionado.</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una instancia de <see cref="T:System.Windows.Input.Key" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">Tecla que se va a convertir en una cadena.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">Representación de cadena invariable de la instancia especificada de <see cref="T:System.Windows.Input.Key" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary vsli:raw="Specifies the set of modifier keys.">Especifica el conjunto de teclas modificadoras.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary vsli:raw="The ALT key.">Tecla ALT.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary vsli:raw="The CTRL key.">Tecla CTRL.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary vsli:raw="No modifiers are pressed.">No está presionada ninguna tecla modificadora.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary vsli:raw="The SHIFT key.">Tecla MAYÚS.</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary vsli:raw="The Windows logo key.">La tecla con el logotipo de Windows.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; object to and from other types.">Convierte un objeto <see cref="T:System.Windows.Input.ModifierKeys" /> en otros tipos y viceversa.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysConverter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.ModifierKeysConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Determina si un objeto del tipo especificado puede convertirse en una instancia de <see cref="T:System.Windows.Input.ModifierKeys" /> usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Tipo cuya conversión se evalúa.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si <paramref name="sourceType" /> es de tipo <see cref="T:System.String" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to the specified type, using the specified context.">Determina si una instancia de <see cref="T:System.Windows.Input.ModifierKeys" /> puede convertirse en el tipo especificado usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Tipo cuya conversión se evalúa.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si <paramref name="destinationType" /> es de tipo <see cref="T:System.String" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">Intenta convertir el objeto especificado en una instancia de <see cref="T:System.Windows.Input.ModifierKeys" /> usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="culture" vsli:raw="Culture specific information.">Información específica de la referencia cultural.</param>
      <param name="source" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">
        <paramref name="source" /> no se puede convertir.</exception>
      <returns vsli:raw="The converted object.">El objeto convertido.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to the specified type, using the specified context.">Intenta convertir una instancia de <see cref="T:System.Windows.Input.ModifierKeys" /> en el tipo especificado usando el contexto indicado.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="culture" vsli:raw="Culture specific information.">Información específica de la referencia cultural.</param>
      <param name="value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Tipo en el que se va a convertir el objeto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not map to a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">
        <paramref name="value" /> no se asigna a una instancia de  <see cref="T:System.Windows.Input.ModifierKeys" /> válida.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> no se puede convertir.</exception>
      <returns vsli:raw="The converted object.">El objeto convertido.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Determines whether the specified value is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Determina si el valor especificado es un valor de <see cref="T:System.Windows.Input.ModifierKeys" /> válido.</summary>
      <param name="modifierKeys" vsli:raw="The value to check for validity.">Valor cuya validez se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if input is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la entrada es un valor de <see cref="T:System.Windows.Input.ModifierKeys" /> válido; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Convierte instancias de <see cref="T:System.String" /> en y desde instancias de <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysValueSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Determina si la <see cref="T:System.String" /> especificada puede convertirse en una instancia de <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadena que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina si la instancia especificada de <see cref="T:System.Windows.Input.ModifierKeys" /> puede convertirse en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The modifier keys to evaluate for conversion.">Teclas modificadoras que se van a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="value" /> se puede convertir a <see cref="T:System.String" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Convierte un tipo <see cref="T:System.String" /> en un valor de <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">Cadena que se va a convertir a <see cref="T:System.Windows.Input.ModifierKeys" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Una nueva instancia de <see cref="T:System.Windows.Input.ModifierKeys" /> según el parámetro <paramref name="value" /> proporcionado.</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una instancia de <see cref="T:System.Windows.Input.ModifierKeys" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The key to convert into a string.">Tecla que se va a convertir en una cadena.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Información contextual usada para la conversión.</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">Representación de cadena invariable del valor especificado de <see cref="T:System.Windows.Input.ModifierKeys" />.</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary vsli:raw="Represents a request to move focus to another control.">Representa una solicitud para mover el foco a otro control.</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.TraversalRequest&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
      <param name="focusNavigationDirection" vsli:raw="The intended direction of the focus traversal, as a value of the enumeration.">Dirección del cambio secuencial del foco, como un valor de enumeración.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary vsli:raw="Gets the traversal direction.">Obtiene la dirección del cambio secuencial.</summary>
      <returns vsli:raw="One of the traversal direction enumeration values.">Uno de los valores de enumeración de la dirección del cambio secuencial.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary vsli:raw="Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.">Obtiene o establece un valor que indica si el cambio secuencial del foco ha llegado al final de los elementos secundarios que pueden tener el foco.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this traversal has reached the end of child elements that can have focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este cambio secuencial ha llegado al final de los elementos secundarios que pueden tener el foco; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary vsli:raw="Describes the width, height, and location of an integer rectangle.">Describe el ancho, el alto y la ubicación de un rectángulo entero.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; coordinates and the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Int32Rect" /> con las coordenadas <see cref="P:System.Windows.Int32Rect.X" /> e <see cref="P:System.Windows.Int32Rect.Y" /> especificadas y los valores de <see cref="P:System.Windows.Int32Rect.Width" /> y <see cref="P:System.Windows.Int32Rect.Height" /> especificados.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the x-coordinate of the top-left corner of the rectangle.">Coordenada <see cref="P:System.Windows.Int32Rect.X" /> de la nueva instancia de <see cref="T:System.Windows.Int32Rect" /> que especifica la coordenada X de la esquina superior izquierda del rectángulo.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the y-coordinate of the top-left corner of the rectangle.">Coordenada <see cref="P:System.Windows.Int32Rect.Y" /> de la nueva instancia de <see cref="T:System.Windows.Int32Rect" /> que especifica la coordenada Y de la esquina superior izquierda del rectángulo.</param>
      <param name="width" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the width of the rectangle.">
        <see cref="P:System.Windows.Int32Rect.Width" /> de la nueva instancia de <see cref="T:System.Windows.Int32Rect" /> que especifica el ancho del rectángulo.</param>
      <param name="height" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the height of the rectangle.">
        <see cref="P:System.Windows.Int32Rect.Height" /> de la nueva instancia de <see cref="T:System.Windows.Int32Rect" /> que especifica el alto del rectángulo.</param>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Determina si el rectángulo especificado es igual que este rectángulo.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">Objeto que se va a comparar con el rectángulo actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="o" /> es <see cref="T:System.Windows.Int32Rect" /> y tiene los mismos valores de <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> y <see cref="P:System.Windows.Int32Rect.Height" /> que este rectángulo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">Determina si el rectángulo especificado es igual que este rectángulo.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">Rectángulo que se va a comparar con el rectángulo actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> tiene los mismos valores de <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> y <see cref="P:System.Windows.Int32Rect.Height" /> que este rectángulo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangles are equal.">Determina si los rectángulos especificados son iguales.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Primer rectángulo que se va a comparar.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Segundo rectángulo que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="int32Rect1" /> y <paramref name="int32Rect2" /> tienen los mismos valores para <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> y <see cref="P:System.Windows.Int32Rect.Height" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code from this rectangle's &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values.">Crea un código hash a partir de los valores de las propiedades <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> y <see cref="P:System.Windows.Int32Rect.Height" /> de este rectángulo.</summary>
      <returns vsli:raw="This rectangle's hash code.">Código hash de este rectángulo.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Compara dos rectángulos para determinar si son exactamente iguales.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Primer rectángulo que se va a comparar.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Segundo rectángulo que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="int32Rect1" /> y <paramref name="int32Rect2" /> tienen los mismos valores para <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> y <see cref="P:System.Windows.Int32Rect.Height" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Compara dos rectángulos para determinar si no son iguales.</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">Primer rectángulo que se va a comparar.</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">Segundo rectángulo que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, if all of these values are the same, then &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="false" /> si <paramref name="int32Rect1" /> y <paramref name="int32Rect2" /> tienen los mismos valores para <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> y <see cref="P:System.Windows.Int32Rect.Height" />; en caso contrario, si todos estos valores son iguales, es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation.">Crea una estructura <see cref="T:System.Windows.Int32Rect" /> a partir de la representación de tipo <see cref="T:System.String" /> especificada.</summary>
      <param name="source" vsli:raw="A string representation of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Representación de cadena de una estructura <see cref="T:System.Windows.Int32Rect" />.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Estructura <see cref="T:System.Windows.Int32Rect" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Da formato al valor de la instancia actual usando el formato especificado.</summary>
      <param name="format" vsli:raw="The format to use.">Formato que se usará.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">Proveedor que se va a usar para formatear el valor.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Valor de la instancia actual en el formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Crea una representación de cadena de este objeto <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns vsli:raw="A string containing the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">Cadena que contiene los mismos valores de <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> y <see cref="P:System.Windows.Int32Rect.Height" /> que esta estructura <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;see cref=&quot;T:System.IFormatProvider&quot; /&gt;.">Crea una representación de cadena de este objeto <see cref="T:System.Windows.Int32Rect" /> basándose en la interfaz <see cref="T:System.IFormatProvider" /> proporcionada.</summary>
      <param name="provider" vsli:raw="The format provider to use. If provider is &lt;see langword=&quot;null&quot; /&gt;, the current culture is used.">Proveedor de formato que se va a usar. Si el valor del parámetro provider es <see langword="null" />, se utiliza la referencia cultural actual.</param>
      <returns vsli:raw="A string representation of this instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Representación de cadena de esta instancia de <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary vsli:raw="Gets the empty rectangle, a special value that represents a rectangle with no position or area.">Obtiene el rectángulo vacío, un valor especial que representa un rectángulo sin posición ni área.</summary>
      <returns vsli:raw="An empty rectangle with no position or area.">Rectángulo vacío sin posición ni área.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0.">Obtiene un valor que indica si las propiedades <see cref="P:System.Windows.Int32Rect.Width" /> y <see cref="P:System.Windows.Int32Rect.Height" /> de <see cref="T:System.Windows.Int32Rect" /> son mayores que 0.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si las <see cref="P:System.Windows.Int32Rect.Width" /><see cref="P:System.Windows.Int32Rect.Height" /> propiedades y de <see cref="T:System.Windows.Int32Rect" /> son mayores que 0; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Obtiene o establece la altura del rectángulo.</summary>
      <returns vsli:raw="The height of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Alto del rectángulo. El valor predeterminado es <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the rectangle is empty.">Obtiene un valor que indica si el rectángulo está vacío.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> Si el rectángulo está vacío; en caso contrario, <see langword="false" /> . El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Obtiene o establece el ancho del rectángulo.</summary>
      <returns vsli:raw="The width of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Ancho del rectángulo. El valor predeterminado es <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary vsli:raw="Gets or sets the x-coordinate of the top-left corner of the rectangle.">Obtiene o establece la coordenada "x" de la esquina superior izquierda del rectángulo.</summary>
      <returns vsli:raw="The x-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Coordenada "x" de la esquina superior izquierda del rectángulo. El valor predeterminado es <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary vsli:raw="Gets or sets the y-coordinate of the top-left corner of the rectangle.">Obtiene o establece la coordenada Y de la esquina superior izquierda del rectángulo.</summary>
      <returns vsli:raw="The y-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">Coordenada Y de la esquina superior izquierda del rectángulo. El valor predeterminado es <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary vsli:raw="Converts instances of other types to and from an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Convierte instancias de otros tipos en <see cref="T:System.Windows.Int32Rect" /> y viceversa.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Int32RectConverter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Int32RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Determina si un objeto puede convertirse de un tipo especificado en una instancia de <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Describe la información de contexto de un tipo.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Tipo del origen que se va a evaluar para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se puede convertir en <see cref="T:System.Windows.Int32Rect" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a different type.">Determina si una instancia de <see cref="T:System.Windows.Int32Rect" /> puede convertirse en un tipo diferente.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Describe la información de contexto de un tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; is being evaluated for conversion.">Tipo deseado de este <see cref="T:System.Windows.Int32Rect" /> que se está evaluando para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Int32Rect" /> puede convertirse en <paramref name="destinationType" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified type to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Intenta convertir el tipo especificado en <see cref="T:System.Windows.Int32Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Proporciona la información contextual necesaria para la conversión.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Información de referencia cultural que se debe respetar durante la conversión.</param>
      <param name="value" vsli:raw="The object being converted.">Objeto que se convertirá.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Se inicia si el objeto especificado es NULL o es un tipo que no se puede convertir en <see cref="T:System.Windows.Int32Rect" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Objeto <see cref="T:System.Windows.Int32Rect" /> creado a partir de la conversión de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a specified type.">Intenta convertir <see cref="T:System.Windows.Int32Rect" /> en un tipo especificado.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Proporciona la información contextual necesaria para la conversión.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Información de referencia cultural que se debe respetar durante la conversión.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to convert.">Valor <see cref="T:System.Windows.Int32Rect" /> que se va a convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to.">Tipo en el que convertir <see cref="T:System.Windows.Int32Rect" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Se inicia si <paramref name="value" /> es <see langword="null" /> o no es <see cref="T:System.Windows.Int32Rect" />, o si <paramref name="destinationType" /> no es uno de los tipos válidos para la conversión.</exception>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">Objeto que se crea a partir de la conversión de esta instancia de <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary vsli:raw="Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.">Habilita el control compartido del suministro de mensajes entre Win32 y WPF en escenarios de interoperación.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary vsli:raw="Occurs when a thread becomes modal.">Se produce cuando un subproceso se vuelve modal.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary vsli:raw="Occurs when a modal thread becomes nonmodal.">Se produce cuando un subproceso modal se vuelve no modal.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Se produce cuando el suministro de mensajes recibe un mensaje del teclado.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary vsli:raw="Occurs when the thread is idle.">Se produce cuando el subproceso está inactivo.</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">Se produce cuando el suministro de mensajes recibe un mensaje del teclado.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary vsli:raw="Called to indicate that a modal thread is no longer modal.">Se llama para indicar que un subproceso modal ya no es modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary vsli:raw="Called to indicate that the thread is modal.">Se llama para indicar que el subproceso es modal.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary vsli:raw="Called to indicate that a thread is idle.">Se llama para indicar que un subproceso está inactivo.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary vsli:raw="Indicates that a new message is available for possible handling.">Indica que hay un nuevo mensaje disponible para su posible control.</summary>
      <param name="msg" vsli:raw="The message and its associated data.">El mensaje y sus datos asociados.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if one of the modules listening to the message loop processed the message. The owner of the message loop should ignore the message. &lt;see langword=&quot;false&quot; /&gt;, if the message was not processed. In this case, the owner of the message pump should call the Win32 function TranslateMessage followed by DispatchMessage.">
        <see langword="true" />, si uno de los módulos que escuchan el bucle de mensajes ha procesado el mensaje. El propietario del bucle de mensajes debe omitir el mensaje. <see langword="false" /> si no se procesó el mensaje. En este caso, el propietario del suministro de mensajes debe llamar a la función TranslateMessage de Win32 seguida de DispatchMessage.</returns>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary vsli:raw="Gets the last message that was raised.">Obtiene el último mensaje que se ha producido.</summary>
      <returns vsli:raw="The last message.">El último mensaje.</returns>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary vsli:raw="Gets a value that indicates whether the thread is modal.">Obtiene un valor que indica si el subproceso es modal.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread is modal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el subproceso es modal; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary vsli:raw="Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Proporciona a los componentes un receptor del teclado que administra el desplazamiento mediante tabulación, los aceleradores y las teclas de acceso en los límites de interoperabilidad y entre los identificadores de ventana (HWND). Esta interfaz implementa la administración de los mensajes del teclado en escenarios de interoperación de WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary vsli:raw="Gets a value that indicates whether the sink or one of its contained components has focus.">Obtiene un valor que indica si el receptor o uno de los componentes que contiene tiene el foco.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sink or one of its contained components has focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el receptor o uno de los componentes que contiene tiene el foco; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Called when one of the mnemonics (access keys) for this sink is invoked.">Se llama a este método cuando se invoca una de las teclas de acceso de este receptor.</summary>
      <param name="msg" vsli:raw="The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.">Mensaje de las teclas de acceso y los datos asociados. No modifique esta estructura de mensaje. Se pasa por referencia debido únicamente a razones de rendimiento.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Teclas modificadoras.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha administrado el mensaje; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface of a contained component.">Registra la interfaz <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> de un componente contenido.</summary>
      <param name="sink" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; sink of the contained component.">Receptor <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> del componente contenido.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; site of the contained component.">Sitio <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del componente contenido.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Sets focus on either the first tab stop or the last tab stop of the sink.">Establece el foco en la primera o última posición de tabulación del receptor.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Especifica si el foco debería establecerse en la primera o última posición de tabulación.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the focus has been set as requested; &lt;see langword=&quot;false&quot; /&gt;, if there are no tab stops.">
        <see langword="true" /> si el foco se ha establecido tal y como se solicitó; <see langword="false" />, si no hay ninguna posición de tabulación.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes keyboard input at the keydown message level.">Procesa la entrada de teclado en el nivel de mensajes de pulsación de teclas.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">El mensaje y los datos asociados. No modifique esta estructura. Se pasa por referencia debido únicamente a razones de rendimiento.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Teclas modificadoras.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled by the method implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el mensaje está controlado por la implementación del método; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; is called.">Procesa los mensajes de entrada WM_CHAR, WM_SYSCHAR, WM_DEADCHAR y WM_SYSDEADCHAR antes de llamar a <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">El mensaje y los datos asociados. No modifique esta estructura. Se pasa por referencia debido únicamente a razones de rendimiento.</param>
      <param name="modifiers" vsli:raw="Modifier keys.">Teclas modificadoras.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was processed and &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; should not be called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el mensaje se ha procesado y no debe llamarse a <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary vsli:raw="Gets or sets a reference to the component's container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Obtiene o establece una referencia a la interfaz <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del contenedor del componente.</summary>
      <returns vsli:raw="A reference to the container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">Una referencia a la interfaz <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> del contenedor.</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary vsli:raw="Manages keyboard focus within the container.  This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">Administra el foco del teclado en el contenedor.  Esta interfaz implementa la administración de los mensajes del teclado en escenarios de interoperación de WPF-Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Called by a contained component when it has reached its last tab stop and has no further items to tab to.">Un componente contenido llama a este método cuando alcanza su última posición de tabulación y no tiene más elementos a los que desplazarse con el tabulador.</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">Especifica si el foco debería establecerse en la primera o última posición de tabulación.</param>
      <returns vsli:raw="If this method returns &lt;see langword=&quot;true&quot; /&gt;, the site has shifted focus to another component. If this method returns &lt;see langword=&quot;false&quot; /&gt;, focus is still within the calling component. The component should &quot;wrap around&quot; and set focus to its first contained tab stop.">Si este método devuelve <see langword="true" />, el sitio ha desplazado el foco a otro componente. Si este método devuelve <see langword="false" />, el foco todavía se encuentra en el componente de llamada. El componente debería "plegarse sobre sí mismo" y establecer el foco en la primera posición de tabulación que contenga.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary vsli:raw="Unregisters a child keyboard input sink from this site.">Elimina del Registro un receptor de entrada de teclado secundario de este sitio.</summary>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary vsli:raw="Gets the keyboard sink associated with this site.">Obtiene el receptor del teclado asociado a este sitio.</summary>
      <returns vsli:raw="The current site's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface.">La interfaz <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> del sitio actual.</returns>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary vsli:raw="Contains message information from a thread's message queue.">Contiene información de mensaje de la cola de mensajes de un subproceso.</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary vsli:raw="Gets or sets the window handle (HWND) to the window whose window procedure receives the message.">Obtiene o establece el identificador de ventana (HWND) en la ventana cuyo procedimiento de ventana recibe el mensaje.</summary>
      <returns vsli:raw="The window handle (HWND).">El identificador de ventana (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;lParam&quot; /&gt; value that specifies additional information about the message. The exact meaning depends on the value of the &lt;see cref=&quot;P:System.Windows.Interop.MSG.message&quot; /&gt; member.">Obtiene o establece el valor <paramref name="lParam" /> que especifica información adicional sobre el mensaje. El significado exacto depende del valor del miembro de <see cref="P:System.Windows.Interop.MSG.message" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;lParam&quot; /&gt; value for the message.">El valor de <paramref name="lParam" /> para el mensaje.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary vsli:raw="Gets or sets the message identifier.">Obtiene o establece el identificador de mensaje.</summary>
      <returns vsli:raw="The message identifier.">El identificador de mensaje.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary vsli:raw="Gets or sets the x coordinate of the cursor position on the screen, when the message was posted.">Obtiene o establece la coordenada x de la posición del cursor en la pantalla, cuando se expuso el mensaje.</summary>
      <returns vsli:raw="The x coordinate of the cursor position.">La coordenada x de la posición del cursor.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary vsli:raw="Gets or sets the y coordinate of the cursor position on the screen, when the message was posted.">Obtiene o establece la coordenada y de la posición del cursor en la pantalla, cuando se expuso el mensaje.</summary>
      <returns vsli:raw="The y coordinate of the cursor position.">La coordenada y de la posición del cursor.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary vsli:raw="Gets or sets the time at which the message was posted.">Obtiene o establece la hora en la que se expuso el mensaje.</summary>
      <returns vsli:raw="The time that the message was posted.">La hora en la que se expuso el mensaje.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;wParam&quot; /&gt; value for the message, which specifies additional information about the message. The exact meaning depends on the value of the message.">Obtiene o establece el valor <paramref name="wParam" /> para el mensaje, que especifica información adicional sobre el mensaje. El significado exacto depende del valor del mensaje.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;wParam&quot; /&gt; value for the message.">El valor de <paramref name="wParam" /> para el mensaje.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&quot; /&gt; events.">Representa el método que controla los eventos <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> y <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />.</summary>
      <param name="msg" vsli:raw="A structure with the message data.">Estructura con los datos del mensaje.</param>
      <param name="handled" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha administrado el mensaje; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary vsli:raw="Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Proporciona compatibilidad con la escucha de eventos para las clases que esperan recibir eventos a través del modelo WeakEvent y <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary vsli:raw="Receives events from the centralized event manager.">Recibe los eventos del administrador de eventos centralizado.</summary>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; calling this method.">Tipo de la clase <see cref="T:System.Windows.WeakEventManager" /> que llama a este método.</param>
      <param name="sender" vsli:raw="Object that originated the event.">Objeto que originó el evento.</param>
      <param name="e" vsli:raw="Event data.">Datos de evento</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the listener handled the event. It is considered an error by the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; handling in WPF to register a listener for an event that the listener does not handle. Regardless, the method should return &lt;see langword=&quot;false&quot; /&gt; if it receives an event that it does not recognize or handle.">Es <see langword="true" /> si el agente de escucha controló el evento. La clase <see cref="T:System.Windows.WeakEventManager" /> que controla en WPF considera como un error el registro de un agente de escucha para un evento que el agente de escucha no controla. De todos modos, el método debe devolver <see langword="false" /> si recibe un evento que no reconoce o no controla.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary vsli:raw="Represents a property identifier and the property value for a locally set dependency property.">Representa un identificador de propiedad y el valor de propiedad para una propiedad de dependencia establecida localmente.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances are equal.">Determina si dos instancias de <see cref="T:System.Windows.LocalValueEntry" /> son iguales.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">Objeto <see cref="T:System.Windows.LocalValueEntry" /> que se va a comparar con el objeto <see cref="T:System.Windows.LocalValueEntry" /> actual.</param>
      <returns vsli:raw="This &lt;see cref=&quot;M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)&quot; /&gt; implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt;, and potentially compares the values of &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is a value type, so will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type. For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally. By default, this would be a reference equality of the values and thus the equality of the entire &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; would become a reference equality.">Esta implementación <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> compara los valores de <see cref="P:System.Windows.LocalValueEntry.Property" /> y compara potencialmente los valores de <see cref="P:System.Windows.LocalValueEntry.Value" />. El componente <see cref="P:System.Windows.LocalValueEntry.Property" /> de <see cref="T:System.Windows.LocalValueEntry" /> es un tipo de valor, por lo que siempre será una comparación bit a bit. Para el componente <see cref="P:System.Windows.LocalValueEntry.Value" />, esta implementación emplea una comparación bit a bit si es un tipo de valor. Para las propiedades establecidas localmente que tienen tipos de referencia, el comportamiento se difiere a los mecanismos de determinación de igualdad de ese tipo, porque simplemente utiliza el operador == en los dos valores de manera interna. De forma predeterminada, ésta sería una igualdad de referencias de los valores, por lo que la igualdad de toda la <see cref="T:System.Windows.LocalValueEntry" /> se volvería una igualdad de referencias.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">Devuelve el código hash de este objeto <see cref="T:System.Windows.LocalValueEntry" />.</summary>
      <returns vsli:raw="A signed 32-bit integer value.">Un valor entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances to determine whether they are the same.">Compara las instancias de <see cref="T:System.Windows.LocalValueEntry" /> especificadas para determinar si son las mismas.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">Primera instancia que se va a comparar.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">Segunda instancia que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEntry" /> es igual que <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEntry" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; instances to determine whether they are different.">Compara las instancias de <see cref="T:System.Windows.LocalValueEnumerator" /> especificadas para determinar si son distintas.</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">Primera instancia que se va a comparar.</param>
      <param name="obj2" vsli:raw="The second instance to compare.">Segunda instancia que se va a comparar.</param>
      <returns vsli:raw="This implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; components of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is always a value type, so this comparison will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type.  &#xA;  &#xA; For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the &lt;see langword=&quot;==&quot; /&gt; operator on the two values internally. By default, this is a reference equality of the values.">Esta implementación compara los valores de <see cref="P:System.Windows.LocalValueEntry.Property" /> y los componentes <see cref="P:System.Windows.LocalValueEntry.Value" /> de <see cref="T:System.Windows.LocalValueEntry" />. El componente <see cref="P:System.Windows.LocalValueEntry.Property" /> de <see cref="T:System.Windows.LocalValueEntry" /> es siempre un tipo de valor, por lo que esta comparación siempre será una comparación bit a bit. Para el componente <see cref="P:System.Windows.LocalValueEntry.Value" />, esta implementación emplea una comparación bit a bit si es un tipo de valor.  
  
Para las propiedades establecidas localmente que tienen tipos de referencia, el comportamiento se difiere a los mecanismos de determinación de igualdad de ese tipo, porque utiliza el operador <see langword="==" /> en los dos valores de manera interna. De forma predeterminada, ésta es una igualdad de referencias de los valores.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary vsli:raw="Gets the identifier for the locally set dependency property that is represented by this entry.">Obtiene el identificador de la propiedad de dependencia establecida localmente que se representa con esta entrada.</summary>
      <returns vsli:raw="The identifier for the locally set dependency property.">Identificador de la propiedad de dependencia establecida localmente.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary vsli:raw="Gets the value of the locally set dependency property.">Obtiene el valor de la propiedad de dependencia establecida localmente.</summary>
      <returns vsli:raw="The value of the locally set dependency property as an object.">Valor de la propiedad de dependencia establecida localmente como un objeto.</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary vsli:raw="Provides enumeration support for the local values of any dependency properties that exist on a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">Proporciona compatibilidad con la enumeración para los valores locales de las propiedades de dependencia que existen en un <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equivalent to this &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Determina si el objeto <see cref="T:System.Windows.LocalValueEnumerator" /> proporcionado es equivalente a este objeto <see cref="T:System.Windows.LocalValueEnumerator" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Objeto <see cref="T:System.Windows.LocalValueEnumerator" /> que se va a comparar con el objeto <see cref="T:System.Windows.LocalValueEnumerator" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Windows.LocalValueEnumerator" /> especificado es igual al objeto <see cref="T:System.Windows.LocalValueEnumerator" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">Devuelve un código hash para el <see cref="T:System.Windows.LocalValueEnumerator" /> actual.</summary>
      <returns vsli:raw="A 32-bit integer hash code.">Código hash entero de 32 bits.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Desplaza el enumerador al siguiente elemento de la colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares whether two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects are the same.">Compara si los dos objetos <see cref="T:System.Windows.LocalValueEnumerator" /> especificados son iguales.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">Primer objeto que se va a comparar.</param>
      <param name="obj2" vsli:raw="The second object to compare.">Segundo objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> es igual que <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects to determine whether they are not the same.">Compara los dos objetos <see cref="T:System.Windows.LocalValueEnumerator" /> especificados para determinar si no son iguales.</summary>
      <param name="obj1" vsli:raw="The first object to compare.">Primer objeto que se va a comparar.</param>
      <param name="obj2" vsli:raw="The second object to compare.">Segundo objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si las instancias no son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Establece el enumerador en su posición inicial (antes del primer elemento de la colección).</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary vsli:raw="Gets the number of items that are represented in the collection.">Obtiene el número de elementos representados en la colección.</summary>
      <returns vsli:raw="The number of items in the collection.">Número de elementos de la colección.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Obtiene el elemento actual de la colección.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; in the collection.">
        <see cref="T:System.Windows.LocalValueEntry" /> actual de la colección.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this members, see &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns vsli:raw="The current element in the collection.">Elemento actual de la colección.</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary vsli:raw="Specifies how a property is to be serialized.">Especifica cómo se va a serializar una propiedad.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary vsli:raw="The property should be serialized as an attribute.">La propiedad debe serializarse como un atributo.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary vsli:raw="Specifies the serialization flags for a property.">Especifica los marcadores de serialización de una propiedad.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptionsAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />.</summary>
      <param name="designerSerializationOptions" vsli:raw="Specifies how the property is to be serialized.">Especifica cómo se va a serializar la propiedad.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;designerSerializationOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; value.">
        <paramref name="designerSerializationOptions" /> no es un valor <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> válido.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; set on the attribute.">Obtiene las opciones <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> que se han establecido en el atributo.</summary>
      <returns vsli:raw="The serialization option, as a value of the enumeration.">Opción de serialización, como un valor de la enumeración.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary vsli:raw="Abstract class used internally by the WPF XAML compiler to support the use of internal types.">Es una clase abstracta que el compilador XAML de WPF usa internamente para admitir el uso de tipos internos.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.InternalTypeHelper&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary vsli:raw="When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.">Cuando se reemplaza en una clase (generada) derivada, adjunta un delegado del controlador de eventos a un evento interno.</summary>
      <param name="eventInfo" vsli:raw="The event information for the event (CLR reflection information).">Información del evento (información de reflexión de CLR).</param>
      <param name="target" vsli:raw="The target where the handler is attached.">Destino al que se adjunta el controlador.</param>
      <param name="handler" vsli:raw="The event handler.">Controlador de eventos.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.">Cuando se reemplaza en una clase (generada) derivada, crea un delegado de eventos que hace referencia a un método de control no público.</summary>
      <param name="delegateType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the delegate.">
        <see cref="T:System.Type" /> del delegado.</param>
      <param name="target" vsli:raw="The target where the handler is attached.">Destino al que se adjunta el controlador.</param>
      <param name="handler" vsli:raw="The name of the handler implementation.">Nombre de la implementación de controlador.</param>
      <returns vsli:raw="The delegate reference.">Referencia al delegado.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an instance of an internal type.">Cuando se reemplaza en una clase (generada) derivada, crea una instancia de un tipo interno.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to create.">
        <see cref="T:System.Type" /> que se va a crear.</param>
      <param name="culture" vsli:raw="Culture specific information.">Información específica de la referencia cultural.</param>
      <returns vsli:raw="The created instance.">Instancia creada.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, gets the value of an internal property on the target object.">Cuando se reemplaza en una clase (generada) derivada, obtiene el valor de una propiedad interna del objeto de destino.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to get.">Información de la propiedad que se va a obtener.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">Objeto que contiene el valor de propiedad deseado.</param>
      <param name="culture" vsli:raw="Culture specific information.">Información específica de la referencia cultural.</param>
      <returns vsli:raw="The value of the property.">Valor de la propiedad.</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, sets the value on an internal property on the target object.">Cuando se reemplaza en una clase (generada) derivada, establece el valor de una propiedad interna del objeto de destino.</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to set.">Información de la propiedad que se va a establecer.</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">Objeto que contiene el valor de propiedad deseado.</param>
      <param name="value" vsli:raw="The value to set.">Valor que se va a establecer.</param>
      <param name="culture" vsli:raw="Culture specific information.">Información específica de la referencia cultural.</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary vsli:raw="Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.">Proporciona un mecanismo mediante el cual los tipos pueden declarar que pueden recibir una expresión (u otra clase) de una extensión de marcado, donde el resultado es un tipo de propiedad diferente que la propiedad de destino. No lo use para implementaciones de .NET Framework 4.</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Provides the handling for markup extensions that provide property values. Do not use for .NET Framework 4 implementations; see &lt;see cref=&quot;T:System.Windows.Markup.IReceiveMarkupExtension&quot; /&gt;.">Proporciona el control para las extensiones de marcado que proporcionan valores de propiedad. No lo use para las implementaciones de .NET Framework 4; vea <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
      <param name="property" vsli:raw="The name of the target property.">Nombre de la propiedad de destino.</param>
      <param name="markupExtension" vsli:raw="The markup extension instance of the incoming data.">Instancia de la extensión de marcado de los datos entrantes.</param>
      <param name="serviceProvider" vsli:raw="Can provide additional services that should be performed when processing the markup extension data for a property value.">Puede proporcionar los servicios adicionales que deben realizarse al procesar los datos de extensión de marcado para un valor de propiedad.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary vsli:raw="Abstract class that represents an object that can be used to navigate a tree of objects.">Clase abstracta que representa un objeto que se puede utilizar para navegar en un árbol de objetos.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, assigns a root context for &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; classes.">Cuando se invalida en una clase derivada, asigna un contexto raíz para las clases <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.IValueSerializerContext&quot; /&gt; to assign a root context for.">
        <see cref="T:System.Windows.Markup.IValueSerializerContext" /> para el que se asigna un contexto raíz.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene los atributos asociados a esta <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The collection of attributes.">Colección de atributos.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary vsli:raw="When overridden in a derived class, gets the instance of the object represented by this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene la instancia del objeto representado por este <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The instance of the object.">Instancia del objeto.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance.">Cuando se invalida en una clase derivada, obtiene el tipo de la instancia de <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns vsli:raw="The type of the object.">Tipo del objeto.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary vsli:raw="When overridden in a derived class, gets the properties of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance that should be written to XAML.">Cuando se invalida en una clase derivada, obtiene las propiedades de esta instancia de <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> que se debe escribir en XAML.</summary>
      <returns vsli:raw="The properties.">Propiedades.</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary vsli:raw="Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.">Clase abstracta que proporciona una descripción de propiedad que se utiliza para escribir en el marcado que encapsula el acceso a las propiedades y sus valores.</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene los atributos asociados a esta <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The collection of attributes.">Colección de atributos.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier for the markup property if the property is implemented as a dependency property.">Cuando se reemplaza en una clase derivada, obtiene el identificador de <see cref="T:System.Windows.DependencyProperty" /> para la propiedad de marcado si la propiedad se implementa como propiedad de dependencia.</summary>
      <returns vsli:raw="The dependency property identifier.">Identificador de la propiedad de dependencia.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">Cuando se invalida en una clase derivada, determina si esta <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> es una <see cref="T:System.Windows.DependencyProperty" /> adjunta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propiedad es una <see cref="T:System.Windows.DependencyProperty" /> adjunta; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is a composite property.">Cuando se invalida en una clase derivada, determina si esta <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> es una propiedad compuesta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; is this property is a composite property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta propiedad es una propiedad compuesta; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a constructor argument.">Cuando se invalida en una clase derivada, determina si esta <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> representa un argumento de constructor.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a constructor argument; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si esta propiedad representa un argumento de constructor; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents direct content of a collection.">Cuando se invalida en una clase derivada, determina si esta <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> representa el contenido directo de una colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents direct content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propiedad representa el contenido directo; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents the key used by the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; to store the item in a dictionary.">Cuando se invalida en una clase derivada, determina si esta <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> representa la clave utilizada por <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> para almacenar el elemento en un diccionario.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta propiedad representa una clave; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.">Cuando se invalida en una clase derivada, determina si esta <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> representa el texto que se pasa a un convertidor de tipos para crear una instancia de la propiedad o si se debe utilizar un constructor.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si esta <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> representa una cadena; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary vsli:raw="When overridden in a derived class, gets the items that make up the value of this property.">Cuando se invalida en una clase derivada, obtiene el elemento que constituye el valor de esta propiedad.</summary>
      <returns vsli:raw="The items that make up the value of this property.">Los elementos que forman el valor de esta propiedad.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary vsli:raw="When overridden in a derived class, gets a name that is used for diagnostics and error reporting.">Cuando se invalida en una clase derivada, obtiene un nombre que se utiliza para diagnósticos e informes de errores.</summary>
      <returns vsli:raw="The identifier property name.">Nombre de la propiedad del identificador.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; for the markup property.">Cuando se invalida en una clase derivada, obtiene <see cref="T:System.ComponentModel.PropertyDescriptor" /> para la propiedad de marcado.</summary>
      <returns vsli:raw="The property descriptor.">El descriptor de la propiedad.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary vsli:raw="When overridden in a derived class, gets the CLR type of the property.">Cuando se reemplaza en una clase derivada, obtiene el tipo CLR de la propiedad.</summary>
      <returns vsli:raw="The CLR type.">Tipo CLR.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary vsli:raw="When overridden in a derived class, gets the string value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene el valor de cadena de esta <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The string value.">El valor de cadena.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary vsli:raw="When overridden in a derived class, gets the set of types that this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; will reference when it serializes its value as a string.">Cuando se reemplaza en una clase derivada, obtiene el conjunto de tipos a los que esta propiedad <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> hará referencia cuando serialice su valor como una cadena.</summary>
      <returns vsli:raw="The set of types.">Conjunto de tipos.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary vsli:raw="When overridden in a derived class, gets the current value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">Cuando se reemplaza en una clase derivada, obtiene el valor actual de <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns vsli:raw="The current value.">El valor actual.</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary vsli:raw="Provides an implementation for the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface with methods that enable adding services.">Proporciona a una implementación de la interfaz <see cref="T:System.IServiceProvider" /> con los métodos que habilitan los servicios de la adición.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ServiceProviders&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ServiceProviders" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary vsli:raw="Adds a service to the list.">Agrega un servicio a la lista.</summary>
      <param name="serviceType" vsli:raw="Service type of the new service.">Tipo de servicio del nuevo servicio.</param>
      <param name="service" vsli:raw="The service implementation class.">Clase de implementación del servicio.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; or &lt;paramref name=&quot;service&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> o <paramref name="service" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Attempted to add a service that already exists in the dictionary.">Se intenta agregar un servicio que ya existe en el diccionario.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary vsli:raw="Gets the service object of the specified type.">Obtiene el objeto de servicio del tipo especificado.</summary>
      <param name="serviceType" vsli:raw="The type of service object to get.">Objeto del tipo de servicio que se va a obtener.</param>
      <returns vsli:raw="A service implementation for the type &lt;paramref name=&quot;serviceType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if there is no service stored for type &lt;paramref name=&quot;serviceType&quot; /&gt;.">Implementación del servicio para el tipo <paramref name="serviceType" />. Puede ser <see langword="null" /> si no hay ningún servicio almacenado para el tipo <paramref name="serviceType" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Convierte instancias de <see cref="T:System.String" /> en y desde instancias de <see cref="T:System.Windows.Media.Matrix" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Converters.MatrixValueSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if conversion from a given &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is possible.">Determina si es posible convertir un valor de tipo <see cref="T:System.String" /> dado en una instancia de <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">Cadena que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Información de contexto utilizada para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor se puede convertir; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Determina si una instancia de <see cref="T:System.Windows.Media.Matrix" /> puede convertirse en un valor de tipo <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Instancia de <see cref="T:System.Windows.Media.Matrix" /> que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Información de contexto utilizada para la conversión.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Occurs when &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Media.Int32Collection&quot; /&gt;.">Se produce cuando <paramref name="value" /> no es un objeto <see cref="T:System.Windows.Media.Int32Collection" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="value" /> se puede convertir a <see cref="T:System.String" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Convierte <see cref="T:System.String" /> a <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="value" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; value to convert into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Valor de tipo <see cref="T:System.String" /> que se va a convertir en un objeto <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Información de contexto utilizada para la conversión.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Una nueva instancia de <see cref="T:System.Windows.Media.Matrix" /> según el parámetro <paramref name="value" /> proporcionado.</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una instancia de <see cref="T:System.Windows.Media.Matrix" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">Instancia de <see cref="T:System.Windows.Media.Matrix" /> que se va a evaluar para la conversión.</param>
      <param name="context" vsli:raw="Context information used for conversion.">Información de contexto utilizada para la conversión.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; object.">Representación de tipo <see cref="T:System.String" /> del objeto <see cref="T:System.Windows.Media.Matrix" /> proporcionado.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary vsli:raw="Allows WPF applications to disable dots per inch (dpi) awareness for all user interface elements.">Permite que las aplicaciones de WPF deshabiliten la distinción de puntos por pulgada (ppp) de todos los elementos de la interfaz de usuario.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.DisableDpiAwarenessAttribute&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary vsli:raw="Represents a 3x3 affine transformation matrix used for transformations in 2-D space.">Representa una matriz de transformación afín de 3 x 3 usada para las transformaciones en un espacio bidimensional.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="m11" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt; coefficient.">El coeficiente <see cref="P:System.Windows.Media.Matrix.M11" /> de la nueva <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m12" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt; coefficient.">El coeficiente <see cref="P:System.Windows.Media.Matrix.M12" /> de la nueva <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m21" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt; coefficient.">El coeficiente <see cref="P:System.Windows.Media.Matrix.M21" /> de la nueva <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="m22" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt; coefficient.">El coeficiente <see cref="P:System.Windows.Media.Matrix.M22" /> de la nueva <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetX" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt; coefficient.">El coeficiente <see cref="P:System.Windows.Media.Matrix.OffsetX" /> de la nueva <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="offsetY" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; coefficient.">El coeficiente <see cref="P:System.Windows.Media.Matrix.OffsetY" /> de la nueva <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary vsli:raw="Appends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Anexa la estructura <see cref="T:System.Windows.Media.Matrix" /> especificada a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to append to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">La estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a anexar a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Determina si el <see cref="T:System.Object" /> especificado es una estructura <see cref="T:System.Windows.Media.Matrix" /> idéntica a esta <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">
        <see cref="T:System.Object" /> que se va comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el parámetro <paramref name="o" /> es una estructura <see cref="T:System.Windows.Media.Matrix" /> idéntica a esta estructura <see cref="T:System.Windows.Media.Matrix" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is identical to this instance.">Determina si la estructura <see cref="T:System.Windows.Media.Matrix" /> especificada es idéntica a esta instancia.</summary>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to compare to this instance.">Instancia de <see cref="T:System.Windows.Media.Matrix" /> que se va a comparar con esta instancia.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las instancias son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Determina si las dos estructuras <see cref="T:System.Windows.Media.Matrix" /> especificadas son idénticas.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Primera estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a comparar.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Segunda estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="matrix1" /> y <paramref name="matrix2" /> son idénticos; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Devuelve el código hash de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The hash code for this instance.">Código hash de esta instancia.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary vsli:raw="Inverts this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Invierte esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is not invertible.">La estructura <see cref="T:System.Windows.Media.Matrix" /> no se puede invertir.</exception>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Multiplica una estructura <see cref="T:System.Windows.Media.Matrix" /> por otra estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Primera estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a multiplicar.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Segunda estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a multiplicar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">Resultado de multiplicar <paramref name="trans1" /> por <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">Determina si las dos estructuras <see cref="T:System.Windows.Media.Matrix" /> especificadas son idénticas.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Primera estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a comparar.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Segunda estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="matrix1" /> y <paramref name="matrix2" /> son idénticos; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are not identical.">Determina si las dos estructuras <see cref="T:System.Windows.Media.Matrix" /> especificadas no son idénticas.</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Primera estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a comparar.</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">Segunda estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are not identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="matrix1" /> y <paramref name="matrix2" /> no son idénticas; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Multiplica una estructura <see cref="T:System.Windows.Media.Matrix" /> por otra estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Primera estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a multiplicar.</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">Segunda estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a multiplicar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">Resultado de multiplicar <paramref name="trans1" /> por <paramref name="trans2" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a matrix into the equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Convierte una representación de <see cref="T:System.String" /> de una matriz en la estructura <see cref="T:System.Windows.Media.Matrix" /> equivalente.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the matrix.">La representación de <see cref="T:System.String" /> de la matriz.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Estructura <see cref="T:System.Windows.Media.Matrix" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary vsli:raw="Prepends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure onto this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone la estructura <see cref="T:System.Windows.Media.Matrix" /> especificada a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to prepend to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">La estructura <see cref="T:System.Windows.Media.Matrix" /> que se va a anteponer a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary vsli:raw="Applies a rotation of the specified angle about the origin of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Aplica un giro del ángulo especificado en torno al origen de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The angle of rotation.">Ángulo de rotación.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Rotates this matrix about the specified point.">Gira esta matriz sobre el punto especificado.</summary>
      <param name="angle" vsli:raw="The angle, in degrees, by which to rotate this matrix.">El ángulo, en grados, con el que se va a girar esta matriz.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which to rotate this matrix.">La coordenada X del punto sobre el que se va a girar esta matriz.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which to rotate this matrix.">La coordenada Y del punto sobre el que se va a girar esta matriz.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle at the specified point to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone un giro del ángulo especificado en el punto especificado a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The rotation angle, in degrees.">Ángulo de giro, en grados.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the rotation center.">Coordenada x del centro de giro.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the rotation center.">Coordenada y del centro de giro.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone un giro del ángulo especificado a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle" vsli:raw="The angle of rotation to prepend.">El ángulo de giro que se va a anteponer.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary vsli:raw="Appends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Anexa el vector de escala especificado a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Valor por el que se va a ajustar a escala esta <see cref="T:System.Windows.Media.Matrix" /> a lo largo del eje X.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Valor por el que se va a ajustar a escala esta <see cref="T:System.Windows.Media.Matrix" /> a lo largo del eje Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Scales this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; by the specified amount about the specified point.">Ajusta a escala esta <see cref="T:System.Windows.Media.Matrix" /> por la cantidad especificada sobre el punto especificado.</summary>
      <param name="scaleX" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">Cantidad por la que se va a ajustar a escala esta <see cref="T:System.Windows.Media.Matrix" /> a lo largo del eje X.</param>
      <param name="scaleY" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">Cantidad por la que se va a ajustar a escala esta <see cref="T:System.Windows.Media.Matrix" /> a lo largo del eje Y.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the scale operation's center point.">La coordenada x del punto central de la operación de ajuste de escala.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the scale operation's center point.">La coordenada y del punto central de la operación de ajuste de escala.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale about the specified point of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Antepone el ajuste de escala especificado sobre el punto especificado de la <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The x-axis scale factor.">Factor de escala del eje X.</param>
      <param name="scaleY" vsli:raw="The y-axis scale factor.">Factor de escala del eje Y.</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which the scale operation is performed.">La coordenada x del punto sobre el que se realiza la operación de ajuste de escala.</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which the scale operation is performed.">La coordenada y del punto sobre el que se realiza la operación de ajuste de escala.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone el vector de escala especificado a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the x-axis.">Valor por el que se va a ajustar a escala esta estructura <see cref="T:System.Windows.Media.Matrix" /> a lo largo del eje X.</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the y-axis.">Valor por el que se va a ajustar a escala esta estructura <see cref="T:System.Windows.Media.Matrix" /> a lo largo del eje Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary vsli:raw="Changes this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure into an identity matrix.">Cambia esta estructura <see cref="T:System.Windows.Media.Matrix" /> a una matriz de identidad.</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary vsli:raw="Appends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Anexa un sesgado de los grados especificados en las dimensiones X e Y a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">El ángulo de la dimensión X por el que sesgar esta <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">El ángulo de la dimensión Y por el que sesgar esta <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone un sesgado de los grados especificados en las dimensiones X e Y a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">El ángulo de la dimensión X por el que sesgar esta <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">El ángulo de la dimensión Y por el que sesgar esta <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Da formato al valor de la instancia actual usando el formato especificado.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Formato que se usará.  
  
o bien 
Referencia nula (<see langword="Nothing" /> en Visual Basic) para usar el formato predeterminado definido para el tipo de la implementación <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">Proveedor que se usa para dar formato al valor.  
  
o bien 
Referencia nula (<see langword="Nothing" /> en Visual Basic) para obtener la información de formato numérico de la configuración regional actual del sistema operativo.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Valor de la instancia actual en el formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Crea una representación de tipo <see cref="T:System.String" /> de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">
        <see cref="T:System.String" /> que contiene los valores  <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> y <see cref="P:System.Windows.Media.Matrix.OffsetY" /> de esta <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure with culture-specific formatting information.">Crea una representación de tipo <see cref="T:System.String" /> de esta estructura <see cref="T:System.Windows.Media.Matrix" /> con información de formato específica de la referencia cultural.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">Información de formato específica de la referencia cultural.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">
        <see cref="T:System.String" /> que contiene los valores  <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> y <see cref="P:System.Windows.Media.Matrix.OffsetY" /> de esta <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary vsli:raw="Transforms the specified point by the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; and returns the result.">Transforma el punto especificado por <see cref="T:System.Windows.Media.Matrix" /> y devuelve el resultado.</summary>
      <param name="point" vsli:raw="The point to transform.">El punto que se va a transformar.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;point&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Resultado de transformar <paramref name="point" /> por esta <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary vsli:raw="Transforms the specified points by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma los puntos especificados por esta <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="points" vsli:raw="The points to transform. The original points in the array are replaced by their transformed values.">Puntos que se van a transformar. Los valores transformados reemplazan los puntos originales de la matriz.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary vsli:raw="Transforms the specified vector by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma el vector especificado por esta <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Vector que se va a transformar.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Resultado de transformar <paramref name="vector" /> por esta <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary vsli:raw="Transforms the specified vectors by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma los vectores especificados por esta <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vectors" vsli:raw="The vectors to transform. The original vectors in the array are replaced by their transformed values.">Vectores que se van a transformar. Los valores transformados reemplazan los vectores originales de la matriz.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary vsli:raw="Appends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Anexa una traslación de los desplazamientos especificados a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">La cantidad que se va a desplazar esta <see cref="T:System.Windows.Media.Matrix" /> a lo largo del eje X.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">La cantidad que se va a desplazar esta <see cref="T:System.Windows.Media.Matrix" /> a lo largo del eje Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Antepone una traslación de los desplazamientos especificados a esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">La cantidad que se va a desplazar esta <see cref="T:System.Windows.Media.Matrix" /> a lo largo del eje X.</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">La cantidad que se va a desplazar esta <see cref="T:System.Windows.Media.Matrix" /> a lo largo del eje Y.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary vsli:raw="Gets the determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtiene el determinante de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Determinante de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is invertible.">Obtiene un valor que indica si esta estructura <see cref="T:System.Windows.Media.Matrix" /> se puede invertir.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; has an inverse; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si la estructura <see cref="T:System.Windows.Media.Matrix" /> tiene un inverso; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary vsli:raw="Gets an identity &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Obtiene una <see cref="T:System.Windows.Media.Matrix" /> de identidad.</summary>
      <returns vsli:raw="An identity matrix.">Matriz de identidad.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix.">Obtiene un valor que indica si esta <see cref="T:System.Windows.Media.Matrix" /> estructuran es una matriz de identidad.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si la estructura <see cref="T:System.Windows.Media.Matrix" /> es una matriz de identidad; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary vsli:raw="Gets or sets the value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtiene o establece el valor de la primera fila y la primera columna de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 1.">Valor de la primera fila y columna de esta <see cref="T:System.Windows.Media.Matrix" />. El valor predeterminado es 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary vsli:raw="Gets or sets the value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtiene o establece el valor de la primera fila y la segunda columna de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">Valor de la primera fila y segunda columna de esta <see cref="T:System.Windows.Media.Matrix" />. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary vsli:raw="Gets or sets the value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtiene o establece el valor de la segunda fila y la primera columna de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">Valor de la segunda fila y primera columna de esta <see cref="T:System.Windows.Media.Matrix" />. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary vsli:raw="Gets or sets the value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtiene o establece el valor de la segunda fila y la segunda columna de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 1.">Valor de la segunda fila y la segunda columna de esta estructura <see cref="T:System.Windows.Media.Matrix" />. El valor predeterminado es 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary vsli:raw="Gets or sets the value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtiene o establece el valor de la tercera fila y la primera columna de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">Valor de la tercera fila y de la primera columna de esta estructura <see cref="T:System.Windows.Media.Matrix" />. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary vsli:raw="Gets or sets the value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Obtiene o establece el valor de la tercera fila y la segunda columna de esta estructura <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns vsli:raw="The value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">Valor de la tercera fila y de la segunda columna de esta estructura <see cref="T:System.Windows.Media.Matrix" />. El valor predeterminado es 0.</returns>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Convierte instancias de otros tipos en una colección <see cref="T:System.Windows.Media.Matrix" /> y viceversa.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.MatrixConverter&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.MatrixConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a specific type to an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Determina si un objeto puede convertirse de un tipo determinado en una instancia de <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context" vsli:raw="The context information of a type.">Información de contexto de un tipo.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Tipo del origen que se va a evaluar para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se puede convertir en <see cref="T:System.Windows.Media.Matrix" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a different type.">Determina si una instancia de <see cref="T:System.Windows.Media.Matrix" /> puede convertirse en un tipo diferente.</summary>
      <param name="context" vsli:raw="The context information of a type.">Información de contexto de un tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is being evaluated for conversion.">Tipo deseado de este <see cref="T:System.Windows.Media.Matrix" /> que se está evaluando para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Media.Matrix" /> puede convertirse en <paramref name="destinationType" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Intenta convertir el objeto especificado en <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="context" vsli:raw="The context information of a type.">Información de contexto de un tipo.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">
        <see cref="T:System.Globalization.CultureInfo" /> del tipo que se está convirtiendo.</param>
      <param name="value" vsli:raw="The object being converted.">Objeto que se convertirá.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is null or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">El objeto especificado es nulo o es un tipo que no se puede convertir en <see cref="T:System.Windows.Media.Matrix" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Objeto <see cref="T:System.Windows.Media.Matrix" /> creado a partir de la conversión de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a specified type.">Intenta convertir <see cref="T:System.Windows.Media.Matrix" /> en un tipo especificado.</summary>
      <param name="context" vsli:raw="The context information of a type.">Información de contexto de un tipo.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">
        <see cref="T:System.Globalization.CultureInfo" /> del tipo que se está convirtiendo.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to convert.">Valor <see cref="T:System.Windows.Media.Matrix" /> que se va a convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to.">Tipo en el que convertir <see cref="T:System.Windows.Media.Matrix" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is null or is not a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;, or the &lt;paramref name=&quot;destinationType&quot; /&gt; is not a valid conversion type.">
        <paramref name="value" /> es nulo o no es una estructura <see cref="T:System.Windows.Media.Matrix" />, o bien, <paramref name="destinationType" /> no es un tipo de conversión válido.</exception>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Objeto que se crea a partir de la conversión de esta instancia de <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary vsli:raw="Defines the formatting methods supported by the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; class.">Define los métodos de formato admitidos por la clase <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using GDI-compatible font metrics.">Indica que el objeto<see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> define la disposición del texto usando métricas de fuente compatibles con GDI.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using ideal font metrics.">Indica que el objeto<see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> define la disposición del texto usando métricas de fuente ideales.</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary vsli:raw="Implements base WPF support for the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; methods that store or retrieve name-object mappings into a particular XAML namescope. Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.">Implementa compatibilidad base con WPF para los métodos <see cref="T:System.Windows.Markup.INameScope" /> que almacenan o recuperan asignaciones de nombre y objeto en un ámbito de nombres XAML determinado. Agrega compatibilidad con propiedades asociadas para que sea más fácil obtener o establecer nombres de ámbito de nombres XAML dinámicamente en el nivel del elemento.</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Identifica la propiedad adjunta <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the collection.">Agrega un elemento a la colección.</summary>
      <param name="item" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;) that represents the name mapping to add to the XAML namescope.">
        <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la clave es <see cref="T:System.String" />, el valor es <see cref="T:System.Object" />) que representa la asignación de nombres que se va a agregar al ámbito de nombres XAML.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Either or both components of &lt;paramref name=&quot;item&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos componentes de <paramref name="item" /> son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an item to the collection.">Agrega un elemento a la colección.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to add.">Clave de cadena, que es el nombre de la asignación del ámbito de nombres XAML que se va a agregar.</param>
      <param name="value" vsli:raw="The object value, which is the object reference of the XAML namescope mapping to add.">Valor de objeto, que es la referencia al objeto de la asignación del ámbito de nombres XAML que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary vsli:raw="Removes all items from the collection.">Quita todos los elementos de la colección.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the collection contains a specified item.">Determina si la colección contiene el elemento especificado.</summary>
      <param name="item" vsli:raw="The item to find in the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">Elemento que se va a buscar en la colección, especificado como <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la clave es <see cref="T:System.String" />, el valor es <see cref="T:System.Object" />).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; identifies an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; . &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> especificado identifica una asignación existente en <see cref="T:System.Windows.NameScope" />. Es <see langword="false" /> si el parámetro <see cref="T:System.Collections.Generic.KeyValuePair`2" /> especificado no existe en la clase <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary vsli:raw="Returns whether a provided name already exists in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Devuelve un valor que indica si el nombre proporcionado ya existe en esta clase <see cref="T:System.Windows.NameScope" />.</summary>
      <param name="key" vsli:raw="The string key to find.">Clave de cadena que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; identifies a name for an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Es <see langword="true" /> si el parámetro <paramref name="key" /> especificado identifica un nombre para una asignación existente en <see cref="T:System.Windows.NameScope" />. Es <see langword="false" /> si el parámetro <paramref name="key" /> especificado no existe en la clase <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an array, starting at a particular array index.">Copia los elementos de la colección en una matriz a partir de un índice de matriz concreto.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.">Matriz unidimensional que es el destino de los elementos copiados de la colección. La indización de la matriz debe ser de base cero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary vsli:raw="Returns the corresponding object in the XAML namescope maintained by this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;, based on a provided name string.">Devuelve el objeto correspondiente del ámbito de nombres XAML que mantiene este elemento <see cref="T:System.Windows.NameScope" />, según una cadena de nombre proporcionada.</summary>
      <param name="name" vsli:raw="Name portion of an existing mapping to retrieve the object portion for.">Parte del nombre de una asignación existente para recuperar la parte correspondiente al objeto.</param>
      <returns vsli:raw="The requested object that is mapped with &lt;paramref name=&quot;name&quot; /&gt;. Can return &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt; or empty string, or if no matching object was found.">Objeto solicitado que está asociado con <paramref name="name" />. Puede devolver <see langword="null" /> si <paramref name="name" /> se proporcionó como <see langword="null" /> o una cadena vacía, o si no se encontraron objetos coincidentes.</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary vsli:raw="Provides the attached property get accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Proporciona el descriptor de acceso get de la propiedad adjunta para la propiedad adjunta <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject" vsli:raw="The object to get the XAML namescope from.">Objeto del que se va a obtener el ámbito de nombres XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A XAML namescope, as an &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; instance.">Ámbito de nombres XAML, como una instancia <see cref="T:System.Windows.Markup.INameScope" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers a new name-object pair into the current XAML namescope.">Registra un nuevo par de nombre y objeto en el ámbito de nombres XAML actual.</summary>
      <param name="name" vsli:raw="The name to use for mapping the given object.">Nombre que se usará para asignar el objeto especificado.</param>
      <param name="scopedElement" vsli:raw="The object to be mapped to the provided name.">Objeto que se va a asignar al nombre proporcionado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;scopedElement&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt;.">Se proporcionó <paramref name="name" /> o <paramref name="scopedElement" /> como <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided was rejected by the parser, because it contained characters that are invalid for a XAML name  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided would result in a duplicate name registration.">Se proporcionó <paramref name="name" /> como cadena vacía. 
o bien 
 El analizador rechazó el <paramref name="name" /> proporcionado porque contenía caracteres que no son válidos para un nombre XAML 
o bien 
 El <paramref name="name" /> proporcionado daría lugar a un registro de nombre duplicado.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the specific object from the collection.">Quita el objeto especificado de la colección.</summary>
      <param name="item" vsli:raw="The object to remove from the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">Objeto que se va a quitar de la colección, especificado como una estructura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (la clave es <see cref="T:System.String" />, el valor es <see cref="T:System.Object" />).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">Es <see langword="true" /> si el elemento se eliminó correctamente de la colección; de lo contrario, es <see langword="false" />. También devuelve <see langword="false" /> si no se encontró el elemento en la colección.</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary vsli:raw="Removes a mapping for a specified name from the collection.">Quita de la colección una asignación del nombre especificado.</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to remove.">Clave de cadena, que es el nombre de la asignación del ámbito de nombres XAML que se va a quitar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">Es <see langword="true" /> si el elemento se eliminó correctamente de la colección; de lo contrario, es <see langword="false" />. También devuelve <see langword="false" /> si no se encontró el elemento en la colección.</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary vsli:raw="Provides the attached property set accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">Proporciona el descriptor de acceso set de la propiedad adjunta para la propiedad adjunta <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject" vsli:raw="Object to change XAML namescope for.">Objeto del que se va a cambiar el ámbito de nombres XAML.</param>
      <param name="value" vsli:raw="The new XAML namescope, using an interface cast.">Nuevo ámbito de nombres XAML, que usa una conversión de interfaz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Devuelve un enumerador que recorre en iteración una colección.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Un enumerador que se itera por toda una colección.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Devuelve un enumerador que recorre en iteración una colección.</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">Un enumerador que se itera por toda una colección.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Gets the value associated with the specified key.">Obtiene el valor asociado a la clave especificada.</summary>
      <param name="key" vsli:raw="The key of the value to get.">Clave del valor que se va a obtener.</param>
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object. This parameter is passed uninitialized.">Cuando este método termina de ejecutarse, contiene el valor asociado a la clave especificada si se encuentra la clave; de lo contrario, devuelve un objeto null. Este parámetro se pasa sin inicializar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; contains a mapping for the name provided as &lt;paramref name=&quot;key&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.NameScope" /> contiene una asignación para el nombre proporcionado como <paramref name="key" />. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary vsli:raw="Removes a name-object mapping from the XAML namescope.">Quita una asignación del objeto de nombre del ámbito de nombres XAML.</summary>
      <param name="name" vsli:raw="The name of the mapping to remove.">El nombre de la asignación que se debe quitar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided had not been registered.">Se proporcionó <paramref name="name" /> como cadena vacía.  
  
o bien 
 <paramref name="name" /> proporcionado no se registró.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary vsli:raw="Returns the number of items in the collection of mapped names in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">Devuelve el número de elementos de la colección de nombres asignados de esta clase <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="The number of items in the collection.">Número de elementos de la colección.</returns>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection is read-only.">Obtiene un valor que indica si la colección es de solo lectura.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary vsli:raw="Gets or sets the item with the specified key.">Obtiene o establece el elemento con la clave especificada.</summary>
      <param name="key" vsli:raw="The string name for the XAML name mapping to get or set.">Nombre de cadena de la asignación de nombres XAML que se va a obtener o establecer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt; for a set operation.">
        <paramref name="key" /> se proporciona como <see langword="null" />.  
  
o bien 
 <paramref name="value" /> se proporciona como <see langword="null" /> para una operación de establecimiento.</exception>
      <returns vsli:raw="The value of the object mapped by the XAML name provided as &lt;paramref name=&quot;key&quot; /&gt;.">Valor del objeto asignado por el nombre XAML que se ha proporcionado como <paramref name="key" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary vsli:raw="Gets a collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Obtiene una colección de las claves del diccionario de <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="A collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Colección de las claves del diccionario de <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary vsli:raw="Gets or sets dynamically attached &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; instances.">Obtiene o establece instancias de <see cref="T:System.Windows.NameScope" /> dinámicamente asociadas.</summary>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary vsli:raw="Gets a collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Obtiene una colección de los valores del diccionario de <see cref="T:System.Windows.NameScope" />.</summary>
      <returns vsli:raw="A collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">Colección de los valores del diccionario de <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary vsli:raw="Represents an x- and y-coordinate pair in two-dimensional space.">Representa un par de coordenadas x e y en un espacio bidimensional.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure that contains the specified coordinates.">Crea una nueva estructura <see cref="T:System.Windows.Point" /> que contiene las coordenadas especificadas.</summary>
      <param name="x" vsli:raw="The x-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Coordenada X de la nueva estructura <see cref="T:System.Windows.Point" />.</param>
      <param name="y" vsli:raw="The y-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Coordenada Y de la nueva estructura <see cref="T:System.Windows.Point" />.</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the result as a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Suma una estructura <see cref="T:System.Windows.Vector" /> a una estructura <see cref="T:System.Windows.Point" /> y devuelve el resultado como una estructura <see cref="T:System.Windows.Point" />.</summary>
      <param name="point" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to add.">Estructura <see cref="T:System.Windows.Point" /> que se va a sumar.</param>
      <param name="vector" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure to add.">Estructura <see cref="T:System.Windows.Vector" /> que se va a sumar.</param>
      <returns vsli:raw="Returns the sum of &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Devuelve la suma de <paramref name="point" /> y <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and whether it contains the same coordinates as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Determina si el <see cref="T:System.Object" /> especificado es una estructura <see cref="T:System.Windows.Point" /> y si contiene las mismas coordenadas que esta estructura <see cref="T:System.Windows.Point" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">
        <see cref="T:System.Object" /> que se va comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and contains the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="o" /> es una estructura <see cref="T:System.Windows.Point" /> y contiene los mismos valores de <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> que esta estructura <see cref="T:System.Windows.Point" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Compara dos estructuras <see cref="T:System.Windows.Point" /> para determinar si son iguales.</summary>
      <param name="value" vsli:raw="The point to compare to this instance.">Punto que se va a comparar con esta instancia.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si ambas estructuras <see cref="T:System.Windows.Point" /> contienen los mismos valores de <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Compara dos estructuras <see cref="T:System.Windows.Point" /> para determinar si son iguales.</summary>
      <param name="point1" vsli:raw="The first point to compare.">Primer punto que se va a comparar.</param>
      <param name="point2" vsli:raw="The second point to compare.">Segundo punto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="point1" /> y <paramref name="point2" /> contienen los mismos valores de <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Devuelve el código hash de este objeto <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Código hash para esta estructura <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">Transforma la estructura <see cref="T:System.Windows.Point" /> especificada por la estructura <see cref="T:System.Windows.Media.Matrix" /> especificada.</summary>
      <param name="point" vsli:raw="The point to transform.">El punto que se va a transformar.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matriz de transformación.</param>
      <returns vsli:raw="The transformed point.">Punto transformado.</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary vsli:raw="Offsets a point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates by the specified amounts.">Desplaza las coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de un punto según las magnitudes especificadas.</summary>
      <param name="offsetX" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; coordinate.">Magnitud según la que se va a desplazar la coordenada <see cref="P:System.Windows.Point.X" /> del punto.</param>
      <param name="offsetY" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinate.">Magnitud según la que se va a desplazar la coordenada <see cref="P:System.Windows.Point.Y" /> del punto.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Translates the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and returns the result.">Traslada la estructura <see cref="T:System.Windows.Point" /> especificada mediante la estructura <see cref="T:System.Windows.Vector" /> especificada y devuelve el resultado.</summary>
      <param name="point" vsli:raw="The point to translate.">Punto que se va a trasladar.</param>
      <param name="vector" vsli:raw="The amount by which to translate &lt;paramref name=&quot;point&quot; /&gt;.">Magnitud según la que se va a trasladar <paramref name="point" />.</param>
      <returns vsli:raw="The result of translating the specified point by the specified vector.">Resultado de trasladar el punto especificado mediante el vector especificado.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">Compara dos estructuras <see cref="T:System.Windows.Point" /> para determinar si son iguales.</summary>
      <param name="point1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">Primera estructura <see cref="T:System.Windows.Point" /> que se va a comparar.</param>
      <param name="point2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">Segunda estructura <see cref="T:System.Windows.Point" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates of &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de <paramref name="point1" /> y de <paramref name="point2" /> son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Crea una estructura <see cref="T:System.Windows.Size" /> con un valor de <see cref="P:System.Windows.Size.Width" /> igual al valor de <see cref="P:System.Windows.Point.X" /> de este punto y con un valor de <see cref="P:System.Windows.Size.Height" /> igual al valor de <see cref="P:System.Windows.Point.Y" /> de este punto.</summary>
      <param name="point" vsli:raw="The point to convert.">Punto que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Estructura <see cref="T:System.Windows.Size" /> con un valor de <see cref="P:System.Windows.Size.Width" /> igual al valor de <see cref="P:System.Windows.Point.X" /> de este punto y con un valor de <see cref="P:System.Windows.Size.Height" /> igual al valor de <see cref="P:System.Windows.Point.Y" /> de este punto.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Crea una estructura <see cref="T:System.Windows.Vector" /> con un valor de <see cref="P:System.Windows.Vector.X" /> igual al valor de <see cref="P:System.Windows.Point.X" /> del punto y con un valor de <see cref="P:System.Windows.Vector.Y" /> igual al valor de <see cref="P:System.Windows.Point.Y" /> del punto.</summary>
      <param name="point" vsli:raw="The point to convert.">Punto que se va a convertir.</param>
      <returns vsli:raw="A vector with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">Vector con un valor de <see cref="P:System.Windows.Vector.X" /> igual al valor de <see cref="P:System.Windows.Point.X" /> del punto y con un valor de <see cref="P:System.Windows.Vector.Y" /> igual al valor de <see cref="P:System.Windows.Point.Y" /> del punto.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for inequality.">Compara la desigualdad de dos estructuras <see cref="T:System.Windows.Point" />.</summary>
      <param name="point1" vsli:raw="The first point to compare.">Primer punto que se va a comparar.</param>
      <param name="point2" vsli:raw="The second point to compare.">Segundo punto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have different &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; or &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates; &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates.">Es <see langword="true" /> si <paramref name="point1" /> y <paramref name="point2" /> tienen coordenadas <see cref="P:System.Windows.Point.X" /> o <see cref="P:System.Windows.Point.Y" /> diferentes; es <see langword="false" /> si <paramref name="point1" /> y <paramref name="point2" /> tienen las mismas coordenadas <see cref="P:System.Windows.Point.X" /> y <see cref="P:System.Windows.Point.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma la estructura <see cref="T:System.Windows.Point" /> especificada mediante la estructura <see cref="T:System.Windows.Media.Matrix" /> especificada.</summary>
      <param name="point" vsli:raw="The point to transform.">El punto que se va a transformar.</param>
      <param name="matrix" vsli:raw="The transformation matrix.">Matriz de transformación.</param>
      <returns vsli:raw="The result of transforming the specified point using the specified matrix.">Resultado de transformar el punto especificado mediante la matriz especificada.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Resta la estructura <see cref="T:System.Windows.Point" /> especificada de otra estructura <see cref="T:System.Windows.Point" /> y devuelve la diferencia como una estructura <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">Punto del que se resta <paramref name="point2" />.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Punto que se va a restar de <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">Diferencia entre <paramref name="point1" /> y <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Resta la estructura <see cref="T:System.Windows.Vector" /> especificada de la estructura <see cref="T:System.Windows.Point" /> especificada y devuelve la estructura <see cref="T:System.Windows.Point" /> resultante.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">Punto del que se resta <paramref name="vector" />.</param>
      <param name="vector" vsli:raw="The vector to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Vector que se va a restar de <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Diferencia entre <paramref name="point" /> y <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary vsli:raw="Constructs a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Construye un <see cref="T:System.Windows.Point" /> a partir de la <see cref="T:System.String" /> especificada.</summary>
      <param name="source" vsli:raw="A string representation of a point.">Representación de cadena de un punto.</param>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not composed of two comma- or space-delimited double values.">
        <paramref name="source" /> no se compone de dos valores double delimitados por comas o espacios.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not contain two numbers.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;source&quot; /&gt; contains too many delimiters.">
        <paramref name="source" /> no contiene dos números.  
  
o bien 
 <paramref name="source" /> contiene demasiados delimitadores.</exception>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Estructura <see cref="T:System.Windows.Point" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Resta la estructura <see cref="T:System.Windows.Point" /> especificada de otra estructura <see cref="T:System.Windows.Point" /> y devuelve la diferencia como una estructura <see cref="T:System.Windows.Vector" />.</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">Punto del que se resta <paramref name="point2" />.</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">Punto que se va a restar de <paramref name="point1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">Diferencia entre <paramref name="point1" /> y <paramref name="point2" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Resta la estructura <see cref="T:System.Windows.Vector" /> especificada de la estructura <see cref="T:System.Windows.Point" /> especificada y devuelve la estructura <see cref="T:System.Windows.Point" /> resultante.</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">Punto del que se resta <paramref name="vector" />.</param>
      <param name="vector" vsli:raw="The &lt;paramref name=&quot;vector&quot; /&gt; to subtract from &lt;paramref name=&quot;point&quot; /&gt;.">
        <paramref name="vector" /> que se va a restar de <paramref name="point" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Diferencia entre <paramref name="point" /> y <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Este miembro es compatible con la infraestructura de Windows Presentation Foundation (WPF) y no está diseñado para utilizarse directamente desde el código. Para obtener una descripción de este miembro, vea <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Cadena que especifica el formato que se va a utilizar.  
  
o bien 
 <see langword="null" /> para utilizar el formato predeterminado que se define para el tipo de la implementación de <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">
        <see langword="IFormatProvider" /> que se va a utilizar para dar formato al valor.  
  
o bien 
 <see langword="null" /> para obtener la información de formato para valores numéricos de la configuración regional actual del sistema operativo.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Cadena que contiene el valor de la instancia actual con el formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Crea una representación de tipo <see cref="T:System.String" /> de esta estructura <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">
        <see cref="T:System.String" /> que contiene los valores de <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de esta estructura <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Crea una representación de tipo <see cref="T:System.String" /> de esta estructura <see cref="T:System.Windows.Point" />.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Información de formato específica de la referencia cultural.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">
        <see cref="T:System.String" /> que contiene los valores de <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de esta estructura <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">Obtiene o establece el valor de la coordenada <see cref="P:System.Windows.Point.X" /> de esta estructura <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">Valor de la coordenada <see cref="P:System.Windows.Point.X" /> de esta estructura <see cref="T:System.Windows.Point" />.  El valor predeterminado es <c>0</c>.</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Obtiene o establece el valor de la coordenada <see cref="P:System.Windows.Point.Y" /> de esta estructura <see cref="T:System.Windows.Point" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">Valor de la coordenada <see cref="P:System.Windows.Point.Y" /> de esta estructura <see cref="T:System.Windows.Point" />.  El valor predeterminado es <c>0</c>.</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Convierte instancias de otros tipos en una colección <see cref="T:System.Windows.Point" /> y viceversa.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PointConverter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.PointConverter" />.</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Determina si un objeto puede convertirse de un tipo especificado en una instancia de <see cref="T:System.Windows.Point" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Describe la información de contexto de un tipo.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Tipo del origen que se va a evaluar para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se puede convertir en <see cref="T:System.Windows.Point" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a different type.">Determina si una instancia de <see cref="T:System.Windows.Point" /> puede convertirse en un tipo diferente.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Describe la información de contexto de un tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; is being evaluated for conversion.">Tipo deseado de este <see cref="T:System.Windows.Point" /> que se está evaluando para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Point" /> puede convertirse en <paramref name="destinationType" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Intenta convertir el objeto especificado en <see cref="T:System.Windows.Point" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Proporciona la información contextual necesaria para la conversión.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Información de referencia cultural que se debe respetar durante la conversión.</param>
      <param name="value" vsli:raw="The object being converted.">Objeto que se convertirá.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Se inicia si el objeto especificado es NULL o es un tipo que no se puede convertir en <see cref="T:System.Windows.Point" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Objeto <see cref="T:System.Windows.Point" /> creado a partir de la conversión de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a specified type.">Intenta convertir <see cref="T:System.Windows.Point" /> en un tipo especificado.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Proporciona la información contextual necesaria para la conversión.</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">Información de referencia cultural que se debe respetar durante la conversión.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to convert.">Valor <see cref="T:System.Windows.Point" /> que se va a convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to.">Tipo en el que convertir <see cref="T:System.Windows.Point" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">Se inicia si <paramref name="value" /> es <see langword="null" /> o no es <see cref="T:System.Windows.Point" />, o si <paramref name="destinationType" /> no es uno de los tipos válidos para la conversión.</exception>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Objeto que se crea a partir de la conversión de esta instancia de <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary vsli:raw="Represents the callback that is invoked when the effective property value of a dependency property changes.">Representa la devolución de llamada que se invoca cuando cambia el valor de propiedad efectivo de una propiedad de dependencia.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; on which the property has changed value.">Objeto <see cref="T:System.Windows.DependencyObject" /> en el que ha cambiado el valor de la propiedad.</param>
      <param name="e" vsli:raw="Event data that is issued by any event that tracks changes to the effective value of this property.">Datos de evento que emitió cualquier evento que realiza el seguimiento de cambios en el valor efectivo de esta propiedad.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary vsli:raw="Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.">Define ciertos aspectos de comportamiento de una propiedad de dependencia tal como se aplica a un tipo específico, incluidas las condiciones con las que se registró.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.PropertyMetadata" />.</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with a specified default value for the dependency property that this metadata will be applied to.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.PropertyMetadata" /> con un valor predeterminado especificado para la propiedad de dependencia a la que se aplicarán estos metadatos.</summary>
      <param name="defaultValue" vsli:raw="The default value to specify for a dependency property, usually provided as a value of some specific type.">Valor predeterminado que se especifica para una propiedad de dependencia, proporcionado normalmente como un valor de algún tipo específico.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> no se puede establecer en el valor <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.PropertyMetadata" /> con el valor predeterminado y la referencia de implementación de <see cref="T:System.Windows.PropertyChangedCallback" /> especificados.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">Valor predeterminado de la propiedad de dependencia, proporcionado normalmente como valor de algún tipo específico.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Referencia a una implementación de controlador a la que va a llamar el sistema de propiedades cada vez que cambie el valor real de la propiedad.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> no se puede establecer en el valor <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and callbacks.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.PropertyMetadata" /> con el valor predeterminado y las devoluciones de llamada especificados.</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">Valor predeterminado de la propiedad de dependencia, proporcionado normalmente como valor de algún tipo específico.</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Referencia a una implementación de controlador a la que va a llamar el sistema de propiedades cada vez que cambie el valor real de la propiedad.</param>
      <param name="coerceValueCallback" vsli:raw="Reference to a handler implementation that is to be called whenever the property system calls &lt;see cref=&quot;M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)&quot; /&gt; against this property.">Referencia a una implementación del controlador a la que se llamará siempre que el sistema de propiedades llame a <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> en esta propiedad.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> no se puede establecer en el valor <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.PropertyMetadata" /> con la referencia de implementación de <see cref="T:System.Windows.PropertyChangedCallback" /> especificada.</summary>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">Referencia a una implementación de controlador a la que va a llamar el sistema de propiedades cada vez que cambie el valor real de la propiedad.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary vsli:raw="Merges this metadata with the base metadata.">Combina estos metadatos con los metadatos base.</summary>
      <param name="baseMetadata" vsli:raw="The base metadata to merge with this instance's values.">Metadatos base para combinar con los valores de esta instancia.</param>
      <param name="dp" vsli:raw="The dependency property to which this metadata is being applied.">Propiedad de dependencia a la que se aplican estos metadatos.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.">Se le llama cuando los metadatos se han aplicado a una propiedad, que indica que se sellan los metadatos.</summary>
      <param name="dp" vsli:raw="The dependency property to which the metadata has been applied.">Propiedad de dependencia a la que se han aplicado los metadatos.</param>
      <param name="targetType" vsli:raw="The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value is a null reference.">Tipo asociado a estos metadatos si se trata de metadatos específicos de tipo. Si éstos son los metadatos predeterminados, este valor es una referencia null.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation specified in this metadata.">Obtiene o establece una referencia a una implementación de <see cref="T:System.Windows.CoerceValueCallback" /> especificada en estos metadatos.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">No se puede establecer una propiedad de metadatos una vez que se aplica a una operación de propiedad de dependencia.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation reference.">Referencia de implementación de <see cref="T:System.Windows.CoerceValueCallback" />.</returns>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the dependency property.">Obtiene o establece el valor predeterminado de la propiedad de dependencia.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="Cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; once created.">No se puede establecer en el valor <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> tras su creación.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">No se puede establecer una propiedad de metadatos una vez que se aplica a una operación de propiedad de dependencia.</exception>
      <returns vsli:raw="The default value of the property. The default value on a &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; instance created with the parameterless constructor will be &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">Valor predeterminado de la propiedad. El valor predeterminado en una <see cref="T:System.Windows.PropertyMetadata" /> instancia creada con el constructor sin parámetros será <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> .</returns>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary vsli:raw="Gets a value that determines whether the metadata has been applied to a property in some way, resulting in the immutable state of that metadata instance.">Obtiene un valor que determina si se han aplicado los metadatos a una propiedad de alguna manera, lo que ha producido el estado inmutable de esta instancia de metadatos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the metadata instance is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la instancia de metadatos es inmutable; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation specified in this metadata.">Obtiene o establece una referencia a una implementación de <see cref="T:System.Windows.PropertyChangedCallback" /> especificada en estos metadatos.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">No se puede establecer una propiedad de metadatos una vez que se aplica a una operación de propiedad de dependencia.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">Referencia de implementación de <see cref="T:System.Windows.PropertyChangedCallback" />.</returns>
    </member>
    <member name="T:System.Windows.Rect">
      <summary vsli:raw="Describes the width, height, and location of a rectangle.">Describe el ancho, el alto y la ubicación de un rectángulo.</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified x-coordinate, y-coordinate, width, and height.">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" /> que tiene las coordenadas X e Y especificadas, así como el ancho y alto especificados.</summary>
      <param name="x" vsli:raw="The x-coordinate of the top-left corner of the rectangle.">Coordenada "x" de la esquina superior izquierda del rectángulo.</param>
      <param name="y" vsli:raw="The y-coordinate of the top-left corner of the rectangle.">Coordenada Y de la esquina superior izquierda del rectángulo.</param>
      <param name="width" vsli:raw="The width of the rectangle.">Ancho del rectángulo.</param>
      <param name="height" vsli:raw="The height of the rectangle.">Alto del rectángulo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;width&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;height&quot; /&gt; is a negative value.">
        <paramref name="width" /> es un valor negativo.  
  
o bien 
 <paramref name="height" /> es un valor negativo.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the two specified points.">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" /> que tiene el largo exacto para contener los dos puntos especificados.</summary>
      <param name="point1" vsli:raw="The first point that the new rectangle must contain.">Primer punto que debe contener el nuevo rectángulo.</param>
      <param name="point2" vsli:raw="The second point that the new rectangle must contain.">Segundo punto que debe contener el nuevo rectángulo.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified top-left corner location and the specified width and height.">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" /> que tiene la ubicación de la esquina superior izquierda especificada, así como el ancho y alto especificados.</summary>
      <param name="location" vsli:raw="A point that specifies the location of the top-left corner of the rectangle.">Punto que especifica la ubicación de la esquina superior izquierda del rectángulo.</param>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Estructura <see cref="T:System.Windows.Size" /> que especifica el ancho y el alto del rectángulo.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" /> que tiene el largo exacto para contener el punto especificado, la suma del punto y el vector especificados.</summary>
      <param name="point" vsli:raw="The first point the rectangle must contain.">Primer punto que debe contener el rectángulo.</param>
      <param name="vector" vsli:raw="The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.">Recorrido que se va a desplazar el punto especificado. El rectángulo resultante tendrá el largo exacto para contener ambos puntos.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is of the specified size and is located at (0,0).">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" /> que tiene el tamaño especificado y se ubica en (0,0).</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Estructura <see cref="T:System.Windows.Size" /> que especifica el ancho y el alto del rectángulo.</param>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.">Indica si el rectángulo contiene las coordenadas X e Y especificadas.</summary>
      <param name="x" vsli:raw="The x-coordinate of the point to check.">Coordenada X del punto que se va a comprobar.</param>
      <param name="y" vsli:raw="The y-coordinate of the point to check.">Coordenada Y del punto que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if (&lt;paramref name=&quot;x&quot; /&gt;, &lt;paramref name=&quot;y&quot; /&gt;) is contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el rectángulo contiene (<paramref name="x" />, <paramref name="y" />); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified point.">Indica si el rectángulo contiene el punto especificado.</summary>
      <param name="point" vsli:raw="The point to check.">Punto que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle contains the specified point; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el rectángulo contiene el punto especificado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified rectangle.">Indica si el rectángulo contiene el rectángulo especificado.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">Rectángulo que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;rect&quot; /&gt; is entirely contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el rectángulo contiene el <paramref name="rect" /> completo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object is equal to the current rectangle.">Indica si el objeto especificado es igual al rectángulo actual.</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">Objeto que se va a comparar con el rectángulo actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="o" /> es <see cref="T:System.Windows.Rect" /> y tiene los mismo valores en las propiedades <see cref="P:System.Windows.Rect.Location" /> y <see cref="P:System.Windows.Rect.Size" /> que el rectángulo actual; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle is equal to the current rectangle.">Indica si el rectángulo especificado es igual al rectángulo actual.</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">Rectángulo que se va a comparar con el rectángulo actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el rectángulo especificado tiene los mismos valores en las propiedades <see cref="P:System.Windows.Rect.Location" /> y <see cref="P:System.Windows.Rect.Size" /> que el rectángulo actual; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangles are equal.">Indica si los rectángulos especificados son iguales.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Primer rectángulo que se va a comparar.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Segundo rectángulo que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el rectángulo tiene los mismos valores en las propiedades <see cref="P:System.Windows.Rect.Location" /> y <see cref="P:System.Windows.Rect.Size" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code for the rectangle.">Crea un código hash para el rectángulo.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure.">Código hash para la estructura <see cref="T:System.Windows.Rect" /> actual.</returns>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary vsli:raw="Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.">Se expande o reduce el rectángulo con el ancho y el alto especificados, en todas las direcciones.</summary>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">Cantidad que se expanden o reducen los lados izquierdo y derecho del rectángulo.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">Cantidad que se expanden o reducen los lados superior e inferior del rectángulo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Se llama a este método en el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.">Crea un rectángulo que es el resultado de expandir o reducir el rectángulo especificado por el ancho y el alto especificados, en todas las direcciones.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">Estructura <see cref="T:System.Windows.Rect" /> que se va a modificar.</param>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">Cantidad que se expanden o reducen los lados izquierdo y derecho del rectángulo.</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">Cantidad que se expanden o reducen los lados superior e inferior del rectángulo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> es un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns vsli:raw="The resulting rectangle.">Rectángulo resultante.</returns>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary vsli:raw="Returns the rectangle that results from expanding the specified rectangle by the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Devuelve el rectángulo que es el resultado de expandir el rectángulo especificado por la estructura <see cref="T:System.Windows.Size" /> especificada, en todas las direcciones.</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">Estructura <see cref="T:System.Windows.Rect" /> que se va a modificar.</param>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Especifica la cantidad que se va a expandir el rectángulo. La propiedad <see cref="T:System.Windows.Size" /> de la estructura <see cref="P:System.Windows.Size.Width" /> especifica la cantidad que se van a incrementar las propiedades <see cref="P:System.Windows.Rect.Left" /> y <see cref="P:System.Windows.Rect.Right" /> del rectángulo. La propiedad <see cref="T:System.Windows.Size" /> de la estructura <see cref="P:System.Windows.Size.Height" /> especifica la cantidad que se van a incrementar las propiedades <see cref="P:System.Windows.Rect.Top" /> y <see cref="P:System.Windows.Rect.Bottom" /> del rectángulo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> es un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns vsli:raw="The resulting rectangle.">Rectángulo resultante.</returns>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary vsli:raw="Expands the rectangle by using the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">Expande el rectángulo utilizando la estructura <see cref="T:System.Windows.Size" />especificada, en todas las direcciones.</summary>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">Especifica la cantidad que se va a expandir el rectángulo. La propiedad <see cref="T:System.Windows.Size" /> de la estructura <see cref="P:System.Windows.Size.Width" /> especifica la cantidad que se van a incrementar las propiedades <see cref="P:System.Windows.Rect.Left" /> y <see cref="P:System.Windows.Rect.Right" /> del rectángulo. La propiedad <see cref="T:System.Windows.Size" /> de la estructura <see cref="P:System.Windows.Size.Height" /> especifica la cantidad que se van a incrementar las propiedades <see cref="P:System.Windows.Rect.Top" /> y <see cref="P:System.Windows.Rect.Bottom" /> del rectángulo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Se llama a este método en el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary vsli:raw="Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.">Encuentra la intersección del rectángulo actual y el rectángulo especificado y almacena el resultado como el rectángulo actual.</summary>
      <param name="rect" vsli:raw="The rectangle to intersect with the current rectangle.">Rectángulo que se va a intersecar con el rectángulo actual.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Returns the intersection of the specified rectangles.">Devuelve la intersección de los rectángulos especificados.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Primer rectángulo que se va a comparar.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Segundo rectángulo que se va a comparar.</param>
      <returns vsli:raw="The intersection of the two rectangles, or &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; if no intersection exists.">Intersección de los dos rectángulos o <see cref="P:System.Windows.Rect.Empty" /> si no existe ninguna intersección.</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle intersects with the current rectangle.">Indica si el rectángulo especificado se interseca con el rectángulo actual.</summary>
      <param name="rect" vsli:raw="The rectangle to check.">Rectángulo que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle intersects with the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el rectángulo especificado se interseca con el rectángulo actual; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary vsli:raw="Moves the rectangle by the specified horizontal and vertical amounts.">Mueve el rectángulo las cantidades horizontal y vertical especificadas.</summary>
      <param name="offsetX" vsli:raw="The amount to move the rectangle horizontally.">Cantidad que se va a mover horizontalmente el rectángulo.</param>
      <param name="offsetY" vsli:raw="The amount to move the rectangle vertically.">Cantidad que se va a mover verticalmente el rectángulo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Se llama a este método en el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.">Devuelve un rectángulo que se desplaza desde el rectángulo especificado usando las cantidades horizontal y vertical especificadas.</summary>
      <param name="rect" vsli:raw="The rectangle to move.">Rectángulo que se va a mover.</param>
      <param name="offsetX" vsli:raw="The horizontal offset for the new rectangle.">Desplazamiento horizontal del nuevo rectángulo.</param>
      <param name="offsetY" vsli:raw="The vertical offset for the new rectangle.">Desplazamiento vertical del nuevo rectángulo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> es <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns vsli:raw="The resulting rectangle.">Rectángulo resultante.</returns>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified vector.">Devuelve un rectángulo que se desplaza desde el rectángulo especificado mediante el vector especificado.</summary>
      <param name="rect" vsli:raw="The original rectangle.">Rectángulo original.</param>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical offsets for the new rectangle.">Vector que especifica los desplazamientos horizontal y vertical del nuevo rectángulo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> es <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns vsli:raw="The resulting rectangle.">Rectángulo resultante.</returns>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary vsli:raw="Moves the rectangle by the specified vector.">Mueve el rectángulo el vector especificado.</summary>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical amounts to move the rectangle.">Vector que especifica las cantidades horizontal y vertical que se va a mover el rectángulo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Se llama a este método en el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">Compara dos rectángulos para determinar si son exactamente iguales.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Primer rectángulo que se va a comparar.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Segundo rectángulo que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el rectángulo tiene los mismos valores en las propiedades <see cref="P:System.Windows.Rect.Location" /> y <see cref="P:System.Windows.Rect.Size" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">Compara dos rectángulos para determinar si no son iguales.</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">Primer rectángulo que se va a comparar.</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">Segundo rectángulo que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles do not have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el rectángulo no tiene los mismos valores en las propiedades <see cref="P:System.Windows.Rect.Location" /> y <see cref="P:System.Windows.Rect.Size" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary vsli:raw="Creates a new rectangle from the specified string representation.">Crea un nuevo rectángulo a partir de la representación de cadena especificada.</summary>
      <param name="source" vsli:raw="The string representation of the rectangle, in the form &quot;x, y, width, height&quot;.">Representación de cadena del rectángulo, en el formato "x, y, ancho, alto".</param>
      <returns vsli:raw="The resulting rectangle.">Rectángulo resultante.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary vsli:raw="Multiplies the size of the current rectangle by the specified x and y values.">Multiplica el tamaño del rectángulo actual por los valores x e y especificados.</summary>
      <param name="scaleX" vsli:raw="The scale factor in the x-direction.">Factor de escala en la dirección x.</param>
      <param name="scaleY" vsli:raw="The scale factor in the y-direction.">Factor de escala en la dirección y.</param>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">Da formato al valor de la instancia actual usando el formato especificado.</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Formato que se usará.  
  
o bien 
Referencia nula (<see langword="Nothing" /> en Visual Basic) para usar el formato predeterminado definido para el tipo de la implementación <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">Proveedor que se usa para dar formato al valor.  
  
o bien 
Referencia nula (<see langword="Nothing" /> en Visual Basic) para obtener la información de formato numérico de la configuración regional actual del sistema operativo.</param>
      <returns vsli:raw="A string representation of the rectangle.">Representación de cadena del rectángulo.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary vsli:raw="Returns a string representation of the rectangle.">Devuelve una representación de cadena del rectángulo.</summary>
      <returns vsli:raw="A string representation of the current rectangle. The string has the following form: &quot;&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt;&quot;.">Representación de cadena del rectángulo actual. La cadena tiene el formato siguiente: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a string representation of the rectangle by using the specified format provider.">Devuelve una representación de cadena del rectángulo usando el proveedor de formato especificado.</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">Información de formato específica de la referencia cultural.</param>
      <returns vsli:raw="A string representation of the current rectangle that is determined by the specified format provider.">Representación de cadena del rectángulo actual que determina el proveedor de formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the rectangle by applying the specified matrix.">Transforma el rectángulo aplicando la matriz especificada.</summary>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Matriz que especifica la transformación que se va a aplicar.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary vsli:raw="Returns the rectangle that results from applying the specified matrix to the specified rectangle.">Devuelve el rectángulo que es el resultado de aplicar la matriz especificada al rectángulo especificado.</summary>
      <param name="rect" vsli:raw="A rectangle that is the basis for the transformation.">Rectángulo que es la base de la transformación.</param>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">Matriz que especifica la transformación que se va a aplicar.</param>
      <returns vsli:raw="The rectangle that results from the operation.">Rectángulo que es el resultado de la operación.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified point.">Expande el rectángulo actual lo suficiente para contener el punto especificado.</summary>
      <param name="point" vsli:raw="The point to include.">Punto que se va a incluir.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified rectangle.">Expande el rectángulo actual lo suficiente para contener el rectángulo especificado.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">Rectángulo se va a incluir.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.">Crea un rectángulo que es lo bastante grande como para incluir el rectángulo y el punto especificados.</summary>
      <param name="rect" vsli:raw="The rectangle to include.">Rectángulo se va a incluir.</param>
      <param name="point" vsli:raw="The point to include.">Punto que se va a incluir.</param>
      <returns vsli:raw="A rectangle that is exactly large enough to contain the specified rectangle and the specified point.">Rectángulo que es lo bastante grande para contener el rectángulo y el punto especificados.</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to contain the two specified rectangles.">Crea un rectángulo que es lo bastante grande como para contener los dos rectángulos especificados.</summary>
      <param name="rect1" vsli:raw="The first rectangle to include.">Primer rectángulo que se va a incluir.</param>
      <param name="rect2" vsli:raw="The second rectangle to include.">Segundo rectángulo que se va a incluir.</param>
      <returns vsli:raw="The resulting rectangle.">Rectángulo resultante.</returns>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary vsli:raw="Gets the y-axis value of the bottom of the rectangle.">Obtiene el valor del eje Y de la parte inferior del rectángulo.</summary>
      <returns vsli:raw="The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt; .">Valor del eje Y de la parte inferior del rectángulo. Si el rectángulo está vacío, el valor es <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary vsli:raw="Gets the position of the bottom-left corner of the rectangle.">Obtiene la posición de la esquina inferior izquierda del rectángulo.</summary>
      <returns vsli:raw="The position of the bottom-left corner of the rectangle.">Posición de la esquina inferior izquierda del rectángulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary vsli:raw="Gets the position of the bottom-right corner of the rectangle.">Obtiene la posición de la esquina inferior derecha del rectángulo.</summary>
      <returns vsli:raw="The position of the bottom-right corner of the rectangle.">Posición de la esquina inferior derecha del rectángulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary vsli:raw="Gets a special value that represents a rectangle with no position or area.">Obtiene un valor especial que representa un rectángulo sin posición ni área.</summary>
      <returns vsli:raw="The empty rectangle, which has &lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, and has &lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">Rectángulo vacío, que tiene los valores de las propiedades <see cref="P:System.Windows.Rect.X" /> y <see cref="P:System.Windows.Rect.Y" /> de <see cref="F:System.Double.PositiveInfinity" />, así como los valores de las propiedades <see cref="P:System.Windows.Rect.Width" /> y <see cref="P:System.Windows.Rect.Height" /> de <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">Obtiene o establece la altura del rectángulo.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Height" /> está establecido en un valor negativo.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Height" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns vsli:raw="A positive number that represents the height of the rectangle. The default is 0.">Número positivo que representa el alto del rectángulo. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">Obtiene un valor que indica si el rectángulo es el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el rectángulo es el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary vsli:raw="Gets the x-axis value of the left side of the rectangle.">Obtiene el valor del eje X del lado izquierdo del rectángulo.</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">Valor del eje X del lado izquierdo del rectángulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary vsli:raw="Gets or sets the position of the top-left corner of the rectangle.">Obtiene o establece la posición de la esquina superior izquierda del rectángulo.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Location" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns vsli:raw="The position of the top-left corner of the rectangle. The default is (0, 0).">Posición de la esquina superior izquierda del rectángulo. El valor predeterminado es (0, 0).</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary vsli:raw="Gets the x-axis value of the right side of the rectangle.">Obtiene el valor del eje X del lado derecho del rectángulo.</summary>
      <returns vsli:raw="The x-axis value of the right side of the rectangle.">Valor del eje X del lado derecho del rectángulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary vsli:raw="Gets or sets the width and height of the rectangle.">Obtiene o establece el alto y el ancho del rectángulo.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Size" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">Estructura <see cref="T:System.Windows.Size" /> que especifica el ancho y el alto del rectángulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary vsli:raw="Gets the y-axis position of the top of the rectangle.">Obtiene la posición del eje Y de la parte superior del rectángulo.</summary>
      <returns vsli:raw="The y-axis position of the top of the rectangle.">Posición del eje Y de la parte superior del rectángulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary vsli:raw="Gets the position of the top-left corner of the rectangle.">Obtiene la posición de la esquina superior izquierda del rectángulo.</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle.">Posición de la esquina superior izquierda del rectángulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary vsli:raw="Gets the position of the top-right corner of the rectangle.">Obtiene la posición de la esquina superior derecha del rectángulo.</summary>
      <returns vsli:raw="The position of the top-right corner of the rectangle.">Posición de la esquina superior derecha del rectángulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">Obtiene o establece el ancho del rectángulo.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Width" /> está establecido en un valor negativo.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Width" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns vsli:raw="A positive number that represents the width of the rectangle. The default is 0.">Número positivo que representa el ancho del rectángulo. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary vsli:raw="Gets or sets the x-axis value of the left side of the rectangle.">Obtiene o establece el valor del eje X del lado izquierdo del rectángulo.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.X" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">Valor del eje X del lado izquierdo del rectángulo.</returns>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary vsli:raw="Gets or sets the y-axis value of the top side of the rectangle.">Obtiene o establece el valor del eje Y del lado superior del rectángulo.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Y" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</exception>
      <returns vsli:raw="The y-axis value of the top side of the rectangle.">Valor del eje Y del lado superior del rectángulo.</returns>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Convierte instancias de otros tipos a y desde instancias de <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.RectConverter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Determina si un objeto puede convertirse de un tipo especificado en una instancia de <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Proporciona la información contextual necesaria para la conversión.</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">Tipo del origen que se va a evaluar para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se puede convertir en <see cref="T:System.Windows.Rect" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to the specified type.">Determina si <see cref="T:System.Windows.Rect" /> puede convertirse en el tipo especificado.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Proporciona la información contextual necesaria para la conversión.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; is being evaluated for conversion.">Tipo deseado de este <see cref="T:System.Windows.Rect" /> que se está evaluando para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Rect" /> se puede convertir en <paramref name="destinationType" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Intenta convertir el objeto especificado en <see cref="T:System.Windows.Rect" />.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Proporciona la información contextual necesaria para la conversión.</param>
      <param name="culture" vsli:raw="Cultural information which is respected when converting.">Información cultural que se respeta en la conversión.</param>
      <param name="value" vsli:raw="The object being converted.">Objeto que se convertirá.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Se inicia si el objeto especificado es NULL o es un tipo que no se puede convertir en <see cref="T:System.Windows.Rect" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Objeto <see cref="T:System.Windows.Rect" /> creado a partir de la conversión de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to the specified type.">Intenta convertir <see cref="T:System.Windows.Rect" /> en el tipo especificado.</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">Proporciona la información contextual necesaria para la conversión.</param>
      <param name="culture" vsli:raw="Cultural information which is respected during conversion.">Información de referencia cultural que se respeta durante la conversión.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to convert.">Valor <see cref="T:System.Windows.Rect" /> que se va a convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to.">Tipo en el que convertir <see cref="T:System.Windows.Rect" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">
        <paramref name="value" /> es <see langword="null" />.  
  
o bien 
 <paramref name="value" /> no es un <see cref="T:System.Windows.Rect" />.  
  
o bien 
<paramref name="destinationType" /> no es ninguno de los tipos válidos para la conversión.</exception>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">Objeto que se crea a partir de la conversión de esta instancia de <see cref="T:System.Windows.Rect" />.</returns>
    </member>
    <member name="T:System.Windows.Size">
      <summary vsli:raw="Implements a structure that is used to describe the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; of an object.">Implementa una estructura que se utiliza para describir el elemento <see cref="T:System.Windows.Size" /> de un objeto.</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure and assigns it an initial &lt;paramref name=&quot;width&quot; /&gt; and &lt;paramref name=&quot;height&quot; /&gt;.">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Size" /> y le asigna un valor inicial de <paramref name="width" /> y <paramref name="height" />.</summary>
      <param name="width" vsli:raw="The initial width of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Ancho inicial de la instancia de <see cref="T:System.Windows.Size" />.</param>
      <param name="height" vsli:raw="The initial height of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Alto inicial de la instancia de <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary vsli:raw="Compares an object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compara un objeto con una instancia de <see cref="T:System.Windows.Size" /> para determinar si son iguales.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">
        <see cref="T:System.Object" /> que se va comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sizes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los tamaños son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary vsli:raw="Compares a value to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compara un valor con una instancia de <see cref="T:System.Windows.Size" /> para determinar si son iguales.</summary>
      <param name="value" vsli:raw="The size to compare to this current instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Tamaño que se va a comparar con la actual instancia de <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las instancias de <see cref="T:System.Windows.Size" /> son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compara dos instancias de <see cref="T:System.Windows.Size" /> para determinar si son iguales.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Primera instancia de <see cref="T:System.Windows.Size" /> que se va a comparar.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Segunda instancia de <see cref="T:System.Windows.Size" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las instancias de <see cref="T:System.Windows.Size" /> son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtiene el código hash de esta instancia de <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Código hash de esta instancia de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">Compara dos instancias de <see cref="T:System.Windows.Size" /> para determinar si son iguales.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Primera instancia de <see cref="T:System.Windows.Size" /> que se va a comparar.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Segunda instancia de <see cref="T:System.Windows.Size" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si las dos instancias de <see cref="T:System.Windows.Size" /> son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">Convierte explícitamente una instancia de <see cref="T:System.Windows.Size" /> en una instancia de <see cref="T:System.Windows.Point" />.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">Valor <see cref="T:System.Windows.Size" /> que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Point" /> cuyo valor es igual al de esta instancia de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Convierte explícitamente una instancia de <see cref="T:System.Windows.Size" /> en una instancia de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">Valor <see cref="T:System.Windows.Size" /> que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Vector" /> cuyo valor es igual al de esta instancia de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for inequality.">Compara dos instancias de <see cref="T:System.Windows.Size" /> para determinar si no son iguales.</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Primera instancia de <see cref="T:System.Windows.Size" /> que se va a comparar.</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">Segunda instancia de <see cref="T:System.Windows.Size" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las instancias de <see cref="T:System.Windows.Size" /> no son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary vsli:raw="Returns an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from a converted &lt;see cref=&quot;T:System.String&quot; /&gt;.">Devuelve una instancia de <see cref="T:System.Windows.Size" /> de un objeto <see cref="T:System.String" /> convertido.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value to parse to a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value.">Valor de <see cref="T:System.String" /> que se va a analizar como un valor de <see cref="T:System.Windows.Size" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Instancia de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">Este tipo o miembro es compatible con la infraestructura Windows Presentation Foundation (WPF) y no está pensado para ser usado directamente desde su código.</summary>
      <param name="format" vsli:raw="The format to use.">Formato que se usará.</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">Proveedor que se usa para dar formato al valor.</param>
      <returns vsli:raw="The value of the current instance in the specified format.">Valor de la instancia actual en el formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">Devuelve una instancia de <see cref="T:System.String" /> que representa este objeto <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the width followed by the height.">
        <see cref="T:System.String" /> que especifica el ancho seguido del alto.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Devuelve un objeto <see cref="T:System.String" /> que representa esta instancia de <see cref="T:System.Windows.Size" />.</summary>
      <param name="provider" vsli:raw="An object that provides a way to control formatting.">Objeto que permite controlar el formato.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">
        <see cref="T:System.String" /> que representa este objeto <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary vsli:raw="Gets a value that represents a static empty &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtiene un valor que representa una instancia vacía y estática de <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="An empty instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Instancia vacía de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtiene o establece la propiedad <see cref="P:System.Windows.Size.Height" /> de esta instancia de <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default is 0. The value cannot be negative.">
        <see cref="P:System.Windows.Size.Height" /> de esta instancia de <see cref="T:System.Windows.Size" />. El valor predeterminado es 0. El valor no puede ser negativo.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;.">Obtiene un valor que indica si esta instancia de <see cref="T:System.Windows.Size" /> es <see cref="P:System.Windows.Size.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of size is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si esta instancia del tamaño es <see cref="P:System.Windows.Size.Empty" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Obtiene o establece la propiedad <see cref="P:System.Windows.Size.Width" /> de esta instancia de <see cref="T:System.Windows.Size" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default value is &lt;c&gt;0&lt;/c&gt;. The value cannot be negative.">
        <see cref="P:System.Windows.Size.Width" /> de esta instancia de <see cref="T:System.Windows.Size" />. El valor predeterminado es <c>0</c>. El valor no puede ser negativo.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; class.">Convierte instancias de otros tipos en instancias de la clase <see cref="T:System.Windows.Size" /> y viceversa.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SizeConverter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.SizeConverter" />.</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a class can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Determina si una clase puede convertirse de un tipo dado en una instancia de <see cref="T:System.Windows.Size" />.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Proporciona la información contextual sobre un componente.</param>
      <param name="sourceType" vsli:raw="Identifies the data type to evaluate for conversion.">Identifica el tipo de datos que se van a evaluar para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;sourceType&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el <paramref name="sourceType" /> se puede convertir en una instancia de <see cref="T:System.Windows.Size" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a different type.">Determina si una instancia de <see cref="T:System.Windows.Size" /> puede convertirse en un tipo diferente.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Proporciona la información contextual sobre un componente.</param>
      <param name="destinationType" vsli:raw="Identifies the data type to evaluate for conversion.">Identifica el tipo de datos que se van a evaluar para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to the &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta instancia de <see cref="T:System.Windows.Size" /> se puede convertir en <paramref name="destinationType" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert a specified object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Intenta convertir un objeto especificado en una instancia de <see cref="T:System.Windows.Size" />.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Proporciona la información contextual sobre un componente.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">La información específica de la referencia cultural que se debe respetar durante la conversión.</param>
      <param name="value" vsli:raw="The source object that is being converted.">Objeto de origen que se está convirtiendo.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; that is created from the converted &lt;paramref name=&quot;source&quot; /&gt;.">Instancia de <see cref="T:System.Windows.Size" /> que se crea a partir del elemento <paramref name="source" /> convertido.</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a specified type.">Intenta convertir una instancia de <see cref="T:System.Windows.Size" /> en un tipo especificado.</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">Proporciona la información contextual sobre un componente.</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">La información específica de la referencia cultural que se debe respetar durante la conversión.</param>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to convert.">Instancia de <see cref="T:System.Windows.Size" /> que se va a convertir.</param>
      <param name="destinationType" vsli:raw="The type that this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is converted to.">Tipo en el que se convierte esta instancia de <see cref="T:System.Windows.Size" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, or if the &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid destination types.">
        <paramref name="value" /> es <see langword="null" /> o no es una instancia de <see cref="T:System.Windows.Size" />o si el <paramref name="destinationType" /> no es uno de los tipos de destino válidos.</exception>
      <returns vsli:raw="The object that is created from the converted instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">Objeto que se crea a partir de la instancia convertida de <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary vsli:raw="Provides a startup screen for a Windows Presentation Foundation (WPF) application.">Proporciona una pantalla de inicio para una aplicación de Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource assembly.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.SplashScreen" /> con el ensamblado de recursos especificado.</summary>
      <param name="resourceAssembly" vsli:raw="The assembly that contains the embedded resource.">Ensamblado que contiene el recurso incrustado.</param>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">Nombre del recurso insertado.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.SplashScreen" /> con el recurso especificado.</summary>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">Nombre del recurso insertado.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary vsli:raw="Closes the splash screen.">Cierra la pantalla de presentación.</summary>
      <param name="fadeoutDuration" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that specifies how long it will take for the splash screen to fade after the close operation has been initiated.">
        <see cref="T:System.TimeSpan" /> que especifica el tiempo que tardará la pantalla de presentación en desvanecerse después de que se inicie la operación de cierre.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Muestra la pantalla de presentación.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">Es <see langword="true" /> para cerrar automáticamente la pantalla de presentación; es <see langword="false" /> para cerrar manualmente la pantalla de presentación.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The resource specified in the constructor could not be found.">No se encuentra el recurso especificado en el constructor.</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">Muestra la pantalla de presentación.</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">Es <see langword="true" /> para cerrar automáticamente la pantalla de presentación; es <see langword="false" /> para cerrar manualmente la pantalla de presentación.</param>
      <param name="topMost" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the splash screen window should use the WS_EX_TOPMOST style; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la ventana de la pantalla de presentación debe usar el estilo WS_EX_TOPMOST; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary vsli:raw="Provides services for managing the queue of work items for a thread.">Proporciona los servicios para administrar la cola de elementos de trabajo de un subproceso.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; finishes shutting down.">Se produce cuando <see cref="T:System.Windows.Threading.Dispatcher" /> termina de cerrarse.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; begins to shut down.">Se produce cuando <see cref="T:System.Windows.Threading.Dispatcher" /> empieza a cerrarse.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt;.">Se produce cuando se produce y no se detecta una excepción de subproceso durante la ejecución de un delegado mediante los métodos <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> o <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; when in the filter stage.">Se produce cuando se produce y no se detecta una excepción de subproceso durante la ejecución de un delegado mediante los métodos <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> o <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> mientras se está en la fase de filtrado.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Ejecuta de forma asincrónica el delegado especificado con los argumentos especificados en el subproceso en el que se creó el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado de un método que toma los parámetros especificados en <paramref name="args" />, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Matriz de objetos cuyos valores se pasan como argumentos al método especificado. Puede ser <see langword="null" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">Ejecuta de forma asincrónica el delegado especificado, con la prioridad indicada y los argumentos especificados, en el subproceso en el que se creó el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado de un método que toma los parámetros especificados en <paramref name="args" />, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Prioridad, relativa a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos, a la que se invoca el método especificado.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Matriz de objetos cuyos valores se pasan como argumentos al método especificado. Puede ser <see langword="null" />.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta asincrónicamente el delegado especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Prioridad, relativa a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos, a la que se invoca el método especificado.</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">El delegado a un método que no toma ningún argumento, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> no es un <see cref="T:System.Windows.Threading.DispatcherPriority" /> válido.</exception>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta asincrónicamente el delegado especificado en la prioridad indicada y con el argumento especificado en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Prioridad, relativa a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos, a la que se invoca el método especificado.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado a un método que toma un argumento, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">Objeto que se va a pasar como argumento al método especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> no es un <see cref="T:System.Windows.Threading.DispatcherPriority" /> válido.</exception>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta asincrónicamente el delegado especificado en la prioridad indicada y con la matriz de argumentos indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Prioridad, relativa a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos, a la que se invoca el método especificado.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado de un método que toma varios argumentos y se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">Objeto que se va a pasar como argumento al método especificado.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Matriz de objetos cuyos valores se pasan como argumentos al método especificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is not a valid priority.">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> no es una prioridad válida.</exception>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initiates shutdown of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; asynchronously.">Inicia asincrónicamente el cierre de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority at which to begin shutting down the dispatcher.">Prioridad en la que empezar a cerrar el distribuidor.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Determina si el subproceso de la llamada es el subproceso asociado a este objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el subproceso de la llamada es el subproceso asociado a este objeto <see cref="T:System.Windows.Threading.Dispatcher" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary vsli:raw="Disables processing of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Deshabilita el procesamiento de la cola de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="A structure used to re-enable dispatcher processing.">Estructura usada para volver a habilitar el procesamiento del distribuidor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary vsli:raw="Requests that all frames exit, including nested frames.">Solicita que todos salgan los fotogramas, incluidos los fotogramas anidados.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the specified thread.">Obtiene el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> del subproceso especificado.</summary>
      <param name="thread" vsli:raw="The thread to obtain the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; from.">Subproceso del que se va a obtener <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <returns vsli:raw="The dispatcher for &lt;paramref name=&quot;thread&quot; /&gt;.">Distribuidor de <paramref name="thread" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta sincrónicamente el <see cref="T:System.Action" /> especificado en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta sincrónicamente el <see cref="T:System.Action" /> especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Prioridad que determina el orden en que se invoca la devolución de llamada especificada en relación con las demás operaciones pendientes en <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta sincrónicamente el <see cref="T:System.Action" /> especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Prioridad que determina el orden en que se invoca la devolución de llamada especificada en relación con las demás operaciones pendientes en <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Un objeto que indica si cancelar la acción.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta sincrónicamente el <see cref="T:System.Action" /> especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="An Action delegate to invoke through the dispatcher.">Delegado de acción que se va a invocar a través del distribuidor.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Prioridad que determina el orden en que se invoca la devolución de llamada especificada en relación con las demás operaciones pendientes en <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Un objeto que indica si cancelar la acción.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Cantidad máxima de tiempo de espera para que se inicie la operación. Una vez iniciada la operación, se completará antes de que se devuelva este método. Para especificar una espera infinita, use un valor de-1. En una llamada del mismo subproceso, cualquier otro valor negativo se convierte en-1, lo que produce una espera infinita. En una llamada entre subprocesos, cualquier otro valor negativo produce una excepción <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1, and this method was invoked across threads.">
        <paramref name="timeout" /> es un número negativo distinto de-1 y este método se invocó a través de subprocesos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> no es una prioridad válida.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta de forma sincrónica el delegado especificado con los argumentos especificados en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado de un método que toma los parámetros especificados en <paramref name="args" />, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Matriz de objetos cuyos valores se pasan como argumentos al método especificado. Puede ser <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Es el valor devuelto desde el delegado al que se invoca o es <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta de forma sincrónica el delegado especificado dentro del intervalo de tiempo designado y con la prioridad y los argumentos especificados en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado de un método que toma los parámetros especificados en <paramref name="args" />, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. However, once the operation starts, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Cantidad máxima de tiempo de espera para que se inicie la operación. Sin embargo, una vez iniciada la operación, se completará antes de que se devuelva este método. Para especificar una espera infinita, use un valor de-1. En una llamada del mismo subproceso, cualquier otro valor negativo se convierte en-1, lo que produce una espera infinita. En una llamada entre subprocesos, cualquier otro valor negativo produce una excepción <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Matriz de objetos cuyos valores se pasan como argumentos al método especificado. Puede ser <see langword="null" /> si no se necesita ningún argumento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1, and you're invoking across threads.">
        <paramref name="timeout" /> es un número negativo distinto de-1 y está invocando a través de subprocesos.</exception>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Es el valor devuelto desde el delegado al que se invoca o es <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta de forma sincrónica el delegado especificado dentro del intervalo de tiempo designado y con la prioridad y los argumentos especificados en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado de un método que toma los parámetros especificados en <paramref name="args" />, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Cantidad máxima de tiempo de espera para que se inicie la operación. Una vez iniciada la operación, se completará antes de que se devuelva este método. Para especificar una espera infinita, use un valor de-1. En una llamada del mismo subproceso, cualquier otro valor negativo se convierte en-1, lo que produce una espera infinita. En una llamada entre subprocesos, cualquier otro valor negativo produce una excepción <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Prioridad, relativa a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos, a la que se invoca el método especificado.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Matriz de objetos cuyos valores se pasan como argumentos al método especificado. Puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1, and this method was invoked across threads.">
        <paramref name="timeout" /> es un número negativo distinto de-1 y este método se invocó a través de subprocesos.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> es igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> no es una prioridad válida.</exception>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Es el valor devuelto desde el delegado al que se invoca o es <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta el delegado especificado en la prioridad indicada con los argumentos especificados sincrónicamente en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado de un método que toma los parámetros especificados en <paramref name="args" />, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">La prioridad con la que se invoca el método especificado, con respecto a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">Matriz de objetos cuyos valores se pasan como argumentos al método especificado. Puede ser <see langword="null" />.</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Es el valor devuelto desde el delegado al que se invoca o es <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta sincrónicamente el delegado especificado en la prioridad indicada en el subproceso al que <see cref="T:System.Windows.Threading.Dispatcher" /> está asociado el objeto.</summary>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">La prioridad con la que se invoca el método especificado, con respecto a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos.</param>
      <param name="method" vsli:raw="A delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Un delegado a un método que no toma ningún argumento, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> es igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> no es una prioridad válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Es el valor devuelto desde el delegado al que se invoca o es <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta el delegado especificado en la prioridad indicada con el argumento especificado sincrónicamente en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Prioridad, relativa a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos, a la que se invoca el método especificado.</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado a un método que toma un argumento, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Objeto cuyos valores se pasan como argumento al método especificado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> es igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> no es una prioridad válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Es el valor devuelto desde el delegado al que se invoca o es <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta el delegado especificado en la prioridad indicada con los argumentos especificados sincrónicamente en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Prioridad, relativa a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos, a la que se invoca el método especificado.</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado de un método que toma varios argumentos y se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">Objeto cuyos valores se pasan como argumento al método especificado.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method.">Matriz de objetos cuyos valores se pasan como argumentos al método especificado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> es igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> no es una prioridad válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Es el valor devuelto desde el delegado al que se invoca o es <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created.">Ejecuta sincrónicamente el delegado especificado en la prioridad indicada y con el valor de tiempo de espera especificado en el subproceso que creó <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Prioridad, relativa a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos, a la que se invoca el método especificado.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Cantidad máxima de tiempo de espera para que se inicie la operación. Una vez iniciada la operación, se completará antes de que se devuelva este método. Para especificar una espera infinita, use un valor de-1. En una llamada del mismo subproceso, cualquier otro valor negativo se convierte en-1, lo que produce una espera infinita. En una llamada entre subprocesos, cualquier otro valor negativo produce una excepción <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">El delegado a un método que no toma ningún argumento, que se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1, and this method was invoked across threads.">
        <paramref name="timeout" /> es un número negativo distinto de-1 y este método se invocó a través de subprocesos.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> es igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> no es una prioridad válida.</exception>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Es el valor devuelto desde el delegado al que se invoca o es <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta el delegado especificado en la prioridad indicada con el argumento especificado sincrónicamente en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Prioridad, relativa a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos, a la que se invoca el método especificado.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Cantidad máxima de tiempo de espera para que se inicie la operación. Una vez iniciada la operación, se completará antes de que se devuelva este método. Para especificar una espera infinita, use un valor de-1. En una llamada del mismo subproceso, cualquier otro valor negativo se convierte en-1, lo que produce una espera infinita. En una llamada entre subprocesos, cualquier otro valor negativo produce una excepción <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado de un método que toma varios argumentos y se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Objeto cuyos valores se pasan como argumento al método especificado. Puede ser <see langword="null" /> si no se necesita ningún argumento.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> es igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> no es una prioridad válida.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Es el valor devuelto desde el delegado al que se invoca o es <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta el delegado especificado en la prioridad indicada con los argumentos especificados sincrónicamente en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">Prioridad, relativa a las demás operaciones pendientes en la <see cref="T:System.Windows.Threading.Dispatcher" /> cola de eventos, a la que se invoca el método especificado.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Cantidad máxima de tiempo de espera para que se inicie la operación. Una vez iniciada la operación, se completará antes de que se devuelva este método. Para especificar una espera infinita, use un valor de-1. En una llamada del mismo subproceso, cualquier otro valor negativo se convierte en-1, lo que produce una espera infinita. En una llamada entre subprocesos, cualquier otro valor negativo produce una excepción <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">Delegado de un método que toma varios argumentos y se inserta en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the specified method.">Objeto que se va a pasar como un argumento al método especificado.</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">Matriz de objetos cuyos valores se pasan como argumentos al método especificado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> es igual a <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> no es un <see cref="T:System.Windows.Threading.DispatcherPriority" /> válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1, and this method was invoked across threads.">
        <paramref name="timeout" /> es un número negativo distinto de-1 y este método se invocó a través de subprocesos.</exception>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">Es el valor devuelto desde el delegado al que se invoca o es <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta sincrónicamente el <see cref="T:System.Func`1" /> especificado en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Tipo del valor devuelto del delegado especificado.</typeparam>
      <returns vsli:raw="The value returned by &lt;paramref name=&quot;callback&quot; /&gt;.">El valor devuelto por <paramref name="callback" /> .</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta sincrónicamente el <see cref="T:System.Func`1" /> especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Prioridad que determina el orden en que se invoca la devolución de llamada especificada en relación con las demás operaciones pendientes en <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Tipo del valor devuelto del delegado especificado.</typeparam>
      <returns vsli:raw="The value returned by &lt;paramref name=&quot;callback&quot; /&gt;.">El valor devuelto por <paramref name="callback" /> .</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta sincrónicamente el <see cref="T:System.Func`1" /> especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Prioridad que determina el orden en que se invoca la devolución de llamada especificada en relación con las demás operaciones pendientes en <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Un objeto que indica si cancelar la operación.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Tipo del valor devuelto del delegado especificado.</typeparam>
      <returns vsli:raw="The value returned by &lt;paramref name=&quot;callback&quot; /&gt;.">El valor devuelto por <paramref name="callback" /> .</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta sincrónicamente el <see cref="T:System.Func`1" /> especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Prioridad que determina el orden en que se invoca la devolución de llamada especificada en relación con las demás operaciones pendientes en <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Un objeto que indica si cancelar la operación.</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">Cantidad máxima de tiempo de espera para que se inicie la operación. Una vez iniciada la operación, se completará antes de que se devuelva este método. Para especificar una espera infinita, use un valor de-1. En una llamada del mismo subproceso, cualquier otro valor negativo se convierte en-1, lo que produce una espera infinita. En una llamada entre subprocesos, cualquier otro valor negativo produce una excepción <see cref="T:System.ArgumentOutOfRangeException" /> .</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Tipo del valor devuelto del delegado especificado.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1, and the method was invoked across threads.">
        <paramref name="timeout" /> es un número negativo distinto de-1 y el método se invocó a través de subprocesos.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> no es una prioridad válida.</exception>
      <returns vsli:raw="The value returned by &lt;paramref name=&quot;callback&quot; /&gt;.">El valor devuelto por <paramref name="callback" /> .</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta asincrónicamente el <see cref="T:System.Action" /> especificado en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta asincrónicamente el <see cref="T:System.Action" /> especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Prioridad que determina el orden en que se invoca la devolución de llamada especificada en relación con las demás operaciones pendientes en <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta asincrónicamente el <see cref="T:System.Action" /> especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Prioridad que determina el orden en que se invoca la devolución de llamada especificada en relación con las demás operaciones pendientes en <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">Un objeto que indica si cancelar la acción.</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta asincrónicamente el <see cref="T:System.Func`1" /> especificado en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Tipo del valor devuelto del delegado especificado.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta asincrónicamente el <see cref="T:System.Func`1" /> especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Prioridad que determina el orden en que se invoca la devolución de llamada especificada en relación con las demás operaciones pendientes en <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Tipo del valor devuelto del delegado especificado.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Ejecuta asincrónicamente el <see cref="T:System.Func`1" /> especificado en la prioridad indicada en el subproceso al que está asociado el objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">Delegado para invocar a través del distribuidor.</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Prioridad que determina el orden en que se invoca la devolución de llamada especificada en relación con las demás operaciones pendientes en <see cref="T:System.Windows.Threading.Dispatcher" /> .</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">Un objeto que indica si cancelar la operación.</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">Tipo del valor devuelto del delegado especificado.</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">Objeto, que se devuelve inmediatamente después de llamar a <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" />, que se puede usar para interactuar con el delegado ya que su ejecución está pendiente en la cola de eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary vsli:raw="Initiates the shutdown process of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; synchronously.">Inicia sincrónicamente el proceso de cierre de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary vsli:raw="Enters an execute loop.">Escribe un bucle de ejecución.</summary>
      <param name="frame" vsli:raw="The frame for the dispatcher to process.">Fotograma del distribuidor que se va a procesar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;frame&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="frame" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.Dispatcher.HasShutdownFinished&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;frame&quot; /&gt; is running on a different &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Dispatcher processing has been disabled.">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> es <see langword="true" />  
  
o bien 
 <paramref name="frame" /> se ejecuta en un objeto <see cref="T:System.Windows.Threading.Dispatcher" /> diferente.  
  
o bien 
Se ha deshabilitado el procesamiento del distribuidor.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary vsli:raw="Pushes the main execution frame on the event queue of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inserta el fotograma de ejecución principal en la cola de eventos de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is a valid priority.">Determina si el objeto <see cref="T:System.Windows.Threading.DispatcherPriority" /> especificado tiene una prioridad válida.</summary>
      <param name="priority" vsli:raw="The priority to check.">Prioridad que se va a comprobar.</param>
      <param name="parameterName" vsli:raw="A string that will be returned by the exception that occurs if the priority is invalid.">Cadena que devolverá la excepción que se produce si la prioridad no es válida.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> no es un <see cref="T:System.Windows.Threading.DispatcherPriority" /> válido.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Determina si el subproceso de la llamada tiene acceso a <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">El subproceso de la llamada no tiene acceso a <see cref="T:System.Windows.Threading.Dispatcher" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Crea un objeto que admite await que devuelve el control de forma asincrónica al distribuidor actual y proporciona una oportunidad para que el distribuidor procese otros eventos.</summary>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Objeto que admite await que devuelve el control de forma asincrónica al distribuidor actual y proporciona una oportunidad para que el distribuidor procese otros eventos.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.  The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.">Crea un objeto que admite await que devuelve el control de forma asincrónica al distribuidor actual y proporciona una oportunidad para que el distribuidor procese otros eventos.  El trabajo que se produce cuando el control vuelve al código que espera el resultado de este método se programa con la prioridad especificada.</summary>
      <param name="priority" vsli:raw="The priority at which to schedule the continuation.">Prioridad con la que se programa la continuación.</param>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Objeto que admite await que devuelve el control de forma asincrónica al distribuidor actual y proporciona una oportunidad para que el distribuidor procese otros eventos.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the thread currently executing and creates a new &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; if one is not already associated with the thread.">Obtiene <see cref="T:System.Windows.Threading.Dispatcher" /> del subproceso que se ejecuta actualmente y crea un nuevo objeto <see cref="T:System.Windows.Threading.Dispatcher" /> si aún no hay ninguno asociado al subproceso.</summary>
      <returns vsli:raw="The dispatcher associated with the current thread.">Distribuidor asociado al subproceso actual.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has finished shutting down.">Determina si <see cref="T:System.Windows.Threading.Dispatcher" /> ha terminado de cerrarse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dispatcher has finished shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el distribuidor ha terminado de cerrarse; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is shutting down.">Determina si <see cref="T:System.Windows.Threading.Dispatcher" /> se está cerrando.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has started shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Windows.Threading.Dispatcher" /> se ha empezado a cerrar; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary vsli:raw="Gets the collection of hooks that provide additional event information about the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Obtiene la colección de enlaces que proporcionan la información de evento adicional sobre <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The hooks associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Enlaces asociados a este objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary vsli:raw="Gets the thread this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">Obtiene el subproceso al que está asociado este objeto <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The thread.">Subproceso.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; related events.">Proporciona los datos de los eventos <see cref="T:System.Windows.Threading.Dispatcher" /> relacionados.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Objeto <see cref="T:System.Windows.Threading.Dispatcher" /> asociado con este evento.</summary>
      <returns vsli:raw="The dispatcher.">El distribuidor.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary vsli:raw="Represents an execution loop in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Representa un bucle de ejecución en <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherFrame" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class, by using the specified exit request flag.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherFrame" /> usando el marcador de solicitud de salida especificado.</summary>
      <param name="exitWhenRequested" vsli:raw="Indicates whether this frame will exit when all frames are requested to exit.">Indica si el marco saldrá cuando se solicite que salgan todos los fotogramas.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary vsli:raw="Gets or sets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; should continue.">Obtiene o establece un valor que indica si este <see cref="T:System.Windows.Threading.DispatcherFrame" /> debería continuar.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the frame should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si el marco debe continuar; en caso contrario, <see langword="false" />.  El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; events.">Proporciona los datos de los eventos <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHookEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" />.</summary>
      <param name="operation" vsli:raw="The operation associated with the event.">Operación asociada al evento.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Obtiene el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> asociado con este evento.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">Objeto <see cref="T:System.Windows.Threading.Dispatcher" /> asociado con este evento.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt; associated with this event.">Obtiene el objeto <see cref="T:System.Windows.Threading.DispatcherOperation" /> asociado con este evento.</summary>
      <returns vsli:raw="The operation.">Operación.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary vsli:raw="Represents the method that will handle &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; related events.">Representa el método que controlará los eventos <see cref="T:System.Windows.Threading.DispatcherHooks" /> relacionados.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The event data.">Datos del evento.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary vsli:raw="Provides additional event information about &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; processing.">Proporciona información de eventos adicional sobre el procesamiento de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary vsli:raw="Occurs when the dispatcher has no more operations to process.">Se produce cuando el distribuidor no tiene más operaciones que procesar.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary vsli:raw="Occurs when an operation is aborted.">Tiene lugar cuando se anula una operación.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary vsli:raw="Occurs when an operation completes.">Se produce cuando se completa una operación.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary vsli:raw="Occurs when an operation is posted to the dispatcher.">Se produce cuando se expone una operación en el distribuidor.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary vsli:raw="Occurs when the priority of an operation is changed.">Se produce cuando se cambia la prioridad de una operación.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary vsli:raw="Occurs when an operation is invoked.">Tiene lugar cuando se invoca una operación.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary vsli:raw="Represents an object that is associated with a &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Representa un objeto asociado a <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Determina si el subproceso de la llamada tiene acceso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread has access to this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el subproceso de la llamada tiene acceso a este objeto; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary vsli:raw="Enforces that the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">Exige que el subproceso de la llamada tenga acceso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">El subproceso de la llamada no tiene acceso a <see cref="T:System.Windows.Threading.DispatcherObject" />.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; is associated with.">Obtiene el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> al que está asociado <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns vsli:raw="The dispatcher.">El distribuidor.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Representa un objeto que se usa para interactuar con una operación expuesta en la cola de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary vsli:raw="Occurs when the operation is aborted.">Tiene lugar cuando se anula la operación.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary vsli:raw="Occurs when the operation has completed.">Se produce cuando se ha completado la operación.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary vsli:raw="Aborts the operation.">Anula la operación.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation was aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se anuló la operación; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary vsli:raw="Returns an object that is notified when the asynchronous operation is finished.">Devuelve un objeto que se notifica al finalizar la operación asincrónica.</summary>
      <returns vsli:raw="An object that is notified when the asynchronous operation is finished.">Un objeto al que se notifica al finalizar la operación asincrónica.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Inicia la operación adjuntada a este <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;null&quot; /&gt; in all cases.">
        <see langword="null" /> en todos los casos.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary vsli:raw="Waits for the operation to complete.">Espera a que se complete la operación.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> es igual a <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Esto puede ocurrir al esperar a una operación que ya está en ejecución en el mismo subproceso.</exception>
      <returns vsli:raw="The status of the operation.">Estado de la operación.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary vsli:raw="Waits for the operation to complete in the specified period of time.">Espera a que la operación se complete en el período de tiempo especificado.</summary>
      <param name="timeout" vsli:raw="The maximum period of time to wait.">Período máximo de tiempo que se espera.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> es igual a <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.  Esto puede ocurrir al esperar a una operación que ya está en ejecución en el mismo subproceso.</exception>
      <returns vsli:raw="The status of the operation.">Estado de la operación.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; that the operation was posted to.">Obtiene el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> en el que se expuso la operación.</summary>
      <returns vsli:raw="The dispatcher.">El distribuidor.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary vsli:raw="Gets or sets the priority of the operation in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">Obtiene o establece la prioridad de la operación en la cola de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns vsli:raw="The priority of the delegate on the queue.">Prioridad del delegado en la cola.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Obtiene el resultado de la operación después de haberse completado.</summary>
      <returns vsli:raw="The result of the operation -or- &lt;see langword=&quot;null&quot; /&gt; if the operation has not completed.">Resultado de la operación o <see langword="null" /> si la operación no se ha completado.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary vsli:raw="Gets the current status of the operation.">Obtiene el estado actual de la operación.</summary>
      <returns vsli:raw="The status of the operation.">Estado de la operación.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Obtiene un objeto <see cref="T:System.Threading.Tasks.Task`1" /> que representa la operación actual.</summary>
      <returns vsli:raw="An object that represents the current operation.">Objeto que representa la operación actual.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue and contains a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Representa un objeto que se usa para interactuar con una operación expuesta en la cola de <see cref="T:System.Windows.Threading.Dispatcher" /> y contiene un <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
      <typeparam name="TResult" vsli:raw="The type that is returned by the &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">Tipo devuelto por <see cref="T:System.Threading.Tasks.Task`1" />.</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary vsli:raw="Returns an object that awaits an asynchronous operation that returns a result.">Devuelve un objeto que espera una operación asincrónica que devuelve un resultado.</summary>
      <returns vsli:raw="An object that awaits an asynchronous operation that returns a result.">Un objeto que espera una operación asincrónica que devuelve un resultado.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Inicia la operación adjuntada a este <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
      <returns vsli:raw="The result of the operation.">Resultado de la operación.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">Obtiene el resultado de la operación después de haberse completado.</summary>
      <returns vsli:raw="The result of the operation.">Resultado de la operación.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">Obtiene un objeto <see cref="T:System.Threading.Tasks.Task`1" /> que representa la operación actual.</summary>
      <returns vsli:raw="An object that represents the current operation.">Objeto que representa la operación actual.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary vsli:raw="Represents a delegate to use for dispatcher operations.">Representa un delegado que se utilizará para las operaciones de distribuidor.</summary>
      <param name="arg" vsli:raw="An argument passed to the callback.">Argumento pasado a la devolución de llamada.</param>
      <returns vsli:raw="The object returned by the callback.">Objeto devuelto por la devolución de llamada.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary vsli:raw="Describes the possible values for the status of a &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">Describe los valores posibles para el estado de <see cref="T:System.Windows.Threading.DispatcherOperation" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary vsli:raw="The operation has aborted.">La operación se ha anulado.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary vsli:raw="The operation is completed.">La operación se ha completado.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary vsli:raw="The operation started executing, but has not completed.">La operación empezó a ejecutarse, pero no se ha completado.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary vsli:raw="The operation is pending and is still in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">La operación está pendiente y todavía está en la cola de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary vsli:raw="Describes the priorities at which operations can be invoked by way of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Describe las prioridades con las que se pueden invocar operaciones por medio de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary vsli:raw="The enumeration value is 2. Operations are processed when the application is idle.">El valor de enumeración es 2. Las operaciones se procesan cuando la aplicación está inactiva.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary vsli:raw="The enumeration value is 4. Operations are processed after all other non-idle operations are completed.">El valor de enumeración es 4. Las operaciones se procesan una vez completadas todas las demás operaciones no inactivas.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary vsli:raw="The enumeration value is 3. Operations are processed after background operations have completed.">El valor de enumeración es 3. Las operaciones se procesan cuando las operaciones en segundo plano se han completado.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary vsli:raw="The enumeration value is 8. Operations are processed at the same priority as data binding.">El valor de enumeración es 8. Las operaciones se procesan con la misma prioridad que el enlace de datos.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary vsli:raw="The enumeration value is 0. Operations are not processed.">El valor de enumeración es 0. No se procesan las operaciones.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary vsli:raw="The enumeration value is 5. Operations are processed at the same priority as input.">El valor de enumeración es 5. Las operaciones se procesan con la misma prioridad que la entrada.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary vsli:raw="The enumeration value is -1. This is an invalid priority.">El valor de enumeración es -1. Ésta es una prioridad no válida.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary vsli:raw="The enumeration value is 6. Operations are processed when layout and render has finished but just before items at input priority are serviced. Specifically this is used when raising the Loaded event.">El valor de enumeración es 6. Las operaciones se procesan cuando el diseño y la representación han finalizado, pero justo antes de atender a los elementos que tienen la prioridad de entrada. Esto se usa específicamente al provocar el evento Loaded.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary vsli:raw="The enumeration value is 9. Operations are processed at normal priority. This is the typical application priority.">El valor de enumeración es 9. Las operaciones se procesan con la prioridad normal. Ésta es la prioridad de la aplicación típica.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary vsli:raw="The enumeration value is 7. Operations processed at the same priority as rendering.">El valor de enumeración es 7. Las operaciones se procesan con la misma prioridad que la representación.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary vsli:raw="The enumeration value is 10. Operations are processed before other asynchronous operations. This is the highest priority.">El valor de enumeración es 10. Las operaciones se procesan antes que otras operaciones asincrónicas. Ésta es la prioridad máxima.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary vsli:raw="The enumeration value is 1. Operations are processed when the system is idle.">El valor de enumeración es 1. Las operaciones se procesan cuando el sistema está inactivo.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary vsli:raw="Represents an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Representa un objeto que admite await que devuelve el control de forma asincrónica al distribuidor actual y proporciona una oportunidad para que el distribuidor procese otros eventos.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary vsli:raw="Returns an object that waits for the completion of an asynchronous task.">Devuelve un objeto que espera la finalización de una tarea asincrónica.</summary>
      <returns vsli:raw="An object that waits for the completion of an asynchronous task.">Objeto que espera la finalización de una tarea asincrónica.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary vsli:raw="Represents an object that waits for the completion of an asynchronous task.">Representa un objeto que espera la finalización de una tarea asincrónica.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary vsli:raw="Ends the wait for the completion of the asynchronous task.">Finaliza la espera para la finalización de la tarea asincrónica.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary vsli:raw="Sets the action to perform when the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriorityAwaiter&quot; /&gt; object stops waiting for the asynchronous task to complete.">Establece la acción que se va a realizar cuando el objeto <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" /> detiene la espera de la tarea asincrónica a completar.</summary>
      <param name="continuation" vsli:raw="The action to perform when the wait operation completes.">La acción para realizar cuando se completa la operación de espera.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary vsli:raw="Gets a value that indicates whether the asynchronous task has completed.">Obtiene un valor que indica si se ha completado la tarea asincrónica.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary vsli:raw="Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.">Representa el distribuidor cuando está en un estado deshabilitado y proporciona un medio para volver a habilitar el procesamiento del distribuidor.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary vsli:raw="Re-enables dispatcher processing.">Vuelve a habilitar el procesamiento del distribuidor.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> especificado es igual a este objeto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.</summary>
      <param name="obj" vsli:raw="The object to evaluate for equality.">Objeto cuya igualdad se va a evaluar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto especificado es igual a este objeto <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Obtiene un código hash para esta instancia.</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">Código hash entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal.">Determina si los dos objetos <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> son iguales.</summary>
      <param name="left" vsli:raw="The first object to compare.">Primer objeto que se va a comparar.</param>
      <param name="right" vsli:raw="The second object to compare.">Segundo objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los objetos <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal.">Determina si dos objetos <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> no son iguales.</summary>
      <param name="left" vsli:raw="The first object to compare.">Primer objeto que se va a comparar.</param>
      <param name="right" vsli:raw="The second object to compare.">Segundo objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los objetos <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> no son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary vsli:raw="Provides a synchronization context for Windows Presentation Foundation (WPF).">Proporciona un contexto de sincronización de Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> usando el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> actual.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> utilizando el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> especificado.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> al que se va a asociar <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> utilizando el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> especificado.</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">
        <see cref="T:System.Windows.Threading.Dispatcher" /> al que se va a asociar <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <param name="priority" vsli:raw="The priority used to send and post callback methods.">Prioridad usada para enviar y exponer métodos de devolución de llamada.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">Crea una copia de <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</summary>
      <returns vsli:raw="The copy of this synchronization context.">Copia de este contexto de sincronización.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context asynchronously.">Invoca de forma asincrónica la devolución de llamada en el contexto de sincronización.</summary>
      <param name="d" vsli:raw="The delegate to call.">Delegado al que se va a llamar.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">Objeto que se ha pasado al delegado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context synchronously.">Invoca de forma sincrónica la devolución de llamada en el contexto de sincronización.</summary>
      <param name="d" vsli:raw="The delegate to call.">Delegado al que se va a llamar.</param>
      <param name="state" vsli:raw="The object passed to the delegate.">Objeto que se ha pasado al delegado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary vsli:raw="Waits for any or all the elements in the specified array to receive a signal.">Espera a que cualquiera o la totalidad de los elementos de la matriz especificada reciban una señal.</summary>
      <param name="waitHandles" vsli:raw="An array that contains the native operating system handles.">Matriz que contiene los identificadores del sistema operativo nativo.</param>
      <param name="waitAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to wait for all handles; &lt;see langword=&quot;false&quot; /&gt; to wait for any handle.">Es <see langword="true" /> para que se espere a todos los identificadores; es <see langword="false" /> para que se espere a cualquiera de ellos.</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">Número de milisegundos de espera o <see cref="F:System.Threading.Timeout.Infinite" /> (-1) para esperar indefinidamente.</param>
      <returns vsli:raw="The array index of the object that satisfied the wait.">Índice de la matriz del objeto que satisfizo la espera.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary vsli:raw="A timer that is integrated into the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue which is processed at a specified interval of time and at a specified priority.">Temporizador integrado en la cola de <see cref="T:System.Windows.Threading.Dispatcher" /> que se procesa en un intervalo de tiempo especificado con una prioridad especificada.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary vsli:raw="Occurs when the timer interval has elapsed.">Se produce cuando ha transcurrido el intervalo del temporizador.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which uses the specified time interval, priority, event handler, and &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherTimer" /> que usa el intervalo de tiempo, prioridad, controlador de eventos y <see cref="T:System.Windows.Threading.Dispatcher" /> especificados.</summary>
      <param name="interval" vsli:raw="The period of time between ticks.">Período de tiempo entre los pasos.</param>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Prioridad con la que se invoca el temporizador.</param>
      <param name="callback" vsli:raw="The event handler to call when the &lt;see cref=&quot;E:System.Windows.Threading.DispatcherTimer.Tick&quot; /&gt; event occurs.">Controlador de eventos al que se llama cuando se produce el evento <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">Distribuidor al que está asociado el temporizador.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> es <see langword="null" />.

o bien

<paramref name="dispatcher" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="interval" /> es menor que 0 o mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which processes timer events at the specified priority.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherTimer" /> que procesa los eventos del temporizador con la prioridad especificada.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Prioridad con la que se invoca el temporizador.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which runs on the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; at the specified priority.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherTimer" /> que se ejecuta en el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> especificado con la prioridad especificada.</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">Prioridad con la que se invoca el temporizador.</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">Distribuidor al que está asociado el temporizador.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary vsli:raw="Starts the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Inicia <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary vsli:raw="Stops the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Detiene <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> asociado a <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
      <returns vsli:raw="The dispatcher.">El distribuidor.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary vsli:raw="Gets or sets the period of time between timer ticks.">Obtiene o establece el período de tiempo entre los pasos del temporizador.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">
        <paramref name="interval" /> es menor que 0 o mayor que <see cref="F:System.Int32.MaxValue" /> milisegundos.</exception>
      <returns vsli:raw="The period of time between ticks. The default is 00:00:00.">Período de tiempo entre los pasos. El valor predeterminado es 00:00:00.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether the timer is running.">Obtiene o establece un valor que indica si el temporizador está en ejecución.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the timer is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el temporizador está habilitado; en caso contrario, <see langword="false" />.  De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary vsli:raw="Gets or sets a user-defined data object.">Obtiene o establece un objeto de datos definido por el usuario.</summary>
      <returns vsli:raw="The user-defined data.  The default is &lt;see langword=&quot;null&quot; /&gt;.">Los datos definidos por el usuario.  De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Proporciona datos para el evento <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Obtiene la excepción que se provocó al ejecutar el código por medio del distribuidor.</summary>
      <returns vsli:raw="The exception.">Excepción.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary vsli:raw="Gets or sets whether the exception event has been handled.">Obtiene o establece si se ha controlado el evento de la excepción.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the exception was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se controló la excepción; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">Representa el método que controlará el evento <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The event data.">Datos del evento.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Proporciona datos para el evento <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> de <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">Obtiene la excepción que se provocó al ejecutar el código por medio del distribuidor.</summary>
      <returns vsli:raw="The exception.">Excepción.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary vsli:raw="Gets or sets whether the exception should be caught and the event handlers called.">Obtiene o establece si se debe detectar la excepción y se debe llamar a los controladores de eventos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; should be raised; otherwise; &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si deben provocarse eventos <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />; en caso contrario, <see langword="false" />.  El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">Representa el método que controlará el evento <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The event data.">Datos del evento.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary vsli:raw="Represents a method used as a callback that validates the effective value of a dependency property.">Representa un método que se utiliza como una devolución de llamada que valida el valor efectivo de una propiedad de dependencia.</summary>
      <param name="value" vsli:raw="The value to be validated.">Valor que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was validated; &lt;see langword=&quot;false&quot; /&gt; if the submitted value was invalid.">Es <see langword="true" /> si se validó el valor; es <see langword="false" /> si el valor enviado no era válido.</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary vsli:raw="Represents a displacement in 2-D space.">Representa un desplazamiento en el espacio 2D.</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Vector" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Desplazamiento de la propiedad <see cref="P:System.Windows.Vector.X" /> del nuevo objeto <see cref="T:System.Windows.Vector" />.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Desplazamiento de la propiedad <see cref="P:System.Windows.Vector.Y" /> del nuevo objeto <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates the specified point by the specified vector and returns the resulting point.">Traslada el punto especificado por el vector especificado y devuelve el punto resultante.</summary>
      <param name="vector" vsli:raw="The amount to translate the specified point.">Recorrido por el que se va a trasladar el punto especificado.</param>
      <param name="point" vsli:raw="The point to translate.">Punto que se va a trasladar.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">Resultado de trasladar <paramref name="point" /> por <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Suma dos vectores y devuelve el resultado como estructura <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">Primer vector que se va a agregar.</param>
      <param name="vector2" vsli:raw="The second vector to add.">Segundo vector que se va a agregar.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">La suma de <paramref name="vector1" /> y <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Retrieves the angle, expressed in degrees, between the two specified vectors.">Recupera el ángulo, expresado en grados, entre los dos vectores especificados.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Primer vector que se va a evaluar.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Segundo vector que se va a evaluar.</param>
      <returns vsli:raw="The angle, in degrees, between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">El ángulo, en grados, entre <paramref name="vector1" /> y <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the cross product of two vectors.">Calcula el producto vectorial de dos vectores.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Primer vector que se va a evaluar.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Segundo vector que se va a evaluar.</param>
      <returns vsli:raw="The cross product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;. The following formula is used to calculate the cross product:  &#xA;  &#xA; &lt;c&gt;(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)&lt;/c&gt;">Producto vectorial de <paramref name="vector1" /> y <paramref name="vector2" />. La fórmula siguiente se usa para calcular este producto: 
 <c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the determinant of two vectors.">Calcula el factor determinante de dos vectores.</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">Primer vector que se va a evaluar.</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">Segundo vector que se va a evaluar.</param>
      <returns vsli:raw="The determinant of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Factor determinante de <paramref name="vector1" /> y <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Divide el vector especificado por el valor escalar especificado y devuelve el resultado como <see cref="T:System.Windows.Vector" />.</summary>
      <param name="vector" vsli:raw="The vector structure to divide.">Estructura vectorial que se va a dividir.</param>
      <param name="scalar" vsli:raw="The amount by which &lt;paramref name=&quot;vector&quot; /&gt; is divided.">Cantidad por la que se divide <paramref name="vector" />.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">Resultado de dividir <paramref name="vector" /> entre <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure and, if it is, whether it has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector.">Determina si el objeto <see cref="T:System.Object" /> especificado es una estructura <see cref="T:System.Windows.Vector" /> y, en caso de que lo sea, si tiene los mismos valores de <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> que este vector.</summary>
      <param name="o" vsli:raw="The vector to compare.">Vector que se va comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="o" /> es <see cref="T:System.Windows.Vector" /> y tiene los mismos valores de <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> que este vector; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Compara la igualdad de dos vectores.</summary>
      <param name="value" vsli:raw="The vector to compare with this vector.">Vector con el que se va a comparar este vector.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="value" /> tiene los mismos valores de <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> que este vector; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares the two specified vectors for equality.">Compara la igualdad de los dos vectores especificados.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Primer vector que se va a comparar.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Segundo vector que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los componentes de <see cref="P:System.Windows.Vector.X" /> y <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> y <paramref name="vector2" /> son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary vsli:raw="Returns the hash code for this vector.">Devuelve el código hash de este vector.</summary>
      <returns vsli:raw="The hash code for this instance.">Código hash de esta instancia.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Multiplica el valor escalar especificado por el vector especificado y devuelve el objeto <see cref="T:System.Windows.Vector" /> resultante.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">Valor escalar que se va a multiplicar.</param>
      <param name="vector" vsli:raw="The vector to multiply.">Vector que se va a multiplicar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Resultado de multiplicar <paramref name="scalar" /> y <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Multiplica el vector especificado por el valor escalar especificado y devuelve el objeto <see cref="T:System.Windows.Vector" /> resultante.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">Vector que se va a multiplicar.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">Valor escalar que se va a multiplicar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">Resultado de multiplicar <paramref name="vector" /> y <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma el espacio de la coordenada del vector especificado mediante el objeto <see cref="T:System.Windows.Media.Matrix" /> especificado.</summary>
      <param name="vector" vsli:raw="The vector structure to transform.">Estructura vectorial que se va a transformar.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">Transformación que se va a aplicar a <paramref name="vector" />.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">Resultado de transformar <paramref name="vector" /> por <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vectors and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Calcula el producto escalar de los dos vectores especificados y devuelve el resultado como <see cref="T:System.Double" />.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">Primer vector que se va a multiplicar.</param>
      <param name="vector2" vsli:raw="The second vector structure to multiply.">Segunda estructura vectorial que se va a multiplicar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;(vector1.X * vector2.X) + (vector1.Y * vector2.Y)&lt;/c&gt;">
        <see cref="T:System.Double" /> que contiene el producto de los vectores escalares <paramref name="vector1" /> y <paramref name="vector2" />, que se calcula con la fórmula siguiente: 
 <c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary vsli:raw="Negates this vector. The vector has the same magnitude as before, but its direction is now opposite.">Niega este vector. El vector tiene la misma magnitud que antes, pero ahora su dirección es la contraria.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary vsli:raw="Normalizes this vector.">Normaliza este vector.</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates a point by the specified vector and returns the resulting point.">Traslada un punto mediante el vector especificado y devuelve el punto resultante.</summary>
      <param name="vector" vsli:raw="The vector used to translate &lt;paramref name=&quot;point&quot; /&gt;.">Vector usado para trasladar <paramref name="point" />.</param>
      <param name="point" vsli:raw="The point to translate.">Punto que se va a trasladar.</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">Resultado de trasladar <paramref name="point" /> por <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a vector.">Suma dos vectores y devuelve el resultado como vector.</summary>
      <param name="vector1" vsli:raw="The first vector to add.">Primer vector que se va a agregar.</param>
      <param name="vector2" vsli:raw="The second vector to add.">Segundo vector que se va a agregar.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">La suma de <paramref name="vector1" /> y <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the resulting vector.">Divide el vector escalar especificado por el valor especificado y devuelve el vector resultante.</summary>
      <param name="vector" vsli:raw="The vector to divide.">Vector que se va a dividir.</param>
      <param name="scalar" vsli:raw="The scalar by which &lt;paramref name=&quot;vector&quot; /&gt; will be divided.">Valor escalar por el que se dividirá el parámetro <paramref name="vector" />.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">Resultado de dividir <paramref name="vector" /> entre <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">Compara la igualdad de dos vectores.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Primer vector que se va a comparar.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Segundo vector que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los componentes <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> y <paramref name="vector2" /> son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; with the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this vector.">Crea <see cref="T:System.Windows.Point" /> con los valores de <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> de este vector.</summary>
      <param name="vector" vsli:raw="The vector to convert.">Vector que se va a convertir.</param>
      <returns vsli:raw="A point with &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;- and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate values equal to the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; offset values of &lt;paramref name=&quot;vector&quot; /&gt;.">Punto con los valores de las coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> iguales a los valores de desplazamiento de <paramref name="vector" /> de <see cref="P:System.Windows.Vector.X" /> y <see cref="P:System.Windows.Vector.Y" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from the offsets of this vector.">Crea <see cref="T:System.Windows.Size" /> a partir de los desplazamientos de este vector.</summary>
      <param name="vector" vsli:raw="The vector to convert.">Vector que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; property and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; property.">Objeto <see cref="T:System.Windows.Size" /> con una propiedad <see cref="P:System.Windows.Size.Width" /> igual al valor absoluto de la propiedad <see cref="P:System.Windows.Vector.X" /> de este vector y <see cref="P:System.Windows.Size.Height" /> igual al valor absoluto de la propiedad <see cref="P:System.Windows.Vector.Y" /> de este vector.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for inequality.">Compara la desigualdad de dos vectores.</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">Primer vector que se va a comparar.</param>
      <param name="vector2" vsli:raw="The second vector to compare.">Segundo vector que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los componentes de <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector1" /> y <paramref name="vector2" /> son distintos; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting vector.">Multiplica el valor escalar especificado por el vector especificado y devuelve el vector resultante.</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">Valor escalar que se va a multiplicar.</param>
      <param name="vector" vsli:raw="The vector to multiply.">Vector que se va a multiplicar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">Resultado de multiplicar <paramref name="scalar" /> y <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting vector.">Multiplica el vector especificado por el valor escalar especificado y devuelve el vector resultante.</summary>
      <param name="vector" vsli:raw="The vector to multiply.">Vector que se va a multiplicar.</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">Valor escalar que se va a multiplicar.</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">Resultado de multiplicar <paramref name="vector" /> y <paramref name="scalar" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">Transforma el espacio de la coordenada del vector especificado mediante el objeto <see cref="T:System.Windows.Media.Matrix" /> especificado.</summary>
      <param name="vector" vsli:raw="The vector to transform.">Vector que se va a transformar.</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">Transformación que se va a aplicar a <paramref name="vector" />.</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">Resultado de transformar <paramref name="vector" /> por <paramref name="matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vector structures and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Calcula el producto escalar de las dos estructuras vectoriales especificadas y devuelve el resultado como <see cref="T:System.Double" />.</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">Primer vector que se va a multiplicar.</param>
      <param name="vector2" vsli:raw="The second vector to multiply.">Segundo vector que se va a multiplicar.</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;vector1.X * vector2.X + vector1.Y * vector2.Y&lt;/c&gt;">Devuelve <see cref="T:System.Double" /> que contiene el producto de los vectores escalares <paramref name="vector1" /> y <paramref name="vector2" />, que se calcula con la fórmula siguiente: 
 <c>vector1. X * vector2. X + vector1. Y * vector2. Sí</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts one specified vector from another.">Resta un vector especificado de otro.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">Vector del que se resta <paramref name="vector2" />.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">Vector que se resta de <paramref name="vector1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Diferencia entre <paramref name="vector1" /> y <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary vsli:raw="Negates the specified vector.">Convierte en negativo el vector especificado.</summary>
      <param name="vector" vsli:raw="The vector to negate.">Vector que se va a convertir en negativo.</param>
      <returns vsli:raw="A vector with &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values opposite of the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of &lt;paramref name=&quot;vector&quot; /&gt;.">Vector con los valores de <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> opuestos a los valores de <see cref="P:System.Windows.Vector.X" /> y <see cref="P:System.Windows.Vector.Y" /> de <paramref name="vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary vsli:raw="Converts a string representation of a vector into the equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Convierte una representación de cadena en la estructura <see cref="T:System.Windows.Vector" /> equivalente.</summary>
      <param name="source" vsli:raw="The string representation of the vector.">Representación de cadena del vector.</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Estructura <see cref="T:System.Windows.Vector" /> equivalente.</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified vector from another specified vector.">Resta un vector especificado de otro vector especificado.</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">Vector del que se resta <paramref name="vector2" />.</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">Vector que se resta de <paramref name="vector1" />.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">Diferencia entre <paramref name="vector1" /> y <paramref name="vector2" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">Este miembro es compatible con la infraestructura de Windows Presentation Foundation (WPF) y no está diseñado para utilizarse directamente desde el código. Para obtener una descripción de este miembro, vea <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">Cadena que especifica el formato que se va a utilizar.  
  
o bien 
 <see langword="null" /> para utilizar el formato predeterminado que se define para el tipo de la implementación de <see cref="T:System.IFormattable" />.</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">
        <see langword="IFormatProvider" /> que se va a utilizar para dar formato al valor.  
  
o bien 
 <see langword="null" /> para obtener la información de formato para valores numéricos de la configuración regional actual del sistema operativo.</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">Cadena que contiene el valor de la instancia actual con el formato especificado.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Devuelve la representación de cadena de esta estructura <see cref="T:System.Windows.Vector" />.</summary>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Cadena que representa los valores de <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> de <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with the specified formatting information.">Devuelve la representación de cadena de esta estructura <see cref="T:System.Windows.Vector" /> con la información de formato especificada.</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">Información de formato específica de la referencia cultural.</param>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Cadena que representa los valores de <see cref="P:System.Windows.Vector.X" /> e <see cref="P:System.Windows.Vector.Y" /> de <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary vsli:raw="Gets the length of this vector.">Obtiene la longitud de este vector.</summary>
      <returns vsli:raw="The length of this vector.">Longitud de este vector.</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary vsli:raw="Gets the square of the length of this vector.">Obtiene el cuadrado de la longitud de este vector.</summary>
      <returns vsli:raw="The square of the &lt;see cref=&quot;P:System.Windows.Vector.Length&quot; /&gt; of this vector.">Cuadrado de <see cref="P:System.Windows.Vector.Length" /> de este vector.</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector.">Obtiene o establece el componente de <see cref="P:System.Windows.Vector.X" /> de este vector.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector. The default value is 0.">Componente de <see cref="P:System.Windows.Vector.X" /> de este vector. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector.">Obtiene o establece el componente de <see cref="P:System.Windows.Vector.Y" /> de este vector.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector. The default value is 0.">Componente de <see cref="P:System.Windows.Vector.Y" /> de este vector. El valor predeterminado es 0.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Convierte instancias de otros tipos en una colección <see cref="T:System.Windows.Vector" /> y viceversa.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Vector" />.</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Indicates whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Indica si un objeto se puede convertir de un tipo especificado en una instancia de <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Describe la información de contexto de un tipo.</param>
      <param name="sourceType" vsli:raw="The source &lt;see cref=&quot;T:System.Type&quot; /&gt; that is being queried for conversion support.">Objeto <see cref="T:System.Type" /> de origen que se consulta para la compatibilidad de conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if objects of the specified type can be converted to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los objetos del tipo especificado se puede convertir en un objeto <see cref="T:System.Windows.Vector" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to the specified type.">Determina si las instancias de <see cref="T:System.Windows.Vector" /> se pueden convertir al tipo especificado.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Describe la información de contexto de un tipo.</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; is being evaluated for conversion.">Tipo deseado de este <see cref="T:System.Windows.Vector" /> que se está evaluando para la conversión.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se pueden convertir las instancias de <see cref="T:System.Windows.Vector" /> en <paramref name="destinationType" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Convierte el objeto especificado en un tipo de datos <see cref="T:System.Windows.Vector" />.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Describe la información de contexto de un tipo.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Describe el objeto <see cref="T:System.Globalization.CultureInfo" /> del tipo que se va a convertir.</param>
      <param name="value" vsli:raw="The object being converted.">Objeto que se convertirá.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">Objeto <see cref="T:System.Windows.Vector" /> creado a partir de la conversión de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to the specified type.">Convierte la instancia especificada de <see cref="T:System.Windows.Vector" /> en el tipo especificado.</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">Describe la información de contexto de un tipo.</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">Describe el objeto <see cref="T:System.Globalization.CultureInfo" /> del tipo que se va a convertir.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to convert.">Valor <see cref="T:System.Windows.Vector" /> que se va a convertir.</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to.">Tipo en el que convertir <see cref="T:System.Windows.Vector" />.</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">Objeto que se crea a partir de la conversión de esta instancia de <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary vsli:raw="Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.">Proporciona una clase base para el administrador de eventos que se usa en el modelo de evento débil. El administrador agrega y quita los agentes de escucha para los eventos (o las devoluciones de llamada) que también usan el modelo.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary vsli:raw="Initializes base class values when it is used as the initializer by the constructor of a derived class.">Inicializa los valores de la clase base cuando el constructor de una clase derivada los usa como inicializador.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary vsli:raw="Delivers the event being managed to each listener.">Entrega el evento que se administra a cada agente de escucha.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">Objeto en el que se administra el evento.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data for the event to deliver.">
        <see cref="T:System.EventArgs" /> que contiene los datos que el evento va a entregar.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Delivers the event being managed to each listener in the provided list.">Entrega el evento que se administra a cada agente de escucha en la lista proporcionada.</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">Objeto en el que se administra el evento.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
      <param name="list" vsli:raw="The provided &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" /> proporcionado.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation that is used for the provided type.">Devuelve la implementación de <see cref="T:System.Windows.WeakEventManager" /> que se usa para el tipo proporcionado.</summary>
      <param name="managerType" vsli:raw="The type to obtain the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; for.">Tipo para el que se obtiene <see cref="T:System.Windows.WeakEventManager" />.</param>
      <returns vsli:raw="The matching &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation.">Implementación de <see cref="T:System.Windows.WeakEventManager" /> correspondiente.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Devuelve un nuevo objeto para contener agentes de escucha para un evento.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Nuevo objeto para contener agentes de escucha para un evento.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds the specified delegate as an event handler of the specified source.">Agrega el delegado especificado como controlador de eventos del origen especificado.</summary>
      <param name="source" vsli:raw="The source object that the handler delegate subscribes to.">El objeto de origen al que el delegado de controlador se suscribe.</param>
      <param name="handler" vsli:raw="The delegate that handles the event that is raised by &lt;paramref name=&quot;source&quot; /&gt;.">Delegado que controla el evento generado por <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the provided listener to the provided source for the event being managed.">Agrega el agente de escucha proporcionado al origen proporcionado para el evento que se administra.</summary>
      <param name="source" vsli:raw="The source to attach listeners to.">Origen al que se asocian los agentes de escucha.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">Clase que realiza las escuchas (que debe implementar <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes the previously added handler from the specified source.">Quita el controlador agregado anteriormente del origen especificado.</summary>
      <param name="source" vsli:raw="The source to remove the handler from.">Origen del que se va a quitar el controlador.</param>
      <param name="handler" vsli:raw="The delegate to remove from &lt;paramref name=&quot;source&quot; /&gt;.">Delegado que se va a quitar de <paramref name="source" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes a previously added listener from the provided source.">Quita un agente de escucha previamente agregado del origen proporcionado.</summary>
      <param name="source" vsli:raw="The source to remove listeners from.">Origen del que se quitan los agentes de escucha.</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">Clase que realiza las escuchas (que debe implementar <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes inactive listener entries from the data list for the provided source. Returns &lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed from the list.">Quita las entradas del agente de escucha inactivas de la lista de datos para el origen proporcionado. Devuelve <see langword="true" /> si se quitaron realmente algunas entradas de la lista.</summary>
      <param name="source" vsli:raw="The source for events being listened to.">Origen de los eventos que se escuchan.</param>
      <param name="data" vsli:raw="The data to check. This object is expected to be a &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; implementation.">Datos que se van a comprobar. Se espera que este objeto sea una implementación de <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
      <param name="purgeAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to stop listening to &lt;paramref name=&quot;source&quot; /&gt;, and completely remove all entries from &lt;paramref name=&quot;data&quot; /&gt;.">Es <see langword="true" /> para dejar de escuchar a <paramref name="source" /> y quitar completamente todas las entradas de <paramref name="data" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se han quitado realmente algunas entradas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary vsli:raw="Removes all listeners for the specified source.">Quita todos los agentes de escucha del origen especificado.</summary>
      <param name="source" vsli:raw="The source to remove listener information for.">Origen del que se quita la información del agente de escucha.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary vsli:raw="Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.">Solicita que se realice una purga de entradas no usadas en la lista de agentes de escucha subyacente en un subproceso de menor prioridad.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary vsli:raw="Sets the current manager for the specified manager type.">Establece el administrador actual para el tipo de administrador especificado.</summary>
      <param name="managerType" vsli:raw="The type to set the new event manager.">Tipo en el que se establece el nuevo administrador de eventos.</param>
      <param name="manager" vsli:raw="The new event manager.">Nuevo administrador del evento.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, starts listening for the event being managed. After the &lt;see cref=&quot;M:System.Windows.WeakEventManager.StartListening(System.Object)&quot; /&gt; method is first called, the manager should be in the state of calling &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)&quot; /&gt; whenever the relevant event from the provided source is handled.">Cuando se invalida en una clase derivada, inicia la escucha para el evento que se administra. Después de llamar al método <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" /> por primera vez, el administrador debe estar en el estado de llamar a <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> o <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" /> cada vez que se administre el evento pertinente del origen proporcionado.</summary>
      <param name="source" vsli:raw="The source to begin listening on.">Origen en el que se empiezan a realizar escuchas.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, stops listening on the provided source for the event being managed.">Cuando se invalida en una clase derivada, deja de realizar escuchas en el origen proporcionado para el evento que se administra.</summary>
      <param name="source" vsli:raw="The source to stop listening on.">Origen en el que se dejan de realizar escuchas.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary vsli:raw="Gets or sets the data being stored for the specified source.">Obtiene o establece los datos que se almacenan para el origen especificado.</summary>
      <param name="source" vsli:raw="The zero-based index of the requested source.">Índice de base cero del origen solicitado.</param>
      <returns vsli:raw="Data being stored by the manager for this source.">Datos que almacena el administrador para este origen.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary vsli:raw="Establishes a read-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Establece un bloqueo de lectura en la tabla de datos subyacente y devuelve <see cref="T:System.IDisposable" />.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Objeto que puede usarse para establecer un bloqueo en los miembros de la tabla de datos y, a continuación, eliminarse correctamente con una construcción <see langword="using" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary vsli:raw="Establishes a write-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">Establece un bloqueo de escritura en la tabla de datos subyacente y devuelve <see cref="T:System.IDisposable" />.</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">Objeto que puede usarse para establecer un bloqueo en los miembros de la tabla de datos y, a continuación, eliminarse correctamente con una construcción <see langword="using" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary vsli:raw="Provides a built-in collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">Proporciona una lista de colecciones integrada para almacenar los agentes de escucha de <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class with the specified initial capacity.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.WeakEventManager.ListenerList" /> con la capacidad inicial especificada.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">Número de elementos que se deben asignar en la lista inicial.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt; object to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Agrega un objeto <see cref="T:System.Windows.IWeakEventListener" /> a la clase <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The listener element to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Elemento del agente de escucha que se agrega a <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary vsli:raw="Adds an event handler to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Agrega un controlador de eventos al <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Controlador de eventos que se va a agregar al <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary vsli:raw="Declares the list to be in use. This prevents direct changes to the list during iterations of the list items.">Declara la lista para que esté en uso. Esto evita los cambios directos a la lista durante las iteraciones de los elementos de lista.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list was already declared to be in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se declaró que la lista ya está en uso; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Crea un clon modificable de esta <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="A modifiable clone of the current object.">Clon modificable del objeto actual.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Copies the current &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Copia el valor <see cref="T:System.Windows.WeakEventManager.ListenerList" /> actual especificado al <see cref="T:System.Windows.WeakEventManager.ListenerList" /> especificado.</summary>
      <param name="newList" vsli:raw="The object to copy to.">El objeto en el que se copia.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Entrega el evento que se administra a cada agente de escucha en el <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">El objeto que ha generado el evento.</param>
      <param name="args" vsli:raw="An object that contains the event data.">Objeto que contiene los datos del evento.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">Tipo de la clase <see cref="T:System.Windows.WeakEventManager" /> que llama a este método.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cualquiera de los agentes de escucha de <see cref="T:System.Windows.WeakEventManager.ListenerList" /> hace referencia a un objeto cuyos elementos no utilizados se han recolectado; si no, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary vsli:raw="Unlocks the locked state initiated by &lt;see cref=&quot;M:System.Windows.WeakEventManager.ListenerList.BeginUse&quot; /&gt;.">Desbloquea el estado bloqueado iniciado por <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary vsli:raw="Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.">Comprueba si la lista proporcionada está en uso y, en tal caso, establece el parámetro de referencia de la lista en una copia de esa lista, no en el original.</summary>
      <param name="list" vsli:raw="The list to check for use state and potentially copy.">Lista en la que se comprueba el estado de uso y, posiblemente, la copia.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided list was in use at the time of call and therefore the &lt;paramref name=&quot;list&quot; /&gt; parameter reference was reset to be a copy. &lt;see langword=&quot;false&quot; /&gt; if the provided list was not in use, in which case the &lt;paramref name=&quot;list&quot; /&gt; parameter reference remains unaltered.">
        <see langword="true" /> si la lista proporcionada estaba en uso en el momento de la llamada y, por consiguiente, la referencia del parámetro <paramref name="list" /> se restableció como una copia. <see langword="false" /> si la lista proporcionada no estaba en uso, en cuyo caso la referencia del parámetro <paramref name="list" /> se mantiene sin cambios.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary vsli:raw="Removes all entries from the list where the underlying reference target is a null reference.">Quita todas las entradas de la lista en las que el destino de la referencia subyacente es una referencia nula.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if any entries were purged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Devuelve <see langword="true" /> si se purgó cualquier entrada; de lo contrario, devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the first occurrence of a listener item from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Quita la primera aparición de un elemento de agente de escucha de <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener" vsli:raw="The item to remove.">Elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary vsli:raw="Removes an event handler from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Quita un controlador de eventos de <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="handler" vsli:raw="The event handler to remove from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Controlador de eventos se va a quitar del <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Obtiene el número de elementos contenidos en <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">Número de elementos contenidos en <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary vsli:raw="Gets a value that represents an empty list for purposes of comparisons.">Obtiene un valor que representa una lista vacía para fines de comparación.</summary>
      <returns vsli:raw="The empty list representation.">Representación de la lista vacía.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary vsli:raw="Gets a value that declares whether this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; is empty.">Obtiene un valor que declara si este objeto <see cref="T:System.Windows.WeakEventManager.ListenerList" /> está vacío.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la lista está vacía; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a specific listener item in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; .">Obtiene o establece un elemento de agente de escucha concreto en <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the listener in the list.">Índice de base cero del agente de escucha en la lista.</param>
      <returns vsli:raw="The item at that index, or a null reference if no item was at that index.">El elemento que está en ese índice o una referencia nula si no hay ningún elemento en ese índice.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary vsli:raw="Provides a type-safe collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;. This class defines a type parameter for the event data that is used.">Proporciona una lista de colecciones de seguridad de tipos para almacenar los agentes de escucha de <see cref="T:System.Windows.WeakEventManager" />. Esta clase define un parámetro de tipo para los datos de eventos que se usan.</summary>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">Tipo que contiene los datos de eventos.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class with the specified initial capacity.">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> con la capacidad inicial especificada.</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">Número de elementos que se deben asignar en la lista inicial.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;, making deep copies of the values.">Crea un clon modificable de este objeto <see cref="T:System.Windows.WeakEventManager.ListenerList" /> y hace copias en profundidad de los valores.</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property will be &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property was &lt;see langword=&quot;true&quot; /&gt;.">Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt;.">Entrega el evento que se administra a cada agente de escucha en el <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.</summary>
      <param name="sender" vsli:raw="The object that raised the event.">El objeto que ha generado el evento.</param>
      <param name="e" vsli:raw="An object that contains the event data.">Objeto que contiene los datos del evento.</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">Tipo de la clase <see cref="T:System.Windows.WeakEventManager" /> que llama a este método.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cualquiera de los agentes de escucha de <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> hace referencia a un objeto cuyos elementos no utilizados se han recolectado; si no, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary vsli:raw="Provides a type-safe &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that enables you to specify the event handler to use for the &quot;weak event listener&quot; pattern. This class defines a type parameter for the source of the event and a type parameter for the event data that is used.">Proporciona un <see cref="T:System.Windows.WeakEventManager" /> con seguridad de tipos que permite especificar el controlador de eventos que se va a usar para el modelo de “agente de escucha de evento débil”. Esta clase define un parámetro de tipo para el origen del evento y un parámetro de tipo para los datos de eventos que se usan.</summary>
      <typeparam name="TEventSource" vsli:raw="The type that raises the event.">Tipo que genera el evento.</typeparam>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">Tipo que contiene los datos de eventos.</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Adds the specified event handler to the specified event.">Agrega el controlador de eventos especificado al evento especificado.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">Objeto de origen que provoca el evento especificado.</param>
      <param name="eventName" vsli:raw="The name of the event to subscribe to.">Nombre del evento para la suscripción.</param>
      <param name="handler" vsli:raw="The delegate that handles the event.">Delegado que controla el evento.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">Devuelve un nuevo objeto para contener agentes de escucha para un evento.</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">Nuevo objeto para contener agentes de escucha para un evento.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Removes the specified event handler from the specified event.">Quita el controlador de eventos especificado del evento indicado.</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">Objeto de origen que provoca el evento especificado.</param>
      <param name="eventName" vsli:raw="The name of the event to remove the handler from.">Nombre del evento que se va a eliminar del controlador.</param>
      <param name="handler" vsli:raw="The delegate to remove.">Delegado que se va a quitar.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary vsli:raw="Starts listening for the event on the specified object.">Inicia la escucha del evento en el objeto especificado.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">Objeto que genera el evento.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the event on the specified object.">Detiene la escucha del evento en el objeto especificado.</summary>
      <param name="source" vsli:raw="The object to that raises the event.">Objeto que genera el evento.</param>
    </member>
  </members>
</doc>