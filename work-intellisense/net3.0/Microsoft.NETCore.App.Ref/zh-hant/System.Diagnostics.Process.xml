<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Process</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeProcessHandle">
      <summary>提供處理序控制代碼的受控包裝函式。</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeProcessHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>從指定的控制代碼初始化 <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> 類別的新執行個體，指出是否要在結束階段釋放控制代碼。</summary>
      <param name="existingHandle">要包裝的控制代碼。</param>
      <param name="ownsHandle">
        <see langword="true" /> 表示確實讓 <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> 在結束階段釋放控制代碼；否則為 <see langword="false" />。</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeProcessHandle.IsInvalid" />
    <member name="T:System.Diagnostics.DataReceivedEventArgs">
      <summary>提供 <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> 和 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 事件的資料。</summary>
    </member>
    <member name="P:System.Diagnostics.DataReceivedEventArgs.Data">
      <summary>取得已寫入至重新導向 <see cref="T:System.Diagnostics.Process" /> 輸出資料流的字元行。</summary>
      <returns>由關聯的 <see cref="T:System.Diagnostics.Process" /> 寫入至其重新導向的 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 或 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流的字行。</returns>
    </member>
    <member name="T:System.Diagnostics.DataReceivedEventHandler">
      <summary>表示將處理 <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> 的 <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> 事件或 <see cref="T:System.Diagnostics.Process" /> 事件的方法。</summary>
      <param name="sender">事件的來源。</param>
      <param name="e">
        <see cref="T:System.Diagnostics.DataReceivedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Diagnostics.MonitoringDescriptionAttribute">
      <summary>指定屬性或事件的描述。</summary>
    </member>
    <member name="M:System.Diagnostics.MonitoringDescriptionAttribute.#ctor(System.String)">
      <summary>使用指定的描述來初始化 <see cref="T:System.Diagnostics.MonitoringDescriptionAttribute" /> 類別的新執行個體。</summary>
      <param name="description">應用程式定義的描述文字。</param>
    </member>
    <member name="P:System.Diagnostics.MonitoringDescriptionAttribute.Description">
      <summary>取得與監視項目相關的描述文字。</summary>
      <returns>應用程式定義的描述。</returns>
    </member>
    <member name="T:System.Diagnostics.Process">
      <summary>提供對本機和遠端處理序的存取，並讓您能夠啟動和停止本機系統處理序。</summary>
    </member>
    <member name="M:System.Diagnostics.Process.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Process" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.BasePriority">
      <summary>取得相關處理序的基礎優先權 (Base Priority)。</summary>
      <returns>基礎優先權，它是從相關聯處理序的 <see cref="P:System.Diagnostics.Process.PriorityClass" /> 計算出來的。</returns>
      <exception cref="T:System.InvalidOperationException">處理序已經結束。  
 -或-  
 處理序尚未啟動，因此沒有處理序 ID。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginErrorReadLine">
      <summary>在應用程式的重新導向 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流上開始非同步讀取作業。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 屬性為 <see langword="false" />。  
-或- 
非同步讀取作業已在 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流上進行。  
-或- 
同步讀取作業已使用此 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginOutputReadLine">
      <summary>在應用程式的重新導向 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 資料流上開始非同步讀取作業。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 屬性為 <see langword="false" />。  
-或- 
非同步讀取作業已在 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 資料流上進行。  
-或- 
同步讀取作業已使用此 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 資料流。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelErrorRead">
      <summary>在應用程式的重新導向 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流上取消非同步讀取作業。</summary>
      <exception cref="T:System.InvalidOperationException">未因非同步讀取作業之故開啟 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelOutputRead">
      <summary>在應用程式的重新導向 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 資料流上取消非同步讀取作業。</summary>
      <exception cref="T:System.InvalidOperationException">未因非同步讀取作業之故開啟 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 資料流。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Close">
      <summary>釋放與這個元件相關的所有資源。</summary>
    </member>
    <member name="M:System.Diagnostics.Process.CloseMainWindow">
      <summary>關閉有使用者介面的處理序，方法是傳送關閉訊息至其主視窗。</summary>
      <returns>如果已成功傳送關閉訊息，則為 <see langword="true" />；如果相關聯處理序沒有主視窗或主視窗已停用 (例如，如果正在顯示強制回應對話方塊)，則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">處理程序已經結束。  
-或- 
沒有和這個 <see cref="T:System.Diagnostics.Process" /> 物件相關聯的處理序。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Dispose(System.Boolean)">
      <summary>釋放這個處理序使用的所有資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:System.Diagnostics.Process.EnableRaisingEvents">
      <summary>取得或設定是否應該在處理序終止時引發 <see cref="E:System.Diagnostics.Process.Exited" /> 事件。</summary>
      <returns>如果應該在相關聯處理序終止時引發 <see cref="E:System.Diagnostics.Process.Exited" /> 事件 (經由結束或呼叫 <see cref="M:System.Diagnostics.Process.Kill" />)，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。 請注意, <see cref="E:System.Diagnostics.Process.Exited" />即使<see cref="P:System.Diagnostics.Process.EnableRaisingEvents" /><see langword="false" />當進程在使用者執行<see cref="P:System.Diagnostics.Process.HasExited" />檢查期間或之前結束時, 也會引發事件。</returns>
    </member>
    <member name="M:System.Diagnostics.Process.EnterDebugMode">
      <summary>啟用目前執行緒上的原生屬性 <see langword="SeDebugPrivilege" />，將 <see cref="T:System.Diagnostics.Process" /> 元件置於某種狀態，以便與使用特殊模式執行的作業系統處理序互動。</summary>
    </member>
    <member name="E:System.Diagnostics.Process.ErrorDataReceived">
      <summary>發生於應用程式寫入至其重新導向的 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流時。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitCode">
      <summary>取得相關處理序終止時指定的值。</summary>
      <returns>相關處理序終止時指定的程式碼。</returns>
      <exception cref="T:System.InvalidOperationException">遠端處理序尚未結束。  
-或- 
處理序 <see cref="P:System.Diagnostics.Process.Handle" /> 無法使用。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.ExitCode" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
    </member>
    <member name="E:System.Diagnostics.Process.Exited">
      <summary>發生於處理序結束時。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitTime">
      <summary>取得相關的處理序結束的時間。</summary>
      <returns>
        <see cref="T:System.DateTime" />，表示相關聯處理序何時終止。</returns>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.ExitTime" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetCurrentProcess">
      <summary>取得新的 <see cref="T:System.Diagnostics.Process" /> 元件，並將其與目前現用處理序相關聯。</summary>
      <returns>新的 <see cref="T:System.Diagnostics.Process" /> 元件，與正在執行呼叫應用程式的處理序資源相關聯。</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
      <summary>傳回新的 <see cref="T:System.Diagnostics.Process" /> 元件，需指定本機電腦上的處理序識別項。</summary>
      <param name="processId">處理序資源的系統唯一識別項。</param>
      <returns>
        <see cref="T:System.Diagnostics.Process" /> 元件，與 <paramref name="processId" /> 參數所識別的本機處理序資源相關聯。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="processId" /> 參數指定的處理序未執行。 識別項可能過期。</exception>
      <exception cref="T:System.InvalidOperationException">這個物件未啟動處理序。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
      <summary>傳回新的 <see cref="T:System.Diagnostics.Process" /> 元件，需指定網路上電腦的處理序識別項和名稱。</summary>
      <param name="processId">處理序資源的系統唯一識別項。</param>
      <param name="machineName">網路上的電腦名稱。</param>
      <returns>
        <see cref="T:System.Diagnostics.Process" /> 元件，與 <paramref name="processId" /> 參數所識別的遠端處理序資源相關聯。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="processId" /> 參數指定的處理序未執行。 識別項可能過期。  
-或- 
<paramref name="machineName" /> 參數的語法無效。 其長度有可能為零 (0)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">這個物件未啟動處理序。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses">
      <summary>為本機電腦上的每個處理序資源建立新的 <see cref="T:System.Diagnostics.Process" /> 元件。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Process" /> 類型的陣列，代表正在本機電腦上執行的所有處理序資源。</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses(System.String)">
      <summary>為指定電腦上的每個處理序資源建立新的 <see cref="T:System.Diagnostics.Process" /> 元件。</summary>
      <param name="machineName">要讀取處理序清單的電腦。</param>
      <returns>
        <see cref="T:System.Diagnostics.Process" /> 類型的陣列，代表正在指定的電腦上執行的所有處理序資源。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 參數的語法無效。 其長度有可能為零 (0)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.PlatformNotSupportedException">作業系統平台不支援遠端電腦上的這項作業。</exception>
      <exception cref="T:System.InvalidOperationException">存取 API 用來取得處理序資訊的效能計數器時發生問題。 此為 Windows NT、Windows 2000 和 Windows XP 的特有例外狀況。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取基礎系統 API 時發生問題。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
      <summary>建立新 <see cref="T:System.Diagnostics.Process" /> 元件的陣列，並將其與本機電腦上共用指定處理序名稱的所有處理序資源相關聯。</summary>
      <param name="processName">處理序的易記名稱。</param>
      <returns>
        <see cref="T:System.Diagnostics.Process" /> 類型的陣列，代表正在執行指定的應用程式或檔案的處理序資源。</returns>
      <exception cref="T:System.InvalidOperationException">存取 API 用來取得處理序資訊的效能計數器時發生問題。 此為 Windows NT、Windows 2000 和 Windows XP 的特有例外狀況。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
      <summary>建立新 <see cref="T:System.Diagnostics.Process" /> 元件的陣列，並將其與遠端電腦上共用指定處理序名稱的所有處理序資源相關聯。</summary>
      <param name="processName">處理序的易記名稱。</param>
      <param name="machineName">網路上的電腦名稱。</param>
      <returns>
        <see cref="T:System.Diagnostics.Process" /> 類型的陣列，代表正在執行指定的應用程式或檔案的處理序資源。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 參數的語法無效。 其長度有可能為零 (0)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="machineName" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.PlatformNotSupportedException">作業系統平台不支援遠端電腦上的這項作業。</exception>
      <exception cref="T:System.InvalidOperationException">嘗試連線到 <paramref name="machineName" /> 失敗。
-或- 
存取 API 用來取得處理序資訊的效能計數器時發生問題。 此為 Windows NT、Windows 2000 和 Windows XP 的特有例外狀況。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">存取基礎系統 API 時發生問題。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Handle">
      <summary>取得相關處理序的原生控制代碼。</summary>
      <returns>處理序啟動時，作業系統指派給相關處理序的控制代碼。 系統會用這個控制代碼追蹤處理序屬性。</returns>
      <exception cref="T:System.InvalidOperationException">處理序尚未啟動或已結束。 無法讀取 <see cref="P:System.Diagnostics.Process.Handle" /> 屬性，因為沒有與此 <see cref="T:System.Diagnostics.Process" /> 執行個體相關聯的處理序。  
-或- 
<see cref="T:System.Diagnostics.Process" /> 執行個體已附加至執行中的處理序，但沒有取得具有完整存取權限之控制代碼的必要權限。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.Handle" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.HandleCount">
      <summary>取得處理序開啟的控制代碼數目。</summary>
      <returns>處理序已開啟的作業系統控制代碼數目。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.HasExited">
      <summary>取得值，指出相關的處理序是否已經終止。</summary>
      <returns>如果 <see cref="T:System.Diagnostics.Process" /> 元件所參考的作業系統處理序已終止，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">沒有與這個物件關聯的處理序。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">無法擷取處理序的結束代碼。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.HasExited" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Id">
      <summary>取得相關處理序的唯一識別項。</summary>
      <returns>這個 <see cref="T:System.Diagnostics.Process" /> 執行個體所參考的處理序之系統產生的唯一識別項。</returns>
      <exception cref="T:System.InvalidOperationException">處理序的 <see cref="P:System.Diagnostics.Process.Id" /> 屬性未設定。  
-或- 
沒有任何與這個 <see cref="T:System.Diagnostics.Process" /> 物件關聯的處理序。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill">
      <summary>立即停止相關的處理序。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">相關的處理序無法終止。  
 -或-  
 正在結束處理序。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試為遠端電腦上執行的處理序呼叫 <see cref="M:System.Diagnostics.Process.Kill" />。 這個方法僅供在本機電腦執行的處理序使用。</exception>
      <exception cref="T:System.InvalidOperationException">處理程序已經結束。  
-或- 
沒有任何與這個 <see cref="T:System.Diagnostics.Process" /> 物件關聯的處理序。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill(System.Boolean)">
      <summary>立即停止關聯的處理序，並選擇性地停止其子處理序。</summary>
      <param name="entireProcessTree">
        <see langword="true" /> 表示終止關聯的處理序及其子系；<see langword="false" /> 表示僅終止關聯的處理序。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">相關的處理序無法終止。  
 -或-  
 正在結束處理序。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試為遠端電腦上執行的處理序呼叫 <see cref="M:System.Diagnostics.Process.Kill" />。 這個方法僅供在本機電腦執行的處理序使用。</exception>
      <exception cref="T:System.InvalidOperationException">處理程序已經結束。  
-或- 
沒有任何與這個 <see cref="T:System.Diagnostics.Process" /> 物件關聯的處理序。
-或-
呼叫處理序是關聯處理序的子樹狀目錄成員。</exception>
      <exception cref="T:System.AggregateException">關聯處理序的子樹狀目錄中並非所有處理序都可終止。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.LeaveDebugMode">
      <summary>讓 <see cref="T:System.Diagnostics.Process" /> 元件離開可與使用特殊模式執行的作業系統處理序互動的狀態。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.MachineName">
      <summary>取得相關處理序正在執行的所在電腦的名稱。</summary>
      <returns>相關處理序正在執行的所在電腦的名稱。</returns>
      <exception cref="T:System.InvalidOperationException">沒有任何與這個 <see cref="T:System.Diagnostics.Process" /> 物件關聯的處理序。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainModule">
      <summary>取得相關處理序的主要模組。</summary>
      <returns>
        <see cref="T:System.Diagnostics.ProcessModule" />，用來啟動處理序。</returns>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.MainModule" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">32 位元處理序正嘗試存取 64 位元處理序的模組。</exception>
      <exception cref="T:System.InvalidOperationException">處理序 <see cref="P:System.Diagnostics.Process.Id" /> 無法使用。  
-或- 
處理序已經結束。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowHandle">
      <summary>取得相關處理序主視窗的視窗控制代碼。</summary>
      <returns>由系統產生之相關處理序主視窗的視窗控制代碼。</returns>
      <exception cref="T:System.InvalidOperationException">因為處理序已經結束，所以未定義 <see cref="P:System.Diagnostics.Process.MainWindowHandle" />。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowTitle">
      <summary>取得處理序的主視窗標題。</summary>
      <returns>處理序的主視窗標題。</returns>
      <exception cref="T:System.InvalidOperationException">因為處理序已經結束，所以未定義 <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> 屬性。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MaxWorkingSet">
      <summary>取得或設定關聯的處理序所允許的工作集大小上限，以位元組為單位。</summary>
      <returns>處理序所需記憶體中工作集大小的最大值，以位元組 (Byte) 為單位。</returns>
      <exception cref="T:System.ArgumentException">工作集大小上限無效。 必須大於或等於工作集大小下限。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">無法從關聯的處理序資源擷取工作集資訊。  
 -或-  
 處理序識別碼或處理序控制代碼為零，因為尚未啟動處理序。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.MaxWorkingSet" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
      <exception cref="T:System.InvalidOperationException">處理序 <see cref="P:System.Diagnostics.Process.Id" /> 無法使用。  
-或- 
處理序已經結束。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MinWorkingSet">
      <summary>取得或設定關聯的處理序所允許的工作集大小下限，以位元組為單位。</summary>
      <returns>處理序所需記憶體中工作集大小的最小值，以位元組 (Byte) 為單位。</returns>
      <exception cref="T:System.ArgumentException">工作集大小下限無效。 必須小於或等於工作集大小上限。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">無法從關聯的處理序資源擷取工作集資訊。  
 -或-  
 處理序識別碼或處理序控制代碼為零，因為尚未啟動處理序。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.MinWorkingSet" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
      <exception cref="T:System.InvalidOperationException">處理序 <see cref="P:System.Diagnostics.Process.Id" /> 無法使用。  
-或- 
處理序已經結束。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Modules">
      <summary>取得相關的處理序所載入的模組。</summary>
      <returns>
        <see cref="T:System.Diagnostics.ProcessModule" /> 類型的陣列，代表相關聯處理序所載入的模組。</returns>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.Modules" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
      <exception cref="T:System.InvalidOperationException">處理序 <see cref="P:System.Diagnostics.Process.Id" /> 無法使用。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">您嘗試存取系統處理序或閒置處理序的 <see cref="P:System.Diagnostics.Process.Modules" /> 屬性。 這些程序並沒有模組。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
      <summary>取得配置給關聯處理序的未分頁系統記憶體量 (以位元組為單位)。</summary>
      <returns>記憶體量 (以位元組為單位)，指系統已配置給不能寫入虛擬記憶體分頁檔案之關聯處理序的記憶體。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
      <summary>取得配置給關聯處理序的未分頁系統記憶體量 (以位元組為單位)。</summary>
      <returns>配置給關聯處理序的系統記憶體量 (以位元組為單位)，不能寫入虛擬記憶體分頁檔案。</returns>
    </member>
    <member name="M:System.Diagnostics.Process.OnExited">
      <summary>引發 <see cref="E:System.Diagnostics.Process.Exited" /> 事件。</summary>
    </member>
    <member name="E:System.Diagnostics.Process.OutputDataReceived">
      <summary>發生於應用程式將某行寫入至其重新導向的 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 資料流時。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize">
      <summary>取得配置給關聯處理序的分頁記憶體量 (以位元組為單位)。</summary>
      <returns>記憶體量 (以位元組為單位)，指由關聯的處理序所配置，且可以寫入虛擬記憶體分頁檔案的記憶體。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize64">
      <summary>取得配置給關聯處理序的分頁記憶體量 (以位元組為單位)。</summary>
      <returns>虛擬記憶體分頁檔案中，配置給關聯處理序的記憶體量 (以位元組為單位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize">
      <summary>取得配置給關聯處理序的可分頁系統記憶體量 (以位元組為單位)。</summary>
      <returns>記憶體量 (以位元組為單位)，指系統已配置給可以寫入虛擬記憶體分頁檔案之關聯處理序的記憶體。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize64">
      <summary>取得配置給關聯處理序的可分頁系統記憶體量 (以位元組為單位)。</summary>
      <returns>配置給關聯處理序的系統記憶體量 (以位元組為單位)，可以寫入虛擬記憶體分頁檔案。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize">
      <summary>取得關聯處理序所使用之虛擬記憶體分頁檔的最大記憶體量 (以位元組為單位)。</summary>
      <returns>最大記憶體量 (以位元組為單位)，指由關聯的處理序配置給可以寫入虛擬記憶體分頁檔案的記憶體。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize64">
      <summary>取得關聯處理序所使用之虛擬記憶體分頁檔的最大記憶體量 (以位元組為單位)。</summary>
      <returns>虛擬記憶體分頁檔案中，從啟動以來配置給關聯處理序的最大記憶體量 (以位元組為單位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize">
      <summary>取得關聯處理序所使用最大虛擬記憶體量 (以位元組為單位)。</summary>
      <returns>最大虛擬記憶體量 (以位元組為單位)，指關聯的處理序所要求的記憶體。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
      <summary>取得關聯處理序所使用最大虛擬記憶體量 (以位元組為單位)。</summary>
      <returns>從啟動以來配置給關聯處理序的最大虛擬記憶體量 (以位元組為單位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet">
      <summary>取得相關處理序工作集大小的最大值 (位元組)。</summary>
      <returns>最大實體記憶體數量，為相關的處理序一次所需的量 (位元組)，</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet64">
      <summary>取得關聯處理序所使用最大實體記憶體量 (以位元組為單位)。</summary>
      <returns>從啟動以來配置給關聯處理序的最大實體記憶體量 (以位元組為單位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityBoostEnabled">
      <summary>取得或設定值，指出作業系統是否應該在主視窗有焦點 (Focus) 時，暫時提高相關的處理序優先權。</summary>
      <returns>當處理序離開等候狀態時，如果應動態提高處理序優先權，則為<see langword="true" /> ，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">無法從關聯的處理序資源擷取優先權提升資訊。</exception>
      <exception cref="T:System.PlatformNotSupportedException">處理序識別碼或處理序控制代碼為零。 (尚未啟動處理序)。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
      <exception cref="T:System.InvalidOperationException">處理序 <see cref="P:System.Diagnostics.Process.Id" /> 無法使用。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityClass">
      <summary>取得或設定相關處理序的整體優先權分類。</summary>
      <returns>相關聯處理序的優先權分類，處理序的 <see cref="P:System.Diagnostics.Process.BasePriority" /> 由此計算出來。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">無法設定處理序優先順序的資訊，或從相關聯的處理序資源擷取。  
 -或-  
 處理序識別碼或處理序控制代碼為零。 (尚未啟動處理序)。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.PriorityClass" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
      <exception cref="T:System.InvalidOperationException">處理序 <see cref="P:System.Diagnostics.Process.Id" /> 無法使用。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">無法設定優先權類別，因為它不使用如 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 列舉類型中所定義的有效值。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize">
      <summary>取得配置給關聯處理序的私用記憶體量 (以位元組為單位)。</summary>
      <returns>相關的處理序配置的位元組數目，不能與其他處理序共用。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize64">
      <summary>取得配置給關聯處理序的私用記憶體量 (以位元組為單位)。</summary>
      <returns>配置給關聯處理序的記憶體量 (以位元組為單位)，不能與其他處理序共用。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivilegedProcessorTime">
      <summary>取得這個處理序使用處理器的授權時間。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，表示處理序在作業系統核心內執行程式碼所花費的時間。</returns>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessName">
      <summary>取得處理序的名稱。</summary>
      <returns>名稱，系統用來向使用者識別處理序。</returns>
      <exception cref="T:System.InvalidOperationException">處理序沒有識別項，或沒有處理序與 <see cref="T:System.Diagnostics.Process" /> 相關聯。  
-或- 
關聯處理序已結束。</exception>
      <exception cref="T:System.NotSupportedException">處理序不在這部電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessorAffinity">
      <summary>取得或設定處理器，這個處理序中的執行緒可以在其上排程執行。</summary>
      <returns>位元遮罩，表示相關的處理序中的執行緒可以在其上執行的處理器。 預設值取決於電腦上的處理器數目。 預設值為 2 n -1, 其中 n 是處理器的數目。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">
        <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> 資訊無法設定或從相關聯的處理序資源擷取。  
-或- 
處理序識別碼或處理序控制代碼為零。 (尚未啟動處理序)。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
      <exception cref="T:System.InvalidOperationException">處理序 <see cref="P:System.Diagnostics.Process.Id" /> 無法使用。  
-或- 
處理序已經結束。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Refresh">
      <summary>捨棄快取於處理序元件內之相關處理序的任何資訊。</summary>
    </member>
    <member name="P:System.Diagnostics.Process.Responding">
      <summary>取得值，指出處理序的使用者介面是否正在回應。</summary>
      <returns>如果相關聯處理序的使用者介面正在回應系統，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">沒有任何與這個 <see cref="T:System.Diagnostics.Process" /> 物件關聯的處理序。</exception>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.Responding" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SafeHandle">
      <summary>取得這個處理序的原生控制代碼。</summary>
      <returns>這個處理序的原生控制代碼。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.SessionId">
      <summary>取得相關處理序的終端機服務工作階段識別項。</summary>
      <returns>相關處理序的終端機服務工作階段識別項。</returns>
      <exception cref="T:System.NullReferenceException">沒有與此處理序相關聯的工作階段。</exception>
      <exception cref="T:System.InvalidOperationException">沒有與這個工作階段識別項相關聯的處理序。  
 -或-  
 相關的處理序不在此機器上。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardError">
      <summary>取得用來讀取應用程式錯誤輸出的資料流。</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" />，可用來讀取應用程式的標準錯誤資料流。</returns>
      <exception cref="T:System.InvalidOperationException">尚未針對重新導向定義 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流；請確定已將 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 設為 <see langword="true" />，且將 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 設為 <see langword="false" />。  
-或- 
已開啟 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流，用於搭配 <see cref="M:System.Diagnostics.Process.BeginErrorReadLine" /> 的非同步讀取作業。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardInput">
      <summary>取得用來寫入應用程式輸入的資料流。</summary>
      <returns>
        <see cref="T:System.IO.StreamWriter" />，可用來寫入應用程式的標準輸入資料流。</returns>
      <exception cref="T:System.InvalidOperationException">尚未定義 <see cref="P:System.Diagnostics.Process.StandardInput" /> 資料流，因為 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /> 已設定為 <see langword="false" />。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardOutput">
      <summary>取得用來讀取應用程式文字輸出的資料流。</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" />，可用來讀取應用程式的標準輸出資料流。</returns>
      <exception cref="T:System.InvalidOperationException">尚未針對重新導向定義 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 資料流；請確定已將 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 設為 <see langword="true" />，且將 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 設為 <see langword="false" />。  
-或- 
已開啟 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 資料流，用於搭配 <see cref="M:System.Diagnostics.Process.BeginOutputReadLine" /> 的非同步讀取作業。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start">
      <summary>啟動 (或重複使用) 這個 <see cref="T:System.Diagnostics.Process" /> 元件的 <see cref="P:System.Diagnostics.Process.StartInfo" /> 屬性指定的處理序資源，並將其與元件相關聯。</summary>
      <returns>如果啟動處理序資源，則為 <see langword="true" />；如果沒有啟動任何新的處理序資源 (例如，如果重複使用現有的處理序)，則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">在 <see cref="T:System.Diagnostics.Process" /> 元件的 <see cref="P:System.Diagnostics.Process.StartInfo" /> 中未指定檔案名稱。
或者，<see cref="P:System.Diagnostics.Process.StartInfo" /> 屬性的 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 成員是 <see langword="true" />，而 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />、<see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 或 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 是 <see langword="true" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">開啟關聯檔案時發生錯誤。</exception>
      <exception cref="T:System.ObjectDisposedException">處理序物件已經處置。</exception>
      <exception cref="T:System.PlatformNotSupportedException">此方法在沒有殼層支援的作業系統上不受支援，例如 Nano 伺服器 (僅限 .NET Core)。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
      <summary>啟動含有處理序啟動資訊 (例如，要啟動之處理序的檔名) 的參數所指定的處理序資源，並將該資源與新的 <see cref="T:System.Diagnostics.Process" /> 元件相關聯。</summary>
      <param name="startInfo">
        <see cref="T:System.Diagnostics.ProcessStartInfo" />，包含用來啟動處理序的資訊，包括檔名和任何命令列引數。</param>
      <returns>與處理程序資源關聯的新 <see cref="T:System.Diagnostics.Process" />，或者是 <see langword="null" /> (若未啟動任何處理程序資源)。 請注意，隨著已在執行中之相同處理程序啟動的新處理程序將獨立於其他處理程序之外。 此外，啟動可能會傳回非空值處理程序，且其 <see cref="P:System.Diagnostics.Process.HasExited" /> 屬性會設定為 <see langword="true" />。 在此案例中，已啟動的處理程序可能已啟用本身的現有執行個體並結束。</returns>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="startInfo" /> 參數的 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 屬性沒有指定任何檔案名稱。  
-或- 
<paramref name="startInfo" /> 參數的 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 屬性是 <see langword="true" />，而 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />、<see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> 或 <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> 屬性也是 <see langword="true" />。  
-或- 
<paramref name="startInfo" /> 參數的 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 屬性是 <see langword="true" />，而 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 屬性不是 <see langword="null" /> 或空白，或者 <see cref="P:System.Diagnostics.ProcessStartInfo.Password" /> 屬性不是 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="startInfo" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">處理序物件已經處置。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到 <paramref name="startInfo" /> 參數的 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 屬性中所指定的檔案。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">開啟關聯的檔案時發生錯誤。  
 -或-  
 引數長度和處理序完整路徑長度的總和超過 2080。 與此例外狀況建立關聯的錯誤訊息可以是下列其中一項：「傳遞到系統呼叫的資料區域太小。」 或「拒絕存取」。</exception>
      <exception cref="T:System.PlatformNotSupportedException">此方法在沒有殼層支援的作業系統上不受支援，例如 Nano 伺服器 (僅限 .NET Core)。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String)">
      <summary>藉由指定文件或應用程式檔案的名稱啟動處理序資源，並將該資源與新的 <see cref="T:System.Diagnostics.Process" /> 元件相關聯。</summary>
      <param name="fileName">要在處理序中執行之文件或應用程式檔案的名稱。</param>
      <returns>與處理程序資源關聯的新 <see cref="T:System.Diagnostics.Process" />，或者是 <see langword="null" /> (若未啟動任何處理程序資源)。 請注意，隨著已在執行中之相同處理程序啟動的新處理程序將獨立於其他處理程序之外。 此外，啟動可能會傳回非空值處理程序，且其 <see cref="P:System.Diagnostics.Process.HasExited" /> 屬性會設定為 <see langword="true" />。 在此案例中，已啟動的處理程序可能已啟用本身的現有執行個體並結束。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">開啟關聯的檔案時發生錯誤。</exception>
      <exception cref="T:System.ObjectDisposedException">處理序物件已經處置。</exception>
      <exception cref="T:System.IO.FileNotFoundException">PATH 環境變數具有含引號的字串。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String)">
      <summary>藉由指定應用程式的名稱和一組命令列引數來啟動處理序資源，並將該資源與新的 <see cref="T:System.Diagnostics.Process" /> 元件相關聯。</summary>
      <param name="fileName">要在處理序中執行之應用程式檔案的名稱。</param>
      <param name="arguments">啟動處理程序時要傳遞的命令列引數。</param>
      <returns>與處理程序資源關聯的新 <see cref="T:System.Diagnostics.Process" />，或者是 <see langword="null" /> (若未啟動任何處理程序資源)。 請注意，隨著已在執行中之相同處理程序啟動的新處理程序將獨立於其他處理程序之外。 此外，啟動可能會傳回非空值處理程序，且其 <see cref="P:System.Diagnostics.Process.HasExited" /> 屬性會設定為 <see langword="true" />。 在此案例中，已啟動的處理程序可能已啟用本身的現有執行個體並結束。</returns>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="fileName" /> 或 <paramref name="arguments" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">開啟關聯的檔案時發生錯誤。  
 -或-  
 引數長度和處理序完整路徑長度的總和超過 2080。 與此例外狀況建立關聯的錯誤訊息可以是下列其中一項：「傳遞到系統呼叫的資料區域太小。」 或「拒絕存取」。</exception>
      <exception cref="T:System.ObjectDisposedException">處理序物件已經處置。</exception>
      <exception cref="T:System.IO.FileNotFoundException">PATH 環境變數具有含引號的字串。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
      <summary>藉由指定應用程式的名稱、使用者名稱、密碼和網域來啟動處理序資源，並將該資源與新的 <see cref="T:System.Diagnostics.Process" /> 元件相關聯。</summary>
      <param name="fileName">要在處理序中執行之應用程式檔案的名稱。</param>
      <param name="userName">要在啟動處理序時使用的使用者名稱。</param>
      <param name="password">
        <see cref="T:System.Security.SecureString" />，包含啟動處理序時要使用的密碼。</param>
      <param name="domain">要在啟動處理序時使用的網域。</param>
      <returns>與處理程序資源關聯的新 <see cref="T:System.Diagnostics.Process" />，或者是 <see langword="null" /> (若未啟動任何處理程序資源)。 請注意，隨著已在執行中之相同處理程序啟動的新處理程序將獨立於其他處理程序之外。 此外，啟動可能會傳回非空值處理程序，且其 <see cref="P:System.Diagnostics.Process.HasExited" /> 屬性會設定為 <see langword="true" />。 在此案例中，已啟動的處理程序可能已啟用本身的現有執行個體並結束。</returns>
      <exception cref="T:System.InvalidOperationException">未指定檔案名稱。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">開啟關聯檔案時發生錯誤。</exception>
      <exception cref="T:System.ObjectDisposedException">處理序物件已經處置。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Linux 或 macOS 不支援此成員 (僅限 .NET Core)。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
      <summary>藉由指定應用程式的名稱、一組命令列引數、使用者名稱、密碼和網域來啟動處理序資源，並將該資源與新的 <see cref="T:System.Diagnostics.Process" /> 元件相關聯。</summary>
      <param name="fileName">要在處理序中執行之應用程式檔案的名稱。</param>
      <param name="arguments">啟動處理程序時要傳遞的命令列引數。</param>
      <param name="userName">要在啟動處理序時使用的使用者名稱。</param>
      <param name="password">
        <see cref="T:System.Security.SecureString" />，包含啟動處理序時要使用的密碼。</param>
      <param name="domain">要在啟動處理序時使用的網域。</param>
      <returns>與處理程序資源關聯的新 <see cref="T:System.Diagnostics.Process" />，或者是 <see langword="null" /> (若未啟動任何處理程序資源)。 請注意，隨著已在執行中之相同處理程序啟動的新處理程序將獨立於其他處理程序之外。 此外，啟動可能會傳回非空值處理程序，且其 <see cref="P:System.Diagnostics.Process.HasExited" /> 屬性會設定為 <see langword="true" />。 在此案例中，已啟動的處理程序可能已啟用本身的現有執行個體並結束。</returns>
      <exception cref="T:System.InvalidOperationException">未指定檔案名稱。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">開啟關聯的檔案時發生錯誤。  
 -或-  
 引數長度和關聯檔案完整路徑長度的總和超過 2080。 與此例外狀況建立關聯的錯誤訊息可以是下列其中一項：「傳遞到系統呼叫的資料區域太小。」 或「拒絕存取」。</exception>
      <exception cref="T:System.ObjectDisposedException">處理序物件已經處置。</exception>
      <exception cref="T:System.PlatformNotSupportedException">Linux 或 macOS 不支援此成員 (僅限 .NET Core)。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartInfo">
      <summary>取得或設定要傳遞給 <see cref="T:System.Diagnostics.Process" /> 之 <see cref="M:System.Diagnostics.Process.Start" /> 方法的屬性。</summary>
      <returns>
        <see cref="T:System.Diagnostics.ProcessStartInfo" />，代表用來啟動處理序的資料。 這些引數包括用來啟動處理序的可執行檔或文件的名稱。</returns>
      <exception cref="T:System.ArgumentNullException">指定 <see cref="P:System.Diagnostics.Process.StartInfo" /> 的值是 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">沒有使用 <see cref="M:System.Diagnostics.Process.Start" /> 方法啟動處理序。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartTime">
      <summary>取得相關的處理序啟動的時間。</summary>
      <returns>物件，指出處理序何時啟動。 如果處理序並未執行，則會擲回例外狀況。</returns>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.StartTime" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
      <exception cref="T:System.InvalidOperationException">處理序已經結束。  
 -或-  
 尚未啟動處理序。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">呼叫 Windows 函式時發生錯誤。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SynchronizingObject">
      <summary>取得或設定物件，用以封送處理因處理序結束事件而發出的事件處理常式呼叫。</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISynchronizeInvoke" />，用以封送處理因處理序上的 <see cref="E:System.Diagnostics.Process.Exited" /> 事件而發出的事件處理常式呼叫。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.Threads">
      <summary>取得正在相關的處理序中執行的執行緒集。</summary>
      <returns>
        <see cref="T:System.Diagnostics.ProcessThread" /> 類型的陣列，代表目前正在相關聯處理序中執行的作業系統執行緒。</returns>
      <exception cref="T:System.SystemException">處理序沒有 <see cref="P:System.Diagnostics.Process.Id" />，或沒有與 <see cref="T:System.Diagnostics.Process" /> 執行個體關聯的處理序。  
-或- 
關聯處理序已結束。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.ToString">
      <summary>將處理序的名稱格式化為字串，如果適用，將它和父代 (Parent) 元件類型結合。</summary>
      <returns>
        <see cref="P:System.Diagnostics.Process.ProcessName" />，與基底元件的 <see cref="M:System.Object.ToString" /> 傳回值搭配相結合。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.TotalProcessorTime">
      <summary>取得這個處理序的總處理器時間。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，表示相關聯處理序花在使用 CPU 的時間。 這個值是 <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> 和 <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> 的總和。</returns>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.TotalProcessorTime" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.UserProcessorTime">
      <summary>取得這個處理序的使用者處理器時間。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，表示相關聯處理序花在處理序的應用程式部分內 (而不是在作業系統核心內) 執行程式碼的時間。</returns>
      <exception cref="T:System.NotSupportedException">您正在嘗試存取於遠端電腦上執行之處理序的 <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> 屬性。 這個屬性僅供在本機電腦執行的處理序使用。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize">
      <summary>取得處理序的虛擬記憶體的大小 (以位元組為單位)。</summary>
      <returns>虛擬記憶體量 (以位元組為單位)，指關聯的處理序所要求的記憶體。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize64">
      <summary>取得配置給關聯處理序的虛擬記憶體量，以位元組為單位。</summary>
      <returns>配置給關聯處理序的虛擬記憶體量，以位元組為單位。</returns>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit">
      <summary>指示 <see cref="T:System.Diagnostics.Process" /> 元件無限期等候相關聯處理序結束。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">無法存取等候設定。</exception>
      <exception cref="T:System.SystemException">尚未設定任何處理序 <see cref="P:System.Diagnostics.Process.Id" />，而且可從中判斷 <see cref="P:System.Diagnostics.Process.Id" /> 屬性的 <see cref="P:System.Diagnostics.Process.Handle" /> 不存在。  
-或- 
沒有任何與這個 <see cref="T:System.Diagnostics.Process" /> 物件關聯的處理序。  
-或- 
您正在嘗試為遠端電腦上執行的處理序呼叫 <see cref="M:System.Diagnostics.Process.WaitForExit" /> 。 這個方法僅適用於在本機電腦執行的處理序。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
      <summary>指示 <see cref="T:System.Diagnostics.Process" /> 元件等候相關聯處理序結束的指定毫秒數。</summary>
      <param name="milliseconds">等候相關的處理序結束的時間量，以毫秒計算。 最大值是 32 位元整數的最大可能值，對作業系統來說，這表示無限。</param>
      <returns>如果相關聯處理序已結束，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">無法存取等候設定。</exception>
      <exception cref="T:System.SystemException">尚未設定任何處理序 <see cref="P:System.Diagnostics.Process.Id" />，而且可從中判斷 <see cref="P:System.Diagnostics.Process.Id" /> 屬性的 <see cref="P:System.Diagnostics.Process.Handle" /> 不存在。  
-或- 
沒有任何與這個 <see cref="T:System.Diagnostics.Process" /> 物件關聯的處理序。  
-或- 
您正在嘗試為遠端電腦上執行的處理序呼叫 <see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /> 。 這個方法僅適用於在本機電腦執行的處理序。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="milliseconds" /> 為 -1 以外的負數，表示無限逾時。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle">
      <summary>讓 <see cref="T:System.Diagnostics.Process" /> 元件無限期等候相關聯處理序進入閒置狀態。 這個多載只適用於具有使用者介面和訊息迴圈的處理序。</summary>
      <returns>如果相關聯處理序已經達到閒置狀態，則為 <see langword="true" />。</returns>
      <exception cref="T:System.InvalidOperationException">處理序沒有圖形化介面。  
-或- 
發生未知的錯誤。 處理序無法進入閒置狀態。  
-或- 
處理程序已經結束。  
-或- 
沒有和這個 <see cref="T:System.Diagnostics.Process" /> 物件相關聯的處理序。</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
      <summary>讓 <see cref="T:System.Diagnostics.Process" /> 元件等候相關聯處理序進入閒置狀態的指定毫秒數。 這個多載只適用於具有使用者介面和訊息迴圈的處理序。</summary>
      <param name="milliseconds">1 到 <see cref="F:System.Int32.MaxValue" /> 的值，指定等候相關聯處理序變成閒置的時間 (毫秒)。 值為 0 時，指定立即傳回，而值為 -1 時則指定無限期等候。</param>
      <returns>如果相關聯處理序已經達到閒置狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException">處理序沒有圖形化介面。  
-或- 
發生未知的錯誤。 處理序無法進入閒置狀態。  
-或- 
處理程序已經結束。  
-或- 
沒有和這個 <see cref="T:System.Diagnostics.Process" /> 物件相關聯的處理序。</exception>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet">
      <summary>取得相關處理序的實體記憶體使用量 (以位元組為單位)。</summary>
      <returns>相關的處理序正在使用的實體記憶體的總量。</returns>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet64">
      <summary>取得配置給關聯處理序的實體記憶體量，以位元組為單位。</summary>
      <returns>配置給關聯處理序的實體記憶體量，以位元組為單位。</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModule">
      <summary>代表已載入到特定處理序的 .dll 或 .exe 檔案。</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.BaseAddress">
      <summary>取得模組載入處的記憶體位址。</summary>
      <returns>模組的載入位址。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.EntryPointAddress">
      <summary>取得當系統載入並執行模組時執行之函式的記憶體位址。</summary>
      <returns>模組的進入點。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileName">
      <summary>取得模組的完整路徑。</summary>
      <returns>定義模組位置的完整路徑。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileVersionInfo">
      <summary>取得模組的版本資訊。</summary>
      <returns>包含模組版本資訊的 <see cref="T:System.Diagnostics.FileVersionInfo" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleMemorySize">
      <summary>取得載入模組所需的記憶體數量。</summary>
      <returns>模組所佔用的記憶體大小 (以位元組為單位)。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleName">
      <summary>取得處理序模組的名稱。</summary>
      <returns>模組的名稱。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModule.ToString">
      <summary>將模組的名稱轉換為字串。</summary>
      <returns>
        <see cref="P:System.Diagnostics.ProcessModule.ModuleName" /> 屬性的值。</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModuleCollection">
      <summary>提供 <see cref="T:System.Diagnostics.ProcessModule" /> 物件的強型別 (Strongly Typed) 集合。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor">
      <summary>不使用相關的 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 執行個體，初始化 <see cref="T:System.Diagnostics.ProcessModule" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])">
      <summary>使用 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 執行個體指定的陣列，初始化 <see cref="T:System.Diagnostics.ProcessModule" /> 類別的新執行個體。</summary>
      <param name="processModules">
        <see cref="T:System.Diagnostics.ProcessModule" /> 執行個體的陣列，用來初始化這個 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 執行個體。</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)">
      <summary>判斷指定的處理序模組是否在集合中。</summary>
      <param name="module">
        <see cref="T:System.Diagnostics.ProcessModule" /> 執行個體，表示要在這個集合中搜尋的模組。</param>
      <returns>如果模組在集合中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)">
      <summary>將 <see cref="T:System.Diagnostics.ProcessModule" /> 執行個體的陣列複製至集合的指定索引位置。</summary>
      <param name="array">要加入至集合的 <see cref="T:System.Diagnostics.ProcessModule" /> 執行個體的陣列。</param>
      <param name="index">要加入新執行個體的所在位置。</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)">
      <summary>提供指定模組在集合中的位置。</summary>
      <param name="module">
        <see cref="T:System.Diagnostics.ProcessModule" />，其索引已擷取。</param>
      <returns>以零起始的索引，定義模組在 <see cref="T:System.Diagnostics.ProcessModuleCollection" /> 中的位置。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModuleCollection.Item(System.Int32)">
      <summary>取得逐一查看處理序 (Process) 模組集的索引。</summary>
      <param name="index">集合中模組的以零起始的索引值。</param>
      <returns>
        <see cref="T:System.Diagnostics.ProcessModule" />，建立集合的模組索引。</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessPriorityClass">
      <summary>表示系統與處理序 (Process) 關聯的優先權。 這個值與處理序每個執行緒的優先權值會判斷每個執行緒的基礎優先權層級。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.AboveNormal">
      <summary>指定優先順序高於 <see langword="Normal" /> 但低於 <see langword="High" /> 的處理程序。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.BelowNormal">
      <summary>指定處理序具有高於 <see langword="Idle" /> 但低於 <see langword="Normal" /> 的優先權。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.High">
      <summary>指定處理序執行必須立即執行的時間緊急工作，例如 <see langword="Task List" /> 對話方塊，而這項工作必須在使用者呼叫時迅速回應，而不管作業系統上的載入。 該處理序的執行緒會優先於正常或閒置優先權類別處理序的執行緒。 針對處理序的優先順序類別指定 <see langword="High" /> 時，請務必謹慎小心，因為高優先順序類別應用程式可以使用幾乎所有可用的處理器時間。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Idle">
      <summary>指定這個處理序的執行緒只於系統閒置時執行，例如螢幕保護程式。 該處理序之執行緒會由任何具有較高優先權類別的處理序之執行緒優先佔用。 此優先順序類別會由子處理序繼承。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Normal">
      <summary>指定處理序不需特別的排程。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.RealTime">
      <summary>指定處理序具有最高的可能優先權。 處理序執行緒加上 <see langword="RealTime" /> 優先順序會搶佔所有其他處理序的執行緒，包括執行重要工作的作業系統處理程序。 因此，<see langword="RealTime" /> 優先順序處理程序即使執行間隔相當短暫，也可能會造成磁碟快取無法排清或導致滑鼠不回應。</summary>
    </member>
    <member name="T:System.Diagnostics.ProcessStartInfo">
      <summary>指定啟動處理序時所使用之值的集合。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor">
      <summary>不指定用來啟動處理序的檔案名稱，初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 類別的新執行個體，並指定用來啟動處理序的檔案名稱 (例如應用程式或文件)。</summary>
      <param name="fileName">用來啟動處理序的應用程式或文件。</param>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 類別的新執行個體，並指定用來啟動處理序的應用程式檔案名稱，以及指定要傳遞至應用程式的命令列引數集。</summary>
      <param name="fileName">用來啟動處理序的應用程式。</param>
      <param name="arguments">要在處理序啟動時傳遞至應用程式的命令列引數。</param>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ArgumentList">
      <summary>取得啟動應用程式時要使用的命令列引數集合。</summary>
      <returns>命令列引數的集合。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Arguments">
      <summary>取得或設定啟動應用程式時要使用的命令列引數集。</summary>
      <returns>單一字串，包含要傳遞至 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 屬性中所指定之目標應用程式的引數。 預設為空字串 ("")。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow">
      <summary>取得或設定值，指出是否要在新視窗中啟動處理序。</summary>
      <returns>如果應該啟動處理序而不建立要包含處理序的新視窗，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Domain">
      <summary>取得或設定值，識別在啟動處理序時要使用的網域。 如果此值為 <see langword="null" />，則必須以 UPN 格式指定 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 屬性。</summary>
      <returns>啟動處理序時，要使用的 Active Directory 網域。 如果此值為 <see langword="null" />，則必須以 UPN 格式指定 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 屬性。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Environment">
      <summary>取得套用至這個處理序及其子處理序的環境變數。</summary>
      <returns>泛型字典，包含套用至這個處理序及其子處理序的環境變數。 預設為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables">
      <summary>取得檔案的搜尋路徑、暫存檔的目錄、特定應用程式的選項和其他類似的資訊。</summary>
      <returns>字串字典，提供適用於這個處理序和子處理序的環境變數。 預設為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialog">
      <summary>取得或設定值，指出錯誤對話方塊是否要在處理序無法啟動時向使用者顯示。</summary>
      <returns>若要在處理序無法啟動時，錯誤對話方塊應該顯示在螢幕上，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle">
      <summary>取得或設定視窗控制代碼，以便在無法啟動處理序而顯示錯誤對話方塊時使用。</summary>
      <returns>因處理序啟動失敗而產生的錯誤對話方塊之處理指標。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.FileName">
      <summary>取得或設定要啟動的應用程式或文件。</summary>
      <returns>要啟動的應用程式名稱，或是與應用程式相關且具有可用預設開啟動作的檔案類型的文件名稱。 預設為空字串 ("")。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile">
      <summary>取得或設定值，指出 Windows 使用者設定檔是否要從登錄載入。</summary>
      <returns>如果應該載入 Windows 使用者設定檔，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Password">
      <summary>取得或設定安全字串，其中包含啟動處理序時要使用的使用者密碼。</summary>
      <returns>要在啟動處理序時使用的使用者密碼。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText">
      <summary>取得或設定啟動處理程序時使用之純文字格式的使用者密碼。</summary>
      <returns>純文字格式的使用者密碼。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError">
      <summary>取得或設定值，指出應用程式的錯誤輸出是否寫入至 <see cref="P:System.Diagnostics.Process.StandardError" /> 資料流。</summary>
      <returns>如果錯誤輸出應該寫入至 <see cref="P:System.Diagnostics.Process.StandardError" />，則為 <see langword="true" />，否則為<see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput">
      <summary>取得或設定值，指出應用程式的輸入是否從 <see cref="P:System.Diagnostics.Process.StandardInput" /> 資料流讀取。</summary>
      <returns>如果應該從 <see cref="P:System.Diagnostics.Process.StandardInput" />讀取輸入，則為 <see langword="true" />，否則為<see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput">
      <summary>取得或設定值，表示應用程式的文字輸出是否寫入至 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 資料流。</summary>
      <returns>如果輸出應該寫入至 <see cref="P:System.Diagnostics.Process.StandardOutput" />，則為 <see langword="true" />，否則為<see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding">
      <summary>取得或設定錯誤輸出的慣用編碼。</summary>
      <returns>物件，表示錯誤輸出的慣用編碼。 預設為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding">
      <summary>取得或設定標準輸出的慣用編碼。</summary>
      <returns>物件，表示標準輸出的慣用編碼。 預設為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UserName">
      <summary>取得或設定要在啟動處理序時使用的使用者名稱。 如果您使用 UPN 格式 <paramref name="user" />@<paramref name="DNS_domain_name" />，<see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 屬性必須為 <see langword="null" />。</summary>
      <returns>要在啟動處理序時使用的使用者名稱。 如果您使用 UPN 格式 <paramref name="user" />@<paramref name="DNS_domain_name" />，<see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 屬性必須為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UseShellExecute">
      <summary>取得或設定值，指出是否要使用作業系統 Shell 來啟動處理序。</summary>
      <returns>如果在啟動處理序時使用 Shell，則為 <see langword="true" />，如果處理序應直接從可執行檔建立，則為 <see langword="false" />。 預設值是<see langword="true" />在 .NET Framework 應用程式<see langword="false" />和 .net Core 應用程式上。</returns>
      <exception cref="T:System.PlatformNotSupportedException">嘗試在通用 Windows 平台 (UWP) App 上將值設定為 <see langword="true" />。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verb">
      <summary>取得或設定動詞命令 (Verb)，用於開啟由 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 屬性所指定的應用程式或文件時。</summary>
      <returns>對處理序所開啟的檔案所要採取的動作。 預設值為空字串 ("")，不提示任何動作。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verbs">
      <summary>取得動詞命令集，這個動詞命令集與由 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 屬性所指定的檔案類型相關聯。</summary>
      <returns>動作，系統可以將這個動作套用至 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 屬性所指定的檔案。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WindowStyle">
      <summary>取得或設定視窗狀態，用於處理序啟動時。</summary>
      <returns>其中一個列舉值，指出處理序是在最大化視窗、最小化視窗、一般 (不是最大化也不是最小化) 視窗或不可見視窗中啟動。 預設為 <see langword="Normal" />。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">視窗樣式不是其中一個 <see cref="T:System.Diagnostics.ProcessWindowStyle" /> 列舉型別 (Enumeration) 成員。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory">
      <summary>當 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 屬性為 <see langword="false" /> 時，取得或設定要啟動之處理序的工作目錄。 當 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 為 <see langword="true" /> 時，取得或設定包含要啟動之處理序的目錄。</summary>
      <returns>如果 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 為 <see langword="true" />，則為目錄完整名稱，包含要啟動的處理序。 當 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 屬性為 <see langword="false" /> 時，這是要啟動之處理序的工作目錄。 預設為空字串 ("")。</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessThread">
      <summary>表示作業系統處理序 (Process) 執行緒。</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.BasePriority">
      <summary>取得執行緒的基礎優先權 (Base Priority)。</summary>
      <returns>執行緒的基礎優先權，由作業系統結合處理序的優先權類別和相關執行緒的優先權層級計算所得。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.CurrentPriority">
      <summary>取得執行緒的目前優先權。</summary>
      <returns>執行緒目前的優先權，可能與基礎優先權 (根據作業系統如何排程執行緒) 不符合。 針對作用中的執行緒，可能暫時提高優先權。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.Id">
      <summary>取得執行緒的唯一識別項。</summary>
      <returns>與特定執行緒相關的唯一識別項。</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.IdealProcessor">
      <summary>設定執行這個執行緒的慣用處理器。</summary>
      <returns>執行緒的慣用處理器，用於系統排程執行緒時，以判斷執行執行緒所在的處理器。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">系統無法設定在指定的處理器上啟動執行緒。</exception>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityBoostEnabled">
      <summary>取得或設定數值，表示每當執行緒的處理序之主視窗接收到焦點 (Focus) 時，作業系統是否應該暫時提高相關執行緒的優先權。</summary>
      <returns>若要在使用者與處理序的介面互動時，提高執行緒的優先權，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">無法擷取優先權提高資訊。  
 -或-  
 無法設定優先權提高資訊。</exception>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityLevel">
      <summary>取得或設定執行緒的優先權層級。</summary>
      <returns>其中一個 <see cref="T:System.Diagnostics.ThreadPriorityLevel" /> 值，指定限定執行緒優先權的範圍。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">無法擷取執行緒優先權層級資訊。  
 -或-  
 無法設定執行緒優先權層級。</exception>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime">
      <summary>取得執行緒在作業系統核心中執行程式碼所耗用的時間量。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，表示執行緒在作業系統核心中執行程式碼所耗用的時間量。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">無法擷取執行緒時間。</exception>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ProcessorAffinity">
      <summary>設定可以執行相關執行緒的處理器。</summary>
      <returns>指向一組位元的 <see cref="T:System.IntPtr" />，其中每個位元表示執行緒可以在其上執行的處理器。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">處理序相似性不能被設定。</exception>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="M:System.Diagnostics.ProcessThread.ResetIdealProcessor">
      <summary>重設這個執行緒的理想處理器，以指示沒有一個的理想處理器。 換句話說，沒有任何處理器是理想的。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">無法重設理想處理器。</exception>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartAddress">
      <summary>取得作業系統啟動這個執行緒所呼叫之函式的記憶體位址。</summary>
      <returns>執行緒的起始位址，指向執行緒執行之應用程式定義的函式。</returns>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartTime">
      <summary>取得作業系統啟動執行緒的時間。</summary>
      <returns>
        <see cref="T:System.DateTime" />，表示當作業系統啟動執行緒時的系統時間。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">無法擷取執行緒時間。</exception>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ThreadState">
      <summary>取得這個執行緒目前的狀態。</summary>
      <returns>
        <see cref="T:System.Diagnostics.ThreadState" />，表示執行緒的執行，例如，執行中、等候中或終止。</returns>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.TotalProcessorTime">
      <summary>取得這個執行緒使用處理器所耗用的總時間量。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，表示執行緒已控制處理器的時間量。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">無法擷取執行緒時間。</exception>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.UserProcessorTime">
      <summary>取得相關執行緒在應用程式內部執行程式碼所耗用的時間量。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，表示執行緒在應用程式內部 (相對於在作業系統核心中) 執行程式碼所耗用的時間量。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">無法擷取執行緒時間。</exception>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.WaitReason">
      <summary>取得執行緒正在等候的原因。</summary>
      <returns>
        <see cref="T:System.Diagnostics.ThreadWaitReason" />，表示執行緒在等候狀態的原因。</returns>
      <exception cref="T:System.InvalidOperationException">執行緒不在等候狀態。</exception>
      <exception cref="T:System.NotSupportedException">處理序位於遠端電腦上。</exception>
    </member>
    <member name="T:System.Diagnostics.ProcessThreadCollection">
      <summary>提供 <see cref="T:System.Diagnostics.ProcessThread" /> 物件的強型別 (Strongly Typed) 集合。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor">
      <summary>不使用相關的 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 執行個體，初始化 <see cref="T:System.Diagnostics.ProcessThread" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])">
      <summary>使用 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 執行個體指定的陣列，初始化 <see cref="T:System.Diagnostics.ProcessThread" /> 類別的新執行個體。</summary>
      <param name="processThreads">
        <see cref="T:System.Diagnostics.ProcessThread" /> 執行個體的陣列，用來初始化這個 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 執行個體。</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)">
      <summary>將處理序執行緒附加至集合。</summary>
      <param name="thread">要加入至集合的執行緒。</param>
      <returns>集合中執行緒之以零起始的索引。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)">
      <summary>判斷指定的處理序執行緒是否在集合中。</summary>
      <param name="thread">
        <see cref="T:System.Diagnostics.ProcessThread" /> 執行個體，表示要在這個集合中搜尋的執行緒。</param>
      <returns>如果執行緒在集合中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)">
      <summary>將 <see cref="T:System.Diagnostics.ProcessThread" /> 執行個體的陣列複製至集合的指定索引位置。</summary>
      <param name="array">要加入至集合的 <see cref="T:System.Diagnostics.ProcessThread" /> 執行個體的陣列。</param>
      <param name="index">要加入新執行個體的所在位置。</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)">
      <summary>提供指定執行緒在集合中的位置。</summary>
      <param name="thread">
        <see cref="T:System.Diagnostics.ProcessThread" />，其索引已擷取。</param>
      <returns>以零起始的索引，定義執行緒在 <see cref="T:System.Diagnostics.ProcessThreadCollection" /> 中的位置。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)">
      <summary>將處理序執行緒插入於集合中的指定位置。</summary>
      <param name="index">以零起始的索引，表示要插入執行緒的所在位置。</param>
      <param name="thread">要插入至集合的執行緒。</param>
    </member>
    <member name="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)">
      <summary>取得逐一查看處理序 (Process) 執行緒集的索引。</summary>
      <param name="index">集合中執行緒的以零起始的索引值。</param>
      <returns>
        <see cref="T:System.Diagnostics.ProcessThread" />，建立集合的執行緒索引。</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)">
      <summary>從集合刪除處理序執行緒。</summary>
      <param name="thread">要從集合移除的執行緒。</param>
    </member>
    <member name="T:System.Diagnostics.ProcessWindowStyle">
      <summary>指定系統啟動處理序 (Process) 時新視窗出現的方式。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Hidden">
      <summary>隱藏的視窗樣式。 視窗可以顯示或隱藏。 系統顯示隱藏視窗的方式是不繪製視窗。 如果隱藏視窗，等於是停用視窗。 隱藏視窗能夠處理來自系統或其他視窗的訊息，但是不能處理來自使用者的輸入或顯示輸出。 通常應用程式可能在自訂視窗外觀時隱藏新視窗，然後再讓視窗樣式成為 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />。 若要使用 <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" />，<see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 屬性必須是 <see langword="true" />。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Maximized">
      <summary>最大化的視窗樣式。 根據預設值，系統會將最大化視窗放大到佔滿畫面，如果是子視窗，則是放大到佔滿父視窗的工作區 (Client Area)。 如果視窗有標題列，則系統會自動將它移至螢幕頂端或父視窗工作區頂端。 此外，系統也會停用視窗的縮放邊框 (Sizing Border) 和標題列的視窗定位功能，使得使用者無法藉由拖曳標題列的方式移動視窗。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Minimized">
      <summary>最小化的視窗樣式。 根據預設值，系統會將最小化的視窗縮小到工作列按鈕的大小，並將最小化的視窗移至工作列。</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Normal">
      <summary>一般的顯示視窗樣式。 系統會以 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" /> 樣式將視窗顯示在畫面的預設位置。 如果視窗是顯示的，則使用者可以提供輸入至視窗，並檢視視窗的輸出。 通常應用程式可能在自訂視窗外觀時，將新視窗初始化為 <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" /> 樣式，再讓視窗樣式成為 <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />。</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadPriorityLevel">
      <summary>指定執行緒的優先權層級。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.AboveNormal">
      <summary>指定相關 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的高於一般優先權一級的優先權。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.BelowNormal">
      <summary>指定相關 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的低於一般優先權一級的優先權。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Highest">
      <summary>指定最高優先權。 這是相關 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的高於一般優先權兩級的優先權。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Idle">
      <summary>指定閒置優先權。 這是所有執行緒的最低可能優先權值，與相關 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的值無關。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Lowest">
      <summary>指定最低優先權。 這是相關 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的低於一般優先權兩級的優先權。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Normal">
      <summary>指定相關 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的一般優先權。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.TimeCritical">
      <summary>指定時間關鍵 (Time Critical) 優先權。 這是所有執行緒的最高優先權，與相關 <see cref="T:System.Diagnostics.ProcessPriorityClass" /> 的值無關。</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadState">
      <summary>指定執行緒的目前執行狀態。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Initialized">
      <summary>指示執行緒已經初始化，但尚未啟動的狀態。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Ready">
      <summary>該狀態指示沒有可用的處理器，所以執行緒正在等待以使用處理器。 執行緒準備在下一個可用的處理器上執行。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Running">
      <summary>該狀態指示執行緒目前正在使用處理器。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Standby">
      <summary>該狀態指示執行緒正要使用處理器。 一次只能有一個執行緒可以處於這個狀態。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Terminated">
      <summary>該狀態指示執行緒已經執行完成並離開。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Transition">
      <summary>該狀態指示執行緒在可以執行之前正在等待資源，而不是等待處理器。 例如，它可能正在等待其執行堆疊從磁碟分頁進來。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Unknown">
      <summary>執行緒的狀態不明。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Wait">
      <summary>該狀態指示執行緒尚未準備使用處理器，因為它正在等待要完成的週邊作業或可以使用的資源。 執行緒會在備妥時重新排程。</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadWaitReason">
      <summary>指定執行緒正在等待的原因。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairHigh">
      <summary>執行緒正在等待 Event Pair High。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairLow">
      <summary>執行緒正在等待 Event Pair Low。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.ExecutionDelay">
      <summary>執行緒的執行受延遲。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Executive">
      <summary>執行緒正在等待排程器。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.FreePage">
      <summary>執行緒正在等待可用的虛擬記憶體分頁。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReceive">
      <summary>執行緒正在等待本機程序呼叫到達。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReply">
      <summary>執行緒正在等待對本機程序呼叫的回應到達。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageIn">
      <summary>執行緒正在等待虛擬記憶體分頁到達記憶體。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageOut">
      <summary>執行緒正在等待虛擬記憶體分頁寫入至磁碟。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Suspended">
      <summary>執行緒的執行受暫止。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.SystemAllocation">
      <summary>執行緒正在等待系統配置。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Unknown">
      <summary>執行緒正在等待不明原因。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.UserRequest">
      <summary>執行緒正在等待使用者要求。</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.VirtualMemory">
      <summary>執行緒正在等待系統配置虛擬記憶體。</summary>
    </member>
  </members>
</doc>