<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Numerics.Vectors</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.Matrix3x2">
      <summary vsli:raw="Represents a 3x2 matrix.">表示一個 3x2 矩陣。</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 3x2 matrix from the specified components.">從指定的元件建立 3x2 矩陣。</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">要指派給第一列第一個元素的值。</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">要指派給第一列第二個元素的值。</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">要指派給第二列第一個元素的值。</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">要指派給第二列第二個元素的值。</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">要指派給第三列第一個元素的值。</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">要指派給第三列第二個元素的值。</param>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">將一個矩陣的每個元素和第二個矩陣的相對應元素相加。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">包含 <paramref name="value1" /> 和 <paramref name="value2" /> 加總值的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single)">
      <summary vsli:raw="Creates a rotation matrix using the given rotation in radians.">使用給定的旋轉建立一個旋轉矩陣，以弧度為單位。</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">旋轉的弧度。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a rotation matrix using the specified rotation in radians and a center point.">使用以弧度為單位的指定旋轉和中心點建立旋轉矩陣。</summary>
      <param name="radians" vsli:raw="The amount of rotation, in radians.">旋轉的弧度。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心點。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">從指定的向量縮放比例建立縮放矩陣。</summary>
      <param name="scales" vsli:raw="The scale to use.">要使用的縮放比例。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale with an offset from the specified center point.">從指定的向量縮放比例和從指定中心點開始的位移，建立縮放矩陣。</summary>
      <param name="scales" vsli:raw="The scale to use.">要使用的縮放比例。</param>
      <param name="centerPoint" vsli:raw="The center offset.">中心位移。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the given scale.">建立縮放矩陣，會依據指定的縮放比例統一縮放。</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">要使用的統一縮放比例。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center.">建立縮放矩陣，會和指定的縮放比例及從指定中心開始的位移統一縮放。</summary>
      <param name="scale" vsli:raw="The uniform scale to use.">要使用的統一縮放比例。</param>
      <param name="centerPoint" vsli:raw="The center offset.">中心位移。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X and Y components.">從指定的 X 和 Y 元件建立縮放矩陣。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">在 X 軸上縮放所依據的值。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">在 Y 軸上縮放所依據的值。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">建立依指定中心點位移的縮放矩陣。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">在 X 軸上縮放所依據的值。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">在 Y 軸上縮放所依據的值。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心點。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians.">從以弧度為單位的指定角度建立斜矩陣。</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">X 的角度，以弧度為單位。</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Y 的角度，以弧度為單位。</param>
      <returns vsli:raw="The skew matrix.">斜矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Creates a skew matrix from the specified angles in radians and a center point.">從以弧度為單位的指定角度和中心點建立斜矩陣。</summary>
      <param name="radiansX" vsli:raw="The X angle, in radians.">X 的角度，以弧度為單位。</param>
      <param name="radiansY" vsli:raw="The Y angle, in radians.">Y 的角度，以弧度為單位。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心點。</param>
      <returns vsli:raw="The skew matrix.">斜矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)">
      <summary vsli:raw="Creates a translation matrix from the specified 2-dimensional vector.">從指定的二維向量建立轉移矩陣。</summary>
      <param name="position" vsli:raw="The translation position.">轉移矩陣。</param>
      <returns vsli:raw="The translation matrix.">轉移矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X and Y components.">從指定的 X 和 Y 元件建立轉移矩陣。</summary>
      <param name="xPosition" vsli:raw="The X position.">X 位置。</param>
      <param name="yPosition" vsli:raw="The Y position.">Y 位置。</param>
      <returns vsli:raw="The translation matrix.">轉移矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 3x2 matrix are equal.">傳回值，這個值指出此執行個體和另一個 3x2 矩陣是否相等。</summary>
      <param name="other" vsli:raw="The other matrix.">其他矩陣。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個矩陣相等則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要與目前執行個體比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetDeterminant">
      <summary vsli:raw="Calculates the determinant for this matrix.">計算此矩陣的行列式。</summary>
      <returns vsli:raw="The determinant.">行列式。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="The hash code.">雜湊碼。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">取得乘法類單位矩陣。</summary>
      <returns vsli:raw="The multiplicative identify matrix.">乘法類單位矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">反轉指定的矩陣。 指示作業是否成功的傳回值。</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">要反轉的矩陣。</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">如果作業成功，則當此方法傳回時，此參數會包含反轉的矩陣。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="matrix" /> 轉換成功，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">指出目前的矩陣是否為單位矩陣。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果目前的矩陣是單位矩陣，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">根據指定第二個矩陣之加權的值，執行從一個矩陣到第二個矩陣的線性插補。</summary>
      <param name="matrix1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="matrix2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">
        <paramref name="matrix2" /> 的相對加權。</param>
      <returns vsli:raw="The interpolated matrix.">插補的矩陣。</returns>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M11">
      <summary vsli:raw="The first element of the first row.">第一列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M12">
      <summary vsli:raw="The second element of the first row.">第一列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M21">
      <summary vsli:raw="The first element of the second row.">第二列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M22">
      <summary vsli:raw="The second element of the second row.">第二列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M31">
      <summary vsli:raw="The first element of the third row.">第三列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M32">
      <summary vsli:raw="The second element of the third row.">第三列的第二個元素。</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">傳回兩個矩陣一起相乘所產生的矩陣。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The product matrix.">乘積的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">傳回矩陣，該矩陣為依據純量因數縮放指定矩陣之所有元素而產生。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">要縮放的矩陣。</param>
      <param name="value2" vsli:raw="The scaling value to use.">要使用的縮放比例值。</param>
      <returns vsli:raw="The scaled matrix.">已縮放的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">將指定矩陣的所有值乘以 -1，對其變換正負號。</summary>
      <param name="value" vsli:raw="The matrix to negate.">要變換正負號的矩陣。</param>
      <returns vsli:raw="The negated matrix.">已變換正負號的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">將一個矩陣的每個元素和第二個矩陣的相對應元素相加。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The matrix that contains the summed values.">包含加總值的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">傳回值，指出指定的矩陣是否相等。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">要比較的第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix to compare.">要比較的第二個矩陣。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">傳回值，指出指定的矩陣是否不相等。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">要比較的第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix to compare.">要比較的第二個矩陣。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">傳回兩個矩陣一起相乘所產生的矩陣。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The product matrix.">乘積的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">傳回矩陣，該矩陣為依據純量因數縮放指定矩陣之所有元素而產生。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">要縮放的矩陣。</param>
      <param name="value2" vsli:raw="The scaling value to use.">要使用的縮放比例值。</param>
      <returns vsli:raw="The scaled matrix.">已縮放的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">將第二個矩陣中的每個元素減去第一個矩陣中相對應的元素。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含值的矩陣，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">將指定矩陣的所有值乘以 -1，對其變換正負號。</summary>
      <param name="value" vsli:raw="The matrix to negate.">要變換正負號的矩陣。</param>
      <returns vsli:raw="The negated matrix.">已變換正負號的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">將第二個矩陣中的每個元素減去第一個矩陣中相對應的元素。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含值的矩陣，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">傳回表示這個矩陣的字串。</summary>
      <returns vsli:raw="The string representation of this matrix.">這個矩陣的字串表示。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">取得或設定此矩陣的轉移元件。</summary>
      <returns vsli:raw="The translation component of the current instance.">目前執行個體的轉移元件。</returns>
    </member>
    <member name="T:System.Numerics.Matrix4x4">
      <summary vsli:raw="Represents a 4x4 matrix.">表示一個 4x4 矩陣。</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Numerics.Matrix3x2)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Matrix4x4&quot; /&gt; object from a specified &lt;see cref=&quot;T:System.Numerics.Matrix3x2&quot; /&gt; object.">從指定的 <see cref="T:System.Numerics.Matrix3x2" /> 物件建立 <see cref="T:System.Numerics.Matrix4x4" /> 物件。</summary>
      <param name="value" vsli:raw="A 3x2 matrix.">3x2 矩陣。</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a 4x4 matrix from the specified components.">從指定的元件建立 4x4 矩陣。</summary>
      <param name="m11" vsli:raw="The value to assign to the first element in the first row.">要指派給第一列第一個元素的值。</param>
      <param name="m12" vsli:raw="The value to assign to the second element in the first row.">要指派給第一列第二個元素的值。</param>
      <param name="m33" vsli:raw="The value to assign to the third element in the third row.">要指派給第三列第三個元素的值。</param>
      <param name="m34" vsli:raw="The value to assign to the fourth element in the third row.">要指派給第三列第四個元素的值。</param>
      <param name="m41" vsli:raw="The value to assign to the first element in the fourth row.">要指派給第四列第一個元素的值。</param>
      <param name="m42" vsli:raw="The value to assign to the second element in the fourth row.">要指派給第四列第二個元素的值。</param>
      <param name="m43" vsli:raw="The value to assign to the third element in the fourth row.">要指派給第四列第三個元素的值。</param>
      <param name="m44" vsli:raw="The value to assign to the fourth element in the fourth row.">要指派給第四列第四個元素的值。</param>
      <param name="m13" vsli:raw="The value to assign to the third element in the first row.">要指派給第一列第三個元素的值。</param>
      <param name="m14" vsli:raw="The value to assign to the fourth element in the first row.">要指派給第一列第四個元素的值。</param>
      <param name="m21" vsli:raw="The value to assign to the first element in the second row.">要指派給第二列第一個元素的值。</param>
      <param name="m22" vsli:raw="The value to assign to the second element in the second row.">要指派給第二列第二個元素的值。</param>
      <param name="m23" vsli:raw="The value to assign to the third element in the second row.">要指派給第二列第三個元素的值。</param>
      <param name="m24" vsli:raw="The value to assign to the fourth element in the second row.">要指派給第二列第三個元素的值。</param>
      <param name="m31" vsli:raw="The value to assign to the first element in the third row.">要指派給第三列第一個元素的值。</param>
      <param name="m32" vsli:raw="The value to assign to the second element in the third row.">要指派給第三列第二個元素的值。</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Add(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">將一個矩陣的每個元素和第二個矩陣的相對應元素相加。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The matrix that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">包含 <paramref name="value1" /> 和 <paramref name="value2" /> 加總值的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a spherical billboard that rotates around a specified object position.">建立繞著指定物件位置旋轉的球面告示板。</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">告示板繞著旋轉的物件位置。</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">相機的位置。</param>
      <param name="cameraUpVector" vsli:raw="The up vector of the camera.">相機的上向量。</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">相機的前向量。</param>
      <returns vsli:raw="The created billboard.">已建立的告示板。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a cylindrical billboard that rotates around a specified axis.">建立繞著指定的軸旋轉的圓柱告示板。</summary>
      <param name="objectPosition" vsli:raw="The position of the object that the billboard will rotate around.">告示板繞著旋轉的物件位置。</param>
      <param name="cameraPosition" vsli:raw="The position of the camera.">相機的位置。</param>
      <param name="rotateAxis" vsli:raw="The axis to rotate the billboard around.">要讓告示板繞著旋轉的軸。</param>
      <param name="cameraForwardVector" vsli:raw="The forward vector of the camera.">相機的前向量。</param>
      <param name="objectForwardVector" vsli:raw="The forward vector of the object.">物件的前向量。</param>
      <returns vsli:raw="The billboard matrix.">告示板矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a matrix that rotates around an arbitrary vector.">建立繞著任意向量旋轉的矩陣。</summary>
      <param name="axis" vsli:raw="The axis to rotate around.">要繞著選轉的軸。</param>
      <param name="angle" vsli:raw="The angle to rotate around &lt;paramref name=&quot;axis&quot; /&gt;, in radians.">要讓 <paramref name="axis" /> 繞著旋轉的角度，以弧度為單位。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromQuaternion(System.Numerics.Quaternion)">
      <summary vsli:raw="Creates a rotation matrix from the specified Quaternion rotation value.">依據指定的四元數旋轉值建立一個旋轉矩陣。</summary>
      <param name="quaternion" vsli:raw="The source Quaternion.">來源四元數。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a rotation matrix from the specified yaw, pitch, and roll.">依據指定的繞 Y 軸旋轉、繞 X 軸旋轉和滾動建立一個旋轉矩陣。</summary>
      <param name="yaw" vsli:raw="The angle of rotation, in radians, around the Y axis.">繞著 Y 軸的旋轉角度，以弧度為單位。</param>
      <param name="pitch" vsli:raw="The angle of rotation, in radians, around the X axis.">繞著 X 軸的旋轉角度，以弧度為單位。</param>
      <param name="roll" vsli:raw="The angle of rotation, in radians, around the Z axis.">繞著 Z 軸的旋轉角度，以弧度為單位。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a view matrix.">建立檢視矩陣。</summary>
      <param name="cameraPosition" vsli:raw="The position of the camera.">相機的位置。</param>
      <param name="cameraTarget" vsli:raw="The target towards which the camera is pointing.">相機指向的目標。</param>
      <param name="cameraUpVector" vsli:raw="The direction that is &quot;up&quot; from the camera's point of view.">從相機的觀點來看為「向上」的方向。</param>
      <returns vsli:raw="The view matrix.">檢視矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates an orthographic perspective matrix from the given view volume dimensions.">依據指定的視圖體維度建立正視透視圖矩陣。</summary>
      <param name="width" vsli:raw="The width of the view volume.">視圖體的寬度。</param>
      <param name="height" vsli:raw="The height of the view volume.">視圖體的高度。</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">視圖體最小的 Z 值。</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">視圖體最大的 Z 值。</param>
      <returns vsli:raw="The orthographic projection matrix.">正視投影矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized orthographic projection matrix.">建立自訂的正視投影矩陣。</summary>
      <param name="left" vsli:raw="The minimum X-value of the view volume.">視圖體最小的 X 值。</param>
      <param name="right" vsli:raw="The maximum X-value of the view volume.">視圖體最大的 X 值。</param>
      <param name="bottom" vsli:raw="The minimum Y-value of the view volume.">視圖體最小的 Y 值。</param>
      <param name="top" vsli:raw="The maximum Y-value of the view volume.">視圖體最大的 Y 值。</param>
      <param name="zNearPlane" vsli:raw="The minimum Z-value of the view volume.">視圖體最小的 Z 值。</param>
      <param name="zFarPlane" vsli:raw="The maximum Z-value of the view volume.">視圖體最大的 Z 值。</param>
      <returns vsli:raw="The orthographic projection matrix.">正視投影矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix from the given view volume dimensions.">依據指定的視圖體維度建立透視圖投影矩陣。</summary>
      <param name="width" vsli:raw="The width of the view volume at the near view plane.">附近的檢視平面之視圖體寬度。</param>
      <param name="height" vsli:raw="The height of the view volume at the near view plane.">附近的檢視平面之視圖體高度。</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">到附近的檢視平面之距離。</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">到遠離檢視平面的距離。</param>
      <returns vsli:raw="The perspective projection matrix.">透視圖投影矩陣。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> 小於或等於零。  
-或- 
 <paramref name="farPlaneDistance" /> 小於或等於零。  
-或- 
 <paramref name="nearPlaneDistance" /> 大於或等於 <paramref name="farPlaneDistance" />。</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a perspective projection matrix based on a field of view, aspect ratio, and near and far view plane distances.">根據視野、外觀比例以及附近的和遠離檢視平面距離來建立透視圖投影矩陣。</summary>
      <param name="fieldOfView" vsli:raw="The field of view in the y direction, in radians.">在 Y 方向的視野，以弧度為單位。</param>
      <param name="aspectRatio" vsli:raw="The aspect ratio, defined as view space width divided by height.">外觀比例，定義為檢視空間寬度除以高度。</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">到附近的檢視平面之距離。</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">到遠離檢視平面的距離。</param>
      <returns vsli:raw="The perspective projection matrix.">透視圖投影矩陣。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;fieldOfView&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fieldOfView&quot; /&gt; is greater than or equal to &lt;see cref=&quot;F:System.Math.PI&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="fieldOfView" /> 小於或等於零。  
-或- 
 <paramref name="fieldOfView" /> 大於或等於 <see cref="F:System.Math.PI" />。  
 <paramref name="nearPlaneDistance" /> 小於或等於零。  
-或- 
 <paramref name="farPlaneDistance" /> 小於或等於零。  
-或- 
 <paramref name="nearPlaneDistance" /> 大於或等於 <paramref name="farPlaneDistance" />。</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a customized perspective projection matrix.">建立自訂的透視圖投影矩陣。</summary>
      <param name="left" vsli:raw="The minimum x-value of the view volume at the near view plane.">附近的檢視平面之視圖體最小的 X 值。</param>
      <param name="right" vsli:raw="The maximum x-value of the view volume at the near view plane.">附近的檢視平面之視圖體最大的 X 值。</param>
      <param name="bottom" vsli:raw="The minimum y-value of the view volume at the near view plane.">附近的檢視平面之視圖體最小的 Y 值。</param>
      <param name="top" vsli:raw="The maximum y-value of the view volume at the near view plane.">附近的檢視平面之視圖體最大的 Y 值。</param>
      <param name="nearPlaneDistance" vsli:raw="The distance to the near view plane.">到附近的檢視平面之距離。</param>
      <param name="farPlaneDistance" vsli:raw="The distance to the far view plane.">到遠離檢視平面的距離。</param>
      <returns vsli:raw="The perspective projection matrix.">透視圖投影矩陣。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;farPlaneDistance&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;nearPlaneDistance&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;farPlaneDistance&quot; /&gt;.">
        <paramref name="nearPlaneDistance" /> 小於或等於零。  
-或- 
 <paramref name="farPlaneDistance" /> 小於或等於零。  
-或- 
 <paramref name="nearPlaneDistance" /> 大於或等於 <paramref name="farPlaneDistance" />。</exception>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateReflection(System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that reflects the coordinate system about a specified plane.">建立反映指定平面之座標系統的矩陣。</summary>
      <param name="value" vsli:raw="The plane about which to create a reflection.">用來建立反映的平面。</param>
      <returns vsli:raw="A new matrix expressing the reflection.">表示此反映的新矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis.">建立會讓點繞著 X 軸旋轉的矩陣。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">以弧度為單位的數量，依此弧度來繞著 X 軸旋轉。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the X axis from a center point.">建立會讓點從中心點繞著 X 軸旋轉的矩陣。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the X axis.">以弧度為單位的數量，依此弧度來繞著 X 軸旋轉。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心點。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Y axis.">建立會讓點繞著 Y 軸旋轉的矩陣。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">以弧度為單位的數量，依此弧度來繞著 Y 軸旋轉。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="The amount, in radians, by which to rotate around the Y axis from a center point.">以弧度為單位的數量，從中心點依此弧度來繞著 Y 軸旋轉。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Y-axis.">以弧度為單位的數量，依此弧度來繞著 Y 軸旋轉。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心點。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis.">建立會讓點繞著 Z 軸旋轉的矩陣。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">以弧度為單位的數量，依此弧度來繞著 Z 軸旋轉。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a matrix for rotating points around the Z axis from a center point.">建立會讓點從中心點繞著 Z 軸旋轉的矩陣。</summary>
      <param name="radians" vsli:raw="The amount, in radians, by which to rotate around the Z-axis.">以弧度為單位的數量，依此弧度來繞著 Z 軸旋轉。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心點。</param>
      <returns vsli:raw="The rotation matrix.">旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix from the specified vector scale.">從指定的向量縮放比例建立縮放矩陣。</summary>
      <param name="scales" vsli:raw="The scale to use.">要使用的縮放比例。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix with a center point.">針對中心點建立縮放矩陣。</summary>
      <param name="scales" vsli:raw="The vector that contains the amount to scale on each axis.">包含在每個座標軸上縮放比例數量的向量。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心點。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single)">
      <summary vsli:raw="Creates a uniform scaling matrix that scale equally on each axis.">建立統一的縮放矩陣，在每個座標軸上以相同比例縮放。</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">統一的縮放比例。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a uniform scaling matrix that scales equally on each axis with a center point.">建立統一的縮放矩陣，在每個座標軸上針對中心點以相同比例縮放。</summary>
      <param name="scale" vsli:raw="The uniform scaling factor.">統一的縮放比例。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心點。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a scaling matrix from the specified X, Y, and Z components.">從指定的 X、Y 和 Z 元件建立縮放矩陣。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">在 X 軸上縮放所依據的值。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">在 Y 軸上縮放所依據的值。</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">在 Z 軸上縮放所依據的值。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a scaling matrix that is offset by a given center point.">建立依指定中心點位移的縮放矩陣。</summary>
      <param name="xScale" vsli:raw="The value to scale by on the X axis.">在 X 軸上縮放所依據的值。</param>
      <param name="yScale" vsli:raw="The value to scale by on the Y axis.">在 Y 軸上縮放所依據的值。</param>
      <param name="zScale" vsli:raw="The value to scale by on the Z axis.">在 Z 軸上縮放所依據的值。</param>
      <param name="centerPoint" vsli:raw="The center point.">中心點。</param>
      <returns vsli:raw="The scaling matrix.">縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
      <summary vsli:raw="Creates a matrix that flattens geometry into a specified plane as if casting a shadow from a specified light source.">建立會將幾何簡維成指定平面的矩陣，就像從指定光源投射的陰影一樣。</summary>
      <param name="lightDirection" vsli:raw="The direction from which the light that will cast the shadow is coming.">會投射陰影的光線所來自的方向。</param>
      <param name="plane" vsli:raw="The plane onto which the new matrix should flatten geometry so as to cast a shadow.">新矩陣會將幾何簡維到此平面上，以便投射陰影。</param>
      <returns vsli:raw="A new matrix that can be used to flatten geometry onto the specified plane from the specified direction.">一個新矩陣，用來從指定的方向將幾何簡維到指定平面上。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Numerics.Vector3)">
      <summary vsli:raw="Creates a translation matrix from the specified 3-dimensional vector.">從指定的三維向量建立轉移矩陣。</summary>
      <param name="position" vsli:raw="The amount to translate in each axis.">在每個座標軸上要轉移的數量。</param>
      <returns vsli:raw="The translation matrix.">轉移矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a translation matrix from the specified X, Y, and Z components.">從指定的 X、Y 和 Z 元件建立轉移矩陣。</summary>
      <param name="xPosition" vsli:raw="The amount to translate on the X axis.">在 X 軸上要轉移的數量。</param>
      <param name="yPosition" vsli:raw="The amount to translate on the Y axis.">在 Y 軸上要轉移的數量。</param>
      <param name="zPosition" vsli:raw="The amount to translate on the Z axis.">在 Z 軸上要轉移的數量。</param>
      <returns vsli:raw="The translation matrix.">轉移矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a world matrix with the specified parameters.">使用指定的參數建立世界矩陣。</summary>
      <param name="position" vsli:raw="The position of the object.">物件的位置。</param>
      <param name="forward" vsli:raw="The forward direction of the object.">物件的向前方向。</param>
      <param name="up" vsli:raw="The upward direction of the object. Its value is usually &lt;c&gt;[0, 1, 0]&lt;/c&gt;.">物件的向上方向。 其值通常是 <c>[0, 1, 0]</c>。</param>
      <returns vsli:raw="The world matrix.">世界矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Decompose(System.Numerics.Matrix4x4,System.Numerics.Vector3@,System.Numerics.Quaternion@,System.Numerics.Vector3@)">
      <summary vsli:raw="Attempts to extract the scale, translation, and rotation components from the given scale, rotation, or translation matrix. The return value indicates whether the operation succeeded.">嘗試從指定的縮放、旋轉或轉移矩陣中擷取縮放、轉移和旋轉元件。 指示作業是否成功的傳回值。</summary>
      <param name="matrix" vsli:raw="The source matrix.">來源矩陣。</param>
      <param name="scale" vsli:raw="When this method returns, contains the scaling component of the transformation matrix if the operation succeeded.">如果作業成功，則當此方法傳回時，此參數會包含轉換矩陣的縮放元件。</param>
      <param name="rotation" vsli:raw="When this method returns, contains the rotation component of the transformation matrix if the operation succeeded.">如果作業成功，則當此方法傳回時，此參數會包含轉換矩陣的旋轉元件。</param>
      <param name="translation" vsli:raw="When the method returns, contains the translation component of the transformation matrix if the operation succeeded.">如果作業成功，則當此方法傳回時，此參數會包含轉換矩陣的轉移元件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was decomposed successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果已成功分解 <paramref name="matrix" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another 4x4 matrix are equal.">傳回值，這個值指出此執行個體和另一個 4x4 矩陣是否相等。</summary>
      <param name="other" vsli:raw="The other matrix.">其他矩陣。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two matrices are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個矩陣相等則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要與目前執行個體比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetDeterminant">
      <summary vsli:raw="Calculates the determinant of the current 4x4 matrix.">計算目前的 4x4 矩陣的行列式。</summary>
      <returns vsli:raw="The determinant.">行列式。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="The hash code.">雜湊碼。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Identity">
      <summary vsli:raw="Gets the multiplicative identity matrix.">取得乘法類單位矩陣。</summary>
      <returns vsli:raw="Gets the multiplicative identity matrix.">取得乘法類單位矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Invert(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4@)">
      <summary vsli:raw="Inverts the specified matrix. The return value indicates whether the operation succeeded.">反轉指定的矩陣。 指示作業是否成功的傳回值。</summary>
      <param name="matrix" vsli:raw="The matrix to invert.">要反轉的矩陣。</param>
      <param name="result" vsli:raw="When this method returns, contains the inverted matrix if the operation succeeded.">如果作業成功，則當此方法傳回時，此參數會包含反轉的矩陣。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix&quot; /&gt; was converted successfully; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="matrix" /> 轉換成功，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.IsIdentity">
      <summary vsli:raw="Indicates whether the current matrix is the identity matrix.">指出目前的矩陣是否為單位矩陣。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current matrix is the identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果目前的矩陣是單位矩陣，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Lerp(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix.">根據指定第二個矩陣之加權的值，執行從一個矩陣到第二個矩陣的線性插補。</summary>
      <param name="matrix1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="matrix2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <param name="amount" vsli:raw="The relative weighting of &lt;paramref name=&quot;matrix2&quot; /&gt;.">
        <paramref name="matrix2" /> 的相對加權。</param>
      <returns vsli:raw="The interpolated matrix.">插補的矩陣。</returns>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M11">
      <summary vsli:raw="The first element of the first row.">第一列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M12">
      <summary vsli:raw="The second element of the first row.">第一列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M13">
      <summary vsli:raw="The third element of the first row.">第一列的第三個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M14">
      <summary vsli:raw="The fourth element of the first row.">第一列的第四個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M21">
      <summary vsli:raw="The first element of the second row.">第二列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M22">
      <summary vsli:raw="The second element of the second row.">第二列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M23">
      <summary vsli:raw="The third element of the second row.">第二列的第三個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M24">
      <summary vsli:raw="The fourth element of the second row.">第二列的第四個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M31">
      <summary vsli:raw="The first element of the third row.">第三列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M32">
      <summary vsli:raw="The second element of the third row.">第三列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M33">
      <summary vsli:raw="The third element of the third row.">第三列的第三個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M34">
      <summary vsli:raw="The fourth element of the third row.">第三列的第四個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M41">
      <summary vsli:raw="The first element of the fourth row.">第四列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M42">
      <summary vsli:raw="The second element of the fourth row.">第四列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M43">
      <summary vsli:raw="The third element of the fourth row.">第四列的第三個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M44">
      <summary vsli:raw="The fourth element of the fourth row.">第四列的第四個元素。</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">傳回兩個矩陣一起相乘所產生的矩陣。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The product matrix.">乘積的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">傳回矩陣，該矩陣為依據純量因數縮放指定矩陣之所有元素而產生。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">要縮放的矩陣。</param>
      <param name="value2" vsli:raw="The scaling value to use.">要使用的縮放比例值。</param>
      <returns vsli:raw="The scaled matrix.">已縮放的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Negate(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">將指定矩陣的所有值乘以 -1，對其變換正負號。</summary>
      <param name="value" vsli:raw="The matrix to negate.">要變換正負號的矩陣。</param>
      <returns vsli:raw="The negated matrix.">已變換正負號的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Addition(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Adds each element in one matrix with its corresponding element in a second matrix.">將一個矩陣的每個元素和第二個矩陣的相對應元素相加。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The matrix that contains the summed values.">包含加總值的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Equality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are equal.">傳回值，指出指定的矩陣是否相等。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">要比較的第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix to care.">要比較的第二個矩陣。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Inequality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns a value that indicates whether the specified matrices are not equal.">傳回值，指出指定的矩陣是否不相等。</summary>
      <param name="value1" vsli:raw="The first matrix to compare.">要比較的第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix to compare.">要比較的第二個矩陣。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Returns the matrix that results from multiplying two matrices together.">傳回兩個矩陣一起相乘所產生的矩陣。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The product matrix.">乘積的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary vsli:raw="Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor.">傳回矩陣，該矩陣為依據純量因數縮放指定矩陣之所有元素而產生。</summary>
      <param name="value1" vsli:raw="The matrix to scale.">要縮放的矩陣。</param>
      <param name="value2" vsli:raw="The scaling value to use.">要使用的縮放比例值。</param>
      <returns vsli:raw="The scaled matrix.">已縮放的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Subtraction(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">將第二個矩陣中的每個元素減去第一個矩陣中相對應的元素。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含值的矩陣，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_UnaryNegation(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Negates the specified matrix by multiplying all its values by -1.">將指定矩陣的所有值乘以 -1，對其變換正負號。</summary>
      <param name="value" vsli:raw="The matrix to negate.">要變換正負號的矩陣。</param>
      <returns vsli:raw="The negated matrix.">已變換正負號的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Subtract(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Subtracts each element in a second matrix from its corresponding element in a first matrix.">將第二個矩陣中的每個元素減去第一個矩陣中相對應的元素。</summary>
      <param name="value1" vsli:raw="The first matrix.">第一個矩陣。</param>
      <param name="value2" vsli:raw="The second matrix.">第二個矩陣。</param>
      <returns vsli:raw="The matrix containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含值的矩陣，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.ToString">
      <summary vsli:raw="Returns a string that represents this matrix.">傳回表示這個矩陣的字串。</summary>
      <returns vsli:raw="The string representation of this matrix.">這個矩陣的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transform(System.Numerics.Matrix4x4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms the specified matrix by applying the specified Quaternion rotation.">套用指定的四元數旋轉來轉換指定的矩陣。</summary>
      <param name="value" vsli:raw="The matrix to transform.">要轉換的矩陣。</param>
      <param name="rotation" vsli:raw="The rotation t apply.">要套用的旋轉。</param>
      <returns vsli:raw="The transformed matrix.">已轉換的矩陣。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Translation">
      <summary vsli:raw="Gets or sets the translation component of this matrix.">取得或設定此矩陣的轉移元件。</summary>
      <returns vsli:raw="The translation component of the current instance.">目前執行個體的轉移元件。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transpose(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transposes the rows and columns of a matrix.">轉置矩陣的列和行。</summary>
      <param name="matrix" vsli:raw="The matrix to transpose.">要轉置的矩陣。</param>
      <returns vsli:raw="The transposed matrix.">已轉置的矩陣。</returns>
    </member>
    <member name="T:System.Numerics.Plane">
      <summary vsli:raw="Represents a plane in three-dimensional space.">表示立體空間中的平面。</summary>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified normal and the distance along the normal from the origin.">從指定的法線以及原點到法線的距離，建立 <see cref="T:System.Numerics.Plane" /> 物件。</summary>
      <param name="normal" vsli:raw="The plane's normal vector.">平面的法向量。</param>
      <param name="d" vsli:raw="The plane's distance from the origin along its normal vector.">從原點到法向量的平面距離。</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from a specified four-dimensional vector.">從指定的四維向量，建立 <see cref="T:System.Numerics.Plane" /> 物件。</summary>
      <param name="value" vsli:raw="A vector whose first three elements describe the normal vector, and whose &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; defines the distance along that normal from the origin.">向量的前三個項目說明法向量，其 <see cref="F:System.Numerics.Vector4.W" /> 則定義從原點到法線的距離。</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.">從法線的 X、Y 和 Z 元件以及原點到該法線的距離，建立 <see cref="T:System.Numerics.Plane" /> 物件。</summary>
      <param name="x" vsli:raw="The X component of the normal.">法線的 X 元件。</param>
      <param name="y" vsli:raw="The Y component of the normal.">法線的 Y 元件。</param>
      <param name="z" vsli:raw="The Z component of the normal.">法線的 Z 元件。</param>
      <param name="d" vsli:raw="The distance of the plane along its normal from the origin.">從原點到法線的平面距離。</param>
    </member>
    <member name="M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object that contains three specified points.">建立 <see cref="T:System.Numerics.Plane" /> 物件，其中包含三個指定的點。</summary>
      <param name="point1" vsli:raw="The first point defining the plane.">第一個定義平面的點。</param>
      <param name="point2" vsli:raw="The second point defining the plane.">第二個定義平面的點。</param>
      <param name="point3" vsli:raw="The third point defining the plane.">第三個定義平面的點。</param>
      <returns vsli:raw="The plane containing the three points.">包含三個點的平面。</returns>
    </member>
    <member name="F:System.Numerics.Plane.D">
      <summary vsli:raw="The distance of the plane along its normal from the origin.">從原點到法線的平面距離。</summary>
    </member>
    <member name="M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)">
      <summary vsli:raw="Calculates the dot product of a plane and a 4-dimensional vector.">計算平面和四維向量的內積。</summary>
      <param name="plane" vsli:raw="The plane.">平面。</param>
      <param name="value" vsli:raw="The four-dimensional vector.">四維向量。</param>
      <returns vsli:raw="The dot product.">內積。</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (&lt;see cref=&quot;F:System.Numerics.Plane.D&quot; /&gt;) value of the plane.">傳回此平面的指定三維向量和法向量以及平面距離 (<see cref="F:System.Numerics.Plane.D" />) 值的內積。</summary>
      <param name="plane" vsli:raw="The plane.">平面。</param>
      <param name="value" vsli:raw="The 3-dimensional vector.">三維向量。</param>
      <returns vsli:raw="The dot product.">內積。</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of a specified three-dimensional vector and the &lt;see cref=&quot;F:System.Numerics.Plane.Normal&quot; /&gt; vector of this plane.">傳回此平面的指定三維向量和 <see cref="F:System.Numerics.Plane.Normal" /> 值的內積。</summary>
      <param name="plane" vsli:raw="The plane.">平面。</param>
      <param name="value" vsli:raw="The three-dimensional vector.">三維向量。</param>
      <returns vsli:raw="The dot product.">內積。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another plane object are equal.">傳回值，這個值指出此執行個體和另一個平面物件是否相等。</summary>
      <param name="other" vsli:raw="The other plane.">其他平面。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two planes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">當兩個平面相等時為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要與目前執行個體比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="The hash code.">雜湊碼。</returns>
    </member>
    <member name="F:System.Numerics.Plane.Normal">
      <summary vsli:raw="The normal vector of the plane.">平面的法向量。</summary>
    </member>
    <member name="M:System.Numerics.Plane.Normalize(System.Numerics.Plane)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object whose normal vector is the source plane's normal vector normalized.">建立新 <see cref="T:System.Numerics.Plane" /> 物件，其法向量是標準化的來源平面法向量。</summary>
      <param name="value" vsli:raw="The source plane.">來源向量。</param>
      <returns vsli:raw="The normalized plane.">標準化的平面。</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are equal.">傳回值，這個值表示兩個平面是否相等。</summary>
      <param name="value1" vsli:raw="The first plane to compare.">要比較的第一個平面。</param>
      <param name="value2" vsli:raw="The second plane to compare.">要比較的第二個平面。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary vsli:raw="Returns a value that indicates whether two planes are not equal.">傳回值，這個值表示兩個平面是否不相等。</summary>
      <param name="value1" vsli:raw="The first plane to compare.">要比較的第一個平面。</param>
      <param name="value2" vsli:raw="The second plane to compare.">要比較的第二個平面。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.ToString">
      <summary vsli:raw="Returns the string representation of this plane object.">傳回這個平面物件的字串表示。</summary>
      <returns vsli:raw="A string that represents this &lt;see cref=&quot;T:System.Numerics.Plane&quot; /&gt; object.">表示這個 <see cref="T:System.Numerics.Plane" /> 物件的字串。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a normalized plane by a 4x4 matrix.">將標準化的平面轉換成 4x4 矩陣。</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">要轉換的標準化平面。</param>
      <param name="matrix" vsli:raw="The transformation matrix to apply to &lt;paramref name=&quot;plane&quot; /&gt;.">要套用至 <paramref name="plane" /> 的轉換矩陣。</param>
      <returns vsli:raw="The transformed plane.">已轉換的平面。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a normalized plane by a Quaternion rotation.">將標準化的平面轉換成四元數旋轉。</summary>
      <param name="plane" vsli:raw="The normalized plane to transform.">要轉換的標準化平面。</param>
      <param name="rotation" vsli:raw="The Quaternion rotation to apply to the plane.">要套用至平面的四元數旋轉。</param>
      <returns vsli:raw="A new plane that results from applying the Quaternion rotation.">套用四元數旋轉而產生的新平面。</returns>
    </member>
    <member name="T:System.Numerics.Quaternion">
      <summary vsli:raw="Represents a vector that is used to encode three-dimensional physical rotations.">表示用來編碼三維實體旋轉的向量。</summary>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from the specified vector and rotation parts.">從指定的向量和旋轉部分建立四元數。</summary>
      <param name="vectorPart" vsli:raw="The vector part of the quaternion.">四元數的向量部分。</param>
      <param name="scalarPart" vsli:raw="The rotation part of the quaternion.">四元數的旋轉部分。</param>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Constructs a quaternion from the specified components.">從指定的元件建構四元數。</summary>
      <param name="x" vsli:raw="The value to assign to the X component of the quaternion.">要指派給四元數的 X 元件值。</param>
      <param name="y" vsli:raw="The value to assign to the Y component of the quaternion.">要指派給四元數的 Y 元件值。</param>
      <param name="z" vsli:raw="The value to assign to the Z component of the quaternion.">要指派給四元數的 Z 元件值。</param>
      <param name="w" vsli:raw="The value to assign to the W component of the quaternion.">要指派給四元數的 W 元件值。</param>
    </member>
    <member name="M:System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">將一個四元數的每個元素和第二個四元數的相對應元素相加。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一個四元數。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二個四元數。</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">包含 <paramref name="value1" /> 和 <paramref name="value2" /> 加總值的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Concatenates two quaternions.">串連兩個四元數。</summary>
      <param name="value1" vsli:raw="The first quaternion rotation in the series.">數列中的第一個四元數旋轉。</param>
      <param name="value2" vsli:raw="The second quaternion rotation in the series.">數列中的第二個四元數旋轉。</param>
      <returns vsli:raw="A new quaternion representing the concatenation of the &lt;paramref name=&quot;value1&quot; /&gt; rotation followed by the &lt;paramref name=&quot;value2&quot; /&gt; rotation.">表示 <paramref name="value1" /> 旋轉後接 <paramref name="value2" /> 旋轉之串連的新四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the conjugate of a specified quaternion.">傳回指定四元數的共軛。</summary>
      <param name="value" vsli:raw="The quaternion.">四元數。</param>
      <returns vsli:raw="A new quaternion that is the conjugate of &lt;see langword=&quot;value&quot; /&gt;.">為 <see langword="value" /> 共軛的新四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Creates a quaternion from a unit vector and an angle to rotate around the vector.">從單位向量和對此向量旋轉的角度建立四元數。</summary>
      <param name="axis" vsli:raw="The unit vector to rotate around.">要繞著選轉的單位向量。</param>
      <param name="angle" vsli:raw="The angle, in radians, to rotate around the vector.">繞著向量旋轉的角度，以弧度為單位。</param>
      <returns vsli:raw="The newly created quaternion.">新建立的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)">
      <summary vsli:raw="Creates a quaternion from the specified rotation matrix.">從指定的旋轉矩陣建立四元數。</summary>
      <param name="matrix" vsli:raw="The rotation matrix.">旋轉矩陣。</param>
      <returns vsli:raw="The newly created quaternion.">新建立的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a new quaternion from the given yaw, pitch, and roll.">依據指定的繞 Y 軸旋轉、繞 X 軸旋轉和滾動建立一個新四元數。</summary>
      <param name="yaw" vsli:raw="The yaw angle, in radians, around the Y axis.">繞 Y 軸旋轉的角度，以弧度為單位。</param>
      <param name="pitch" vsli:raw="The pitch angle, in radians, around the X axis.">繞 X 軸旋轉的角度，以弧度為單位。</param>
      <param name="roll" vsli:raw="The roll angle, in radians, around the Z axis.">繞 Z 軸滾動的角度，以弧度為單位。</param>
      <returns vsli:raw="The resulting quaternion.">產生的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">將一個四元數除以第二個四元數。</summary>
      <param name="value1" vsli:raw="The dividend.">被除數。</param>
      <param name="value2" vsli:raw="The divisor.">除數。</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" /> 除以 <paramref name="value2" /> 所得到的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Calculates the dot product of two quaternions.">計算兩個四元數的內積。</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">第一個四元數。</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">第二個四元數。</param>
      <returns vsli:raw="The dot product.">內積。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another quaternion are equal.">傳回值，這個值指出此執行個體和另一個四元數是否相等。</summary>
      <param name="other" vsli:raw="The other quaternion.">其他四元數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個四元數相等則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要與目前執行個體比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="The hash code.">雜湊碼。</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.Identity">
      <summary vsli:raw="Gets a quaternion that represents no rotation.">取得表示沒有旋轉的四元數。</summary>
      <returns vsli:raw="A quaternion whose values are &lt;c&gt;(0, 0, 0, 1)&lt;/c&gt;.">四元數, 其值為<c>(0, 0, 0, 1)</c>。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the inverse of a quaternion.">傳回反四元數。</summary>
      <param name="value" vsli:raw="The quaternion.">四元數。</param>
      <returns vsli:raw="The inverted quaternion.">反四元數。</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether the current instance is the identity quaternion.">取得值，這個值表示目前執行個體是否為單位四元數。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance is the identity quaternion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果目前的執行個體是單位四元數，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Length">
      <summary vsli:raw="Calculates the length of the quaternion.">計算此四元數的長度。</summary>
      <returns vsli:raw="The computed length of the quaternion.">計算出的四元數長度。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.LengthSquared">
      <summary vsli:raw="Calculates the squared length of the quaternion.">計算此四元數的長度平方。</summary>
      <returns vsli:raw="The length squared of the quaternion.">此四元數的長度平方。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the second quaternion.">根據指定第二個四元數之加權的值，執行兩個四元數之間的線性插補。</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">第一個四元數。</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">第二個四元數。</param>
      <param name="amount" vsli:raw="The relative weight of &lt;paramref name=&quot;quaternion2&quot; /&gt; in the interpolation.">在插補中 <paramref name="quaternion2" /> 的相對加權。</param>
      <returns vsli:raw="The interpolated quaternion.">插補的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">傳回將兩個四元數一起相乘所產生的四元數。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一個四元數。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二個四元數。</param>
      <returns vsli:raw="The product quaternion.">乘積的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">傳回四元數，該四元數為依據純量因數縮放指定四元數之所有元件而產生。</summary>
      <param name="value1" vsli:raw="The source quaternion.">來源四元數。</param>
      <param name="value2" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled quaternion.">縮放的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">將四元數的每個元件變換正負號。</summary>
      <param name="value" vsli:raw="The quaternion to negate.">要變換正負號的四元數。</param>
      <returns vsli:raw="The negated quaternion.">已變換正負號的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)">
      <summary vsli:raw="Divides each component of a specified &lt;see cref=&quot;T:System.Numerics.Quaternion&quot; /&gt; by its length.">將指定的 <see cref="T:System.Numerics.Quaternion" /> 之每個元件除以其長度。</summary>
      <param name="value" vsli:raw="The quaternion to normalize.">要正規化的四元數。</param>
      <returns vsli:raw="The normalized quaternion.">已正規化的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Adds each element in one quaternion with its corresponding element in a second quaternion.">將一個四元數的每個元素和第二個四元數的相對應元素相加。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一個四元數。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二個四元數。</param>
      <returns vsli:raw="The quaternion that contains the summed values of &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;.">包含 <paramref name="value1" /> 和 <paramref name="value2" /> 加總值的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Divides one quaternion by a second quaternion.">將一個四元數除以第二個四元數。</summary>
      <param name="value1" vsli:raw="The dividend.">被除數。</param>
      <param name="value2" vsli:raw="The divisor.">除數。</param>
      <returns vsli:raw="The quaternion that results from dividing &lt;paramref name=&quot;value1&quot; /&gt; by &lt;paramref name=&quot;value2&quot; /&gt;.">
        <paramref name="value1" /> 除以 <paramref name="value2" /> 所得到的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are equal.">傳回值，指出兩個四元數是否相等。</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">要比較的第一個四元數。</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">要比較的第二個四元數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two quaternions are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個四元數相等則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns a value that indicates whether two quaternions are not equal.">傳回值，指出兩個四元數是否不相等。</summary>
      <param name="value1" vsli:raw="The first quaternion to compare.">要比較的第一個四元數。</param>
      <param name="value2" vsli:raw="The second quaternion to compare.">要比較的第二個四元數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Returns the quaternion that results from multiplying two quaternions together.">傳回將兩個四元數一起相乘所產生的四元數。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一個四元數。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二個四元數。</param>
      <returns vsli:raw="The product quaternion.">乘積的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor.">傳回四元數，該四元數為依據純量因數縮放指定四元數之所有元件而產生。</summary>
      <param name="value1" vsli:raw="The source quaternion.">來源四元數。</param>
      <param name="value2" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled quaternion.">縮放的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">將第二個四元數中的每個元素減去第一個四元數中相對應的元素。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一個四元數。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二個四元數。</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含值的四元數，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)">
      <summary vsli:raw="Reverses the sign of each component of the quaternion.">將四元數的每個元件變換正負號。</summary>
      <param name="value" vsli:raw="The quaternion to negate.">要變換正負號的四元數。</param>
      <returns vsli:raw="The negated quaternion.">已變換正負號的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary vsli:raw="Interpolates between two quaternions, using spherical linear interpolation.">使用球面線性插補，在兩個四元數間進行插補。</summary>
      <param name="quaternion1" vsli:raw="The first quaternion.">第一個四元數。</param>
      <param name="quaternion2" vsli:raw="The second quaternion.">第二個四元數。</param>
      <param name="amount" vsli:raw="The relative weight of the second quaternion in the interpolation.">在插補中第二個四元數的相對加權。</param>
      <returns vsli:raw="The interpolated quaternion.">插補的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary vsli:raw="Subtracts each element in a second quaternion from its corresponding element in a first quaternion.">將第二個四元數中的每個元素減去第一個四元數中相對應的元素。</summary>
      <param name="value1" vsli:raw="The first quaternion.">第一個四元數。</param>
      <param name="value2" vsli:raw="The second quaternion.">第二個四元數。</param>
      <returns vsli:raw="The quaternion containing the values that result from subtracting each element in &lt;paramref name=&quot;value2&quot; /&gt; from its corresponding element in &lt;paramref name=&quot;value1&quot; /&gt;.">包含值的四元數，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.ToString">
      <summary vsli:raw="Returns a string that represents this quaternion.">傳回表示這個四元數的字串。</summary>
      <returns vsli:raw="The string representation of this quaternion.">此四元數的字串表示。</returns>
    </member>
    <member name="F:System.Numerics.Quaternion.W">
      <summary vsli:raw="The rotation component of the quaternion.">四元數的旋轉元件。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.X">
      <summary vsli:raw="The X value of the vector component of the quaternion.">四元數之向量元件的 X 值。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Y">
      <summary vsli:raw="The Y value of the vector component of the quaternion.">四元數之向量元件的 Y 值。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Z">
      <summary vsli:raw="The Z value of the vector component of the quaternion.">四元數之向量元件的 Z 值。</summary>
    </member>
    <member name="T:System.Numerics.Vector">
      <summary vsli:raw="Provides a collection of static methods for creating, manipulating, and otherwise operating on generic vectors.">提供建立、操作、結合以及轉換泛型向量之靜態簡便方法的集合。</summary>
    </member>
    <member name="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the absolute values of the given vector's elements.">傳回新向量，其元素為指定向量之元素的絕對值。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The absolute value vector.">絕對值的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the sum of each pair of elements from two given vectors.">傳回新的向量，其值為兩個指定向量之每對元素的總和。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The summed vector.">加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise And Not operation on each pair of corresponding elements in two vectors.">透過在兩個向量的每組對應元素上執行位元 And Not 運算，以傳回新的向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The resulting vector.">產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned bytes.">將指定向量的位元轉換成不帶正負號之位元組向量的位元。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a double-precision floating-point vector.">將指定向量的位元轉換成雙精確度浮點向量的位元。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of 16-bit integers.">將指定向量的位元轉換成 16 位元整數向量的位元。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of integers.">將指定向量的位元轉換成整數向量的位元。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of long integers.">將指定向量的位元轉換成長整數向量的位元。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of signed bytes.">將指定向量的位元轉換成帶正負號之位元組向量的位元。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a single-precision floating-point vector.">將指定向量的位元轉換成單精確度浮點向量的位元。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned 16-bit integers.">將指定向量的位元轉換成不帶正負號之 16 位元整數向量的位元。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned integers.">將指定向量的位元轉換成不帶正負號之整數向量的位元。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Reinterprets the bits of a specified vector into those of a vector of unsigned long integers.">將指定向量的位元轉換成不帶正負號之長整數向量的位元。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each pair of elements in two vectors.">透過在兩個向量的每對元素上執行位元 <see langword="And" /> 運算，以傳回新的向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The resulting vector.">產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each pair of elements in two vectors.">透過在兩個向量的每對元素上執行位元 <see langword="Or" /> 運算，以傳回新的向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The resulting vector.">產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Creates a new single-precision vector with elements selected between two specified single-precision source vectors based on an integral mask vector.">依據整數遮罩向量，使用在兩個指定單精確度來源向量之間所選取的元素，來建立新的單精確度向量。</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">整數遮罩向量，用來選擇磁碟機。</param>
      <param name="left" vsli:raw="The first source vector.">第一個來源向量。</param>
      <param name="right" vsli:raw="The second source vector.">第二個來源向量。</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">使用依據遮照選取之元素的新向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Creates a new double-precision vector with elements selected between two specified double-precision source vectors based on an integral mask vector.">依據整數遮罩向量，使用在兩個指定雙精確度來源向量之間所選取的元素，來建立新的雙精確度向量。</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">整數遮罩向量，用來選擇磁碟機。</param>
      <param name="left" vsli:raw="The first source vector.">第一個來源向量。</param>
      <param name="right" vsli:raw="The second source vector.">第二個來源向量。</param>
      <returns vsli:raw="The new vector with elements selected based on the mask.">使用依據遮照選取之元素的新向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Creates a new vector of a specified type with elements selected between two specified source vectors of the same type based on an integral mask vector.">依據整數遮罩向量，使用在兩個相同類型的指定來源向量之間所選取的元素，來建立新的指定類型向量。</summary>
      <param name="condition" vsli:raw="The integral mask vector used to drive selection.">整數遮罩向量，用來選擇磁碟機。</param>
      <param name="left" vsli:raw="The first source vector.">第一個來源向量。</param>
      <param name="right" vsli:raw="The second source vector.">第二個來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The new vector with elements selected based on the mask.">使用依據遮照選取之元素的新向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">將 <see cref="System.Numerics.Vector{System.Int64}" /> 轉換成 <see cref="System.Numerics.Vector{System.Double}" />。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <returns vsli:raw="The converted vector.">轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt;.">將 <see cref="System.Numerics.Vector{System.UInt64}" /> 轉換成 <see cref="System.Numerics.Vector{System.Double}" />。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <returns vsli:raw="The converted vector.">轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">將 <see cref="System.Numerics.Vector{System.Single}" /> 轉換成 <see cref="System.Numerics.Vector{System.Int32}" />。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <returns vsli:raw="The converted vector.">轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt;.">將 <see cref="System.Numerics.Vector{System.Double}" /> 轉換成 <see cref="System.Numerics.Vector{System.Int64}" />。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <returns vsli:raw="The converted vector.">轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">將 <see cref="System.Numerics.Vector{System.Int32}" /> 轉換成 <see cref="System.Numerics.Vector{System.Single}" />。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <returns vsli:raw="The converted vector.">轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">將 <see cref="System.Numerics.Vector{System.UInt32}" /> 轉換成 <see cref="System.Numerics.Vector{System.Single}" />。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <returns vsli:raw="The converted vector.">轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt32(System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">將 <see cref="System.Numerics.Vector{System.Single}" /> 轉換成 <see cref="System.Numerics.Vector{System.UInt32}" />。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <returns vsli:raw="The converted vector.">轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt64(System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Converts a &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; to a &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt;.">將 <see cref="System.Numerics.Vector{System.Double}" /> 轉換成 <see cref="System.Numerics.Vector{System.UInt64}" />。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <returns vsli:raw="The converted vector.">轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the result of dividing the first vector's elements by the corresponding elements in the second vector.">傳回新的向量，其值為第一個向量的元素除以第二個向量之對應元素的結果。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The divided vector.">相除的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns the dot product of two vectors.">傳回兩個向量的內積。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The dot product.">內積。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified double-precision vectors are equal.">傳回新的整數向量，其元素表示兩個指定雙精確度向量的元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified integral vectors are equal.">傳回新的整數向量，其元素表示兩個指定整數向量的元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in two specified long integer vectors are equal.">傳回新向量，其元素表示兩個指定長整數向量的元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting long integer vector.">產生的長整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in two specified single-precision vectors are equal.">傳回新的整數向量，其元素表示兩個指定單精確度向量的元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in two specified vectors of the same type are equal.">傳回指定類型的新向量，其元素表示兩個相同類型之指定向量的元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The resulting vector.">產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in the given vectors is equal.">傳回值，指出指定向量的每對元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 的所有元素都相等，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the given vectors is equal.">傳回值，指出指定向量的任何一對元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pair in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; is equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 中的任何元素組相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are greater than their corresponding elements in a second double-precision floating-point vector.">傳回新的整數向量，其元素表示某個雙精確度浮點向量的元素是否大於第二個雙精確度浮點向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than their corresponding elements in a second integral vector.">傳回新的整數向量，其元素表示某個整數向量的元素是否大於第二個整數向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than their corresponding elements in a second long integer vector.">傳回新的長整數向量，其元素表示某個長整數向量的元素是否大於第二個長整數向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting long integer vector.">產生的長整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are greater than their corresponding elements in a second single-precision floating-point vector.">傳回新的整數向量，其元素表示某個單精確度浮點向量的元素是否大於第二個單精確度浮點向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than their corresponding elements in the second vector of the same time.">傳回新向量，其元素表示某個指定類型向量的元素是否大於相同類型之第二個向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The resulting vector.">產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than the corresponding elements in the second vector.">傳回值，指出第一個向量的所有元素是否大於第二個向量的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 的所有元素大於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than the corresponding element in the second vector.">傳回值，指出第一個向量的任何元素是否大於第二個向量的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 的任何元素大於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the second double-precision floating-point vector.">傳回新的整數向量，其元素表示某個向量的元素是否大於或等於第二個雙精確度浮點向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than or equal to their corresponding elements in the second integral vector.">傳回新的整數向量，其元素表示某個整數向量的元素是否大於或等於第二個整數向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than or equal to their corresponding elements in the second long integer vector.">傳回新的長整數向量，其元素表示某個長整數向量的元素是否大於或等於第二個長整數向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting long integer vector.">產生的長整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the single-precision floating-point second vector.">傳回新的整數向量，其元素表示某個向量的元素是否大於或等於第二個單精確度浮點向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than or equal to their corresponding elements in the second vector of the same type.">傳回新向量，其元素表示某個指定類型向量的元素是否大於或等於相同類型之第二個向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The resulting vector.">產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are greater than or equal to all the corresponding elements in the second vector.">傳回值，指出第一個向量的所有元素是否大於或等於第二個向量的所有對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all elements in &lt;paramref name=&quot;left&quot; /&gt; are greater than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 的所有元素大於或等於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is greater than or equal to the corresponding element in the second vector.">傳回值，指出第一個向量的任何元素是否大於或等於第二個向量的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is greater than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 的任何元素大於或等於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Vector.IsHardwareAccelerated">
      <summary vsli:raw="Gets a value that indicates whether vector operations are subject to hardware acceleration through JIT intrinsic support.">取得值，指出向量運算是否受限於透過 JIT 內建支援的硬體加速。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if vector operations are subject to hardware acceleration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果向量運算受限於硬體加速，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than their corresponding elements in a second double-precision floating-point vector.">傳回新的整數向量，其元素表示某個雙精確度浮點向量的元素是否小於第二個雙精確度浮點向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than their corresponding elements in a second integral vector.">傳回新的整數向量，其元素表示某個整數向量的元素是否小於第二個整數向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less than their corresponding elements in a second long integer vector.">傳回新的長整數向量，其元素表示某個長整數向量的元素是否小於第二個長整數向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting long integer vector.">產生的長整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision vector are less than their corresponding elements in a second single-precision vector.">傳回新的整數向量，其元素表示某個單精確度向量的元素是否小於第二個單精確度向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector of a specified type whose elements signal whether the elements in one vector are less than their corresponding elements in the second vector.">傳回指定類型的新向量，其元素表示某個向量的元素是否小於第二個向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The resulting vector.">產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all of the elements in the first vector are less than their corresponding elements in the second vector.">傳回值，指出第一個向量的所有元素是否小於第二個向量的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 的所有元素小於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than the corresponding element in the second vector.">傳回值，指出第一個向量的任何元素是否小於第二個向量的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 的任何元素小於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than or equal to their corresponding elements in a second double-precision floating-point vector.">傳回新的整數向量，其元素表示某個雙精確度浮點向量的元素是否小於或等於第二個雙精確度浮點向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one integral vector are less than or equal to their corresponding elements in a second integral vector.">傳回新的整數向量，其元素表示某個整數向量的元素是否小於或等於第二個整數向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less or equal to their corresponding elements in a second long integer vector.">傳回新的長整數向量，其元素表示某個長整數向量的元素是否小於或等於第二個長整數向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting long integer vector.">產生的長整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary vsli:raw="Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are less than or equal to their corresponding elements in a second single-precision floating-point vector.">傳回新的整數向量，其元素表示某個單精確度浮點向量的元素是否小於或等於第二個單精確度浮點向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="The resulting integral vector.">產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements signal whether the elements in one vector are less than or equal to their corresponding elements in the second vector.">傳回新向量，其元素表示某個向量的元素是否小於或等於第二個向量中的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The resulting vector.">產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether all elements in the first vector are less than or equal to their corresponding elements in the second vector.">傳回值，指出第一個向量的所有元素是否小於或等於第二個向量的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all of the elements in &lt;paramref name=&quot;left&quot; /&gt; are less than or equal to the corresponding elements in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 的所有元素小於或等於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a value that indicates whether any element in the first vector is less than or equal to the corresponding element in the second vector.">傳回值，指出第一個向量的任何元素是否小於或等於第二個向量的對應元素。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element in &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to the corresponding element in &lt;paramref name=&quot;right&quot; /&gt;; otherwise,  &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 的任何元素小於或等於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the maximum of each pair of elements in the two given vectors.">傳回新的向量，其值為兩個指定向量之每對元素的最大值。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The maximum vector.">最大的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the minimum of each pair of elements in the two given vectors.">傳回新的向量，其元素為兩個指定向量之每對元素的最大值。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The minimum vector.">最小的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are a scalar value multiplied by each of the values of a specified vector.">傳回新的向量，其值為純量值乘以指定向量的每個值。</summary>
      <param name="left" vsli:raw="The scalar value.">純量值。</param>
      <param name="right" vsli:raw="The vector.">向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
      <summary vsli:raw="Returns a new vector whose values are the values of a specified vector each multiplied by a scalar value.">傳回新的向量，其值為純量值乘以指定向量的每個值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">純量值。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The element-wise product vector.">元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt;.">將兩個 <see cref="System.Numerics.Vector{System.Double}" /> 執行個體縮小成一個 <see cref="System.Numerics.Vector{System.Single}" />。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <see cref="System.Numerics.Vector{System.Single}" />，其中包含從來源向量縮小的元素。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt;.">將兩個 <see cref="System.Numerics.Vector{System.Int16}" /> 執行個體縮小成一個 <see cref="System.Numerics.Vector{System.SByte}" />。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <see cref="System.Numerics.Vector{System.SByte}" />，其中包含從來源向量縮小的元素。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt;.">將兩個 <see cref="System.Numerics.Vector{System.Int32}" /> 執行個體縮小成一個 <see cref="System.Numerics.Vector{System.Int16}" />。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <see cref="System.Numerics.Vector{System.Int16}" />，其中包含從來源向量縮小的元素。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt;.">將兩個 <see cref="System.Numerics.Vector{System.Int64}" /> 執行個體縮小成一個 <see cref="System.Numerics.Vector{System.Int32}" />。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <see cref="System.Numerics.Vector{System.Int32}" />，其中包含從來源向量縮小的元素。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt;.">將兩個 <see cref="System.Numerics.Vector{System.UInt16}" /> 執行個體縮小成一個 <see cref="System.Numerics.Vector{System.Byte}" />。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <see cref="System.Numerics.Vector{System.Byte}" />，其中包含從來源向量縮小的元素。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt;.">將兩個 <see cref="System.Numerics.Vector{System.UInt32}" /> 執行個體縮小成一個 <see cref="System.Numerics.Vector{System.UInt16}" />。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <see cref="System.Numerics.Vector{System.UInt16}" />，其中包含從來源向量縮小的元素。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})">
      <summary vsli:raw="Narrows two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances into one &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt;.">將兩個 <see cref="System.Numerics.Vector{System.UInt64}" /> 執行個體縮小成一個 <see cref="System.Numerics.Vector{System.UInt32}" />。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns vsli:raw="A &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; containing elements narrowed from the source vectors.">
        <see cref="System.Numerics.Vector{System.UInt32}" />，其中包含從來源向量縮小的元素。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the negation of the corresponding element in the specified vector.">傳回新向量，其元素為指定向量之對應元素的否定。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The negated vector.">已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">傳回新向量，其元素是擷取指定向量之元素的一補數而得。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The resulting vector.">產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose elements are the square roots of a specified vector's elements.">傳回新向量，其元素為指定向量之每個元素的平方根。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The square root vector.">平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector whose values are the difference between the elements in the second vector and their corresponding elements in the first vector.">傳回新的向量，其值為第二個向量的元素與第一個向量之對應元素的差異。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The difference vector.">差異向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt16}@,System.Numerics.Vector{System.UInt16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Byte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; instances.">將一個 <see cref="System.Numerics.Vector{System.Byte}" /> 擴大成兩個 <see cref="System.Numerics.Vector{System.UInt16}" /> 執行個體。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int32}@,System.Numerics.Vector{System.Int32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; instances.">將一個 <see cref="System.Numerics.Vector{System.Int16}" /> 擴大成兩個 <see cref="System.Numerics.Vector{System.Int32}" /> 執行個體。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64}@,System.Numerics.Vector{System.Int64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Int32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int64&amp;gt;&lt;/c&gt; instances.">將一個 <see cref="System.Numerics.Vector{System.Int32}" /> 擴大成兩個 <see cref="System.Numerics.Vector{System.Int64}" /> 執行個體。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int16}@,System.Numerics.Vector{System.Int16}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;SByte&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Int16&amp;gt;&lt;/c&gt; instances.">將一個 <see cref="System.Numerics.Vector{System.SByte}" /> 擴大成兩個 <see cref="System.Numerics.Vector{System.Int16}" /> 執行個體。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Double}@,System.Numerics.Vector{System.Double}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;Single&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;Double&amp;gt;&lt;/c&gt; instances.">將一個 <see cref="System.Numerics.Vector{System.Single}" /> 擴大成兩個 <see cref="System.Numerics.Vector{System.Double}" /> 執行個體。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt32}@,System.Numerics.Vector{System.UInt32}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt16&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; instances.">將一個 <see cref="System.Numerics.Vector{System.UInt16}" /> 擴大成兩個 <see cref="System.Numerics.Vector{System.UInt32}" /> 執行個體。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64}@,System.Numerics.Vector{System.UInt64}@)">
      <summary vsli:raw="Widens a &lt;c&gt;Vector&amp;lt;UInt32&amp;gt;&lt;/c&gt; into two &lt;c&gt;Vector&amp;lt;UInt64&amp;gt;&lt;/c&gt; instances.">將一個 <see cref="System.Numerics.Vector{System.UInt32}" /> 擴大成兩個 <see cref="System.Numerics.Vector{System.UInt64}" /> 執行個體。</summary>
      <param name="source" vsli:raw="The source vector whose elements are widened into the outputs.">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise exclusive Or (&lt;see langword=&quot;XOr&quot; /&gt;) operation on each pair of elements in two vectors.">透過在兩個向量的每對元素上執行位元互斥 Or (<see langword="XOr" />) 運算，以傳回新的向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <typeparam name="T" vsli:raw="The vector type. &lt;c&gt;T&lt;/c&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
      <returns vsli:raw="The resulting vector.">產生的向量。</returns>
    </member>
    <member name="T:System.Numerics.Vector`1">
      <summary vsli:raw="Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.">表示指定數值類型的單一向量，其適用於低層級的平行演算法最佳化。</summary>
      <typeparam name="T" vsli:raw="The type of the elements in the vector. &lt;typeparamref name=&quot;T&quot; /&gt; can be any primitive numeric type.">向量類型。 <c>T</c>可以是任何基本數數值型別。</typeparam>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0)">
      <summary vsli:raw="Creates a vector whose components are of a specified type.">建立具有指定類型元件的向量。</summary>
      <param name="value" vsli:raw="The numeric type that defines the type of the components in the vector.">定義向量中元件類型的數字型別。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[])">
      <summary vsli:raw="Creates a vector from a specified array.">從指定的陣列建立向量。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">數字陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
      <summary vsli:raw="Creates a vector from a specified array starting at a specified index position.">從指定索引位置開始的指定陣列建立向量。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as an array of objects of type T. The array must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements from the specified index and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">數字陣列。</param>
      <param name="index" vsli:raw="The starting index position from which to create the vector.">要從中建立向量的開始索引位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;values&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="values" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The length of &lt;paramref name=&quot;values&quot; /&gt; minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> 小於零。  
-或- 
<paramref name="values" /> 的長度減 <paramref name="index" /> 小於 <see cref="P:System.Numerics.Vector`1.Count" />。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.ReadOnlySpan`1&quot; /&gt;.">從指定的 <see cref="T:System.ReadOnlySpan`1" /> 建構向量。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a read-only span of objects of type &lt;see langword=&quot;T&quot; /&gt;. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">要新增至向量作為 T 類型物件唯讀範圍的值。範圍必須包含至少 <see cref="P:System.Numerics.Vector`1.Count" /> 個元素。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Constructs a vector from the given read-only span of bytes.">從指定的唯讀位元組範圍建構向量。</summary>
      <param name="values" vsli:raw="A read-only span of bytes that contains the values to add to the vector. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">唯讀位元組範圍，其中包含要新增至向量的值。 範圍必須包含至少 <see cref="P:System.Numerics.Vector`1.Count" /> 個元素。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.Span{`0})">
      <summary vsli:raw="Constructs a vector from the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">從指定的 <see cref="T:System.Span`1" /> 建構向量。</summary>
      <param name="values" vsli:raw="The values to add to the vector, as a span of objects of type T. The span must contain at least &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements and only the first &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt; elements are used.">要新增至向量作為 T 類型物件範圍的值。範圍必須包含至少 <see cref="P:System.Numerics.Vector`1.Count" /> 個元素。</param>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[])">
      <summary vsli:raw="Copies the vector instance to a specified destination array.">將向量執行個體複製到指定的目的陣列。</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">可接收向量值複本的陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current vector is greater than the number of elements available in the &lt;paramref name=&quot;destination&quot; /&gt; array.">目前向量中的項目數大於 <paramref name="destination" /> 陣列中所提供的項目數。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the vector instance to a specified destination array starting at a specified index position.">從指定的索引位置開始，將向量執行個體複製到目的陣列。</summary>
      <param name="destination" vsli:raw="The array to receive a copy of the vector values.">可接收向量值複本的陣列。</param>
      <param name="startIndex" vsli:raw="The starting index in &lt;paramref name=&quot;destination&quot; /&gt; at which to begin the copy operation.">要從中開始複製作業的 <paramref name="destination" /> 開始索引。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than the number of elements available from &lt;paramref name=&quot;startIndex&quot; /&gt; to the end of the &lt;paramref name=&quot;destination&quot; /&gt; array.">目前執行個體中的項目數大於 <paramref name="startIndex" /> 到 <paramref name="destination" /> 陣列結尾所提供的項目數。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero or greater than the last index in &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="index" /> 小於零或大於 <paramref name="destination" /> 中的最後一個索引。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{`0})">
      <summary vsli:raw="Copies the vector to the given span. .">將向量複製到指定的範圍。 執行個體時提供 SQL Server 登入。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">要將值複製到其中的目的地範圍。 目的地範圍大小必須至少為 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">來源向量中的元素數大於目的地範圍中可用元素數。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">將向量複製到指定的 <see cref="T:System.Span`1" />。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">要將值複製到其中的目的地範圍。 目的地範圍大小必須至少為 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source vector is greater than those available in the destination span.">來源向量中的元素數大於目的地範圍中可用元素數。</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.Count">
      <summary vsli:raw="Returns the number of elements stored in the vector.">傳回向量中儲存的項目數。</summary>
      <returns vsli:raw="The number of elements stored in the vector.">向量中儲存的項目數。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Access to the property getter via reflection is not supported.&#xA;        &#xA;-or-&#xA;        &#xA;.NET 5 and later: Type &lt;see langword=&quot;T&quot; /&gt; is not supported.">不支援透過反射屬性存取 getter 屬性。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified vector.">傳回值，這個值指出此執行個體是否與指定的向量相等。</summary>
      <param name="other" vsli:raw="The vector to compare with this instance.">要與這個執行個體比較的向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;other&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果目前的執行個體和 <paramref name="other" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">傳回值，這個值指出此執行個體是否與指定的物件相等。</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">與這個執行個體相互比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The method returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is null, or if &lt;paramref name=&quot;obj&quot; /&gt; is a vector of a different type than the current instance.">如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 為 null，或者，如果 <paramref name="obj" /> 與目前執行個體的向量類型不同，此方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="The hash code.">雜湊碼。</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Item(System.Int32)">
      <summary vsli:raw="Gets the element at a specified index.">取得位於指定索引上的項目。</summary>
      <param name="index" vsli:raw="The index of the element to return.">要傳回的項目索引。</param>
      <returns vsli:raw="The element at index &lt;paramref name=&quot;index&quot; /&gt;.">位於索引 <paramref name="index" /> 的項目。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">
        <paramref name="index" /> 小於零。  
-或- 
 <paramref name="index" /> 大於或等於 <see cref="P:System.Numerics.Vector`1.Count" />。</exception>
    </member>
    <member name="P:System.Numerics.Vector`1.One">
      <summary vsli:raw="Returns a vector containing all ones.">傳回包含所有一的向量。</summary>
      <returns vsli:raw="A vector containing all ones.">包含所有一的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Adds two vectors together.">將兩個向量一起相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二個向量。</param>
      <returns vsli:raw="The summed vector.">加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on each of the elements in two vectors.">透過在兩個向量的每個元素上執行位元 <see langword="And" /> 運算，以傳回新的向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;And&quot; /&gt; of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">由 <paramref name="left" /> 與 <paramref name="right" /> 進行位元 <see langword="And" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on each of the elements in two vectors.">透過在兩個向量的每個元素上執行位元 <see langword="Or" /> 運算，以傳回新的向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;Or&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">由 <paramref name="left" /> 與 <paramref name="right" /> 的元素進行位元 <see langword="Or" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Divides the first vector by the second.">將第一個向量除以第二個。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 除以 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors are equal.">傳回值，指出兩個指定向量的每對元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector by performing a bitwise &lt;see langword=&quot;XOr&quot; /&gt; operation on each of the elements in two vectors.">透過在兩個向量的每個元素上執行位元 <see langword="XOr" /> 運算，以傳回新的向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from the bitwise &lt;see langword=&quot;XOr&quot; /&gt; of the elements in &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">由 <paramref name="left" /> 與 <paramref name="right" /> 的元素進行位元 <see langword="XOr" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">將指定向量的位元轉換成 <see cref="T:System.Byte" /> 類型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要轉換的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Double&quot; /&gt;.">將指定向量的位元轉換成 <see cref="T:System.Double" /> 類型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要轉換的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">將指定向量的位元轉換成 <see cref="T:System.Int16" /> 類型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要轉換的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">將指定向量的位元轉換成 <see cref="T:System.Int32" /> 類型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要轉換的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">將指定向量的位元轉換成 <see cref="T:System.Int64" /> 類型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要轉換的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.SByte&quot; /&gt;.">將指定向量的位元轉換成 <see cref="T:System.SByte" /> 類型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要轉換的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">將指定向量的位元轉換成 <see cref="T:System.Single" /> 類型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要轉換的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt16&quot; /&gt;.">將指定向量的位元轉換成 <see cref="T:System.UInt16" /> 類型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要轉換的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">將指定向量的位元轉換成 <see cref="T:System.UInt32" /> 類型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要轉換的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
      <summary vsli:raw="Reinterprets the bits of the specified vector into a vector of type &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">將指定向量的位元轉換成 <see cref="T:System.UInt64" /> 類型的向量。</summary>
      <param name="value" vsli:raw="The vector to reinterpret.">要轉換的向量。</param>
      <returns vsli:raw="The reinterpreted vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a value that indicates whether any single pair of elements in the specified vectors is equal.">傳回值，指出指定向量的任何一對元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any element pairs in left and right are equal. &lt;see langword=&quot;false&quot; /&gt; if no element pairs are equal.">如果 left 和 right 中的任何元素組相等，即為 <see langword="true" />。 如果沒有元素組相等，為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">將向量乘以指定的純量值。</summary>
      <param name="factor" vsli:raw="The scalar value.">純量值。</param>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
      <summary vsli:raw="Multiplies a vector by a specified scalar value.">將向量乘以指定的純量值。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <param name="factor" vsli:raw="A scalar value.">純量值。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
      <summary vsli:raw="Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.">傳回新向量，其元素是擷取指定向量之元素的一補數而得。</summary>
      <param name="value" vsli:raw="The source vector.">來源向量。</param>
      <returns vsli:raw="The one's complement vector.">一補數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary vsli:raw="Subtracts the second vector from the first.">從第一個向量減去第二個向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">從 <paramref name="left" /> 減去 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
      <summary vsli:raw="Negates a given vector.">否定指定向量。</summary>
      <param name="value" vsli:raw="The vector to negate.">要變換正負號的向量。</param>
      <returns vsli:raw="The negated vector.">已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString">
      <summary vsli:raw="Returns the string representation of this vector using default formatting.">使用預設格式傳回此向量的字串表示。</summary>
      <returns vsli:raw="The string representation of this vector.">這個向量的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements.">使用指定格式字串來格式化個別元素，以傳回此向量的字串表示。</summary>
      <param name="format" vsli:raw="The format of individual elements.">定義個別項目的格式。</param>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">使用指定格式字串來格式化個別項目，以及使用指定的格式提供者來定義特定文化特性的格式，傳回目前此向量的字串表示。</summary>
      <param name="format" vsli:raw="The format of individual elements.">定義個別項目的格式。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">格式提供者，提供特定文化特性格式資訊。</param>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{`0})">
      <summary vsli:raw="Attempts to copy the vector to the given &lt;see cref=&quot;T:System.Span`1&quot; /&gt;.">嘗試將向量複製到指定的 <see cref="T:System.Span`1" />。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">要將值複製到其中的目的地範圍。 目的地範圍大小必須至少為 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">如果來源向量已成功複製到 <paramref name="destination" />，則為 <see langword="true" />。 如果 <paramref name="destination" /> 不夠大，無法包含來源向量，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Attempts to copy the vector to the given byte span.">嘗試將向量複製到指定的位元組範圍。</summary>
      <param name="destination" vsli:raw="The destination span to which the values are copied. The destination span must be at least size &lt;see cref=&quot;P:System.Numerics.Vector`1.Count&quot; /&gt;.">要將值複製到其中的目的地範圍。 目的地範圍大小必須至少為 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source vector was successfully copied to &lt;paramref name=&quot;destination&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is not large enough to hold the source vector.">如果來源向量已成功複製到 <paramref name="destination" />，則為 <see langword="true" />。 如果 <paramref name="destination" /> 不夠大，無法包含來源向量，則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Zero">
      <summary vsli:raw="Returns a vector containing all zeroes.">傳回包含所有零的向量。</summary>
      <returns vsli:raw="A vector containing all zeroes.">包含所有零的向量。</returns>
    </member>
    <member name="T:System.Numerics.Vector2">
      <summary vsli:raw="Represents a vector with two single-precision floating-point values.">代表具有兩個單精確度浮點值的向量。</summary>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object whose two elements have the same value.">建立新的 <see cref="T:System.Numerics.Vector2" /> 物件，其兩個元素具有相同的值。</summary>
      <param name="value" vsli:raw="The value to assign to both elements.">要指派給這兩個元素的值。</param>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">建立一個向量，其元素具有指定的值。</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.X&quot; /&gt; field.">要指派給 <see cref="F:System.Numerics.Vector2.X" /> 欄位的值。</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector2.Y&quot; /&gt; field.">要指派給 <see cref="F:System.Numerics.Vector2.Y" /> 欄位的值。</param>
    </member>
    <member name="M:System.Numerics.Vector2.Abs(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">傳回一個向量，其元素為指定向量之每個元素的絕對值。</summary>
      <param name="value" vsli:raw="A vector.">一個向量。</param>
      <returns vsli:raw="The absolute value vector.">絕對值的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">將兩個向量一起相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二個向量。</param>
      <returns vsli:raw="The summed vector.">加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">限制向量介於最小值和最大值之間。</summary>
      <param name="value1" vsli:raw="The vector to restrict.">要限制的向量。</param>
      <param name="min" vsli:raw="The minimum value.">最小值。</param>
      <param name="max" vsli:raw="The maximum value.">最大值。</param>
      <returns vsli:raw="The restricted vector.">受限制的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">將向量的元素複製到指定的陣列。</summary>
      <param name="array" vsli:raw="The destination array.">目的陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">從指定的索引位置開始，將向量的元素複製到指定的陣列。</summary>
      <param name="array" vsli:raw="The destination array.">目的陣列。</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">要複製此向量第一個元素的索引。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> 小於零。  
-或- 
 <paramref name="index" /> 大於或等於陣列長度。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">計算兩個指定的點之間的歐幾里得距離。</summary>
      <param name="value1" vsli:raw="The first point.">第一個點。</param>
      <param name="value2" vsli:raw="The second point.">第二個點。</param>
      <returns vsli:raw="The distance.">距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">傳回兩個指定的點之間的平方歐幾里得距離。</summary>
      <param name="value1" vsli:raw="The first point.">第一個點。</param>
      <param name="value2" vsli:raw="The second point.">第二個點。</param>
      <returns vsli:raw="The distance squared.">平方距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">將第一個向量除以第二個。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector resulting from the division.">相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定的向量除以指定的純量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="divisor" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The vector that results from the division.">相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the dot product of two vectors.">傳回兩個向量的內積。</summary>
      <param name="value1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The dot product.">內積。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">傳回值，這個值指出此執行個體和另一個向量是否相等。</summary>
      <param name="other" vsli:raw="The other vector.">其他向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">當兩個向量相等時為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要與目前執行個體比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="The hash code.">雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Length">
      <summary vsli:raw="Returns the length of the vector.">傳回向量的長度。</summary>
      <returns vsli:raw="The vector's length.">向量的長度。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">傳回向量長度平方。</summary>
      <returns vsli:raw="The vector's length squared.">向量長度平方。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">根據給定的加權執行兩個向量之間的線性插補。</summary>
      <param name="value1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二個向量。</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">介於 0 和 1 的值，表示 <paramref name="value2" /> 的加權。</param>
      <returns vsli:raw="The interpolated vector.">插補的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">傳回一個向量，其元素為兩個指定向量之每個成對元素的最大值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The maximized vector.">最大化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">傳回一個向量，其元素為兩個指定向量之每個成對元素的最小值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The minimized vector.">最小化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">將向量乘以指定的純量。</summary>
      <param name="left" vsli:raw="The vector to multiply.">要相乘的向量。</param>
      <param name="right" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">將純量值乘以指定的向量。</summary>
      <param name="left" vsli:raw="The scaled value.">已縮放的值。</param>
      <param name="right" vsli:raw="The vector.">向量。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Negate(System.Numerics.Vector2)">
      <summary vsli:raw="Negates a specified vector.">將指定的向量變換正負號。</summary>
      <param name="value" vsli:raw="The vector to negate.">要變換正負號的向量。</param>
      <returns vsli:raw="The negated vector.">已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Normalize(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">傳回與指定向量方向相同的向量，但長度為 1。</summary>
      <param name="value" vsli:raw="The vector to normalize.">要正規化的向量。</param>
      <returns vsli:raw="The normalized vector.">已正規化的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.One">
      <summary vsli:raw="Gets a vector whose 2 elements are equal to one.">取得其 2 個元素等於 1 的向量。</summary>
      <returns vsli:raw="A vector whose two elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1)&lt;/c&gt;).">其兩個元素等於1的向量 (也就是, 它會傳回向量<c>(1, 1)</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Adds two vectors together.">將兩個向量一起相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二個向量。</param>
      <returns vsli:raw="The summed vector.">加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Divides the first vector by the second.">將第一個向量除以第二個。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 除以 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定的向量除以指定的純量值。</summary>
      <param name="value1" vsli:raw="The vector.">向量。</param>
      <param name="value2" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The result of the division.">相除的結果。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">傳回值，指出兩個指定向量的每個成對元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">傳回值，這個值表示兩個指定的向量是否不相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">指定的向量乘以指定的純量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">將純量值乘以指定的向量。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">從第一個向量減去第二個向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">從 <paramref name="left" /> 減去 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)">
      <summary vsli:raw="Negates the specified vector.">將指定的向量變換正負號。</summary>
      <param name="value" vsli:raw="The vector to negate.">要變換正負號的向量。</param>
      <returns vsli:raw="The negated vector.">已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">傳回具有指定法線之向量在平面上的反射。</summary>
      <param name="vector" vsli:raw="The source vector.">來源向量。</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">已反射此平面的法線。</param>
      <returns vsli:raw="The reflected vector.">已反射的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">傳回一個向量，其元素為指定向量之每個元素的平方根。</summary>
      <param name="value" vsli:raw="A vector.">一個向量。</param>
      <returns vsli:raw="The square root vector.">平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary vsli:raw="Subtracts the second vector from the first.">從第一個向量減去第二個向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The difference vector.">差異向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">使用預設格式傳回目前執行個體的字串表示。</summary>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">使用指定格式字串來格式化個別項目，傳回目前執行個體的字串表示。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">使用指定格式字串來格式化個別項目，以及使用指定的格式提供者來定義特定文化特性的格式，傳回目前執行個體的字串表示。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">格式提供者，提供特定文化特性格式資訊。</param>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector by a specified 3x2 matrix.">依據指定的 3x2 矩陣轉換向量。</summary>
      <param name="position" vsli:raw="The vector to transform.">要轉換的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">轉換矩陣。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">依據指定的 4x4 矩陣轉換向量。</summary>
      <param name="position" vsli:raw="The vector to transform.">要轉換的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">轉換矩陣。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">依據指定的四元數旋轉值來轉換向量。</summary>
      <param name="value" vsli:raw="The vector to rotate.">要旋轉的向量。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">要套用的旋轉。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary vsli:raw="Transforms a vector normal by the given 3x2 matrix.">依據指定的 3x2 矩陣轉換向量的法線。</summary>
      <param name="normal" vsli:raw="The source vector.">來源向量。</param>
      <param name="matrix" vsli:raw="The matrix.">矩陣。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">依據指定的 4x4 矩陣轉換向量的法線。</summary>
      <param name="normal" vsli:raw="The source vector.">來源向量。</param>
      <param name="matrix" vsli:raw="The matrix.">矩陣。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitX">
      <summary vsli:raw="Gets the vector (1,0).">取得向量 (1,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0)&lt;/c&gt;.">向量<c>(1, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitY">
      <summary vsli:raw="Gets the vector (0,1).">取得向量 (0,1)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1)&lt;/c&gt;.">向量<c>(0, 1)</c>。</returns>
    </member>
    <member name="F:System.Numerics.Vector2.X">
      <summary vsli:raw="The X component of the vector.">此向量的 X 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector2.Y">
      <summary vsli:raw="The Y component of the vector.">此向量的 Y 元件。</summary>
    </member>
    <member name="P:System.Numerics.Vector2.Zero">
      <summary vsli:raw="Returns a vector whose 2 elements are equal to zero.">傳回其 2 個元素等於 0 的向量。</summary>
      <returns vsli:raw="A vector whose two elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0)&lt;/c&gt;).">其兩個元素等於零的向量 (也就是, 它會傳回向量<c>(0, 0)</c>。</returns>
    </member>
    <member name="T:System.Numerics.Vector3">
      <summary vsli:raw="Represents a vector with three  single-precision floating-point values.">代表具有三個單精確度浮點值的向量。</summary>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and the specified value.">從指定的 <see cref="T:System.Numerics.Vector2" /> 物件以及指定的值，建立新的 <see cref="T:System.Numerics.Vector3" /> 物件。</summary>
      <param name="value" vsli:raw="The vector with two elements.">具有兩個元素的向量。</param>
      <param name="z" vsli:raw="The additional value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">要指派給 <see cref="F:System.Numerics.Vector3.Z" /> 欄位的其他值。</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object whose three elements have the same value.">建立新的 <see cref="T:System.Numerics.Vector3" /> 物件，其三個元素具有相同的值。</summary>
      <param name="value" vsli:raw="The value to assign to all three elements.">要指派給這全部三個元素的值。</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">建立一個向量，其元素具有指定的值。</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.X&quot; /&gt; field.">要指派給 <see cref="F:System.Numerics.Vector3.X" /> 欄位的值。</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Y&quot; /&gt; field.">要指派給 <see cref="F:System.Numerics.Vector3.Y" /> 欄位的值。</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector3.Z&quot; /&gt; field.">要指派給 <see cref="F:System.Numerics.Vector3.Z" /> 欄位的值。</param>
    </member>
    <member name="M:System.Numerics.Vector3.Abs(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">傳回一個向量，其元素為指定向量之每個元素的絕對值。</summary>
      <param name="value" vsli:raw="A vector.">一個向量。</param>
      <returns vsli:raw="The absolute value vector.">絕對值的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">將兩個向量一起相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二個向量。</param>
      <returns vsli:raw="The summed vector.">加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">限制向量介於最小值和最大值之間。</summary>
      <param name="value1" vsli:raw="The vector to restrict.">要限制的向量。</param>
      <param name="min" vsli:raw="The minimum value.">最小值。</param>
      <param name="max" vsli:raw="The maximum value.">最大值。</param>
      <returns vsli:raw="The restricted vector.">受限制的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">將向量的元素複製到指定的陣列。</summary>
      <param name="array" vsli:raw="The destination array.">目的陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">從指定的索引位置開始，將向量的元素複製到指定的陣列。</summary>
      <param name="array" vsli:raw="The destination array.">目的陣列。</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">要複製此向量第一個元素的索引。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> 小於零。  
-或- 
 <paramref name="index" /> 大於或等於陣列長度。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the cross product of two vectors.">計算兩個向量的外積。</summary>
      <param name="vector1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The cross product.">外積。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">計算兩個指定的點之間的歐幾里得距離。</summary>
      <param name="value1" vsli:raw="The first point.">第一個點。</param>
      <param name="value2" vsli:raw="The second point.">第二個點。</param>
      <returns vsli:raw="The distance.">距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">傳回兩個指定的點之間的平方歐幾里得距離。</summary>
      <param name="value1" vsli:raw="The first point.">第一個點。</param>
      <param name="value2" vsli:raw="The second point.">第二個點。</param>
      <returns vsli:raw="The distance squared.">平方距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">將第一個向量除以第二個。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector resulting from the division.">相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定的向量除以指定的純量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="divisor" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The vector that results from the division.">相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the dot product of two vectors.">傳回兩個向量的內積。</summary>
      <param name="vector1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The dot product.">內積。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">傳回值，這個值指出此執行個體和另一個向量是否相等。</summary>
      <param name="other" vsli:raw="The other vector.">其他向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">當兩個向量相等時為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要與目前執行個體比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="The hash code.">雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Length">
      <summary vsli:raw="Returns the length of this vector object.">傳回這個向量物件的長度。</summary>
      <returns vsli:raw="The vector's length.">向量的長度。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">傳回向量長度平方。</summary>
      <returns vsli:raw="The vector's length squared.">向量長度平方。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">根據給定的加權執行兩個向量之間的線性插補。</summary>
      <param name="value1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二個向量。</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">介於 0 和 1 的值，表示 <paramref name="value2" /> 的加權。</param>
      <returns vsli:raw="The interpolated vector.">插補的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">傳回一個向量，其元素為兩個指定向量之每個成對元素的最大值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The maximized vector.">最大化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">傳回一個向量，其元素為兩個指定向量之每個成對元素的最小值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The minimized vector.">最小化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">將向量乘以指定的純量。</summary>
      <param name="left" vsli:raw="The vector to multiply.">要相乘的向量。</param>
      <param name="right" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">將純量值乘以指定的向量。</summary>
      <param name="left" vsli:raw="The scaled value.">已縮放的值。</param>
      <param name="right" vsli:raw="The vector.">向量。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Negate(System.Numerics.Vector3)">
      <summary vsli:raw="Negates a specified vector.">將指定的向量變換正負號。</summary>
      <param name="value" vsli:raw="The vector to negate.">要變換正負號的向量。</param>
      <returns vsli:raw="The negated vector.">已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Normalize(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">傳回與指定向量方向相同的向量，但長度為 1。</summary>
      <param name="value" vsli:raw="The vector to normalize.">要正規化的向量。</param>
      <returns vsli:raw="The normalized vector.">已正規化的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.One">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to one.">取得其 3 個元素等於 1 的向量。</summary>
      <returns vsli:raw="A vector whose three elements are equal to one (that is, it returns the vector &lt;c&gt;(1,1,1)&lt;/c&gt;).">其三個元素等於1的向量 (也就是, 它會傳回向量<c>(1, 1, 1)</c>。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Adds two vectors together.">將兩個向量一起相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二個向量。</param>
      <returns vsli:raw="The summed vector.">加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Divides the first vector by the second.">將第一個向量除以第二個。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 除以 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定的向量除以指定的純量值。</summary>
      <param name="value1" vsli:raw="The vector.">向量。</param>
      <param name="value2" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The result of the division.">相除的結果。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">傳回值，指出兩個指定向量的每個成對元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">傳回值，這個值表示兩個指定的向量是否不相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">指定的向量乘以指定的純量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">將純量值乘以指定的向量。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">從第一個向量減去第二個向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">從 <paramref name="left" /> 減去 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)">
      <summary vsli:raw="Negates the specified vector.">將指定的向量變換正負號。</summary>
      <param name="value" vsli:raw="The vector to negate.">要變換正負號的向量。</param>
      <returns vsli:raw="The negated vector.">已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Returns the reflection of a vector off a surface that has the specified normal.">傳回具有指定法線之向量在平面上的反射。</summary>
      <param name="vector" vsli:raw="The source vector.">來源向量。</param>
      <param name="normal" vsli:raw="The normal of the surface being reflected off.">已反射此平面的法線。</param>
      <returns vsli:raw="The reflected vector.">已反射的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">傳回一個向量，其元素為指定向量之每個元素的平方根。</summary>
      <param name="value" vsli:raw="A vector.">一個向量。</param>
      <returns vsli:raw="The square root vector.">平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary vsli:raw="Subtracts the second vector from the first.">從第一個向量減去第二個向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The difference vector.">差異向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">使用預設格式傳回目前執行個體的字串表示。</summary>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">使用指定格式字串來格式化個別項目，傳回目前執行個體的字串表示。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">使用指定格式字串來格式化個別項目，以及使用指定的格式提供者來定義特定文化特性的格式，傳回目前執行個體的字串表示。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">格式提供者，提供特定文化特性格式資訊。</param>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector by a specified 4x4 matrix.">依據指定的 4x4 矩陣轉換向量。</summary>
      <param name="position" vsli:raw="The vector to transform.">要轉換的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">轉換矩陣。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a vector by the specified Quaternion rotation value.">依據指定的四元數旋轉值來轉換向量。</summary>
      <param name="value" vsli:raw="The vector to rotate.">要旋轉的向量。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">要套用的旋轉。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a vector normal by the given 4x4 matrix.">依據指定的 4x4 矩陣轉換向量的法線。</summary>
      <param name="normal" vsli:raw="The source vector.">來源向量。</param>
      <param name="matrix" vsli:raw="The matrix.">矩陣。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0).">取得向量 (1,0,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0)&lt;/c&gt;.">向量<c>(1, 0, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0).">取得向量 (0,1,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0)&lt;/c&gt;.">向量<c>(0, 1, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1).">取得向量 (0,0,1)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1)&lt;/c&gt;.">向量<c>(0, 0, 1)</c>。</returns>
    </member>
    <member name="F:System.Numerics.Vector3.X">
      <summary vsli:raw="The X component of the vector.">此向量的 X 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Y">
      <summary vsli:raw="The Y component of the vector.">此向量的 Y 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Z">
      <summary vsli:raw="The Z component of the vector.">此向量的 Z 元件。</summary>
    </member>
    <member name="P:System.Numerics.Vector3.Zero">
      <summary vsli:raw="Gets a vector whose 3 elements are equal to zero.">取得其 3 個元素等於 0 的向量。</summary>
      <returns vsli:raw="A vector whose three elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0)&lt;/c&gt;).">其三個元素等於零的向量 (也就是, 它會傳回向量<c>(0, 0, 0)</c>。</returns>
    </member>
    <member name="T:System.Numerics.Vector4">
      <summary vsli:raw="Represents a vector with four single-precision floating-point values.">代表具有四個單精確度浮點值的向量。</summary>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)">
      <summary vsli:raw="Creates a   new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector2&quot; /&gt; object and a Z and a W component.">從指定的 <see cref="T:System.Numerics.Vector2" /> 物件以及 Z 和 W 元件，建立新的 <see cref="T:System.Numerics.Vector4" /> 物件。</summary>
      <param name="value" vsli:raw="The vector to use for the X and Y components.">要針對 X 和 Y 元件使用的向量。</param>
      <param name="z" vsli:raw="The Z component.">Z 元件。</param>
      <param name="w" vsli:raw="The W component.">W 元件。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object from the specified &lt;see cref=&quot;T:System.Numerics.Vector3&quot; /&gt; object and a W component.">從指定的 <see cref="T:System.Numerics.Vector3" /> 物件以及 W 元件，建構新的 <see cref="T:System.Numerics.Vector4" /> 物件。</summary>
      <param name="value" vsli:raw="The vector to use for the X, Y, and Z components.">要針對 X、Y 和 Z 元件使用的向量。</param>
      <param name="w" vsli:raw="The W component.">W 元件。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt; object whose four elements have the same value.">建立新的 <see cref="T:System.Numerics.Vector4" /> 物件，其四個元素具有相同的值。</summary>
      <param name="value" vsli:raw="The value to assign to all four elements.">要指派給這全部四個元素的值。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary vsli:raw="Creates a vector whose elements have the specified values.">建立一個向量，其元素具有指定的值。</summary>
      <param name="x" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.X&quot; /&gt; field.">要指派給 <see cref="F:System.Numerics.Vector4.X" /> 欄位的值。</param>
      <param name="y" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Y&quot; /&gt; field.">要指派給 <see cref="F:System.Numerics.Vector4.Y" /> 欄位的值。</param>
      <param name="z" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.Z&quot; /&gt; field.">要指派給 <see cref="F:System.Numerics.Vector4.Z" /> 欄位的值。</param>
      <param name="w" vsli:raw="The value to assign to the &lt;see cref=&quot;F:System.Numerics.Vector4.W&quot; /&gt; field.">要指派給 <see cref="F:System.Numerics.Vector4.W" /> 欄位的值。</param>
    </member>
    <member name="M:System.Numerics.Vector4.Abs(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the absolute values of each of the specified vector's elements.">傳回一個向量，其元素為指定向量之每個元素的絕對值。</summary>
      <param name="value" vsli:raw="A vector.">一個向量。</param>
      <returns vsli:raw="The absolute value vector.">絕對值的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">將兩個向量一起相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二個向量。</param>
      <returns vsli:raw="The summed vector.">加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Restricts a vector between a minimum and a maximum value.">限制向量介於最小值和最大值之間。</summary>
      <param name="value1" vsli:raw="The vector to restrict.">要限制的向量。</param>
      <param name="min" vsli:raw="The minimum value.">最小值。</param>
      <param name="max" vsli:raw="The maximum value.">最大值。</param>
      <returns vsli:raw="The restricted vector.">受限制的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[])">
      <summary vsli:raw="Copies the elements of the vector to a specified array.">將向量的元素複製到指定的陣列。</summary>
      <param name="array" vsli:raw="The destination array.">目的陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)">
      <summary vsli:raw="Copies the elements of the vector to a specified array starting at a specified index position.">從指定的索引位置開始，將向量的元素複製到指定的陣列。</summary>
      <param name="array" vsli:raw="The destination array.">目的陣列。</param>
      <param name="index" vsli:raw="The index at which to copy the first element of the vector.">要複製此向量第一個元素的索引。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the current instance is greater than in the array.">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the array length.">
        <paramref name="index" /> 小於零。  
-或- 
 <paramref name="index" /> 大於或等於陣列長度。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Computes the Euclidean distance between the two given points.">計算兩個指定的點之間的歐幾里得距離。</summary>
      <param name="value1" vsli:raw="The first point.">第一個點。</param>
      <param name="value2" vsli:raw="The second point.">第二個點。</param>
      <returns vsli:raw="The distance.">距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the Euclidean distance squared between two specified points.">傳回兩個指定的點之間的平方歐幾里得距離。</summary>
      <param name="value1" vsli:raw="The first point.">第一個點。</param>
      <param name="value2" vsli:raw="The second point.">第二個點。</param>
      <returns vsli:raw="The distance squared.">平方距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">將第一個向量除以第二個。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector resulting from the division.">相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定的向量除以指定的純量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="divisor" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The vector that results from the division.">相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns the dot product of two vectors.">傳回兩個向量的內積。</summary>
      <param name="vector1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The dot product.">內積。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether this instance and another vector are equal.">傳回值，這個值指出此執行個體和另一個向量是否相等。</summary>
      <param name="other" vsli:raw="The other vector.">其他向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two vectors are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">當兩個向量相等時為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance and a specified object are equal.">傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj" vsli:raw="The object to compare with the current instance.">要與目前執行個體比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and &lt;paramref name=&quot;obj&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, the method returns &lt;see langword=&quot;false&quot; /&gt;.">如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="The hash code.">雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Length">
      <summary vsli:raw="Returns the length of this vector object.">傳回這個向量物件的長度。</summary>
      <returns vsli:raw="The vector's length.">向量的長度。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.LengthSquared">
      <summary vsli:raw="Returns the length of the vector squared.">傳回向量長度平方。</summary>
      <returns vsli:raw="The vector's length squared.">向量長度平方。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Performs a linear interpolation between two vectors based on the given weighting.">根據給定的加權執行兩個向量之間的線性插補。</summary>
      <param name="value1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二個向量。</param>
      <param name="amount" vsli:raw="A value between 0 and 1 that indicates the weight of &lt;paramref name=&quot;value2&quot; /&gt;.">介於 0 和 1 的值，表示 <paramref name="value2" /> 的加權。</param>
      <returns vsli:raw="The interpolated vector.">插補的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.">傳回一個向量，其元素為兩個指定向量之每個成對元素的最大值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The maximized vector.">最大化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.">傳回一個向量，其元素為兩個指定向量之每個成對元素的最小值。</summary>
      <param name="value1" vsli:raw="The first vector.">第一個向量。</param>
      <param name="value2" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The minimized vector.">最小化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiplies a vector by a specified scalar.">將向量乘以指定的純量。</summary>
      <param name="left" vsli:raw="The vector to multiply.">要相乘的向量。</param>
      <param name="right" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiplies a scalar value by a specified vector.">將純量值乘以指定的向量。</summary>
      <param name="left" vsli:raw="The scaled value.">已縮放的值。</param>
      <param name="right" vsli:raw="The vector.">向量。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Negate(System.Numerics.Vector4)">
      <summary vsli:raw="Negates a specified vector.">將指定的向量變換正負號。</summary>
      <param name="value" vsli:raw="The vector to negate.">要變換正負號的向量。</param>
      <returns vsli:raw="The negated vector.">已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Normalize(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector with the same direction as the specified vector, but with a length of one.">傳回與指定向量方向相同的向量，但長度為 1。</summary>
      <param name="vector" vsli:raw="The vector to normalize.">要正規化的向量。</param>
      <returns vsli:raw="The normalized vector.">已正規化的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.One">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to one.">取得其 4 個元素等於 1 的向量。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Numerics.Vector4&quot; /&gt;.">傳回 <see cref="T:System.Numerics.Vector4" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Adds two vectors together.">將兩個向量一起相加。</summary>
      <param name="left" vsli:raw="The first vector to add.">要相加的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to add.">要相加的第二個向量。</param>
      <returns vsli:raw="The summed vector.">加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Divides the first vector by the second.">將第一個向量除以第二個。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">
        <paramref name="left" /> 除以 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Divides the specified vector by a specified scalar value.">指定的向量除以指定的純量值。</summary>
      <param name="value1" vsli:raw="The vector.">向量。</param>
      <param name="value2" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The result of the division.">相除的結果。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether each pair of elements in two specified vectors is equal.">傳回值，指出兩個指定向量的每個成對元素是否相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a value that indicates whether two specified vectors are not equal.">傳回值，這個值表示兩個指定的向量是否不相等。</summary>
      <param name="left" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="right" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Returns a new vector whose values are the product of each pair of elements in two specified vectors.">傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The element-wise product vector.">元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)">
      <summary vsli:raw="Multiples the specified vector by the specified scalar value.">指定的向量乘以指定的純量值。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)">
      <summary vsli:raw="Multiples the scalar value by the specified vector.">將純量值乘以指定的向量。</summary>
      <param name="left" vsli:raw="The vector.">向量。</param>
      <param name="right" vsli:raw="The scalar value.">純量值。</param>
      <returns vsli:raw="The scaled vector.">已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">從第一個向量減去第二個向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The vector that results from subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">從 <paramref name="left" /> 減去 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)">
      <summary vsli:raw="Negates the specified vector.">將指定的向量變換正負號。</summary>
      <param name="value" vsli:raw="The vector to negate.">要變換正負號的向量。</param>
      <returns vsli:raw="The negated vector.">已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)">
      <summary vsli:raw="Returns a vector whose elements are the square root of each of a specified vector's elements.">傳回一個向量，其元素為指定向量之每個元素的平方根。</summary>
      <param name="value" vsli:raw="A vector.">一個向量。</param>
      <returns vsli:raw="The square root vector.">平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary vsli:raw="Subtracts the second vector from the first.">從第一個向量減去第二個向量。</summary>
      <param name="left" vsli:raw="The first vector.">第一個向量。</param>
      <param name="right" vsli:raw="The second vector.">第二個向量。</param>
      <returns vsli:raw="The difference vector.">差異向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString">
      <summary vsli:raw="Returns the string representation of the current instance using default formatting.">使用預設格式傳回目前執行個體的字串表示。</summary>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements.">使用指定格式字串來格式化個別項目，傳回目前執行個體的字串表示。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.">使用指定格式字串來格式化個別項目，以及使用指定的格式提供者來定義特定文化特性的格式，傳回目前執行個體的字串表示。</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string that defines the format of individual elements.">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <param name="formatProvider" vsli:raw="A format provider that supplies culture-specific formatting information.">格式提供者，提供特定文化特性格式資訊。</param>
      <returns vsli:raw="The string representation of the current instance.">目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a two-dimensional vector by a specified 4x4 matrix.">依據指定的 4x4 矩陣轉換二維向量。</summary>
      <param name="position" vsli:raw="The vector to transform.">要轉換的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">轉換矩陣。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a two-dimensional vector by the specified Quaternion rotation value.">依據指定的四元數旋轉值來轉換二維向量。</summary>
      <param name="value" vsli:raw="The vector to rotate.">要旋轉的向量。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">要套用的旋轉。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a three-dimensional vector by a specified 4x4 matrix.">依據指定的 4x4 矩陣轉換三維向量。</summary>
      <param name="position" vsli:raw="The vector to transform.">要轉換的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">轉換矩陣。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a three-dimensional vector by the specified Quaternion rotation value.">依據指定的四元數旋轉值來轉換三維向量。</summary>
      <param name="value" vsli:raw="The vector to rotate.">要旋轉的向量。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">要套用的旋轉。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)">
      <summary vsli:raw="Transforms a four-dimensional vector by a specified 4x4 matrix.">依據指定的 4x4 矩陣轉換四維向量。</summary>
      <param name="vector" vsli:raw="The vector to transform.">要轉換的向量。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">轉換矩陣。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)">
      <summary vsli:raw="Transforms a four-dimensional vector by the specified Quaternion rotation value.">依據指定的四元數旋轉值來轉換四維向量。</summary>
      <param name="value" vsli:raw="The vector to rotate.">要旋轉的向量。</param>
      <param name="rotation" vsli:raw="The rotation to apply.">要套用的旋轉。</param>
      <returns vsli:raw="The transformed vector.">已轉換的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitW">
      <summary vsli:raw="Gets the vector (0,0,0,1).">取得向量 (0,0,0,1)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,0,1)&lt;/c&gt;.">向量<c>(0, 0, 0, 1)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitX">
      <summary vsli:raw="Gets the vector (1,0,0,0).">取得向量 (1,0,0,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(1,0,0,0)&lt;/c&gt;.">向量<c>(1, 0, 0, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitY">
      <summary vsli:raw="Gets the vector (0,1,0,0).">取得向量 (0,1,0,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,1,0,0)&lt;/c&gt;.">向量<c>(0, 1, 0, 0)</c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitZ">
      <summary vsli:raw="Gets the vector (0,0,1,0).">取得向量 (0,0,1,0)。</summary>
      <returns vsli:raw="The vector &lt;c&gt;(0,0,1,0)&lt;/c&gt;.">向量<c>(0, 0, 1, 0)</c>。</returns>
    </member>
    <member name="F:System.Numerics.Vector4.W">
      <summary vsli:raw="The W component of the vector.">此向量的 W 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.X">
      <summary vsli:raw="The X component of the vector.">此向量的 X 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Y">
      <summary vsli:raw="The Y component of the vector.">此向量的 Y 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Z">
      <summary vsli:raw="The Z component of the vector.">此向量的 Z 元件。</summary>
    </member>
    <member name="P:System.Numerics.Vector4.Zero">
      <summary vsli:raw="Gets a vector whose 4 elements are equal to zero.">取得其 4 個元素等於 0 的向量。</summary>
      <returns vsli:raw="A vector whose four elements are equal to zero (that is, it returns the vector &lt;c&gt;(0,0,0,0)&lt;/c&gt;).">其四個元素等於零的向量 (也就是, 它會傳回向量<c>(0, 0, 0, 0)</c>。</returns>
    </member>
  </members>
</doc>