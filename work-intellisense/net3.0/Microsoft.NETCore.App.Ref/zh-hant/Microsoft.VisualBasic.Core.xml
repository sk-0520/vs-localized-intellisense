<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>提供與目前應用程式相關的屬性、方法和事件。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>變更目前執行緒用於字串操作和字串格式化的文化特性。</summary>
      <param name="cultureName">
        <see langword="String" />. 做為字串的文化特性名稱。 如需可能名稱的清單，請參閱 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> 不是有效的文化特性名稱。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>變更目前執行緒用來擷取特定文化特性資源的文化特性。</summary>
      <param name="cultureName">
        <see langword="String" />. 做為字串的文化特性名稱。 如需可能名稱的清單，請參閱 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> 不是有效的文化特性名稱。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>取得目前執行緒用於字串 (String) 操作和字串格式化的文化特性 (Culture)。</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> 物件，表示目前執行緒用於字串操作和字串格式化的文化特性。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>傳回指定環境變數的值。</summary>
      <param name="name">
        <see langword="String" />，包含環境變數的名稱。</param>
      <returns>
        <see langword="String" /> 包含具有名為 <paramref name="name" /> 的環境變數值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 所指定的環境變數不存在。</exception>
      <exception cref="T:System.Security.SecurityException">呼叫程式碼沒有 <see cref="T:System.Security.Permissions.EnvironmentPermission" /> 與 <see langword="Read" /> 存取權。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>取得物件，提供用於取得應用程式組件之相關資訊 (例如版本號碼、描述等) 的屬性。</summary>
      <returns>目前應用程式的 <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> 物件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>取得目前執行緒用來擷取特定文化特性資源的文化特性。</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> 物件，表示目前執行緒用來擷取特定文化特性資源的文化特性。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>提供取得應用程式相關資訊的屬性，例如版本號碼、描述、已載入組件等。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>使用指定的組件資訊，初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> 類別的新執行個體。</summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />. 要為其取得資訊的組件。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>取得應用程式之組件檔案的名稱 (不包括副檔名)。</summary>
      <returns>
        <see langword="String" />，包含檔案名稱。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>取得與應用程式關聯的公司名稱。</summary>
      <returns>
        <see langword="String" />，包含與應用程式相關聯的公司名稱。</returns>
      <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> 屬性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>取得與應用程式相關聯的著作權注意事項。</summary>
      <returns>
        <see langword="String" />，包含與應用程式相關聯的著作權注意事項。</returns>
      <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> 屬性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>取得與應用程式相關聯的描述。</summary>
      <returns>
        <see langword="String" />，包含與應用程式相關聯的描述。</returns>
      <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 屬性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>取得儲存應用程式的目錄。</summary>
      <returns>
        <see langword="String" />，包含儲存應用程式的目錄。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>取得應用程式所載入之所有組件的集合。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.Reflection.Assembly" />，包含應用程式所載入之所有組件的集合。</returns>
      <exception cref="T:System.AppDomainUnloadedException">未載入應用程式定義域。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>取得與該應用程式相關聯的產品名稱。</summary>
      <returns>
        <see langword="String" />，包含與該應用程式相關聯的產品名稱。</returns>
      <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyProductAttribute" /> 屬性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>取得目前的堆疊追蹤資訊。</summary>
      <returns>
        <see langword="String" />，包含目前堆疊追蹤資訊。 傳回值可以是 <see cref="F:System.String.Empty" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">要求的堆疊追蹤資訊超出範圍。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>取得與應用程式相關聯的標題。</summary>
      <returns>
        <see langword="String" />，包含與應用程式相關聯的 <see cref="T:System.Reflection.AssemblyTitleAttribute" />。</returns>
      <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 屬性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>取得與應用程式相關聯的商標注意事項。</summary>
      <returns>
        <see langword="String" />，包含與應用程式相關聯的商標注意事項。</returns>
      <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 屬性。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>取得應用程式的版本號碼。</summary>
      <returns>
        <see cref="T:System.Version" /> 物件，包含應用程式的版本號碼。</returns>
      <exception cref="T:System.Security.SecurityException">應用程式沒有足夠的使用權限可以存取組件版本。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>取得對應至處理程序內容的實體記憶體數量。</summary>
      <returns>
        <see langword="Long" />，包含對應至處理序內容之實體記憶體的位元組數目。</returns>
      <exception cref="T:System.Security.SecurityException">發生部分信任以及使用者缺少必要權限的狀況。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>提供與目前應用程式相關的屬性、方法和事件。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>取得集合，包含做為目前應用程式之字串 (String) 的命令列引數。</summary>
      <returns>
        <see langword="String" /> 的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，包含做為目前應用程式之字串的命令列引數。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>將值設為目前應用程式的命令列引數。</summary>
      <returns>
        <see langword="String" /> 的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，包含用做目前應用程式之命令列引數的字串。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>提供 <see langword="My.Application.Startup" /> 事件的資料。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> 類別的新執行個體。</summary>
      <param name="args">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 物件，包含應用程式的命令列引數。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>取得應用程式的命令列引數。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 物件，包含應用程式的命令列引數。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>提供 <see langword="My.Application.StartupNextInstance" /> 事件的資料。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> 類別的新執行個體。</summary>
      <param name="args">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 物件，包含後續應用程式執行個體的命令列引數。</param>
      <param name="bringToForegroundFlag">
        <see cref="T:System.Boolean" />，指出是否應在結束例外狀況處理常式時，將第一個應用程式執行個體置於前景。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>指出是否應在結束例外狀況處理常式時，將第一個應用程式執行個體置於前景。</summary>
      <returns>
        <see cref="T:System.Boolean" />，指出是否應在結束例外狀況處理常式時，將第一個應用程式執行個體置於前景。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>取得後續應用程式執行個體的命令列引數。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 物件，包含後續應用程式執行個體的命令列引數。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>提供 <see langword="My.Application.UnhandledException" /> 事件的資料。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> 類別的新執行個體。</summary>
      <param name="exitApplication">
        <see cref="T:System.Boolean" />，指出應用程式是否應在結束例外狀況處理常式時結束。</param>
      <param name="exception">所發生的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>指出應用程式是否應在結束例外狀況處理常式時結束。</summary>
      <returns>
        <see cref="T:System.Boolean" />，指出應用程式是否應在結束例外狀況處理常式時結束。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>提供目前使用者相關資訊的存取。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>取得或設定目前主體 (以角色為基礎的安全性之用)。</summary>
      <returns>
        <see cref="T:System.Security.Principal.IPrincipal" /> 值，表示安全性內容。</returns>
      <exception cref="T:System.Security.SecurityException">呼叫端沒有設定主體的必要權限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>取得或設定 Principal 物件，表示目前使用者。</summary>
      <returns>
        <see cref="T:System.Security.Principal.IPrincipal" /> 物件，代表目前的使用者。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>取得值，表示使用者是否已經驗證。</summary>
      <returns>如果使用者已驗證，則為 <see langword="True" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>判斷目前的使用者是否屬於指定的角色。</summary>
      <param name="role">用來檢查成員資格的角色名稱。</param>
      <returns>如果目前使用者是指定角色的成員則為 <see langword="True" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>取得目前使用者的名稱。</summary>
      <returns>
        <see langword="String" />. 目前使用者的名稱。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary vsli:raw="Indicates the window style to use for the invoked program when calling the &lt;see langword=&quot;Shell&quot; /&gt; function.">指出呼叫 <see langword="Shell" /> 函式時，被叫用之程式所使用的視窗樣式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary vsli:raw="Window is hidden and focus is passed to the hidden window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHide&quot; /&gt;.">視窗會隱藏起來，並將焦點傳遞給隱藏的視窗。 這個成員相當於 Visual Basic 常數 <see langword="vbHide" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary vsli:raw="Window is maximized with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMaximizedFocus&quot; /&gt;.">視窗已最大化，且具有焦點。 這個成員相當於 Visual Basic 常數 <see langword="vbMaximizedFocus" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary vsli:raw="Window is displayed as an icon with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedFocus&quot; /&gt;.">視窗顯示成具有焦點的圖示。 這個成員相當於 Visual Basic 常數 <see langword="vbMinimizedFocus" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary vsli:raw="Window is displayed as an icon. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedNoFocus&quot; /&gt;.">視窗顯示成圖示。 使用中視窗還是維持作用中的狀態。 這個成員相當於 Visual Basic 常數 <see langword="vbMinimizedNoFocus" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary vsli:raw="Window has focus and is restored to its original size and position. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalFocus&quot; /&gt;.">視窗具有焦點，且還原成原始的大小和位置。 這個成員相當於 Visual Basic 常數 <see langword="vbNormalFocus" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary vsli:raw="Window is restored to its most recent size and position. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalNoFocus&quot; /&gt;.">視窗會還原成最近用過的大小和位置。 使用中視窗還是維持作用中的狀態。 這個成員相當於 Visual Basic 常數 <see langword="vbNormalNoFocus" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary vsli:raw="Indicates the type of procedure being invoked when calling the &lt;see langword=&quot;CallByName&quot; /&gt; function.">表示呼叫 <see langword="CallByName" /> 函式時所叫用的程序類型。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary vsli:raw="A property value is being retrieved.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGet&quot; /&gt;.">正在擷取屬性值。  這個成員相當於 Visual Basic 常數 <see langword="vbGet" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary vsli:raw="An Object property value is being determined. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLet&quot; /&gt;.">正在決定物件屬性值。 這個成員相當於 Visual Basic 常數 <see langword="vbLet" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary vsli:raw="A method is being invoked.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMethod&quot; /&gt;.">正在叫用方法。  這個成員相當於 Visual Basic 常數 <see langword="vbMethod" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary vsli:raw="A property value is being determined.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSet&quot; /&gt;.">正在決定屬性值。  這個成員相當於 Visual Basic 常數 <see langword="vbSet" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary vsli:raw="A Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; is an ordered set of items that can be referred to as a unit.">Visual Basic <see langword="Collection" /> 是已排序的項目集合，可作為單元來參考。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary vsli:raw="Creates and returns a new Visual Basic &lt;see cref=&quot;T:Microsoft.VisualBasic.Collection&quot; /&gt; object.">建立並傳回新的Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> 物件。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary vsli:raw="Adds an element to a &lt;see langword=&quot;Collection&quot; /&gt; object.">將項目加入至 <see langword="Collection" /> 物件。</summary>
      <param name="Item" vsli:raw="Required. An object of any type that specifies the element to add to the collection.">必要項。 任何型別的物件，可指定要加入到集合中的項目。</param>
      <param name="Key" vsli:raw="Optional. A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.">選擇性。 唯一的 <see langword="String" /> 運算式，指定用來存取集合中這個新項目的索引鍵字串，藉以取代位置索引。</param>
      <param name="Before" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the &lt;paramref name=&quot;Before&quot; /&gt; argument. If &lt;paramref name=&quot;Before&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. If &lt;paramref name=&quot;Before&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">選擇性。 運算式，可指定集合中的相對位置。 要加入的項目會放置在集合中由 <paramref name="Before" /> 引數識別的項目之前。 如果 <paramref name="Before" /> 為數值運算式，它必須是從 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 屬性值的一個數字。 如果 <paramref name="Before" /> 為 <see langword="String" /> 運算式，當所參考的項目加入到集合中時，它必須對應到指定的索引鍵字串。 不能同時指定 <paramref name="Before" /> 和 <paramref name="After" />。</param>
      <param name="After" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the &lt;paramref name=&quot;After&quot; /&gt; argument. If &lt;paramref name=&quot;After&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see langword=&quot;Count&quot; /&gt; property. If &lt;paramref name=&quot;After&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">選擇性。 運算式，可指定集合中的相對位置。 要加入的項目會放置在集合中由 <paramref name="After" /> 引數識別的項目之後。 如果 <paramref name="After" /> 為數值運算式，它必須是從 1 到集合的 <see langword="Count" /> 屬性值的一個數字。 如果 <paramref name="After" /> 為 <see langword="String" /> 運算式，當所參考的項目加入到集合中時，它必須對應到指定的索引鍵字串。 不能同時指定 <paramref name="Before" /> 和 <paramref name="After" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary vsli:raw="Deletes all elements of a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object.">刪除 Visual Basic <see langword="Collection" /> 物件的所有項目。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key.">傳回值，指出 Visual Basic <see langword="Collection" /> 物件是否包含具有特定機碼的項目。</summary>
      <param name="Key" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; expression that specifies the key for which to search the elements of the collection.">必要項。 <see langword="String" /> 運算式，可指定要搜尋集合項目的索引鍵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 Visual Basic <see langword="Collection" /> 物件包含具有特定機碼的元素，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary vsli:raw="Gets the number of elements in a collection.">取得集合中的元素數目。</summary>
      <returns vsli:raw="The number of elements in a collection.">集合中的項目數目。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">傳回逐一查看集合的列舉值。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">可用來逐一查看集合的列舉值。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">依位置或索引鍵取得 <see langword="Collection" /> 物件的特定元素。</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">數值運算式，可指定集合中項目的位置。 <paramref name="Index" /> 必須是從 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 屬性值的一個數字。 或是 (B) <see langword="Object" /> 運算式，可指定集合中項目的位置或索引鍵字串。</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" />物件的特定元素, 依據位置或索引鍵。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">依位置或索引鍵取得 <see langword="Collection" /> 物件的特定元素。</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">數值運算式，可指定集合中項目的位置。 <paramref name="Index" /> 必須是從 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 屬性值的一個數字。 或是 (B) <see langword="Object" /> 運算式，可指定集合中項目的位置或索引鍵字串。</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" />物件的特定元素, 依據位置或索引鍵。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">依位置或索引鍵取得 <see langword="Collection" /> 物件的特定元素。</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">唯一的 <see langword="String" /> 運算式，指定用來存取集合中項目的索引鍵字串，藉以取代位置索引。 <paramref name="Key" /> 必須對應至當項目加入至集合時所指定的 <paramref name="Key" /> 引數。</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">
        <see langword="Collection" />物件的特定元素, 依據位置或索引鍵。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">從 <see langword="Collection" /> 物件移除項目。</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property.">數值運算式，可指定集合中項目的位置。 <paramref name="Index" /> 必須是從 1 到集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 屬性值的一個數字。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">從 <see langword="Collection" /> 物件移除項目。</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">唯一的 <see langword="String" /> 運算式，指定用來存取集合中項目的索引鍵字串，藉以取代位置索引。 <paramref name="Key" /> 必須對應至當項目加入至集合時所指定的 <paramref name="Key" /> 引數。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;ComClassAttribute&quot; /&gt; attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.">
        <see langword="ComClassAttribute" /> 屬性 (Attribute) 會指示編譯器加入能將類別公開成 COM 物件的中繼資料 (Metadata)。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">初始化 <see langword="ComClassAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">初始化 <see langword="ComClassAttribute" /> 類別的新執行個體。</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">初始化用來唯一識別類別的 <see langword="ClassID" /> 屬性值。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">初始化 <see langword="ComClassAttribute" /> 類別的新執行個體。</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">初始化用來唯一識別類別的 <see langword="ClassID" /> 屬性值。</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">初始化用來唯一識別介面的 <see langword="InterfaceID" /> 屬性值。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">初始化 <see langword="ComClassAttribute" /> 類別的新執行個體。</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">初始化用來唯一識別類別的 <see langword="ClassID" /> 屬性值。</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">初始化用來唯一識別介面的 <see langword="InterfaceID" /> 屬性值。</param>
      <param name="_EventId" vsli:raw="Initializes the value of the &lt;see langword=&quot;EventID&quot; /&gt; property that is used to uniquely identify an event.">初始化用來唯一識別事件的 <see langword="EventID" /> 屬性值。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary vsli:raw="Gets a class ID used to uniquely identify a class.">取得用來唯一識別類別的類別 ID。</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.">唯讀。 字串，當建立 COM 物件時，編譯器可用來唯一識別類別。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary vsli:raw="Gets an event ID used to uniquely identify an event.">取得用來唯一識別事件的事件 ID。</summary>
      <returns vsli:raw="Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.">唯讀。 字串，當建立 COM 物件時，編譯器可用來唯一識別類別事件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary vsli:raw="Gets an interface ID used to uniquely identify an interface.">取得用來唯一識別介面的介面 ID。</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.">唯讀。 字串，當建立 COM 物件時，編譯器可用來唯一識別類別的介面。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary vsli:raw="Indicates that the COM interface name shadows another member of the class or base class.">表示 COM 介面名稱會遮蔽類別或基底類別的另一個成員。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates that the COM interface name shadows another member of the class or base class.">
        <see langword="Boolean" /> 值，表示 COM 介面名稱會遮蔽類別或基底類別的另一個成員。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary vsli:raw="Indicates how to compare strings when calling comparison functions.">指出在呼叫比較函式時字串的比較方式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary vsli:raw="Performs a binary comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBinaryCompare&quot; /&gt;.">執行二進位比較。 這個成員相當於 Visual Basic 常數 <see langword="vbBinaryCompare" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary vsli:raw="Performs a textual comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTextCompare&quot; /&gt;.">執行文字比較。 這個成員相當於 Visual Basic 常數 <see langword="vbTextCompare" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">必要項。 要轉換成 <see langword="Boolean" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Boolean" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">必要項。 要轉換為 <see langword="Boolean" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Boolean" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Byte" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">必要項。 要轉換成 <see langword="Byte" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Byte" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Byte" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">必要項。 要轉換為 <see langword="Byte" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Byte" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="CharArray" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">必要項。 要轉換成 <see langword="CharArray" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="CharArray" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="CharArray" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">必要項。 要轉換為 <see langword="CharArray" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="CharArray" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Char" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">必要項。 要轉換成 <see langword="Char" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Char" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Char" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">必要項。 要轉換為 <see langword="Char" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Char" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary vsli:raw="Provides methods that perform various type conversions.">提供會執行各種型別轉換的方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">將物件轉換成指定的型別。</summary>
      <param name="Expression" vsli:raw="The object to convert.">要轉換的物件。</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">要將物件轉換成的型別。</param>
      <returns vsli:raw="An object of the specified target type.">指定之目標型別的物件。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">將物件轉換成指定的型別。</summary>
      <param name="Expression" vsli:raw="The object to convert.">要轉換的物件。</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">要將物件轉換成的型別。</param>
      <returns vsli:raw="An object of the specified target type.">指定之目標型別的物件。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a string, given a byte count.">在提供位元組計數下，將 <see cref="T:System.Char" /> 值轉換成字串。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">要進行轉換的 <see langword="Char" /> 值。</param>
      <param name="Count" vsli:raw="The byte count of the &lt;see langword=&quot;Char&quot; /&gt; value.">
        <see langword="Char" /> 值的位元組計數。</param>
      <returns vsli:raw="The string representation of the specified value.">指定之值的字串表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">將 <see cref="T:System.Char" /> 陣列轉換成字串。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">要進行轉換的 <see langword="Char" /> 陣列。</param>
      <returns vsli:raw="The string representation of the specified array.">指定之陣列的字串表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Converts a subset of a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">將 <see cref="T:System.Char" /> 陣列的子集轉換成字串。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">要進行轉換的 <see langword="Char" /> 陣列。</param>
      <param name="StartIndex" vsli:raw="Zero-based index of the start position.">起始位置的以零起始的索引。</param>
      <param name="Length" vsli:raw="Length of the subset in bytes.">子集長度，以位元組為單位。</param>
      <returns vsli:raw="The string representation of the specified array from the start position to the specified length.">特定陣列從啟始位置至特定長度的字串表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">將物件轉換成 <see cref="T:System.Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the object is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" /> 值。 如果物件為 null，則傳回 <see langword="False" />，否則傳回 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">將字串轉換成 <see cref="T:System.Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the string is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" /> 值。 如果字串為 null，則傳回 <see langword="False" />，否則傳回 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">將物件轉換成 <see cref="T:System.Byte" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the object.">物件的 <see langword="Byte" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">將字串轉換成 <see cref="T:System.Byte" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the string.">字串的 <see langword="Byte" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">將物件轉換成 <see cref="T:System.Char" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the object.">物件的 <see langword="Char" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">將字串轉換成 <see cref="T:System.Char" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the string.">字串的 <see langword="Char" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary vsli:raw="Converts an object to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">將物件轉換成一維 <see cref="T:System.Char" /> 陣列。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">一維 <see langword="Char" /> 陣列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary vsli:raw="Converts a string to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">將字串轉換成一維 <see cref="T:System.Char" /> 陣列。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">一維 <see langword="Char" /> 陣列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">將物件轉換成 <see cref="T:System.DateTime" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the object.">物件的 <see langword="DateTime" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">將字串轉換成 <see cref="T:System.DateTime" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the string.">字串的 <see langword="DateTime" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">將 <see cref="T:System.Boolean" /> 值轉換成 <see cref="T:System.Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="A Boolean value to convert.">要轉換的布林值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the Boolean value.">布林值的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">將物件轉換成 <see cref="T:System.Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the object.">物件的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">將字串轉換成 <see cref="T:System.Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the string.">字串的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">將物件轉換成 <see cref="T:System.Double" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the object.">物件的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">將字串轉換成 <see cref="T:System.Double" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the string.">字串的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary vsli:raw="Converts an object to a generic type &lt;paramref name=&quot;T&quot; /&gt;.">將物件轉換成泛型型別 <paramref name="T" />。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <typeparam name="T" vsli:raw="The type to convert &lt;paramref name=&quot;Value&quot; /&gt; to.">要將 <paramref name="Value" /> 轉換成哪一個型別。</typeparam>
      <returns vsli:raw="A structure or object of generic type &lt;paramref name=&quot;T&quot; /&gt;.">泛型型別 <paramref name="T" /> 的結構或物件。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary vsli:raw="Converts an object to an integer value.">將物件轉換成整數值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the object.">物件的 <see langword="int" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary vsli:raw="Converts a string to an integer value.">將字串轉換成整數值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the string.">字串的 <see langword="int" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Long&quot; /&gt; value.">將物件轉換成 <see langword="Long" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the object.">物件的 <see langword="Long" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Long&quot; /&gt; value.">將字串轉換成 <see langword="Long" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the string.">字串的 <see langword="Long" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary vsli:raw="Converts an object to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">將物件轉換成 <see cref="T:System.SByte" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the object.">物件的 <see langword="SByte" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">將字串轉換成 <see cref="T:System.SByte" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the string.">字串的 <see langword="SByte" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Short&quot; /&gt; value.">將物件轉換成 <see langword="Short" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the object.">物件的 <see langword="Short" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Short&quot; /&gt; value.">將字串轉換成 <see langword="Short" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the string.">字串的 <see langword="Short" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">將物件轉換成 <see cref="T:System.Single" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the object.">物件的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">將 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Single" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the string.">字串的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Boolean" /> 值轉換成 <see cref="T:System.String" />。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value to convert.">要進行轉換的 <see langword="Boolean" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Boolean&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Boolean" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Byte" /> 值轉換成 <see cref="T:System.String" />。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value to convert.">要進行轉換的 <see langword="Byte" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Byte&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Byte" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Char" /> 值轉換成 <see cref="T:System.String" />。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">要進行轉換的 <see langword="Char" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Char&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Char" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">將 <see cref="T:System.DateTime" /> 值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value to convert.">要進行轉換的 <see langword="DateTime" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;DateTime&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="DateTime" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">將 <see cref="T:System.Decimal" /> 值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value to convert.">要進行轉換的 <see langword="Decimal" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Decimal" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">使用指定的數字格式，將 <see cref="T:System.Decimal" /> 值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; value to convert.">要進行轉換的 <see langword="decimal" /> 值。</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">依據 <see cref="T:System.Globalization.NumberFormatInfo" />，所要使用的數字格式。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Decimal" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">將 <see cref="T:System.Double" /> 值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">要進行轉換的 <see langword="Double" /> 值。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Double" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">使用指定的數字格式，將 <see cref="T:System.Double" /> 值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">要進行轉換的 <see langword="Double" /> 值。</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">依據 <see cref="T:System.Globalization.NumberFormatInfo" />，所要使用的數字格式。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Double" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Short&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">將 <see langword="Short" /> 值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value to convert.">要進行轉換的 <see langword="Short" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Short&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Short" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary vsli:raw="Converts an integer value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">將整數值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value to convert.">要進行轉換的 <see langword="int" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;int&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="int" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Long&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">將 <see langword="Long" /> 值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value to convert.">要進行轉換的 <see langword="Long" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Long&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Long" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">將物件轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the object.">物件的 <see langword="String" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value (a single-precision floating point number) to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">將 <see cref="T:System.Single" /> 值 (單精確度浮點數) 轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">要進行轉換的 <see langword="Single" /> 值。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Single" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">使用指定的數字格式，將 <see cref="T:System.Single" /> 值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">要進行轉換的 <see langword="Single" /> 值。</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">依據 <see cref="T:System.Globalization.NumberFormatInfo" />，所要使用的數字格式。</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Single" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;uint&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">將 <see langword="uint" /> 值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value to convert.">要進行轉換的 <see langword="Uint" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Uint&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Uint" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Ulong&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">將 <see langword="Ulong" /> 值轉換成 <see cref="T:System.String" /> 值。</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value to convert.">要進行轉換的 <see langword="Ulong" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Ulong&quot; /&gt; value.">
        <see langword="String" /> 值的 <see langword="Ulong" /> 表示。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Uint&quot; /&gt; value.">將物件轉換成 <see langword="Uint" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the object.">物件的 <see langword="Uint" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Uint&quot; /&gt; value.">將字串轉換成 <see langword="Uint" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the string.">字串的 <see langword="Uint" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">將物件轉換成 <see langword="Ulong" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the object.">物件的 <see langword="Ulong" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">將字串轉換成 <see langword="Ulong" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the string.">字串的 <see langword="Ulong" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">將物件轉換成 <see langword="Ushort" /> 值。</summary>
      <param name="Value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the object.">物件的 <see langword="Ushort" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">將字串轉換成 <see langword="Ushort" /> 值。</summary>
      <param name="Value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the string.">字串的 <see langword="Ushort" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Date" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">必要項。 要轉換成 <see langword="Date" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Date" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Date" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">必要項。 要轉換為 <see langword="Date" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Date" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string and culture information.">傳回 <see langword="Date" /> 值，這個值對應於指定的字串和文化特性資訊。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">必要項。 要轉換為 <see langword="Date" /> 值的字串。</param>
      <param name="culture" vsli:raw="Required. A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object that defines how date values are formatted and displayed, depending on the culture.">必要項。 <see cref="T:System.Globalization.CultureInfo" /> 物件，它會依據文化特性 (Culture) 定義格式化和顯示日期值的方式。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Date" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt; value.">傳回對應於指定之 <see langword="Decimal" /> 值的 <see langword="Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; value to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必要項。 要轉換為 <see langword="Boolean" /> 值的 <see langword="Decimal" /> 値。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必要項。 要轉換成 <see langword="Decimal" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object and number format information.">傳回 <see langword="Decimal" /> 值，這個值對應於指定的物件和數字格式資訊。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必要項。 要轉換成 <see langword="Decimal" /> 值的物件。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必要項。 要轉換為 <see langword="Decimal" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">傳回 <see langword="Decimal" /> 值，這個值對應於指定的字串和數字格式資訊。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必要項。 要轉換為 <see langword="Decimal" /> 值的字串。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">傳回 <see langword="Decimal" /> 值，這個值對應於指定的字串和數字格式資訊。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">必要項。 要轉換為 <see langword="Decimal" /> 值的字串。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Decimal" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary vsli:raw="When applied to a class, the compiler implicitly calls a component-initializing method from the default synthetic constructor.">當套用至類別時，該編譯器會從預設合成建構函式隱含地呼叫元件初始化方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute&quot; /&gt; attribute.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" /> 屬性的新執行個體。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必要項。 要轉換成 <see langword="Double" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必要項。 要轉換成 <see langword="Double" /> 值的物件。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必要項。 要轉換為 <see langword="Double" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">傳回 <see langword="Double" /> 值，這個值對應於指定的字串和數字格式資訊。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必要項。 要轉換為 <see langword="Double" /> 值的字串。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必要項。 要轉換為 <see langword="Double" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">傳回 <see langword="Double" /> 值，這個值對應於指定的字串和數字格式資訊。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">必要項。 要轉換為 <see langword="Double" /> 值的字串。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Double" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary vsli:raw="The Visual Basic compiler uses this class during static local initialization; it is not meant to be called directly from your code. An exception of this type is thrown if a static local variable fails to initialize.">Visual Basic 編譯器在靜態區域變數初始設定時會使用這個類別，並不適合從您的程式碼直接呼叫。 如果靜態區域變數初始化失敗，則會擲回這個類型的例外狀況。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified object.">傳回對應於指定之物件的 <see langword="Integer" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">必要項。 要轉換為 <see langword="Integer" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Integer" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Integer" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">必要項。 要轉換為 <see langword="Integer" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Integer" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary vsli:raw="This class has been deprecated since Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Performs a late-bound call to an object method.">對物件方法執行晚期繫結呼叫。</summary>
      <param name="o" vsli:raw="The object to call a method on.">要在其上呼叫方法的物件。</param>
      <param name="objType" vsli:raw="The type of the object.">物件的類型。</param>
      <param name="name" vsli:raw="The method name of &lt;paramref name=&quot;o&quot; /&gt; to call.">要呼叫的 <paramref name="o" /> 方法名稱。</param>
      <param name="args" vsli:raw="An array of parameter values to pass to the method.">傳遞給方法的引數值陣列。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">陣列，其中包含參數的名稱 (<paramref name="args" /> 陣列中的值已傳遞到這些參數)。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">
        <see langword="Boolean" /> 值陣列，其中 <see langword="True" /> 表示關聯的參數是以 <see langword="ByRef" /> 方式傳遞。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Returns a late-bound value from an object.">從物件傳回晚期繫結值。</summary>
      <param name="o" vsli:raw="The object to return the value from.">要從中傳回值的物件。</param>
      <param name="objType" vsli:raw="The type of the object.">物件的類型。</param>
      <param name="name" vsli:raw="The member name of &lt;paramref name=&quot;o&quot; /&gt; to retrieve a value from.">要從中擷取值的 <paramref name="o" /> 成員名稱。</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">一個或多個索引值的陣列，其指定 <paramref name="o" /> 中的位置 (如果 <paramref name="o" /> 是一維或多維陣列)，或是要傳遞至專案 <paramref name="o" /> 的引數值。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">陣列，其中包含參數的名稱 (<paramref name="args" /> 陣列中的值已傳遞到這些參數)。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">
        <see langword="Boolean" /> 值陣列，其中 <see langword="True" /> 表示關聯的參數是以 <see langword="ByRef" /> 方式傳遞。</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">如果 <paramref name="o" /> 為陣列，則為 <paramref name="o" /> 所指定之位置上 <paramref name="args" /> 的值。 如果 <paramref name="o" /> 為物件，則為使用 <paramref name="o" /> 中的具名參數和 <paramref name="paramnames" /> 中的關聯值，所叫用 <paramref name="args" /> 的傳回值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Returns a late-bound value from an object, using the specified index or parameters.">使用指定的索引或參數，從物件傳回晚期繫結值。</summary>
      <param name="o" vsli:raw="The object to return the value from.">要從中傳回值的物件。</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">一個或多個索引值的陣列，其指定 <paramref name="o" /> 中的位置 (如果 <paramref name="o" /> 是一維或多維陣列)，或是要傳遞至專案 <paramref name="o" /> 的引數值。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">陣列，其中包含參數的名稱 (<paramref name="args" /> 陣列中的值已傳遞到這些參數)。</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">如果 <paramref name="o" /> 為陣列，則為 <paramref name="o" /> 所指定之位置上 <paramref name="args" /> 的值。 如果 <paramref name="o" /> 為物件，則為使用 <paramref name="o" /> 中的具名參數和 <paramref name="paramnames" /> 中的關聯值，所叫用 <paramref name="args" /> 的傳回值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">使用指定的參數，設定物件的晚期繫結值。</summary>
      <param name="o" vsli:raw="The object to set the value for.">要設定值的物件。</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">一個或多個索引值的陣列，其指定 <paramref name="o" /> 中的位置 (如果 <paramref name="o" /> 是一維或多維陣列)，或是要傳遞至專案 <paramref name="o" /> 的引數值。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">陣列，其中包含參數的名稱 (<paramref name="args" /> 陣列中的值已傳遞到這些參數)。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">使用指定的參數，設定物件的晚期繫結值。</summary>
      <param name="o" vsli:raw="The object to set the value for.">要設定值的物件。</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">要傳遞至物件 <paramref name="o" /> 的一個或多個參數值的陣列。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">陣列，其中包含參數的名稱 (<paramref name="args" /> 陣列中的值已傳遞到這些參數)。</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">
        <see langword="True" /> 表示找不到設定成員時隱藏所擲回的例外狀況。</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">
        <see langword="True" /> 表示將 <paramref name="o" /> 識別為晚期繫結運算式的結果。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">使用指定的參數，設定物件成員的晚期繫結值。</summary>
      <param name="o" vsli:raw="The object to set the member value for.">要設定成員值的物件。</param>
      <param name="objType" vsli:raw="The type of the object.">物件的類型。</param>
      <param name="name" vsli:raw="The member name to set.">要設定的成員名稱。</param>
      <param name="args" vsli:raw="An array of one or parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">要傳遞至 <paramref name="o" /> 成員的一個或多個參數值的陣列。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">陣列，其中包含參數的名稱 (<paramref name="args" /> 陣列中的值已傳遞到這些參數)。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">使用指定的參數，設定物件成員的晚期繫結值。</summary>
      <param name="o" vsli:raw="The object to set the member value for.">要設定成員值的物件。</param>
      <param name="objType" vsli:raw="The type of the object.">物件的類型。</param>
      <param name="name" vsli:raw="The member name to set.">要設定的成員名稱。</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">要傳遞至 <paramref name="o" /> 成員的一個或多個參數值的陣列。</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">陣列，其中包含參數的名稱 (<paramref name="args" /> 陣列中的值已傳遞到這些參數)。</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">
        <see langword="True" /> 表示找不到設定成員時隱藏所擲回的例外狀況。</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">
        <see langword="True" /> 表示將 <paramref name="o" /> 識別為晚期繫結運算式的結果。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses to do the work for the Like Operator. It is not meant to be called directly from your code.">這個類別提供 Helper，讓 Visual Basic 編譯器用來執行 Like 運算子的工作。 它並不適合直接從您的程式碼呼叫。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two objects. This helper method is not meant to be called directly from your code.">對兩個指定的物件執行二進位碼或文字字串比較。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Source" vsli:raw="The string to compare.">要比較的字串。</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">字串，<paramref name="Source" /> 與其比較。</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">
        <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 列舉型別，指定是否使用文字比較。 <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" /> 表示這個方法使用文字比較，<see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" /> 表示這個方法使用二進位碼比較。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果字串相符，則為 <see langword="True" />；否則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two strings. This helper method is not meant to be called directly from your code.">對兩個指定的字串執行二進位碼或文字字串比較。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Source" vsli:raw="The string to compare.">要比較的字串。</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">字串，<paramref name="Source" /> 與其比較。</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">
        <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 列舉型別，指定是否使用文字比較。 <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" /> 表示這個方法使用文字比較，<see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" /> 表示這個方法使用二進位碼比較。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果字串相符，則為 <see langword="True" />；否則為 <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Long" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">必要項。 要轉換成 <see langword="Long" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Long" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Long" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">必要項。 要轉換為 <see langword="Long" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Long" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.">這個類別提供 Helper，讓 Visual Basic 編譯器用於晚期繫結呼叫，並不適合從您的程式碼直接呼叫。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">執行晚期繫結方法或函式呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">在呼叫物件上的屬性或方法名稱。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">
        <see langword="Boolean" /> 值，指出是否可以忽略傳回值。</param>
      <returns vsli:raw="An instance of the call object.">呼叫物件的執行個體。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Get 或欄位存取呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">在呼叫物件上的屬性或方法名稱。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <returns vsli:raw="An instance of the call object.">呼叫物件的執行個體。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Set 或欄位寫入呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Set 或欄位寫入呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" /> 值，用來決定設定作業是否會運作。 當您相信屬性或欄位中已設定中繼值時，請設為 <see langword="True" />，否則為 <see langword="False" />。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" /> 值，指定晚期參考的基底參考為 <see langword="RValue" />。 當晚期參考的基底參考為 <see langword="True" /> 時，若設為 <see langword="RValue" />，對於實值型別之 <see langword="RValues" /> 欄位的晚期指派，您可以產生執行階段例外狀況。 否則，請設為 <see langword="False" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">對預設屬性或欄位執行晚期繫結 Get，或對預設方法或函式執行晚期繫結呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method. If &lt;paramref name=&quot;Instance&quot; /&gt; is of type &lt;see cref=&quot;T:System.Dynamic.IDynamicMetaObjectProvider&quot; /&gt;, then bind using the Dynamic Language Runtime; otherwise perform standard late-binding.">公開屬性或方法的呼叫物件執行個體。 如果 <paramref name="Instance" /> 為 <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" /> 型別，則使用 Dynamic Language Runtime 來繫結，否則執行標準晚期繫結。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">
        <see langword="Boolean" /> 值，用於指定是否要在發生錯誤時擲回例外狀況。 設為 <see langword="True" />，擲回例外狀況。 設為 <see langword="False" />，在發生錯誤時傳回 <see langword="Nothing" />。</param>
      <returns vsli:raw="An instance of the call object.">呼叫物件的執行個體。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">對預設屬性或欄位執行晚期繫結 Get，或對預設方法或函式執行晚期繫結呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">
        <see langword="Boolean" /> 值，用於指定是否要在發生錯誤時擲回例外狀況。 設為 <see langword="True" />，擲回例外狀況。 設為 <see langword="False" />，在發生錯誤時傳回 <see langword="Nothing" />。</param>
      <returns vsli:raw="An instance of the call object.">呼叫物件的執行個體。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Set 或欄位寫入呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">在呼叫物件上的屬性或方法名稱。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Set 或欄位寫入呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">在呼叫物件上的屬性或方法名稱。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" /> 值，用來決定設定作業是否會運作。 當您相信屬性或欄位中已設定中繼值時，請設為 <see langword="True" />，否則為 <see langword="False" />。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" /> 值，指定晚期參考的基底參考為 <see langword="RValue" />。 當晚期參考的基底參考為 <see langword="True" /> 時，若設為 <see langword="RValue" />，對於實值型別之 <see langword="RValues" /> 欄位的晚期指派，您可以產生執行階段例外狀況。 否則，請設為 <see langword="False" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">執行晚期繫結方法或函式呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Type" vsli:raw="The type of the call object.">呼叫物件的型別。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">在呼叫物件上的屬性或方法名稱。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">引數型別的陣列；只用於傳遞引數型別的泛型呼叫。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">
        <see langword="Boolean" /> 值的陣列，晚期繫結器用來向呼叫站台傳達，哪些引數符合 <see langword="ByRef" /> 參數。 每個 <see langword="True" /> 值表示符合的引數，並且在 <see langword="LateCall" /> 呼叫完成之後應複製出這些引數。</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">
        <see langword="Boolean" /> 值，指出是否可以忽略傳回值。</param>
      <returns vsli:raw="An instance of the call object.">呼叫物件的執行個體。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound call to the default method or function. This helper method is not meant to be called directly from your code.">對預設方法或函式執行晚期繫結呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">
        <see langword="Boolean" /> 值，用於指定是否要在發生錯誤時擲回例外狀況。 設為 <see langword="True" />，擲回例外狀況。 設為 <see langword="False" />，在發生錯誤時傳回 <see langword="Nothing" />。</param>
      <returns vsli:raw="An instance of the call object.">呼叫物件的執行個體。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Get 或欄位存取呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Type" vsli:raw="The type of the call object.">呼叫物件的型別。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">在呼叫物件上的屬性或方法名稱。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">引數型別的陣列；只用於傳遞引數型別的泛型呼叫。</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">
        <see langword="Boolean" /> 值的陣列，晚期繫結器用來向呼叫站台傳達，哪些引數符合 <see langword="ByRef" /> 參數。 每個 <see langword="True" /> 值表示符合的引數，並且在 <see langword="LateCall" /> 呼叫完成之後應複製出這些引數。</param>
      <returns vsli:raw="An instance of the call object.">呼叫物件的執行個體。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field. This helper method is not meant to be called directly from your code.">對預設屬性或欄位執行晚期繫結 Get。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">
        <see langword="Boolean" /> 值，用於指定是否要在發生錯誤時擲回例外狀況。 設為 <see langword="True" />，擲回例外狀況。 設為 <see langword="False" />，在發生錯誤時傳回 <see langword="Nothing" />。</param>
      <returns vsli:raw="An instance of the call object.">呼叫物件的執行個體。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Get 或欄位存取呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <returns vsli:raw="An instance of the call object.">呼叫物件的執行個體。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Set 或欄位寫入呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Set 或欄位寫入呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" /> 值，用來決定設定作業是否會運作。 當您相信屬性或欄位中已設定中繼值時，請設為 <see langword="True" />，否則為 <see langword="False" />。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" /> 值，指定晚期參考的基底參考為 <see langword="RValue" />。 當晚期參考的基底參考為 <see langword="True" /> 時，若設為 <see langword="RValue" />，對於實值型別之 <see langword="RValues" /> 欄位的晚期指派，您可以產生執行階段例外狀況。 否則，請設為 <see langword="False" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Set 或欄位寫入呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Type" vsli:raw="The type of the call object.">呼叫物件的型別。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">在呼叫物件上的屬性或方法名稱。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">引數型別的陣列；只用於傳遞引數型別的泛型呼叫。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Set 或欄位寫入呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Type" vsli:raw="The type of the call object.">呼叫物件的型別。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">在呼叫物件上的屬性或方法名稱。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">引數型別的陣列；只用於傳遞引數型別的泛型呼叫。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" /> 值，用來決定設定作業是否會運作。 當您相信屬性或欄位中已設定中繼值時，請設為 <see langword="True" />，否則為 <see langword="False" />。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" /> 值，指定晚期參考的基底參考為 <see langword="RValue" />。 當晚期參考的基底參考為 <see langword="True" /> 時，若設為 <see langword="RValue" />，對於實值型別之 <see langword="RValues" /> 欄位的晚期指派，您可以產生執行階段例外狀況。 否則，請設為 <see langword="False" />。</param>
      <param name="CallType" vsli:raw="An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of CallType can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;. Only &lt;see langword=&quot;Set&quot; /&gt; is used.">型別 <see cref="T:Microsoft.VisualBasic.CallType" /> 的列舉型別成員，其表示正在呼叫的程序型別。 CallType 的值可以是 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。 僅使用 <see langword="Set" />。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">執行晚期繫結屬性 Set 或欄位寫入呼叫。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">公開屬性或方法的呼叫物件執行個體。</param>
      <param name="Type" vsli:raw="The type of the call object.">呼叫物件的型別。</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">在呼叫物件上的屬性或方法名稱。</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">陣列，其中包含要傳遞給呼叫的屬性或方法之引數。</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">引數名稱的陣列。</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">引數型別的陣列；只用於傳遞引數型別的泛型呼叫。</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" /> 值，用來決定設定作業是否會運作。 當您相信屬性或欄位中已設定中繼值時，請設為 <see langword="True" />，否則為 <see langword="False" />。</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" /> 值，指定晚期參考的基底參考為 <see langword="RValue" />。 當晚期參考的基底參考為 <see langword="True" /> 時，若設為 <see langword="RValue" />，對於實值型別之 <see langword="RValues" /> 欄位的晚期指派，您可以產生執行階段例外狀況。 否則，請設為 <see langword="False" />。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary vsli:raw="The Visual Basic compiler uses this class for object flow control; it is not meant to be called directly from your code.">Visual Basic 編譯器將這個類別用於物件流量控制，並不適合從您的程式碼直接呼叫。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary vsli:raw="Checks for a synchronization lock on the specified type.">檢查指定的型別上是否有同步鎖定。</summary>
      <param name="Expression" vsli:raw="The data type for which to check for synchronization lock.">要檢查同步鎖定的資料型別。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary vsli:raw="Provides services to the Visual Basic compiler for compiling &lt;see langword=&quot;For...Next&quot; /&gt; loops.">提供服務給 Visual Basic 編譯器來編譯 <see langword="For...Next" /> 迴圈。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary vsli:raw="Initializes a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">初始化 <see langword="For...Next" /> 迴圈。</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">迴圈計數器變數。</param>
      <param name="Start" vsli:raw="The initial value of the loop counter.">迴圈計數器的初始值。</param>
      <param name="Limit" vsli:raw="The value of the &lt;see langword=&quot;To&quot; /&gt; option.">
        <see langword="To" /> 選項的值。</param>
      <param name="StepValue" vsli:raw="The value of the &lt;see langword=&quot;Step&quot; /&gt; option.">
        <see langword="Step" /> 選項的值。</param>
      <param name="LoopForResult" vsli:raw="An object that contains verified values for loop values.">物件，其中包含迴圈值已驗證的值。</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">下一個迴圈反覆運算的計數器值。</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">如果迴圈已終止，則為 <see langword="False" />，否則為 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">檢查迴圈計數器、<see langword="Step" /> 和 <see langword="To" /> 值的有效值。</summary>
      <param name="count" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the initial value passed for the loop counter variable.">必要項。 <see langword="Decimal" /> 值，表示傳遞給迴圈計數器變數的初始值。</param>
      <param name="limit" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">必要項。 <see langword="Decimal" /> 值，表示使用 <see langword="To" /> 關鍵字傳遞的值。</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">必要項。 <see langword="Decimal" /> 值，表示使用 <see langword="Step" /> 關鍵字傳遞的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt; or &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="StepValue" /> 大於零且 <paramref name="count" /> 小於或等於 <paramref name="limit" />，或是 <paramref name="StepValue" /> 小於或等於零且 <paramref name="count" /> 大於或等於 <paramref name="limit" />，則為 <see langword="True" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary vsli:raw="Increments a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">遞增 <see langword="For...Next" /> 迴圈。</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">迴圈計數器變數。</param>
      <param name="LoopObj" vsli:raw="An object that contains verified values for loop values.">物件，其中包含迴圈值已驗證的值。</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">下一個迴圈反覆運算的計數器值。</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">如果迴圈已終止，則為 <see langword="False" />，否則為 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">檢查迴圈計數器、<see langword="Step" /> 和 <see langword="To" /> 值的有效值。</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the initial value passed for the loop counter variable.">必要項。 <see langword="Single" /> 值，表示傳遞給迴圈計數器變數的初始值。</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">必要項。 <see langword="Single" /> 值，表示使用 <see langword="To" /> 關鍵字傳遞的值。</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">必要項。 <see langword="Single" /> 值，表示使用 <see langword="Step" /> 關鍵字傳遞的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="StepValue" /> 大於零且 <paramref name="count" /> 小於或等於 <paramref name="limit" />，或是 <paramref name="StepValue" /> 小於或等於零且 <paramref name="count" /> 大於或等於 <paramref name="limit" />，則為 <see langword="True" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">檢查迴圈計數器、<see langword="Step" /> 和 <see langword="To" /> 值的有效值。</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the initial value passed for the loop counter variable.">必要項。 <see langword="Double" /> 值，表示傳遞給迴圈計數器變數的初始值。</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">必要項。 <see langword="Double" /> 值，表示使用 <see langword="To" /> 關鍵字傳遞的值。</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">必要項。 <see langword="Double" /> 值，表示使用 <see langword="Step" /> 關鍵字傳遞的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="StepValue" /> 大於零且 <paramref name="count" /> 小於或等於 <paramref name="limit" />，或是 <paramref name="StepValue" /> 小於或等於零且 <paramref name="count" /> 大於或等於 <paramref name="limit" />，則為 <see langword="True" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.ObjectType&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an addition (+) operation.">執行加法 (+) 運算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> 和 <paramref name="o2" /> 的總和。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">執行位元 <see langword="And" /> 運算。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <returns vsli:raw="1 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 1; otherwise, 0.">如果 <paramref name="obj1" /> 和 <paramref name="obj2" /> 都評估為 1，則為 1，否則為 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">執行位元 <see langword="Or" /> 運算。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <returns vsli:raw="0 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 0; otherwise, 1.">如果 <paramref name="obj1" /> 和 <paramref name="obj2" /> 都評估為 0，則為 0；否則為 1。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; operation.">執行 <see langword="Xor" /> 運算。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <returns vsli:raw="A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">數值，表示兩個數值位元模式的位元互斥 (獨佔位元分離)。 如需詳細資訊，請參閱 Xor 運算子。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a division (/) operation.">執行除法 (/) 運算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, including any remainder.">
        <paramref name="o1" /> 除以 <paramref name="o2" /> 的完整商數，包括任何餘數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary vsli:raw="Returns a boxed primitive value. This method is used to prevent copying structures multiple times.">傳回 Boxed 基本值。 這個方法用來防止多次複製結構。</summary>
      <param name="o" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <returns vsli:raw="The primitive value of &lt;paramref name=&quot;o&quot; /&gt; typed as object.">
        <paramref name="o" /> (型別為物件) 的基本值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an integer division (\) operation.">執行整數除法 (\) 運算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, which discards any remainder and retains only the integer portion.">
        <paramref name="o1" /> 除以 <paramref name="o2" /> 的整數商數，這會捨棄任何餘數而只保留整數部分。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Like&quot; /&gt; comparison.">執行 <see langword="Like" /> 比較。</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="vRight" vsli:raw="Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.">必要項。 符合＜Like 運算子＞中所描述模式比對慣例的任何 String 運算式。</param>
      <param name="CompareOption" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; value that specifies that the operation use either text or binary comparison.">必要項。 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 值，其指定作業使用文字或二進位比較。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the string representation of the value in &lt;paramref name=&quot;vLeft&quot; /&gt; satisfies the pattern that is contained in &lt;paramref name=&quot;vRight&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt; are &lt;see langword=&quot;Nothing&quot; /&gt;.">如果 <paramref name="vLeft" /> 中值的字串表示符合 <paramref name="vRight" /> 中所含的模式，則為 <see langword="True" />，否則為 <see langword="False" />。 如果 <paramref name="vLeft" /> 和 <paramref name="vRight" /> 都為 <see langword="True" />，則為 <see langword="Nothing" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a modulus (&lt;see langword=&quot;Mod&quot; /&gt;) operation.">執行模數 (<see langword="Mod" />) 運算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;o1&quot; /&gt; is divided by &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> 除以 <paramref name="o2" /> 後所留的餘數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a multiplication (*) operation.">執行乘法 (*) 運算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> 與 <paramref name="o2" /> 的乘積。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary vsli:raw="Performs a unary minus (-) operation.">執行一元減號 (-) 運算。</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="obj" /> 的負值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Not&quot; /&gt; operation.">執行 <see langword="Not" /> 運算。</summary>
      <param name="obj" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;obj&quot; /&gt; is 0; otherwise, 0.">對於 <see langword="Boolean" /> 運算，如果 <paramref name="obj" /> 為 <see langword="False" />，則為 <see langword="True" />，否則為 <see langword="True" />。 對於位元運算，如果 <paramref name="obj" /> 為 0，則為 1，否則為 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two objects.">指定兩個物件時，執行二進位碼或文字字串比較。</summary>
      <param name="o1" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="o2" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is less than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is equal to &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is greater than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">值 
  條件 
  -1 
 
                <paramref name="o1" /> 小於 <paramref name="o2" />。  

  0 
 
                <paramref name="o1" /> 等於 <paramref name="o2" />。  

  1 
 
                <paramref name="o1" /> 大於 <paramref name="o2" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary vsli:raw="Performs a unary plus (+) operation.">執行一元加號 (+) 運算。</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;obj&quot; /&gt;. (The sign of the &lt;paramref name=&quot;obj&quot; /&gt; is unchanged.)">
        <paramref name="obj" /> 的值。 (<paramref name="obj" /> 的正負號不會變更)。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an exponent (^) operation.">執行指數 (^) 運算。</summary>
      <param name="obj1" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="obj2" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;obj1&quot; /&gt; raised to the power of &lt;paramref name=&quot;obj2&quot; /&gt;.">
        <paramref name="obj1" /> 自乘至 <paramref name="obj2" /> 之乘冪的結果。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic left shift (&amp;lt;&amp;lt;) operation.">執行算術左移位 (&lt;&lt;) 運算。</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必要項。 整數值運算式。 要移位的位元模式。 資料型別必須是整數類資料型別 (Integral Type) (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />)。</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必要項。 數值運算式。 位元模式移位的位元數。 資料型別必須是 <see langword="Integer" /> 或擴展至 <see langword="Integer" />。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">整數值。 位元模式移位的結果。 資料型別與 <paramref name="o1" /> 的型別相同。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic right shift (&amp;gt;&amp;gt;) operation.">執行算術右移位 (&gt;&gt;) 運算。</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必要項。 整數值運算式。 要移位的位元模式。 資料型別必須是整數類資料型別 (Integral Type) (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />)。</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必要項。 數值運算式。 位元模式移位的位元數。 資料型別必須是 <see langword="Integer" /> 或擴展至 <see langword="Integer" />。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">整數值。 位元模式移位的結果。 資料型別與 <paramref name="o1" /> 的型別相同。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a string concatenation (&amp;amp;) operation.">執行字串串連 (&amp;) 作業。</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="vRight" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt;.">表示 <paramref name="vLeft" /> 和 <paramref name="vRight" /> 串連的字串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a subtraction (-) operation.">執行減法 (-) 運算。</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">
        <paramref name="o1" /> 與 <paramref name="o2" /> 之間的差數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; comparison.">執行 <see langword="Xor" /> 比較。</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">
        <see langword="Boolean" /> 或數值。 如果是 <see langword="Boolean" /> 比較，傳回值為兩個 <see langword="Boolean" /> 值的邏輯互斥 (獨佔邏輯分離)。 如果是位元 (數值) 運算，傳回值為數值，表示兩個數值位元模式的位元互斥 (獨佔位元分離)。 如需詳細資訊，請參閱 Xor 運算子。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary vsli:raw="Provides late-bound math operators, such as &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)&quot; /&gt; and &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)&quot; /&gt;, which the Visual Basic compiler uses internally.">提供晚期繫結算術運算子，例如 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> 和 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />，Visual Basic 編譯器在內部使用這些運算子。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic addition (+) operator.">表示 Visual Basic 加法 (+) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> 和 <paramref name="Right" /> 的總和。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;And&quot; /&gt; operator.">表示 Visual Basic <see langword="And" /> 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. For bitwise operations, 1 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 1; otherwise, 0.">對於 <see langword="Boolean" /> 運算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 都評估為 <see langword="True" />，則為 <see langword="True" />，否則為 <see langword="False" />。 對於位元運算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 都評估為 1，則為 1，否則為 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic equal (=) operator.">表示 Visual Basic 等號 (=) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="Left" /> 和 <paramref name="Right" /> 相等，則為 <see langword="True" />；否則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than (&amp;gt;) operator.">表示 Visual Basic 大於 (&gt;) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <see langword="True" /> 大於 <paramref name="Left" /> 則為 <paramref name="Right" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than or equal-to (&amp;gt;=) operator.">表示 Visual Basic 大於或等於 (&gt;=) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="Left" /> 大於或等於 <paramref name="Right" />，則為 <see langword="True" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than (&amp;lt;) operator.">表示 Visual Basic 小於 (&lt;) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="Left" /> 小於 <paramref name="Right" />，則為 <see langword="True" />；否則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than or equal-to (&amp;lt;=) operator.">表示 Visual Basic 小於或等於 (&lt;=) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <paramref name="Left" /> 小於或等於 <paramref name="Right" />，則為 <see langword="True" />；否則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">表示 Visual Basic 不等於 (&lt;&gt;) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is not equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果 <see langword="True" /> 不等於 <paramref name="Left" />，則為 <paramref name="Right" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two strings.">指定兩個字串時，執行二進位碼或文字字串比較。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何 <see langword="String" /> 運算式。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何 <see langword="String" /> 運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is equal to &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">值 
  條件 
  -1 
 
                <paramref name="Left" /> 小於 <paramref name="Right" />。  

  0 
 
                <paramref name="Left" /> 等於 <paramref name="Right" />。  

  1 
 
                <paramref name="Left" /> 大於 <paramref name="Right" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic concatenation (&amp;amp;) operator.">表示 Visual Basic 串連 (&amp;) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">表示 <paramref name="Left" /> 和 <paramref name="Right" /> 串連的字串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic equals (=) operator.">表示多載 Visual Basic 等號 (=) 比較運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded equals operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">多載等號運算子的結果。 如果不支援運算子多載，則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than (&amp;gt;) operator.">表示多載 Visual Basic 大於 (&gt;) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded greater-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">多載大於運算子的結果。 如果不支援運算子多載，則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than or equal-to (&amp;gt;=) operator.">表示多載 Visual Basic 大於或等於 (&gt;=) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded greater-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">多載大於或等於運算子的結果。 如果不支援運算子多載，則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than (&amp;lt;) operator.">表示多載 Visual Basic 小於 (&lt;) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded less-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">多載小於運算子的結果。 如果不支援運算子多載，則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than or equal-to (&amp;lt;=) operator.">表示多載 Visual Basic 小於或等於 (&lt;=) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded less-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">多載小於或等於運算子的結果。 如果不支援運算子多載，則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">表示多載 Visual Basic 不等於 (&lt;&gt;) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="Right" vsli:raw="Required. Any expression.">必要項。 任何運算式。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="The result of the overloaded not-equal operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">多載不等於運算子的結果。 如果不支援運算子多載，則為 <see langword="False" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic division (/) operator.">表示 Visual Basic 除法 (/) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, including any remainder.">
        <paramref name="Left" /> 除以 <paramref name="Right" /> 的完整商數，包括任何餘數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic exponent (^) operator.">表示 Visual Basic 指數 (^) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;Left&quot; /&gt; raised to the power of &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> 自乘至 <paramref name="Right" /> 之乘冪的結果。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary vsli:raw="Executes a late-bound evaluation of a user-defined operator. This helper method is not meant to be called directly from your code.">對使用者定義的運算子執行晚期繫結評估。 這個 Helper 方法並不適合從您的程式碼直接呼叫。</summary>
      <param name="vbOp" vsli:raw="The user-defined operator.">使用者定義的運算子。</param>
      <param name="Arguments">要傳遞給使用者定義運算子的引數值。</param>
      <returns vsli:raw="The result returned from the user-defined operator.">從使用者定義的運算子所傳回的結果。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic integer division (\) operator.">表示 Visual Basic 整數除法 (\) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, which discards any remainder and retains only the integer portion.">
        <paramref name="Left" /> 除以 <paramref name="Right" /> 的整數商數，這會捨棄任何餘數而只保留整數部分。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic left shift (&amp;lt;&amp;lt;) operator.">表示 Visual Basic 算術左移位 (&lt;&lt;) 運算子。</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必要項。 整數值運算式。 要移位的位元模式。 資料型別必須是整數類資料型別 (Integral Type) (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />)。</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必要項。 數值運算式。 位元模式移位的位元數。 資料型別必須是 <see langword="Integer" /> 或擴展至 <see langword="Integer" />。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">整數值。 位元模式移位的結果。 資料型別與 <paramref name="Operand" /> 的型別相同。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Mod&quot; /&gt; operator.">表示 Visual Basic <see langword="Mod" /> 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;Left&quot; /&gt; is divided by &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> 除以 <paramref name="Right" /> 後所留的餘數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic multiply (*) operator.">表示 Visual Basic 乘法 (*) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> 與 <paramref name="Right" /> 的乘積。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary minus (-) operator.">表示 Visual Basic 一元減號 (-) 運算子。</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;Operand&quot; /&gt;.">
        <paramref name="Operand" /> 的負值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Not&quot; /&gt; operator.">表示 Visual Basic <see langword="Not" /> 運算子。</summary>
      <param name="Operand" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;Operand&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;Operand&quot; /&gt; is 0; otherwise, 0.">對於 <see langword="Boolean" /> 運算，如果 <paramref name="Operand" /> 為 <see langword="False" />，則為 <see langword="True" />，否則為 <see langword="True" />。 對於位元運算，如果 <paramref name="Operand" /> 為 0，則為 1，否則為 0。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Or&quot; /&gt; operator.">表示 Visual Basic <see langword="Or" /> 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 0 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 0; otherwise, 1.">對於 <see langword="Boolean" /> 運算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 都評估為 <see langword="False" />，則為 <see langword="False" />，否則為 <see langword="True" />。 對於位元運算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 都評估為 0，則為 0；否則為 1。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary plus (+) operator.">表示 Visual Basic 一元加號 (+) 運算子。</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;Operand&quot; /&gt;. (The sign of the &lt;paramref name=&quot;Operand&quot; /&gt; is unchanged.)">
        <paramref name="Operand" /> 的值。 (<paramref name="Operand" /> 的正負號不會變更)。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic right shift (&amp;gt;&amp;gt;) operator.">表示 Visual Basic 算術右移位 (&gt;&gt;) 運算子。</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">必要項。 整數值運算式。 要移位的位元模式。 資料型別必須是整數類資料型別 (Integral Type) (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />)。</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">必要項。 數值運算式。 位元模式移位的位元數。 資料型別必須是 <see langword="Integer" /> 或擴展至 <see langword="Integer" />。</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">整數值。 位元模式移位的結果。 資料型別與 <paramref name="Operand" /> 的型別相同。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic subtraction (-) operator.">表示 Visual Basic 減法 (-) 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">必要項。 任何數值運算式。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">
        <paramref name="Left" /> 與 <paramref name="Right" /> 之間的差數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Xor&quot; /&gt; operator.">表示 Visual Basic <see langword="Xor" /> 運算子。</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">必要項。 任何 <see langword="Boolean" /> 或數值運算式。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">
        <see langword="Boolean" /> 或數值。 如果是 <see langword="Boolean" /> 比較，傳回值為兩個 <see langword="Boolean" /> 值的邏輯互斥 (獨佔邏輯分離)。 如果是位元 (數值) 運算，傳回值為數值，表示兩個數值位元模式的位元互斥 (獨佔位元分離)。 如需詳細資訊，請參閱 Xor 運算子。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary vsli:raw="Specifies that the current &lt;see langword=&quot;Option Compare&quot; /&gt; setting should be passed as the default value for an argument.">指定應傳遞目前的 <see langword="Option Compare" /> 設定，做為引數的預設值。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary vsli:raw="The Visual Basic compiler emits this helper class to indicate (for Visual Basic debugging) which comparison option, binary or text, is being used.">Visual Basic 編譯器會發出這個 Helper 類別，以指出 (Visual Basic 偵錯之用) 哪個比較選項 (二進位碼或文字) 正在使用中。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute&quot; /&gt; class. This is a helper method.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" /> 類別的新執行個體。 這是 Helper 方法。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary vsli:raw="Provides helpers for the Visual Basic &lt;see langword=&quot;Err&quot; /&gt; object.">提供 Visual Basic <see langword="Err" /> 物件的 Helper。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Clear&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">為 <see langword="Clear" /> 物件的 <see langword="Err" /> 方法執行工作。 Helper 方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Raise&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">為 <see langword="Raise" /> 物件的 <see langword="Err" /> 方法執行工作。 Helper 方法。</summary>
      <param name="hr" vsli:raw="An integer value that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.">整數，可識別錯誤的本質。 Visual Basic 的錯誤位於 0-65535 的範圍內；0-512 的範圍是保留給系統錯誤使用；513-65535 的範圍則是供使用者定義的錯誤使用。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object.">
        <see cref="T:System.Exception" /> 物件。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary vsli:raw="Closes all files for the calling assembly and stops the process.">關閉呼叫組件的所有檔案並停止處理序。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Visual Basic 編譯器會使用這個 Helper 方法來擷取 <see langword="Err" /> 物件中的例外狀況。</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">要攔截的 <see cref="T:System.Exception" /> 物件。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">Visual Basic 編譯器會使用這個 Helper 方法來擷取 <see langword="Err" /> 物件中的例外狀況。</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">要攔截的 <see cref="T:System.Exception" /> 物件。</param>
      <param name="lErl" vsli:raw="The line number of the exception.">例外狀況的行號。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Short" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">必要項。 要轉換成 <see langword="Short" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Short" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Short" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">必要項。 要轉換為 <see langword="Short" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Short" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Single" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必要項。 要轉換成 <see langword="Single" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="Single" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必要項。 要轉換成 <see langword="Single" /> 值的物件。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string.">傳回對應於指定之字串的 <see langword="Single" /> 值。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必要項。 要轉換為 <see langword="Single" /> 值的字串。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string and number format information.">傳回 <see langword="Single" /> 值，這個值對應於指定的字串和數字格式資訊。</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">必要項。 要轉換為 <see langword="Single" /> 值的字串。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="Single" /> 值。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary vsli:raw="This class provides attributes that are applied to the standard module construct when it is emitted to Intermediate Language (IL). It is not intended to be called directly from your code.">這個類別提供屬性，當標準模組建構發出至中繼語言 (IL) 時，對標準模組建構套用這些屬性。 它並不適合直接從您的程式碼呼叫。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary vsli:raw="The Visual Basic compiler uses this class internally when initializing static local members; it is not meant to be called directly from your code.">Visual Basic 編譯器初始化靜態本機成員時，會在內部使用這個類別，並不適合從您的程式碼直接呼叫。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" /> 類別的新執行個體。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary vsli:raw="Returns the state of the static local member's initialization flag (initialized or not).">傳回靜態本機成員的初始設定旗標狀態 (已初始化或未初始化)。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">自 Visual Basic 2005 起，這個類別已被取代。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt;.">傳回對應於指定之 <see langword="String" /> 的 <see langword="Boolean" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 <see langword="Boolean" /> 表示轉換為 <see langword="String" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Byte&quot; /&gt;.">傳回對應於指定之 <see langword="String" /> 的 <see langword="Byte" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Byte&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 <see langword="Byte" /> 表示轉換為 <see langword="String" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Char&quot; /&gt;.">傳回對應於指定之 <see langword="String" /> 的 <see langword="Char" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Char&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 <see langword="Char" /> 表示轉換為 <see langword="String" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified date.">傳回對應於指定之日期的 <see langword="String" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Date to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 要轉換為 <see langword="String" /> 值的日期。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Decimal&quot; /&gt;.">傳回對應於指定之 <see langword="String" /> 的 <see langword="Decimal" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 <see langword="Decimal" /> 表示轉換為 <see langword="String" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Decimal&quot; /&gt; and number format information.">傳回 <see langword="String" /> 值，這個值對應於指定的 <see langword="Decimal" /> 和數字格式資訊。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 <see langword="Decimal" /> 表示轉換為 <see langword="String" /> 值。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt;.">傳回對應於指定之 <see langword="String" /> 的 <see langword="Double" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">必要項。 <see langword="Double" /> 表示轉換為 <see langword="String" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt; and number format information.">傳回 <see langword="String" /> 值，這個值對應於指定的 <see langword="Double" /> 和數字格式資訊。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">必要項。 <see langword="Double" /> 表示轉換為 <see langword="String" /> 值。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The string representation of &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Integer&quot; /&gt;.">傳回對應於指定之 <see langword="String" /> 的 <see langword="Integer" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 <see langword="Integer" /> 表示轉換為 <see langword="String" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int64&quot; /&gt; (64-bit integer).">傳回對應於指定之 <see langword="String" /> (64 位元整數) 的 <see langword="Int64" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Int64&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 <see langword="Int64" /> 表示轉換為 <see langword="String" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified object.">傳回對應於特定物件的 <see langword="String" /> 值。</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 要轉換成 <see langword="String" /> 值的物件。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int16&quot; /&gt; (16-bit integer).">傳回對應至指定 <see langword="Int16" /> (16 位元整數) 的 <see langword="String" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Int616&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 <see langword="Int616" /> 表示轉換為 <see langword="String" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt;.">傳回對應於指定之 <see langword="String" /> 的 <see langword="Single" /> 值。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 <see langword="Single" /> 表示轉換為 <see langword="String" /> 值。</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt; and number format information.">傳回 <see langword="String" /> 值，這個值對應於指定的 <see langword="Single" /> 和數字格式資訊。</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 <see langword="Single" /> 表示轉換為 <see langword="String" /> 值。</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">
        <see cref="T:System.Globalization.NumberFormatInfo" /> 物件，依據文化特性 (Culture) 定義格式化和顯示數值的方式。</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">對應於 <paramref name="Value" /> 的 <see langword="String" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Overwrites the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with the contents of the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter.">以 <paramref name="sDest" /> 參數的內容覆寫 <paramref name="sInsert" /> 參數。</summary>
      <param name="sDest" vsli:raw="Required. String variable to modify.">必要項。 要修改的字串變數。</param>
      <param name="StartPosition" vsli:raw="Required. Location in the &lt;paramref name=&quot;sDest&quot; /&gt; parameter to begin overwriting from. The index is 1-based.">必要項。 <paramref name="sDest" /> 參數中開始覆寫的位置。 以 1 起始的索引。</param>
      <param name="MaxInsertLength" vsli:raw="Required. Maximum number of characters from the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter to use, starting from the first character.">必要項。 <paramref name="sInsert" /> 參數中使用的最大字元數目，從第一個字元開始。</param>
      <param name="sInsert" vsli:raw="Required. String value to overwrite the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with.">必要項。 用來覆寫 <paramref name="sDest" /> 參數的字串值。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Compares two strings.">比較兩個字串。</summary>
      <param name="sLeft" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sRight&quot; /&gt;.">必要項。 要與 <paramref name="sRight" /> 比較的字串。</param>
      <param name="sRight" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sLeft&quot; /&gt;.">必要項。 要與 <paramref name="sLeft" /> 比較的字串。</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive comparison; otherwise &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="True" /> 表示要執行不區分大小寫的比較，否則為 <see langword="False" />。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; zero&lt;/term&gt;&lt;description&gt; The two strings are equal.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is less than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is greater than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">值 
  條件 
  零 
  兩個字串相等。  

  小於零 
 
                <paramref name="sLeft" /> 小於 <paramref name="sRight" />。  

  大於零 
 
                <paramref name="sLeft" /> 大於 <paramref name="sRight" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator.">比較參數 <paramref name="Source" /> 和 <paramref name="Pattern" />，並傳回與 <see langword="Like" /> 運算子相同的結果。</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何 <see langword="String" /> 運算式。</param>
      <param name="Pattern" vsli:raw="Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">符合＜Like 運算子＞中所描述模式比對慣例的任何 <see langword="String" /> 運算式。</param>
      <param name="CompareOption" vsli:raw="Specifies how to compare strings to patterns, according to the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt;. Can be &lt;see langword=&quot;vbBinaryCompare&quot; /&gt; for binary comparison or &lt;see langword=&quot;vbTextCompare&quot; /&gt; for comparison based on a case-insensitive text sort order determined by your system's &lt;see langword=&quot;LocaleID&quot; /&gt; value.">指定如何依據 <see cref="T:Microsoft.VisualBasic.CompareMethod" />比較字串與模式。 可以是 <see langword="vbBinaryCompare" /> 進行二進位碼比較，或 <see langword="vbTextCompare" /> 依據系統的 <see langword="LocaleID" /> 值所決定的不區分大小寫文字排序次序來進行比較。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" /> 值，其指出字串是否符合模式。 如果字串中的值滿足模式中所含的模式，結果為 <see langword="True" />。 如果字串不滿足模式，結果為 <see langword="False" />。 如果字串和模式都是空字串，則結果為 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using binary comparison.">比較參數 <paramref name="Source" /> 和 <paramref name="Pattern" />，並使用二進位碼比較，傳回與 <see langword="Like" /> 運算子相同的結果。</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何 <see langword="String" /> 運算式。</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">必要項。 符合＜Like 運算子＞中所描述模式比對慣例的任何 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" /> 值，其指出字串是否符合模式。 如果字串中的值滿足模式中所含的模式，結果為 <see langword="True" />。 如果字串不滿足模式，結果為 <see langword="False" />。 如果字串和模式都是空字串，則結果為 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using text comparison.">比較參數 <paramref name="Source" /> 和 <paramref name="Pattern" />，並使用文字比較，傳回與 <see langword="Like" /> 運算子相同的結果。</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何 <see langword="String" /> 運算式。</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">必要項。 符合＜Like 運算子＞中所描述模式比對慣例的任何 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" /> 值，其指出字串是否符合模式。 如果字串中的值滿足模式中所含的模式，結果為 <see langword="True" />。 如果字串不滿足模式，結果為 <see langword="False" />。 如果字串和模式都是空字串，則結果為 <see langword="True" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary vsli:raw="Contains utilities that the Visual Basic compiler uses.">包含 Visual Basic 編譯器使用的公用程式。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary vsli:raw="Used by the Visual Basic compiler as a helper for &lt;see langword=&quot;Redim&quot; /&gt;.">由 Visual Basic 編譯器用做 <see langword="Redim" /> 的 Helper。</summary>
      <param name="arySrc" vsli:raw="The array to be copied.">要複製的陣列。</param>
      <param name="aryDest" vsli:raw="The destination array.">目的陣列。</param>
      <returns vsli:raw="The copied array.">複製的陣列。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary vsli:raw="The &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.Versioned&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">
        <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> 模組會包含用於與物件、應用程式和系統互動的程序。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">在物件上執行方法，或是設定或傳回物件上的屬性。</summary>
      <param name="Instance" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">必要項。 <see langword="Object" />. 公開屬性或方法之物件的指標。</param>
      <param name="MethodName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">必要項。 <see langword="String" />. 包含物件之屬性或方法名稱的字串運算式。</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">必要項。 型別 <see cref="T:Microsoft.VisualBasic.CallType" /> 的列舉型別成員，其表示正在呼叫的程序型別。 <see langword="CallType" /> 的值可以是 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。</param>
      <param name="Arguments" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">選擇性。 <see langword="ParamArray" />. 參數陣列，其中包含要傳遞給屬性或正在呼叫的方法之引數。</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">在物件上執行方法，或是設定或傳回物件上的屬性。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">傳回布林值，指出運算式是否可以評估為數字。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必要項。 <see langword="Object" /> 運算式。</param>
      <returns vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">傳回布林值，指出運算式是否可以評估為數字。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the system data type name of a variable.">傳回字串值，其中包含某個變數的系統資料型別名稱。</summary>
      <param name="VbName" vsli:raw="Required. A string variable containing a Visual Basic type name.">必要項。 字串變數，包含 Visual Basic 型別名稱。</param>
      <returns vsli:raw="Returns a string value containing the system data type name of a variable.">傳回字串值，其中包含某個變數的系統資料型別名稱。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary vsli:raw="Returns a string value containing data type information about a variable.">傳回字串值，其中包含與變數有關的資料型別資訊。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">必要項。 <see langword="Object" /> 變數。 如果 <see langword="Option Strict" /> 為 <see langword="Off" />，您可以傳遞任何資料型別的變數，但是結構除外。</param>
      <returns vsli:raw="Returns a string value containing data type information about a variable.">傳回字串值，其中包含與變數有關的資料型別資訊。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">傳回字串值，其中包含某個變數的 Visual Basic 資料型別名稱。</summary>
      <param name="SystemName" vsli:raw="Required. String variable containing a type name used by the common language runtime.">必要項。 字串變數，包含 Common Language Runtime 所用的型別名稱。</param>
      <returns vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">傳回字串值，其中包含某個變數的 Visual Basic 資料型別名稱。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary vsli:raw="The &lt;see langword=&quot;Constants&quot; /&gt; module contains miscellaneous constants. These constants can be used anywhere in your code.">
        <see langword="Constants" /> 模組包含其他常數， 這些常數可用在程式碼當中的任何地方。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指出 <see langword="Abort" /> 按鈕已在訊息方塊中按下。 由 <see langword="MsgBox" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt;, &lt;see langword=&quot;Retry&quot; /&gt;, and &lt;see langword=&quot;Ignore&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="Abort" /> 函式時將顯示 <see langword="Retry" />、<see langword="Ignore" /> 和 <see langword="MsgBox" /> 按鈕。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="MsgBox" /> 函式時訊息方塊將顯示為強制回應對話方塊。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary vsli:raw="Indicates that the file has changed since the last backup operation for file-access functions.">指出檔案自上一次檔案存取函式的備份作業之後已變更。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary vsli:raw="Indicates that the type of a variant object is an array. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為陣列。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary vsli:raw="Represents a backspace character for print and display functions.">表示呼叫列印和顯示功能時使用的退格鍵 (Backspace)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary vsli:raw="Specifies that a binary comparison should be performed when comparison functions are called.">指定在呼叫比較函式時必須執行二進位內容比較。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Boolean&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Boolean" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Byte&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Byte" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Cancel&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指出 <see langword="Cancel" /> 按鈕已在訊息方塊中按下。 由 <see langword="MsgBox" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary vsli:raw="Represents a carriage-return character for print and display functions.">表示列印及顯示函數的歸位字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary vsli:raw="Indicates that the critical message icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="MsgBox" /> 函式時將顯示嚴重訊息圖示。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary vsli:raw="Represents a carriage-return character combined with a linefeed character for print and display functions.">表示列印及顯示函數之結合換行字元的歸位字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Currency&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Currency" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Date&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Date" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Decimal&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Decimal" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary vsli:raw="Indicates that the leftmost button is selected as the default button when the message box appears.">指出訊息方塊出現時，最左邊的按鈕會選取做為預設按鈕。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary vsli:raw="Indicates that the second button from the left is selected as the default button when the message box appears.">指出訊息方塊出現時，左邊第二個按鈕會選取做為預設按鈕。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary vsli:raw="Indicates that the third button from the left is selected as the default button when the message box appears.">指出訊息方塊出現時，左邊第三個按鈕會選取做為預設按鈕。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary vsli:raw="Indicates that the file is a directory or folder for file-access functions.">指出檔案為檔案存取函式的目錄或資料夾。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Double&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Double" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Empty&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Empty" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary vsli:raw="Indicates that the exclamation icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="MsgBox" /> 函式時將顯示驚嘆號圖示。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;False&quot; /&gt; should be used when number-formatting functions are called.">指出呼叫數字格式化函式時必須使用 <see langword="Boolean" /> 值的 <see langword="False" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary vsli:raw="Indicates that the first week of the year that has at least four days should be used when date-related functions are called.">指出呼叫日期相關的函式時，必須使用至少包含四天之一年的第一週。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary vsli:raw="Indicates that the first full week of the year should be used when date-related functions are called.">指出呼叫日期相關的函式時，必須使用一年之完整的第一週。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary vsli:raw="Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.">指出呼叫日期相關的函式時，必須使用包含 1 月 1 日之一年的那一週。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary vsli:raw="Represents a form-feed character for print functions.">表示呼叫列印功能時使用的換頁字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary vsli:raw="Specifies that Friday should be used as the first day of the week when date-related functions are called.">指定呼叫日期相關的函式時，必須使用星期五做為一週的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary vsli:raw="Indicates that the general date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">指出呼叫 <see langword="FormatDateTime" /> 函式時，必須使用目前文化特性的一般日期格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary vsli:raw="Specifies that a property value should be retrieved when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">指定呼叫 <see langword="CallByName" /> 函式時，必須擷取屬性值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary vsli:raw="Indicates that the file is a hidden file for file-access functions.">指出該檔案是檔案存取函式的隱藏檔。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary vsli:raw="Indicates that the window style is hidden for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指出呼叫 <see langword="Shell" /> 函式時，所叫用程式的視窗樣式會隱藏起來。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary vsli:raw="Indicates Hiragana characters should be converted to Katakana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指出呼叫 <see langword="StrConv" /> 函式時，平假名字元必須轉換成片假名字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Ignore&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指出 <see langword="Ignore" /> 按鈕已在訊息方塊中按下。 由 <see langword="MsgBox" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary vsli:raw="Indicates that the information icon will display when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="MsgBox" /> 函式時將顯示資訊圖示。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Integer&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Integer" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary vsli:raw="Indicates that Katakana characters should be converted to Hiragana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指出呼叫 <see langword="StrConv" /> 函式時，片假名字元必須轉換成平假名字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary vsli:raw="Indicates that a property value should be set to an object instance when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">指出呼叫 <see langword="CallByName" /> 時，屬性值必須設為物件執行個體。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary vsli:raw="Represents a linefeed character for print and display functions.">表示呼叫列印和顯示功能時使用的換行字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary vsli:raw="Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指出在呼叫 <see langword="StrConv" /> 函式時，字元必須轉換，以便使用語言的大小寫規則，而不是使用檔案系統的大小寫規則。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary vsli:raw="Indicates the type of a variant object is &lt;see langword=&quot;Long&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Long" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary vsli:raw="Indicates that the long date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">指出呼叫 <see langword="FormatDateTime" /> 函式時，必須使用目前文化特性的完整日期格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary vsli:raw="Indicates that the long time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">指出呼叫 <see langword="FormatDateTime" /> 函式時，必須使用目前文化特性的完整時間格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary vsli:raw="Indicates that characters should be converted to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指出呼叫 <see langword="StrConv" /> 函式時，字元必須轉換成小寫。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary vsli:raw="Indicates that the window style is maximized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指出呼叫 <see langword="Shell" /> 函式時，所叫用程式的視窗樣式會最大化並且擁有焦點。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary vsli:raw="Specifies that a method should be called when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">指定呼叫 <see langword="CallByName" /> 函式時必須呼叫某個方法。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary vsli:raw="Indicates that the window style is minimized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指出呼叫 <see langword="Shell" /> 函式時，所叫用程式的視窗樣式會最小化並且擁有焦點。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary vsli:raw="Indicates that the window style is minimized without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指出呼叫 <see langword="Shell" /> 函式時，所叫用程式的視窗樣式會最小化但沒有焦點。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary vsli:raw="Specifies that Monday should be used as the first day of the week when date-related functions are called.">指定呼叫日期相關的函式時，必須使用星期一做為一週的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Help&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="Help" /> 函式時將顯示 <see langword="MsgBox" /> 按鈕。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary vsli:raw="Indicates that text will be right-aligned when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="MsgBox" /> 函式時，文字將靠右對齊。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary vsli:raw="Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="MsgBox" /> 函式時，閱讀文字將從右至左顯示 (希伯拉伯文系統)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary vsli:raw="Indicates that the message box will display in the foreground when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="MsgBox" /> 函式時，訊息方塊將顯示在前景中。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary vsli:raw="Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指出在呼叫 <see langword="StrConv" /> 函式時，全形字元必須轉換成半形字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary vsli:raw="Represents a newline character for print and display functions.">表示列印及顯示函數的新行字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;No&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指出 <see langword="No" /> 按鈕已在訊息方塊中按下。 由 <see langword="MsgBox" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary vsli:raw="Indicates that the file is a normal file for file-access functions.">指出該檔案是檔案存取函式的一般檔案。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary vsli:raw="Indicates that the window style is normal with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指出呼叫 <see langword="Shell" /> 函式時，所叫用程式的視窗樣式為正常大小並且擁有焦點。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary vsli:raw="Indicates that the window style is normal without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">指出呼叫 <see langword="Shell" /> 函式時，所叫用程式的視窗樣式會呈現正常大小，但沒有焦點。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Nothing&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Nothing" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary vsli:raw="Represents a null character for print and display functions.">表示呼叫列印和顯示功能時使用的 null 字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary vsli:raw="Represents a zero-length string for print and display functions, and for calling external procedures.">表示列印及顯示函數之長度為零的字串，用來呼叫外部程序。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Object&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Object" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary vsli:raw="Represents the object error number. User-defined error numbers should be greater than this value.">表示物件錯誤代碼。 使用者定義錯誤代碼應大於這個值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指出 <see langword="OK" /> 按鈕已在訊息方塊中按下。 由 <see langword="MsgBox" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="OK" /> 函式時將顯示 <see langword="Cancel" /> 和 <see langword="MsgBox" /> 按鈕。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary vsli:raw="Indicates that only the &lt;see langword=&quot;OK&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="OK" /> 函式時，將只顯示 <see langword="MsgBox" /> 按鈕。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary vsli:raw="Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指出在呼叫 <see langword="StrConv" /> 函式時，字串中每一個字的第一個字母必須轉換為大寫，而其他字元要轉換為小寫。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary vsli:raw="Indicates that the question icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="MsgBox" /> 函式時將顯示問號圖示。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary vsli:raw="Indicates that the file is a read-only file for file-access functions.">指出該檔案是檔案存取函式的唯讀檔案。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指出 <see langword="Retry" /> 按鈕已在訊息方塊中按下。 由 <see langword="MsgBox" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="Retry" /> 函式時將顯示 <see langword="Cancel" /> 和 <see langword="MsgBox" /> 按鈕。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary vsli:raw="Specifies that Saturday should be used as the first day of the week when date-related functions are called.">指定呼叫日期相關的函式時，必須使用星期六做為一週的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary vsli:raw="Indicates that a property value should be set when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">指出呼叫 <see langword="CallByName" /> 函式時，必須設定屬性值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary vsli:raw="Indicates that the short-date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">指出呼叫 <see langword="FormatDateTime" /> 函式時，必須使用目前文化特性的簡短日期格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary vsli:raw="Indicates that the short-time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">指出呼叫 <see langword="FormatDateTime" /> 函式時，必須使用目前文化特性的簡短時間格式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary vsli:raw="Indicates that characters should be converted to Simplified Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指出呼叫 <see langword="StrConv" /> 函式時，字元必須轉換成簡體中文。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see cref=&quot;T:System.Single&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Single" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;String&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="String" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary vsli:raw="Specifies that Sunday should be used as the first day of the week when date-related functions are called.">指定呼叫日期相關的函式時，必須使用星期日做為一週的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary vsli:raw="Indicates that the file is a system file for file-access functions.">指出該檔案是檔案存取函式的系統檔案。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="MsgBox" /> 函式時訊息方塊將顯示為強制回應對話方塊。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary vsli:raw="Represents a tab character for print and display functions.">表示列印及顯示函數的定位字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary vsli:raw="Indicates that a text comparison should be performed when comparison functions are called.">指定在呼叫比較函式時必須執行文字比較。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary vsli:raw="Specifies that Thursday should be used as the first day of the week when date-related functions are called.">指定呼叫日期相關的函式時，必須使用星期四做為一週的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary vsli:raw="Indicates that characters should be converted to Traditional Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指出呼叫 <see langword="StrConv" /> 函式時，字元必須轉換成繁體中文。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;True&quot; /&gt; should be used when number-formatting functions are called.">指出呼叫數字格式化函式時必須使用 <see langword="Boolean" /> 值的 <see langword="True" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary vsli:raw="Specifies that Tuesday should be used as the first day of the week when date-related functions are called.">指定呼叫日期相關的函式時，必須使用星期二做為一週的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary vsli:raw="Indicates that characters should be converted to uppercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指出呼叫 <see langword="StrConv" /> 函式時，字元必須轉換成大寫。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary vsli:raw="Indicates that the default &lt;see langword=&quot;Boolean&quot; /&gt; value should be used when number-formatting functions are called.">指出呼叫數字格式化函式時必須使用預設的 <see langword="Boolean" /> 值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary vsli:raw="Indicates that the type of a variant object is a user-defined type. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型是使用者定義類型。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary vsli:raw="Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.">指出呼叫日期相關的函式時，必須使用系統指定的那一週做為一年的第一週。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary vsli:raw="Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.">指出呼叫日期相關的函式時，必須使用系統指定的日子做為一週的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Variant&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出變數物件的類型為 <see langword="Variant" />。 由 <see langword="VarType" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary vsli:raw="Represents a carriage-return character for print functions.">表示呼叫列印功能時使用的歸位字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary vsli:raw="Indicates the volume label file attribute for file-access functions.">指出檔案存取函式的磁碟區標籤檔案屬性。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary vsli:raw="Specifies that Wednesday should be used as the first day of the week when date-related functions are called.">指定呼叫日期相關的函式時，必須使用星期三做為一週的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary vsli:raw="Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">指出在呼叫 <see langword="StrConv" /> 函式時，半形字元必須轉換成全形字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指出 <see langword="Yes" /> 按鈕已在訊息方塊中按下。 由 <see langword="MsgBox" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; and &lt;see langword=&quot;No&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="Yes" /> 函式時將顯示 <see langword="No" /> 和 <see langword="MsgBox" /> 按鈕。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt;, &lt;see langword=&quot;No&quot; /&gt;, and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">指出在呼叫 <see langword="Yes" /> 函式時將顯示 <see langword="No" />、<see langword="Cancel" /> 和 <see langword="MsgBox" /> 按鈕。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary vsli:raw="The &lt;see langword=&quot;ControlChars&quot; /&gt; module contains constants used as control characters. These constants can be used anywhere in your code.">
        <see langword="ControlChars" /> 模組包含了當做控制字元使用的常數。 這些常數可用在程式碼當中的任何地方。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.ControlChars&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.ControlChars" /> 類別的新執行個體。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary vsli:raw="Represents a backspace character (&lt;see langword=&quot;vbBack&quot; /&gt;).">表示退格鍵字元 (<see langword="vbBack" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary vsli:raw="Represents a carriage return character (&lt;see langword=&quot;vbCr&quot; /&gt;).">表示歸位字元 (<see langword="vbCr" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary vsli:raw="Represents a carriage return/linefeed character combination (&lt;see langword=&quot;vbCrLf&quot; /&gt;).">表示歸位/換行字元組合 (<see langword="vbCrLf" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary vsli:raw="Represents a form feed character for print functions (&lt;see langword=&quot;vbFormFeed&quot; /&gt;).">表示列印功能的換頁字元 (<see langword="vbFormFeed" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary vsli:raw="Represents a line feed character (&lt;see langword=&quot;vbLf&quot; /&gt;).">表示換行字元 (<see langword="vbLf" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary vsli:raw="Represents a new line character (&lt;see langword=&quot;vbNewLine&quot; /&gt;).">表示新行字元 (<see langword="vbNewLine" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary vsli:raw="Represents a null character (&lt;see langword=&quot;vbNullChar&quot; /&gt;).">表示 Null 字元 (<see langword="vbNullChar" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary vsli:raw="Represents a double-quote character.">表示雙引號字元。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary vsli:raw="Represents a tab character (&lt;see langword=&quot;vbTab&quot; /&gt;).">表示定位字元 (<see langword="vbTab" />)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary vsli:raw="Represents a vertical tab character (&lt;see langword=&quot;vbVerticalTab&quot; /&gt;).">表示垂直定位字元 (<see langword="vbVerticalTab" />)。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary vsli:raw="The &lt;see langword=&quot;Conversion&quot; /&gt; module contains the procedures used to perform various conversion operations.">
        <see langword="Conversion" /> 模組包含用來執行各種轉換作業的程序。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">將物件轉換成指定的型別。</summary>
      <param name="Expression" vsli:raw="The object to convert.">要轉換的物件。</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">要將物件轉換成的型別。</param>
      <returns vsli:raw="An object whose type at run time is the requested target type.">物件，其類型於執行階段為所要求的目標類型。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary vsli:raw="Converts an object to the specified generic type.">將物件轉換為指定的泛型類型。</summary>
      <param name="Expression" vsli:raw="The object to convert.">要轉換的物件。</param>
      <typeparam name="TargetType" vsli:raw="The type to which to convert the object.">要將物件轉換成的型別。</typeparam>
      <returns vsli:raw="An object statically typed as the requested generic type.">物件，其靜態類型為所要求的泛型類型。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">傳回對應到指定錯誤代碼的錯誤訊息。</summary>
      <returns vsli:raw="The error message that corresponds to the most recent run-time error.">對應至最近一次執行階段錯誤的錯誤訊息。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" /> 超出範圍。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">傳回對應到指定錯誤代碼的錯誤訊息。</summary>
      <param name="ErrorNumber" vsli:raw="Optional. Any valid error number.">選擇性。 任何有效的錯誤代碼。</param>
      <returns vsli:raw="The error message that corresponds to a given error number.">對應到指定之錯誤代碼的錯誤訊息。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" /> 超出範圍。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Decimal" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Double" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Short" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Integer" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Long" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">必要項。 <see langword="Object" /> 類型的數字，或是任何有效的數值運算式。 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />，則會傳回 <see langword="Nothing" />。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Single" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">傳回代表數字十六進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示數字十六進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">傳回代表數字十六進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示數字十六進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">傳回代表數字十六進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示數字十六進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">傳回代表數字十六進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示數字十六進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">傳回代表數字十六進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示數字十六進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">傳回代表數字十六進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示數字十六進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">傳回代表數字十六進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示數字十六進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">傳回代表數字十六進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示數字十六進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">傳回代表數字十六進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">表示數字十六進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Decimal" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Double" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Short" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Integer" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Long" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">必要項。 <see langword="Object" /> 類型的數字，或是任何有效的數值運算式。 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />，則會傳回 <see langword="Nothing" />。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">傳回數字的整數部分。</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">必要項。 <see langword="Single" /> 類型的數字，或是任何有效的數值運算式。</param>
      <returns vsli:raw="The integer portion of a number.">數字的整數部分。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">未指定 Number。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">傳回代表數值的八進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示數字八進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">傳回代表數值的八進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示數字八進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">傳回代表數值的八進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示數字八進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">傳回代表數值的八進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示數字八進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">傳回代表數值的八進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示數字八進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">傳回代表數值的八進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示數字八進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">傳回代表數值的八進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示數字八進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">傳回代表數值的八進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示數字八進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">傳回代表數值的八進位值的字串。</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的數值運算式或 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string representing the octal value of a number.">表示數字八進位值的字串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; representation of a number.">傳回數字的 <see langword="String" /> 表示。</summary>
      <param name="Number" vsli:raw="Required. An &lt;see langword=&quot;Object&quot; /&gt; containing any valid numeric expression.">必要項。 包含任何有效數值運算式的 <see langword="Object" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representation of a number.">數字的 <see langword="String" /> 表示。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">
        <paramref name="Number" /> 未指定。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> 不是數字類型 (Numeric Type)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">以適當類型的數值傳回包含在字串中的數字。</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必要項。 任何有效的 <see langword="String" /> 運算式、<see langword="Object" /> 變數或 <see langword="Char" /> 值。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，其值必須可轉換成 <see langword="String" />，否則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">以適當類型數值包含在字串中的數字。</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> 太大。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> 是 <see langword="Object" /> 類型運算式，無法轉換成 <see langword="String" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">以適當類型的數值傳回包含在字串中的數字。</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必要項。 任何有效的 <see langword="String" /> 運算式、<see langword="Object" /> 變數或 <see langword="Char" /> 值。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，其值必須可轉換成 <see langword="String" />，否則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">以適當類型數值包含在字串中的數字。</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> 太大。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> 是 <see langword="Object" /> 類型運算式，無法轉換成 <see langword="String" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">以適當類型的數值傳回包含在字串中的數字。</summary>
      <param name="InputStr" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必要項。 任何有效的 <see langword="String" /> 運算式、<see langword="Object" /> 變數或 <see langword="Char" /> 值。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，其值必須可轉換成 <see langword="String" />，否則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">以適當類型數值包含在字串中的數字。</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> 太大。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> 是 <see langword="Object" /> 類型運算式，無法轉換成 <see langword="String" />。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary vsli:raw="The &lt;see langword=&quot;DateAndTime&quot; /&gt; module contains the procedures and properties used in date and time operations.">
        <see langword="DateAndTime" /> 模組包含用於日期和時間作業的程序和屬性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">傳回包含日期和時間值，且已加入指定時間間隔的值。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">必要項。 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列舉值或字串運算式，表示您想要加入的時間間隔。</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. It can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">必要項。 浮點運算式，表示您想要加入的間隔數； 它可以是正數 (表示取得未來的日期/時間值)，也可以是負數 (表示取得過去的日期/時間值)。 當 <paramref name="Interval" /> 指定小時、分鐘或秒數時，它可以包含小數部分。 對於其他的 <paramref name="Interval" /> 值而言，會忽略 <paramref name="Number" /> 的任何小數部分。</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">必要項。 運算式，表示要在其中加入間隔的日期和時間； <paramref name="DateValue" /> 本身在呼叫程式中並不會變更。</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">包含日期和時間值，且已加入指定時間間隔的值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">無法將 <paramref name="DateValue" /> 強制為 <see langword="Date" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> 無效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">計算出的日期早於 1 年 1 月 1 日 00:00:00 或晚於 9999 年 12 月 31 日 23:59:59。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">傳回包含日期和時間值，且已加入指定時間間隔的值。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">必要項。 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列舉值或字串運算式，表示您想要加入的時間間隔。</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. &lt;paramref name=&quot;Number&quot; /&gt; can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">必要項。 浮點運算式，表示您想要加入的間隔數； <paramref name="Number" /> 可以是正數，表示取得未來的日期/時間值，也可以是負數，表示取得過去的日期/時間值。 當 <paramref name="Interval" /> 指定小時、分鐘或秒數時，它可以包含小數部分。 對於其他的 <paramref name="Interval" /> 值而言，會忽略 <paramref name="Number" /> 的任何小數部分。</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">必要項。 運算式，表示要在其中加入間隔的日期和時間； <paramref name="DateValue" /> 本身在呼叫程式中並不會變更。</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">包含日期和時間值，且已加入指定時間間隔的值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">無法將 <paramref name="DateValue" /> 強制為 <see langword="Date" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> 無效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">計算出的日期早於 1 年 1 月 1 日 00:00:00 或晚於 9999 年 12 月 31 日 23:59:59。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">傳回指定兩個 <see langword="Date" /> 值之間時間間隔數的 long 值。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">必要項。 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列舉值或字串運算式，表示您想要用作 <paramref name="Date1" /> 和 <paramref name="Date2" /> 之間差距單位的時間間隔。</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">必要項。 在計算中需要使用的第一個日期/時間值。</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">必要項。 在計算中需要使用的第二個日期/時間值。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">選擇性。 選自 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列舉類型的值，指定一週的第一天。 如果未指定，就會使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">選擇性。 選自 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列舉類型的值，指定一年的第一週。 如果未指定，就會使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">指定兩個 <see langword="Date" /> 值之間時間間隔數的 long 值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />、<paramref name="Date2" /> 或 <paramref name="DayofWeek" /> 超過範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> 或 <paramref name="Date2" /> 的類型無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">傳回指定兩個 <see langword="Date" /> 值之間時間間隔數的 long 值。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">必要項。 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列舉值或字串運算式，表示您想要用作 <paramref name="Date1" /> 和 <paramref name="Date2" /> 之間差距單位的時間間隔。</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">必要項。 在計算中需要使用的第一個日期/時間值。</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">必要項。 在計算中需要使用的第二個日期/時間值。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">選擇性。 選自 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列舉類型的值，指定一週的第一天。 如果未指定，就會使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">選擇性。 選自 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列舉類型的值，指定一年的第一週。 如果未指定，就會使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">指定兩個 <see langword="Date" /> 值之間時間間隔數的 long 值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />、<paramref name="Date2" /> 或 <paramref name="DayofWeek" /> 超過範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> 或 <paramref name="Date2" /> 的類型無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">傳回整數值，其中包含給定 <see langword="Date" /> 值的指定元件。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">必要項。 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列舉值或字串運算式，表示您想要傳回的日期/時間值部分。</param>
      <param name="DateValue" vsli:raw="Required. The &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">必要項。 您想要評估的 <see langword="Date" /> 值。</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">選擇性。 選自 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列舉類型的值，指定一週的第一天。 如果未指定，就會使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</param>
      <param name="FirstWeekOfYearValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">選擇性。 選自 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列舉類型的值，指定一年的第一週。 如果未指定，就會使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">整數值，其中包含給定 <see langword="Date" /> 值的指定元件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> 無效。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">無法將 <paramref name="DateValue" /> 強制為 <see langword="Date" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">傳回值，其中包含給定 <see langword="Date" /> 值的指定元件。</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">必要項。 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列舉值或字串運算式，表示您想要傳回的日期/時間值部分。</param>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">必要項。 您想要評估的 <see langword="Date" /> 值。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">選擇性。 選自 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列舉類型的值，指定一週的第一天。 如果未指定，就會使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">選擇性。 選自 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列舉類型的值，指定一年的第一週。 如果未指定，就會使用 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />。</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">整數值，其中包含給定 <see langword="Date" /> 值的指定元件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is invalid.">
        <paramref name="Interval" /> 無效。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">無法將 <paramref name="DateValue" /> 強制為 <see langword="Date" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing the specified year, month, and day, with the time information set to midnight (00:00:00).">傳回 <see langword="Date" /> 值，表示指定之年、月和日，且時間資訊設定為午夜 (00:00:00)。</summary>
      <param name="Year" vsli:raw="Required. Integer expression from 1 through 9999. However, values below this range are also accepted. If &lt;paramref name=&quot;Year&quot; /&gt; is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the &quot;Remarks&quot; section. If &lt;paramref name=&quot;Year&quot; /&gt; is less than 1, it is subtracted from the current year.">必要項。 從 1 到 9999 的整數運算式。 不過，也接受這個範圍以下的值。 如果 <paramref name="Year" /> 為 0 到 99，則它會解譯為 1930 和 2029 之間，如以下＜備註＞一節所說明。 如果 <paramref name="Year" /> 小於 1，則會從目前的年份中減去它。</param>
      <param name="Month" vsli:raw="Required. Integer expression from 1 through 12. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Month&quot; /&gt; is offset by 1 and applied to January of the calculated year. In other words, (&lt;paramref name=&quot;Month&quot; /&gt; - 1) is added to January. The year is recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 1, the result is January of the calculated year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 0, the result is December of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is -1, the result is November of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 13, the result is January of the following year.">必要項。 從 1 到 12 的整數運算式。 不過，也接受超過這個範圍的值。 <paramref name="Month" /> 的值會位移 1，且會套用到計算所得年份的一月。 換句話說，(<paramref name="Month" /> - 1) 會加入到一月。 必要時，會重新計算年份。 下列結果將說明這樣的作用： 
如果 <paramref name="Month" /> 為 1，則結果為計算所得年份的一月。  
如果 <paramref name="Month" /> 為 0，則結果為前一年度的十二月。  
如果 <paramref name="Month" /> 為 -1，則結果為前一年度的十一月。  
如果 <paramref name="Month" /> 為 13，則結果為下一年度的一月。</param>
      <param name="Day" vsli:raw="Required. Integer expression from 1 through 31. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Day&quot; /&gt; is offset by 1 and applied to the first day of the calculated month. In other words, (&lt;paramref name=&quot;Day&quot; /&gt; - 1) is added to the first of the month. The month and year are recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 1, the result is the first day of the calculated month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 0, the result is the last day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is -1, the result is the penultimate day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is past the end of the current month, the result is the appropriate day of the following month. For example, if &lt;paramref name=&quot;Month&quot; /&gt; is 4 and &lt;paramref name=&quot;Day&quot; /&gt; is 31, the result is May 1.">必要項。 從 1 到 31 的整數運算式。 不過，也接受超過這個範圍的值。 <paramref name="Day" /> 的值會位移 1，且會套用到計算所得月份的第一天。 換句話說，(<paramref name="Day" /> - 1) 會加入到此月份的第一天。 必要時，會重新計算月份和年份。 下列結果將說明這樣的作用： 
如果 <paramref name="Day" /> 為 1，則結果為計算所得月份的第一天。  
如果 <paramref name="Day" /> 為 0，則結果為上一月份的最後一天。  
如果 <paramref name="Day" /> 為 -1，則結果為上一月份的倒數第二天。  
如果 <paramref name="Day" /> 超過目前月份的結尾，則結果為下一月份的適當日。 例如，如果 <paramref name="Month" /> 是 4 且 <paramref name="Day" /> 為 31，結果會是 5 月 1 日。</param>
      <returns vsli:raw="A value that represents the specified year, month, and day, with the time information set to midnight (00:00:00).">
        <see langword="Date" /> 值，表示指定的年、月和日，且時間資訊設定為午夜 (00:00:00)。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary vsli:raw="Returns or sets a string value representing the current date according to your system.">傳回或設定字串值，表示您系統的目前日期。</summary>
      <returns vsli:raw="Returns or sets a string value representing the current date according to your system.">傳回或設定字串值，表示您系統的目前日期。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see cref=&quot;P:Microsoft.VisualBasic.DateAndTime.DateString&quot; /&gt;.">用來設定 <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" /> 值的格式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">傳回 <see langword="Date" /> 值，包含由字串表示的日期資訊，且其時間資訊設定為午夜 (00:00:00)。</summary>
      <param name="StringDate" vsli:raw="Required. string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">必要項。 字串運算式，表示從西元 1 年的 1 月 1 日 00:00:00 到西元 9999 年 12 月 31 日 23:59:59 之間的日期/時間值。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">
        <see langword="Date" /> 值，包含由字串表示的日期資訊，且其時間資訊設定為午夜 (00:00:00)。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringDate&quot; /&gt; includes invalid time information.">
        <paramref name="StringDate" /> 包含無效時間資訊。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 31 representing the day of the month.">傳回從 1 到 31 的整數值，表示當月日期。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the day.">必要項。 您想要從中擷取日期的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 1 through 31 representing the day of the month.">從 1 到 31 的整數值，表示當月日期。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 23 representing the hour of the day.">傳回從 0 到 23 的整數值，表示當日小時。</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the hour.">必要項。 您想要從中擷取小時的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 0 through 23 representing the hour of the day.">從 0 到 23 的整數值，表示當日小時。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the minute of the hour.">傳回從 0 到 59 的整數值，表示小時內的分鐘數。</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the minute.">必要項。 您想要從中擷取分鐘的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the minute of the hour.">從 0 到 59 的整數值，表示小時內的分鐘數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 12 representing the month of the year.">傳回從 1 到 12 的整數值，表示當年月份。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the month.">必要項。 您想要從中擷取月份的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 1 through 12 representing the month of the year.">從 1 到 12 的整數值，表示當年月份。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary vsli:raw="Returns a string value containing the name of the specified month.">傳回字串值，其中包含指定月份的名稱。</summary>
      <param name="Month" vsli:raw="Required. The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December. You can use the value 13 with a 13-month calendar. If your system is using a 12-month calendar and &lt;paramref name=&quot;Month&quot; /&gt; is 13, &lt;c&gt;MonthName&lt;/c&gt; returns an empty string.">必要項。 以 1 到 13 的數值指派月份，1 表示一月，12 表示十二月。 您也可以在有 13 個月的行事曆中使用 13 的值。 如果系統使用 12 個月份的行事曆，且 <paramref name="Month" /> 為 13，則 <c>MonthName</c> 會傳回空字串。</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;True&quot; /&gt; to abbreviate the month name; otherwise, &lt;see langword=&quot;False&quot; /&gt;. The default is &lt;see langword=&quot;False&quot; /&gt;.">選擇性。 若要縮寫月份名稱即為 <see langword="True" />；否則為 <see langword="False" />。 預設為 <see langword="False" />。</param>
      <returns vsli:raw="A string value containing the name of the specified month.">字串值，其中包含指定月份的名稱。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Month&quot; /&gt; is less than 1 or greater than 13.">
        <paramref name="Month" /> 小於 1 或大於 13。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary vsli:raw="Returns a value containing the current date and time according to your system.">根據您的系統，傳回包含目前日期和時間的值。</summary>
      <returns vsli:raw="The current date and time according to your system.">根據您系統的目前日期和時間。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the second of the minute.">傳回從 0 到 59 的整數值，表示分鐘內的秒數。</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the second.">必要項。 您想要從中擷取秒的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the second of the minute.">從 0 到 59 的整數值，表示分鐘內的秒數。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">根據您的系統，傳回或設定包含當天目前時間的 <see langword="Date" /> 值。</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">根據您的系統，傳回或設定包含當天目前時間的 <see langword="Date" /> 值。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value representing the number of seconds elapsed since midnight.">傳回表示從午夜後所經過秒數的 <see cref="T:System.Double" /> 值。</summary>
      <returns vsli:raw="A value representing the number of seconds elapsed since midnight.">值, 表示從午夜以來經過的秒數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">傳回 <see langword="Date" /> 值，表示指定之時、分和秒，且日期資訊設定為相對於西元 1 年的一月 1 日。</summary>
      <param name="Hour" vsli:raw="Required. Integer expression from 0 through 23. However, values outside this range are also accepted.">必要項。 從 0 到 23 的整數運算式。 不過，也接受超過這個範圍的值。</param>
      <param name="Minute" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Minute&quot; /&gt; is added to the calculated hour, so a negative value specifies minutes before that hour.">必要項。 從 0 到 59 的整數運算式。 不過，也接受超過這個範圍的值。 <paramref name="Minute" /> 的值會加入到計算所得的小時，因此負數的值會指定該小時之前的分鐘。</param>
      <param name="Second" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Second&quot; /&gt; is added to the calculated minute, so a negative value specifies seconds before that minute.">必要項。 從 0 到 59 的整數運算式。 不過，也接受超過這個範圍的值。 <paramref name="Second" /> 的值會加入到計算所得的分鐘，因此負數的值會指定該分鐘之前的秒鐘。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">
        <see langword="Date" /> 值，表示指定的時、分和秒，且日期資訊設定為相對於西元 1 年的 1 月 1 日。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is outside the range -2,147,483,648 through 2,147,483,647">引數超出 -2,147,483,648 至 2,147,483,647 的範圍。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated time is less than negative 24 hours.">計算出的時間小於負 24 小時。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary vsli:raw="Returns or sets a string value representing the current time of day according to your system.">傳回或設定字串值，表示您系統的目前當日時間。</summary>
      <returns vsli:raw="Returns or sets a string value representing the current time of day according to your system.">傳回或設定字串值，表示您系統的目前當日時間。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see langword=&quot;TimeString&quot; /&gt;.">用來設定 <see langword="TimeString" /> 值的格式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">傳回 <see langword="Date" /> 值，包含由字串表示的時間資訊，且其日期資訊設定為西元 1 年的一月 1 日。</summary>
      <param name="StringTime" vsli:raw="Required. A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">必要項。 字串運算式，表示從西元 1 年的 1 月 1 日 00:00:00 到西元 9999 年 12 月 31 日 23:59:59 之間的日期/時間值。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">
        <see langword="Date" /> 值，其中包含由字串表示的時間資訊，且其日期資訊設定為西元 1 年的 1 月 1 日。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringTime&quot; /&gt; includes invalid date information.">
        <paramref name="StringTime" /> 包含無效日期資訊。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">根據您的系統，傳回或設定包含目前日期的 <see langword="Date" /> 值。</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">根據您的系統，傳回或設定包含目前日期的 <see langword="Date" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns an integer value containing a number representing the day of the week.">傳回整數值，其中包含表示星期幾的數字。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value for which you want to determine the day of the week.">必要項。 您想用來判斷星期幾的 <see langword="Date" /> 值。</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">選擇性。 選自 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列舉類型的值，指定一週的第一天。 如果未指定，就會使用 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />。</param>
      <returns vsli:raw="An integer value containing a number representing the day of the week.">整數值，其中包含表示星期幾的數字。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;DayOfWeek&quot; /&gt; is less than 0 or more than 7.">
        <paramref name="DayOfWeek" /> 小於 0 或大於 7。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns a string value containing the name of the specified weekday.">傳回字串值，其中包含指定工作日的名稱。</summary>
      <param name="Weekday" vsli:raw="Required. Integer. The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week. The identities of the first and last days depend on the setting of &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt;.">必要項。 整數。 以 1 到 7 的數值指派週間日，1 表示一週的第一天，7 表示一週的最後一天。 第一天和最後一天的識別需視 <paramref name="FirstDayOfWeekValue" /> 的設定而定。</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates if the weekday name is to be abbreviated. If omitted, the default is &lt;see langword=&quot;False&quot; /&gt;, which means the weekday name is not abbreviated.">選擇性。 <see langword="Boolean" /> 值，表示是否要將週間日縮寫。 如果省略，則預設值為 <see langword="False" />，這表示不會將週間日縮寫。</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see langword=&quot;FirstDayOfWeek.System&quot; /&gt; is used.">選擇性。 選自 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列舉類型的值，指定一週的第一天。 如果未指定，就會使用 <see langword="FirstDayOfWeek.System" />。</param>
      <returns vsli:raw="A string value containing the name of the specified weekday.">字串值，其中包含指定工作日的名稱。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Weekday&quot; /&gt; is less than 1 or greater than 7, or &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt; is less than 0 or greater than 7.">
        <paramref name="Weekday" /> 小於 1 或大於 7，或 <paramref name="FirstDayOfWeekValue" /> 小於 0 或大於 7。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 9999 representing the year.">傳回從 1 到 9999 的整數值，表示年份。</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the year.">必要項。 您想要從中擷取年份的 <see langword="Date" /> 值。</param>
      <returns vsli:raw="An integer value from 1 through 9999 representing the year.">從 1 到 9999 的整數值，表示年份。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary vsli:raw="Indicates how to display dates when calling the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function.">指出在呼叫 <see langword="FormatDateTime" /> 函式時的日期顯示方式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary vsli:raw="For real numbers, displays a date and time. If the number has no fractional part, displays only a date. If the number has no integer part, displays time only. Date and time display is determined by your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGeneralDate&quot; /&gt;.">如果是真正的數字，則會顯示日期和時間。 如果此數字沒有小數部分，則只會顯示日期。 如果此數字沒有整數部分，則只會顯示時間。 日期和時間的顯示是由電腦的地區設定所決定。 這個成員相當於 Visual Basic 常數 <see langword="vbGeneralDate" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary vsli:raw="Displays a date using the long-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongDate&quot; /&gt;.">使用電腦地區設定中指定之完整日期格式來顯示日期。 這個成員相當於 Visual Basic 常數 <see langword="vbLongDate" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary vsli:raw="Displays a time using the long-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongTime&quot; /&gt;.">使用電腦地區設定中指定之完整時間格式來顯示時間。 這個成員相當於 Visual Basic 常數 <see langword="vbLongTime" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary vsli:raw="Displays a date using the short-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortDate&quot; /&gt;.">使用電腦地區設定中指定之簡短日期格式來顯示日期。 這個成員相當於 Visual Basic 常數 <see langword="vbShortDate" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary vsli:raw="Displays a time using the short-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortTime&quot; /&gt;.">使用電腦地區設定中指定之簡短時間格式來顯示時間。 這個成員相當於 Visual Basic 常數 <see langword="vbShortTime" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary vsli:raw="Indicates how to determine and format date intervals when calling date-related functions.">指示呼叫日期相關函式時，如何決定日期間隔並將其格式化。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary vsli:raw="Day of month (1 through 31)">月中的日 (1 到 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary vsli:raw="Day of year (1 through 366)">年中的日 (1 到 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary vsli:raw="Hour (0 through 23)">小時 (0 到 23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary vsli:raw="Minute (0 through 59)">分鐘 (0 到 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary vsli:raw="Month (1 through 12)">月份 (1 到 12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary vsli:raw="Quarter of year (1 through 4)">年中的季度 (1 到 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary vsli:raw="Second (0 through 59)">秒鐘 (0 到 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary vsli:raw="Day of week (1 through 7)">週中的日 (1 到 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary vsli:raw="Week of year (1 through 53)">年中的週 (1 到 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary vsli:raw="Year.">Year</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>提供用於播放音效的方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Audio" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>提供屬性，以從系統時鐘存取目前當地時間與國際標準時間 (相當於格林威治標準時間)。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Clock" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>取得 <see langword="Date" /> 物件，包含電腦上目前本機日期和時間，以 UTC (GMT) 時間表示。</summary>
      <returns>
        <see langword="Date" /> 物件，包含目前日期和時間，以 UTC (GMT) 時間表示。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>取得 <see langword="Date" /> 物件，包含這部電腦上目前本機日期和時間。</summary>
      <returns>
        <see langword="Date" /> 物件，包含目前本機日期和時間。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>取得電腦系統計時器的毫秒計數。</summary>
      <returns>
        <see langword="Integer" /> 包含電腦系統計時器的毫秒計數。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>提供的屬性，以操作電腦元件，例如音訊、時鐘、鍵盤、檔案系統等等。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Computer" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>取得物件，提供用於播放音效的屬性和方法。</summary>
      <returns>電腦的 <see langword="My.Computer.Audio" /> 物件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>取得物件，提供用於管理 [剪貼簿] 的方法。</summary>
      <returns>電腦的 <see langword="My.Computer.Clipboard" /> 物件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>取得物件，提供用於存取鍵盤目前狀態 (例如，目前按下的是哪個鍵) 的屬性，並提供將按鍵傳送至使用中視窗的方法。</summary>
      <returns>電腦的 <see langword="My.Computer.Keyboard" /> 物件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>取得物件，提供用於取得本機電腦上安裝之滑鼠格式和組態資訊的屬性。</summary>
      <returns>電腦的 <see langword="My.Computer.Mouse" /> 物件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>取得物件，提供用於存取電腦序列埠的屬性和方法。</summary>
      <returns>
        <see langword="My.Computer.Ports" /> 物件。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>提供屬性，以取得電腦的記憶體、已載入組件、名稱和作業系統的相關資訊。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>取得電腦可用實體記憶體的總量。</summary>
      <returns>
        <see langword="ULong" />，包含電腦可用實體記憶體的位元組數。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">應用程式無法取得記憶體狀態。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>取得電腦可用虛擬位址空間的總量。</summary>
      <returns>
        <see langword="ULong" />，包含電腦可用虛擬位址空間的位元組數。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">應用程式無法取得記憶體狀態。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>取得作業系統所安裝的目前 UI 文化特性。</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> 物件表示電腦上所安裝的 UI 文化特性。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>取得電腦作業系統的平台識別項。</summary>
      <returns>
        <see langword="String" />，包含電腦作業系統的平台識別項，從 <see cref="T:System.PlatformID" /> 列舉型別 (Enumeration) 的成員名稱中選擇。</returns>
      <exception cref="T:System.ExecutionEngineException">應用程式無法取得作業系統的平台資訊。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>取得電腦作業系統的版本。</summary>
      <returns>
        <see langword="String" />，包含目前作業系統的版本號碼。</returns>
      <exception cref="T:System.ExecutionEngineException">應用程式無法取得作業系統版本資訊。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>取得電腦實體記憶體的總量。</summary>
      <returns>
        <see langword="ULong" />，包含電腦實體記憶體的位元組數。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">應用程式無法取得記憶體狀態。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>取得電腦可用虛擬位址空間的總量。</summary>
      <returns>
        <see langword="ULong" />，包含電腦可用虛擬位址空間的位元組數。</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">應用程式無法取得記憶體狀態。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>提供屬性以存取鍵盤目前的狀態，例如目前已按下哪些按鍵，並提供方法將按鍵輸入傳送至使用中視窗。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>提供用於取得本機電腦上安裝之滑鼠格式和組態資訊的屬性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Mouse" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>提供用於與電腦所連接之網路互動的屬性、事件和方法。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Network" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>提供 <see langword="My.Application.NetworkAvailabilityChanged" /> 和 <see langword="My.Computer.Network.NetworkAvailabilityChanged" /> 事件的資料。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> 類別的新執行個體。</summary>
      <param name="networkAvailable">
        <see cref="T:System.Boolean" />，指出應用程式是否可以使用網路。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>取得值，指出應用程式是否可以使用網路。</summary>
      <returns>
        <see cref="T:System.Boolean" />，指出應用程式是否可以使用網路。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>提供屬性和方法，以存取電腦的序列連接埠。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Ports" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>提供的屬性，以操作電腦元件，例如音訊、時鐘、鍵盤、檔案系統等等。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>取得物件，提供用於從系統時鐘存取目前本機時間和全球定位時間 (Universal Coordinated Time) (相當於格林威治標準時間 (Greenwich Mean Time)) 的屬性。</summary>
      <returns>電腦的 <see langword="My.Computer.Clock" /> 物件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>取得物件，提供用於處理磁碟機、檔案和目錄的屬性和方法。</summary>
      <returns>電腦的 <see langword="My.Computer.FileSystem" /> 物件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>取得物件，提供用於取得電腦記憶體、已載入組件、名稱和作業系統之相關資訊的屬性。</summary>
      <returns>電腦的 <see langword="My.Computer.Info" /> 物件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>取得電腦名稱。</summary>
      <returns>
        <see langword="String" />，包含電腦的名稱。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>取得物件，提供用於與電腦所連接之網路互動的屬性和方法。</summary>
      <returns>電腦的 <see langword="My.Computer.Network" /> 物件。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>取得物件，提供用於管理登錄的屬性和方法。</summary>
      <returns>電腦的 <see langword="My.Computer.Registry" /> 物件。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary vsli:raw="Indicates when payments are due when calling financial methods.">指出呼叫帳務處理方法時的付款到期日。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary vsli:raw="Falls at the beginning of the date interval.">落在日期間隔的開頭</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary vsli:raw="Falls at the end of the date interval.">落在日期間隔的結尾</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary vsli:raw="The &lt;see langword=&quot;ErrObject&quot; /&gt; module contains properties and procedures used to identify and handle run-time errors using the &lt;see langword=&quot;Err&quot; /&gt; object.">
        <see langword="ErrObject" /> 模組包含了可利用 <see langword="Err" /> 物件識別及處理執行階段錯誤的屬性和程序。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary vsli:raw="Clears all property settings of the &lt;see langword=&quot;Err&quot; /&gt; object.">清除 <see langword="Err" /> 物件的所有屬性設定。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">傳回或設定 <see langword="String" /> 運算式，其中包含與錯誤有關聯的描述性字串。 讀取/寫入。</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">傳回或設定 <see langword="String" /> 運算式，其中包含與錯誤有關聯的描述性字串。 讀取/寫入。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary vsli:raw="Gets an integer indicating the line number of the last executed statement.">取得整數，指出最後執行之陳述式的行數。</summary>
      <returns vsli:raw="The line number of the last executed statement.">最後執行之語句的行號。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary vsli:raw="Returns the exception representing the error that occurred.">傳回例外狀況，表示所發生的錯誤。</summary>
      <returns vsli:raw="The exception representing the error that occurred.">例外狀況，表示所發生的錯誤。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary vsli:raw="Gets a system error code produced by a call to a dynamic-link library (DLL).">取得由動態連結程式庫 (DLL) 之呼叫所產生的系統錯誤碼。</summary>
      <returns vsli:raw="A system error code produced by a call to a dynamic-link library (DLL).">呼叫動態連結程式庫 (DLL) 所產生的系統錯誤碼。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">傳回或設定可指定錯誤的數值。 讀取/寫入。</summary>
      <returns vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">傳回或設定可指定錯誤的數值。 讀取/寫入。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is greater than 65535.">
        <paramref name="Number" /> 大於 65535。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary vsli:raw="Generates a run-time error; can be used instead of the &lt;see langword=&quot;Error&quot; /&gt; statement.">產生執行階段錯誤；可以用來取代 <see langword="Error" /> 陳述式。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt; integer that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors. When setting the &lt;see langword=&quot;Number&quot; /&gt; property to your own error code in a class module, you add your error code number to the &lt;see langword=&quot;vbObjectError&quot; /&gt; constant. For example, to generate the error number 513, assign &lt;c&gt;vbObjectError + 513&lt;/c&gt; to the &lt;see langword=&quot;Number&quot; /&gt; property.">必要項。 可識別錯誤本質的 <see langword="Long" /> 整數。 Visual Basic 的錯誤位於 0-65535 的範圍內；0-512 的範圍是保留給系統錯誤使用；513-65535 的範圍則是供使用者定義的錯誤使用。 將 <see langword="Number" /> 屬性設定為您在類別模組中的錯誤碼時，您可將錯誤代碼加入 <see langword="vbObjectError" /> 常數。 例如，若要產生錯誤號碼 513，請將 <c>vbObjectError + 513</c> 指派給 <see langword="Number" /> 屬性。</param>
      <param name="Source" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression naming the object or application that generated the error. When setting this property for an object, use the form &lt;c&gt;project&lt;/c&gt;.&lt;c&gt;class&lt;/c&gt;. If &lt;paramref name=&quot;Source&quot; /&gt; is not specified, the process ID of the current Visual Basic project is used.">選擇性。 <see langword="String" /> 運算式，可為產生錯誤的物件或應用程式命名。 為物件設定這個屬性時，請使用下列格式：<c>project</c>.<c>class</c>。 如果未指定 <paramref name="Source" />，則會使用目前 Visual Basic 專案的處理序 ID。</param>
      <param name="Description" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression describing the error. If unspecified, the value in the &lt;see langword=&quot;Number&quot; /&gt; property is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the &lt;see langword=&quot;Error&quot; /&gt; function is used as the &lt;see langword=&quot;Description&quot; /&gt; property. If there is no Visual Basic error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property, the &quot;Application-defined or object-defined error&quot; message is used.">選擇性。 描述錯誤的 <see langword="String" /> 運算式。 如果未指定，則會檢查 <see langword="Number" /> 屬性中的值。 如果它可以對應到 Visual Basic 執行階段錯誤碼，則 <see langword="Error" /> 函式將傳回的字串會當成 <see langword="Description" /> 屬性使用。 如果沒有任何 Visual Basic 錯誤對應到 <see langword="Number" /> 屬性，則會使用「應用程式定義或物件定義的錯誤」訊息。</param>
      <param name="HelpFile" vsli:raw="Optional. The fully qualified path to the Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.">選擇性。 可以找到與這個錯誤有關的說明檔之完整路徑。 如果未指定，則 Visual Basic 會使用 Visual Basic 說明檔的完整磁碟機、路徑和檔名。</param>
      <param name="HelpContext" vsli:raw="Optional. The context ID identifying a topic within &lt;paramref name=&quot;HelpFile&quot; /&gt; that provides help for the error. If omitted, the Visual Basic Help-file context ID for the error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property is used, if it exists.">選擇性。 可識別 <paramref name="HelpFile" /> 中提供之錯誤說明的主題代碼。 如果省略，則會使用對應到 <see langword="Number" /> 屬性的錯誤之 Visual Basic 說明檔主題代碼 (如果存在的話)。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary vsli:raw="Indicates the file attributes to use when calling file-access functions.">指出在呼叫檔案存取函式時所要使用的檔案屬性 (Attribute)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary vsli:raw="File has changed since last backup. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArchive&quot; /&gt;.">前次備份之後，檔案已經有了變更。 這個成員相當於 Visual Basic 常數 <see langword="vbArchive" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary vsli:raw="Directory or folder. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDirectory&quot; /&gt;.">目錄或資料夾。 這個成員相當於 Visual Basic 常數 <see langword="vbDirectory" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary vsli:raw="Hidden. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHidden&quot; /&gt;.">隱藏。 這個成員相當於 Visual Basic 常數 <see langword="vbHidden" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary vsli:raw="Normal (default for &lt;see langword=&quot;Dir&quot; /&gt; and &lt;see langword=&quot;SetAttr&quot; /&gt;). No special characteristics apply to this file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormal&quot; /&gt;.">一般 (<see langword="Dir" /> 和 <see langword="SetAttr" /> 的預設值)。 這個檔案不會套用任何特殊的特性。 這個成員相當於 Visual Basic 常數 <see langword="vbNormal" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary vsli:raw="Read only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbReadOnly&quot; /&gt;.">唯讀。 這個成員相當於 Visual Basic 常數 <see langword="vbReadOnly" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary vsli:raw="System file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystem&quot; /&gt;.">系統檔案。 這個成員相當於 Visual Basic 常數 <see langword="vbSystem" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary vsli:raw="Volume label. This attribute is not valid when used with &lt;see langword=&quot;SetAttr&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVolume&quot; /&gt;.">磁碟區標籤。 當這個屬性與 <see langword="SetAttr" /> 一起搭配使用時，它會是無效的。 這個成員相當於 Visual Basic 常數 <see langword="vbVolume" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories.">指定如果要刪除的目錄內包含檔案或目錄時，應該要如何處理。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary vsli:raw="Delete the contents of the directory along with the directory. Default.">刪除目錄及目錄的內容。 預設值：</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary vsli:raw="Throw an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; if the directory is not empty. The &lt;see langword=&quot;Data&quot; /&gt; property of the exception lists the file(s) that could not be deleted.">如果目錄不是空的，則擲回 <see cref="T:System.IO.IOException" />。 例外狀況的 <see langword="Data" /> 屬性會列出無法刪除的檔案。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary vsli:raw="Indicates whether text fields are delimited or fixed width.">指出文字欄位是分隔的欄位還是固定寬度的欄位。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary vsli:raw="Indicates that the fields are delimited.">表示欄位是分隔的欄位。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary vsli:raw="Indicates that the fields are fixed width.">表示欄位是固定寬度的欄位。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary vsli:raw="Provides properties and methods for working with drives, files, and directories.">提供屬性和方法，以處理磁碟機、檔案和目錄。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary vsli:raw="Combines two paths and returns a properly formatted path.">合併兩個路徑並傳回正確格式的路徑。</summary>
      <param name="baseDirectory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. First path to be combined.">
        <see langword="String" />. 要合併的第一個路徑。</param>
      <param name="relativePath" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Second path to be combined.">
        <see langword="String" />. 要合併的第二個路徑。</param>
      <returns vsli:raw="The combination of the specified paths.">指定之路徑的組合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;baseDirectory&quot; /&gt; or &lt;paramref name=&quot;relativePath&quot; /&gt; are malformed paths.">
        <paramref name="baseDirectory" /> 或 <paramref name="relativePath" /> 是格式不正確的路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">將目錄內容複製到另一個目錄。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">要複製的目錄。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">要複製目錄內容的目標位置。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">來源目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">來源路徑和目標路徑相同。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">作業是循環的。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">路徑中的資料夾名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">目的檔案存在，但無法存取它。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">將目錄內容複製到另一個目錄。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">要複製的目錄。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">要複製目錄內容的目標位置。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">來源目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">來源路徑和目標路徑相同。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">作業是循環的。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">路徑中的資料夾名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">目的檔案存在，但無法存取它。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> 設定為 <see langword="UIOption.AllDialogs" />，且使用者會取消作業，或是無法複製目錄中的一個或多個檔案。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">將目錄內容複製到另一個目錄。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">要複製的目錄。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">要複製目錄內容的目標位置。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">指定使用者在作業期間按一下 [取消] 時應該執行的動作。 預設為 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">來源目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">來源路徑和目標路徑相同。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">作業是循環的。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">路徑中的資料夾名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">目的檔案存在，但無法存取它。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> 設定為 <see langword="UIOption.AllDialogs" />，且使用者會取消作業，或是無法複製目錄中的一個或多個檔案。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">將目錄內容複製到另一個目錄。</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">要複製的目錄。</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">要複製目錄內容的目標位置。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">若要覆寫現有檔案，則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">來源目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">來源路徑和目標路徑相同。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">作業是循環的。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">路徑中的資料夾名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">目的檔案存在，但無法存取它。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary vsli:raw="Copies a file to a new location.">將檔案複製至新的位置。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">要複製的檔案。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">要在其中貼上複製檔案的位置</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> 包含路徑資訊。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the target directory with the same name is in use.">目標目錄中具有相同名稱的檔案正在使用中。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies a file to a new location.">將檔案複製至新的位置。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">要複製的檔案。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">要在其中貼上複製檔案的位置</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> 包含路徑資訊。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">目的檔存在且 <paramref name="overwrite" /> 設定為 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies a file to a new location.">將檔案複製至新的位置。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">要複製的檔案。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">要在其中貼上複製檔案的位置</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">指定使用者在作業期間按一下 [取消] 時應該執行的動作。 預設為 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> 包含路徑資訊。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">目的檔存在且 <paramref name="overwrite" /> 設定為 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;UICancelOption&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user has canceled the operation or an unspecified I/O error occurs.">
        <paramref name="UICancelOption" /> 設為 <see langword="ThrowException" />，而且使用者已取消作業或發生未指定的 I/O 錯誤。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies a file to a new location.">將檔案複製至新的位置。</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">要複製的檔案。</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">要在其中貼上複製檔案的位置</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing files should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">如果應該覆寫現有的檔案則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> 包含路徑資訊。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">目的檔存在且 <paramref name="overwrite" /> 設定為 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary vsli:raw="Creates a directory.">建立目錄。</summary>
      <param name="directory" vsli:raw="Name and location of the directory.">目錄的名稱和位置。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The directory name is malformed. For example, it contains illegal characters or is only white space.">目錄名稱的格式不正確。 例如，它包含不合法的字元或只是泛空白字元。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The directory name is too long.">目錄名稱太長。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name is only a colon (:).">目錄名稱只是冒號 (:)</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The parent directory of the directory to be created is read-only.">所要建立之目錄的父目錄是唯讀的。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to create the directory.">使用者沒有建立目錄的權限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary vsli:raw="Gets or sets the current directory.">取得或設定目前的目錄。</summary>
      <returns vsli:raw="The current directory for file I/O operations.">檔案 I/O 作業的目前目錄。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is not valid.">路徑無效。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary vsli:raw="Deletes a directory.">刪除目錄。</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">要刪除的目錄。</param>
      <param name="onDirectoryNotEmpty" vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories. Default is &lt;see langword=&quot;DeleteDirectoryOption.DeleteAllContents&quot; /&gt;.">指定如果要刪除的目錄內包含檔案或目錄時，應該要如何處理。 預設為 <see langword="DeleteDirectoryOption.DeleteAllContents" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">路徑是長度為零的字串、格式錯誤、只包含空白字元，或是包含無效的字元 (包括萬用字元 (Wildcard Character))。 路徑是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">目錄不存在，或此目錄為檔案。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">目錄或子目錄中的檔案正在使用中。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">目錄名稱包含冒號 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">使用者取消作業或無法刪除目錄。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a directory.">刪除目錄。</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">要刪除的目錄。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">指定已刪除的檔案是否要傳送至 [資源回收筒]。 預設為 <see langword="RecycleOption.DeletePermanently" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">路徑是長度為零的字串、格式錯誤、只包含空白字元，或是包含無效的字元 (包括萬用字元 (Wildcard Character))。 路徑是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">目錄不存在，或此目錄為檔案。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">目錄或子目錄中的檔案正在使用中。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">目錄名稱包含冒號 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">使用者取消作業或無法刪除目錄。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a directory.">刪除目錄。</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">要刪除的目錄。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">指定已刪除的檔案是否要傳送至 [資源回收筒]。 預設為 <see langword="RecycleOption.DeletePermanently" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether to throw an exception if the user clicks Cancel.">指定如果使用者按一下 [取消]，是否擲回例外狀況。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">路徑是長度為零的字串、格式錯誤、只包含空白字元，或是包含無效的字元 (包括萬用字元 (Wildcard Character))。 路徑是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">目錄不存在，或此目錄為檔案。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">目錄或子目錄中的檔案正在使用中。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">目錄名稱包含冒號 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">使用者取消作業或無法刪除目錄。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary vsli:raw="Deletes a file.">刪除檔案。</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">要刪除之檔案的檔名及路徑。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它在必須指定檔案的地方含有結尾的斜線，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">檔案正在使用中。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">使用者沒有刪除檔案的使用權限，或者檔案是唯讀的。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a file.">刪除檔案。</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">要刪除之檔案的檔名及路徑。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">已刪除的檔案是否要傳送至 [資源回收筒]。 預設為 <see langword="RecycleOption.DeletePermanently" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它在必須指定檔案的地方含有結尾的斜線，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">檔案正在使用中。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">使用者沒有刪除檔案的使用權限，或者檔案是唯讀的。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a file.">刪除檔案。</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">要刪除之檔案的檔名及路徑。</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">已刪除的檔案是否要傳送至 [資源回收筒]。 預設為 <see langword="RecycleOption.DeletePermanently" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">指定是否在使用者取消作業時擲回例外狀況。 預設為 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它在必須指定檔案的地方含有結尾的斜線，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">檔案正在使用中。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">使用者沒有刪除檔案的使用權限，或者檔案是唯讀的。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancelled the operation and &lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">使用者取消作業並且 <paramref name="onUserCancel" /> 設為 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified directory exists.">如果指定的目錄存在，則傳回 <see langword="True" />。</summary>
      <param name="directory" vsli:raw="Path of the directory.">目錄的路徑。</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the directory exists; otherwise &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the name and path of a file rather than a directory.">如果目錄存在則為 <see langword="True" />，否則為 <see langword="False" />。 如果參數代表檔案的名稱和路徑，而非目錄，則此方法也會傳回 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary vsli:raw="Returns a read-only collection of all available drive names.">傳回所有可用磁碟機名稱的唯讀集合。</summary>
      <returns vsli:raw="A read-only collection of all available drives as &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; objects.">所有可用磁碟機的唯讀集合，做為 <see cref="T:System.IO.DriveInfo" /> 物件。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified file exists.">如果指定的檔案存在，則傳回 <see langword="True" />。</summary>
      <param name="file" vsli:raw="Name and path of the file.">檔案的名稱和路徑。</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the file exists; otherwise this method returns &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the path of a directory rather than a file.">如果檔案存在，則傳回 <see langword="True" />，否則這個方法會傳回 <see langword="False" />。 如果參數代表目錄的路徑，而非檔案，則此方法也會傳回 <see langword="False" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name of the file ends with a backslash (\).">檔案名稱以反斜線 (\) 結尾。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">傳回唯讀的字串集合，表示含有指定文字的檔案名稱。</summary>
      <param name="directory" vsli:raw="The directory to be searched.">要搜尋的目錄。</param>
      <param name="containsText" vsli:raw="The search text.">搜尋的文字。</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">如果搜尋應該區分大小寫，則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="True" />。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">是否包含子資料夾。 預設為 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">包含指定文字的檔案名稱唯讀集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">因下列其中一項原因而導致路徑無效：它是長度為零的字串；它只包含空白字元；它包含無效的字元；或其為裝置路徑 (開頭為 <c>\.&lt;/code&gt;)。</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定的目錄指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">指定的目錄路徑包含冒號 (:) 或格式無效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">傳回唯讀的字串集合，表示含有指定文字的檔案名稱。</summary>
      <param name="directory" vsli:raw="The directory to be searched.">要搜尋的目錄。</param>
      <param name="containsText" vsli:raw="The search text.">搜尋的文字。</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">如果搜尋應該區分大小寫，則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="True" />。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">是否包含子資料夾。 預設為 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="fileWildcards" vsli:raw="Pattern to be matched.">要符合的模式。</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">包含指定文字的檔案名稱唯讀集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">因下列其中一項原因而導致路徑無效：它是長度為零的字串；它只包含空白字元；它包含無效的字元；或其為裝置路徑 (開頭為 <c>\.&lt;/code&gt;)。</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定的目錄指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">指定的目錄路徑包含冒號 (:) 或格式無效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">傳回字串的集合，表示目錄內子目錄的路徑名稱。</summary>
      <param name="directory" vsli:raw="Name and path of directory.">目錄的名稱和路徑。</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">在指定目錄內，子目錄路徑名稱的唯讀集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定的目錄指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">傳回字串的集合，表示目錄內子目錄的路徑名稱。</summary>
      <param name="directory" vsli:raw="Name and path of directory.">目錄的名稱和路徑。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">是否包含子資料夾。 預設為 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="wildcards" vsli:raw="Pattern to match names.">要符合名稱的模式。</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">在指定目錄內，子目錄路徑名稱的唯讀集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the specified wildcard characters is &lt;see langword=&quot;Nothing&quot; /&gt;, an empty string, or contains only spaces.">一個或多個指定的萬用字元 (Wildcard Character) 為 <see langword="Nothing" />、空字串，或只包含空格。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">指定的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">指定的目錄指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">傳回指定之路徑的 <see cref="T:System.IO.DirectoryInfo" /> 物件。</summary>
      <param name="directory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Path of directory.">
        <see langword="String" />. 目錄的路徑。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">指定之路徑的 <see cref="T:System.IO.DirectoryInfo" /> 物件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory path contains a colon (:) or is in an invalid format.">目錄路徑包含冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">傳回指定之磁碟機的 <see cref="T:System.IO.DriveInfo" /> 物件。</summary>
      <param name="drive" vsli:raw="Drive to be examined.">要檢查的磁碟機。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">指定之磁碟機的 <see cref="T:System.IO.DriveInfo" /> 物件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;drive&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="drive" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">傳回指定之檔案的 <see cref="T:System.IO.FileInfo" /> 物件。</summary>
      <param name="file" vsli:raw="Name and path of the file.">檔案的名稱和路徑。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">指定之檔案的 <see cref="T:System.IO.FileInfo" /> 物件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.">路徑名稱的格式不正確。 例如包含無效字元或只有泛空白字元。 檔案名稱具有斜線標記。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The path contains a colon in the middle of the string.">路徑在字串中間包含一個冒號。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path is too long.">路徑太長。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions.">使用者缺乏必要的使用權限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks ACL (access control list) access to the file.">使用者缺少對檔案的 ACL (存取控制清單) 存取。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">傳回唯讀的字串集合，而該字串集合表示目錄內檔案的名稱。</summary>
      <param name="directory" vsli:raw="Directory to be searched.">要搜尋的目錄。</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">所指定目錄中的唯讀檔案名稱集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">要搜尋的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> 指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">傳回唯讀的字串集合，而該字串集合表示目錄內檔案的名稱。</summary>
      <param name="directory" vsli:raw="Directory to be searched.">要搜尋的目錄。</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">是否包含子資料夾。 預設為 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="wildcards" vsli:raw="Pattern to be matched.">要符合的模式。</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">所指定目錄中的唯讀檔案名稱集合。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">要搜尋的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> 指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary vsli:raw="Parses the file name out of the path provided.">在提供的路徑之外剖析檔名。</summary>
      <param name="path" vsli:raw="Required. Path to be parsed. &lt;see langword=&quot;String&quot; /&gt;.">必要項。 要剖析的路徑。 <see langword="String" />.</param>
      <returns vsli:raw="The file name from the specified path.">來自指定路徑的檔名。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary vsli:raw="Returns the parent path of the provided path.">傳回提供之路徑的父路徑。</summary>
      <param name="path" vsli:raw="Path to be examined.">要檢查的路徑。</param>
      <returns vsli:raw="The parent path of the provided path.">所提供之路徑的父路徑。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Path does not have a parent path because it is a root path.">路徑沒有父路徑，因為它是根路徑。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary vsli:raw="Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.">在磁碟上以唯一命名方式建立零位元組的暫存檔案，然後傳回該檔案的完整路徑。</summary>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the full path of the temporary file.">
        <see langword="String" />，包含暫存檔案的完整路徑。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary vsli:raw="Moves a directory from one location to another.">將目錄從某個位置移至另一個位置。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">要移動的目錄其路徑。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">來源目錄要移往之目錄的路徑。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source is a root directory or The source path and the target path are the same.">來源是根目錄，或者來源路徑與目標路徑相同。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">作業是循環的。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a directory from one location to another.">將目錄從某個位置移至另一個位置。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">要移動的目錄其路徑。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">來源目錄要移往之目錄的路徑。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">目標目錄已經存在，而且 <paramref name="overwrite" /> 設定為 <see langword="False" />。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">作業是循環的。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a directory from one location to another.">將目錄從某個位置移至另一個位置。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">要移動的目錄其路徑。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">來源目錄要移往之目錄的路徑。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">指定是否在使用者取消作業時擲回例外狀況。 預設為 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt; and a subdirectory of the file cannot be copied.">
        <paramref name="onUserCancel" /> 設為 <see langword="ThrowException" />，且無法複製檔案的子目錄。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user cancels the operation, or the operation cannot be completed.">
        <paramref name="onUserCancel" /> 設定為 <see langword="ThrowException" />，而且使用者會取消作業，或是無法完成作業。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">作業是循環的。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a directory from one location to another.">將目錄從某個位置移至另一個位置。</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">要移動的目錄其路徑。</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">來源目錄要移往之目錄的路徑。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing directories should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">如果應該覆寫現有的目錄則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">目標目錄已經存在，而且 <paramref name="overwrite" /> 設定為 <see langword="False" />。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">作業是循環的。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary vsli:raw="Moves a file to a new location.">將檔案移至新的位置。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">要移動的檔案其路徑。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">要移入檔案之目錄的路徑。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a file to a new location.">將檔案移至新的位置。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">要移動的檔案其路徑。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">要移入檔案之目錄的路徑。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a file to a new location.">將檔案移至新的位置。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">要移動的檔案其路徑。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">要移入檔案之目錄的路徑。</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">指定是否在使用者取消作業時擲回例外狀況。 預設為 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and either the user has cancelled the operation or an unspecified I/O error occurs.">
        <paramref name="onUserCancel" /> 設定為 <see langword="ThrowException" />，而且使用者已取消作業或發生未指定的 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a file to a new location.">將檔案移至新的位置。</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">要移動的檔案其路徑。</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">要移入檔案之目錄的路徑。</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">若要覆寫現有檔案，則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object,  which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">
        <see langword="OpenTextFieldParser" /> 方法能讓您建立 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物牛，而這個物件有助於輕鬆有效率地剖析結構化文字檔 (例如記錄檔)。 可以使用 <see langword="TextFieldParser" /> 物件，讀取分隔的和固定寬度的檔案。</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">要使用 <see langword="TextFieldParser" /> 開啟的檔案。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />，會讀取指定的檔案。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">無法使用指定的格式剖析資料列。 例外狀況訊息指出造成例外狀況的文字行，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 屬性被指派至包含於該文字行中的文字。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">
        <see langword="OpenTextFieldParser" /> 方法能讓您建立 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物牛，而這個物件有助於輕鬆有效率地剖析結構化文字檔 (例如記錄檔)。 可以使用 <see langword="TextFieldParser" /> 物件，讀取分隔的和固定寬度的檔案。</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">要使用 <see langword="TextFieldParser" /> 開啟的檔案。</param>
      <param name="fieldWidths" vsli:raw="Widths of the fields.">欄位的寬度。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />，會讀取指定的檔案。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">無法使用指定的格式剖析資料列。 例外狀況訊息指出造成例外狀況的文字行，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 屬性被指派至包含於該文字行中的文字。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">
        <see langword="OpenTextFieldParser" /> 方法能讓您建立 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物牛，而這個物件有助於輕鬆有效率地剖析結構化文字檔 (例如記錄檔)。 可以使用 <see langword="TextFieldParser" /> 物件，讀取分隔的和固定寬度的檔案。</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">要使用 <see langword="TextFieldParser" /> 開啟的檔案。</param>
      <param name="delimiters" vsli:raw="Delimiters for the fields.">欄位的分隔符號。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />，會讀取指定的檔案。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">無法使用指定的格式剖析資料列。 例外狀況訊息指出造成例外狀況的文字行，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 屬性被指派至包含於該文字行中的文字。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">開啟 <see cref="T:System.IO.StreamReader" /> 物件，以便從檔案讀取。</summary>
      <param name="file" vsli:raw="File to be read.">要讀取的檔案。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">會讀取檔案的 <see cref="T:System.IO.StreamReader" /> 物件</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">檔案名稱以反斜線 (\) 結尾。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">找不到指定的檔案。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">使用者缺乏讀取檔案的必要使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">開啟 <see cref="T:System.IO.StreamReader" /> 物件，以便從檔案讀取。</summary>
      <param name="file" vsli:raw="File to be read.">要讀取的檔案。</param>
      <param name="encoding" vsli:raw="The encoding to use for the file contents. Default is ASCII.">要用於檔案內容的編碼方式。 預設為 ASCII。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">會讀取檔案的 <see cref="T:System.IO.StreamReader" /> 物件</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">檔案名稱以反斜線 (\) 結尾。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">找不到指定的檔案。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">使用者缺乏讀取檔案的必要使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">開啟 <see cref="T:System.IO.StreamWriter" /> 物件，以便寫入指定的檔案。</summary>
      <param name="file" vsli:raw="File to be written to.">要寫入的檔案。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> 表示要將內容附加到檔案，<see langword="False" /> 表示要覆寫檔案的內容。 預設為 <see langword="False" />。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">要寫入到指定檔案的 <see cref="T:System.IO.StreamWriter" /> 物件。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">檔案名稱以斜線結束。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; to write to the specified file.">開啟 <see cref="T:System.IO.StreamWriter" />，以便寫入指定的檔案。</summary>
      <param name="file" vsli:raw="File to be written to.">要寫入的檔案。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents in the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> 表示要附加至檔案內容，<see langword="False" /> 表示要覆寫檔案內容。 預設為 <see langword="False" />。</param>
      <param name="encoding" vsli:raw="Encoding to be used in writing to the file. Default is ASCII.">寫入檔案時使用的編碼方式。 預設為 ASCII。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">要寫入到指定檔案的 <see cref="T:System.IO.StreamWriter" /> 物件。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">檔案名稱以斜線結束。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary vsli:raw="Returns the contents of a file as a byte array.">以位元組陣列傳回檔案內容。</summary>
      <param name="file" vsli:raw="File to be read.">要讀取的檔案。</param>
      <returns vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt; array containing the contents of the file.">
        <see langword="Byte" /> 陣列，其中包含檔案內容。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">以 <see langword="String" /> 傳回文字檔內容。</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">要讀取之檔案的名稱和路徑。</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">
        <see langword="String" />，其中包含檔案內容。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">以 <see langword="String" /> 傳回文字檔內容。</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">要讀取之檔案的名稱和路徑。</param>
      <param name="encoding" vsli:raw="Character encoding to use in reading the file. Default is UTF-8.">讀取檔案時使用的字元編碼方式。 預設為 UTF-8。</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">
        <see langword="String" />，其中包含檔案內容。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary vsli:raw="Renames a directory.">重新命名目錄。</summary>
      <param name="directory" vsli:raw="Path and name of directory to be renamed.">要重新命名的目錄路徑和名稱。</param>
      <param name="newName" vsli:raw="New name for directory.">目錄的新名稱。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information.">
        <paramref name="newName" /> 包含路徑資訊。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> 為 <see langword="Nothing" />。  
-或- 
 <paramref name="newName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">已存在 <paramref name="newName" /> 中所指定之名稱的檔案或目錄。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary vsli:raw="Renames a file.">重新命名檔案。</summary>
      <param name="file" vsli:raw="File to be renamed.">要重新命名的檔案。</param>
      <param name="newName" vsli:raw="New name of file.">檔案的新名稱。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information or ends with a backslash (\).">
        <paramref name="newName" /> 包含路徑資訊，或以反斜線 (\) 結尾。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> 為 <see langword="Nothing" />。  
-或- 
 <paramref name="newName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The directory does not exist.">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">已存在 <paramref name="newName" /> 中所指定之名稱的檔案或目錄。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary vsli:raw="Writes data to a binary file.">將資料寫入二進位檔案。</summary>
      <param name="file" vsli:raw="Path and name of the file to be written to.">要將資料寫入其中的檔案其路徑和檔名。</param>
      <param name="data" vsli:raw="Data to be written to the file.">要寫入檔案的資料。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the file contents; &lt;see langword=&quot;False&quot; /&gt; to overwrite the file contents. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> 表示要附加至檔案內容，<see langword="False" /> 表示要覆寫檔案內容。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes text to a file.">將文字寫入檔案。</summary>
      <param name="file" vsli:raw="File to be written to.">要寫入的檔案。</param>
      <param name="text" vsli:raw="Text to be written to file.">要寫入檔案的文字。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">
        <see langword="True" /> 表示要將內容附加到檔案，<see langword="False" /> 表示要覆寫檔案的內容。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Writes text to a file.">將文字寫入檔案。</summary>
      <param name="file" vsli:raw="File to be written to.">要寫入的檔案。</param>
      <param name="text" vsli:raw="Text to be written to file.">要寫入檔案的文字。</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">
        <see langword="True" /> 表示要將內容附加到檔案，<see langword="False" /> 表示要覆寫檔案的內容。</param>
      <param name="encoding" vsli:raw="What encoding to use when writing to file.">寫入檔案時要使用的編碼方式。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary vsli:raw="The exception that is thrown when the &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields&quot; /&gt; method cannot parse a row using the specified format.">當 <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> 方法無法使用指定的格式剖析資料列時擲回的例外狀況。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class.">初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with serialized data.">使用序列化資料，初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，包含有關擲回之例外狀況的序列化物件資料。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 結構，包含關於來源或目的端的內容資訊。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message.">使用指定的錯誤訊息，初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A message that describes the error.">描述錯誤的訊息。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; describing the error.">描述錯誤的 <see cref="T:System.String" />。</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">導致目前例外狀況的 <see cref="T:System.Exception" /> 物件。 如果 <see cref="P:System.Exception.InnerException" /> 參數不是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，則會在處理內部例外的 catch 區塊中引發目前的例外狀況。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a line number.">使用指定的錯誤訊息和行號，初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The message for the exception.">例外狀況 (Exception) 的訊息。</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">錯誤行的行號。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message, a line number, and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息、行號和造成這個例外狀況原因的內部例外參考，初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The message for the exception.">例外狀況 (Exception) 的訊息。</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">錯誤行的行號。</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">導致目前例外狀況的 <see cref="T:System.Exception" />。 如果 <see cref="P:System.Exception.InnerException" /> 參數不是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，則會在處理內部例外的 catch 區塊中引發目前的例外狀況。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with information about the exception.">使用與例外狀況相關的資訊來設定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，包含有關擲回之例外狀況的序列化物件資料。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 結構，包含關於來源或目的端的內容資訊。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary vsli:raw="Gets the line number of the malformed line.">取得錯誤行的行號。</summary>
      <returns vsli:raw="The line number of the malformed line.">錯誤行的行號。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary vsli:raw="Creates and returns a string representation of the current exception.">建立並傳回目前例外狀況的字串表示。</summary>
      <returns vsli:raw="A string representation of the current exception.">目前例外狀況的字串表示。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary vsli:raw="Specifies whether a file should be deleted permanently or placed in the Recycle Bin.">指定檔案要永久刪除或放在 [資源回收筒] 中。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary vsli:raw="Delete the file or directory permanently. Default.">永久刪除檔案或目錄。 預設值：</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary vsli:raw="Send the file or directory to the Recycle Bin.">將檔案或目錄傳送至 [資源回收筒]。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary vsli:raw="Specifies whether to search all or only top-level directories.">指定是否要搜尋全部或僅搜尋最上層目錄。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary vsli:raw="Search the specified directory and all subdirectories within it. Default.">搜尋指定目錄以及其中的所有子目錄。 預設值：</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary vsli:raw="Search only the specified directory and exclude subdirectories.">只搜尋指定目錄，排除子目錄。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary vsli:raw="Provides properties for accessing commonly referenced directories.">提供屬性，以存取常用的參考目錄。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories&quot; /&gt; class.">傳回 <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" /> 類別的執行個體。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the all users.">取得路徑名稱，該路徑指向所有使用者的 Application Data 目錄。</summary>
      <returns vsli:raw="The path to the Application Data directory for the all users.">所有使用者的 Application Data 目錄路徑。</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission" vsli:raw="Controls access to system and user environment variables. Associated enumeration: &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;.">控制系統和使用者環境變數的存取。 關聯的列舉型別：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the current user.">取得路徑名稱，該路徑指向目前使用者的 Application Data 目錄。</summary>
      <returns vsli:raw="The path to the Application Data directory for the current user.">目前使用者的 Application Data 目錄路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary vsli:raw="Gets a path name pointing to the Desktop directory.">取得路徑名稱，該路徑指向 Desktop 目錄。</summary>
      <returns vsli:raw="The path to the Desktop directory.">Desktop 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary vsli:raw="Gets a path name pointing to the My Documents directory.">取得指向 [我的文件] 目錄的路徑名稱。</summary>
      <returns vsli:raw="The path to the My Documents directory.">[我的文件] 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary vsli:raw="Gets a path name pointing to the My Music directory.">取得路徑名稱，該路徑指向 My Music 目錄。</summary>
      <returns vsli:raw="The path to the My Music directory.">[我的音樂] 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary vsli:raw="Gets a path name pointing to the My Pictures directory.">取得路徑名稱，該路徑指向 My Pictures 目錄。</summary>
      <returns vsli:raw="The path to the My Pictures directory.">[我的圖片] 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary vsli:raw="Gets a path pointing to the Program Files directory.">取得指向 Program Files 目錄的路徑。</summary>
      <returns vsli:raw="The path to the Program Files directory.">Program Files目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary vsli:raw="Gets a path name pointing to the Programs directory.">取得路徑名稱，該路徑指向 Programs 目錄。</summary>
      <returns vsli:raw="The path to the Programs directory.">Programs 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary vsli:raw="Gets a path name pointing to the Temp directory.">取得路徑名稱，該路徑指向 Temp 目錄。</summary>
      <returns vsli:raw="The path to the Temp directory.">Temp 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary vsli:raw="Provides methods and properties for parsing structured text files.">提供用於剖析結構化文字檔的方法和屬性。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. 要剖析的資料流。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">無法從 <paramref name="stream" /> 讀取。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. 要剖析的資料流。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. 如果編碼不是從檔案中決定，則為要使用的字元編碼。 預設為 <see cref="P:System.Text.Encoding.UTF8" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">無法從 <paramref name="stream" /> 讀取。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. 要剖析的資料流。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. 如果編碼不是從檔案中決定，則為要使用的字元編碼。 預設為 <see cref="P:System.Text.Encoding.UTF8" />。</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. 表示是否在檔案開頭尋找位元組順序標記。 預設為 <see langword="True" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">無法從 <paramref name="stream" /> 讀取。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. 要剖析的資料流。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. 如果編碼不是從檔案中決定，則為要使用的字元編碼。 預設為 <see cref="P:System.Text.Encoding.UTF8" />。</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. 表示是否在檔案開頭尋找位元組順序標記。 預設為 <see langword="True" />。</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to leave &lt;paramref name=&quot;stream&quot; /&gt; open when the &lt;see langword=&quot;TextFieldParser&quot; /&gt; object is closed. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" />. 指出是否在 <see langword="TextFieldParser" /> 物件關閉時保持 <paramref name="stream" /> 開啟。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">無法從 <paramref name="stream" /> 讀取。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</summary>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;. The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; stream to be parsed.">
        <see cref="T:System.IO.TextReader" />. 要進行剖析的 <see cref="T:System.IO.TextReader" /> 資料流。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="reader" /> 為 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. 要進行剖析的完整檔案路徑。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string.">
        <paramref name="path" /> 為空字串。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. 要進行剖析的完整檔案路徑。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. 如果編碼不是從檔案中決定，則為要使用的字元編碼。 預設為 <see cref="P:System.Text.Encoding.UTF8" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> 為空字串，或 <paramref name="defaultEncoding" /> 為 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. 要進行剖析的完整檔案路徑。</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. 如果編碼不是從檔案中決定，則為要使用的字元編碼。 預設為 <see cref="P:System.Text.Encoding.UTF8" />。</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. 表示是否在檔案開頭尋找位元組順序標記。 預設為 <see langword="True" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> 為空字串，或 <paramref name="defaultEncoding" /> 為 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary vsli:raw="Closes the current &lt;see langword=&quot;TextFieldParser&quot; /&gt; object.">關閉目前的 <see langword="TextFieldParser" /> 物件。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary vsli:raw="Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.">定義註解語彙基元 (Token)。 註解語彙基元是一個字串，當置於一行的開頭時，表示該行為註解，剖析器 (Parser) 應當忽略。</summary>
      <returns vsli:raw="A string array that contains all of the comment tokens for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">字串陣列，其中包含 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件的所有註解語彙基元。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A comment token includes white space.">註解語彙基元包含空白字元。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary vsli:raw="Defines the delimiters for a text file.">定義文字檔的分隔符號。</summary>
      <returns vsli:raw="A string array that contains all of the field delimiters for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">字串陣列，其中包含 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件的所有欄位分隔符號。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter value is set to a newline character, an empty string, or &lt;see langword=&quot;Nothing&quot; /&gt;.">設定為新行字元、空字串或 <see langword="Nothing" /> 的分隔符號值。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary vsli:raw="Releases resources used by the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">釋放由 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件使用的資源。</summary>
      <param name="disposing" vsli:raw="Boolean. &lt;see langword=&quot;True&quot; /&gt; releases both managed and unmanaged resources; &lt;see langword=&quot;False&quot; /&gt; releases only unmanaged resources.">布林值。 <see langword="True" /> 表示同時釋放 Managed 和 Unmanaged 資源，<see langword="False" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if there are no non-blank, non-comment lines between the current cursor position and the end of the file.">如果目前的游標位置和檔案結尾之間沒有非空白的非註解行，則會傳回 <see langword="True" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if there is no more data to read; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果沒有任何資料可供讀取則為 <see langword="True" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary vsli:raw="Returns the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">傳回造成最新 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外狀況的行。</summary>
      <returns vsli:raw="The line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">行，其造成最近的 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外狀況。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary vsli:raw="Returns the number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">傳回造成最新 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外狀況的行號。</summary>
      <returns vsli:raw="The number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">造成最近 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外狀況之行的號碼。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary vsli:raw="Denotes the width of each column in the text file being parsed.">代表正在剖析文字檔中每一個資料行的寬度。</summary>
      <returns vsli:raw="An integer array that contains the width of each column in the text file that is being parsed.">整數陣列，其中包含正在剖析之文字檔中每一個資料行的寬度。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A width value in any location other than the last entry of the array is less than or equal to zero.">任何位置 (除了陣列的最後一個項目以外) 中的寬度值會小於或等於零。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.">在記憶體回收 (GC) 回收 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件前，允許其嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary vsli:raw="Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.">代表分隔的檔案進行剖析時，欄位是否加上引號。</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if fields are enclosed in quotation marks; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果欄位要以引號括住則為 <see langword="True" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary vsli:raw="Returns the current line number, or returns -1 if no more characters are available in the stream.">傳回目前的行號，如果資料流中已沒有可用的字元，則會傳回 -1。</summary>
      <returns vsli:raw="The current line number.">目前的行號。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary vsli:raw="Reads the specified number of characters without advancing the cursor.">讀取指定數目的字元而不使游標前進。</summary>
      <param name="numberOfChars" vsli:raw="The number of characters to read. Required.">
        <see langword="Int32" />. 要讀取的字元數。 必要項。</param>
      <returns vsli:raw="A string that contains the specified number of characters read.">字串，包含指定的已讀取字元數。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;numberOfChars&quot; /&gt; is less than 0.">
        <paramref name="numberOfChars" /> 小於 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary vsli:raw="Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.">讀取目前行上的所有欄位，將它們傳回為字串陣列，並將游標前進至包含資料的下一行。</summary>
      <returns vsli:raw="An array of strings that contains field values for the current line.">字串陣列，包含目前行的欄位值。</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A field cannot be parsed by using the specified format.">欄位無法使用指定的格式進行剖析。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary vsli:raw="Returns the current line as a string and advances the cursor to the next line.">將目前的行以字串傳回，並將游標前進至下一行。</summary>
      <returns vsli:raw="The current line from the file or stream.">取自檔案或資料流的目前行。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary vsli:raw="Reads the remainder of the text file and returns it as a string.">讀取文字檔的其餘部分，並將其以字串傳回。</summary>
      <returns vsli:raw="The remaining text from the file or stream.">取自檔案或資料流的其餘文字。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values, and sets the field type to &lt;see langword=&quot;Delimited&quot; /&gt;.">將讀取器 (Reader) 的分隔符號設為指定的值，並將欄位型別 (Field Type) 設為 <see langword="Delimited" />。</summary>
      <param name="delimiters" vsli:raw="Array of type &lt;see langword=&quot;String&quot; /&gt;.">型別 <see langword="String" /> 的陣列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter is zero-length.">分隔符號長度為零。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values.">將讀取器 (Reader) 的分隔符號設定為指定的值。</summary>
      <param name="fieldWidths" vsli:raw="Array of &lt;see langword=&quot;Integer&quot; /&gt;.">
        <see langword="Integer" /> 的陣列。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>釋放由 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件使用的資源。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary vsli:raw="Indicates whether the file to be parsed is delimited or fixed-width.">指出剖析的檔案是分隔的檔案，還是固定寬度的檔案。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType&quot; /&gt; value that indicates whether the file to be parsed is delimited or fixed-width.">
        <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> 值，指出要剖析的檔案是分隔的檔案，還是固定寬度的檔案。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary vsli:raw="Indicates whether leading and trailing white space should be trimmed from field values.">指出是否應當去除欄位值中前置和結尾的空白字元。</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if leading and trailing white space should be trimmed from field values; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">如果應去除欄位值的前置和結尾空白字元則為 <see langword="True" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary vsli:raw="Specifies whether an exception is thrown if the user clicks Cancel during an operation.">指定如果使用者在作業期間按一下 [取消]，是否要擲回例外狀況。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary vsli:raw="Do nothing when the user clicks Cancel.">當使用者按一下 [取消] 時不執行任何動作。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary vsli:raw="Throw an exception when the user clicks Cancel.">當使用者按一下 [取消] 時擲回例外狀況。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary vsli:raw="Specifies which dialog boxes to show when copying, deleting, or moving files or directories.">指定在複製、刪除或移動檔案或目錄時，要顯示哪些對話方塊。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary vsli:raw="Show progress dialog box and any error dialog boxes.">顯示進度對話方塊和任何錯誤對話方塊。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary vsli:raw="Only show error dialog boxes and hide progress dialog boxes. Default.">只顯示錯誤對話方塊，隱藏進度對話方塊。 預設值：</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary vsli:raw="The &lt;see langword=&quot;FileSystem&quot; /&gt; module contains the procedures that are used to perform file, directory or folder, and system operations. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than using the &lt;see langword=&quot;FileSystem&quot; /&gt; module. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">
        <see langword="FileSystem" /> 模組包含用於執行檔案、目錄或資料夾及系統等作業的程序。 <see langword="My" /> 功能提供比使用 <see langword="FileSystem" /> 模組更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary vsli:raw="Changes the current directory or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;ChDir&quot; /&gt; function. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt; .">變更目前的目錄或資料夾。 <see langword="My" /> 功能提供了比 <see langword="ChDir" /> 函式更強大的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱<see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />。</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies which directory or folder becomes the new default directory or folder. &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;ChDir&quot; /&gt; changes the default directory or folder on the current drive.">必要項。 字串運算式，用來識別要成為新預設目錄或資料夾的目錄或資料夾。 <paramref name="Path" /> 可包括磁碟機。 如果未指定磁碟機，則 <see langword="ChDir" /> 會變更目前磁碟機上的預設目錄或資料夾。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is empty.">
        <paramref name="Path" /> 是空的。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Invalid drive is specified, or drive is unavailable.">指定的磁碟無效，或磁碟無法使用。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary vsli:raw="Changes the current drive.">變更目前的磁碟機。</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">必要項。 指定現有磁碟機的字串運算式。 如果您提供長度為零的字串 ("")，則目前的磁碟機將不會變更。 如果 <paramref name="Drive" /> 引數是多個字元的字串，則 <see langword="ChDrive" /> 僅會使用第一個字母。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">指定的磁碟無效，或磁碟無法使用。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary vsli:raw="Changes the current drive.">變更目前的磁碟機。</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">必要項。 指定現有磁碟機的字串運算式。 如果您提供長度為零的字串 ("")，則目前的磁碟機將不會變更。 如果 <paramref name="Drive" /> 引數是多個字元的字串，則 <see langword="ChDrive" /> 僅會使用第一個字母。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">指定的磁碟無效，或磁碟無法使用。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">傳回表示目前路徑的字串。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 提供比 <see langword="CurDir" /> 更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱<see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />。</summary>
      <returns vsli:raw="A string representing the current path.">表示目前路徑的字串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">傳回表示目前路徑的字串。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 提供比 <see langword="CurDir" /> 更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱<see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />。</summary>
      <param name="Drive" vsli:raw="Optional. &lt;see langword=&quot;Char&quot; /&gt; expression that specifies an existing drive. If no drive is specified, or if &lt;paramref name=&quot;Drive&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;CurDir&quot; /&gt; returns the path for the current drive.">選擇性。 指定現有磁碟機的 <see langword="Char" /> 運算式。 如果未指定磁碟機，或 <paramref name="Drive" /> 是長度為零的字串 ("")，則 <see langword="CurDir" /> 會傳回目前磁碟機的路徑。</param>
      <returns vsli:raw="A string representing the current path.">表示目前路徑的字串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">傳回的字串表示符合指定模式或檔案屬性的檔案、目錄或資料夾的名稱，也可以是磁碟機的磁碟區標籤。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 提供比 <see langword="Dir" /> 函式更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />。</summary>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">表示檔案、目錄或資料夾名稱的字串，該字串符合指定的模式或檔案屬性 (Attribute)，也可以是磁碟機的磁碟區標籤 (Label)。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">傳回的字串表示符合指定模式或檔案屬性的檔案、目錄或資料夾的名稱，也可以是磁碟機的磁碟區標籤。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 提供比 <see langword="Dir" /> 函式更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />。</summary>
      <param name="PathName" vsli:raw="Optional. A string expression that specifies a file name, directory or folder name, or drive volume label. A zero-length string (&lt;see langword=&quot;&amp;quot;&amp;quot;&quot; /&gt;) is returned if &lt;paramref name=&quot;PathName&quot; /&gt; is not found.">選擇性。 字串運算式，可指定檔名、目錄或資料夾名稱或磁碟機的磁碟區標籤。 如果找不到 <paramref name="PathName" />，則會傳回長度為零的字串 (<see langword="&quot;&quot;" />)。</param>
      <param name="Attributes" vsli:raw="Optional. Enumeration or numeric expression whose value specifies file attributes. If omitted, &lt;see langword=&quot;Dir&quot; /&gt; returns files that match &lt;paramref name=&quot;Pathname&quot; /&gt; but have no attributes.">選擇性。 列舉類型或數值運算式，其值可指定檔案屬性。 如果省略，則 <see langword="Dir" /> 會傳回符合 <paramref name="Pathname" /> 的檔案，但是沒有屬性。</param>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">表示檔案、目錄或資料夾名稱的字串，該字串符合指定的模式或檔案屬性 (Attribute)，也可以是磁碟機的磁碟區標籤 (Label)。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary vsli:raw="Returns a Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">當已經到達為 <see langword="True" /> 或循序 <see langword="Random" /> 開啟的檔案之結尾時，傳回布林值 (Boolean) <see langword="Input" />。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains any valid file number.">必要項。 包含任何有效檔案編號的 <see langword="Integer" />。</param>
      <returns vsli:raw="A Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">當已經到達為 <see langword="True" /> 或循序 <see langword="Random" /> 開啟的檔案之結尾時，為布林值 <see langword="Input" />。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary vsli:raw="Returns an enumeration representing the file mode for files opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;FileAttr&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt; for more information.">傳回列舉類型，表示使用 <see langword="FileOpen" /> 函式開啟的檔案之檔案模式。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 提供比 <see langword="FileAttr" /> 函式更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />。</summary>
      <param name="FileNumber" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Any valid file number.">必要項。 <see langword="Integer" />. 任何有效的檔案數目。</param>
      <returns vsli:raw="One of the following values:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Value&lt;/term&gt;&lt;description&gt;File access mode&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;1&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Input&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;2&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Output&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;4&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Random&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;8&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Append&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;32&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Binary&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">下列列舉類型值表示檔案存取模式： 
  值 
  模式 
  1 
 <see langword="OpenMode.Input" /> 2 
 <see langword="OpenMode.Output" /> 4 
 <see langword="OpenMode.Random" /> 8 
 <see langword="OpenMode.Append" /> 32 
 <see langword="OpenMode.Binary" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary vsli:raw="Concludes input/output (I/O) to a file opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. &lt;see langword=&quot;My&quot; /&gt; gives you better productivity and performance in file I/O operations. See &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; for more information.">將輸入/輸出 (I/O) 結果導向使用 <see langword="FileOpen" /> 函式開啟的檔案。 <see langword="My" /> 提供更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumbers" vsli:raw="Optional. Parameter array of 0 or more channels to be closed.">選擇性。 參數陣列，具有 0 個或更多要關閉的通道。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> 不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary vsli:raw="Copies a file. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileCopy&quot; /&gt;. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)&quot; /&gt; for more information.">複製檔案。 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 提供比 <see langword="FileCopy" /> 更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />。</summary>
      <param name="Source" vsli:raw="Required. A string expression that specifies the name of the file to be copied. &lt;paramref name=&quot;Source&quot; /&gt; may include the directory or folder, and drive, of the source file.">必要項。 字串運算式，指定要複製的檔案名稱。 <paramref name="Source" /> 可包括原始程式檔的目錄或資料夾及磁碟機。</param>
      <param name="Destination" vsli:raw="Required. A string expression that specifies the destination file name. &lt;paramref name=&quot;Destination&quot; /&gt; may include the directory or folder, and drive, of the destination file.">必要項。 字串運算式，指定目標檔案名稱。 <paramref name="Destination" /> 可包括目的檔案的目錄或資料夾及磁碟機。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; or &lt;paramref name=&quot;Destination&quot; /&gt; is invalid or not specified.">
        <paramref name="Source" /> 或 <paramref name="Destination" /> 為無效值或尚未指定。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File is already open.">檔案已經開啟。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">檔案不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was written to. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileDateTime&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">傳回 <see langword="Date" /> 值，表示寫入檔案的日期和時間。 相較於 <see langword="FileDateTime" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">必要項。 指定檔名的字串運算式。 <paramref name="PathName" /> 可能包括目錄或資料夾及磁碟機。</param>
      <returns vsli:raw="&lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was created or last modified.">
        <see langword="Date" /> 值，表示建立檔案或上次修改檔案的日期和時間。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;PathName&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="PathName" /> 無效或包含萬用字元。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">目標檔案不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.">選擇性。 只有在編寫陣列時才適用。 指定是否將陣列視為動態 (Dynamic)，以及是否有必要指定描述陣列大小和界限的陣列描述元。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">選擇性。 只有在編寫字串時才適用。 指定是否要為字串寫入描述長度的雙位元組描述元。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">選擇性。 只有在編寫字串時才適用。 指定是否要為字串寫入描述長度的雙位元組描述元。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。 相較於 <see langword="FileGet" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGetObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將開放磁碟檔案的資料讀取到變數中。  相較於 <see langword="FileGetObject" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">必要項。 有效的變數名稱，資料將讀取至其中。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">選擇性。 要開始讀取的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary vsli:raw="Returns a value that specifies the length of a file in bytes. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileLen&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">傳回值，指定檔案的長度 (以位元組為單位)。 相較於 <see langword="FileLen" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">必要項。 指定檔案的字串運算式。 <paramref name="PathName" /> 可能包括目錄或資料夾及磁碟機。</param>
      <returns vsli:raw="The length of a file in bytes.">檔案的長度 (以位元組為單位)。</returns>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">檔案不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary vsli:raw="Opens a file for input or output. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileOpen&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">開啟要當做輸入或輸出的檔案。 相較於 <see langword="FileOpen" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number. Use the &lt;see langword=&quot;FreeFile&quot; /&gt; function to obtain the next available file number.">必要項。 任何有效的檔案數目。 使用 <see langword="FreeFile" /> 函式取得下一個可用的檔案編號。</param>
      <param name="FileName" vsli:raw="Required. A string expression that specifies a file name - may include directory or folder, and drive.">必要項。 字串運算式，可指定檔名，也可能包括目錄或資料夾與磁碟機。</param>
      <param name="Mode" vsli:raw="Required. Enumeration specifying the file mode: &lt;see langword=&quot;Append&quot; /&gt;, &lt;see langword=&quot;Binary&quot; /&gt;, &lt;see langword=&quot;Input&quot; /&gt;, &lt;see langword=&quot;Output&quot; /&gt;, or &lt;see langword=&quot;Random&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenMode&quot; /&gt; .">必要項。 指定檔案模式的列舉類型：<see langword="Append" />、<see langword="Binary" />、<see langword="Input" />、<see langword="Output" /> 或 <see langword="Random" /> 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.OpenMode" />。</param>
      <param name="Access" vsli:raw="Optional. Enumeration specifying the operations permitted on the open file: &lt;see langword=&quot;Read&quot; /&gt;, &lt;see langword=&quot;Write&quot; /&gt;, or &lt;see langword=&quot;ReadWrite&quot; /&gt;. Defaults to &lt;see langword=&quot;ReadWrite&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenAccess&quot; /&gt; .">選擇性。 指定開啟檔案上允許的作業之列舉類型：<see langword="Read" />、<see langword="Write" /> 或 <see langword="ReadWrite" />。 預設值為 <see langword="ReadWrite" />。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.OpenAccess" />。</param>
      <param name="Share" vsli:raw="Optional. Enumeration specifying the operations not permitted on the open file by other processes: &lt;see langword=&quot;Shared&quot; /&gt;, &lt;see langword=&quot;Lock Read&quot; /&gt;, &lt;see langword=&quot;Lock Write&quot; /&gt;, and &lt;see langword=&quot;Lock Read Write&quot; /&gt;. Defaults to &lt;see langword=&quot;Lock Read Write&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenShare&quot; /&gt; .">選擇性。 指定開啟的檔案上其他處理序不允許之作業的列舉類型：<see langword="Shared" />、<see langword="Lock Read" />、<see langword="Lock Write" /> 和 <see langword="Lock Read Write" />。 預設值為 <see langword="Lock Read Write" />。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.OpenShare" />。</param>
      <param name="RecordLength" vsli:raw="Optional. Number less than or equal to 32,767 (bytes). For files opened for random access, this value is the record length. For sequential files, this value is the number of characters buffered.">選擇性。 數字小於或等於 32,767 (位元組)。 對於為隨機存取開啟的檔案而言，這個值是資料錄長度。 對於循序檔案而言，這個值是緩衝的字元數。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Record length is negative (and not equal to -1).">資料錄的長度為負數 (而且不等於 -1)。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileName&quot; /&gt; is already open, or &lt;paramref name=&quot;FileName&quot; /&gt; is invalid.">
        <paramref name="FileName" /> 已經開啟，或 <paramref name="FileName" /> 無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.">選擇性。 只有在編寫陣列時才適用。 指定陣列是否要視為動態 (Dynamic)，以及是否要針對描述長度的字串編寫陣列描述元。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">選擇性。 只有在編寫字串時才適用。 指定是否要針對檔案的字串編寫二位元組字串長度的描述元。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">選擇性。 只有在編寫字串時才適用。 指定是否要針對檔案的字串編寫二位元組字串長度的描述元。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。 相較於 <see langword="FilePut" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 且不等於 -1。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePutObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">將變數資料寫入磁碟檔案。  相較於 <see langword="FilePutObject" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">必要項。 有效的變數名稱，該名稱包含已寫入磁碟的資料。</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">選擇性。 寫入開始的資料錄數目 (<see langword="Random" /> 模式檔案) 或位元組數目 (<see langword="Binary" /> 模式檔案)。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary vsli:raw="Assigns an output line width to a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">為藉由使用 <see langword="FileOpen" /> 函式開啟的檔案指派輸出行寬度。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="RecordWidth" vsli:raw="Required. Numeric expression in the range 0-255, inclusive, which indicates how many characters appear on a line before a new line is started. If &lt;paramref name=&quot;RecordWidth&quot; /&gt; equals 0, there is no limit to the length of a line. The default value for &lt;paramref name=&quot;RecordWidth&quot; /&gt; is 0.">必要項。 0-255 範圍內的數值運算式 (包含頭尾)，表示在開始新行之前，會有多少字元出現在一行上。 如果 <paramref name="RecordWidth" /> 等於 0，則一行的長度將沒有限制。 <paramref name="RecordWidth" /> 的預設值為 0。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">傳回 <see langword="Integer" /> 值，表示可供 <see langword="FileOpen" /> 函式使用的下一個可用的檔案編號。</summary>
      <returns vsli:raw="An integer value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">整數值，表示可供 <see langword="FileOpen" /> 函式使用的下一個可用檔案編號。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="More than 255 files are in use.">使用中的檔案超過 255 個。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;FileAttribute&quot; /&gt; value that represents the attributes of a file, directory, or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileAttribute&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">傳回 <see langword="FileAttribute" /> 值，表示檔案、目錄或資料夾的屬性。 相較於 <see langword="FileAttribute" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file, directory, or folder name. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">必要項。 指定檔案、目錄或資料夾名稱的字串運算式。 <paramref name="PathName" /> 可包含目錄或資料夾，以及磁碟機。</param>
      <returns vsli:raw="A bitwise combination of the enumeration values.">列舉值的位元組合。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;Pathname&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="Pathname" /> 無效或包含萬用字元。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">目標檔案不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">自開啟的循序檔中讀取資料，並將該資料指派至變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">必要項。 當變數所指派的值是讀自於檔案時，這些變數不可以是陣列或物件變數。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary vsli:raw="Returns &lt;see langword=&quot;String&quot; /&gt; value that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">傳回 <see langword="String" /> 值，其中包含於 <see langword="Input" /> 或 <see langword="Binary" /> 模式下開啟之檔案中的字元。 相較於 <see langword="InputString" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="CharCount" vsli:raw="Required. Any valid numeric expression specifying the number of characters to read.">必要項。 任何有效的數值運算式，指定要讀取的字元數。</param>
      <returns vsli:raw="A string that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;.">字串，其中包含於 <see langword="Input" /> 或 <see langword="Binary" /> 模式下開啟之檔案中的字元。 相較於 <see langword="InputString" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> 不存在。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCount&quot; /&gt; &amp;lt; 0 or &amp;gt; 214.">
        <paramref name="CharCount" /> &lt; 0 或 &gt; 214。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary vsli:raw="Deletes files from a disk. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Kill&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; .">從磁碟中刪除檔案。 相較於 <see langword="Kill" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies one or more file names to be deleted. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">必要項。 字串運算式，指定要刪除之一或多個檔案的名稱。 <paramref name="PathName" /> 可包含目錄或資料夾，以及磁碟機。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Target file(s) open.">目標檔案已開啟。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file(s) not found.">找不到目標檔案。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">權限遭拒。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">從開啟的循序檔案中讀取單一行，並將它指派給 <see langword="String" /> 變數。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <returns vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">從開啟的循序檔案中讀取單一行，並將它指派給 <see langword="String" /> 變數。</returns>
      <exception cref="T:System.IO.EndOfStreamException" vsli:raw="End of file reached.">已到達檔案結尾。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> 不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary vsli:raw="Returns a value that specifies the current read/write position in an open file.">傳回值，指定開啟檔案中目前的讀取/寫入位置。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid &lt;see langword=&quot;Integer&quot; /&gt; file number.">必要項。 任何有效的 <see langword="Integer" /> 檔案編號。</param>
      <returns vsli:raw="The current read/write position in an open file.">已開啟之檔案中的目前讀取/寫入位置。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制項由其他處理序存取以 <see langword="Open" /> 函式開啟的整個或部分檔案。 <see langword="My" /> 功能提供比 <see langword="Lock" /> 和 <see langword="Unlock" /> 更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制項由其他處理序存取以 <see langword="Open" /> 函式開啟的整個或部分檔案。 <see langword="My" /> 功能提供比 <see langword="Lock" /> 和 <see langword="Unlock" /> 更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">選擇性。 要鎖定或解除鎖定之唯一資料錄或位元組的編號。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制項由其他處理序存取以 <see langword="Open" /> 函式開啟的整個或部分檔案。 <see langword="My" /> 功能提供比 <see langword="Lock" /> 和 <see langword="Unlock" /> 更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">選擇性。 要鎖定或解除鎖定的第一筆資料錄或第一個位元組的編號。</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">選擇性。 要鎖定或解除鎖定的最後一筆資料錄或最後一個位元組的編號。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary vsli:raw="Returns the size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">傳回大小，表示使用 <see langword="FileOpen" /> 函式開啟之檔案的大小 (以位元組為單位)。 相較於 <see langword="LOF" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. An integer that contains a valid file number.">必要項。 包含有效檔案編號的整數。</param>
      <returns vsli:raw="The size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;.">大小，表示使用 <see langword="FileOpen" /> 函式開啟之檔案的大小 (以位元組為單位)。 相較於 <see langword="LOF" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary vsli:raw="Creates a new directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;MkDir&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)&quot; /&gt;.">建立新目錄。 相較於 <see langword="MkDir" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />。</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory to be created. The &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;MkDir&quot; /&gt; creates the new directory on the current drive.">必要項。 字串運算式，可識別要建立的目錄。 <paramref name="Path" /> 可包含磁碟機。 如果未指定磁碟機，則 <see langword="MkDir" /> 會在目前磁碟機上建立新目錄。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> 尚未指定或是空的。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">權限遭拒。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Directory already exists.">目錄已經存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">將顯示格式資料寫入循序檔。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">選擇性。 要寫入檔案的零或多個逗點分隔運算式。  
<paramref name="Output" /> 引數設定為︰ 
 <see langword="T:System.IO.IOException" />：檔案模式無效。  
 <see langword="T:System.IO.IOException" />：<paramref name="FileNumber" /> 不存在。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">將顯示格式資料寫入循序檔。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">選擇性。 要寫入檔案的零或多個逗點分隔運算式。  
<paramref name="Output" /> 引數設定為︰ 
 <see langword="T:System.IO.IOException" />：檔案模式無效。  
 <see langword="T:System.IO.IOException" />：<paramref name="FileNumber" /> 不存在。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary vsli:raw="Renames a disk file or directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Rename&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">重新命名磁碟的檔案或目錄。 相較於 <see langword="Rename" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="OldPath" vsli:raw="Required. A string expression that specifies the existing file name and location. &lt;paramref name=&quot;OldPath&quot; /&gt; may include the directory, and drive, of the file.">必要項。 字串運算式，指定現有的檔案名稱和位置。 <paramref name="OldPath" /> 可包括檔案的目錄及磁碟機。</param>
      <param name="NewPath" vsli:raw="Required. A string expression that specifies the new file name and location. &lt;paramref name=&quot;NewPath&quot; /&gt; may include directory and drive of the destination location. The file name specified by &lt;paramref name=&quot;NewPath&quot; /&gt; cannot already exist.">必要項。 字串運算式，指定新檔案名稱與位置。 <paramref name="NewPath" /> 可包括目的位置的目錄及磁碟機。 <paramref name="NewPath" /> 指定的檔案名稱不能已經存在。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Path is invalid.">路徑無效。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;paramref name=&quot;OldPath&quot; /&gt; file does not exist.">
        <paramref name="OldPath" /> 檔案不存在。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Cannot rename to different device.">無法重新命名為不同的裝置。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary vsli:raw="Closes all disk files opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Reset&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">關閉所有使用 <see langword="FileOpen" /> 函式開啟的磁碟檔案。 相較於 <see langword="Reset" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary vsli:raw="Removes an existing directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;RmDir&quot; /&gt;. For more information, see &lt;see cref=&quot;Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory&quot; /&gt;.">移除現有的目錄。 相較於 <see langword="RmDir" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />。</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory or folder to be removed. &lt;paramref name=&quot;Path&quot; /&gt; can include the drive. If no drive is specified, &lt;see langword=&quot;RmDir&quot; /&gt; removes the directory on the current drive.">必要項。 字串運算式，可識別要移除的目錄或資料夾。 <paramref name="Path" /> 可包括磁碟機。 如果未指定磁碟機，則 <see langword="RmDir" /> 會移除目前磁碟機上的目錄。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> 尚未指定或是空的。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Target directory contains files.">目標目錄包含檔案。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Directory does not exist.">目錄不存在。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">傳回指定使用 <see langword="Long" /> 函式開啟的檔案中目前讀取/寫入位置的 <see langword="FileOpen" />，或設定使用 <see langword="FileOpen" /> 函式開啟的檔案中下一個讀取/寫入作業的位置。 相較於 <see langword="Seek" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">必要項。 包含有效檔案編號的 <see langword="Integer" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">指定使用 <see langword="FileOpen" /> 函式開啟的檔案中目前讀取/寫入位置的 <see langword="Long" />，或設定使用 <see langword="FileOpen" /> 函式開啟之檔案中下一個讀取/寫入作業的位置。</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">傳回指定使用 <see langword="Long" /> 函式開啟的檔案中目前讀取/寫入位置的 <see langword="FileOpen" />，或設定使用 <see langword="FileOpen" /> 函式開啟的檔案中下一個讀取/寫入作業的位置。 相較於 <see langword="Seek" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">必要項。 包含有效檔案編號的 <see langword="Integer" />。</param>
      <param name="Position" vsli:raw="Required. Number in the range 1-2,147,483,647, inclusive, that indicates where the next read/write operation should occur.">必要項。 在 1-2,147,483,647 範圍之間的數字 (包括頭尾)，表示應該發生下一個讀取/寫入作業的位置。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Sets attribute information for a file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;SetAttr&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">設定檔案的屬性 (Attribute) 資訊。 相較於 <see langword="SetAttr" />，<see langword="My" /> 功能可提升檔案 I/O 作業的產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; can include directory or folder, and drive.">必要項。 指定檔名的字串運算式。 <paramref name="PathName" /> 可包括目錄或資料夾及磁碟機。</param>
      <param name="Attributes" vsli:raw="Required. Constant or numeric expression, whose sum specifies file attributes.">必要項。 常數或數值運算式，其總和可以表示檔案屬性。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Attribute&quot; /&gt; type is invalid.">
        <paramref name="Attribute" /> 類型無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">搭配 <see langword="Print" /> 或 <see langword="PrintLine" /> 函式使用，以定位輸出。</summary>
      <param name="Count" vsli:raw="Required. The number of spaces to insert before displaying or printing the next expression in a list.">必要項。 在顯示或列印清單中的下一個運算式之前所要插入的空格數。</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">搭配 <see langword="Print" /> 或 <see langword="PrintLine" /> 函式使用，以定位輸出。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">配合 <see langword="Print" /> 或 <see langword="PrintLine" /> 函式用於定位輸出。</summary>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">配合 <see langword="Print" /> 或 <see langword="PrintLine" /> 函式用於定位輸出。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">配合 <see langword="Print" /> 或 <see langword="PrintLine" /> 函式用於定位輸出。</summary>
      <param name="Column" vsli:raw="Optional. The column number moved to before displaying or printing the next expression in a list. If omitted, &lt;see langword=&quot;TAB&quot; /&gt; moves the insertion point to the start of the next print zone.">選擇性。 在顯示或列印清單中的下一個運算式之前所要移至的欄位編號。 如果省略，則 <see langword="TAB" /> 會將插入點移到下一個列印區 (Print Zone) 的開頭。</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">配合 <see langword="Print" /> 或 <see langword="PrintLine" /> 函式用於定位輸出。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制項由其他處理序存取以 <see langword="Open" /> 函式開啟的整個或部分檔案。 <see langword="My" /> 功能提供比 <see langword="Lock" /> 和 <see langword="Unlock" /> 更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制項由其他處理序存取以 <see langword="Open" /> 函式開啟的整個或部分檔案。 <see langword="My" /> 功能提供比 <see langword="Lock" /> 和 <see langword="Unlock" /> 更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">選擇性。 要鎖定或解除鎖定的唯一資料錄或位元組的編號。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">控制項由其他處理序存取以 <see langword="Open" /> 函式開啟的整個或部分檔案。 <see langword="My" /> 功能提供比 <see langword="Lock" /> 和 <see langword="Unlock" /> 更優越的檔案 I/O 作業產能和效能。 如需詳細資訊，請參閱<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">必要項。 任何有效的檔案數目。</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">選擇性。 要鎖定或解除鎖定的第一筆資料錄或第一個位元組的編號。</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">選擇性。 要鎖定或解除鎖定的最後一筆資料錄或最後一個位元組的編號。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">將資料寫入循序檔。 使用 <see langword="Write" /> 寫入的資料，通常會透過使用 <see langword="Input" /> 從檔案讀取。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">必要項。 包含任何有效檔案數目的 <see langword="Integer" /> 運算式。</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">選擇性。 要寫入檔案的一或多個逗點分隔運算式。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">檔案模式無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">將資料寫入循序檔。 使用 <see langword="Write" /> 寫入的資料，通常會透過使用 <see langword="Input" /> 從檔案讀取。</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">必要項。 包含任何有效檔案數目的 <see langword="Integer" /> 運算式。</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">選擇性。 要寫入檔案的一或多個逗點分隔運算式。</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary vsli:raw="The &lt;see langword=&quot;Financial&quot; /&gt; module contains procedures used to perform financial operations.">
        <see langword="Financial" /> 模組包含用來執行帳務處理運算的程序。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">傳回值，指定在使用倍率遞減法或您指定的某個其他方法時，資產在特定期間內的折舊。</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">必要項。 資產的初始成本。</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">必要項。 資產在可用年限末期的價值。</param>
      <param name="Life" vsli:raw="Required. The length of useful life of the asset.">必要項。 資產的可用年限長度。</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">必要項。 計算資產折舊的期間。</param>
      <param name="Factor" vsli:raw="Optional. The rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.">選擇性。 餘額遞減所用的利率。 如果省略，則假設是 2 (雙倍遞減法)。</param>
      <returns vsli:raw="The depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">在使用倍率遞減法或您指定的某個其他方法時，資產在特定期間內的折舊。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Factor&quot; /&gt; &amp;lt;= 0, &lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;= 0, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;.">
        <paramref name="Factor" /> &lt;= 0、<paramref name="Salvage" /> &lt; 0、<paramref name="Period" /> &lt;= 0 或 <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.">傳回值，指定根據定期、定額付款及固定利率所計算的年金未來值。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必要項。 每期利率。 例如，如果您的汽車貸款年利率 (APR) 為 10% 並採月付方式償還，則每期的利率為 0.1/12，也就是 0.0083。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">必要項。 年金中付款的總期數。 例如，如果您的四年期汽車貸款是採月付方式償還，則付款總期數就是 4 x 12 (即 48) 期。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">必要項。 每一期所要付的款項。 款項通常包含本金，以及不會隨著年金的有效期間而變更的利息。</param>
      <param name="PV" vsli:raw="Optional. The present value (or lump sum) of a series of future payments. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make. If omitted, 0 is assumed.">選擇性。 一系列未來付款的現值 (或整筆金額)。 例如，當您貸款買車時，貸款金額就是您要以每月支付方式付給貸方的車款金額現值。 如果省略，則假設為 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; if payments are due at the end of the payment period, or &lt;see langword=&quot;DueDate.BegOfPeriod&quot; /&gt; if payments are due at the beginning of the period. If omitted, &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; is assumed.">選擇性。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 類型的物件，指定付款何時到期。 這個引數必須是 <see langword="DueDate.EndOfPeriod" /> (若付款期限是付款期間的結束日)，或 <see langword="DueDate.BegOfPeriod" /> (若付款期限是付款期間的開始日)。 如果省略，則假設為 <see langword="DueDate.EndOfPeriod" />。</param>
      <returns vsli:raw="The future value of an annuity based on periodic, fixed payments and a fixed interest rate.">根據定期、定額付款及固定利率所計算的年金未來值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">傳回值，指定根據定期、定額付款及固定利率所計算的年金在給定之期間內的利息付款。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必要項。 每期利率。 例如，如果您的汽車貸款年利率 (APR) 為 10% 並採月付方式償還，則每期的利率為 0.1/12，也就是 0.0083。</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">必要項。 在 1 到 <paramref name="NPer" /> 範圍內的付款期間。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">必要項。 年金中付款的總期數。 例如，如果您的四年期汽車貸款是採月付方式償還，則付款總期數就是 4 x 12 (即 48) 期。</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必要項。 一系列未來付款或收款之現值或今天的價值。 例如，當您貸款買車時，貸款金額就是您要以每月支付方式付給貸方的車款金額現值。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you've made the final payment. For example, the future value of a loan is $0 because that's its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">選擇性。 您在最後一次付款之後想要的未來價值或現金餘額。 例如，貸款的未來值為 $0，因為那是它在最後一期付款之後的值。 然而，如果您想在 18 年內存下美金 $50,000 元做為子女教育費用，那麼美金 $50,000 元就是未來值。 如果省略，則假設為 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">選擇性。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 類型的物件，指定付款何時到期。 這個引數必須是 <c>DueDate.EndOfPeriod</c> (若付款期限是付款期間的結束日)，或 <c>DueDate.BegOfPeriod</c> (若付款期限是付款期間的開始日)。 如果省略，則假設為 <c>DueDate.EndOfPeriod</c>。</param>
      <returns vsli:raw="The interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">根據定期、定額付款及固定利率所計算的年金在給定之期間內的利息付款。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;">
        <paramref name="Per" /> &lt;= 0 或 <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary vsli:raw="Returns a value specifying the internal rate of return for a series of periodic cash flows (payments and receipts).">傳回值，指定一系列定期現金流量 (付款及收款) 的內部報酬率。</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">必要項。 指定現金流量值的 <see langword="Double" /> 陣列； 這個陣列至少必須含有一項負值 (付款) 和一項正值 (收款)。</param>
      <param name="Guess" vsli:raw="Optional. Object specifying value you estimate will be returned by &lt;see langword=&quot;IRR&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">選擇性。 指定您預估值的物件將會由 <see langword="IRR" /> 所傳回。 如果省略，則 <paramref name="Guess" /> 會是 0.1 (百分之 10)。</param>
      <returns vsli:raw="The internal rate of return for a series of periodic cash flows (payments and receipts).">一系列定期現金流量 (付款及收款) 的內部報酬率。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Array argument values are invalid or &lt;paramref name=&quot;Guess&quot; /&gt; &amp;lt;= -1.">陣列引數值無效或 <paramref name="Guess" /> &lt;= -1。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).">傳回值，指定一系列定期現金流量 (付款及收款) 之修正的內部報酬率。</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash-flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">必要項。 指定現金流量值的 <see langword="Double" /> 陣列； 這個陣列至少必須含有一項負值 (付款) 和一項正值 (收款)。</param>
      <param name="FinanceRate" vsli:raw="Required. The interest rate paid as the cost of financing.">必要項。 作為融資成本支付的利率。</param>
      <param name="ReinvestRate" vsli:raw="Required. The interest rate received on gains from cash reinvestment.">必要項。 從現金重投資之收益所收到的利率。</param>
      <returns vsli:raw="The modified internal rate of return for a series of periodic cash flows (payments and receipts).">一系列定期現金流量 (付款及收款) 的內部報酬率。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; does not equal 1, &lt;paramref name=&quot;FinanceRate&quot; /&gt; = -1, or &lt;paramref name=&quot;ReinvestRate&quot; /&gt; = -1">
        <paramref name="ValueArray" /> 的陣序不等於 1、<paramref name="FinanceRate" /> = -1 或 <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException" vsli:raw="Division by zero has occurred.">發生除數為零的情形。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">傳回值，指定根據定期、定額付款及固定利率所計算的年金期數。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必要項。 每期利率。 例如，如果您的汽車貸款年利率 (APR) 為 10% 並採月付方式償還，則每期的利率為 0.1/12，也就是 0.0083。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change over the life of the annuity.">必要項。 每一期所要付的款項。 款項通常包含本金，以及不會隨著年金的有效期間而變更的利息。</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必要項。 一系列未來付款或收款之現值或今天的價值。 例如，當您貸款買車時，貸款金額就是您要以每月支付方式付給貸方的車款金額現值。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">選擇性。 您在最後一次付款之後想要的未來價值或現金餘額。 例如，貸款的未來值為 $0，因為是代表最後一期付款之後的值。 然而，如果您想在 18 年內存下美金 $50,000 元做為子女教育費用，那麼美金 $50,000 元就是未來值。 如果省略，則假設為 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">選擇性。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 類型的物件，指定付款何時到期。 這個引數必須是 <c>DueDate.EndOfPeriod</c> (若付款期限是付款期間的結束日)，或 <c>DueDate.BegOfPeriod</c> (若付款期限是付款期間的開始日)。 如果省略，則假設為 <c>DueDate.EndOfPeriod</c>。</param>
      <returns vsli:raw="The number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">根據定期、定額付款及固定利率所計算的年金期數。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Rate&quot; /&gt; = 0 and &lt;paramref name=&quot;Pmt&quot; /&gt; = 0">
        <paramref name="Rate" /> = 0 和 <paramref name="Pmt" /> = 0</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary vsli:raw="Returns a value specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">傳回值，指定根據一系列定期現金流量 (付款及收款) 及貼現率所得的投資淨現值。</summary>
      <param name="Rate" vsli:raw="Required. The discount rate over the length of the period, expressed as a decimal.">必要項。 某段期間的貼現率，以十進位值表示。</param>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">必要項。 指定現金流量值的 <see langword="Double" /> 陣列； 這個陣列至少必須含有一項負值 (付款) 和一項正值 (收款)。</param>
      <returns vsli:raw="The net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">根據一系列定期現金流量 (付款及收款) 及貼現率所得的投資淨現值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ValueArray&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; &amp;lt;&amp;gt; 1, or &lt;paramref name=&quot;Rate&quot; /&gt; = -1">
        <paramref name="ValueArray" /> 是 <see langword="Nothing" />、<paramref name="ValueArray" /> &lt;&gt; 1 的陣序或 <paramref name="Rate" /> = -1</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.">傳回值，指定根據定期、定額付款及固定利率所計算的年金付款款項。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必要項。 每期利率。 例如，如果您的汽車貸款年利率 (APR) 為 10% 並採月付方式償還，則每期的利率為 0.1/12，也就是 0.0083。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.">必要項。 年金中付款的總期數。 例如，如果您的四年期汽車貸款是採月付方式償還，則付款總期數就是 4 x 12 (即 48) 期。</param>
      <param name="PV" vsli:raw="Required. The present value (or lump sum) that a series of payments to be paid in the future is worth now. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必要項。 未來要支付之一系列付款的現值 (或整筆金額)。 例如，當您貸款買車時，貸款金額就是您要以每月支付方式付給貸方的車款金額現值。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">選擇性。 您在最後一次付款之後想要的未來價值或現金餘額。 例如，貸款的未來值為 $0，因為是代表最後一期付款之後的值。 然而，如果您想在 18 年內存下美金 $50,000 元做為子女教育費用，那麼美金 $50,000 元就是未來值。 如果省略，則假設為 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">選擇性。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 類型的物件，指定付款何時到期。 這個引數必須是 <c>DueDate.EndOfPeriod</c> (若付款期限是付款期間的結束日)，或 <c>DueDate.BegOfPeriod</c> (若付款期限是付款期間的開始日)。 如果省略，則假設為 <c>DueDate.EndOfPeriod</c>。</param>
      <returns vsli:raw="The payment for an annuity based on periodic, fixed payments and a fixed interest rate.">根據定期、定額付款及固定利率所計算的年金付款款項。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; = 0.">
        <paramref name="NPer" /> = 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">傳回值，指定根據定期、定額付款及固定利率所計算的年金在給定之期間內的本金付款款項。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必要項。 每期利率。 例如，如果您的汽車貸款年利率 (APR) 為 10% 並採月付方式償還，則每期的利率為 0.1/12，也就是 0.0083。</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">必要項。 在 1 到 <paramref name="NPer" /> 範圍內的付款期間。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">必要項。 年金中付款的總期數。 例如，如果您的四年期汽車貸款是採月付方式償還，則付款總期數就是 4 x 12 (即 48) 期。</param>
      <param name="PV" vsli:raw="Required. The current value of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必要項。 一系列未來付款或收款的現值。 例如，當您貸款買車時，貸款金額就是您要以每月支付方式付給貸方的車款金額現值。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">選擇性。 您在最後一次付款之後想要的未來價值或現金餘額。 例如，貸款的未來值為 $0，因為是代表最後一期付款之後的值。 然而，如果您想在 18 年內存下美金 $50,000 元做為子女教育費用，那麼美金 $50,000 元就是未來值。 如果省略，則假設為 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">選擇性。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 類型的物件，指定付款何時到期。 這個引數必須是 <c>DueDate.EndOfPeriod</c> (若付款期限是付款期間的結束日)，或 <c>DueDate.BegOfPeriod</c> (若付款期限是付款期間的開始日)。 如果省略，則假設為 <c>DueDate.EndOfPeriod</c>。</param>
      <returns vsli:raw="The principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">根據定期、定額付款及固定利率所計算的年金在給定之期間內的本金付款款項。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;=0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;.">
        <paramref name="Per" /> &lt;=0 或 <paramref name="Per" /> &gt; <paramref name="NPer" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">傳回值，指定根據未來要支付的定期、定額付款及固定利率所計算的年金現值。</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">必要項。 每期利率。 例如，如果您的汽車貸款年利率 (APR) 為 10% 並採月付方式償還，則每期的利率為 0.1/12，也就是 0.0083。</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.">必要項。 年金中付款的總期數。 例如，如果您的四年期汽車貸款是採月付方式償還，則付款總期數就是 4 x 12 (即 48) 期。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change during the life of the annuity.">必要項。 每一期所要付的款項。 款項通常包含本金，以及不會隨著年金的有效期間而變更的利息。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">選擇性。 您在最後一次付款之後想要的未來價值或現金餘額。 例如，貸款的未來值為 $0，因為是代表最後一期付款之後的值。 然而，如果您想在 18 年內存下美金 $50,000 元做為子女教育費用，那麼美金 $50,000 元就是未來值。 如果省略，則假設為 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">選擇性。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 類型的物件，指定付款何時到期。 這個引數必須是 <c>DueDate.EndOfPeriod</c> (若付款期限是付款期間的結束日)，或 <c>DueDate.BegOfPeriod</c> (若付款期限是付款期間的開始日)。 如果省略，則假設為 <c>DueDate.EndOfPeriod</c>。</param>
      <returns vsli:raw="The present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">根據未來要支付的定期、定額付款及固定利率所計算的年金現值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary vsli:raw="Returns a value specifying the interest rate per period for an annuity.">傳回值，指定年金的每期利率。</summary>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 * 12 (or 48) payment periods.">必要項。 年金中付款的總期數。 例如，如果您的四年期汽車貸款是採月付方式償還，則付款總期數就是 4 * 12 (即 48) 期。</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">必要項。 每一期所要付的款項。 款項通常包含本金，以及不會隨著年金的有效期間而變更的利息。</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">必要項。 一系列未來付款或收款之現值或今天的價值。 例如，當您貸款買車時，貸款金額就是您要以每月支付方式付給貸方的車款金額現值。</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">選擇性。 您在最後一次付款之後想要的未來價值或現金餘額。 例如，貸款的未來值為 $0，因為是代表最後一期付款之後的值。 然而，如果您想在 18 年內存下美金 $50,000 元做為子女教育費用，那麼美金 $50,000 元就是未來值。 如果省略，則假設為 0。</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">選擇性。 <see cref="T:Microsoft.VisualBasic.DueDate" /> 類型的物件，指定付款何時到期。 這個引數必須是 <c>DueDate.EndOfPeriod</c> (若付款期限是付款期間的結束日)，或 <c>DueDate.BegOfPeriod</c> (若付款期限是付款期間的開始日)。 如果省略，則假設為 <c>DueDate.EndOfPeriod</c>。</param>
      <param name="Guess" vsli:raw="Optional. The value you estimate is returned by &lt;see langword=&quot;Rate&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">選擇性。 您估計的值會由 <see langword="Rate" /> 傳回。 如果省略，則 <paramref name="Guess" /> 會是 0.1 (百分之 10)。</param>
      <returns vsli:raw="The interest rate per period for an annuity.">年金的每期利率。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; &amp;lt;= 0.">
        <paramref name="NPer" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the straight-line depreciation of an asset for a single period.">傳回值，指定資產在單一期間內的直線折舊。</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">必要項。 資產的初始成本。</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">必要項。 資產在可用年限末期的價值。</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">必要項。 資產的可用年限長度。</param>
      <returns vsli:raw="The straight-line depreciation of an asset for a single period.">資產在單一期間內的直線折舊。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Life&quot; /&gt; = 0.">
        <paramref name="Life" /> = 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the sum-of-years digits depreciation of an asset for a specified period.">傳回值，指定資產在指定期間內的年數合計法折舊。</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">必要項。 資產的初始成本。</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">必要項。 資產在可用年限末期的價值。</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">必要項。 資產的可用年限長度。</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">必要項。 計算資產折舊的期間。</param>
      <returns vsli:raw="The sum-of-years digits depreciation of an asset for a specified period.">資產在指定之期間內的年數總和法折舊。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;=0.">
        <paramref name="Salvage" /> &lt; 0、<paramref name="Period" /> &gt; <paramref name="Life" /> 或 <paramref name="Period" /> &lt;=0。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary vsli:raw="Indicates the first day of the week to use when calling date-related functions.">指出在呼叫日期相關的函式時，哪天是一週的第一天。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary vsli:raw="Friday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFriday&quot; /&gt;.">星期五，這個成員相當於 Visual Basic 常數 <see langword="vbFriday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary vsli:raw="Monday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMonday&quot; /&gt;.">星期一，這個成員相當於 Visual Basic 常數 <see langword="vbMonday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary vsli:raw="Saturday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSaturday&quot; /&gt;.">星期六，這個成員相當於 Visual Basic 常數 <see langword="vbSaturday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary vsli:raw="Sunday (default) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSunday&quot; /&gt;.">星期日 (預設值)，這個成員相當於 Visual Basic 常數 <see langword="vbSunday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary vsli:raw="The first day of the week as specified in your system settings This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystemDayOfWeek&quot; /&gt;.">在系統設定中指定的一星期的第一天；這個成員相當於 Visual Basic 常數 <see langword="vbUseSystemDayOfWeek" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary vsli:raw="Thursday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbThursday&quot; /&gt;.">星期四，這個成員相當於 Visual Basic 常數 <see langword="vbThursday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary vsli:raw="Tuesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTuesday&quot; /&gt;.">星期二，這個成員相當於 Visual Basic 常數 <see langword="vbTuesday" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary vsli:raw="Wednesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWednesday&quot; /&gt;.">星期三，這個成員相當於 Visual Basic 常數 <see langword="vbWednesday" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary vsli:raw="Indicates the first week of the year to use when calling date-related functions.">指出在呼叫日期相關函式時，哪一週是一年的第一週。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary vsli:raw="The first week that has at least four days in the new year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFourDays&quot; /&gt;.">新年度當中至少包含四天的第一週。 這個成員相當於 Visual Basic 常數 <see langword="vbFirstFourDays" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary vsli:raw="The first full week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFullWeek&quot; /&gt;.">一年當中的第一個完整星期。 這個成員相當於 Visual Basic 常數 <see langword="vbFirstFullWeek" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary vsli:raw="The week in which January 1 occurs (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstJan1&quot; /&gt;.">一月一日當週 (預設值)。 這個成員相當於 Visual Basic 常數 <see langword="vbFirstJan1" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary vsli:raw="The week specified in your system settings as the first week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystem&quot; /&gt;.">您系統設定中指定為一年第一週的該週。 這個成員相當於 Visual Basic 常數 <see langword="vbUseSystem" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;HideModuleNameAttribute&quot; /&gt; attribute, when applied to a module, allows the module members to be accessed using only the qualification needed for the module.">
        <see langword="HideModuleNameAttribute" /> 屬性在套用到模組時，只能利用模組所需的限定性條件來存取模組成員。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.HideModuleNameAttribute&quot; /&gt; attribute.">初始化 <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" /> 屬性的新執行個體。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary vsli:raw="The &lt;see langword=&quot;Information&quot; /&gt; module contains the procedures used to return, test for, or verify information.">
        <see langword="Information" /> 模組包含了傳回、測試或驗證資訊所用的程序。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary vsli:raw="Contains information about run-time errors.">包含執行階段錯誤的相關資訊。</summary>
      <returns vsli:raw="Contains information about run-time errors.">包含執行階段錯誤的相關資訊。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">傳回 <see langword="Boolean" /> 值，指出變數是否指向陣列。</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable.">必要項。 <see langword="Object" /> 變數。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">傳回 <see langword="Boolean" /> 值，指出變數是否指向陣列。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">傳回 <see langword="Boolean" /> 值，指出運算式是否表示有效的 <see langword="Date" /> 值。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必要項。 <see langword="Object" /> 運算式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">傳回 <see langword="Boolean" /> 值，指出運算式是否表示有效的 <see langword="Date" /> 值。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為 <see cref="T:System.DBNull" /> 類別。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必要項。 <see langword="Object" /> 運算式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為 <see cref="T:System.DBNull" /> 類別。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">傳回 <see langword="Boolean" /> 值，指出運算式是否為例外狀況類型。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必要項。 <see langword="Object" /> 運算式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">傳回 <see langword="Boolean" /> 值，指出運算式是否為例外狀況類型。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">傳回 <see langword="Boolean" /> 值，指出是否沒有將任何物件指派給運算式。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必要項。 <see langword="Object" /> 運算式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">傳回 <see langword="Boolean" /> 值，指出是否沒有將任何物件指派給運算式。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">傳回 <see langword="Boolean" /> 值，指出運算式是否可以評估為數字。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必要項。 <see langword="Object" /> 運算式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">傳回 <see langword="Boolean" /> 值，指出運算式是否可以評估為數字。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為參考類型。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">必要項。 <see langword="Object" /> 運算式。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">傳回 <see langword="Boolean" /> 值，指出運算式是否會計算結果為參考類型。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the lowest available subscript for the indicated dimension of an array.">傳回所指示的陣列維度之可用的最低註標 (Subscript)。</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the lowest possible subscript of a dimension.">必要項。 任何資料類型的陣列， 您想在該陣列中找到維度的最低可能註標。</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">選擇性。 <see langword="Integer" />. 針對可能的最低註標，所要傳回的維度。 使用 1 表示第一個維度，2 表示第二個維度，依此類推。 如果省略了 <paramref name="Rank" />，則假設為 1。</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The lowest value the subscript for the specified dimension can contain. &lt;see langword=&quot;LBound&quot; /&gt; always returns 0 as long as &lt;paramref name=&quot;Array&quot; /&gt; has been initialized, even if it has no elements, for example if it is a zero-length string. If &lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;LBound&quot; /&gt; throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;.">
        <see langword="Integer" />. 指定之維度的註標可以包含的最低值。 只要 <paramref name="Array" /> 已經完成初始化，<see langword="LBound" /> 一定會傳回 0，即使它沒有任何項目也是如此，例如，如果它是長度為零的字串。 如果 <paramref name="Array" /> 為 <see langword="Nothing" />，則 <see langword="LBound" /> 會擲回 <see cref="T:System.ArgumentNullException" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> 小於 1 或 <paramref name="Rank" /> 大於 <paramref name="Array" /> 的陣序規範。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">傳回 <see langword="Integer" /> 值，表示對應到指定之色彩編號的 RGB 色彩代碼。</summary>
      <param name="Color" vsli:raw="Required. A whole number in the range 0-15.">必要項。 介於 0-15 範圍之間的整數。</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">傳回 <see langword="Integer" /> 值，表示對應到指定之色彩編號的 RGB 色彩代碼。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Color&quot; /&gt; is outside of range 0 to 15, inclusive.">
        <paramref name="Color" /> 超出 0 到 15 的範圍 (含 0 和 15)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">傳回 <see langword="Integer" /> 值，表示一組紅色、綠色和藍色元件中的 RGB 色彩值。</summary>
      <param name="Red" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the red component of the color.">必要項。 在 0-255 範圍 (包含頭尾) 中的 <see langword="Integer" />，表示色彩中紅色元件的濃度。</param>
      <param name="Green" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the green component of the color.">必要項。 在 0-255 範圍 (包含頭尾) 中的 <see langword="Integer" />，表示色彩中綠色元件的濃度。</param>
      <param name="Blue" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the blue component of the color.">必要項。 在 0-255 範圍 (包含頭尾) 中的 <see langword="Integer" />，表示色彩中藍色元件的濃度。</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">傳回 <see langword="Integer" /> 值，表示一組紅色、綠色和藍色元件中的 RGB 色彩值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Green&quot; /&gt;, &lt;paramref name=&quot;Blue&quot; /&gt;, or &lt;paramref name=&quot;Red&quot; /&gt; is outside of range 0 to 255, inclusive.">
        <paramref name="Green" />、<paramref name="Blue" /> 或 <paramref name="Red" /> 超出 0 到 225 的範圍 (含 0 和 225)。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">傳回 <see langword="String" /> 值，其中包含某個變數的系統資料類型名稱。</summary>
      <param name="VbName" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; variable containing a Visual Basic type name.">必要項。 <see langword="String" /> 變數，包含 Visual Basic 類型名稱。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">傳回 <see langword="String" /> 值，其中包含某個變數的系統資料類型名稱。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">傳回 <see langword="String" /> 值，其中包含與變數有關的資料類型資訊。</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">必要項。 <see langword="Object" /> 變數。 如果 <see langword="Option Strict" /> 為 <see langword="Off" />，您可以傳遞任何資料型別的變數，但是結構除外。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">傳回 <see langword="String" /> 值，其中包含與變數有關的資料類型資訊。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the highest available subscript for the indicated dimension of an array.">傳回所指示的陣列維度之可用的最高註標。</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the highest possible subscript of a dimension.">必要項。 任何資料類型的陣列， 您想在該陣列中找到維度的最高可能註標。</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">選擇性。 <see langword="Integer" />. 針對可能的最高註標，所要傳回的維度。 使用 1 表示第一個維度，2 表示第二個維度，依此類推。 如果省略了 <paramref name="Rank" />，則假設為 1。</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The highest value the subscript for the specified dimension can contain. If &lt;paramref name=&quot;Array&quot; /&gt; has only one element, &lt;see langword=&quot;UBound&quot; /&gt; returns 0. If &lt;paramref name=&quot;Array&quot; /&gt; has no elements, for example if it is a zero-length string, &lt;see langword=&quot;UBound&quot; /&gt; returns -1.">
        <see langword="Integer" />. 指定之維度的註標可以包含的最高值。 如果 <paramref name="Array" /> 只有一個元素，則 <see langword="UBound" /> 會傳回 0。 如果 <paramref name="Array" /> 沒有任何項目，例如它是零長度字串，則 <see langword="UBound" /> 會傳回 -1。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; is less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> 小於 1 或 <paramref name="Rank" /> 大於 <paramref name="Array" /> 的陣序規範。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">傳回 <see langword="Integer" /> 值，其中包含某個變數的資料類型分類。</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">必要項。 <see langword="Object" /> 變數。 如果 <see langword="Option Strict" /> 為 <see langword="Off" />，您可以傳遞任何資料型別的變數，但是結構除外。</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">傳回 <see langword="Integer" /> 值，其中包含某個變數的資料類型分類。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">傳回 <see langword="String" /> 值，其中包含某個變數的 Visual Basic 資料類型名稱。</summary>
      <param name="UrtName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; variable containing a type name used by the common language runtime.">必要項。 <see langword="String" /> 變數，包含 Common Language Runtime 所用的類型名稱。</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">傳回 <see langword="String" /> 值，其中包含某個變數的 Visual Basic 資料類型名稱。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary vsli:raw="The &lt;see langword=&quot;Interaction&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">
        <see langword="Interaction" /> 模組會包含用於與物件、應用程式和系統互動的程序。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary vsli:raw="Sounds a tone through the computer's speaker.">透過電腦的喇叭發出聲音。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">在物件上執行方法，或是設定或傳回物件上的屬性。</summary>
      <param name="ObjectRef" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">必要項。 <see langword="Object" />. 公開屬性或方法之物件的指標。</param>
      <param name="ProcName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">必要項。 <see langword="String" />. 包含物件之屬性或方法名稱的字串運算式。</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">必要項。 型別 <see cref="T:Microsoft.VisualBasic.CallType" /> 的列舉型別成員，其表示正在呼叫的程序型別。 <see langword="CallType" /> 的值可以是 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。</param>
      <param name="Args" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">選擇性。 <see langword="ParamArray" />. 參數陣列，其中包含要傳遞給屬性或正在呼叫的方法之引數。</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">在物件上執行方法，或是設定或傳回物件上的屬性。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Invalid &lt;paramref name=&quot;UseCallType&quot; /&gt; value; must be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">無效的 <paramref name="UseCallType" /> 值，必須是 <see langword="Method" />、<see langword="Get" /> 或 <see langword="Set" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">建立並傳回 COM 物件的參考； 除非類別已明確公開為 COM 元件，否則 <see langword="CreateObject" /> 無法用來在 Visual Basic 中建立類別的執行個體。</summary>
      <param name="ProgId" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. The program ID of the object to create.">必要項。 <see langword="String" />. 要建立之物件的程式 ID。</param>
      <param name="ServerName" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt;. The name of the network server where the object will be created. If &lt;paramref name=&quot;ServerName&quot; /&gt; is an empty string (&quot;&quot;), the local computer is used.">選擇性。 <see langword="String" />. 將建立物件的網路伺服器名稱。 如果 <paramref name="ServerName" /> 為空字串 ("")，則會使用本機電腦。</param>
      <returns vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">建立並傳回 COM 物件的參考； 除非類別已明確公開為 COM 元件，否則 <see langword="CreateObject" /> 無法用來在 Visual Basic 中建立類別的執行個體。</returns>
      <exception cref="T:System.Exception" vsli:raw="Server is unavailable">伺服器無法使用。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="No object of the specified type exists.">指定類型的物件不存在</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">根據運算式的評估結果，傳回兩個物件當中的其中一個。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt;. The expression you want to evaluate.">必要項。 <see langword="Boolean" />. 要評估的運算式。</param>
      <param name="TruePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;True&quot; /&gt;.">必要項。 <see langword="Object" />. 在 <paramref name="Expression" /> 評估為 <see langword="True" /> 時傳回。</param>
      <param name="FalsePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;False&quot; /&gt;.">必要項。 <see langword="Object" />. 在 <paramref name="Expression" /> 評估為 <see langword="False" /> 時傳回。</param>
      <returns vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">根據運算式的評估結果，傳回兩個物件當中的其中一個。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary vsli:raw="Indicates which button was pressed on a message box, returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">指出訊息方塊上按下了哪個按鈕，由 <see langword="MsgBox" /> 函式傳回。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary vsli:raw="Abort button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbort&quot; /&gt;.">按下 [中止] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbAbort" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary vsli:raw="Cancel button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCancel&quot; /&gt;.">按下 [取消] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbCancel" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary vsli:raw="Ignore button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbIgnore&quot; /&gt;.">按下 [忽略] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbIgnore" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary vsli:raw="No button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNo&quot; /&gt;.">按下 [否] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbNo" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary vsli:raw="OK button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOK&quot; /&gt;.">按下 [確定] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbOK" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary vsli:raw="Retry button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetry&quot; /&gt;.">按下 [重試] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbRetry" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary vsli:raw="Yes button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYes&quot; /&gt;.">按下 [是] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbYes" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary vsli:raw="Indicates which buttons to display when calling the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">表示呼叫 <see langword="MsgBox" /> 函式時要顯示的按鈕。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary vsli:raw="Abort, Retry, and Ignore buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbortRetryIgnore&quot; /&gt;.">[中止]、[重試] 和 [略過] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbAbortRetryIgnore" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary vsli:raw="Application modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbApplicationModal&quot; /&gt;.">應用程式強制回應訊息方塊。 這個成員相當於 Visual Basic 常數 <see langword="vbApplicationModal" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary vsli:raw="Critical message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCritical&quot; /&gt;.">重要訊息。 這個成員相當於 Visual Basic 常數 <see langword="vbCritical" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary vsli:raw="First button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton1&quot; /&gt;.">第一個按鈕是預設值。 這個成員相當於 Visual Basic 常數 <see langword="vbDefaultButton1" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary vsli:raw="Second button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton2&quot; /&gt;.">第二個按鈕是預設值。 這個成員相當於 Visual Basic 常數 <see langword="vbDefaultButton2" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary vsli:raw="Third button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton3&quot; /&gt;.">第三個按鈕是預設值。 這個成員相當於 Visual Basic 常數 <see langword="vbDefaultButton3" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary vsli:raw="Warning message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbExclamation&quot; /&gt;.">警告訊息。 這個成員相當於 Visual Basic 常數 <see langword="vbExclamation" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary vsli:raw="Information message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInformation&quot; /&gt;.">資訊訊息。 這個成員相當於 Visual Basic 常數 <see langword="vbInformation" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary vsli:raw="Help text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxHelp&quot; /&gt;.">說明文字。 這個成員相當於 Visual Basic 常數 <see langword="vbMsgBoxHelp" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary vsli:raw="Right-aligned text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRight&quot; /&gt;.">靠右對齊的文字。 這個成員相當於 Visual Basic 常數 <see langword="vbMsgBoxRight" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary vsli:raw="Right-to-left reading text (Hebrew and Arabic systems). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRtlReading&quot; /&gt;.">由右至左讀取的文字 (希伯來文和阿拉伯文系統)。 這個成員相當於 Visual Basic 常數 <see langword="vbMsgBoxRtlReading" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary vsli:raw="Foreground message box window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxSetForeground&quot; /&gt;.">前景訊息方塊視窗。 這個成員相當於 Visual Basic 常數 <see langword="vbMsgBoxSetForeground" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary vsli:raw="OK and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKCancel&quot; /&gt;.">[確定] 和 [取消] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbOKCancel" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary vsli:raw="OK button only (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKOnly&quot; /&gt;.">僅 [確定] 按鈕 (預設值)。 這個成員相當於 Visual Basic 常數 <see langword="vbOKOnly" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary vsli:raw="Warning query. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbQuestion&quot; /&gt;.">警告查詢。 這個成員相當於 Visual Basic 常數 <see langword="vbQuestion" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary vsli:raw="Retry and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetryCancel&quot; /&gt;.">[重試] 和 [取消] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbRetryCancel" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary vsli:raw="System modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystemModal&quot; /&gt;.">系統強制回應訊息方塊。 這個成員相當於 Visual Basic 常數 <see langword="vbSystemModal" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary vsli:raw="Yes and No buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNo&quot; /&gt;.">[是] 和 [否] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbYesNo" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary vsli:raw="Yes, No, and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNoCancel&quot; /&gt;.">[是]、[否] 和 [取消] 按鈕。 這個成員相當於 Visual Basic 常數 <see langword="vbYesNoCancel" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">此屬性支援 Visual Basic 中的 <see langword="My.Forms" /> 和 <see langword="My.WebServices" />。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">此屬性支援 Visual Basic 中的 <see langword="My.Forms" /> 和 <see langword="My.WebServices" />。</summary>
      <param name="typeToCollect" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName&quot; /&gt; property. The compiler generates accessor properties for classes that derive from this type.">
        <see langword="String" />. 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" /> 屬性。 編譯器會為衍生自此型別的類別產生存取子屬性。</param>
      <param name="createInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod&quot; /&gt; property. Specifies the method in the class that creates the type's instances.">
        <see langword="String" />. 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" /> 屬性。 指定類別中建立型別之執行個體的方法。</param>
      <param name="disposeInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod&quot; /&gt; property. Specifies the method in the class that disposes of the type's instances.">
        <see langword="String" />. 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" /> 屬性。 在處置型別之執行個體的類別中指定方法。</param>
      <param name="defaultInstanceAlias" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias&quot; /&gt; property. Specifies the name of the property that returns the default instance of the class.">
        <see langword="String" />. 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" /> 屬性。 指定會傳回類別之預設執行個體的屬性名稱。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">此屬性支援 Visual Basic 中的 <see langword="My" />。</summary>
      <returns vsli:raw="Specifies the method in the class that creates the type's instances.">指定類別中建立型別之執行個體的方法。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">此屬性支援 Visual Basic 中的 <see langword="My" />。</summary>
      <returns vsli:raw="Specifies the name of the property that returns the default instance of the class.">指定會傳回類別之預設執行個體的屬性名稱。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">此屬性支援 Visual Basic 中的 <see langword="My" />。</summary>
      <returns vsli:raw="Specifies the method in the class that disposes of the type's instances.">在處置型別之執行個體的類別中指定方法。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">此屬性支援 Visual Basic 中的 <see langword="My" />。</summary>
      <returns vsli:raw="Specifies the name of the type for which the compiler generates accessor properties.">指定型別的名稱，編譯器會為此型別產生存取子屬性。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>提供用於操作剪貼簿的方法。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>提供屬性和方法，以處理磁碟機、檔案和目錄。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>合併兩個路徑並傳回正確格式的路徑。</summary>
      <param name="baseDirectory">
        <see langword="String" />. 要合併的第一個路徑。</param>
      <param name="relativePath">
        <see langword="String" />. 要合併的第二個路徑。</param>
      <returns>指定之路徑的組合。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> 或 <paramref name="relativePath" /> 是格式不正確的路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>將目錄複製至其他目錄。</summary>
      <param name="sourceDirectoryName">要複製的目錄。</param>
      <param name="destinationDirectoryName">要複製目錄的目標位置。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">來源目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">來源路徑和目標路徑相同。</exception>
      <exception cref="T:System.InvalidOperationException">作業是循環的。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的資料夾名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目的檔案存在，但無法存取它。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>將目錄複製至其他目錄。</summary>
      <param name="sourceDirectoryName">要複製的目錄。</param>
      <param name="destinationDirectoryName">要複製目錄的目標位置。</param>
      <param name="showUI">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">來源目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">來源路徑和目標路徑相同。</exception>
      <exception cref="T:System.InvalidOperationException">作業是循環的。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的資料夾名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目的檔案存在，但無法存取它。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> 設定為 <see langword="UIOption.AllDialogs" />，且使用者會取消作業，或是無法複製目錄中的一個或多個檔案。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>將目錄複製至其他目錄。</summary>
      <param name="sourceDirectoryName">要複製的目錄。</param>
      <param name="destinationDirectoryName">要複製目錄的目標位置。</param>
      <param name="showUI">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定使用者在作業期間按一下 [取消] 時應該執行的動作。 預設為 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">來源目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">來源路徑和目標路徑相同。</exception>
      <exception cref="T:System.InvalidOperationException">作業是循環的。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的資料夾名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目的檔案存在，但無法存取它。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> 設定為 <see langword="UIOption.AllDialogs" />，且使用者會取消作業，或是無法複製目錄中的一個或多個檔案。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>將目錄複製至其他目錄。</summary>
      <param name="sourceDirectoryName">要複製的目錄。</param>
      <param name="destinationDirectoryName">要複製目錄的目標位置。</param>
      <param name="overwrite">若要覆寫現有檔案，則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> 或 <paramref name="sourceDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">來源目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">來源路徑和目標路徑相同。</exception>
      <exception cref="T:System.InvalidOperationException">作業是循環的。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的資料夾名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">目的檔案存在，但無法存取它。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>將檔案複製至新的位置。</summary>
      <param name="sourceFileName">要複製的檔案。</param>
      <param name="destinationFileName">要在其中貼上複製檔案的位置</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路徑資訊。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目標目錄中具有相同名稱的檔案正在使用中。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>將檔案複製至新的位置。</summary>
      <param name="sourceFileName">要複製的檔案。</param>
      <param name="destinationFileName">要在其中貼上複製檔案的位置</param>
      <param name="showUI">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路徑資訊。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目的檔存在且 <paramref name="overwrite" /> 設定為 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>將檔案複製至新的位置。</summary>
      <param name="sourceFileName">要複製的檔案。</param>
      <param name="destinationFileName">要在其中貼上複製檔案的位置</param>
      <param name="showUI">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定使用者在作業期間按一下 [取消] 時應該執行的動作。 預設為 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路徑資訊。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目的檔存在且 <paramref name="overwrite" /> 設定為 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> 設為 <see langword="ThrowException" />，而且使用者已取消作業或發生未指定的 I/O 錯誤。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>將檔案複製至新的位置。</summary>
      <param name="sourceFileName">要複製的檔案。</param>
      <param name="destinationFileName">要在其中貼上複製檔案的位置</param>
      <param name="overwrite">如果應該覆寫現有的檔案則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> 包含路徑資訊。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 或 <paramref name="sourceFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException">目的檔存在且 <paramref name="overwrite" /> 設定為 <see langword="False" />。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>建立目錄。</summary>
      <param name="directory">目錄的名稱和位置。</param>
      <exception cref="T:System.ArgumentException">目錄名稱的格式不正確。 例如，它包含不合法的字元或只是泛空白字元。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException">目錄名稱太長。</exception>
      <exception cref="T:System.NotSupportedException">目錄名稱只是冒號 (:)</exception>
      <exception cref="T:System.IO.IOException">所要建立之目錄的父目錄是唯讀的。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者沒有建立目錄的權限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>取得或設定目前的目錄。</summary>
      <returns>檔案 I/O 作業的目前目錄。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路徑無效。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>刪除目錄。</summary>
      <param name="directory">要刪除的目錄。</param>
      <param name="onDirectoryNotEmpty">指定如果要刪除的目錄內包含檔案或目錄時，應該要如何處理。 預設為 <see langword="DeleteDirectoryOption.DeleteAllContents" />。</param>
      <exception cref="T:System.ArgumentException">路徑是長度為零的字串、格式錯誤、只包含空白字元，或是包含無效的字元 (包括萬用字元 (Wildcard Character))。 路徑是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目錄不存在，或此目錄為檔案。</exception>
      <exception cref="T:System.IO.IOException">目錄或子目錄中的檔案正在使用中。</exception>
      <exception cref="T:System.NotSupportedException">目錄名稱包含冒號 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.Security.SecurityException">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.OperationCanceledException">使用者取消作業或無法刪除目錄。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>刪除目錄。</summary>
      <param name="directory">要刪除的目錄。</param>
      <param name="showUI">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">指定已刪除的檔案是否要傳送至 [資源回收筒]。 預設為 <see langword="RecycleOption.DeletePermanently" />。</param>
      <exception cref="T:System.ArgumentException">路徑是長度為零的字串、格式錯誤、只包含空白字元，或是包含無效的字元 (包括萬用字元 (Wildcard Character))。 路徑是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目錄不存在，或此目錄為檔案。</exception>
      <exception cref="T:System.IO.IOException">目錄或子目錄中的檔案正在使用中。</exception>
      <exception cref="T:System.NotSupportedException">目錄名稱包含冒號 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.Security.SecurityException">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.OperationCanceledException">使用者取消作業或無法刪除目錄。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>刪除目錄。</summary>
      <param name="directory">要刪除的目錄。</param>
      <param name="showUI">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">指定已刪除的檔案是否要傳送至 [資源回收筒]。 預設為 <see langword="RecycleOption.DeletePermanently" />。</param>
      <param name="onUserCancel">指定如果使用者按一下 [取消]，是否擲回例外狀況。</param>
      <exception cref="T:System.ArgumentException">路徑是長度為零的字串、格式錯誤、只包含空白字元，或是包含無效的字元 (包括萬用字元 (Wildcard Character))。 路徑是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目錄不存在，或此目錄為檔案。</exception>
      <exception cref="T:System.IO.IOException">目錄或子目錄中的檔案正在使用中。</exception>
      <exception cref="T:System.NotSupportedException">目錄名稱包含冒號 (:)。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.Security.SecurityException">使用者未具備必要的使用權限。</exception>
      <exception cref="T:System.OperationCanceledException">使用者取消作業或無法刪除目錄。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>刪除檔案。</summary>
      <param name="file">要刪除之檔案的檔名及路徑。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它在必須指定檔案的地方含有結尾的斜線，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.IOException">檔案正在使用中。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者沒有刪除檔案的使用權限，或者檔案是唯讀的。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>刪除檔案。</summary>
      <param name="file">要刪除之檔案的檔名及路徑。</param>
      <param name="showUI">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">已刪除的檔案是否要傳送至 [資源回收筒]。 預設為 <see langword="RecycleOption.DeletePermanently" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它在必須指定檔案的地方含有結尾的斜線，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.IOException">檔案正在使用中。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者沒有刪除檔案的使用權限，或者檔案是唯讀的。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>刪除檔案。</summary>
      <param name="file">要刪除之檔案的檔名及路徑。</param>
      <param name="showUI">是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="recycle">已刪除的檔案是否要傳送至 [資源回收筒]。 預設為 <see langword="RecycleOption.DeletePermanently" />。</param>
      <param name="onUserCancel">指定是否在使用者取消作業時擲回例外狀況。 預設為 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它在必須指定檔案的地方含有結尾的斜線，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.IO.IOException">檔案正在使用中。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者沒有刪除檔案的使用權限，或者檔案是唯讀的。</exception>
      <exception cref="T:System.OperationCanceledException">使用者取消作業並且 <paramref name="onUserCancel" /> 設為 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>如果指定的目錄存在，則傳回 <see langword="True" />。</summary>
      <param name="directory">目錄的路徑。</param>
      <returns>如果目錄存在則為 <see langword="True" />，否則為 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>傳回所有可用磁碟機名稱的唯讀集合。</summary>
      <returns>所有可用磁碟機的唯讀集合，做為 <see cref="T:System.IO.DriveInfo" /> 物件。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>如果指定的檔案存在，則傳回 <see langword="True" />。</summary>
      <param name="file">檔案的名稱和路徑。</param>
      <returns>如果檔案存在，則傳回 <see langword="True" />，否則這個方法會傳回 <see langword="False" />。</returns>
      <exception cref="T:System.ArgumentException">檔案名稱以反斜線 (\) 結尾。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>傳回唯讀的字串集合，表示含有指定文字的檔案名稱。</summary>
      <param name="directory">要搜尋的目錄。</param>
      <param name="containsText">搜尋的文字。</param>
      <param name="ignoreCase">如果搜尋應該區分大小寫，則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="True" />。</param>
      <param name="searchType">是否包含子資料夾。 預設為 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <returns>包含指定文字的檔案名稱唯讀集合。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串；它只包含空白字元；它包含無效的字元；或其為裝置路徑 (開頭為 <c>\.&lt;/code&gt;)。</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目錄指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">指定的目錄路徑包含冒號 (:) 或格式無效。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>傳回唯讀的字串集合，表示含有指定文字的檔案名稱。</summary>
      <param name="directory">要搜尋的目錄。</param>
      <param name="containsText">搜尋的文字。</param>
      <param name="ignoreCase">如果搜尋應該區分大小寫，則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="True" />。</param>
      <param name="searchType">是否包含子資料夾。 預設為 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="fileWildcards">要符合的模式。</param>
      <returns>包含指定文字的檔案名稱唯讀集合。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串；它只包含空白字元；它包含無效的字元；或其為裝置路徑 (開頭為 <c>\.&lt;/code&gt;)。</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目錄指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">指定的目錄路徑包含冒號 (:) 或格式無效。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>傳回字串的集合，表示目錄內子目錄的路徑名稱。</summary>
      <param name="directory">目錄的名稱和路徑。</param>
      <returns>在指定目錄內，子目錄路徑名稱的唯讀集合。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目錄指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>傳回字串的集合，表示目錄內子目錄的路徑名稱。</summary>
      <param name="directory">目錄的名稱和路徑。</param>
      <param name="searchType">是否包含子資料夾。 預設為 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="wildcards">要符合名稱的模式。</param>
      <returns>在指定目錄內，子目錄路徑名稱的唯讀集合。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">一個或多個指定的萬用字元 (Wildcard Character) 為 <see langword="Nothing" />、空字串，或只包含空格。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">指定的目錄指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>傳回指定之路徑的 <see cref="T:System.IO.DirectoryInfo" /> 物件。</summary>
      <param name="directory">
        <see langword="String" />. 目錄的路徑。</param>
      <returns>指定之路徑的 <see cref="T:System.IO.DirectoryInfo" /> 物件。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">目錄路徑包含冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>傳回指定之磁碟機的 <see cref="T:System.IO.DriveInfo" /> 物件。</summary>
      <param name="drive">要檢查的磁碟機。</param>
      <returns>指定之磁碟機的 <see cref="T:System.IO.DriveInfo" /> 物件。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>傳回指定之檔案的 <see cref="T:System.IO.FileInfo" /> 物件。</summary>
      <param name="file">檔案的名稱和路徑。</param>
      <returns>指定之檔案的 <see cref="T:System.IO.FileInfo" /> 物件。</returns>
      <exception cref="T:System.ArgumentException">路徑名稱的格式不正確。 例如包含無效字元或只有泛空白字元。 檔案名稱具有斜線標記。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.NotSupportedException">路徑在字串中間包含一個冒號。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑太長。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者缺少對檔案的 ACL (存取控制清單) 存取。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>傳回唯讀的字串集合，而該字串集合表示目錄內檔案的名稱。</summary>
      <param name="directory">要搜尋的目錄。</param>
      <returns>所指定目錄中的唯讀檔案名稱集合。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">要搜尋的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> 指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>傳回唯讀的字串集合，而該字串集合表示目錄內檔案的名稱。</summary>
      <param name="directory">要搜尋的目錄。</param>
      <param name="searchType">是否包含子資料夾。 預設為 <see langword="SearchOption.SearchTopLevelOnly" />。</param>
      <param name="wildcards">要符合的模式。</param>
      <returns>所指定目錄中的唯讀檔案名稱集合。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">要搜尋的目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> 指向現有的檔案。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者缺乏必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>在提供的路徑之外剖析檔名。</summary>
      <param name="path">必要項。 要剖析的路徑。 <see langword="String" />.</param>
      <returns>來自指定路徑的檔名。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>傳回提供之路徑的父路徑。</summary>
      <param name="path">要檢查的路徑。</param>
      <returns>所提供之路徑的父路徑。</returns>
      <exception cref="T:System.ArgumentException">路徑沒有父路徑，因為它是根路徑。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>在磁碟上以唯一命名方式建立零位元組的暫存檔案，然後傳回該檔案的完整路徑。</summary>
      <returns>
        <see langword="String" />，包含暫存檔案的完整路徑。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>將目錄從某個位置移至另一個位置。</summary>
      <param name="sourceDirectoryName">要移動的目錄其路徑。</param>
      <param name="destinationDirectoryName">來源目錄要移往之目錄的路徑。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">來源是根目錄，或者來源路徑與目標路徑相同。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.InvalidOperationException">作業是循環的。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>將目錄從某個位置移至另一個位置。</summary>
      <param name="sourceDirectoryName">要移動的目錄其路徑。</param>
      <param name="destinationDirectoryName">來源目錄要移往之目錄的路徑。</param>
      <param name="showUI">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">目標目錄已經存在，而且 <paramref name="overwrite" /> 設定為 <see langword="False" />。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.InvalidOperationException">作業是循環的。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>將目錄從某個位置移至另一個位置。</summary>
      <param name="sourceDirectoryName">要移動的目錄其路徑。</param>
      <param name="destinationDirectoryName">來源目錄要移往之目錄的路徑。</param>
      <param name="showUI">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定是否在使用者取消作業時擲回例外狀況。 預設為 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> 設為 <see langword="ThrowException" />，且無法複製檔案的子目錄。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> 設定為 <see langword="ThrowException" />，而且使用者會取消作業，或是無法完成作業。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.InvalidOperationException">作業是循環的。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>將目錄從某個位置移至另一個位置。</summary>
      <param name="sourceDirectoryName">要移動的目錄其路徑。</param>
      <param name="destinationDirectoryName">來源目錄要移往之目錄的路徑。</param>
      <param name="overwrite">如果應該覆寫現有的目錄則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元，或者它是裝置路徑 (開頭為 \\.\)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">目標目錄已經存在，而且 <paramref name="overwrite" /> 設定為 <see langword="False" />。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.InvalidOperationException">作業是循環的。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>將檔案移至新的位置。</summary>
      <param name="sourceFileName">要移動的檔案其路徑。</param>
      <param name="destinationFileName">要移入檔案之目錄的路徑。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>將檔案移至新的位置。</summary>
      <param name="sourceFileName">要移動的檔案其路徑。</param>
      <param name="destinationFileName">要移入檔案之目錄的路徑。</param>
      <param name="showUI">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>將檔案移至新的位置。</summary>
      <param name="sourceFileName">要移動的檔案其路徑。</param>
      <param name="destinationFileName">要移入檔案之目錄的路徑。</param>
      <param name="showUI">指定是否要以視覺方式追蹤作業進度。 預設為 <see langword="UIOption.OnlyErrorDialogs" />。</param>
      <param name="onUserCancel">指定是否在使用者取消作業時擲回例外狀況。 預設為 <see langword="UICancelOption.ThrowException" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> 設定為 <see langword="ThrowException" />，而且使用者已取消作業或發生未指定的 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>將檔案移至新的位置。</summary>
      <param name="sourceFileName">要移動的檔案其路徑。</param>
      <param name="destinationFileName">要移入檔案之目錄的路徑。</param>
      <param name="overwrite">若要覆寫現有檔案，則為 <see langword="True" />，否則為 <see langword="False" />。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">來源檔案無效或不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>
        <see langword="OpenTextFieldParser" /> 方法能讓您建立 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物牛，而這個物件有助於輕鬆有效率地剖析結構化文字檔 (例如記錄檔)。 可以使用 <see langword="TextFieldParser" /> 物件，讀取分隔的和固定寬度的檔案。</summary>
      <param name="file">要使用 <see langword="TextFieldParser" /> 開啟的檔案。</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />，會讀取指定的檔案。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">無法使用指定的格式剖析資料列。 例外狀況訊息指出造成例外狀況的文字行，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 屬性被指派至包含於該文字行中的文字。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>
        <see langword="OpenTextFieldParser" /> 方法能讓您建立 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物牛，而這個物件有助於輕鬆有效率地剖析結構化文字檔 (例如記錄檔)。 可以使用 <see langword="TextFieldParser" /> 物件，讀取分隔的和固定寬度的檔案。</summary>
      <param name="file">要使用 <see langword="TextFieldParser" /> 開啟的檔案。</param>
      <param name="fieldWidths">欄位的寬度。</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />，會讀取指定的檔案。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">無法使用指定的格式剖析資料列。 例外狀況訊息指出造成例外狀況的文字行，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 屬性被指派至包含於該文字行中的文字。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>
        <see langword="OpenTextFieldParser" /> 方法能讓您建立 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物牛，而這個物件有助於輕鬆有效率地剖析結構化文字檔 (例如記錄檔)。 可以使用 <see langword="TextFieldParser" /> 物件，讀取分隔的和固定寬度的檔案。</summary>
      <param name="file">要使用 <see langword="TextFieldParser" /> 開啟的檔案。</param>
      <param name="delimiters">欄位的分隔符號。</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />，會讀取指定的檔案。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">無法使用指定的格式剖析資料列。 例外狀況訊息指出造成例外狀況的文字行，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> 屬性被指派至包含於該文字行中的文字。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>開啟 <see cref="T:System.IO.StreamReader" /> 物件，以便從檔案讀取。</summary>
      <param name="file">要讀取的檔案。</param>
      <returns>會讀取檔案的 <see cref="T:System.IO.StreamReader" /> 物件</returns>
      <exception cref="T:System.ArgumentException">檔案名稱以反斜線 (\) 結尾。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到指定的檔案。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏讀取檔案的必要使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>開啟 <see cref="T:System.IO.StreamReader" /> 物件，以便從檔案讀取。</summary>
      <param name="file">要讀取的檔案。</param>
      <param name="encoding">要用於檔案內容的編碼方式。 預設為 ASCII。</param>
      <returns>會讀取檔案的 <see cref="T:System.IO.StreamReader" /> 物件</returns>
      <exception cref="T:System.ArgumentException">檔案名稱以反斜線 (\) 結尾。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到指定的檔案。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏讀取檔案的必要使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>開啟 <see cref="T:System.IO.StreamWriter" /> 物件，以便寫入指定的檔案。</summary>
      <param name="file">要寫入的檔案。</param>
      <param name="append">
        <see langword="True" /> 表示要將內容附加到檔案，<see langword="False" /> 表示要覆寫檔案的內容。 預設為 <see langword="False" />。</param>
      <returns>要寫入到指定檔案的 <see cref="T:System.IO.StreamWriter" /> 物件。</returns>
      <exception cref="T:System.ArgumentException">檔案名稱以斜線結束。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>開啟 <see cref="T:System.IO.StreamWriter" />，以便寫入指定的檔案。</summary>
      <param name="file">要寫入的檔案。</param>
      <param name="append">
        <see langword="True" /> 表示要附加至檔案內容，<see langword="False" /> 表示要覆寫檔案內容。 預設為 <see langword="False" />。</param>
      <param name="encoding">寫入檔案時使用的編碼方式。 預設為 ASCII。</param>
      <returns>要寫入到指定檔案的 <see cref="T:System.IO.StreamWriter" /> 物件。</returns>
      <exception cref="T:System.ArgumentException">檔案名稱以斜線結束。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>以位元組陣列傳回檔案內容。</summary>
      <param name="file">要讀取的檔案。</param>
      <returns>
        <see langword="Byte" /> 陣列，其中包含檔案內容。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>以 <see langword="String" /> 傳回文字檔內容。</summary>
      <param name="file">要讀取之檔案的名稱和路徑。</param>
      <returns>
        <see langword="String" />，其中包含檔案內容。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>以 <see langword="String" /> 傳回文字檔內容。</summary>
      <param name="file">要讀取之檔案的名稱和路徑。</param>
      <param name="encoding">讀取檔案時使用的字元編碼方式。 預設為 UTF-8。</param>
      <returns>
        <see langword="String" />，其中包含檔案內容。</returns>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>重新命名目錄。</summary>
      <param name="directory">要重新命名的目錄路徑和名稱。</param>
      <param name="newName">目錄的新名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> 包含路徑資訊。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> 為 <see langword="Nothing" />。  
-或- 
 <paramref name="newName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">目錄不存在。</exception>
      <exception cref="T:System.IO.IOException">已存在 <paramref name="newName" /> 中所指定之名稱的檔案或目錄。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>重新命名檔案。</summary>
      <param name="file">要重新命名的檔案。</param>
      <param name="newName">檔案的新名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> 包含路徑資訊，或以反斜線 (\) 結尾。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" />。  
-或- 
 <paramref name="newName" /> 為 <see langword="Nothing" /> 或空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException">已存在 <paramref name="newName" /> 中所指定之名稱的檔案或目錄。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
      <exception cref="T:System.UnauthorizedAccessException">使用者未具備必要的使用權限。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>取得可以提供用於存取常用參考目錄之屬性的物件。</summary>
      <returns>這個屬性會傳回電腦的 <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> 物件。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>將資料寫入二進位檔案。</summary>
      <param name="file">要將資料寫入其中的檔案其路徑和檔名。</param>
      <param name="data">要寫入檔案的資料。</param>
      <param name="append">
        <see langword="True" /> 表示要附加至檔案內容，<see langword="False" /> 表示要覆寫檔案內容。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>將文字寫入檔案。</summary>
      <param name="file">要寫入的檔案。</param>
      <param name="text">要寫入檔案的文字。</param>
      <param name="append">
        <see langword="True" /> 表示要將內容附加到檔案，<see langword="False" /> 表示要覆寫檔案的內容。 預設為 <see langword="False" />。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>將文字寫入檔案。</summary>
      <param name="file">要寫入的檔案。</param>
      <param name="text">要寫入檔案的文字。</param>
      <param name="append">
        <see langword="True" /> 表示要將內容附加到檔案，<see langword="False" /> 表示要覆寫檔案的內容。 預設為 <see langword="False" />。</param>
      <param name="encoding">寫入檔案時要使用的編碼方式。 預設為 UTF-8。</param>
      <exception cref="T:System.ArgumentException">因下列其中一項原因而導致路徑無效：它是長度為零的字串、它只包含空白字元、它包含無效的字元、它是裝置路徑 (開頭為 \\.\)，或者它的結尾含有斜線。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> 為 <see langword="Nothing" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException">檔案不存在。</exception>
      <exception cref="T:System.IO.IOException">檔案正由另一個程序使用中，或發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException">路徑超過系統定義的最大長度。</exception>
      <exception cref="T:System.NotSupportedException">路徑中的檔案或目錄名稱含有冒號 (:)，或者是無效的格式。</exception>
      <exception cref="T:System.OutOfMemoryException">沒有足夠的記憶體可將字串寫入緩衝區。</exception>
      <exception cref="T:System.Security.SecurityException">使用者缺乏必要的使用權限來檢視路徑。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>提供屬性和方法，以操作登錄。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>提供屬性，以存取常用的參考目錄。</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>取得路徑名稱，該路徑指向所有使用者的 Application Data 目錄。</summary>
      <returns>所有使用者的 Application Data 目錄路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>取得路徑名稱，該路徑指向目前使用者的 Application Data 目錄。</summary>
      <returns>目前使用者的 Application Data 目錄路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>取得路徑名稱，該路徑指向 Desktop 目錄。</summary>
      <returns>Desktop 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>取得指向 [我的文件] 目錄的路徑名稱。</summary>
      <returns>[我的文件] 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>取得路徑名稱，該路徑指向 My Music 目錄。</summary>
      <returns>[我的音樂] 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>取得路徑名稱，該路徑指向 My Pictures 目錄。</summary>
      <returns>[我的圖片] 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>取得指向 Program Files 目錄的路徑。</summary>
      <returns>Program Files目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>取得路徑名稱，該路徑指向 Programs 目錄。</summary>
      <returns>Programs 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>取得路徑名稱，該路徑指向 Temp 目錄。</summary>
      <returns>Temp 目錄的路徑。</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">路徑是空的，通常是因為作業系統不支援目錄。</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">表示在呼叫檔案存取函式時，要如何開啟檔案。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary vsli:raw="Read and write access permitted. This is the default.">允許讀取和寫入的權限。 這是預設值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary vsli:raw="Read access permitted.">允許讀取權限。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary vsli:raw="Read and write access permitted.">允許讀取和寫入的權限。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary vsli:raw="Write access permitted.">允許寫入權限。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">表示在呼叫檔案存取函式時，要如何開啟檔案。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary vsli:raw="File opened to append to it. Default.">開啟檔案附加到其中。 預設值：</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary vsli:raw="File opened for binary access.">開啟檔案進行二進位存取。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary vsli:raw="File opened for read access.">開啟檔案進行讀取存取。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary vsli:raw="File opened for write access.">開啟檔案進行寫入存取。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary vsli:raw="File opened for random access.">開啟檔案進行隨機存取。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">表示在呼叫檔案存取函式時，要如何開啟檔案。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary vsli:raw="&lt;see langword=&quot;LockReadWrite&quot; /&gt;. This is the default.">
        <see langword="LockReadWrite" />. 這是預設值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary vsli:raw="Other processes cannot read the file.">其他處理序無法讀取檔案。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary vsli:raw="Other processes cannot read or write to the file.">其他處理序無法讀取或寫入檔案。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary vsli:raw="Other processes cannot write to the file.">其他處理序無法寫入檔案。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary vsli:raw="Any process can read or write to the file.">任何處理序都可以讀取或寫入檔案。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">這個類別支援 Visual Basic <see langword="Print" /> 和 <see langword="PrintLine" /> 函式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">這個欄位支援 Visual Basic <see langword="Print" /> 和 <see langword="PrintLine" /> 函式。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary vsli:raw="The &lt;see langword=&quot;Strings&quot; /&gt; module contains procedures used to perform string operations.">
        <see langword="Strings" /> 模組包含用來執行字串作業的程序。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">傳回整數值，以代表某字元的對應字元碼。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必要項。 任何有效的 <see langword="Char" /> 或 <see langword="String" /> 運算式。 如果 <paramref name="String" /> 為 <see langword="String" /> 運算式，則只有字串的第一個字元才會用於輸入。 如果 <paramref name="String" /> 為 <see langword="Nothing" /> 或者不包含任何字元，則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</param>
      <returns vsli:raw="The character code corresponding to a character.">對應至字元的字元碼。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">傳回整數值，以代表某字元的對應字元碼。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必要項。 任何有效的 <see langword="Char" /> 或 <see langword="String" /> 運算式。 如果 <paramref name="String" /> 為 <see langword="String" /> 運算式，則只有字串的第一個字元才會用於輸入。 如果 <paramref name="String" /> 為 <see langword="Nothing" /> 或者不包含任何字元，則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</param>
      <returns vsli:raw="The character code corresponding to a character.">對應至字元的字元碼。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">傳回整數值，以代表某字元的對應字元碼。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必要項。 任何有效的 <see langword="Char" /> 或 <see langword="String" /> 運算式。 如果 <paramref name="String" /> 為 <see langword="String" /> 運算式，則只有字串的第一個字元才會用於輸入。 如果 <paramref name="String" /> 為 <see langword="Nothing" /> 或者不包含任何字元，則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</param>
      <returns vsli:raw="The character code corresponding to a character.">對應至字元的字元碼。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">傳回整數值，以代表某字元的對應字元碼。</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">必要項。 任何有效的 <see langword="Char" /> 或 <see langword="String" /> 運算式。 如果 <paramref name="String" /> 為 <see langword="String" /> 運算式，則只有字串的第一個字元才會用於輸入。 如果 <paramref name="String" /> 為 <see langword="Nothing" /> 或者不包含任何字元，則會發生 <see cref="T:System.ArgumentException" /> 錯誤。</param>
      <returns vsli:raw="The character code corresponding to a character.">對應至字元的字元碼。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">傳回與指定的字元碼關聯的字元。</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">必要項。 <see langword="Integer" /> 運算式，表示字元的<c>字碼指標</c>或字元碼。</param>
      <returns vsli:raw="The character associated with the specified character code.">與指定之字元碼關聯的字元。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; 0 or &amp;gt; 255 for &lt;see langword=&quot;Chr&quot; /&gt;.">針對 <see langword="Chr" /> 為 <paramref name="CharCode" /> &lt; 0 或 &gt; 255。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">傳回與指定的字元碼關聯的字元。</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">必要項。 <see langword="Integer" /> 運算式，表示字元的<c>字碼指標</c>或字元碼。</param>
      <returns vsli:raw="The character associated with the specified character code.">與指定之字元碼關聯的字元。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; -32768 or &amp;gt; 65535 for &lt;see langword=&quot;ChrW&quot; /&gt;.">針對 <see langword="ChrW" /> 為 <paramref name="CharCode" /> &lt; -32768 或 &gt; 65535。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <see langword="String" /> 陣列子集。</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">必要項。 要搜尋的一維字串陣列。</param>
      <param name="Match" vsli:raw="Required. String to search for.">必要項。 要搜尋的字串。</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">選擇性。 <see langword="Boolean" /> 值，表示是否要傳回包含或排除 <paramref name="Match" /> 的子字串。 如果 <paramref name="Include" /> 為 <see langword="True" />，則 <see langword="Filter" /> 函式會傳回包含 <paramref name="Match" /> 做為子字串的陣列子集。 如果 <paramref name="Include" /> 為 <see langword="False" />，則 <see langword="Filter" /> 函式會傳回未包含 <paramref name="Match" /> 做為子字串的陣列子集。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">選擇性。 數值，表示要使用的字串比較類型。 如需有關值的資訊，請參閱＜設定＞。</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">以零起始的陣列，其中包含以指定篩選準則為基礎的 <see langword="String" /> 陣列子集。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> 是 <see langword="Nothing" /> 或不是一維陣列。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">傳回以零起始的陣列，其中包含以指定篩選準則為依據的 <see langword="String" /> 陣列子集。</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">必要項。 要搜尋的一維字串陣列。</param>
      <param name="Match" vsli:raw="Required. String to search for.">必要項。 要搜尋的字串。</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">選擇性。 <see langword="Boolean" /> 值，表示是否要傳回包含或排除 <paramref name="Match" /> 的子字串。 如果 <paramref name="Include" /> 為 <see langword="True" />，則 <see langword="Filter" /> 函式會傳回包含 <paramref name="Match" /> 做為子字串的陣列子集。 如果 <paramref name="Include" /> 為 <see langword="False" />，則 <see langword="Filter" /> 函式會傳回未包含 <paramref name="Match" /> 做為子字串的陣列子集。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">選擇性。 數值，表示要使用的字串比較類型。 如需有關值的資訊，請參閱＜設定＞。</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">以零起始的陣列，其中包含以指定篩選準則為基礎的 <see langword="String" /> 陣列子集。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> 是 <see langword="Nothing" /> 或不是一維陣列。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary vsli:raw="Returns a string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">傳回字串，其格式化方式是根據格式 <see langword="String" /> 運算式內包含的指令。</summary>
      <param name="Expression" vsli:raw="Required. Any valid expression.">必要項。 任何有效的運算式。</param>
      <param name="Style" vsli:raw="Optional. A valid named or user-defined format &lt;see langword=&quot;String&quot; /&gt; expression.">選擇性。 有效的具名或使用者定義的格式 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">字串，其格式化方式是根據格式 <see langword="String" /> 運算式內包含的指令。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.">使用 [系統] 控制台中定義的貨幣符號，傳回格式化成貨幣值的運算式。</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">必要項。 要格式化的運算式。</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. Default value is -1, which indicates that the computer's regional settings are used.">選擇性。 數值，表示小數點右邊要顯示多少位。 預設值為 -1，表示要使用電腦的地區設定。</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not a leading zero is displayed for fractional values. See &quot;Remarks&quot; for values.">選擇性。 <see cref="T:Microsoft.VisualBasic.TriState" /> 列舉，表示是否要顯示小數值前面的零。 如需值，請參閱＜備註＞。</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not to place negative values within parentheses. See &quot;Remarks&quot; for values.">選擇性。 <see cref="T:Microsoft.VisualBasic.TriState" /> 列舉，表示是否要將負值放在括號內。 如需值，請參閱＜備註＞。</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See &quot;Remarks&quot; for values.">選擇性。 <see cref="T:Microsoft.VisualBasic.TriState" /> 列舉，表示是否使用電腦的地區設定中指定之群組分隔符號將數字分組。 如需值，請參閱＜備註＞。</param>
      <returns vsli:raw="An expression formatted as a currency value using the currency symbol defined in the system control panel.">使用 [系統] 控制台中定義的貨幣符號，格式化成貨幣值的運算式。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Number of digits after decimal point is greater than 99.">小數點後的數字超過 99 個。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">型別不是數字。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary vsli:raw="Returns a string expression representing a date/time value.">傳回表示日期/時間值的字串運算式。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Date&quot; /&gt; expression to be formatted.">必要項。 要格式化的 <see langword="Date" /> 運算式。</param>
      <param name="NamedFormat" vsli:raw="Optional. Numeric value that indicates the date/time format used. If omitted, &lt;see langword=&quot;DateFormat.GeneralDate&quot; /&gt; is used.">選擇性。 數值，表示使用的日期/時間格式。 如果省略，則會使用 <see langword="DateFormat.GeneralDate" />。</param>
      <returns vsli:raw="A string expression representing a date/time value.">表示日期/時間值的字串運算式。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NamedFormat&quot; /&gt; setting is not valid.">
        <paramref name="NamedFormat" /> 設定無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a number.">傳回格式化成數字的運算式。</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">必要項。 要格式化的運算式。</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. The default value is -1, which indicates that the computer's regional settings are used.">選擇性。 數值，表示小數點右邊要顯示多少位。 預設值為 -1，表示要使用電腦的地區設定。</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether a leading 0 is displayed for fractional values. See &quot;Settings&quot; for values.">選擇性。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常數，表示是否要顯示小數值的前置 0 字元。 如需有關值的資訊，請參閱＜設定＞。</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether to place negative values within parentheses. See &quot;Settings&quot; for values.">選擇性。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常數，表示是否要將負值放在括號內。 如需有關值的資訊，請參閱＜設定＞。</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">選擇性。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常數，指出是否使用地區設定中指定的群組分隔符號將數字分組。 如需有關值的資訊，請參閱＜設定＞。</param>
      <returns vsli:raw="An expression formatted as a number.">格式化成數字的運算式。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">型別不是數字。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">傳回格式化為百分比 (也就是乘以 100) 且尾端包含 % 字元的運算式。</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">必要項。 要格式化的運算式。</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places to the right of the decimal are displayed. Default value is -1, which indicates that the locale settings are used.">選擇性。 會顯示數字值，指出小數點右邊顯示多少位數。 預設值為 -1，表示使用的地區設定。</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not a leading zero displays for fractional values. See &quot;Settings&quot; for values.">選擇性。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常數，指出分數值是否顯示前置的零。 如需有關值的資訊，請參閱＜設定＞。</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not to place negative values within parentheses. See &quot;Settings&quot; for values.">選擇性。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常數，指出是否應將負值放在括號內。 如需有關值的資訊，請參閱＜設定＞。</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">選擇性。 <see cref="T:Microsoft.VisualBasic.TriState" /> 常數，指出是否使用地區設定中指定的群組分隔符號將數字分組。 如需有關值的資訊，請參閱＜設定＞。</param>
      <returns vsli:raw="An expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">格式化為百分比 (也就是乘以 100) 且尾端包含 % 字元的運算式。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">型別不是數字。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">傳回 <see langword="Char" /> 值，表示提供的字串內指定之索引的字元。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的 <see langword="String" /> 運算式。</param>
      <param name="Index" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The (1-based) index of the character in &lt;paramref name=&quot;str&quot; /&gt; to be returned.">必要項。 <see langword="Integer" /> 運算式。 所要傳回之 <paramref name="str" /> 中的字元 (以 1 起始) 索引。</param>
      <returns vsli:raw="&lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">
        <see langword="Char" /> 值，表示提供的字串內指定之索引的字元。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;paramref name=&quot;Index&quot; /&gt; &amp;lt; 1, or &lt;paramref name=&quot;Index&quot; /&gt; is greater than index of last character of &lt;paramref name=&quot;str&quot; /&gt;.">
        <paramref name="str" /> 是 <see langword="Nothing" />、<paramref name="Index" /> &lt; 1，或 <paramref name="Index" /> 大於 <paramref name="str" /> 之最後一個字元的索引。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">傳回整數，指定一個字串在另一個字串內第一次出現的起始位置。</summary>
      <param name="Start" vsli:raw="Optional. Numeric expression that sets the starting position for each search. If omitted, search begins at the first character position. The start index is 1-based.">選擇性。 數值運算式，可設定每一個搜尋的開始位置。 如果省略，則搜尋會從第一個字元位置開始。 起始索引是以 1 起始的。</param>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">必要項。 正在搜尋的 <see langword="String" /> 運算式。</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">必要項。 找到的 <see langword="String" /> 運算式。</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">選擇性。 指定字串比較的類型。 如果省略了 <paramref name="Compare" />，則 <see langword="Option Compare" /> 設定可決定比較的類型。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt; Position where match begins&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; &amp;gt; length of &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">如果 
  InStr 會傳回 
 
                <paramref name="String1" /> 的長度為零或 <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> 的長度為零或 <see langword="Nothing" /><paramref name="start" /><paramref name="String2" /> 找不到。 
  0 
 
                <paramref name="String2" /> 中找到 <paramref name="String1" /> 符合開始的位置 
 
                <paramref name="Start" /> &gt; <paramref name="String1" /> 的長度 0</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; 1.">
        <paramref name="Start" /> &lt; 1。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">傳回整數，指定一個字串在另一個字串內第一次出現的起始位置。</summary>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">必要項。 正在搜尋的 <see langword="String" /> 運算式。</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">必要項。 找到的 <see langword="String" /> 運算式。</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">選擇性。 指定字串比較的類型。 如果省略了 <paramref name="Compare" />，則 <see langword="Option Compare" /> 設定可決定比較的類型。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;The starting position for the search, which defaults to the first character position.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position where match begins.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">如果 
  InStr 會傳回 
 
                <paramref name="String1" /> 的長度為零或 <see langword="Nothing" /> 0 
 
                <paramref name="String2" /> 的長度為零或 <see langword="Nothing" /> 搜尋的起始位置，預設為第一個字元位置。  

 
                <paramref name="String2" /> 找不到。 
  0 
 
                <paramref name="String2" /> 中找到 <paramref name="String1" /> 符合開始的位置</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns the position of the first occurrence of one string within another, starting from the right side of the string.">傳回某個字串在另一個字串中第一次出現的位置，從字串的右邊開始。</summary>
      <param name="StringCheck" vsli:raw="Required. String expression being searched.">必要項。 正在搜尋的字串運算式。</param>
      <param name="StringMatch" vsli:raw="Required. String expression being searched for.">必要項。 正在搜尋的字串運算式。</param>
      <param name="Start" vsli:raw="Optional. Numeric expression setting the one-based starting position for each search, starting from the left side of the string. If &lt;paramref name=&quot;Start&quot; /&gt; is omitted then -1 is used, meaning the search begins at the last character position. Search then proceeds from right to left.">選擇性。 為每一個搜尋設定以 1 起始的位置之數值運算式，從字串的左邊開始。 如果省略 <paramref name="Start" />，則會使用 -1，表示搜尋會從最後一個字元位置開始。 從右到左進行的搜尋。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. If omitted, a binary comparison is performed. See Settings for values.">選擇性。 數值，表示在評估子字串時要使用的比較類型。 如果省略，則會執行二進位比較。 請參閱數值的設定。</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStrRev returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringCheck&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is found within &lt;paramref name=&quot;StringCheck&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position at which the first match is found, starting with the right side of the string.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;StringMatch&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">如果 
  InStrRev 會傳回 
 
                <paramref name="StringCheck" /> 的長度為零 
  0 
 
                <paramref name="StringMatch" /> 的長度為零 
 
                <paramref name="Start" /><paramref name="StringMatch" /> 找不到。 
  0 
 
                <paramref name="StringMatch" /> 中找到 <paramref name="StringCheck" /> 找到第一個符合項目的位置，從字串的右邊開始。  

 
                <paramref name="Start" /> 大於 <paramref name="StringMatch" /> 的長度 0</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; = 0 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; -1.">
        <paramref name="Start" /> = 0 或 <paramref name="Start" /> &lt; -1。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">傳回結合包含在陣列中幾個子字串所建立的字串。</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">必要項。 一維陣列，包含要結合的子字串。</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">選擇性。 用來分隔傳回字串內的子字串之任何字串。 如果省略，則會使用空白字元 (" ")。 如果 <paramref name="Delimiter" /> 是長度為零的字串 ("") 或 <see langword="Nothing" />，則清單中的所有項目都會與非分隔符號串連。</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">透過結合包含在陣列中幾個子字串所建立的字串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> 不是一維。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">傳回結合包含在陣列中幾個子字串所建立的字串。</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">必要項。 一維陣列，包含要結合的子字串。</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">選擇性。 用來分隔傳回字串內的子字串之任何字串。 如果省略，則會使用空白字元 (" ")。 如果 <paramref name="Delimiter" /> 是長度為零的字串 ("") 或 <see langword="Nothing" />，則清單中的所有項目都會與非分隔符號串連。</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">透過結合包含在陣列中幾個子字串所建立的字串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> 不是一維。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">傳回已轉換成小寫的字串或字元。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必要項。 任何有效的 <see langword="String" /> 或 <see langword="Char" /> 運算式。</param>
      <returns vsli:raw="A string or character converted to lowercase.">已轉換成小寫的字串或字元。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">傳回已轉換成小寫的字串或字元。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必要項。 任何有效的 <see langword="String" /> 或 <see langword="Char" /> 運算式。</param>
      <returns vsli:raw="A string or character converted to lowercase.">已轉換成小寫的字串或字元。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the left side of a string.">傳回字串，其中包含從字串的左邊開始的指定數目的字元。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the leftmost characters are returned.">必要項。 <see langword="String" /> 運算式，最左邊的字元會從此運算式中傳回。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">必要項。 <see langword="Integer" /> 運算式。 數值運算式，表示要傳回的字元數。 如果為 0，則會傳回長度為零的字串 ("")。 如果大於或等於 <paramref name="str" /> 中的字元數，則會傳回整個字串。</param>
      <returns vsli:raw="A string containing a specified number of characters from the left side of a string.">字串，其中包含從字串的左邊開始的指定數目的字元。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">傳回包含字串中字元數或儲存變數所需位元組數的整數。</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">任何有效的 <see langword="String" /> 運算式或變數名稱。 如果 <paramref name="Expression" /> 的型別為 <see langword="Object" />，<see langword="Len" /> 函式就會傳回要由 <see langword="FilePut" /> 函式寫入檔案的大小。</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">包含字串中字元數或儲存變數所需位元組數的整數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a left-aligned string containing the specified string adjusted to the specified length.">傳回靠左對齊的字串，其中包含調整為指定之長度的指定字串。</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">必要項。 <see langword="String" /> 運算式。 字串變數的名稱。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">必要項。 <see langword="Integer" /> 運算式。 傳回的字串長度。</param>
      <returns vsli:raw="A left-aligned string containing the specified string adjusted to the specified length.">靠左對齊的字串，其中包含調整為指定之長度的指定字串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">傳回包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary vsli:raw="Returns a string that contains all the characters starting from a specified position in a string.">傳回字串，這個字串包含某個字串中從指定之位置開始的所有字元。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">必要項。 <see langword="String" /> 運算式，字元會從此運算式中傳回。</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one-based.">必要項。 <see langword="Integer" /> 運算式。 要傳回字元的開始位置。 如果 <paramref name="Start" /> 大於 <paramref name="str" /> 中的字元數，則 <see langword="Mid" /> 函式會傳回長度為零的字串 ("")； <paramref name="Start" /> 是以一起始。</param>
      <returns vsli:raw="A string that consists of all the characters starting from the specified position in the string.">字串，包含字串中從指定之位置開始的所有字元。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 或 <paramref name="Length" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a string that contains a specified number of characters starting from a specified position in a string.">傳回字串，這個字串包含某個字串中從指定之位置開始的指定數目字元。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">必要項。 <see langword="String" /> 運算式，字元會從此運算式中傳回。</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one based.">必要項。 <see langword="Integer" /> 運算式。 要傳回字元的開始位置。 如果 <paramref name="Start" /> 大於 <paramref name="str" /> 中的字元數，則 <see langword="Mid" /> 函式會傳回長度為零的字串 ("")； <paramref name="Start" /> 是以一起始。</param>
      <param name="Length" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt; expression. Number of characters to return. If omitted or if there are fewer than &lt;paramref name=&quot;Length&quot; /&gt; characters in the text (including the character at position &lt;paramref name=&quot;Start&quot; /&gt;), all characters from the start position to the end of the string are returned.">選擇性。 <see langword="Integer" /> 運算式。 要傳回的字元數。 如果省略，或者此字元數少於文字中的 <paramref name="Length" /> 字元 (包括 <paramref name="Start" /> 位置上的字元)，則會傳回從起始位置到字串結尾的所有字元。</param>
      <returns vsli:raw="A string that consists of the specified number of characters starting from the specified position in the string.">字串，包含字串中從指定之位置開始的指定數目字元。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 或 <paramref name="Length" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a string in which a specified substring has been replaced with another substring a specified number of times.">傳回字串，其中的指定之子字串已經被另一個子字串取代了指定的次數。</summary>
      <param name="Expression" vsli:raw="Required. String expression containing substring to replace.">必要項。 字串運算式，包含要取代的子字串。</param>
      <param name="Find" vsli:raw="Required. Substring being searched for.">必要項。 正在搜尋的子字串。</param>
      <param name="Replacement" vsli:raw="Required. Replacement substring.">必要項。 取代子字串。</param>
      <param name="Start" vsli:raw="Optional. Position within &lt;paramref name=&quot;Expression&quot; /&gt; that starts a substring used for replacement. The return value of &lt;see langword=&quot;Replace&quot; /&gt; is a string that begins at &lt;paramref name=&quot;Start&quot; /&gt;, with appropriate substitutions. If omitted, 1 is assumed.">選擇性。 <paramref name="Expression" /> 內用於取代的子字串的開始位置。 <see langword="Replace" /> 的傳回值是以 <paramref name="Start" /> 開頭且具有適當替代的字串。 如果省略，則假設為 1。</param>
      <param name="Count" vsli:raw="Optional. Number of substring substitutions to perform. If omitted, the default value is -1, which means &quot;make all possible substitutions.&quot;">選擇性。 要執行的子字串替代次數。 如果省略，則預設值為 -1，表示「執行所有可能的替代」。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. See Settings for values.">選擇性。 數值，表示在評估子字串時要使用的比較類型。 請參閱數值的設定。</param>
      <returns vsli:raw="One of the following values.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;Replace returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Find&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Replace&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt; with no occurrences of &lt;paramref name=&quot;Find&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Expression&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;, or &lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;Nothing&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Count&quot; /&gt; is 0&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="Replace" /> 會傳回下列值。  
  如果 
  Replace 會傳回 
 <paramref name="Find" /> 的長度為零或 <see langword="Nothing" /><paramref name="Expression" /> 的複本<paramref name="Replace" /> 的長度為零 
  <paramref name="Expression" /> 的複本沒有出現 <paramref name="Find" /><paramref name="Expression" /> 的長度為零或 <see langword="Nothing" />，或 <paramref name="Start" /> 大於 <paramref name="Expression" /> 的長度<see langword="Nothing" /><paramref name="Count" /> 為 0 
  <paramref name="Expression" /> 的複本</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Count&quot; /&gt; &amp;lt; -1 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0.">
        <paramref name="Count" /> &lt; -1 或 <paramref name="Start" /> &lt;= 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the right side of a string.">傳回字串，其中包含從字串的右邊開始的指定數目的字元。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the rightmost characters are returned.">必要項。 <see langword="String" /> 運算式，最右邊的字元會從此運算式中傳回。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">必要項。 <see langword="Integer" />. 數值運算式，表示要傳回的字元數。 如果為 0，則會傳回長度為零的字串 ("")。 如果大於或等於 <paramref name="str" /> 中的字元數，則會傳回整個字串。</param>
      <returns vsli:raw="A string containing a specified number of characters from the right side of a string.">字串，其中包含從字串的右邊開始的指定數目的字元。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a right-aligned string containing the specified string adjusted to the specified length.">傳回靠右對齊的字串，其中包含調整為指定之長度的指定字串。</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">必要項。 <see langword="String" /> 運算式。 字串變數的名稱。</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">必要項。 <see langword="Integer" /> 運算式。 傳回的字串長度。</param>
      <returns vsli:raw="A right-aligned string containing the specified string adjusted to the specified length.">靠右對齊的字串，其中包含調整為指定之長度的指定字串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">傳回包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary vsli:raw="Returns a string consisting of the specified number of spaces.">傳回字串，此字串是由指定之空格數所組成。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The number of spaces you want in the string.">必要項。 <see langword="Integer" /> 運算式。 您希望在字串中有多少空格數。</param>
      <returns vsli:raw="A string consisting of the specified number of spaces.">字串，此字串是由指定之空格數所組成。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; &amp;lt; 0.">
        <paramref name="Number" /> &lt; 0。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based, one-dimensional array containing a specified number of substrings.">傳回以零起始的一維陣列，其中包含指定之子字串數目。</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing substrings and delimiters.">必要項。 <see langword="String" /> 運算式，包含子字串和分隔符號。</param>
      <param name="Delimiter" vsli:raw="Optional. Any single character used to identify substring limits. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is omitted, the space character (&quot; &quot;) is assumed to be the delimiter.">選擇性。 用來識別子字串限制的單一字元。 如果省略 <paramref name="Delimiter" />，則會假設空白字元 (" ") 為分隔符號。</param>
      <param name="Limit" vsli:raw="Optional. Maximum number of substrings into which the input string should be split. The default, -1, indicates that the input string should be split at every occurrence of the &lt;paramref name=&quot;Delimiter&quot; /&gt; string.">選擇性。 輸入字串應該分割之子字串數目的最大值。 預設為 -1，表示應該在每次遇到 <paramref name="Delimiter" /> 字串時即分割輸入字串。</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the comparison to use when evaluating substrings. See &quot;Settings&quot; for values.">選擇性。 數值，表示在評估子字串時要使用的比較。 如需有關值的資訊，請參閱＜設定＞。</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; array. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing a zero-length string. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string, or if it does not appear anywhere in &lt;paramref name=&quot;Expression&quot; /&gt;, &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing the entire &lt;paramref name=&quot;Expression&quot; /&gt; string.">
        <see langword="String" /> 陣列。 如果 <paramref name="Expression" /> 是長度為零的字串 ("")，<see langword="Split" /> 會傳回包含長度為零的字串之單一元素陣列。 如果 <paramref name="Delimiter" /> 是長度為零的字串，或是未出現在 <paramref name="Expression" /> 內的任何位置，則 <see langword="Split" /> 會傳回單一元素陣列，其中包含整個 <paramref name="Expression" /> 字串。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns -1, 0, or 1, based on the result of a string comparison.">根據字串比較的結果傳回 -1、0 或 1。</summary>
      <param name="String1" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的 <see langword="String" /> 運算式。</param>
      <param name="String2" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的 <see langword="String" /> 運算式。</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">選擇性。 指定字串比較的類型。 如果省略了 <paramref name="Compare" />，則 <see langword="Option Compare" /> 設定可決定比較的類型。</param>
      <returns vsli:raw="One of the following values:&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;StrComp returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts ahead of &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;-1&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is equal to &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts after &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;1&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="StrComp" /> 函式具有下列的傳回值。  
  如果 
  StrComp 會傳回 
 <paramref name="String1" /> 排在 <paramref name="String2" /> 之前 -1 
 <paramref name="String1" /> 等於 <paramref name="String2" /> 0 
 <paramref name="String1" /> 排在 <paramref name="String2" /> 之後 1</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Compare&quot; /&gt; value is not valid.">
        <paramref name="Compare" /> 值無效。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary vsli:raw="Returns a string converted as specified.">傳回依照指定方式轉換的字串。</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression to be converted.">必要項。 要轉換的 <see langword="String" /> 運算式。</param>
      <param name="Conversion" vsli:raw="Required. &lt;see cref=&quot;T:Microsoft.VisualBasic.VbStrConv&quot; /&gt; member. The enumeration value specifying the type of conversion to perform.">必要項。 <see cref="T:Microsoft.VisualBasic.VbStrConv" /> 成員。 列舉值，指定要執行的轉換類型。</param>
      <param name="LocaleID" vsli:raw="Optional. The &lt;see langword=&quot;LocaleID&quot; /&gt; value, if different from the system &lt;see langword=&quot;LocaleID&quot; /&gt; value. (The system &lt;see langword=&quot;LocaleID&quot; /&gt; value is the default.)">選擇性。 如果不同於系統 <see langword="LocaleID" /> 值，則使用此 <see langword="LocaleID" /> 值 (系統 <see langword="LocaleID" /> 值是預設值)。</param>
      <returns vsli:raw="A string converted as specified.">依照指定方式轉換的字串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Unsupported &lt;paramref name=&quot;LocaleID&quot; /&gt;, &lt;paramref name=&quot;Conversion&quot; /&gt; &amp;lt; 0 or &amp;gt; 2048, or unsupported conversion for specified locale.">不支援的 <paramref name="LocaleID" />、<paramref name="Conversion" /> &lt; 0 或 &gt; 2048，或不支援的指定地區設定轉換。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">傳回由重複指定次數的指定字元所組成的字串或物件。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">必要項。 <see langword="Integer" /> 運算式。 要傳回之字串的長度。</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 任何有效的 <see langword="Char" />、<see langword="String" /> 或 <see langword="Object" /> 運算式。 只會使用運算式的第一個字元。 如果字元的型別為 <see langword="Object" />，它必須包含 <see langword="Char" /> 或 <see langword="String" /> 值。</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">由重複指定次數的指定字元所組成的字串或物件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> 小於 0 或 <paramref name="Character" /> 類型無效。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> 為 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">傳回由重複指定次數的指定字元所組成的字串或物件。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">必要項。 <see langword="Integer" /> 運算式。 要傳回之字串的長度。</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 任何有效的 <see langword="Char" />、<see langword="String" /> 或 <see langword="Object" /> 運算式。 只會使用運算式的第一個字元。 如果字元的型別為 <see langword="Object" />，它必須包含 <see langword="Char" /> 或 <see langword="String" /> 值。</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">由重複指定次數的指定字元所組成的字串或物件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> 小於 0 或 <paramref name="Character" /> 類型無效。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> 為 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">傳回由重複指定次數的指定字元所組成的字串或物件。</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">必要項。 <see langword="Integer" /> 運算式。 要傳回之字串的長度。</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">必要項。 任何有效的 <see langword="Char" />、<see langword="String" /> 或 <see langword="Object" /> 運算式。 只會使用運算式的第一個字元。 如果字元的型別為 <see langword="Object" />，它必須包含 <see langword="Char" /> 或 <see langword="String" /> 值。</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">由重複指定次數的指定字元所組成的字串或物件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> 小於 0 或 <paramref name="Character" /> 類型無效。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> 為 <see langword="Nothing" />。</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary vsli:raw="Returns a string in which the order of the text elements in the specified string is reversed.">傳回字串，其中的指定之字串的字元順序會顛倒。</summary>
      <param name="Expression" vsli:raw="Required. String expression whose text elements are to be reversed. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), a zero-length string is returned.">必要項。 要反轉字元的字串運算式。 如果 <paramref name="Expression" /> 是長度為零的字串 ("")，則會傳回長度為零的字串。</param>
      <returns vsli:raw="A string in which the order of the text elements in the specified string is reversed.">字串，其中的指定之字串的字元順序會顛倒。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">傳回包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">必要項。 任何有效的 <see langword="String" /> 運算式。</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">包含指定字串複本的字串，但其中不包含前置空格 (<see langword="LTrim" />)、不包含後置空格 (<see langword="RTrim" />)，或是不包含前置或後置空格 (<see langword="Trim" />)。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">傳回包含已轉換成大寫之指定字串的字串或字元。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必要項。 任何有效的 <see langword="String" /> 或 <see langword="Char" /> 運算式。</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">包含已轉換成大寫之指定字串的字串或字元。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">傳回包含已轉換成大寫之指定字串的字串或字元。</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">必要項。 任何有效的 <see langword="String" /> 或 <see langword="Char" /> 運算式。</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">包含已轉換成大寫之指定字串的字串或字元。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">這個類別支援 Visual Basic <see langword="Print" /> 和 <see langword="PrintLine" /> 函式。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">這個欄位支援 Visual Basic <see langword="Print" /> 和 <see langword="PrintLine" /> 函式。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary vsli:raw="Indicates a Boolean value or whether the default should be used when calling number-formatting functions.">表示布林值 (Boolean)，或指出在呼叫以數字格式化的函式時是否應該使用預設值。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary vsli:raw="False. The numeric value of this member is 0.">False， 這個成員的數值是 0。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary vsli:raw="True. The numeric value of this member is -1.">True， 這個成員的數值是 -1。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary vsli:raw="Default setting. The numeric value of this member is -2.">預設值， 這個成員的數值是 -2。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary vsli:raw="Indicates the type of a variant object, returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">指出 Variant 物件的型別，並由 <see langword="VarType" /> 函式傳回相關資料。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary vsli:raw="Array. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArray&quot; /&gt;.">陣列 - 這個成員相當於 Visual Basic 常數 <see langword="vbArray" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. (&lt;see langword=&quot;True&quot; /&gt; or &lt;see langword=&quot;False&quot; /&gt;.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBoolean&quot; /&gt;.">
        <see langword="Boolean" />. (<see langword="True" /> 或 <see langword="False" />)。這個成員相當於 Visual Basic 常數 <see langword="vbBoolean" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt;. (0 through 255.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbByte&quot; /&gt;.">
        <see langword="Byte" />. (0 到 255)。這個成員相當於 Visual Basic 常數 <see langword="vbByte" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary vsli:raw="&lt;see langword=&quot;Char&quot; /&gt;. (0 through 65535.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbChar&quot; /&gt;.">
        <see langword="Char" />. (0 到 65535)。這個成員相當於 Visual Basic 常數 <see langword="vbChar" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary vsli:raw="Currency. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCurrency&quot; /&gt;.">貨幣 - 這個成員相當於 Visual Basic 常數 <see langword="vbCurrency" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary vsli:raw="DataObject.">DataObject。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary vsli:raw="&lt;see langword=&quot;Date&quot; /&gt;. (0:00:00 on January 1, 0001 through 11:59:59 PM on December 31, 9999.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDate&quot; /&gt;.">
        <see langword="Date" />. (0001 年 1 月 1 日 0:00:00 到 9999 年 12 月 31 日 11:59:59 PM)。這個成員相當於 Visual Basic 常數 <see langword="vbDate" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary vsli:raw="&lt;see langword=&quot;Decimal&quot; /&gt;. (0 through +/-79,228,162,514,264,337,593,543,950,335 with no decimal point; 0 through +/-7.9228162514264337593543950335 with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDecimal&quot; /&gt;.">
        <see langword="Decimal" />. (0 到 +/-79,228,162,514,264,337,593,543,950,335，沒有小數點；0 到 +/-7.9228162514264337593543950335，小數點右邊有 28 位；最小的非零值為 +/-0.0000000000000000000000000001)。這個成員相當於 Visual Basic 常數 <see langword="vbDecimal" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary vsli:raw="&lt;see langword=&quot;Double&quot; /&gt;. (-1.79769313486231E+308 through -4.94065645841247E-324 for negative values; 4.94065645841247E-324 through 1.79769313486231E+308 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDouble&quot; /&gt;.">
        <see langword="Double" />. (負值為 -1.79769313486231E+308 到 -4.94065645841247E-324；正值為 4.94065645841247E-324 到 1.79769313486231E+308)。這個成員相當於 Visual Basic 常數 <see langword="vbDouble" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary vsli:raw="Null reference. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbEmpty&quot; /&gt;.">Null 參考 - 這個成員相當於 Visual Basic 常數 <see langword="vbEmpty" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Exception&quot; /&gt;">
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. (-2,147,483,648 through 2,147,483,647.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInteger&quot; /&gt;.">
        <see langword="Integer" />. (-2,147,483,648 到 2,147,483,647)。這個成員相當於 Visual Basic 常數 <see langword="vbInteger" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary vsli:raw="&lt;see langword=&quot;Long&quot; /&gt;. (-9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLong&quot; /&gt;.">
        <see langword="Long" />. (-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807)。這個成員相當於 Visual Basic 常數 <see langword="vbLong" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary vsli:raw="Null object. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNull&quot; /&gt;.">Null 物件 - 這個成員相當於 Visual Basic 常數 <see langword="vbNull" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary vsli:raw="Any type can be stored in a variable of type &lt;see langword=&quot;Object&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbObject&quot; /&gt;.">任何型別都可以儲存在型別 <see langword="Object" /> 的變數中。 這個成員相當於 Visual Basic 常數 <see langword="vbObject" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary vsli:raw="&lt;see langword=&quot;Short&quot; /&gt;. (-32,768 through 32,767.)">
        <see langword="Short" />. (-32,768 到 32,767)。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary vsli:raw="&lt;see langword=&quot;Single&quot; /&gt;. (-3.402823E+38 through -1.401298E-45 for negative values; 1.401298E-45 through 3.402823E+38 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSingle&quot; /&gt;.">
        <see langword="Single" />. (負值為 -3.402823E+38 到 -1.401298E-45；正值為 1.401298E-45 到 3.402823E+38)。這個成員相當於 Visual Basic 常數 <see langword="vbSingle" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. (0 to approximately 2 billion Unicode characters.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbString&quot; /&gt;.">
        <see langword="String" />. (0 至大約 20 億個 Unicode 字元)。這個成員相當於 Visual Basic 常數 <see langword="vbString" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary vsli:raw="User-defined type. Each member of the structure has a range determined by its data type and independent of the ranges of the other members. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUserDefinedType&quot; /&gt;.">使用者定義型別。 此結構中的每一個成員所具有的範圍是由其資料型別所決定，與其他成員的範圍無關。 這個成員相當於 Visual Basic 常數 <see langword="vbUserDefinedType" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary vsli:raw="&lt;see langword=&quot;Variant&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVariant&quot; /&gt;.">
        <see langword="Variant" />. 這個成員相當於 Visual Basic 常數 <see langword="vbVariant" />。</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary vsli:raw="Indicates that an array in a structure or non-local variable should be treated as a fixed-length array.">表示結構或非區域變數的陣列應視為固定長度的陣列。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">初始化 <see langword="Bounds" /> 屬性的值。</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">初始化上方欄位的值，此值代表陣列第一個維度的大小。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">初始化 <see langword="Bounds" /> 屬性的值。</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">初始化上方欄位的值，此值代表陣列第一個維度的大小。</param>
      <param name="UpperBound2" vsli:raw="Initializes the value of upper field, which represents the size of the second dimension of the array.">初始化上欄位值，此值代表陣列第二個維度的大小。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary vsli:raw="Returns the bounds of the array.">傳回陣列的界限。</summary>
      <returns vsli:raw="Contains an integer array that represents the bounds of the array.">包含表示陣列界限的整數陣列。</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary vsli:raw="Returns the size of the array.">傳回陣列的大小。</summary>
      <returns vsli:raw="Contains an integer that represents the number of elements in the array.">包含表示陣列中項目數量的整數。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary vsli:raw="Indicates that a string should be treated as if it were fixed length.">表示應將字串視為固定長度。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;SizeConst&quot; /&gt; field.">初始化 <see langword="SizeConst" /> 欄位值。</summary>
      <param name="Length" vsli:raw="The length of the fixed string.">固定字串的長度。</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary vsli:raw="Gets the length of the string.">取得字串的長度。</summary>
      <returns vsli:raw="The length of the string.">字串的長度。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary vsli:raw="The &lt;see langword=&quot;VbMath&quot; /&gt; module contains procedures used to perform mathematical operations.">
        <see langword="VbMath" /> 模組包含用來執行算術運算的程序。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary vsli:raw="Initializes the random-number generator.">初始化亂數產生器。</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary vsli:raw="Initializes the random-number generator.">初始化亂數產生器。</summary>
      <param name="Number" vsli:raw="Optional. An &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression.">選擇性。 <see langword="Object" /> 或任何有效的數值運算式。</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">傳回 <see langword="Single" /> 類型的亂數。</summary>
      <returns vsli:raw="The next random number in the sequence.">序列中的下一個亂數。</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">傳回 <see langword="Single" /> 類型的亂數。</summary>
      <param name="Number" vsli:raw="Optional. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value or any valid &lt;see cref=&quot;T:System.Single&quot; /&gt; expression.">選擇性。 <see langword="Single" /> 值或任何有效的 <see langword="Single" /> 運算式。</param>
      <returns vsli:raw="If number is less than zero, Rnd generates the same number every time, using &lt;paramref name=&quot;Number&quot; /&gt; as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.">如果數字小於零，Rnd 每次都會產生相同的數字 (利用 <paramref name="Number" /> 當做種子值)。 如果數字大於零，則 Rnd 會產生序列中的下一個亂數。 如果數字等於零，則 Rnd 會產生最近所產生的數字。 如果未提供數字，則 Rnd 會產生序列中的下一個亂數。</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary vsli:raw="Indicates which type of conversion to perform when calling the &lt;see langword=&quot;StrConv&quot; /&gt; function.">表示呼叫 <see langword="StrConv" /> 函式時要執行的轉換類型。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary vsli:raw="Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHiragana&quot; /&gt;.">將字串中的片假名字元轉換為平假名字元。 僅適用於日本地區設定。 這個成員相當於 Visual Basic 常數 <see langword="vbHiragana" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary vsli:raw="Converts Hiragana characters in the string to Katakana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbKatakana&quot; /&gt;.">將字串中的平假名字元轉換為片假名字元。 僅適用於日本地區設定。 這個成員相當於 Visual Basic 常數 <see langword="vbKatakana" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary vsli:raw="Converts the string from file system rules for casing to linguistic rules. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLinguisticCasing&quot; /&gt;.">將字串大小寫從檔案系統規則轉換為語言規則。 這個成員相當於 Visual Basic 常數 <see langword="vbLinguisticCasing" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary vsli:raw="Converts the string to lowercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLowerCase&quot; /&gt;.">將字串轉換為小寫字元。 這個成員相當於 Visual Basic 常數 <see langword="vbLowerCase" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary vsli:raw="Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNarrow&quot; /&gt;.">將字串中的寬 (雙位元組) 字元轉換為窄 (單一位元組) 字元。 適用於亞洲地區設定。 這個成員相當於 Visual Basic 常數 <see langword="vbNarrow" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary vsli:raw="Performs no conversion.">沒有執行任何轉換。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary vsli:raw="Converts the first letter of every word in the string to uppercase. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbProperCase&quot; /&gt;.">將字串中每個字的第一個字母轉換為大寫。 這個成員相當於 Visual Basic 常數 <see langword="vbProperCase" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary vsli:raw="Converts the string to Simplified Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSimplifiedChinese&quot; /&gt;.">將字串轉換為簡體中文字元。 這個成員相當於 Visual Basic 常數 <see langword="vbSimplifiedChinese" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary vsli:raw="Converts the string to Traditional Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTraditionalChinese&quot; /&gt;.">將字串轉換為繁體中文字元。 這個成員相當於 Visual Basic 常數 <see langword="vbTraditionalChinese" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary vsli:raw="Converts the string to uppercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUpperCase&quot; /&gt;.">將字串轉換為大寫字元。 這個成員相當於 Visual Basic 常數 <see langword="vbUpperCase" />。</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary vsli:raw="Converts narrow (single-byte) characters in the string to wide (double-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWide&quot; /&gt;. The conversion may use Normalization Form C even if an input character is already full-width. For example, the string &quot;は゛&quot; (which is already full-width) is normalized to &quot;ば&quot;. See Unicode normalization forms.">將字串中的窄 (單一位元組) 字元轉換為寬 (雙位元組) 字元。 適用於亞洲地區設定。 這個成員相當於 Visual Basic 常數 <see langword="vbWide" />。 轉換可能會使用正規化格式 C，即使輸入字元已經是全形也一樣。 例如，字串 "は゛" (這已經是全形) 會正規化為 "ば"。 請參閱 Unicode 正規化格式。</summary>
    </member>
  </members>
</doc>