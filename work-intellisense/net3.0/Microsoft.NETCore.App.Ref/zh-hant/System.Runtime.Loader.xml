<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Loader</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Metadata.AssemblyExtensions" />
    <member name="M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)">
      <param name="assembly" vsli:raw="The assembly from which to retrieve the metadata." />
      <param name="blob" vsli:raw="When this method returns, contains the pointer to the metadata section blob." />
      <param name="length" vsli:raw="When this method returns, contains the length of the metadata section blob." />
    </member>
    <member name="T:System.Runtime.Loader.AssemblyDependencyResolver">
      <summary vsli:raw="Allows a program to resolve assemblies and native libraries to paths based on the dependencies of a given assembly.">允許程式根據指定元件的相依性，將元件和原生程式庫解析成路徑。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyDependencyResolver&quot; /&gt; class with a path to a component's assembly.">使用元件的組件路徑來初始化 <see cref="T:System.Runtime.Loader.AssemblyDependencyResolver" /> 類別新執行個體。</summary>
      <param name="componentAssemblyPath" vsli:raw="The path to the component or plugin's managed entry point.">元件或外掛程式的受控進入點路徑。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveAssemblyToPath(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves a path to an assembly with the given assembly name based on the component's dependencies.">根據元件的相依性，解析含指定組件名稱的組件路徑。</summary>
      <param name="assemblyName" vsli:raw="The assembly name to resolve.">要解析的組件名稱。</param>
      <returns vsli:raw="The path to an assembly with the given name from the component's deps.json file, or &lt;see langword=&quot;null&quot; /&gt; if the assembly does not exist in the deps.json file or is not on disk in the location specified by the deps.json file.">具有元件 deps.json 檔案指定名稱的組件路徑；如果組件不存在於 deps.json 檔案，或不在 deps.json 所指定的磁碟位置，則為 <c>ull</c>。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveUnmanagedDllToPath(System.String)">
      <summary vsli:raw="Resolves a path to a native library with the given name based on the component's dependencies.">根據元件的相依性，解析具有指定名稱的原生程式庫路徑。</summary>
      <param name="unmanagedDllName" vsli:raw="The name of the native library to resolve.">要解析的原生程式庫名稱。</param>
      <returns vsli:raw="The path to a native library with the given name from the component's deps.json file and the current runtime identifier, or &lt;see langword=&quot;null&quot; /&gt; if the assembly does not exist in the deps.json file or is not on disk  in the location specified by the deps.json file.">具有元件 deps.json 檔案和目前執行階段識別碼指定名稱的原生程式庫路徑；如果組件不存在於 deps.json 檔案，或不在 deps.json 所指定的磁碟位置，則為 <c>Null</c>。</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext">
      <summary vsli:raw="Represents the runtime's concept of a scope for assembly loading.">代表繫結範圍的執行階段概念。 這個類別是抽象的。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; class with a value that indicates whether unloading is enabled.">以指示是否啟用卸載的值來初始化 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 類別的新執行個體。</summary>
      <param name="isCollectible" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.Unload&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt; because there is a performance cost associated with enabling unloading.">
        <see langword="true" /> 會啟用 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />；否則為 <see langword="false" />。 預設值是 <see langword="false" />，因為沒有與啟用卸載建立關聯的效能成本。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; class with a name and a value that indicates whether unloading is enabled.">以指示是否啟用卸載的名稱和值來初始化 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The value for &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.Name&quot; /&gt; in the new instance. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">新執行個體中的 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.Name" /> 值。 其值可以是 <see langword="null" />。</param>
      <param name="isCollectible" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.Unload&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt; because there is a performance cost associated with enabling unloading.">
        <see langword="true" /> 會啟用 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />；否則為 <see langword="false" />。 預設值是 <see langword="false" />，因為沒有與啟用卸載建立關聯的效能成本。</param>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.All">
      <summary vsli:raw="Returns a collection of all &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; instances.">傳回所有 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 執行個體的集合。</summary>
      <returns vsli:raw="A collection of all &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; instances.">所有<see cref="T:System.Runtime.Loader.AssemblyLoadContext" />實例的集合。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Assemblies">
      <summary vsli:raw="Returns a collection of the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; instances loaded in the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">傳回載入至 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 之 <see cref="T:System.Reflection.Assembly" /> 執行個體的集合。</summary>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; instances loaded in the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">
        <see cref="T:System.Reflection.Assembly" /> 載入<see cref="T:System.Runtime.Loader.AssemblyLoadContext" />之實例的集合。</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope">
      <summary vsli:raw="Provides a return type used exclusively for &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt;. It is intended to be used as an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; in a &lt;see langword=&quot;using&quot; /&gt; block.">提供專供 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> 使用的傳回型別。 原定在 <see langword="using" /> 區塊中作為 <see cref="T:System.IDisposable" /> 使用。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope.Dispose">
      <summary vsli:raw="Sets &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt; to the value preceding the call to &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt; which returned this instance.">將 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 設定為傳回此執行個體之 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> 呼叫前面的值。</summary>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; set by the most recent call to &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt;.">取得 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> 最近呼叫所設定的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; set by the most recent call to &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt;. This value can be &lt;see langword=&quot;null&quot; /&gt;. The value is stored in an &lt;see cref=&quot;T:System.Threading.AsyncLocal`1&quot; /&gt;, so the value is unique per asynchronous context.">最近<see cref="T:System.Runtime.Loader.AssemblyLoadContext" />一次<see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />呼叫所設定的。 這個值可以是 <see langword="null" />。 值會儲存在中<see cref="T:System.Threading.AsyncLocal`1" />, 因此值在每個非同步內容中都是唯一的。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Default">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;. The default context contains the main application assembly and its static dependencies.">取得預設 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。 預設內容包含主應用程式組件及其靜態相依性。</summary>
      <returns vsli:raw="The default assembly load context.">預設組件載入內容。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection">
      <summary vsli:raw="Sets &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt; to &lt;see langword=&quot;this&quot; /&gt;&lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">將 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 設定為 <see langword="this" /><see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <returns vsli:raw="An object to restore the previous value of &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt;. It is intended to be used as an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; in a &lt;see langword=&quot;using&quot; /&gt; block.">還原 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 上一個值的物件。 原定在 <see langword="using" /> 區塊中作為 <see cref="T:System.IDisposable" /> 使用。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection(System.Reflection.Assembly)">
      <summary vsli:raw="Sets &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt; to the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; which loaded the assembly.">將 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 設定為載入組件的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <param name="activating" vsli:raw="The assembly that is used to determine the requested &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; instance.">用來判斷所要求 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 執行個體的組件。</param>
      <returns vsli:raw="An object to restore the previous value of &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt;. It is intended to be used as an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; in a &lt;see langword=&quot;using&quot; /&gt; block.">還原 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 上一個值的物件。 原定在 <see langword="using" /> 區塊中作為 <see cref="T:System.IDisposable" /> 使用。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Finalize">
      <summary vsli:raw="Allows the object to try to free resources and perform other cleanup operations before it's reclaimed by garbage collection.">允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; for an assembly path.">取得組件路徑的 <see cref="T:System.Reflection.AssemblyName" />。</summary>
      <param name="assemblyPath" vsli:raw="The path to the assembly.">組件的路徑。</param>
      <returns vsli:raw="An object that contains the fully parsed assembly name for the assembly at &lt;paramref name=&quot;assemblyPath&quot; /&gt;.">物件，其包含組件 (位於 <paramref name="assemblyPath" />) 的完整剖析顯示名稱。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyPath" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The assembly cannot be found.">找不到組件。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The assembly is not a valid assembly.">此組件不是有效的組件。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; containing the specified &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">取得 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />，其中包含指定的 <see cref="T:System.Reflection.Assembly" />。</summary>
      <param name="assembly" vsli:raw="An assembly.">組件。</param>
      <returns vsli:raw="The assembly load context containing the &lt;paramref name=&quot;assembly&quot; /&gt;. If the &lt;paramref name=&quot;assembly&quot; /&gt; is not provided by the runtime, this method returns null.">包含 <paramref name="assembly" /> 的組件載入內容。 如果執行階段未提供 <paramref name="assembly" />，則這個方法會傳回 Null。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.IsCollectible">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; is collectible.">取得指出此 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 是否為可回收的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; is collectible; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If a value is not specified in the constructor, the value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果這<see cref="T:System.Runtime.Loader.AssemblyLoadContext" />是可回收的, 則<see langword="false" />為, 否則為。 如果未在此函式中指定值, 則值為<see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)">
      <summary vsli:raw="When overridden in a derived class, allows an assembly to be resolved based on its &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt;.">在衍生類別中覆寫時，允許組件根據其 <see cref="T:System.Reflection.AssemblyName" /> 解析並載入。</summary>
      <param name="assemblyName" vsli:raw="The object that describes the assembly to be resolved.">描述要載入之組件的物件。</param>
      <returns vsli:raw="The resolved assembly, or &lt;see langword=&quot;null&quot; /&gt;.">載入的組件或 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves and loads an assembly given its &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt;.">解析並載入指定為 <see cref="T:System.Reflection.AssemblyName" /> 的組件。</summary>
      <param name="assemblyName" vsli:raw="The object that describes the assembly to load.">物件，其描述要載入的組件。</param>
      <returns vsli:raw="The loaded assembly, or throws.">載入的組件或 throws。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is not found.">找不到 <paramref name="assemblyName" />。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is not a valid assembly.">
        <paramref name="assemblyName" /> 不是有效的組件。</exception>
      <exception cref="T:System.IO.FileLoadException" vsli:raw="An assembly or module was loaded which did not match the &lt;paramref name=&quot;assemblyName&quot; /&gt;.">載入的組件或模組不符合 <paramref name="assemblyName" />。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)">
      <summary vsli:raw="Loads the contents of an assembly file on the specified path.">載入指定路徑上組件檔案的內容。</summary>
      <param name="assemblyPath" vsli:raw="The fully qualified path of the file to load.">要載入的完整檔案路徑。</param>
      <returns vsli:raw="The loaded assembly.">載入的組件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not an absolute path.">
        <paramref name="assemblyPath" /> 引數不是絕對路徑。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyPath" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileLoadException" vsli:raw="A file that was found could not be loaded.">無法載入找到的檔案。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is an empty string (&quot;&quot;) or does not exist.">
        <paramref name="assemblyPath" /> 參數為空字串 ("") 或不存在。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The  &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not a valid assembly.">
        <paramref name="assemblyPath" /> 不是有效的組件。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)">
      <summary vsli:raw="Loads the contents of the native image of a managed assembly file on the specified path.">載入指定路徑上受控組件檔案的原生映像內容。</summary>
      <param name="nativeImagePath" vsli:raw="The fully qualified path of the file to load.">要載入的完整檔案路徑。</param>
      <param name="assemblyPath" vsli:raw="The fully qualified path of the IL version of the file to load, or &lt;see langword=&quot;null&quot; /&gt;.">所要載入檔案之 IL 版本的完整檔案路徑或 <see langword="null" />。</param>
      <returns vsli:raw="The loaded assembly.">載入的組件。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;nativeImagePath&quot; /&gt; argument is not an absolute path.">
        <paramref name="nativeImagePath" /> 引數不是絕對路徑。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not an absolute path.">
        <paramref name="assemblyPath" /> 引數不是絕對路徑。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;nativeImagePath&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nativeImagePath" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileLoadException" vsli:raw="A file that was found could not be loaded.">無法載入找到的檔案。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The &lt;paramref name=&quot;nativeImagePath&quot; /&gt; argument is an empty string (&quot;&quot;) or does not exist.">
        <paramref name="nativeImagePath" /> 參數為空字串 ("") 或不存在。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not a valid assembly.">
        <paramref name="assemblyPath" /> 不是有效的組件。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads the assembly with a common object file format (COFF)-based image containing a managed assembly.">載入包含受控組件的通用物件檔案格式 (COFF) 映像組件。</summary>
      <param name="assembly" vsli:raw="A byte array that is a COFF-based image containing a managed assembly.">位元組陣列，該陣列是包含受控組件的 COFF 影像。</param>
      <returns vsli:raw="The loaded assembly.">載入的組件。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a valid assembly.">
        <paramref name="assembly" /> 不是有效的組件。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)">
      <summary vsli:raw="Loads the assembly with a common object file format (COFF)-based image containing a managed assembly, optionally including symbols for the assembly.">載入包含受控組件的通用物件檔案格式 (COFF) 映像組件，並選擇性地包含組件的符號。</summary>
      <param name="assembly" vsli:raw="A byte array that is a COFF-based image containing a managed assembly.">位元組陣列，該陣列是包含受控組件的 COFF 影像。</param>
      <param name="assemblySymbols" vsli:raw="A byte array that contains the raw bytes representing the symbols for the assembly.">位元組陣列，包含表示組件符號的未經處理位元組。</param>
      <returns vsli:raw="The loaded assembly.">載入的組件。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a valid assembly.">
        <paramref name="assembly" /> 不是有效的組件。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)">
      <summary vsli:raw="Allows derived class to load an unmanaged library by name.">允許衍生類別依名稱載入非受控程式庫。</summary>
      <param name="unmanagedDllName" vsli:raw="Name of the unmanaged library. Typically this is the filename without its path or extensions.">非受控程式庫的名稱。 這通常是沒有路徑或副檔名的檔案名稱。</param>
      <returns vsli:raw="A handle to the loaded library, or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">所載入程式庫的控制代碼或 <see cref="F:System.IntPtr.Zero" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)">
      <summary vsli:raw="Loads an unmanaged library from the specified path.">從指定的路徑載入非受控程式庫。</summary>
      <param name="unmanagedDllPath" vsli:raw="The path to the unmanaged library.">非受控程式庫的路徑。</param>
      <returns vsli:raw="The OS handle for the loaded native library.">所載入程式庫的控制代碼。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;unmanagedDllPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="unmanagedDllPath" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;unmanagedDllPath&quot; /&gt; argument is empty or not an absolute path.">
        <paramref name="unmanagedDllPath" /> 引數不是絕對路徑。</exception>
      <exception cref="T:System.IO.FileNotFoundException">找不到非受控程式庫。</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Name">
      <summary vsli:raw="Get the name of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">取得 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 的名稱。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 的名稱。 其值可以是 <see langword="null" />。</returns>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Resolving">
      <summary vsli:raw="Occurs when the resolution of an assembly fails when attempting to load into this assembly load context.">若嘗試載入至這項組件載入內容，解析組件失敗時就會發生這種情況。</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll">
      <summary vsli:raw="Occurs when the resolution of a native library fails.">發生於原生程式庫解析失敗時。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)">
      <summary vsli:raw="Sets the root path where the optimization profiles for this load context are stored.">設定儲存此載入內容中最佳化設定檔的根路徑。</summary>
      <param name="directoryPath" vsli:raw="The full path to the directory where the optimization profiles are stored.">儲存最佳化設定檔的目錄完整路徑。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)">
      <summary vsli:raw="Starts the profile optimization for the specified profile.">為指定的設定檔啟動設定檔最佳化。</summary>
      <param name="profile" vsli:raw="The name of the optimization profile.">最佳化設定檔的名稱。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ToString">
      <summary vsli:raw="Returns the string representation of this load context.">傳回此載入內容的字串表示。</summary>
      <returns vsli:raw="The string representation of this load context.">此載入內容的字串表示。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Unload">
      <summary vsli:raw="Initiates an unload of this &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">起始這個 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 的卸載。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unloading is not allowed.">不允許卸載。</exception>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Unloading">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; is unloaded.">發生於卸載 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 時。</summary>
    </member>
  </members>
</doc>