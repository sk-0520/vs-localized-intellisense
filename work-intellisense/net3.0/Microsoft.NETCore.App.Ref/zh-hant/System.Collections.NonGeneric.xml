<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Collections.NonGeneric</name>
  </assembly>
  <members>
    <member name="T:System.Collections.CaseInsensitiveComparer">
      <summary>比較兩個物件是否相等，忽略字串的大小寫。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor">
      <summary>使用目前執行緒的 <see cref="T:System.Collections.CaseInsensitiveComparer" />，初始化 <see cref="P:System.Threading.Thread.CurrentCulture" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
      <summary>使用指定的 <see cref="T:System.Collections.CaseInsensitiveComparer" />，初始化 <see cref="T:System.Globalization.CultureInfo" /> 類別的新執行個體。</summary>
      <param name="culture">新 <see cref="T:System.Globalization.CultureInfo" /> 所使用的 <see cref="T:System.Collections.CaseInsensitiveComparer" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)">
      <summary>執行兩個相同型別物件的區分大小寫比較，並傳回表示是否某個物件小於、等於或大於另外一方的值。</summary>
      <param name="a">要比較的第一個物件。</param>
      <param name="b">要比較的第二個物件。</param>
      <returns>帶正負號的整數，表示 <paramref name="a" /> 和 <paramref name="b" /> 的相對值，如下表所示。  
  值 
  意義 
  小於零 
 忽略大小寫時 <paramref name="a" /> 小於 <paramref name="b" />。  

  零 
 忽略大小寫時 <paramref name="a" /> 等於 <paramref name="b" />。  

  大於零 
 忽略大小寫時 <paramref name="a" /> 大於 <paramref name="b" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="a" /> 和 <paramref name="b" /> 都不實作 <see cref="T:System.IComparable" /> 介面。  
-或- 
 <paramref name="a" /> 和 <paramref name="b" /> 的型別不同。</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.Default">
      <summary>取得 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的執行個體，它與目前執行緒的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 相關聯，而且永遠可以使用。</summary>
      <returns>
        <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的執行個體，與目前執行緒的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 相關聯。</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant">
      <summary>取得 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的執行個體，它與 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 相關聯，而且永遠可以使用。</summary>
      <returns>
        <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的執行個體，與 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 相關聯。</returns>
    </member>
    <member name="T:System.Collections.CaseInsensitiveHashCodeProvider">
      <summary>使用忽略字串大小寫的雜湊演算法，提供物件的雜湊程式碼。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
      <summary>使用目前執行緒的 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />，初始化 <see cref="P:System.Threading.Thread.CurrentCulture" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
      <summary>使用指定的 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />，初始化 <see cref="T:System.Globalization.CultureInfo" /> 類別的新執行個體。</summary>
      <param name="culture">新 <see cref="T:System.Globalization.CultureInfo" /> 所使用的 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
      <summary>取得 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的執行個體，它與目前執行緒的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 相關聯，而且永遠可以使用。</summary>
      <returns>
        <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的執行個體，與目前執行緒的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 相關聯。</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
      <summary>取得 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的執行個體，它與 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 相關聯，而且永遠可以使用。</summary>
      <returns>
        <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的執行個體，與 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 相關聯。</returns>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
      <summary>傳回給定物件的雜湊程式碼，使用忽略字串大小寫的雜湊演算法。</summary>
      <param name="obj">要傳回雜湊碼的 <see cref="T:System.Object" />。</param>
      <returns>給定物件的雜湊程式碼，使用忽略字串大小寫的雜湊演算法。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Collections.CollectionBase">
      <summary>為強類型集合提供 <see langword="abstract" /> 基底類別。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor">
      <summary>初始化 <see cref="T:System.Collections.CollectionBase" /> 類別的新執行個體，並將其初始容量設定為預設值。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Collections.CollectionBase" /> 類別的新執行個體，並將其容量設定為指定值。</summary>
      <param name="capacity">新清單一開始能夠儲存的項目數目。</param>
    </member>
    <member name="P:System.Collections.CollectionBase.Capacity">
      <summary>取得或設定 <see cref="T:System.Collections.CollectionBase" /> 可包含的項目數目。</summary>
      <returns>
        <see cref="T:System.Collections.CollectionBase" /> 可包含的項目數。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Collections.CollectionBase.Capacity" /> 是設定為小於 <see cref="P:System.Collections.CollectionBase.Count" /> 的值。</exception>
      <exception cref="T:System.OutOfMemoryException">系統上沒有足夠的記憶體可用。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.Clear">
      <summary>從 <see cref="T:System.Collections.CollectionBase" /> 執行個體移除所有的物件。 無法覆寫這個方法。</summary>
    </member>
    <member name="P:System.Collections.CollectionBase.Count">
      <summary>取得包含在 <see cref="T:System.Collections.CollectionBase" /> 執行個體中的項目數目。 這個屬性無法覆寫。</summary>
      <returns>包含在 <see cref="T:System.Collections.CollectionBase" /> 執行個體中的項目數目。  
擷取這個屬性的值是一種 O(1) 運算。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.GetEnumerator">
      <summary>傳回可逐一查看 <see cref="T:System.Collections.CollectionBase" /> 執行個體的列舉值。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 執行個體的 <see cref="T:System.Collections.CollectionBase" />。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.InnerList">
      <summary>取得包含 <see cref="T:System.Collections.ArrayList" /> 執行個體中之元素清單的 <see cref="T:System.Collections.CollectionBase" />。</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> 表示 <see cref="T:System.Collections.CollectionBase" /> 執行個體本身。  
擷取這個屬性的值是一種 O(1) 運算。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.List">
      <summary>取得包含 <see cref="T:System.Collections.IList" /> 執行個體中之元素清單的 <see cref="T:System.Collections.CollectionBase" />。</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> 表示 <see cref="T:System.Collections.CollectionBase" /> 執行個體本身。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClear">
      <summary>當清除 <see cref="T:System.Collections.CollectionBase" /> 執行個體的內容時，執行額外的自訂處理序。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClearComplete">
      <summary>在清除 <see cref="T:System.Collections.CollectionBase" /> 執行個體的內容後，執行額外的自訂處理序。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
      <summary>在將新的元素插入至 <see cref="T:System.Collections.CollectionBase" /> 執行個體前，執行額外的自訂處理序。</summary>
      <param name="index">插入 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">在 <paramref name="index" /> 處的新項目值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
      <summary>在將新的元素插入至 <see cref="T:System.Collections.CollectionBase" /> 執行個體後，執行額外的自訂處理序。</summary>
      <param name="index">插入 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">在 <paramref name="index" /> 處的新項目值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
      <summary>當從 <see cref="T:System.Collections.CollectionBase" /> 執行個體移除元素時，執行額外的自訂處理序。</summary>
      <param name="index">可以找到 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">從 <paramref name="index" /> 移除的項目值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
      <summary>在從 <see cref="T:System.Collections.CollectionBase" /> 執行個體移除元素後，執行額外的自訂處理序。</summary>
      <param name="index">可以找到 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">從 <paramref name="index" /> 移除的項目值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary>在 <see cref="T:System.Collections.CollectionBase" /> 執行個體中設定數值前，執行額外的自訂處理序。</summary>
      <param name="index">可以找到 <paramref name="oldValue" /> 處之以零起始的索引。</param>
      <param name="oldValue">以 <paramref name="newValue" /> 取代的值。</param>
      <param name="newValue">在 <paramref name="index" /> 處的新項目值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>在 <see cref="T:System.Collections.CollectionBase" /> 執行個體中設定數值後，執行額外的自訂處理序。</summary>
      <param name="index">可以找到 <paramref name="oldValue" /> 處之以零起始的索引。</param>
      <param name="oldValue">以 <paramref name="newValue" /> 取代的值。</param>
      <param name="newValue">在 <paramref name="index" /> 處的新項目值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnValidate(System.Object)">
      <summary>當驗證數值時，執行額外的自訂處理序。</summary>
      <param name="value">要驗證的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
      <summary>移除 <see cref="T:System.Collections.CollectionBase" /> 執行個體之指定索引的元素。 這個方法不可覆寫。</summary>
      <param name="index">移除項目之以零為起始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。  
-或- 
 <paramref name="index" /> 等於或大於 <see cref="P:System.Collections.CollectionBase.Count" />。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從目標陣列的指定索引開始，將整個 <see cref="T:System.Collections.CollectionBase" /> 複製到相容的一維 <see cref="T:System.Array" />。</summary>
      <param name="array">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.CollectionBase" /> 複製過來之項目的目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
-或- 
來源 <see cref="T:System.Collections.CollectionBase" /> 中的項目數大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</exception>
      <exception cref="T:System.InvalidCastException">來源 <see cref="T:System.Collections.CollectionBase" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>取得值，這個值表示對 <see cref="T:System.Collections.CollectionBase" /> 的存取是否同步 (安全執行緒)。</summary>
      <returns>如果<see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.CollectionBase" /> ，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>取得可用以同步存取 <see cref="T:System.Collections.CollectionBase" /> 的物件。</summary>
      <returns>可用以同步存取 <see cref="T:System.Collections.CollectionBase" /> 的物件。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
      <summary>將物件加入至 <see cref="T:System.Collections.CollectionBase" /> 的末端。</summary>
      <param name="value">要新增至 <see cref="T:System.Object" /> 尾端的 <see cref="T:System.Collections.CollectionBase" />。</param>
      <returns>已加入 <paramref name="value" /> 的 <see cref="T:System.Collections.CollectionBase" /> 索引。</returns>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> 是唯讀的。  
-或- 
<see cref="T:System.Collections.CollectionBase" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
      <summary>判斷 <see cref="T:System.Collections.CollectionBase" /> 是否含有特定元素。</summary>
      <param name="value">要在 <see cref="T:System.Collections.CollectionBase" /> 中尋找的 <see cref="T:System.Object" />。</param>
      <returns>如果 <see cref="T:System.Collections.CollectionBase" /> 包含指定的 <paramref name="value" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
      <summary>搜尋指定的 <see cref="T:System.Object" />，並傳回在整個 <see cref="T:System.Collections.CollectionBase" /> 中第一個符合項目之以零為起始的索引。</summary>
      <param name="value">要在 <see cref="T:System.Collections.CollectionBase" /> 中尋找的 <see cref="T:System.Object" />。</param>
      <returns>整個 <paramref name="value" /> 中第一個出現 <see cref="T:System.Collections.CollectionBase" /> 之以零為起始的索引 (如有找到)，否則為 -1。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>將項目插入至 <see cref="T:System.Collections.CollectionBase" /> 中指定的索引位置。</summary>
      <param name="index">應在 <paramref name="value" /> 插入以零為起始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。  
-或- 
 <paramref name="index" /> 大於 <see cref="P:System.Collections.CollectionBase.Count" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> 是唯讀的。  
-或- 
<see cref="T:System.Collections.CollectionBase" /> 具有固定的大小。</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
      <summary>取得值，指出 <see cref="T:System.Collections.CollectionBase" /> 是否有固定的大小。</summary>
      <returns>如果<see langword="true" /> 有固定大小，則為 <see cref="T:System.Collections.CollectionBase" /> ，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
      <summary>取得值，指出 <see cref="T:System.Collections.CollectionBase" /> 是否唯讀。</summary>
      <returns>如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Collections.CollectionBase" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
      <summary>在指定的索引位置上取得或設定項目。</summary>
      <param name="index">要取得或設定之以零為起始的項目索引。</param>
      <returns>在指定索引上的項目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。  
-或- 
 <paramref name="index" /> 等於或大於 <see cref="P:System.Collections.CollectionBase.Count" />。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
      <summary>從 <see cref="T:System.Collections.CollectionBase" /> 移除特定物件之第一個符合的元素。</summary>
      <param name="value">要從 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.CollectionBase" />。</param>
      <exception cref="T:System.ArgumentException">在 <see cref="T:System.Collections.CollectionBase" /> 物件中找不到 <paramref name="value" /> 參數。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> 是唯讀的。  
-或- 
<see cref="T:System.Collections.CollectionBase" /> 具有固定的大小。</exception>
    </member>
    <member name="T:System.Collections.DictionaryBase">
      <summary>提供索引鍵/值組配對強式集合的 <see langword="abstract" /> 基底類別。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.#ctor">
      <summary>初始化 <see cref="T:System.Collections.DictionaryBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.Clear">
      <summary>清除 <see cref="T:System.Collections.DictionaryBase" /> 執行個體的內容。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
      <summary>將 <see cref="T:System.Collections.DictionaryBase" /> 元素複製到指定索引的一維 <see cref="T:System.Array" />。</summary>
      <param name="array">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.DictionaryEntry" /> 執行個體複製過來的 <see cref="T:System.Collections.DictionaryBase" /> 物件之目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
-或- 
來源 <see cref="T:System.Collections.DictionaryBase" /> 中的項目數大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</exception>
      <exception cref="T:System.InvalidCastException">來源 <see cref="T:System.Collections.DictionaryBase" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.Count">
      <summary>取得包含在 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中的項目數目。</summary>
      <returns>包含在 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中的項目數目。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Dictionary">
      <summary>取得包含於 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中的元素清單。</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> 表示 <see cref="T:System.Collections.DictionaryBase" /> 執行個體本身。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.GetEnumerator">
      <summary>傳回能夠逐一查看 <see cref="T:System.Collections.IDictionaryEnumerator" /> 執行個體的 <see cref="T:System.Collections.DictionaryBase" />。</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> 執行個體的 <see cref="T:System.Collections.DictionaryBase" />。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.InnerHashtable">
      <summary>取得包含於 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中的元素清單。</summary>
      <returns>表示 <see cref="T:System.Collections.Hashtable" /> 執行個體本身的 <see cref="T:System.Collections.DictionaryBase" />。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClear">
      <summary>在清除 <see cref="T:System.Collections.DictionaryBase" /> 執行個體的內容前，執行額外的自訂處理序。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClearComplete">
      <summary>在清除 <see cref="T:System.Collections.DictionaryBase" /> 執行個體的內容後，執行額外的自訂處理序。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
      <summary>取得 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中具有指定索引鍵和值的元素。</summary>
      <param name="key">要取得的元素索引鍵。</param>
      <param name="currentValue">與 <paramref name="key" /> 關聯之元素的目前值。</param>
      <returns>
        <see cref="T:System.Object" /> 包含的元素具有指定的索引鍵和值。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
      <summary>在將新的元素插入至 <see cref="T:System.Collections.DictionaryBase" /> 執行個體前，執行額外的自訂處理序。</summary>
      <param name="key">要插入的元素索引鍵。</param>
      <param name="value">要插入的元素值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
      <summary>在將新的元素插入至 <see cref="T:System.Collections.DictionaryBase" /> 執行個體後，執行額外的自訂處理序。</summary>
      <param name="key">要插入的元素索引鍵。</param>
      <param name="value">要插入的元素值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
      <summary>在從 <see cref="T:System.Collections.DictionaryBase" /> 執行個體移除元素前，執行額外的自訂處理序。</summary>
      <param name="key">要移除的項目索引鍵。</param>
      <param name="value">要移除的元素值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
      <summary>在從 <see cref="T:System.Collections.DictionaryBase" /> 執行個體移除元素後，執行額外的自訂處理序。</summary>
      <param name="key">要移除的項目索引鍵。</param>
      <param name="value">要移除的元素值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
      <summary>在 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中設定數值前，執行額外的自訂處理序。</summary>
      <param name="key">要尋找的元素索引鍵。</param>
      <param name="oldValue">與 <paramref name="key" /> 關聯之元素的舊值。</param>
      <param name="newValue">與 <paramref name="key" /> 關聯之元素的新值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
      <summary>在 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中設定數值後，執行額外的自訂處理序。</summary>
      <param name="key">要尋找的元素索引鍵。</param>
      <param name="oldValue">與 <paramref name="key" /> 關聯之元素的舊值。</param>
      <param name="newValue">與 <paramref name="key" /> 關聯之元素的新值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
      <summary>在使用指定的索引鍵及值驗證元素時，執行額外的自訂處理序。</summary>
      <param name="key">要驗證的元素索引鍵。</param>
      <param name="value">要驗證的元素值。</param>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
      <summary>取得值，指出對 <see cref="T:System.Collections.DictionaryBase" /> 物件的存取是否為同步的 (執行緒安全)。</summary>
      <returns>如果要同步處理 (執行緒安全) 對 <see cref="T:System.Collections.DictionaryBase" /> 物件的存取，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
      <summary>取得可用來同步存取 <see cref="T:System.Collections.DictionaryBase" /> 物件的物件。</summary>
      <returns>可用來同步處理對 <see cref="T:System.Collections.DictionaryBase" /> 物件之存取的物件。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>將有指定索引鍵和數值的項目加入 <see cref="T:System.Collections.DictionaryBase" />。</summary>
      <param name="key">要加入的項目的索引鍵。</param>
      <param name="value">要加入的項目的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Collections.DictionaryBase" /> 中已存在具有相同索引鍵的元素。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.DictionaryBase" /> 是唯讀的。  
-或- 
<see cref="T:System.Collections.DictionaryBase" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
      <summary>判斷 <see cref="T:System.Collections.DictionaryBase" /> 是否包含特定索引鍵。</summary>
      <param name="key">要在 <see cref="T:System.Collections.DictionaryBase" /> 中尋找的索引鍵。</param>
      <returns>如果 <see langword="true" /> 包含具有指定索引鍵的項目，則為 <see cref="T:System.Collections.DictionaryBase" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
      <summary>取得值，指出 <see cref="T:System.Collections.DictionaryBase" /> 物件是否具有固定的大小。</summary>
      <returns>如果 <see cref="T:System.Collections.DictionaryBase" /> 物件有固定大小，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
      <summary>取得值，指出 <see cref="T:System.Collections.DictionaryBase" /> 物件是否為唯讀。</summary>
      <returns>如果 <see cref="T:System.Collections.DictionaryBase" /> 物件是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
      <summary>取得或設定與指定之索引鍵相關聯的值。</summary>
      <param name="key">索引鍵，要讀取或設定其值。</param>
      <returns>與指定之索引鍵關聯的值。 如果找不到指定的索引鍵，嘗試取得將傳回 <see langword="null" />，並且嘗試設定會使用指定的索引鍵建立新的元素。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">屬性已設定，而且 <see cref="T:System.Collections.DictionaryBase" /> 是唯讀的。  
-或- 
屬性已設定、<paramref name="key" /> 不在於集合中，而且 <see cref="T:System.Collections.DictionaryBase" /> 的大小固定。</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
      <summary>取得 <see cref="T:System.Collections.ICollection" /> 物件，其中包含 <see cref="T:System.Collections.DictionaryBase" /> 物件中的索引鍵。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 物件，其中包含 <see cref="T:System.Collections.DictionaryBase" /> 物件中的索引鍵。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
      <summary>從 <see cref="T:System.Collections.DictionaryBase" /> 中移除具有指定之索引鍵的項目。</summary>
      <param name="key">要移除的項目索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.DictionaryBase" /> 是唯讀的。  
-或- 
<see cref="T:System.Collections.DictionaryBase" /> 具有固定的大小。</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
      <summary>取得 <see cref="T:System.Collections.ICollection" /> 物件，其中含有 <see cref="T:System.Collections.DictionaryBase" /> 物件中的值。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 物件，其中含有 <see cref="T:System.Collections.DictionaryBase" /> 物件中的值。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回透過 <see cref="T:System.Collections.IEnumerator" /> 重複的 <see cref="T:System.Collections.DictionaryBase" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.DictionaryBase" />。</returns>
    </member>
    <member name="T:System.Collections.Queue">
      <summary>表示物件的先進先出 (FIFO) 集合。</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor">
      <summary>初始化 <see cref="T:System.Collections.Queue" /> 類別的新執行個體，其為空白、具有預設初始容量且使用預設的等比級數因數。</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
      <summary>初始化 <see cref="T:System.Collections.Queue" /> 類別的新執行個體，其中含有從指定之集合複製過來的項目、具有與複製的項目數一樣的初始容量且使用預設的等比級數因數。</summary>
      <param name="col">要複製元素來源的 <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Collections.Queue" /> 類別的新執行個體，其為空白、具有初始容量且使用預設的等比級數因數。</summary>
      <param name="capacity">
        <see cref="T:System.Collections.Queue" /> 可包含的初始項目數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 小於零。</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
      <summary>初始化 <see cref="T:System.Collections.Queue" /> 類別的新執行個體，其為空白、具有初始容量且使用指定的等比級數因數。</summary>
      <param name="capacity">
        <see cref="T:System.Collections.Queue" /> 可包含的初始項目數。</param>
      <param name="growFactor">擴充 <see cref="T:System.Collections.Queue" /> 之容量的因數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 小於零。  
-或- 
 <paramref name="growFactor" /> 小於 1.0 或大於 10.0。</exception>
    </member>
    <member name="M:System.Collections.Queue.Clear">
      <summary>從 <see cref="T:System.Collections.Queue" /> 移除所有物件。</summary>
    </member>
    <member name="M:System.Collections.Queue.Clone">
      <summary>建立 <see cref="T:System.Collections.Queue" /> 的淺層複本。</summary>
      <returns>
        <see cref="T:System.Collections.Queue" /> 的淺層複本。</returns>
    </member>
    <member name="M:System.Collections.Queue.Contains(System.Object)">
      <summary>判斷某項目是否在 <see cref="T:System.Collections.Queue" /> 中。</summary>
      <param name="obj">要在 <see cref="T:System.Collections.Queue" /> 中尋找的 <see cref="T:System.Object" />。 這個值可以是 <see langword="null" />。</param>
      <returns>如果在 <see langword="true" /> 中找到 <paramref name="obj" />，則為 <see cref="T:System.Collections.Queue" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
      <summary>從指定的陣列索引處開始，複製 <see cref="T:System.Collections.Queue" /> 元素至現有一維 <see cref="T:System.Array" />。</summary>
      <param name="array">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.Queue" /> 複製過來之項目的目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
-或- 
來源 <see cref="T:System.Collections.Queue" /> 中的項目數大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</exception>
      <exception cref="T:System.ArrayTypeMismatchException">來源 <see cref="T:System.Collections.Queue" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</exception>
    </member>
    <member name="P:System.Collections.Queue.Count">
      <summary>取得 <see cref="T:System.Collections.Queue" /> 中所包含的項目數。</summary>
      <returns>
        <see cref="T:System.Collections.Queue" /> 中所包含的項目數。</returns>
    </member>
    <member name="M:System.Collections.Queue.Dequeue">
      <summary>移除並傳回在 <see cref="T:System.Collections.Queue" /> 前端的物件。</summary>
      <returns>從 <see cref="T:System.Collections.Queue" /> 前端移除的物件。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.Queue" /> 是空的。</exception>
    </member>
    <member name="M:System.Collections.Queue.Enqueue(System.Object)">
      <summary>將物件加入至 <see cref="T:System.Collections.Queue" /> 的末端。</summary>
      <param name="obj">要加入至 <see cref="T:System.Collections.Queue" /> 的物件。 這個值可以是 <see langword="null" />。</param>
    </member>
    <member name="M:System.Collections.Queue.GetEnumerator">
      <summary>傳回在 <see cref="T:System.Collections.Queue" /> 中逐一查看的列舉值。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.Queue" />。</returns>
    </member>
    <member name="P:System.Collections.Queue.IsSynchronized">
      <summary>取得值，這個值表示對 <see cref="T:System.Collections.Queue" /> 的存取是否同步 (安全執行緒)。</summary>
      <returns>如果<see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.Queue" /> ，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.Queue.Peek">
      <summary>傳回 <see cref="T:System.Collections.Queue" /> 前端的物件而不需移除它。</summary>
      <returns>在 <see cref="T:System.Collections.Queue" /> 前端的物件。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.Queue" /> 是空的。</exception>
    </member>
    <member name="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
      <summary>傳回包裝原始佇列並且為安全執行緒的新 <see cref="T:System.Collections.Queue" />。</summary>
      <param name="queue">要同步處理的 <see cref="T:System.Collections.Queue" />。</param>
      <returns>同步 (安全執行緒) 的 <see cref="T:System.Collections.Queue" /> 包裝函式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="queue" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Collections.Queue.SyncRoot">
      <summary>取得可用以同步存取 <see cref="T:System.Collections.Queue" /> 的物件。</summary>
      <returns>可用以同步存取 <see cref="T:System.Collections.Queue" /> 的物件。</returns>
    </member>
    <member name="M:System.Collections.Queue.ToArray">
      <summary>將 <see cref="T:System.Collections.Queue" /> 元素複製到新的陣列。</summary>
      <returns>新的陣列，包含複製自 <see cref="T:System.Collections.Queue" /> 的元素。</returns>
    </member>
    <member name="M:System.Collections.Queue.TrimToSize">
      <summary>將容量設為 <see cref="T:System.Collections.Queue" /> 中的實際項目數目。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Queue" /> 是唯讀的。</exception>
    </member>
    <member name="T:System.Collections.ReadOnlyCollectionBase">
      <summary>提供強式非泛型唯讀集合的 <see langword="abstract" /> 基底類別。</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.#ctor">
      <summary>初始化 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.Count">
      <summary>取得包含在 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 執行個體中的項目數目。</summary>
      <returns>包含在 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 執行個體中的項目數目。  
擷取這個屬性的值是一種 O(1) 運算。</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
      <summary>傳回可逐一查看 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 執行個體的列舉值。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 執行個體的 <see cref="T:System.Collections.ReadOnlyCollectionBase" />。</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.InnerList">
      <summary>取得包含於 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 執行個體中的元素清單。</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> 表示 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 執行個體本身。</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從目標陣列的指定索引開始，將整個 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 複製到相容的一維 <see cref="T:System.Array" />。</summary>
      <param name="array">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 複製過來之項目的目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
-或- 
來源 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 中的項目數大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</exception>
      <exception cref="T:System.InvalidCastException">來源 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</exception>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>取得值，指出對 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 物件的存取是否為同步的 (執行緒安全)。</summary>
      <returns>如果要同步處理 (執行緒安全) 對 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 物件的存取，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>取得可用來同步存取 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 物件的物件。</summary>
      <returns>可用來同步處理對 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 物件之存取的物件。</returns>
    </member>
    <member name="T:System.Collections.SortedList">
      <summary>表示索引鍵/值組配對的集合，這個集合按索引鍵排序，而且可以按索引鍵和索引存取。</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor">
      <summary>初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，其為空白、具有預設的初始容量，而且其排序依據為已加入至 <see cref="T:System.IComparable" /> 之每個索引鍵所實作的 <see cref="T:System.Collections.SortedList" /> 介面。</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
      <summary>初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，其為空白且具有預設的初始容量，並根據指定的 <see cref="T:System.Collections.IComparer" /> 介面排序。</summary>
      <param name="comparer">比較索引鍵時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。  
-或- 
 要使用每個索引鍵之 <see cref="T:System.IComparable" /> 實作的 <see langword="null" />。</param>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
      <summary>初始化 <see cref="T:System.Collections.SortedList" /> 類別新執行個體，其為空白且具有指定的初始容量，並根據指定的 <see cref="T:System.Collections.IComparer" /> 介面排序。</summary>
      <param name="comparer">比較索引鍵時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。  
-或- 
 要使用每個索引鍵之 <see cref="T:System.IComparable" /> 實作的 <see langword="null" />。</param>
      <param name="capacity">
        <see cref="T:System.Collections.SortedList" /> 物件可包含的初始元素數目。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 小於零。</exception>
      <exception cref="T:System.OutOfMemoryException">沒有足夠的記憶體可用，無法建立具有所指定 <paramref name="capacity" /> 的 <see cref="T:System.Collections.SortedList" /> 物件。</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
      <summary>初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，其含有從指定的字典複製過來的元素、具有與複製的元素數一樣的初始容量且根據每一個索引鍵實作的 <see cref="T:System.IComparable" /> 介面排序。</summary>
      <param name="d">要複製到新 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.SortedList" /> 實作。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="d" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable" /> 介面。</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
      <summary>初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，其含有從指定的字典複製過來的元素、具有與複製的元素數一樣的初始容量且根據指定的 <see cref="T:System.Collections.IComparer" /> 介面排序。</summary>
      <param name="d">要複製到新 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.SortedList" /> 實作。</param>
      <param name="comparer">比較索引鍵時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。  
-或- 
 要使用每個索引鍵之 <see cref="T:System.IComparable" /> 實作的 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="comparer" /> 為 <see langword="null" />，而且 <paramref name="d" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable" /> 介面。</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，其為空白、具有指定的初始容量，而且其排序依據為已加入至 <see cref="T:System.IComparable" /> 之每個索引鍵所實作的 <see cref="T:System.Collections.SortedList" /> 介面。</summary>
      <param name="initialCapacity">
        <see cref="T:System.Collections.SortedList" /> 物件可包含的初始元素數目。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCapacity" /> 小於零。</exception>
      <exception cref="T:System.OutOfMemoryException">沒有足夠的記憶體可用，無法建立具有所指定 <paramref name="initialCapacity" /> 的 <see cref="T:System.Collections.SortedList" /> 物件。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Add(System.Object,System.Object)">
      <summary>將具有指定索引鍵和值的元素加入至 <see cref="T:System.Collections.SortedList" /> 物件。</summary>
      <param name="key">要加入的項目的索引鍵。</param>
      <param name="value">要加入的項目的值。 這個值可以是 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Collections.SortedList" /> 物件中己經包含具有指定之 <paramref name="key" /> 的元素。  
-或- 
<see cref="T:System.Collections.SortedList" /> 設定為使用 <see cref="T:System.IComparable" /> 介面，而且 <paramref name="key" /> 沒有實作 <see cref="T:System.IComparable" /> 介面。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> 是唯讀的。  
-或- 
<see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
      <exception cref="T:System.OutOfMemoryException">沒有足夠的記憶體可用，無法將元素加入至 <see cref="T:System.Collections.SortedList" />。</exception>
      <exception cref="T:System.InvalidOperationException">比較子會擲回例外狀況。</exception>
    </member>
    <member name="P:System.Collections.SortedList.Capacity">
      <summary>取得或設定 <see cref="T:System.Collections.SortedList" /> 物件的容量。</summary>
      <returns>
        <see cref="T:System.Collections.SortedList" /> 物件能夠包含的元素數目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指派的值小於 <see cref="T:System.Collections.SortedList" /> 物件中目前的元素數目。</exception>
      <exception cref="T:System.OutOfMemoryException">系統上沒有足夠的記憶體可用。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clear">
      <summary>將所有元素從 <see cref="T:System.Collections.SortedList" /> 物件移除。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> 物件是唯讀的。  
-或- 
<see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clone">
      <summary>建立 <see cref="T:System.Collections.SortedList" /> 物件的淺層複本 (Shallow Copy)。</summary>
      <returns>
        <see cref="T:System.Collections.SortedList" /> 物件的淺層複本。</returns>
    </member>
    <member name="M:System.Collections.SortedList.Contains(System.Object)">
      <summary>判斷 <see cref="T:System.Collections.SortedList" /> 物件是否包含特定索引鍵。</summary>
      <param name="key">要在 <see cref="T:System.Collections.SortedList" /> 物件中尋找的索引鍵。</param>
      <returns>如果 <see cref="T:System.Collections.SortedList" /> 物件包含的元素有指定的 <paramref name="key" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">比較子會擲回例外狀況。</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsKey(System.Object)">
      <summary>判斷 <see cref="T:System.Collections.SortedList" /> 物件是否包含特定索引鍵。</summary>
      <param name="key">要在 <see cref="T:System.Collections.SortedList" /> 物件中尋找的索引鍵。</param>
      <returns>如果 <see cref="T:System.Collections.SortedList" /> 物件包含的元素有指定的 <paramref name="key" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">比較子會擲回例外狀況。</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsValue(System.Object)">
      <summary>判斷 <see cref="T:System.Collections.SortedList" /> 物件是否包含特定的值。</summary>
      <param name="value">要在 <see cref="T:System.Collections.SortedList" /> 物件中尋找的值。 這個值可以是 <see langword="null" />。</param>
      <returns>如果 <see cref="T:System.Collections.SortedList" /> 物件包含的元素有指定的 <paramref name="value" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
      <summary>從陣列中指定的索引處開始，將 <see cref="T:System.Collections.SortedList" /> 元素複製到一維 <see cref="T:System.Array" /> 物件中。</summary>
      <param name="array">一維 <see cref="T:System.Array" /> 物件，其為從 <see cref="T:System.Collections.DictionaryEntry" /> 複製之 <see cref="T:System.Collections.SortedList" /> 物件的目的地。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
-或- 
來源 <see cref="T:System.Collections.SortedList" /> 物件中的元素數目，大於從 <paramref name="arrayIndex" /> 到目的 <paramref name="array" /> 結尾的可用空間。</exception>
      <exception cref="T:System.InvalidCastException">來源 <see cref="T:System.Collections.SortedList" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</exception>
    </member>
    <member name="P:System.Collections.SortedList.Count">
      <summary>取得 <see cref="T:System.Collections.SortedList" /> 物件中所包含的元素數目。</summary>
      <returns>
        <see cref="T:System.Collections.SortedList" /> 物件中所包含的元素數目。</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetByIndex(System.Int32)">
      <summary>取得 <see cref="T:System.Collections.SortedList" /> 物件中指定之索引處的值。</summary>
      <param name="index">要取得的值的以零為起始的索引。</param>
      <returns>
        <see cref="T:System.Collections.SortedList" /> 中指定之索引處的值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 在 <see cref="T:System.Collections.SortedList" /> 物件的有效索引範圍之外。</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetEnumerator">
      <summary>傳回可在 <see cref="T:System.Collections.IDictionaryEnumerator" /> 物件中逐一查看的 <see cref="T:System.Collections.SortedList" /> 物件。</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> 物件的 <see cref="T:System.Collections.SortedList" /> 物件。</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKey(System.Int32)">
      <summary>取得 <see cref="T:System.Collections.SortedList" /> 物件中指定之索引處的索引鍵。</summary>
      <param name="index">要取得的索引鍵之以零為起始的索引。</param>
      <returns>
        <see cref="T:System.Collections.SortedList" /> 物件中指定之索引處的索引鍵。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 在 <see cref="T:System.Collections.SortedList" /> 物件的有效索引範圍之外。</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetKeyList">
      <summary>取得 <see cref="T:System.Collections.SortedList" /> 物件中的索引鍵。</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> 物件，其中包含 <see cref="T:System.Collections.SortedList" /> 物件中的索引鍵。</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetValueList">
      <summary>取得 <see cref="T:System.Collections.SortedList" /> 物件中的值。</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> 物件，其中含有 <see cref="T:System.Collections.SortedList" /> 物件中的值。</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfKey(System.Object)">
      <summary>傳回 <see cref="T:System.Collections.SortedList" /> 物件中指定之索引鍵的以零起始之索引。</summary>
      <param name="key">要在 <see cref="T:System.Collections.SortedList" /> 物件中尋找的索引鍵。</param>
      <returns>如果在 <see cref="T:System.Collections.SortedList" /> 物件中找到 <paramref name="key" />，則為 <paramref name="key" /> 參數之以零起始的索引，否則為 -1。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">比較子會擲回例外狀況。</exception>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfValue(System.Object)">
      <summary>傳回 <see cref="T:System.Collections.SortedList" /> 物件中指定之值的第一個符合項目的以零起始之索引。</summary>
      <param name="value">要在 <see cref="T:System.Collections.SortedList" /> 物件中尋找的值。 這個值可以是 <see langword="null" />。</param>
      <returns>如果在 <see cref="T:System.Collections.SortedList" /> 物件中找到 <paramref name="value" />，則為 <paramref name="value" /> 參數第一個符合項目之以零起始的索引，否則為 -1。</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsFixedSize">
      <summary>取得值，指出 <see cref="T:System.Collections.SortedList" /> 物件是否具有固定的大小。</summary>
      <returns>如果 <see cref="T:System.Collections.SortedList" /> 物件有固定大小，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsReadOnly">
      <summary>取得值，指出 <see cref="T:System.Collections.SortedList" /> 物件是否為唯讀。</summary>
      <returns>如果 <see cref="T:System.Collections.SortedList" /> 物件是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsSynchronized">
      <summary>取得值，指出對 <see cref="T:System.Collections.SortedList" /> 物件的存取是否為同步的 (執行緒安全)。</summary>
      <returns>如果要同步處理 (執行緒安全) 對 <see cref="T:System.Collections.SortedList" /> 物件的存取，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.SortedList.Item(System.Object)">
      <summary>取得或設定與 <see cref="T:System.Collections.SortedList" /> 物件中特定索引鍵建立關聯的值。</summary>
      <param name="key">與要取得或設定的值相關聯的索引鍵。</param>
      <returns>如果找到 <paramref name="key" />，則為與 <see cref="T:System.Collections.SortedList" /> 物件中 <paramref name="key" /> 參數相關聯的值，否則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">已設定該屬性，<see cref="T:System.Collections.SortedList" /> 物件是唯讀的。  
-或- 
屬性已設定、<paramref name="key" /> 不在於集合中，而且 <see cref="T:System.Collections.SortedList" /> 的大小固定。</exception>
      <exception cref="T:System.OutOfMemoryException">沒有足夠的記憶體可用，無法將元素加入至 <see cref="T:System.Collections.SortedList" />。</exception>
      <exception cref="T:System.InvalidOperationException">比較子會擲回例外狀況。</exception>
    </member>
    <member name="P:System.Collections.SortedList.Keys">
      <summary>取得 <see cref="T:System.Collections.SortedList" /> 物件中的索引鍵。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 物件，其中包含 <see cref="T:System.Collections.SortedList" /> 物件中的索引鍵。</returns>
    </member>
    <member name="M:System.Collections.SortedList.Remove(System.Object)">
      <summary>從 <see cref="T:System.Collections.SortedList" /> 物件中移除具有指定之索引鍵的元素。</summary>
      <param name="key">要移除的項目索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> 物件是唯讀的。  
-或- 
<see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.SortedList.RemoveAt(System.Int32)">
      <summary>移除 <see cref="T:System.Collections.SortedList" /> 物件中指定索引處的元素。</summary>
      <param name="index">移除項目之以零為起始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 在 <see cref="T:System.Collections.SortedList" /> 物件的有效索引範圍之外。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> 是唯讀的。  
-或- 
<see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
      <summary>取代 <see cref="T:System.Collections.SortedList" /> 物件中特定索引處的值。</summary>
      <param name="index">要儲存 <paramref name="value" /> 的地方的以零起始的索引。</param>
      <param name="value">要儲存到 <see cref="T:System.Object" /> 物件中的 <see cref="T:System.Collections.SortedList" />。 這個值可以是 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 在 <see cref="T:System.Collections.SortedList" /> 物件的有效索引範圍之外。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
      <summary>傳回 <see cref="T:System.Collections.SortedList" /> 物件的同步處理 (安全執行緒) 包裝函式。</summary>
      <param name="list">要同步處理的 <see cref="T:System.Collections.SortedList" /> 物件。</param>
      <returns>
        <see cref="T:System.Collections.SortedList" /> 物件的同步處理 (安全執行緒) 包裝函式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Collections.SortedList.SyncRoot">
      <summary>取得可用來同步存取 <see cref="T:System.Collections.SortedList" /> 物件的物件。</summary>
      <returns>可用來同步處理對 <see cref="T:System.Collections.SortedList" /> 物件之存取的物件。</returns>
    </member>
    <member name="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回透過 <see cref="T:System.Collections.IEnumerator" /> 重複的 <see cref="T:System.Collections.SortedList" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.SortedList" />。</returns>
    </member>
    <member name="M:System.Collections.SortedList.TrimToSize">
      <summary>將容量設為 <see cref="T:System.Collections.SortedList" /> 物件中的實際元素數目。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> 物件是唯讀的。  
-或- 
<see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
    </member>
    <member name="P:System.Collections.SortedList.Values">
      <summary>取得 <see cref="T:System.Collections.SortedList" /> 物件中的值。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 物件，其中含有 <see cref="T:System.Collections.SortedList" /> 物件中的值。</returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary>建立忽略大小寫的字串集合。</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary>初始化 <see cref="T:System.Collections.Specialized.CollectionsUtil" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary>建立具有預設初始容量的 <see cref="T:System.Collections.Hashtable" /> 類別之新的區分大小寫執行個體。</summary>
      <returns>具有預設初始容量的 <see cref="T:System.Collections.Hashtable" /> 類別之新的區分大小寫執行個體。</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary>從指定的字典複製項目到具有與複製項目數相同的初始容量之 <see cref="T:System.Collections.Hashtable" /> 類別之新的不區分大小寫執行個體。</summary>
      <param name="d">要複製至新的不區分大小寫之 <see cref="T:System.Collections.IDictionary" /> 的 <see cref="T:System.Collections.Hashtable" />。</param>
      <returns>
        <see cref="T:System.Collections.Hashtable" /> 類別之新的不區分大小寫執行個體，含有來自指定 <see cref="T:System.Collections.IDictionary" /> 的項目。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary>建立具有指定初始容量的 <see cref="T:System.Collections.Hashtable" /> 類別之新的區分大小寫執行個體。</summary>
      <param name="capacity">
        <see cref="T:System.Collections.Hashtable" /> 可初始包含項目的大約數目。</param>
      <returns>具有指定初始容量的 <see cref="T:System.Collections.Hashtable" /> 類別之新的區分大小寫執行個體。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 小於零。</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary>建立忽略字串大小寫的 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體。</summary>
      <returns>
        <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，忽略字串的大小寫。</returns>
    </member>
    <member name="T:System.Collections.Stack">
      <summary>表示簡單之物件的後進先出 (Last-In First-Out，LIFO) 非泛型集合。</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor">
      <summary>初始化 <see cref="T:System.Collections.Stack" /> 類別的新執行個體，這個執行個體為空白且具有預設的初始容量。</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
      <summary>初始化 <see cref="T:System.Collections.Stack" /> 類別的新執行個體，其含有從指定的集合複製過來的元素且具有與複製的元素數一樣的初始容量。</summary>
      <param name="col">要複製元素來源的 <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Collections.Stack" /> 類別的新執行個體，其為空白且具有指定的初始容量或預設的初始容量 (兩者中較大的那一個)。</summary>
      <param name="initialCapacity">
        <see cref="T:System.Collections.Stack" /> 可包含的初始項目數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCapacity" /> 小於零。</exception>
    </member>
    <member name="M:System.Collections.Stack.Clear">
      <summary>從 <see cref="T:System.Collections.Stack" /> 移除所有物件。</summary>
    </member>
    <member name="M:System.Collections.Stack.Clone">
      <summary>建立 <see cref="T:System.Collections.Stack" /> 的淺層複本。</summary>
      <returns>
        <see cref="T:System.Collections.Stack" /> 的淺層複本。</returns>
    </member>
    <member name="M:System.Collections.Stack.Contains(System.Object)">
      <summary>判斷某項目是否在 <see cref="T:System.Collections.Stack" /> 中。</summary>
      <param name="obj">要在 <see cref="T:System.Collections.Stack" /> 中尋找的物件。 這個值可以是 <see langword="null" />。</param>
      <returns>如果在 <see langword="true" /> 中找到 <paramref name="obj" />，則為 <see cref="T:System.Collections.Stack" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
      <summary>從指定的陣列索引處開始，複製 <see cref="T:System.Collections.Stack" /> 至現有一維 <see cref="T:System.Array" />。</summary>
      <param name="array">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.Stack" /> 複製過來之項目的目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
-或- 
來源 <see cref="T:System.Collections.Stack" /> 中的項目數大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</exception>
      <exception cref="T:System.InvalidCastException">來源 <see cref="T:System.Collections.Stack" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</exception>
    </member>
    <member name="P:System.Collections.Stack.Count">
      <summary>取得 <see cref="T:System.Collections.Stack" /> 中所包含的項目數。</summary>
      <returns>
        <see cref="T:System.Collections.Stack" /> 中所包含的項目數。</returns>
    </member>
    <member name="M:System.Collections.Stack.GetEnumerator">
      <summary>傳回 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.Stack" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.Stack" />。</returns>
    </member>
    <member name="P:System.Collections.Stack.IsSynchronized">
      <summary>取得值，這個值表示對 <see cref="T:System.Collections.Stack" /> 的存取是否同步 (安全執行緒)。</summary>
      <returns>如果存取 <see cref="T:System.Collections.Stack" /> 已同步處理 (執行緒安全) 則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.Stack.Peek">
      <summary>傳回 <see cref="T:System.Collections.Stack" /> 頂端的物件而不需移除它。</summary>
      <returns>在 <see cref="T:System.Object" /> 頂端的 <see cref="T:System.Collections.Stack" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.Stack" /> 是空的。</exception>
    </member>
    <member name="M:System.Collections.Stack.Pop">
      <summary>移除並傳回在 <see cref="T:System.Collections.Stack" /> 頂端的物件。</summary>
      <returns>從 <see cref="T:System.Object" /> 頂端移除的 <see cref="T:System.Collections.Stack" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Collections.Stack" /> 是空的。</exception>
    </member>
    <member name="M:System.Collections.Stack.Push(System.Object)">
      <summary>將物件插入 <see cref="T:System.Collections.Stack" /> 的頂端。</summary>
      <param name="obj">要推入至 <see cref="T:System.Object" /> 的 <see cref="T:System.Collections.Stack" />。 這個值可以是 <see langword="null" />。</param>
    </member>
    <member name="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
      <summary>傳回 <see cref="T:System.Collections.Stack" /> 同步處理的 (安全執行緒) 包裝函式。</summary>
      <param name="stack">要同步處理的 <see cref="T:System.Collections.Stack" />。</param>
      <returns>在 <see cref="T:System.Collections.Stack" /> 周圍的同步包裝函式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stack" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Collections.Stack.SyncRoot">
      <summary>取得可用以同步存取 <see cref="T:System.Collections.Stack" /> 的物件。</summary>
      <returns>
        <see cref="T:System.Object" />，可用來對 <see cref="T:System.Collections.Stack" /> 進行同步存取。</returns>
    </member>
    <member name="M:System.Collections.Stack.ToArray">
      <summary>複製 <see cref="T:System.Collections.Stack" /> 至新陣列。</summary>
      <returns>新陣列，包含 <see cref="T:System.Collections.Stack" /> 之元素的複本。</returns>
    </member>
  </members>
</doc>