<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Thread</name>
  </assembly>
  <members>
    <member name="T:System.LocalDataStoreSlot">
      <summary vsli:raw="Encapsulates a memory slot to store local data. This class cannot be inherited.">封裝記憶體位置以儲存區域資料。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.LocalDataStoreSlot.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; object.">確認釋出資源，並在記憶體回收行程回收 <see cref="T:System.LocalDataStoreSlot" /> 物件時執行其他清除作業。</summary>
    </member>
    <member name="T:System.Threading.ApartmentState">
      <summary vsli:raw="Specifies the apartment state of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">指定 <see cref="T:System.Threading.Thread" /> 的 Apartment 狀態。</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.MTA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a multithreaded apartment.">
        <see cref="T:System.Threading.Thread" /> 會建立並且輸入多執行緒 Apartment。</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.STA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a single-threaded apartment.">
        <see cref="T:System.Threading.Thread" /> 會建立並且輸入單一執行緒 Apartment。</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.Unknown">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Threading.Thread.ApartmentState&quot; /&gt; property has not been set.">
        <see cref="P:System.Threading.Thread.ApartmentState" /> 屬性尚未設定。</summary>
    </member>
    <member name="T:System.Threading.CompressedStack">
      <summary vsli:raw="Provides methods for setting and capturing the compressed stack on the current thread. This class cannot be inherited.">提供用來在目前執行緒上設定及擷取壓縮堆疊的方法。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Threading.CompressedStack.Capture">
      <summary vsli:raw="Captures the compressed stack from the current thread.">從目前的執行緒擷取壓縮堆疊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object.">
        <see cref="T:System.Threading.CompressedStack" /> 物件。</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.CreateCopy">
      <summary vsli:raw="Creates a copy of the current compressed stack.">建立目前壓縮堆疊的複本。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object representing the current compressed stack.">
        <see cref="T:System.Threading.CompressedStack" /> 物件，表示目前的壓縮堆疊。</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.GetCompressedStack">
      <summary vsli:raw="Gets the compressed stack for the current thread.">取得目前執行緒的壓縮堆疊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; for the current thread.">目前執行緒的 <see cref="T:System.Threading.CompressedStack" />。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call chain does not have permission to access unmanaged code.  &#xA;  &#xA; -or-  &#xA;  &#xA; The request for &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; failed.">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。  
-或- 
<see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 的要求失敗。</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the logical context information needed to recreate an instance of this execution context.">將具有邏輯內容資訊的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，設定為需要重新建立此執行內容的執行個體。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object to be populated with serialization information.">要填入序列化資訊的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure representing the destination context of the serialization.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 結構，表示序列化的目的內容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)">
      <summary vsli:raw="Runs a method in the specified compressed stack on the current thread.">在目前執行緒上的指定壓縮堆疊中執行方法。</summary>
      <param name="compressedStack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to set.">要設定的 <see cref="T:System.Threading.CompressedStack" />。</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ContextCallback&quot; /&gt; that represents the method to be run in the specified security context.">
        <see cref="T:System.Threading.ContextCallback" />，表示要在指定安全性內容中執行的方法。</param>
      <param name="state" vsli:raw="The object to be passed to the callback method.">要傳遞至回呼 (Callback) 方法的物件。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;compressedStack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="compressedStack" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Threading.ParameterizedThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">代表在 <see cref="T:System.Threading.Thread" /> 上執行的方法。</summary>
      <param name="obj" vsli:raw="An object that contains data for the thread procedure.">物件，包含執行緒程序的資料。</param>
    </member>
    <member name="T:System.Threading.Thread">
      <summary vsli:raw="Creates and controls a thread, sets its priority, and gets its status.">可建立和控制執行緒，設定執行緒的優先權，並取得它的狀態。</summary>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started.">初始化 <see cref="T:System.Threading.Thread" /> 類別的新執行個體，並指定委派，讓物件可以在執行緒啟動時傳遞到執行緒。</summary>
      <param name="start" vsli:raw="A delegate that represents the methods to be invoked when this thread begins executing.">委派，代表在這個執行緒開始執行時要叫用的方法。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started and specifying the maximum stack size for the thread.">初始化 <see cref="T:System.Threading.Thread" /> 類別的新執行個體，指定委派，讓物件可以在執行緒啟動時傳遞到執行緒，並指定執行緒的堆疊大小上限。</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">
        <see cref="T:System.Threading.ParameterizedThreadStart" /> 委派，代表在這個執行緒開始執行時要叫用的方法。</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">執行緒使用的最大堆疊大小 (以位元組為單位)，或是 0，使用可執行檔標頭中指定的預設最大堆疊大小。  
重要資訊：對於部分信任的程式碼，如果 <paramref name="maxStackSize" /> 大於預設堆疊大小，則會加以忽略。 不會有例外狀況擲回。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" /> 小於零。</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class.">初始化 <see cref="T:System.Threading.Thread" /> 類別的新執行個體。</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">
        <see cref="T:System.Threading.ThreadStart" /> 委派，代表在這個執行緒開始執行時要叫用的方法。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;start&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying the maximum stack size for the thread.">初始化 <see cref="T:System.Threading.Thread" /> 類別的新執行個體，並指定執行緒的堆疊大小上限。</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">
        <see cref="T:System.Threading.ThreadStart" /> 委派，代表在這個執行緒開始執行時要叫用的方法。</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">執行緒使用的最大堆疊大小 (以位元組為單位)，或是 0，使用可執行檔標頭中指定的預設最大堆疊大小。  
重要資訊：對於部分信任的程式碼，如果 <paramref name="maxStackSize" /> 大於預設堆疊大小，則會加以忽略。 不會有例外狀況擲回。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" /> 小於零。</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread. Calling this method usually terminates the thread.">於被叫用的所在執行緒中引發 <see cref="T:System.Threading.ThreadAbortException" />，開始處理執行緒的結束作業。 呼叫這個方法通常會結束執行緒。</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">僅限 .NET Core：不支援此成員。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">呼叫端沒有必要的使用權限。</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">要中止的執行緒目前已暫止。</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort(System.Object)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread while also providing exception information about the thread termination. Calling this method usually terminates the thread.">於被叫用的所在執行緒中引發 <see cref="T:System.Threading.ThreadAbortException" />，開始結束執行緒的處理作業，同時也提供執行緒結束的相關例外狀況資訊。 呼叫這個方法通常會結束執行緒。</summary>
      <param name="stateInfo" vsli:raw="An object that contains application-specific information, such as state, which can be used by the thread being aborted.">包含特定應用程式資訊 (例如狀態) 的物件，正在中止的執行緒可以使用這個物件。</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">僅限 .NET Core：不支援此成員。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">呼叫端沒有必要的使用權限。</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">要中止的執行緒目前已暫止。</exception>
    </member>
    <member name="M:System.Threading.Thread.AllocateDataSlot">
      <summary vsli:raw="Allocates an unnamed data slot on all the threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">在所有的執行緒上配置未命名的資料位置。 為獲得較佳的效能，請改用以 <see cref="T:System.ThreadStaticAttribute" /> 屬性標示的欄位。</summary>
      <returns vsli:raw="The allocated named data slot on all threads.">在所有執行緒上已配置的具名資料位置。</returns>
    </member>
    <member name="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)">
      <summary vsli:raw="Allocates a named data slot on all threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">在所有的執行緒上配置命名的資料位置。 為獲得較佳的效能，請改用以 <see cref="T:System.ThreadStaticAttribute" /> 屬性標示的欄位。</summary>
      <param name="name" vsli:raw="The name of the data slot to be allocated.">要配置之資料插槽的名稱。</param>
      <returns vsli:raw="The allocated named data slot on all threads.">在所有執行緒上已配置的具名資料位置。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A named data slot with the specified name already exists.">具有指定名稱的具名資料位置已存在。</exception>
    </member>
    <member name="P:System.Threading.Thread.ApartmentState">
      <summary vsli:raw="Gets or sets the apartment state of this thread.">取得或設定這個執行緒的 Apartment 狀態。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values. The initial value is &lt;see langword=&quot;Unknown&quot; /&gt;.">其中一個 <see cref="T:System.Threading.ApartmentState" /> 值。 初始值為 <see langword="Unknown" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property to a state that is not a valid apartment state (a state other than single-threaded apartment (&lt;see langword=&quot;STA&quot; /&gt;) or multithreaded apartment (&lt;see langword=&quot;MTA&quot; /&gt;)).">已嘗試將此屬性狀態設定為無效 Apartment 狀態 (單一執行緒 Apartment (<see langword="STA" />) 或多執行緒 Apartment (<see langword="MTA" />) 以外的狀態)。</exception>
    </member>
    <member name="M:System.Threading.Thread.BeginCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception might jeopardize other tasks in the application domain.">通知主機在即將執行的程式碼區域中，執行緒中止或未處理例外狀況的影響，可能會危及應用程式定義域中的其他工作。</summary>
    </member>
    <member name="M:System.Threading.Thread.BeginThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code is about to execute instructions that depend on the identity of the current physical operating system thread.">通知主機 Managed 程式碼即將執行指令，而這些指令相依於目前實體作業系統執行緒的識別 (Identity)。</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">呼叫端沒有必要的權限。</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentCulture">
      <summary vsli:raw="Gets or sets the culture for the current thread.">取得或設定目前執行緒的文化特性 (Culture)。</summary>
      <returns vsli:raw="An object that represents the culture for the current thread.">表示目前執行緒之文化特性的物件。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">該屬性設定為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">僅限 .NET Core：不支援從另一個執行緒讀取或寫入執行緒的文化特性。</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentPrincipal">
      <summary vsli:raw="Gets or sets the thread's current principal (for role-based security).">取得或設定執行緒目前的原則 (角色架構安全性之用)。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; value representing the security context.">
        <see cref="T:System.Security.Principal.IPrincipal" /> 值，代表安全性的內容。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the permission required to set the principal.">呼叫端沒有設定主體的必要權限。</exception>
    </member>
    <member name="P:System.Threading.Thread.CurrentThread">
      <summary vsli:raw="Gets the currently running thread.">取得目前執行的執行緒。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; that is the representation of the currently running thread.">
        <see cref="T:System.Threading.Thread" />，是目前執行之執行緒的表示。</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentUICulture">
      <summary vsli:raw="Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run time.">取得或設定資源管理員目前用以在執行階段查詢特定文化特性資源所用的文化特性。</summary>
      <returns vsli:raw="An object that represents the current culture.">表示目前文化特性的物件。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">該屬性設定為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to a culture name that cannot be used to locate a resource file. Resource filenames must include only letters, numbers, hyphens or underscores.">此屬性設為無法用來尋找資源檔的文化特性名稱。 資源檔名稱只可以包含字母、數字、連字號或底線。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">僅限 .NET Core：不支援從另一個執行緒讀取或寫入執行緒的文化特性。</exception>
    </member>
    <member name="M:System.Threading.Thread.DisableComObjectEagerCleanup">
      <summary vsli:raw="Turns off automatic cleanup of runtime callable wrappers (RCW) for the current thread.">關閉目前執行緒之執行階段可呼叫包裝函式 (RCW) 的自動清除功能。</summary>
    </member>
    <member name="M:System.Threading.Thread.EndCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception are limited to the current task.">通知主機在即將執行的程式碼區域中，執行緒中止或未處理例外狀況影響的對象只限於目前的工作。</summary>
    </member>
    <member name="M:System.Threading.Thread.EndThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code has finished executing instructions that depend on the identity of the current physical operating system thread.">通知主機 Managed 程式碼已完成執行指令，而這些指令相依於目前實體作業系統執行緒的識別。</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">呼叫端沒有必要的使用權限。</exception>
    </member>
    <member name="P:System.Threading.Thread.ExecutionContext">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that contains information about the various contexts of the current thread.">取得 <see cref="T:System.Threading.ExecutionContext" /> 物件，包含目前執行緒各種內容的相關資訊。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that consolidates context information for the current thread.">
        <see cref="T:System.Threading.ExecutionContext" /> 物件，合併目前執行緒的內容資訊。</returns>
    </member>
    <member name="M:System.Threading.Thread.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; object.">確認釋出資源，並在記憶體回收行程回收 <see cref="T:System.Threading.Thread" /> 物件時執行其他清除作業。</summary>
    </member>
    <member name="M:System.Threading.Thread.FreeNamedDataSlot(System.String)">
      <summary vsli:raw="Eliminates the association between a name and a slot, for all threads in the process. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">排除處理序中所有執行緒的名稱和位置之間的關聯。 為獲得較佳的效能，請改用以 <see cref="T:System.ThreadStaticAttribute" /> 屬性標示的欄位。</summary>
      <param name="name" vsli:raw="The name of the data slot to be freed.">要釋放之資料插槽的名稱。</param>
    </member>
    <member name="M:System.Threading.Thread.GetApartmentState">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; value indicating the apartment state.">傳回表示 Apartment 狀態的 <see cref="T:System.Threading.ApartmentState" /> 值。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values indicating the apartment state of the managed thread. The default is &lt;see cref=&quot;F:System.Threading.ApartmentState.Unknown&quot; /&gt;.">其中一個 <see cref="T:System.Threading.ApartmentState" /> 值，表示 Managed 執行緒的 Apartment 狀態。 預設為 <see cref="F:System.Threading.ApartmentState.Unknown" />。</returns>
    </member>
    <member name="M:System.Threading.Thread.GetCompressedStack">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object that can be used to capture the stack for the current thread.">傳回 <see cref="T:System.Threading.CompressedStack" /> 物件，可以用來擷取目前執行緒的堆疊。</summary>
      <returns>無。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">在所有情況下。</exception>
    </member>
    <member name="M:System.Threading.Thread.GetCurrentProcessorId" />
    <member name="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)">
      <summary vsli:raw="Retrieves the value from the specified slot on the current thread, within the current thread's current domain. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">從目前執行緒上、目前執行緒之目前定義域中的指定位置擷取數值。 為獲得較佳的效能，請改用以 <see cref="T:System.ThreadStaticAttribute" /> 屬性標示的欄位。</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; from which to get the value.">要從其中取得值的 <see cref="T:System.LocalDataStoreSlot" />。</param>
      <returns vsli:raw="The retrieved value.">擷取的數值。</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomain">
      <summary vsli:raw="Returns the current domain in which the current thread is running.">傳回目前執行緒正在其中執行的目前定義域。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.AppDomain&quot; /&gt; representing the current application domain of the running thread.">
        <see cref="T:System.AppDomain" />，代表執行中的執行緒目前的應用程式定義域。</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomainID">
      <summary vsli:raw="Returns a unique application domain identifier.">傳回唯一的應用程式定義域識別項。</summary>
      <returns vsli:raw="A 32-bit signed integer uniquely identifying the application domain.">唯一識別應用程式定義域的 32 位元帶正負號的整數 (Signed Integer)。</returns>
    </member>
    <member name="M:System.Threading.Thread.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current thread.">傳回目前執行緒的雜湊碼。</summary>
      <returns vsli:raw="An integer hash code value.">整數雜湊碼值。</returns>
    </member>
    <member name="M:System.Threading.Thread.GetNamedDataSlot(System.String)">
      <summary vsli:raw="Looks up a named data slot. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">尋找具名的資料位置。 為獲得較佳的效能，請改用以 <see cref="T:System.ThreadStaticAttribute" /> 屬性標示的欄位。</summary>
      <param name="name" vsli:raw="The name of the local data slot.">本機資料位置的名稱。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; allocated for this thread.">為這個執行緒配置的 <see cref="T:System.LocalDataStoreSlot" />。</returns>
    </member>
    <member name="M:System.Threading.Thread.Interrupt">
      <summary vsli:raw="Interrupts a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.WaitSleepJoin&quot; /&gt; thread state.">中斷處於 <see cref="F:System.Threading.ThreadState.WaitSleepJoin" /> 執行緒狀態的執行緒。</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">呼叫端沒有合適的 <see cref="T:System.Security.Permissions.SecurityPermission" />。</exception>
    </member>
    <member name="P:System.Threading.Thread.IsAlive">
      <summary vsli:raw="Gets a value indicating the execution status of the current thread.">取得值，指出目前執行緒的執行狀態。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread has been started and has not terminated normally or aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個執行緒已經啟動但還沒有正常終止或者中止，則為<see langword="true" /> ，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Threading.Thread.IsBackground">
      <summary vsli:raw="Gets or sets a value indicating whether or not a thread is a background thread.">取得或設定值，指出執行緒是不是背景執行緒。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread is or is to become a background thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個執行緒是背景執行緒或者會成為背景執行緒，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread is dead.">執行緒已無作用</exception>
    </member>
    <member name="P:System.Threading.Thread.IsThreadPoolThread">
      <summary vsli:raw="Gets a value indicating whether or not a thread belongs to the managed thread pool.">取得值，指出執行緒是否屬於 Managed 執行緒集區。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread belongs to the managed thread pool; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />，表示這個執行緒屬於 Managed 執行緒集區，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Threading.Thread.Join">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates, while continuing to perform standard COM and &lt;see langword=&quot;SendMessage&quot; /&gt; pumping.">封鎖呼叫執行緒，直到此執行個體所代表的執行緒終止為止，但仍會繼續執行標準的 COM 與 <see langword="SendMessage" /> 提取作業。</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">呼叫端嘗試聯結處於 <see cref="F:System.Threading.ThreadState.Unstarted" /> 狀態的執行緒。</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread is interrupted while waiting.">執行緒在等待時中斷。</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.Int32)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">封鎖呼叫執行緒，直到此執行個體代表的執行緒終止或超過指定的時間為止，但仍繼續執行標準的 COM 與 SendMessage 提取作業。</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the thread to terminate.">等候執行緒終止的毫秒數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread has terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; parameter has elapsed.">如果執行緒已經終止，為 <see langword="true" />；如果 <see langword="false" /> 參數指定的時間量已經過去，而執行緒還沒有終止，則為 <paramref name="millisecondsTimeout" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds.">
        <paramref name="millisecondsTimeout" /> 的值為負數，且不等於 <see cref="F:System.Threading.Timeout.Infinite" /> (以毫秒為單位)。</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started.">無法啟動此執行緒。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is less than -1 (Timeout.Infinite).">
        <paramref name="millisecondsTimeout" /> 小於 -1 (Timeout.Infinite)。</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread was interrupted while waiting.">執行緒在等待時中斷。</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.TimeSpan)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">封鎖呼叫執行緒，直到此執行個體代表的執行緒終止或超過指定的時間為止，但仍繼續執行標準的 COM 與 SendMessage 提取作業。</summary>
      <param name="timeout" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; set to the amount of time to wait for the thread to terminate.">
        <see cref="T:System.TimeSpan" />，設定為等候執行緒終止的時間量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;timeout&quot; /&gt; parameter has elapsed.">如果執行緒終止了，為 <see langword="true" />；如果 <see langword="false" /> 參數指定的時間量已經過去，而執行緒還沒有終止，則為 <paramref name="timeout" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">值 <paramref name="timeout" /> 為負數且不等於 <see cref="F:System.Threading.Timeout.Infinite" /> 毫秒，或大於 <see cref="F:System.Int32.MaxValue" /> 毫秒。</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">呼叫端嘗試聯結處於 <see cref="F:System.Threading.ThreadState.Unstarted" /> 狀態的執行緒。</exception>
    </member>
    <member name="P:System.Threading.Thread.ManagedThreadId">
      <summary vsli:raw="Gets a unique identifier for the current managed thread.">取得目前 Managed 執行緒的唯一識別項。</summary>
      <returns vsli:raw="An integer that represents a unique identifier for this managed thread.">整數，表示這個 Managed 執行緒的唯一識別項。</returns>
    </member>
    <member name="M:System.Threading.Thread.MemoryBarrier">
      <summary vsli:raw="Synchronizes memory access as follows: The processor executing the current thread cannot reorder instructions in such a way that memory accesses prior to the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt; execute after memory accesses that follow the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt;.">同步記憶體存取，如下所示：執行目前執行緒的處理器無法以下列方式重新排序指令：先執行呼叫 <see cref="M:System.Threading.Thread.MemoryBarrier" /> 之後的記憶體存取，再執行呼叫 <see cref="M:System.Threading.Thread.MemoryBarrier" /> 之前的記憶體存取。</summary>
    </member>
    <member name="P:System.Threading.Thread.Name">
      <summary vsli:raw="Gets or sets the name of the thread.">取得或設定執行緒的名稱。</summary>
      <returns vsli:raw="A string containing the name of the thread, or &lt;see langword=&quot;null&quot; /&gt; if no name was set.">含有執行緒名稱的字串；如果沒有設定名稱，則為 <see langword="null" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A set operation was requested, but the &lt;see langword=&quot;Name&quot; /&gt; property has already been set.">要求了一組作業，但是早已設定了 <see langword="Name" /> 屬性。</exception>
    </member>
    <member name="P:System.Threading.Thread.Priority">
      <summary vsli:raw="Gets or sets a value indicating the scheduling priority of a thread.">取得或設定值，指出執行緒的排程優先權。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; values. The default value is &lt;see cref=&quot;F:System.Threading.ThreadPriority.Normal&quot; /&gt;.">其中一個 <see cref="T:System.Threading.ThreadPriority" /> 值。 預設值為 <see cref="F:System.Threading.ThreadPriority.Normal" />。</returns>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has reached a final state, such as &lt;see cref=&quot;F:System.Threading.ThreadState.Aborted&quot; /&gt;.">此執行緒已達到最終狀態，例如 <see cref="F:System.Threading.ThreadState.Aborted" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value specified for a set operation is not a valid &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; value.">針對設定作業指定的值不是有效的 <see cref="T:System.Threading.ThreadPriority" /> 值。</exception>
    </member>
    <member name="M:System.Threading.Thread.ResetAbort">
      <summary vsli:raw="Cancels an &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; requested for the current thread.">取消為目前執行緒要求的 <see cref="M:System.Threading.Thread.Abort(System.Object)" />。</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">僅限 .NET Core：不支援此成員。</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="&lt;see langword=&quot;Abort&quot; /&gt; was not invoked on the current thread.">
        <see langword="Abort" /> 不是在目前執行緒上所叫用。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required security permission for the current thread.">呼叫端沒有目前執行緒的必要安全性權限。</exception>
    </member>
    <member name="M:System.Threading.Thread.Resume">
      <summary vsli:raw="Resumes a thread that has been suspended.">繼續已暫止的執行緒。</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">僅限 .NET Core：不支援此成員。</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started, is dead, or is not in the suspended state.">執行緒未啟動、已無作用，或不是處於暫停狀態。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">呼叫端沒有合適的 <see cref="T:System.Security.Permissions.SecurityPermission" />。</exception>
    </member>
    <member name="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">在執行緒啟動之前設定其 Apartment 狀態。</summary>
      <param name="state" vsli:raw="The new apartment state.">新的 Apartment 狀態。</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">僅限 .NET Core：macOS 和 Linux 平台不支援此成員。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" /> 的 Apartment 狀態無效。</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">已經啟動執行緒。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The apartment state has already been initialized.">Apartment 狀態已經初始化。</exception>
    </member>
    <member name="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)">
      <summary vsli:raw="Applies a captured &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to the current thread.">將擷取的 <see cref="T:System.Threading.CompressedStack" /> 套用到目前的執行緒。</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object to be applied to the current thread.">要套用到目前執行緒的 <see cref="T:System.Threading.CompressedStack" /> 物件。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">在所有情況下。</exception>
    </member>
    <member name="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)">
      <summary vsli:raw="Sets the data in the specified slot on the currently running thread, for that thread's current domain. For better performance, use fields marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">針對那個執行緒目前的定義域，在目前執行之執行緒上的指定位置中設定資料。 為獲得較佳的效能，請改用以 <see cref="T:System.ThreadStaticAttribute" /> 屬性標示的欄位。</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; in which to set the value.">要在其中設定數值的 <see cref="T:System.LocalDataStoreSlot" />。</param>
      <param name="data" vsli:raw="The value to be set.">要設定的值。</param>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.Int32)">
      <summary vsli:raw="Suspends the current thread for the specified number of milliseconds.">在指定的毫秒數內暫止目前的執行緒。</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds for which the thread is suspended. If the value of the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; argument is zero, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">暫止執行緒的毫秒數。 如果 <paramref name="millisecondsTimeout" /> 引數的值為零，則執行緒會將其剩餘的時間配量讓與準備好要執行的任何同等優先權執行緒。 如果沒有其他準備好要執行的同等優先權執行緒，則目前執行緒的執行不會暫停。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The time-out value is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">逾時值為負且不等於 <see cref="F:System.Threading.Timeout.Infinite" />。</exception>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.TimeSpan)">
      <summary vsli:raw="Suspends the current thread for the specified amount of time.">在指定長度的時間內暫止目前的執行緒。</summary>
      <param name="timeout" vsli:raw="The amount of time for which the thread is suspended. If the value of the &lt;paramref name=&quot;timeout&quot; /&gt; argument is &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt;, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">暫止執行緒的時間長度。 如果 <paramref name="millisecondsTimeout" /> 引數的值為 <see cref="F:System.TimeSpan.Zero" />，則執行緒會將其剩餘的時間配量讓與準備好要執行的任何同等優先權執行緒。 如果沒有其他準備好要執行的同等優先權執行緒，則目前執行緒的執行不會暫停。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">值 <paramref name="timeout" /> 為負數且不等於 <see cref="F:System.Threading.Timeout.Infinite" /> 毫秒，或大於 <see cref="F:System.Int32.MaxValue" /> 毫秒。</exception>
    </member>
    <member name="M:System.Threading.Thread.SpinWait(System.Int32)">
      <summary vsli:raw="Causes a thread to wait the number of times defined by the &lt;paramref name=&quot;iterations&quot; /&gt; parameter.">造成執行緒等候 <paramref name="iterations" /> 參數定義的次數。</summary>
      <param name="iterations" vsli:raw="A 32-bit signed integer that defines how long a thread is to wait.">32 位元帶正負號的整數，定義執行緒要等候多久。</param>
    </member>
    <member name="M:System.Threading.Thread.Start">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;.">造成作業系統將目前執行個體的狀態變更為 <see cref="F:System.Threading.ThreadState.Running" />。</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">已經啟動執行緒。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">沒有足夠的記憶體可用來啟動這個執行緒。</exception>
    </member>
    <member name="M:System.Threading.Thread.Start(System.Object)">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;, and optionally supplies an object containing data to be used by the method the thread executes.">使作業系統將目前執行個體的狀態改成 <see cref="F:System.Threading.ThreadState.Running" />，並選擇性地提供物件，在物件中包含執行緒執行之方法所要使用的資料。</summary>
      <param name="parameter" vsli:raw="An object that contains data to be used by the method the thread executes.">物件，包含執行緒執行之方法所要使用的資料。</param>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">已經啟動執行緒。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">沒有足夠的記憶體可用來啟動這個執行緒。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This thread was created using a &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate instead of a &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate.">這個執行緒是使用 <see cref="T:System.Threading.ThreadStart" /> 委派建立，而非 <see cref="T:System.Threading.ParameterizedThreadStart" /> 委派。</exception>
    </member>
    <member name="M:System.Threading.Thread.Suspend">
      <summary vsli:raw="Either suspends the thread, or if the thread is already suspended, has no effect.">將執行緒暫止；或者如果執行緒已經暫止，則沒有影響。</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">僅限 .NET Core：不支援此成員。</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started or is dead.">執行緒未啟動或無作用。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">呼叫端沒有合適的 <see cref="T:System.Security.Permissions.SecurityPermission" />。</exception>
    </member>
    <member name="P:System.Threading.Thread.ThreadState">
      <summary vsli:raw="Gets a value containing the states of the current thread.">取得數值，包含目前執行緒的狀態。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadState&quot; /&gt; values indicating the state of the current thread. The initial value is &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt;.">其中一個 <see cref="T:System.Threading.ThreadState" /> 數值，指出目前執行緒的狀態。 初始值為 <see cref="F:System.Threading.ThreadState.Unstarted" />。</returns>
    </member>
    <member name="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">在執行緒啟動之前設定其 Apartment 狀態。</summary>
      <param name="state" vsli:raw="The new apartment state.">新的 Apartment 狀態。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the apartment state is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已設定 Apartment 狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">僅限 .NET Core：macOS 和 Linux 平台不支援此成員。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" /> 的 Apartment 狀態無效。</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread was started and has terminated, or the call is not being made from the thread's context while the thread is running.">執行緒曾啟動但已終止，或未在執行緒執行時從執行緒的內容中發出呼叫。</exception>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Byte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Double@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.IntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Object@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.SByte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Single@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">讀取欄位值。 值是由電腦中的任意處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</summary>
      <param name="address" vsli:raw="The field to be read.">要讀取的欄位。</param>
      <returns vsli:raw="The value that was read.">由任意處理器寫入欄位的最新值。</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">立即將值寫入欄位，讓電腦中的所有處理器都可以看到這個值。</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">要寫入值的欄位。</param>
      <param name="value" vsli:raw="The value to be written.">要寫入的值。</param>
    </member>
    <member name="M:System.Threading.Thread.Yield">
      <summary vsli:raw="Causes the calling thread to yield execution to another thread that is ready to run on the current processor. The operating system selects the thread to yield to.">造成呼叫執行緒執行目前處理器上已就緒可執行的其他執行緒。 作業系統會選擇要執行的執行緒。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system switched execution to another thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果作業系統切換為執行其他執行緒，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Threading.ThreadAbortException">
      <summary vsli:raw="The exception that is thrown when a call is made to the &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method. This class cannot be inherited.">對 <see cref="M:System.Threading.Thread.Abort(System.Object)" /> 方法呼叫時所擲回的例外狀況。 這個類別無法被繼承。</summary>
    </member>
    <member name="P:System.Threading.ThreadAbortException.ExceptionState">
      <summary vsli:raw="Gets an object that contains application-specific information related to the thread abort.">取得物件，其中包含有關執行緒中止之特定應用程式的資訊。</summary>
      <returns vsli:raw="An object containing application-specific information.">包含特定應用程式資訊的物件。</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event.">提供 <see cref="E:System.Windows.Forms.Application.ThreadException" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Threading.ThreadExceptionEventArgs" /> 類別的新執行個體。</summary>
      <param name="t" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">所發生的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="P:System.Threading.ThreadExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">取得發生的 <see cref="T:System.Exception" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">所發生的 <see cref="T:System.Exception" />。</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event of an &lt;see cref=&quot;T:System.Windows.Forms.Application&quot; /&gt;.">代表將處理 <see cref="T:System.Windows.Forms.Application" /> 的 <see cref="E:System.Windows.Forms.Application.ThreadException" /> 事件之方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Threading.ThreadExceptionEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Threading.ThreadInterruptedException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is interrupted while it is in a waiting state.">
        <see cref="T:System.Threading.Thread" /> 處於等候狀態時被插斷而擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with default properties.">使用預設屬性，初始化 <see cref="T:System.Threading.ThreadInterruptedException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with serialized data.">使用序列化資料，初始化 <see cref="T:System.Threading.ThreadInterruptedException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含所擲回之例外狀況的相關序列化物件資料。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">包含有關來源或目的端內容資訊的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message.">使用指定的錯誤訊息，初始化 <see cref="T:System.Threading.ThreadInterruptedException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Threading.ThreadInterruptedException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">做為目前例外狀況發生原因的例外狀況。 如果 <paramref name="innerException" /> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外的 <see langword="catch" /> 區塊中引發。</param>
    </member>
    <member name="T:System.Threading.ThreadPriority">
      <summary vsli:raw="Specifies the scheduling priority of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">指定 <see cref="T:System.Threading.Thread" /> 的排程優先權。</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.AboveNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Highest&quot; /&gt; priority and before those with &lt;see langword=&quot;Normal&quot; /&gt; priority.">
        <see cref="T:System.Threading.Thread" /> 可排定於具有 <see langword="Highest" /> 優先權的執行緒之後、具有 <see langword="Normal" /> 優先權的執行緒之前。</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.BelowNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Normal&quot; /&gt; priority and before those with &lt;see langword=&quot;Lowest&quot; /&gt; priority.">
        <see cref="T:System.Threading.Thread" /> 可排定於具有 <see langword="Normal" /> 優先權的執行緒之後、具有 <see langword="Lowest" /> 優先權的執行緒之前。</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Highest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled before threads with any other priority.">
        <see cref="T:System.Threading.Thread" /> 可排定在具有任何他優先權的執行緒之前。</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Lowest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with any other priority.">
        <see cref="T:System.Threading.Thread" /> 可排定在具有任何其他優先權的執行緒之後。</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Normal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;AboveNormal&quot; /&gt; priority and before those with &lt;see langword=&quot;BelowNormal&quot; /&gt; priority. Threads have &lt;see langword=&quot;Normal&quot; /&gt; priority by default.">
        <see cref="T:System.Threading.Thread" /> 可排定於具有 <see langword="AboveNormal" /> 優先權的執行緒之後、具有 <see langword="BelowNormal" /> 優先權的執行緒之前。 執行緒依預設具有 <see langword="Normal" /> 優先權。</summary>
    </member>
    <member name="T:System.Threading.ThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">代表在 <see cref="T:System.Threading.Thread" /> 上執行的方法。</summary>
    </member>
    <member name="T:System.Threading.ThreadStartException">
      <summary vsli:raw="The exception that is thrown when a failure occurs in a managed thread after the underlying operating system thread has been started, but before the thread is ready to execute user code.">當基礎作業系統執行緒已經啟動，但此執行緒還沒準備好執行使用者程式碼之前，如果 Managed 執行緒內有任何錯誤發生，就會擲回這個例外狀況。</summary>
    </member>
    <member name="T:System.Threading.ThreadState">
      <summary vsli:raw="Specifies the execution states of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">指定 <see cref="T:System.Threading.Thread" /> 的執行狀態。</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Aborted">
      <summary vsli:raw="The thread state includes &lt;see cref=&quot;F:System.Threading.ThreadState.AbortRequested&quot; /&gt; and the thread is now dead, but its state has not yet changed to &lt;see cref=&quot;F:System.Threading.ThreadState.Stopped&quot; /&gt;.">執行緒狀態包括 <see cref="F:System.Threading.ThreadState.AbortRequested" />，且執行緒目前無作用，但其狀態尚未變更為 <see cref="F:System.Threading.ThreadState.Stopped" />。</summary>
    </member>
    <member name="F:System.Threading.ThreadState.AbortRequested">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method has been invoked on the thread, but the thread has not yet received the pending &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; that will attempt to terminate it.">
        <see cref="M:System.Threading.Thread.Abort(System.Object)" /> 方法已在執行緒上被叫用 (Invoke)，但執行緒還沒有收到會嘗試終結它的暫止 <see cref="T:System.Threading.ThreadAbortException" />。</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Background">
      <summary vsli:raw="The thread is being executed as a background thread, as opposed to a foreground thread. This state is controlled by setting the &lt;see cref=&quot;P:System.Threading.Thread.IsBackground&quot; /&gt; property.">執行緒正做為背景執行緒執行當中 (相對於前景執行緒)。 這個狀態以設定 <see cref="P:System.Threading.Thread.IsBackground" /> 屬性來控制。</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Running">
      <summary vsli:raw="The thread has been started and not yet stopped.">執行緒已啟動且尚未停止。</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Stopped">
      <summary vsli:raw="The thread has stopped.">執行緒已經停止。</summary>
    </member>
    <member name="F:System.Threading.ThreadState.StopRequested">
      <summary vsli:raw="The thread is being requested to stop. This is for internal use only.">執行緒正被要求停止中。 僅供內部使用。</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Suspended">
      <summary vsli:raw="The thread has been suspended.">執行緒已經暫止。</summary>
    </member>
    <member name="F:System.Threading.ThreadState.SuspendRequested">
      <summary vsli:raw="The thread is being requested to suspend.">執行緒正被要求暫止中。</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Unstarted">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Start&quot; /&gt; method has not been invoked on the thread.">
        <see cref="M:System.Threading.Thread.Start" /> 方法還沒有在執行緒上被叫用。</summary>
    </member>
    <member name="F:System.Threading.ThreadState.WaitSleepJoin">
      <summary vsli:raw="The thread is blocked. This could be the result of calling &lt;see cref=&quot;M:System.Threading.Thread.Sleep(System.Int32)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Thread.Join&quot; /&gt;, of requesting a lock - for example, by calling &lt;see cref=&quot;M:System.Threading.Monitor.Enter(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)&quot; /&gt; - or of waiting on a thread synchronization object such as &lt;see cref=&quot;T:System.Threading.ManualResetEvent&quot; /&gt;.">執行緒已封鎖。 這可能是呼叫 <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> 或 <see cref="M:System.Threading.Thread.Join" />、要求鎖定 (例如藉由呼叫 <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> 或 <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />)，或是在執行緒同步處理物件 (例如 <see cref="T:System.Threading.ManualResetEvent" />) 上等候的結果。</summary>
    </member>
    <member name="T:System.Threading.ThreadStateException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is in an invalid &lt;see cref=&quot;P:System.Threading.Thread.ThreadState&quot; /&gt; for the method call.">當 <see cref="T:System.Threading.Thread" /> 對於方法的呼叫來說處於無效 <see cref="P:System.Threading.Thread.ThreadState" /> 時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with default properties.">使用預設屬性，初始化 <see cref="T:System.Threading.ThreadStateException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with serialized data.">使用序列化資料，初始化 <see cref="T:System.Threading.ThreadStateException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含所擲回之例外狀況的相關序列化物件資料。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">包含有關來源或目的端內容資訊的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message.">使用指定的錯誤訊息，初始化 <see cref="T:System.Threading.ThreadStateException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Threading.ThreadStateException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">做為目前例外狀況發生原因的例外狀況。 如果 <paramref name="innerException" /> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外的 <see langword="catch" /> 區塊中引發。</param>
    </member>
  </members>
</doc>