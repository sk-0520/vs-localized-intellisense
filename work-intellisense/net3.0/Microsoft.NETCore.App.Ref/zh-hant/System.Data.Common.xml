<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary vsli:raw="Determines the action that occurs when the &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; or &lt;see cref=&quot;M:System.Data.DataTable.RejectChanges&quot; /&gt; method is invoked on a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">判斷在具有 <see cref="T:System.Data.ForeignKeyConstraint" /> 的 <see cref="T:System.Data.DataTable" /> 上叫用 <see cref="M:System.Data.DataSet.AcceptChanges" /> 或 <see cref="M:System.Data.DataTable.RejectChanges" /> 方法時會發生的動作。</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary vsli:raw="Changes are cascaded across the relationship.">跨越關聯性來串聯變更。</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary vsli:raw="No action occurs (default).">未發生任何動作 (預設值)。</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary vsli:raw="Provides a description of the results of the query and its effect on the database.">提供查詢結果的描述及其對資料庫的影響。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary vsli:raw="When the command is executed, the associated &lt;see langword=&quot;Connection&quot; /&gt; object is closed when the associated &lt;see langword=&quot;DataReader&quot; /&gt; object is closed.">當命令執行時，相關聯的 <see langword="Connection" /> 物件會在相關聯的 <see langword="DataReader" /> 物件關閉時關閉。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary vsli:raw="The query may return multiple result sets. Execution of the query may affect the database state. &lt;see langword=&quot;Default&quot; /&gt; sets no &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; flags, so calling &lt;see langword=&quot;ExecuteReader(CommandBehavior.Default)&quot; /&gt; is functionally equivalent to calling &lt;see langword=&quot;ExecuteReader()&quot; /&gt;.">要求可能傳回多個結果集 (Result Set)。 執行查詢可能會影響資料庫狀態。 <see langword="Default" /> 設定為沒有 <see cref="T:System.Data.CommandBehavior" /> 旗標，所以呼叫 <see langword="ExecuteReader(CommandBehavior.Default)" /> 在功能上相當於呼叫 <see langword="ExecuteReader()" />。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary vsli:raw="The query returns column and primary key information. The provider appends extra columns to the result set for existing primary key and timestamp columns.">查詢會傳回資料行和主索引鍵資訊。 提供者會將額外資料行附加到現有主索引鍵和時間戳記資料行的結果集中。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary vsli:raw="The query returns column information only. When using &lt;see cref=&quot;F:System.Data.CommandBehavior.SchemaOnly&quot; /&gt;, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.">查詢只會傳回資料行資訊。 當使用 <see cref="F:System.Data.CommandBehavior.SchemaOnly" /> 時，.NET Framework Data Provider for SQL Server 會優先於使用 SET FMTONLY ON 執行的陳述式。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary vsli:raw="Provides a way for the &lt;see langword=&quot;DataReader&quot; /&gt; to handle rows that contain columns with large binary values. Rather than loading the entire row, &lt;see langword=&quot;SequentialAccess&quot; /&gt; enables the &lt;see langword=&quot;DataReader&quot; /&gt; to load data as a stream. You can then use the &lt;see langword=&quot;GetBytes&quot; /&gt; or &lt;see langword=&quot;GetChars&quot; /&gt; method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.">提供方法來讓 <see langword="DataReader" /> 使用大型二進位值來處理含有資料行的資料列。 <see langword="SequentialAccess" /> 並不會載入整個資料列，而是啟用 <see langword="DataReader" /> 來載入資料做為資料流。 然後您可以使用 <see langword="GetBytes" /> 或 <see langword="GetChars" /> 方法來指定要開始讀取作業的位元組位置和所傳回資料的限制緩衝區大小。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary vsli:raw="The query returns a single result set.">查詢傳回單一結果集。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary vsli:raw="The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET data providers may, but are not required to, use this information to optimize the performance of the command. When you specify &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; with the &lt;see cref=&quot;M:System.Data.OleDb.OleDbCommand.ExecuteReader&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbCommand&quot; /&gt; object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB &lt;see langword=&quot;IRow&quot; /&gt; interface if it is available. Otherwise, it uses the &lt;see langword=&quot;IRowset&quot; /&gt; interface. If your SQL statement is expected to return only a single row, specifying &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; can also improve application performance. It is possible to specify &lt;see langword=&quot;SingleRow&quot; /&gt; when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.">查詢預期會傳回第一個結果集的單一資料列。 執行查詢可能會影響資料庫狀態。 某些 .NET Framework 資料提供者可以使用這項資訊來最佳化命令的效能，但並不一定需要使用。 當您使用 <see cref="F:System.Data.CommandBehavior.SingleRow" /> 物件的 <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> 方法來指定 <see cref="T:System.Data.OleDb.OleDbCommand" /> 時，.NET Framework Data Provider for OLE DB 會使用 OLE DB <see langword="IRow" /> 介面 (如果可用) 來執行繫結。 否則，它會使用 <see langword="IRowset" /> 介面。 如果 SQL 陳述式預期只會傳回單一資料列，則指定 <see cref="F:System.Data.CommandBehavior.SingleRow" /> 也可以增進應用程式效能。 在執行預期會傳回多個結果集的要求時，可能指定 <see langword="SingleRow" />。  在這種情況下，也就是同時指定多結果集 SQL 查詢及單一資料列時，傳回的結果將只會包含第一個結果集中的第一個資料列， 而不會傳回查詢的其他結果集。</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary vsli:raw="Specifies how a command string is interpreted.">指定如何解譯命令字串。</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary vsli:raw="The name of a stored procedure.">預存程序的名稱。</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary vsli:raw="The name of a table.">資料表的名稱。</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary vsli:raw="An SQL text command. (Default.)">SQL 文字命令 (預設值。)</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary vsli:raw="Indicates the position of the catalog name in a qualified table name in a text command.">表示文字命令之合格資料表名稱中類別目錄名稱的位置。</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary vsli:raw="Indicates that the position of the catalog name occurs after the schema portion of a fully qualified table name in a text command. &lt;c&gt;End&lt;/c&gt; and &lt;c&gt;Start&lt;/c&gt; are mutually exclusive.">表示類別目錄名稱的位置處於文字命令之完整合格資料表名稱的結構描述部分之後。 <c>End</c> 和 <c>Start</c> 為互斥。</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary vsli:raw="Indicates that the position of the catalog name occurs before the schema portion of a fully qualified table name in a text command. &lt;c&gt;Start&lt;/c&gt; and &lt;c&gt;End&lt;/c&gt; are mutually exclusive.">表示類別目錄名稱的位置處於文字命令之完整合格資料表名稱的結構描述部分之前。 <c>Start</c> 和 <c>End</c> 為互斥。</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary vsli:raw="Represents a set of SQL commands and a database connection that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update the data source.">表示 SQL 命令集和資料庫連接，用來填入 <see cref="T:System.Data.DataSet" /> 並更新資料來源。</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DataAdapter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class from an existing object of the same type.">從相同類型的現有物件，初始化 <see cref="T:System.Data.Common.DataAdapter" /> 類別的新執行個體。</summary>
      <param name="from" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object used to create the new &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataAdapter" /> 物件，用來建立新的 <see cref="T:System.Data.Common.DataAdapter" />。</param>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary vsli:raw="Gets or sets a value indicating whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; after it is added to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; during any of the Fill operations.">取得或設定值，指出在任何一種 Fill 作業期間，當 <see cref="T:System.Data.DataRow" /> 新增至 <see cref="T:System.Data.DataTable" /> 之後，是否要在其上呼叫 <see cref="M:System.Data.DataRow.AcceptChanges" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果在 <see cref="M:System.Data.DataRow.AcceptChanges" /> 上呼叫 <see cref="T:System.Data.DataRow" />，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary vsli:raw="Gets or sets whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">取得或設定在 <see cref="M:System.Data.DataRow.AcceptChanges" /> 期間是否呼叫 <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during an &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果在 <see cref="M:System.Data.DataRow.AcceptChanges" /> 期間呼叫 <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary vsli:raw="Creates a copy of this instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">建立 <see cref="T:System.Data.Common.DataAdapter" /> 的這個執行個體的複本。</summary>
      <returns vsli:raw="The cloned instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataAdapter" /> 的複製 (Clone) 執行個體。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary vsli:raw="Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.">取得或設定數值，指定當資料列更新期間發生錯誤時，是否產生例外狀況。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to continue the update without generating an exception; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">若要繼續更新而不產生例外狀況，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;.">建立新的 <see cref="T:System.Data.Common.DataTableMappingCollection" />。</summary>
      <returns vsli:raw="A new table mapping collection.">新的資料表對應集合。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Data.Common.DataAdapter" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source.">新增或重新整理 <see cref="T:System.Data.DataSet" /> 中的資料列，使其符合資料來源中的資料列。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records.">要填入資料錄的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="srcTable" vsli:raw="A string indicating the name of the source table.">字串，表示來源資料表的名稱。</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> 的執行個體。</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">起始記錄之以零起始的索引。</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">整數，表示資料錄的最大數目。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name and the specified &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">使用 <see cref="T:System.Data.DataTable" /> 名稱和指定的 <see cref="T:System.Data.DataTable" />，加入或重新整理 <see cref="T:System.Data.IDataReader" /> 中的資料列，以符合資料來源中的資料列。</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records.">要填入資料錄的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> 的執行個體。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataTable" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source.">在 <see cref="T:System.Data.DataTable" /> 物件集合中所指定的範圍內加入或重新整理資料列，以符合那些在資料來源中的資料列。</summary>
      <param name="dataTables" vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill with records.">要填入資料錄的 <see cref="T:System.Data.DataTable" /> 物件集合。</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> 的執行個體。</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">起始記錄之以零起始的索引。</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">整數，表示資料錄的最大數目。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataTable" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary vsli:raw="Returned when an error occurs during a fill operation.">當填入作業期間發生錯誤時傳回。</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; that determines how the adapter fills the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">取得或設定 <see cref="T:System.Data.LoadOption" />，決定配接器如何從 <see cref="T:System.Data.DataTable" /> 填入 <see cref="T:System.Data.Common.DbDataReader" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; value.">
        <see cref="T:System.Data.LoadOption" /> 值。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />，並且根據指定的 <see cref="T:System.Data.SchemaType" /> 設定結構描述，以符合資料來源中的資料表。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">
        <see cref="T:System.Data.DataSet" />，以資料來源中的結構描述來填入其中。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">
        <see cref="T:System.Data.DataTable" /> 物件，包含從資料來源傳回的結構描述資訊。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">要從 <see cref="T:System.Data.DataTable" /> 中填入的 <see cref="T:System.Data.IDataReader" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用於資料表對應的來源資料表名稱。</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" />，在填入 <see cref="T:System.Data.DataTable" /> 時用做資料來源。</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">已加入至 <see cref="T:System.Data.DataTable" /> 之 <see cref="T:System.Data.DataSet" /> 物件集合的參考。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">要從 <see cref="T:System.Data.DataTable" /> 中填入的 <see cref="T:System.Data.IDataReader" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" />，在填入 <see cref="T:System.Data.DataTable" /> 時用做資料來源。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">
        <see cref="T:System.Data.DataTable" /> 物件，包含從資料來源傳回的結構描述資訊。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">取得在執行 SQL SELECT 陳述式時由使用者設定的參數。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">
        <see cref="T:System.Data.IDataParameter" /> 物件的陣列，含有由使用者設定的參數。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created.">指出是否已經建立 <see cref="T:System.Data.Common.DataTableMappingCollection" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果已經建立 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary vsli:raw="Determines the action to take when incoming data does not have a matching table or column.">判斷在傳入的資料不具有相符的資料表或資料行時要採取的動作。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。 預設為 <see langword="Passthrough" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">設定的值不是其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。</exception>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">判斷在現有 <see cref="T:System.Data.DataSet" /> 結構描述 (Schema) 與傳入的資料不相符時要採取的動作。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。 預設為 <see langword="Add" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">設定的值不是其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</exception>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary vsli:raw="Invoked when an error occurs during a &lt;see langword=&quot;Fill&quot; /&gt;.">當在 <see langword="Fill" /> 期間發生錯誤時叫用。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; object.">
        <see cref="T:System.Data.FillErrorEventArgs" /> 物件。</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary vsli:raw="Resets &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; to its default state and causes &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)&quot; /&gt; to honor &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt;.">將 <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 重設為其預設狀態，並讓 <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> 接受 <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />。</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary vsli:raw="Gets or sets whether the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values or common CLS-compliant values.">取得或設定 <see langword="Fill" /> 方法應當傳回提供者特定的值，還是通用符合 CLS 標準的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values; otherwise &lt;see langword=&quot;false&quot; /&gt; to return common CLS-compliant values.">如果 <see langword="true" /> 方法應傳回提供者特定的值，則為 <see langword="Fill" />，否則為 <see langword="false" />，表示傳回通用符合 CLS 標準的值。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property should be persisted.">判斷是否應該保存 <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> 屬性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果保存 <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> 屬性則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property should be persisted.">判斷是否應該保存 <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 屬性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果保存 <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 屬性則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary vsli:raw="Determines whether one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist and they should be persisted.">判斷一個或多個 <see cref="T:System.Data.Common.DataTableMapping" /> 物件是否存在並且應該保存 (Persist)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果存在一個或多個 <see cref="T:System.Data.Common.DataTableMapping" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">指示來源資料表如何對應至資料集資料表。</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">集合，提供傳回的資料錄和 <see cref="T:System.Data.DataSet" /> 之間的主要對應。 預設值為空集合。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that provides the primary mapping between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">取得提供來源資料表和 <see cref="T:System.Data.DataTable" /> 之間主要對應的集合。</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">集合，提供傳回的資料錄和 <see cref="T:System.Data.DataSet" /> 之間的主要對應。 預設值為空集合。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table.&quot;">從名為 "Table" 之 <see cref="T:System.Data.DataSet" /> 的指定 <see cref="T:System.Data.DataTable" /> 中，為每個插入、更新或刪除的資料列分別呼叫 INSERT、UPDATE 或 DELETE 陳述式。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">用來更新資料來源的 <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">來源資料表無效。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</exception>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary vsli:raw="Contains a generic column mapping for an object that inherits from &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;. This class cannot be inherited.">含有繼承自 <see cref="T:System.Data.Common.DataAdapter" /> 之物件的泛用資料行對應。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DataColumnMapping" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class with the specified source column name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name to map to.">使用指定來源資料行名稱和要對應至的 <see cref="T:System.Data.Common.DataColumnMapping" /> 資料行名稱，來初始化 <see cref="T:System.Data.DataSet" /> 類別的新執行個體。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">來自資料來源的區分大小寫資料行名稱。</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">來自要對應至的 <see cref="T:System.Data.DataSet" /> 之資料行名稱，不區分大小寫。</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">取得或設定在要對應的 <see cref="T:System.Data.DataSet" /> 中的目的資料行名稱。</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">在要對應的 <see cref="T:System.Data.DataSet" /> 中的目的資料行名稱。 名稱不區分大小寫。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the given &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.DataSetColumn&quot; /&gt; property.">使用 <see cref="T:System.Data.DataColumn" /> 和 <see cref="T:System.Data.DataTable" /> 屬性來從指定的 <see cref="T:System.Data.MissingSchemaAction" /> 取得 <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to get the column from.">可取得資料行的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="dataType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the data column.">資料行的 <see cref="T:System.Type" />。</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</param>
      <returns vsli:raw="A data column.">資料行。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static version of &lt;see cref=&quot;M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)&quot; /&gt; that can be called without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> 的靜態 (Static) 版本，無需對 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件執行個體化即可對其進行呼叫。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">來自資料來源的區分大小寫資料行名稱。</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">來自要對應至的 <see cref="T:System.Data.DataSet" /> 之資料行名稱，不區分大小寫。</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的執行個體。</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">所對應之資料行的資料型別。</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">判斷在現有 <see cref="T:System.Data.DataSet" /> 結構描述 (Schema) 與傳入的資料不相符時要採取的動作。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">取得或設定在資料來源中的來源資料行名稱。 名稱區分大小寫。</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">在資料來源中的資料行的區分大小寫名稱。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">建立目前執行個體複本的新物件。</summary>
      <returns vsli:raw="A copy of the current object.">目前物件的複本。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name to a string.">將目前的 <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> 名稱轉換為字串。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name as a string.">做為字串的目前 <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> 名稱。</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">包含 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">建立空的 <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection.">將 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件加入至集合。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object to add to the collection.">要加入集合的 <see langword="DataColumnMapping" /> 物件。</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">加入至集合的 <see langword="DataColumnMapping" /> 索引。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">傳入的物件不是 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection when given a source column name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">在提供來源資料行名稱和 <see cref="T:System.Data.Common.DataColumnMapping" /> 資料行名稱時，將 <see cref="T:System.Data.DataSet" /> 物件加入至集合。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column to map to.">要對應至的來源資料行之區分大小寫名稱。</param>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to map to.">要對應至的 <see cref="T:System.Data.DataSet" /> 資料行名稱，不區分大小寫。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">加入至集合的 <see langword="DataColumnMapping" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">將指定 <see cref="T:System.Array" /> 的元素複製到集合結尾。</summary>
      <param name="values" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to add to the collection.">要加入至集合的 <see cref="T:System.Array" />。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to the end of the collection.">將指定的 <see cref="T:System.Data.Common.DataColumnMapping" /> 陣列元素複製到集合的末端。</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects to add to the collection.">要加入至集合的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件陣列。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects from the collection.">從集合中移除所有 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Object&quot; /&gt; exists in the collection.">取得值，指出具有指定 <see cref="T:System.Data.Common.DataColumnMapping" /> 的 <see cref="T:System.Object" /> 物件是否存在於集合中。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt;.">
        <see cref="T:System.Object" />，即是 <see cref="T:System.Data.Common.DataColumnMapping" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合含有指定的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">傳入的物件不是 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given source column name exists in the collection.">取得值，指出具有指定來源資料行名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件是否存在於集合中。</summary>
      <param name="value" vsli:raw="The case-sensitive source column name of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 的區分大小寫來源資料行名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if collection contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含具有指定來源資料行名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified array.">複製 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 的項目至指定陣列。</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">要複製 <see cref="T:System.Array" /> 項目至的 <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</param>
      <param name="index" vsli:raw="The starting index of the array.">陣列的開始索引。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array.">複製 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 的項目至指定的 <see cref="T:System.Data.Common.DataColumnMapping" /> 陣列。</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">要將 <see cref="T:System.Data.Common.DataColumnMapping" /> 項目複製至的 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 陣列。</param>
      <param name="index" vsli:raw="The zero-based index in the &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects in the collection.">取得集合中 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件的數目。</summary>
      <returns vsli:raw="The number of items in the collection.">集合中的項目數目</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">取得具有指定 <see cref="T:System.Data.Common.DataColumnMapping" /> 資料行名稱的 <see cref="T:System.Data.DataSet" /> 物件。</summary>
      <param name="value" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">要尋找的 <see cref="T:System.Data.DataSet" /> 資料行名稱，不區分大小寫。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">具有指定 <see cref="T:System.Data.Common.DataColumnMapping" /> 資料行名稱的 <see cref="T:System.Data.DataSet" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, source column name, and &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">為指定 <see cref="T:System.Data.Common.DataColumnMapping" />、來源資料行名稱和 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 取得 <see cref="T:System.Data.MissingMappingAction" />。</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name to find.">要尋找的區分大小寫來源資料行名稱。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> 參數已經設定為 <see langword="Error" />，並且未指定任何對應。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static method that returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; object.">靜態 (Static) 方法，傳回 <see cref="T:System.Data.DataColumn" /> 物件，而無需對 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 物件執行個體化。</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">來自資料來源的區分大小寫資料行名稱。</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">所對應之資料行的資料型別。</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的執行個體。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">判斷在現有 <see cref="T:System.Data.DataSet" /> 結構描述 (Schema) 與傳入的資料不相符時要採取的動作。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">取得可以逐一查看集合的列舉程式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">取得在集合中為 <see cref="T:System.Object" /> 的指定 <see cref="T:System.Data.Common.DataColumnMapping" /> 位置。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to find.">
        <see cref="T:System.Object" />，即是要尋找的 <see cref="T:System.Data.Common.DataColumnMapping" />。</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">在集合中為 <see cref="T:System.Object" /> 的指定 <see cref="T:System.Data.Common.DataColumnMapping" /> 之以零起始位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified source column name.">取得具有指定來源資料行名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 位置。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">來源資料行的區分大小寫名稱。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified case-sensitive source column name.">具有指定區分大小寫來源資料行名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 之以零起始的位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">取得具有指定 <see cref="T:System.Data.Common.DataColumnMapping" /> 資料行名稱的指定 <see cref="T:System.Data.DataSet" /> 位置。</summary>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the data set column to find.">要尋找的資料集資料行名稱，不區分大小寫。</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see langword=&quot;DataSet&quot; /&gt; column name, or -1 if the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object does not exist in the collection.">具有指定 <see langword="DataSet" /> 資料行名稱的指定 <see cref="T:System.Data.Common.DataColumnMapping" /> 之以零起始位置，或 -1 (<see langword="DataColumnMapping" /> 物件不存在於集合中)。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">將 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件插入 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 的指定索引處。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">要插入之 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件以零為起始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">將 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件插入 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 的指定索引處。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">要插入之 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件以零為起始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">取得或設定在指定索引處的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to find.">要尋找的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件之以零起始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">位於指定索引處的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">取得或設定具有指定來源資料行名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">來源資料行的區分大小寫名稱。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">具有指定來源資料行名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">從集合移除指定的 <see cref="T:System.Data.Common.DataColumnMapping" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.Common.DataColumnMapping" />。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">從集合移除為 <see cref="T:System.Object" /> 的 <see cref="T:System.Data.Common.DataColumnMapping" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">
        <see cref="T:System.Object" />，即是要移除的 <see cref="T:System.Data.Common.DataColumnMapping" />。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">指定的物件不是 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">指定的物件不在集合中。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index from the collection.">從集合移除具有指定索引的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to remove.">要移除之 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件的以零為基底的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index.">沒有具有指定索引的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name from the collection.">從集合移除具有指定來源資料列名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name.">區分大小寫的來源資料行名稱。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">沒有具有指定來源資料行名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</exception>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">取得值，這個值會指出 <see cref="T:System.Collections.ICollection" /> 的存取是否同步 (具備安全執行緒)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">取得可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">取得值，指出 <see cref="T:System.Collections.IList" /> 是否有固定的大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 有固定大小，則為 <see cref="T:System.Collections.IList" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">取得值，這個值表示 <see cref="T:System.Collections.IList" /> 是否為唯讀。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Collections.IList" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">在指定的索引位置上取得或設定項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">要取得或設定之以零為起始的項目索引。</param>
      <returns vsli:raw="The element at the specified index.">在指定索引上的項目。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; by using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">使用來源資料行和 <see cref="T:System.Data.Common.DataColumnMapping" /> 資料行名稱，將 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 物件加入至 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">來源資料行的區分大小寫名稱。</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">
        <see cref="T:System.Data.DataSet" /> 資料行的名稱。</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">加入至集合的 ColumnMapping 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">取得具有指定之 <see cref="T:System.Data.Common.DataColumnMapping" /> 資料行名稱的 <see cref="T:System.Data.DataSet" /> 物件。</summary>
      <param name="dataSetColumnName" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">要尋找的 <see cref="T:System.Data.DataSet" /> 資料行名稱，不區分大小寫。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that  has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">具有指定之 <see cref="T:System.Data.Common.DataColumnMapping" /> 資料行名稱的 <see cref="T:System.Data.DataSet" /> 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">取得或設定具有指定 <see langword="SourceColumn" /> 名稱的 <see cref="T:System.Data.IColumnMapping" /> 物件。</summary>
      <param name="index" vsli:raw="Index of the element.">項目的索引。</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">具有指定 <see langword="IColumnMapping" /> 名稱的 <see langword="SourceColumn" /> 物件。</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary vsli:raw="Contains a description of a mapped relationship between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This class is used by a &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; when populating a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">含有來源資料表和 <see cref="T:System.Data.DataTable" /> 之間對應關聯性 (Relationship) 的描述。 在填入 <see cref="T:System.Data.Common.DataAdapter" /> 時，<see cref="T:System.Data.DataSet" /> 會使用這個類別。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DataTableMapping" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class with a source when given a source table name and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">使用在提供來源資料表名稱和 <see cref="T:System.Data.Common.DataTableMapping" /> 名稱時的來源來初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">來自資料來源的區分大小寫之來源資料表名稱。</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">來自要對應至的 <see cref="T:System.Data.DataSet" /> 之資料表名稱。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class when given a source table name, a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name, and an array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">在提供來源資料表名稱、<see cref="T:System.Data.Common.DataTableMapping" /> 名稱和 <see cref="T:System.Data.DataTable" /> 物件的陣列時，初始化 <see cref="T:System.Data.Common.DataColumnMapping" /> 類別的新執行個體。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">來自資料來源的區分大小寫之來源資料表名稱。</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">來自要對應至的 <see cref="T:System.Data.DataSet" /> 之資料表名稱。</param>
      <param name="columnMappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 物件的陣列。</param>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">取得 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A data column mapping collection.">資料行對應集合。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">從 <see cref="T:System.Data.DataSet" /> 取得或設定資料表名稱。</summary>
      <returns vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">來自 <see cref="T:System.Data.DataSet" /> 的資料表名稱。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; value and the name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataColumn" /> 值和 <see cref="T:System.Data.DataTable" /> 的名稱來從指定的 <see cref="T:System.Data.MissingMappingAction" /> 取得 <see cref="T:System.Data.DataColumn" />。</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 的名稱。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。</param>
      <returns vsli:raw="A data column.">資料行。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> 參數已經設定為 <see langword="Error" />，並且未指定任何對應。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object for a given column name.">傳回指定資料行名稱的 <see cref="T:System.Data.DataColumn" /> 物件。</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 的名稱。</param>
      <param name="dataType" vsli:raw="The data type for &lt;paramref name=&quot;sourceColumn&quot; /&gt;.">
        <paramref name="sourceColumn" /> 的資料型別。</param>
      <param name="dataTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">來自要對應至的 <see cref="T:System.Data.DataSet" /> 之資料表名稱。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; value.">使用指定的 <see cref="T:System.Data.DataTable" /> 值來為指定 <see cref="T:System.Data.DataSet" /> 取得目前的 <see cref="T:System.Data.MissingSchemaAction" />。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from which to get the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">用來取得 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</param>
      <returns vsli:raw="A data table.">資料表。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive source table name from a data source.">從資料來源取得或設定區分大小寫的來源資料表名稱。</summary>
      <returns vsli:raw="The case-sensitive source table name from a data source.">來自資料來源的區分大小寫之來源資料表名稱。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">為 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 取得衍生的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A data column mapping collection.">資料行對應集合。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">建立目前執行個體複本的新物件。</summary>
      <returns vsli:raw="A new object that is a copy of the current instance.">目前執行個體複本的新物件。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name to a string.">將目前的 <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> 名稱轉換為字串。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name, as a string.">目前的 <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> 名稱，做為字串。</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects. This class cannot be inherited.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 物件的集合。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; class. This new instance is empty, that is, it does not yet contain any &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects.">初始化 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 類別的新執行個體。 這個新執行個體 (Instance) 是空的，也就是說，它尚未含有任何 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a table mapping to the collection.">加入即是資料表對應的 <see cref="T:System.Object" /> 至集合。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataTableMapping&quot; /&gt; object to add to the collection.">要加入集合的 <see langword="DataTableMapping" /> 物件。</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataTableMapping&quot; /&gt; object added to the collection.">加入至集合的 <see langword="DataTableMapping" /> 的索引。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">傳入的物件不是 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to the collection when given a source table name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">在提供來源資料表名稱和 <see cref="T:System.Data.Common.DataTableMapping" /> 資料表名稱時，將 <see cref="T:System.Data.DataSet" /> 物件加入至集合。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table to map from.">要對應的來源資料行之區分大小寫名稱。</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to map to.">要對應至的 <see cref="T:System.Data.DataSet" /> 資料表名稱，不區分大小寫。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object that was added to the collection.">加入至集合的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">將指定 <see cref="T:System.Array" /> 的元素複製到集合結尾。</summary>
      <param name="values" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; of values to add to the collection.">要加入至集合的值 <see cref="T:System.Array" />。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; array to the end of the collection.">將指定的 <see cref="T:System.Data.Common.DataTableMapping" /> 陣列元素複製到集合的末端。</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects to add to the collection.">要加入至集合的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件陣列。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects from the collection.">從集合中移除所有 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the given &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object exists in the collection.">取得值，指出指定的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件是否存在於集合。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;.">
        <see cref="T:System.Object" />，即是 <see cref="T:System.Data.Common.DataTableMapping" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果這個集合包含指定的 <see cref="T:System.Data.Common.DataTableMapping" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name exists in the collection.">取得值，指出具有指定來源資料表名稱的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件是否存在於集合。</summary>
      <param name="value" vsli:raw="The case-sensitive source table name containing the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">含有 <see cref="T:System.Data.Common.DataTableMapping" /> 物件的區分大小寫來源資料表名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with this source table name; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含具有這個來源資料表名稱的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; to the specified array.">複製 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 的項目至指定陣列。</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">要複製 <see cref="T:System.Array" /> 項目至的 <see cref="T:System.Data.Common.DataTableMappingCollection" />。</param>
      <param name="index" vsli:raw="The starting index of the array.">陣列的開始索引。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to the specified array.">複製 <see cref="T:System.Data.Common.DataTableMapping" /> 的項目至指定陣列。</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">將 <see cref="T:System.Data.Common.DataTableMapping" /> 項目複製至的 <see cref="T:System.Data.Common.DataTableMappingCollection" />。</param>
      <param name="index" vsli:raw="The starting index of the array.">陣列的開始索引。</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects in the collection.">取得集合中 <see cref="T:System.Data.Common.DataTableMapping" /> 物件的數目。</summary>
      <returns vsli:raw="The number of &lt;see langword=&quot;DataTableMapping&quot; /&gt; objects in the collection.">集合中的 <see langword="DataTableMapping" /> 物件數目。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">取得具有指定 <see cref="T:System.Data.Common.DataTableMapping" /> 資料表名稱的 <see cref="T:System.Data.DataSet" /> 物件。</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to find.">要尋找的 <see cref="T:System.Data.DataSet" /> 資料表名稱，不區分大小寫。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">具有指定 <see cref="T:System.Data.Common.DataTableMapping" /> 資料表名稱的 <see cref="T:System.Data.DataSet" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">取得可以逐一查看集合的列舉程式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source table name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, using the given &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">使用指定的 <see cref="T:System.Data.Common.DataColumnMapping" /> 來取得具有指定來源資料表名稱和 <see cref="T:System.Data.DataSet" /> 資料表名稱的 <see cref="T:System.Data.MissingMappingAction" /> 物件。</summary>
      <param name="tableMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; collection to search.">要搜尋的 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 集合。</param>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the mapped source table.">已對應來源資料表的區分大小寫名稱。</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the mapped &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">已對應 <see cref="T:System.Data.DataSet" /> 資料表的名稱，不區分大小寫。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> 參數已經設定為 <see langword="Error" />，並且未指定任何對應。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">取得集合中指定的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件位置。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to find.">
        <see cref="T:System.Object" />，即是要尋找的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">集合中指定 <see cref="T:System.Data.Common.DataTableMapping" /> 物件的以零起始位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">取得具有指定來源資料表名稱的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件位置。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">來源資料表的區分大小寫名稱。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">具有指定來源資料表名稱的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件之以零起始的位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">取得具有指定 <see cref="T:System.Data.Common.DataTableMapping" /> 資料表名稱的 <see cref="T:System.Data.DataSet" /> 物件位置。</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see langword=&quot;DataSet&quot; /&gt; table to find.">要尋找的 <see langword="DataSet" /> 資料表名稱，不區分大小寫。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, or -1 if the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist in the collection.">具有指定 <see cref="T:System.Data.Common.DataTableMapping" /> 資料表名稱的 <see cref="T:System.Data.DataSet" /> 物件之以零起始位置，或 -1 (如果 <see cref="T:System.Data.Common.DataTableMapping" /> 物件不存在於集合中)。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">將 <see cref="T:System.Data.Common.DataTableMapping" /> 物件插入 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 的指定索引處。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">要插入之 <see cref="T:System.Data.Common.DataTableMapping" /> 物件以零為起始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">要插入的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">將 <see cref="T:System.Data.Common.DataTableMapping" /> 物件插入 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 的指定索引處。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">要插入之 <see cref="T:System.Data.Common.DataTableMapping" /> 物件以零為起始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">要插入的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">取得或設定在指定索引處的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to return.">要傳回的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件之以零起始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">位於指定索引處的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">取得或設定具有指定來源資料表名稱的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">來源資料表的區分大小寫名稱。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">具有指定來源資料表名稱的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">從集合中移除指定的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">從集合中移除指定的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">指定的物件不是 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">指定的物件不在集合中。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object located at the specified index from the collection.">從集合移除位在指定索引處的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">要移除之 <see cref="T:System.Data.Common.DataTableMapping" /> 物件的以零為基底的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified index.">不存在具有指定索引的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name from the collection.">從集合移除具有指定來源資料表名稱的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name to find.">要尋找的區分大小寫來源資料表名稱。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified source table name.">不存在具有指定來源資料表名稱的 <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</exception>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">取得值，這個值表示對 <see cref="T:System.Collections.ICollection" /> 的存取是否同步 (安全執行緒)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">取得可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">取得值，指出 <see cref="T:System.Collections.IList" /> 是否有固定的大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 有固定大小，則為 <see cref="T:System.Collections.IList" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">取得值，指出 <see cref="T:System.Collections.IList" /> 是否唯讀。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Collections.IList" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets an item from the collection at a specified index.">從集合中取得或設定在指定索引的項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to get or set.">要取得或設定的項目之以零起始的索引。</param>
      <returns vsli:raw="The element at the specified index.">在指定索引上的項目。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">加入資料表對應至集合。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">來源資料表的區分大小寫名稱。</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">
        <see cref="T:System.Data.DataSet" /> 資料表的名稱。</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">新對應 <see cref="T:System.Data.ITableMapping" /> 物件的參考。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">取得具有指定 <see cref="T:System.Data.DataSet" /> 資料表名稱的 TableMapping 物件。</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">在集合中的 <see langword="DataSet" /> 資料表名稱。</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">具有指定 <see langword="DataSet" /> 資料表名稱的 TableMapping 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">取得或設定具有指定 <see cref="T:System.Data.ITableMapping" /> 名稱之 <see cref="P:System.Data.ITableMapping.SourceTable" /> 的執行個體。</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">
        <see cref="T:System.Data.ITableMapping" /> 的 <see langword="SourceTable" /> 名稱。</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">具有指定 <see langword="SourceTable" /> 名稱之 <see cref="T:System.Data.ITableMapping" /> 的執行個體。</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary vsli:raw="Represents a column within a data source.">表示資料來源內的資料行。</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbColumn" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">取得可為 Null 的布林值，指出此資料行是否允許 <see langword="DBNull" /> 值，或如未設定任何值，則傳回 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="true" /> 或 <see langword="false" />，指出此資料行是否允許 <see langword="DBNull" /> 值，或為 <see langword="null" /> (Visual Basic 為 <see langword="Nothing" />)。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此資料行允許 <see langword="DBNull" /> 值，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。 如未設定任何值，則傳回 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary vsli:raw="Gets the catalog name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the catalog name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">取得與資料來源建立關聯的目錄名稱，如未設定任何值則為 <see langword="null" />。 在衍生類別中覆寫時，可以設定為目錄名稱或 <see langword="null" />。</summary>
      <returns vsli:raw="The catalog name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">與資料來源建立關聯的目錄名稱，如未設定任何值則為 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary vsli:raw="Gets the base column name; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the column name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">取得基底資料行名稱，如未設定任何值則為 <see langword="null" />。 在衍生類別中覆寫時，可以設定為資料行名稱或 <see langword="null" />。</summary>
      <returns vsli:raw="The base column name; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">基底資料行名稱，如未設定任何值則為 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary vsli:raw="Gets the schema name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the schema name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">取得與資料來源建立關聯的結構描述名稱，如未設定任何值則為 <see langword="null" />。 在衍生類別中覆寫時，可以設定為結構描述名稱或 <see langword="null" />。</summary>
      <returns vsli:raw="The schema name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">與資料來源建立關聯的結構描述名稱，如未設定任何值則為 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary vsli:raw="Gets the server name associated with the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the server name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">取得與資料行建立關聯的伺服器名稱，如未設定任何值則為 <see langword="null" />。 在衍生類別中覆寫時，可以設定為伺服器名稱或 <see langword="null" />。</summary>
      <returns vsli:raw="The server name associated with the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">與資料行建立關聯的伺服器名稱，如未設定任何值則為 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary vsli:raw="Gets the table name in the schema; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the table name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">取得結構描述中的資料表名稱，如未設定任何值則為 <see langword="null" />。 在衍生類別中覆寫時，可以設定為資料表名稱或 <see langword="null" />。</summary>
      <returns vsli:raw="The table name in the schema; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">結構描述中的資料表名稱，如未設定任何值則為 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary vsli:raw="Gets the name of the column. Can be set to the column name when overridden in a derived class.">取得資料行名稱。 在衍生類別中覆寫時，可以設定為資料行名稱。</summary>
      <returns vsli:raw="The name of the column.">資料行名稱。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary vsli:raw="Gets the column position (ordinal) in the datasource row; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column position or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">取得資料來源資料列中的資料行位置 (序數)，如未設定任何值則為 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="int32" /> 值以指定資料行位置，或為 <see langword="null" />。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column ordinal; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">資料行序數的 <see langword="int32" /> 值，如未設定任何值則為 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary vsli:raw="Gets the column size; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column size or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">取得資料行大小，如未設定任何值則為 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="int32" /> 值以指定資料行大小，或為 <see langword="null" />。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column size; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">資料行大小的<see langword="Nothing" /> 值;如果未設定任何值,則為null參考(在VisualBasic中)。<see langword="int32" /></returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary vsli:raw="Gets the type of data stored in the column. Can be set to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column when overridden in a derived class.">取得儲存在資料行的資料類型。 在衍生類別中覆寫時，可以設定為 <see cref="T:System.Type" /> 物件，表示資料行中的資料類型。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data the column contains.">
        <see cref="T:System.Type" /> 物件，表示資料行包含的資料類型。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary vsli:raw="Gets the name of the data type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the data type name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">取得資料類型的名稱，如未設定任何值則取得 <see langword="null" />。 在衍生類別中覆寫時，可以設定為資料類型名稱或 <see langword="null" />。</summary>
      <returns vsli:raw="The name of the data type; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">資料類型的名稱，如未設定任何值則為 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is aliased, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is aliased, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">取得可為 Null 的布林值，指出此資料行是否為別名，或如未設定任何值，則傳回 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="true" /> 或 <see langword="false" />，指出此資料行是否為別名，或為 <see langword="null" /> (Visual Basic 為 <see langword="Nothing" />)。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is aliased; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此資料行是別名，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。 如未設定任何值，則傳回 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether values in this column are automatically incremented, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether values in this column are automatically incremented, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">取得可為 Null 的布林值，指出此資料行的值是否會自動累加，或如未設定任何值，則傳回 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="true" /> 或 <see langword="false" />，指出此資料行的值是否可以自動累加，或為 <see langword="null" /> (Visual Basic 為 <see langword="Nothing" />)。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if values in this column are automatically incremented; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此資料行中的值會自動累加，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。 如未設定任何值，則傳回 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an expression, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an expression, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">取得可為 Null 的布林值，指出此資料行是否為運算式，或如未設定任何值，則傳回 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="true" /> 或 <see langword="false" />，指出此資料行是否為運算式，或為 <see langword="null" /> (Visual Basic 為 <see langword="Nothing" />)。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此資料行是運算式，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。 如未設定任何值，則傳回 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is hidden, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is hidden, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">取得可為 Null 的布林值，指出是否隱藏此資料行，或如未設定任何值，則傳回 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="true" /> 或 <see langword="false" />，指出是否隱藏此資料行，或為 <see langword="null" /> (Visual Basic 為 <see langword="Nothing" />)。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is hidden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此資料行被隱藏，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。 如未設定任何值，則傳回 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an identity, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an identity, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">取得可為 Null 的布林值，指出此資料行是否為身分識別，或如未設定任何值，則傳回 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="true" /> 或 <see langword="false" />，指出此資料行是否為身分識別，或為 <see langword="null" /> (Visual Basic 為 <see langword="Nothing" />)。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an identity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此資料行是身分識別，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。 如未設定任何值，則傳回 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is a key, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is a key, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">取得可為 Null 的布林值，指出此資料行是否為索引鍵，或如未設定任何值，則傳回 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="true" /> 或 <see langword="false" />，指出此資料行是否為索引鍵，或為 <see langword="null" /> (Visual Basic 為 <see langword="Nothing" />)。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此資料行是索引鍵，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。 如未設定任何值，則傳回 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column contains long data, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column contains long data, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">取得可為 Null 的布林值，指出此資料行是否包含長資料，或如未設定任何值，則傳回 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="true" /> 或 <see langword="false" />，指出此資料行是否包含長資料，或為 <see langword="null" /> (Visual Basic 為 <see langword="Nothing" />)。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column contains long data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此資料行包含長資料，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。 如未設定任何值，則傳回 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is read-only, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is read-only, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">取得可為 Null 的布林值，指出此資料行是否為唯讀，或如未設定任何值，則傳回 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="true" /> 或 <see langword="false" />，指出此資料行是否為唯讀，或為 <see langword="null" /> (Visual Basic 為 <see langword="Nothing" />)。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此資料行是唯讀的，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。 如未設定任何值，則傳回 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether a unique constraint applies to this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether a unique constraint applies to this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">取得可為 Null 的布林值，指出此資料行是否套用唯一的限制式，或如未設定任何值，則傳回 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="true" /> 或 <see langword="false" />，指出此資料行是否套用唯一的限制式，或為 <see langword="null" /> (Visual Basic 為 <see langword="Nothing" />)。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if a unique constraint applies to this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此資料行套用唯一的限制式，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。 如未設定任何值，則傳回 Null 參考 (Visual Basic 為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary vsli:raw="Gets the object based on the column property name.">根據資料行屬性名稱取得物件。</summary>
      <param name="property" vsli:raw="The column property name.">資料行屬性名稱。</param>
      <returns vsli:raw="The object based on the column property name.">以資料行屬性名稱為基礎的物件。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary vsli:raw="Gets the numeric precision of the column data; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the numeric precision of the column data or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">取得資料行資料的數值有效位數，如未設定任何值則為 <see langword="null" />。 在衍生類別中覆寫時，可以設定為 <see langword="int32" /> 值以指定資料行資料的數值有效位數，或為 <see langword="null" />。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value that specifies the precision of the column data, if the data is numeric; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">如果<see langword="int32" />資料為數值, 則為指定資料行資料之有效位數的值; 否則為 null 參考 (<see langword="Nothing" />如果未設定任何值, 則為 Visual Basic)。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary vsli:raw="Gets a nullable &lt;see langword=&quot;int32&quot; /&gt; value that either returns &lt;see langword=&quot;null&quot; /&gt; or the numeric scale of the column data. Can be set to either &lt;see langword=&quot;null&quot; /&gt; or an &lt;see langword=&quot;int32&quot; /&gt; value for the numeric scale of the column data when overridden in a derived class.">取得可為 Null 的 <see langword="int32" /> 值，其會傳回 <see langword="null" /> 或資料行資料的數值小數位數。 在衍生類別中覆寫時，可以設定為資料行資料數值小數位數的 <see langword="null" /> 或 <see langword="int32" /> 值。</summary>
      <returns vsli:raw="A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set; otherwise, a &lt;see langword=&quot;int32&quot; /&gt; value that specifies the scale of the column data, if the data is numeric.">如未設定任何值則為 Null 參考 (Visual Basic 為 <see langword="Nothing" />)；如為數值資料，則為指定資料行資料小數位數的 <see langword="int32" /> 值。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary vsli:raw="Gets the assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the assembly-qualified name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">取得代表資料行中資料類型的 <see cref="T:System.Type" /> 物件的組件限定名稱，如未設定任何值則為 <see langword="null" />。 在衍生類別中覆寫時，可以設定為組件限定名稱或 <see langword="null" />。</summary>
      <returns vsli:raw="The assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">
        <see cref="T:System.Type" /> 物件的組件限定名稱，代表資料行中資料的類型；若未設定值，則為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary vsli:raw="Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync&quot; /&gt;.">表示要針對資料來源執行的 SQL 陳述式或預存程序。 為表示命令的資料庫特定類別，提供基底類別。 <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary vsli:raw="Constructs an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">建構 <see cref="T:System.Data.Common.DbCommand" /> 物件的執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary vsli:raw="Attempts to cancel the execution of a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">當覆寫衍生類別時，嘗試取消執行 <see cref="T:System.Data.Common.DbCommand" />。</summary>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">當覆寫衍生類別時，取得或設定要對資料來源執行的文字命令。</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">要執行的文字命令。 預設值為空字串 ("")。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute the command and generating an error.">當覆寫衍生類別時，取得或設定終止執行命令或產生錯誤之嘗試前的等待時間。</summary>
      <returns vsli:raw="The time in seconds to wait for the command to execute.">等待命令執行的時間 (以秒為單位)。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary vsli:raw="Gets or sets how the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandText&quot; /&gt; property is interpreted.">當覆寫衍生類別時，取得設定 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 屬性的解譯方式。</summary>
      <returns vsli:raw="One of the enumeration values that specifies how a command string is interpreted. The default is &lt;see langword=&quot;Text&quot; /&gt;.">其中一個列舉值, 指定如何解讀命令字串。 預設為 <see langword="Text" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">取得或設定由這個 <see cref="T:System.Data.Common.DbConnection" /> 使用的 <see cref="T:System.Data.Common.DbCommand" />。</summary>
      <returns vsli:raw="The connection to the data source.">與資料來源的連接。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">當覆寫衍生類別時，建立新的 <see cref="T:System.Data.Common.DbParameter" /> 物件執行個體。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">建立 <see cref="T:System.Data.Common.DbParameter" /> 物件的新執行個體。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">當覆寫衍生類別時，取得或設定此 <see cref="T:System.Data.Common.DbCommand" /> 使用的 <see cref="T:System.Data.Common.DbConnection" />。</summary>
      <returns vsli:raw="The connection to the data source.">與資料來源的連接。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects.">當覆寫衍生類別時，取得 <see cref="T:System.Data.Common.DbParameter" /> 物件的集合。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 陳述式或預存程序的參數。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">當覆寫衍生類別時，取得或設定此 <see cref="T:System.Data.Common.DbCommand" /> 物件執行所在的 <see cref="P:System.Data.Common.DbCommand.DbTransaction" />。</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">在其中執行 .NET 資料提供者之命令物件的交易。 預設值為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary vsli:raw="Gets or sets a value indicating whether the command object should be visible in a customized interface control.">當覆寫衍生類別時，取得或設定指出是否應在自訂介面控制項中顯示命令物件的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command object should be visible in a control; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果命令物件應該在控制項中顯示，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the command object.">非同步地處置命令物件。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">代表非同步作業的 <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">當覆寫衍生類別時，對連線執行命令文字。</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">
        <see cref="T:System.Data.CommandBehavior" /> 的執行個體。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">表示作業的工作。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">執行命令文字時發生錯誤。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">無效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Providers should implement this method to provide a non-default implementation for &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; overloads.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  &#xA;  &#xA; This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.">提供者應該實作這個方法，以提供 <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" /> 多載的非預設實作。  
預設實作會叫用同步<see cref="M:System.Data.Common.DbCommand.ExecuteReader" />方法，並傳回完成的工作，封鎖呼叫的執行緒。 如果傳遞一個已經被取消的取消語彙基元，預設實作會傳回已取消的工作。 ExecuteReader 擲回的例外狀況會透過傳回的 Task Exception 屬性來傳送。  
這個方法會接受可以用來要求提早取消作業的取消語彙基元。 實作可以忽略這項要求。</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">陳述式執行和資料擷取的選項。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用來監視是否有取消要求的語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">執行命令文字時發生錯誤。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">無效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes the command against its connection object, returning the number of rows affected.">當覆寫衍生類別時，對連線物件執行 SQL 陳述式。</summary>
      <returns vsli:raw="The number of rows affected.">受影響的資料列數目。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;, which executes the command against its connection object, returning the number of rows affected.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">非同步版本的 <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />，這個版本會對連接物件執行 SQL 陳述式。  
以 CancellationToken.None 叫用 <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />。</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">執行命令文字時發生錯誤。</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">這是 <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> 的非同步版本。 提供者應該覆寫為適當的實作。 可以選擇性地接受忽略語彙基元。  
預設實作會叫用同步<see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />方法，並傳回完成的工作，封鎖呼叫的執行緒。 如果傳遞一個已經被取消的取消語彙基元，預設實作會傳回已取消的工作。  <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> 擲回的例外狀況會透過傳回的工作例外狀況屬性來傳送。  
在傳回的工作完成之前，不叫用 <see langword="DbCommand" /> 物件的其他方法及屬性。</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用來監視是否有取消要求的語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">執行命令文字時發生錯誤。</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">針對 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 執行 <see cref="P:System.Data.Common.DbCommand.Connection" />，並傳回 <see cref="T:System.Data.Common.DbDataReader" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">針對 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 執行 <see cref="P:System.Data.Common.DbCommand.Connection" />，並使用其中一個 <see cref="T:System.Data.Common.DbDataReader" /> 值來建置 <see cref="T:System.Data.CommandBehavior" />。</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">列舉值之一，指定命令的行為。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">非同步版本的 <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />，該版本會針對 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 執行 <see cref="P:System.Data.Common.DbCommand.Connection" />，並傳回 <see cref="T:System.Data.Common.DbDataReader" />。  
以 CancellationToken.None 叫用 <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />。</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">執行命令文字時發生錯誤。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">無效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">非同步版本的 <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />，該版本會針對 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 執行 <see cref="P:System.Data.Common.DbCommand.Connection" />，並傳回 <see cref="T:System.Data.Common.DbDataReader" />。  
叫用 <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />。</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies how the command should execute and how data should be retrieved.">列舉值之一，指定命令的行為。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">執行命令文字時發生錯誤。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">無效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">叫用 <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />。</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">列舉值之一，指定命令的行為。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用來監視是否有取消要求的語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">執行命令文字時發生錯誤。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">無效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">非同步版本的 <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />，該版本會針對 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 執行 <see cref="P:System.Data.Common.DbCommand.Connection" />，並傳回 <see cref="T:System.Data.Common.DbDataReader" />。 此方法會散佈通知，表示不應取消作業。  
叫用 <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />。</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用來監視是否有取消要求的語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">執行命令文字時發生錯誤。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">無效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.">當覆寫衍生類別時執行查詢，並傳回查詢傳回之結果集中第一列的第一欄。 會忽略所有其他的資料行和資料列。</summary>
      <returns vsli:raw="The first column of the first row in the first result set.">結果集中第一個資料列的第一個資料行。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;, which executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.  &#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">
        <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> 的非同步版本，該版本會執行查詢並傳回查詢所傳回的結果集中第一個資料列的第一個資料行。 會忽略所有其他的資料行和資料列。  
以 CancellationToken.None 叫用 <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />。</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">執行命令文字時發生錯誤。</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">這是 <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> 的非同步版本。 提供者應該覆寫為適當的實作。 可以選擇性地接受忽略語彙基元。  
預設實作會叫用同步<see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />方法，並傳回完成的工作，封鎖呼叫的執行緒。 如果傳遞一個已經被取消的取消語彙基元，預設實作會傳回已取消的工作。 ExecuteScalar 擲回的例外狀況會透過傳回的工作例外狀況屬性來傳送。  
在傳回的工作完成之前，不叫用 <see langword="DbCommand" /> 物件的其他方法及屬性。</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用來監視是否有取消要求的語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">執行命令文字時發生錯誤。</exception>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects. For more information on parameters, see Configuring Parameters and Parameter Data Types.">取得 <see cref="T:System.Data.Common.DbParameter" /> 物件的集合。 如需參數的詳細資訊，請參閱設定參數和參數資料類型。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 陳述式或預存程序的參數。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">當覆寫衍生類別時，在資料來源上建立預先準備 (或預先編譯) 版本的命令。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a prepared (or compiled) version of the command on the data source.">在資料來源上非同步地建立預先準備 (或預先編譯) 版本的命令。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;." />
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">代表非同步作業的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">取得或設定 <see cref="T:System.Data.IDbCommand" /> 的這個執行個體所使用的 <see cref="T:System.Data.IDbConnection" />。</summary>
      <returns vsli:raw="The connection to the data source.">與資料來源的連接。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">建立 <see cref="T:System.Data.IDbDataParameter" /> 物件的新執行個體。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">
        <see langword="IDbDataParameter" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">針對 <see cref="P:System.Data.IDbCommand.Connection" /> 執行 <see cref="P:System.Data.IDbCommand.CommandText" />，並建置 <see cref="T:System.Data.IDataReader" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">針對 <see cref="P:System.Data.IDbCommand.Connection" /> 執行 <see cref="P:System.Data.IDbCommand.CommandText" />，並使用其中一個 <see cref="T:System.Data.CommandBehavior" /> 值來建置 <see cref="T:System.Data.IDataReader" />。</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">列舉值之一，指定命令的行為。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">取得 <see cref="T:System.Data.IDataParameterCollection" />。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 陳述式或預存程序的參數。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">取得或設定 <see cref="P:System.Data.Common.DbCommand.DbTransaction" />，此 <see cref="T:System.Data.Common.DbCommand" /> 物件會在其中執行。</summary>
      <returns vsli:raw="The transaction within which a &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">.NET Framework 資料提供者的 <see langword="Command" /> 物件會在其中執行的交易。 預設值為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">取得或設定 <see cref="T:System.Data.Common.DbTransaction" />，此 <see cref="T:System.Data.Common.DbCommand" /> 物件會在其中執行。</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">.NET Framework 資料提供者的 <see langword="Command" /> 物件會在其中執行的交易。 預設值為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the Update method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">當覆寫衍生類別時，取得或設定當 <see cref="T:System.Data.Common.DbDataAdapter" /> 的 Update 方法使使用 <see cref="T:System.Data.DataRow" /> 時，命令結果的套用方式。</summary>
      <returns vsli:raw="One of the enumeration values that indicates how command results are applied. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">其中一個列舉值, 指出命令結果的套用方式。 除非會自動產生命令，否則預設值為 <see langword="Both" />。 預設值為 <see langword="None" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary vsli:raw="Automatically generates single-table commands used to reconcile changes made to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the associated database. This is an abstract class that can only be inherited.">自動產生單一資料表命令，可用來調解對 <see cref="T:System.Data.DataSet" /> 的變更和相關的資料庫。 這是只能被繼承的抽象類別。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of a class that inherits from the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">初始化一個從 <see cref="T:System.Data.Common.DbCommandBuilder" /> 類別繼承的類別之新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary vsli:raw="Allows the provider implementation of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class to handle additional parameter properties.">允許 <see cref="T:System.Data.Common.DbCommandBuilder" /> 類別的提供者實作處理其他參數屬性。</summary>
      <param name="parameter" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to which the additional modifications are applied.">套用其他修改的 <see cref="T:System.Data.Common.DbParameter" />。</param>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the schema table provided by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 所提供之結構描述資料表的 <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />。</param>
      <param name="statementType" vsli:raw="The type of command being generated; INSERT, UPDATE or DELETE.">產生的命令類型：INSERT、UPDATE 或 DELETE。</param>
      <param name="whereClause" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parameter is part of the update or delete WHERE clause, &lt;see langword=&quot;false&quot; /&gt; if it is part of the insert or update values.">如果參數是更新或刪除 WHERE 子句的一部分，則為 <see langword="true" />，如果它是插入或更新值的一部分，則為 <see langword="false" />。</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">設定或取得 <see cref="T:System.Data.Common.CatalogLocation" /> 類別之執行個體的 <see cref="T:System.Data.Common.DbCommandBuilder" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; object.">
        <see cref="T:System.Data.Common.CatalogLocation" /> 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary vsli:raw="Gets or sets a string used as the catalog separator for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">設定或取得用做 <see cref="T:System.Data.Common.DbCommandBuilder" /> 類別執行個體之目錄分隔符號的字串。</summary>
      <returns vsli:raw="A string indicating the catalog separator for use with an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">字串，表示與 <see cref="T:System.Data.Common.DbCommandBuilder" /> 類別之執行個體搭配使用的目錄分隔符號。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; is to be used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">指定 <see cref="T:System.Data.ConflictOption" /> 所要使用的 <see cref="T:System.Data.Common.DbCommandBuilder" />。</summary>
      <returns vsli:raw="Returns one of the &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; values describing the behavior of this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">傳回其中一個 <see cref="T:System.Data.ConflictOption" /> 值，描述這個 <see cref="T:System.Data.Common.DbCommandBuilder" /> 的行為。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object for which Transact-SQL statements are automatically generated.">取得或設定會自動產生 Transact-SQL 陳述式的 <see cref="T:System.Data.Common.DbDataAdapter" /> 物件。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Data.Common.DbCommandBuilder" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source.">取得在資料來源上執行刪除時所需之自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件。</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件，執行刪除時所需要的。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source, optionally using columns for parameter names.">選擇性地使用參數名稱的資料行，取得自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件，其為在資料來源執行刪除時所需。</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">如果為 <see langword="true" />，則盡可能產生符合資料行名稱的參數名稱。 若為 <see langword="false" />，則會產生 <c>@p1</c>、<c>@p2</c> 等等。</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件，執行刪除時所需要的。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source.">取得在資料來源上執行插入時所需之自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件。</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">執行插入所需而自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source, optionally using columns for parameter names.">選擇性地使用參數名稱的資料行，取得自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件，其為在資料來源執行插入時所需。</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">如果為 <see langword="true" />，則盡可能產生符合資料行名稱的參數名稱。 若為 <see langword="false" />，則會產生 <c>@p1</c>、<c>@p2</c> 等等。</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">執行插入所需而自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified parameter in the format of &lt;c&gt;@p#&lt;/c&gt;. Use when building a custom command builder.">以 <c>@p#</c> 格式傳回指定參數的名稱。 建置自訂命令產生器時使用。</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">數字，要加入做為參數名稱的一部分。</param>
      <returns vsli:raw="The name of the parameter with the specified number appended as part of the parameter name.">參數的名稱，具有指定的數字附加做為參數名稱的一部分。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary vsli:raw="Returns the full parameter name, given the partial parameter name.">已提供部分參數名稱時，傳回完整參數名稱。</summary>
      <param name="parameterName" vsli:raw="The partial name of the parameter.">參數的部分名稱。</param>
      <returns vsli:raw="The full parameter name corresponding to the partial parameter name requested.">對應到所要求之部分參數名稱的完整參數名稱。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary vsli:raw="Returns the placeholder for the parameter in the associated SQL statement.">傳回相關 SQL 陳述式中參數的預留位置。</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">數字，要加入做為參數名稱的一部分。</param>
      <returns vsli:raw="The name of the parameter with the specified number appended.">已附加指定之數字的參數名稱。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary vsli:raw="Returns the schema table for the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">傳回 <see cref="T:System.Data.Common.DbCommandBuilder" /> 的結構描述資料表。</summary>
      <param name="sourceCommand" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; for which to retrieve the corresponding schema table.">要擷取對應結構描述資料表的 <see cref="T:System.Data.Common.DbCommand" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that represents the schema for the specific &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />，表示特定 <see cref="T:System.Data.Common.DbCommand" /> 的結構描述。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source.">取得在資料來源上執行更新時所需之自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件。</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件，執行更新時所需要的。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source, optionally using columns for parameter names.">選擇性地使用參數名稱的資料行，取得自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件，其為在資料來源執行更新時所需。</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">如果為 <see langword="true" />，則盡可能產生符合資料行名稱的參數名稱。 若為 <see langword="false" />，則會產生 <c>@p1</c>、<c>@p2</c> 等等。</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">自動產生的 <see cref="T:System.Data.Common.DbCommand" /> 物件，執行更新時所需要的。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandTimeout&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.Transaction&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandType&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; properties on the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">重設 <see cref="P:System.Data.Common.DbCommand.CommandTimeout" /> 上的 <see cref="P:System.Data.Common.DbCommand.Transaction" />、<see cref="P:System.Data.Common.DbCommand.CommandType" />、<see cref="T:System.Data.UpdateRowSource" /> 和 <see cref="T:System.Data.Common.DbCommand" /> 屬性。</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; to be used by the command builder for the corresponding insert, update, or delete command.">由命令產生器用於對應插入、更新或刪除命令的 <see cref="T:System.Data.Common.DbCommand" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; instance to use for each insert, update, or delete operation. Passing a null value allows the &lt;see cref=&quot;M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)&quot; /&gt; method to create a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object based on the Select command associated with the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">用於每個插入、更新或刪除作業的 <see cref="T:System.Data.Common.DbCommand" /> 執行個體。 傳遞 null 值允許 <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> 方法根據與 <see cref="T:System.Data.Common.DbCommand" /> 相關的 Select 命令來建立 <see cref="T:System.Data.Common.DbCommandBuilder" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary vsli:raw="Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.">在正確目錄案例中提供不具引號的識別項時，傳回該識別項具引號的正確格式，包括適當逸出識別項中的任何內嵌引號。</summary>
      <param name="unquotedIdentifier" vsli:raw="The original unquoted identifier.">原始的不具引號之識別項。</param>
      <returns vsli:raw="The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.">具引號版本的識別項。 識別項內的內嵌引號已適當逸出。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary vsli:raw="Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">取得或設定開始字元 (一個或多個)，當指定其名稱包含空白或保留語彙基元 (Token) 之類字元的資料庫物件時，就可以使用。</summary>
      <returns vsli:raw="The beginning character or characters to use. The default is an empty string.">要使用的開始字元。 預設為空字串。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property cannot be changed after an insert, update, or delete command has been generated.">在已經產生插入、更新或刪除命令之後，無法變更這個屬性。</exception>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary vsli:raw="Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">取得或設定結束字元 (一個或多個)，當指定其名稱包含空白或保留語彙基元之類字元的資料庫物件時，就可以使用。</summary>
      <returns vsli:raw="The ending character or characters to use. The default is an empty string.">要使用的結束字元。 預設為空字串。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary vsli:raw="Clears the commands associated with this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">清除與這個 <see cref="T:System.Data.Common.DbCommandBuilder" /> 關聯的命令。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Adds an event handler for the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event.">加入 <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> 事件的事件處理常式。</summary>
      <param name="rowUpdatingEvent" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; instance containing information about the event.">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 執行個體，包含關於事件的資訊。</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary vsli:raw="Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.">取得或設定用於結構描述識別項和任何其他識別項間之分隔符號的字元。</summary>
      <returns vsli:raw="The character to be used as the schema separator.">當做結構描述分隔符號使用的字元。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary vsli:raw="Specifies whether all column values in an update statement are included or only changed ones.">指定更新陳述式中包含所有資料行值或只包含已變更的資料行值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UPDATE statement generated by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; includes all columns; &lt;see langword=&quot;false&quot; /&gt; if it includes only changed columns.">如果 <see cref="T:System.Data.Common.DbCommandBuilder" /> 所產生的 UPDATE 陳述式包含所有資料行，則為 <see langword="true" />，如果只包含已變更的資料行，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to handle the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event for a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">註冊 <see cref="T:System.Data.Common.DbCommandBuilder" />，以處理 <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> 的 <see cref="T:System.Data.Common.DbDataAdapter" /> 事件。</summary>
      <param name="adapter" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; to be used for the update.">要用於更新的 <see cref="T:System.Data.Common.DbDataAdapter" />。</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary vsli:raw="Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.">已提供引號識別項時，傳回該識別項不具引號的正確格式，包括不逸出識別項中的任何內嵌引號。</summary>
      <param name="quotedIdentifier" vsli:raw="The identifier that will have its embedded quotes removed.">將移除其內嵌引號的識別項。</param>
      <returns vsli:raw="The unquoted identifier, with embedded quotes properly un-escaped.">不具引號的識別項，會適當包含內嵌的引號。</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary vsli:raw="Defines the core behavior of database connections and provides a base class for database-specific connections.">定義資料庫連線的核心行為，並為資料庫特定連線提供基底類別。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbConnection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="When overridden in a derived class, starts a database transaction.">當在衍生類別中被覆寫時，會開始進行資料庫交易。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">其中一個列舉值，它指定指定要使用之交易的隔離等級。</param>
      <returns vsli:raw="An object representing the new transaction.">代表新異動的物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously starts a database transaction.">以非同步方式開始資料庫交易。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">其中一個列舉值，它指定指定要使用之交易的隔離等級。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">取消非同步作業的語彙基元。</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">一個工作，其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 屬性是代表新交易的物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary vsli:raw="Starts a database transaction.">開始資料庫交易。</summary>
      <returns vsli:raw="An object representing the new transaction.">代表新異動的物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Starts a database transaction with the specified isolation level.">使用指定的隔離等級開始資料庫異動。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">其中一個列舉值，它指定指定要使用之交易的隔離等級。</param>
      <returns vsli:raw="An object representing the new transaction.">代表新異動的物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">以非同步方式開始資料庫交易。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">其中一個列舉值，它指定指定要使用之交易的隔離等級。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">取消非同步作業的語彙基元。</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">一個工作，其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 屬性是代表新交易的物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">以非同步方式開始資料庫交易。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">取消非同步作業的語彙基元。</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">一個工作，其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 屬性是代表新交易的物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="When overridden in a derived class, changes the current database for an open connection.">當在衍生類別中被覆寫時，針對開啟的連線變更目前的資料庫。</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">連線要使用之資料庫的名稱。</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously changes the current database for an open connection.">以非同步方式針對開啟的連線變更目前的資料庫。</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">連線要使用之資料庫的名稱。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">取消非同步作業的語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary vsli:raw="When overridden in a derived class, closes the connection to the database.">當在衍生類別中被覆寫時，關閉與資料庫的連線。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary vsli:raw="Asynchronously closes the connection to the database.">以非同步方式關閉與資料庫的連線。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">代表非同步作業的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary vsli:raw="When overridden in a derived class, gets or sets the string used to open the connection.">當在衍生類別中覆寫時，取得或設定用於開啟連線的字串。</summary>
      <returns vsli:raw="The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.">用來建立初始連接的連接字串。 連接字串的確切內容取決於這個連接的特定資料來源。 預設值為空字串。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while establishing a connection before terminating the attempt and generating an error.">取得在終止嘗試並產生錯誤前建立連接的等待時間。</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.">等待連接開啟的時間 (以秒為單位)。 預設值是由您使用的連接特定型別所決定。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">建立並傳回與目前連接相關聯的 <see cref="T:System.Data.Common.DbCommand" /> 物件。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbCommand" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary vsli:raw="When overridden in a derived class, creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">當在衍生類別中被覆寫時，建立並傳回與目前連線相關聯的 <see cref="T:System.Data.Common.DbCommand" /> 物件。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbCommand" /> 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary vsli:raw="When overridden in a derived class, gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.">當在衍生類別中被覆寫時，取得連線開啟後的目前資料庫名稱，或連線開啟前連接字串中所指定的資料庫名稱。</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.">目前資料庫的名稱或連接開啟後要使用之資料庫的名稱。 預設值為空字串。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary vsli:raw="When overridden in a derived class, gets the name of the database server to which to connect.">在衍生類別中被覆寫時，取得要連線之資料庫伺服器的名稱。</summary>
      <returns vsli:raw="The name of the database server to which to connect. The default value is an empty string.">要連接的資料庫伺服器名稱。 預設值為空字串。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">取得此 <see cref="T:System.Data.Common.DbProviderFactory" /> 的 <see cref="T:System.Data.Common.DbConnection" />。</summary>
      <returns vsli:raw="A set of methods for creating instances of a provider's implementation of the data source classes.">用於建立資料來源類別 (class) 之提供者 (Provider) 實作 (Implementation) 執行個體的一組方法。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the connection object.">以非同步方式處置連線物件。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">代表非同步作業的 <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Enlists in the specified transaction.">登記指定的交易。</summary>
      <param name="transaction" vsli:raw="A reference to an existing &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; in which to enlist.">要登記之現有 <see cref="T:System.Transactions.Transaction" /> 的參考。</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">傳回這個 <see cref="T:System.Data.Common.DbConnection" /> 之資料來源的結構描述資訊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">包含結構描述資訊的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name.">使用結構描述名稱的特定字串，傳回這個 <see cref="T:System.Data.Common.DbConnection" /> 之資料來源的結構描述資訊。</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">指定要傳回之結構描述的名稱。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">包含結構描述資訊的 <see cref="T:System.Data.DataTable" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> 指定為 null。</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name and the specified string array for the restriction values.">使用結構描述名稱的特定字串和限制值的特定字串陣列，傳回這個 <see cref="T:System.Data.Common.DbConnection" /> 的資料來源的結構描述資訊。</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">指定要傳回之結構描述的名稱。</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">指定所要求之結構描述的限制值集合。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">包含結構描述資訊的 <see cref="T:System.Data.DataTable" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> 指定為 null。</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">引發 <see cref="E:System.Data.Common.DbConnection.StateChange" /> 事件。</summary>
      <param name="stateChange" vsli:raw="A &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.StateChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary vsli:raw="When overridden in a derived class, opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;.">當在衍生類別中被覆寫時，使用由 <see cref="P:System.Data.Common.DbConnection.ConnectionString" /> 指定的設定開啟資料庫連線。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;, which opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;. This method invokes the virtual method &lt;see cref=&quot;M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">非同步版本的 <see cref="M:System.Data.Common.DbConnection.Open" />，這個版本會透過 <see cref="P:System.Data.Common.DbConnection.ConnectionString" /> 所指定的設定開啟資料庫連接。 這個方法會叫用虛擬方法 <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> 與 CancellationToken.None。</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token can optionally be honored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt; call and returns a completed task. The default implementation will return a cancelled task if passed an already cancelled cancellationToken. Exceptions thrown by Open will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbConnection&quot; /&gt; object until the returned Task is complete.">這是 <see cref="M:System.Data.Common.DbConnection.Open" /> 的非同步版本。 提供者應該覆寫為適當的實作。 可以選擇性地接受取消語彙基元。  
預設實作會叫用同步<see cref="M:System.Data.Common.DbConnection.Open" />呼叫並傳回完成的工作。 如果傳遞一個已經被取消的 cancellationToken，預設實作會傳回已取消的工作。 Open 擲回的例外狀況會透過傳回的工作例外狀況屬性來傳送。  
在傳回的工作完成之前，不叫用 <see langword="DbConnection" /> 物件的其他方法及屬性。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary vsli:raw="When overridden in a derived class, gets a string that represents the version of the server to which the object is connected.">當在衍生類別中被覆寫時，取得代表物件所連線之伺服器版本的字串。</summary>
      <returns vsli:raw="The version of the database. The format of the string returned depends on the specific type of connection you are using.">資料庫的版本。 傳回的字串格式取決於您所使用的連接特定型別。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Data.Common.DbConnection.ServerVersion&quot; /&gt; was called while the returned Task was not completed and the connection was not opened after a call to &lt;see cref=&quot;Overload:System.Data.Common.DbConnection.OpenAsync&quot; /&gt;.">傳回的工作未完成時即已呼叫 <see cref="P:System.Data.Common.DbConnection.ServerVersion" />，而且在呼叫 <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" /> 之後未開啟連接。</exception>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary vsli:raw="Gets a string that describes the state of the connection.">取得字串，描述連接的狀態。</summary>
      <returns vsli:raw="The state of the connection. The format of the string returned depends on the specific type of connection you are using.">連接的狀態。 傳回的字串格式取決於您所使用的連接特定型別。</returns>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary vsli:raw="Occurs when the state of the connection changes.">當事件的狀態變更時發生。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">開始資料庫異動。</summary>
      <returns vsli:raw="An object that represents the new transaction.">代表新異動的物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified isolation level.">使用指定的隔離等級開始資料庫異動。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">其中一個列舉值，它指定指定要使用之交易的隔離等級。</param>
      <returns vsli:raw="An object that represents the new transaction.">代表新異動的物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the current connection.">建立並傳回與目前連線相關聯的 <see cref="T:System.Data.Common.DbCommand" /> 物件。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the connection.">與連線相關聯的 <see cref="T:System.Data.Common.DbCommand" /> 物件。</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary vsli:raw="Provides a base class for strongly typed connection string builders.">提供強類型連接字串產生器的基底類別。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class, optionally using ODBC rules for quoting values.">選擇性地使用 ODBC 規則將值以引號括住，進而初始化 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 類別的新執行個體。</summary>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields; &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">
        <see langword="true" /> 表示使用 {} 分隔欄位，<see langword="false" /> 表示使用引號。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an entry with the specified key and value into the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">將有指定索引鍵和數值項目加入 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中。</summary>
      <param name="keyword" vsli:raw="The key to add to the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">要加入至 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的索引鍵。</param>
      <param name="value" vsli:raw="The value for the specified key.">指定索引鍵的值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是唯讀的。  
-或- 
<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">提供有效且安全的方法，將索引鍵和值附加至現有的 <see cref="T:System.Text.StringBuilder" /> 物件。</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">要加入機碼值組的 <see cref="T:System.Text.StringBuilder" /></param>
      <param name="keyword" vsli:raw="The key to be added.">要加入的索引鍵。</param>
      <param name="value" vsli:raw="The value for the supplied key.">所提供的索引鍵值。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">提供有效且安全的方法，將索引鍵和值附加至現有的 <see cref="T:System.Text.StringBuilder" /> 物件。</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">要加入機碼值組的 <see cref="T:System.Text.StringBuilder" /></param>
      <param name="keyword" vsli:raw="The key to be added.">要加入的索引鍵。</param>
      <param name="value" vsli:raw="The value for the supplied key.">所提供的索引鍵值。</param>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields, &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">
        <see langword="true" /> 表示使用 {} 分隔欄位，<see langword="false" /> 表示使用引號。</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property is visible in Visual Studio designers.">取得或設定值，指出 <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> 屬性是否會顯示在 Visual Studio 設計工具中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection string is visible within designers; &lt;see langword=&quot;false&quot; /&gt; otherwise. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果連接字串顯示在設計工具中，則為 <see langword="true" />；否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">清除 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 執行個體的內容。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是唯讀的。</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary vsli:raw="Clears the collection of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects on the associated &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">清除在相關聯 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 上的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件集合。</summary>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string associated with the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">取得或設定與 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 相關聯的連接字串。</summary>
      <returns vsli:raw="The current connection string, created from the key/value pairs that are contained within the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;. The default value is an empty string.">從包含於 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的索引鍵/值組所建立的目前連接字串。 預設值為空字串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid connection string argument has been supplied.">已提供無效的連接字串引數。</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains a specific key.">判斷 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是否包含特定索引鍵。</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">要在 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中尋找的索引鍵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 包含具有指定索引鍵的項目，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary vsli:raw="Gets the current number of keys that are contained within the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">取得 <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> 屬性內所包含的索引鍵目前數目。</summary>
      <returns vsli:raw="The number of keys that are contained within the connection string maintained by the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">包含在 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 執行個體所維護之連接字串內的索引鍵數目。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary vsli:raw="Compares the connection information in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object with the connection information in the supplied object.">比較在這個 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 物件中的連接資訊和提供之物件中的連接資訊。</summary>
      <param name="connectionStringBuilder" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; to be compared with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object.">要與這個 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 物件比較的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection information in both of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; objects causes an equivalent connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果這兩個 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 物件中的連接資訊會產生相等的連接字串，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary vsli:raw="Fills a supplied &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; with information about all the properties of this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">以這個 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 之所有屬性的相關資訊填滿提供的 <see cref="T:System.Collections.Hashtable" />。</summary>
      <param name="propertyDescriptors" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; to be filled with information about this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">要使用這個 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 之相關資訊填滿的 <see cref="T:System.Collections.Hashtable" />。</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">取得值，指出 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是否有固定的大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 有固定大小，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">取得值，這個值表示 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是否為唯讀。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">取得或設定與指定之索引鍵相關聯的值。</summary>
      <param name="keyword" vsli:raw="The key of the item to get or set.">要取得或設定之項目的索引鍵。</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, trying to get it returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), and trying to set it creates a new element using the specified key.&#xA;&#xA; Passing a null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) key throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;. Assigning a null value removes the key/value pair.">與指定之索引鍵關聯的值。 如果找不到指定的索引鍵，嘗試使其傳回 null 參考 (在 Visual Basic 中為<see langword="Nothing" /> )，並且嘗試將其設定為使用指定的索引鍵建立新項目。  
傳遞 null (在 Visual Basic 中為<see langword="Nothing" /> ) 索引鍵會擲回 <see cref="T:System.ArgumentNullException" />。 指派 null 值會移除索引鍵/值組。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The property is set, &lt;paramref name=&quot;keyword&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">屬性已設定，而且 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是唯讀的。  
-或- 
屬性已設定、<paramref name="keyword" /> 不在於集合中，而且 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的大小固定。</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">取得 <see cref="T:System.Collections.ICollection" /> 中包含索引鍵的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> 中包含索引鍵的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary vsli:raw="Removes the entry with the specified key from the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">從 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 執行個體移除具有指定之索引鍵的項目。</summary>
      <param name="keyword" vsli:raw="The key of the key/value pair to be removed from the connection string in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">要從這個 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的連接字串中移除之索引鍵/值組的索引鍵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key existed within the connection string and was removed; &lt;see langword=&quot;false&quot; /&gt; if the key did not exist.">如果索引鍵存在於連接字串中且遭到移除，則為 <see langword="true" />；如果索引鍵不存在，則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)">
        <paramref name="keyword" /> 為 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only, or the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是唯讀的，或 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary vsli:raw="Indicates whether the specified key exists in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">指出這個 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 執行個體中，是否存在指定的索引鍵。</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">要在 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中尋找的索引鍵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 包含具有指定索引鍵的項目，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">從特定的 <see cref="T:System.Collections.ICollection" /> 索引開始，將 <see cref="T:System.Array" /> 的項目複製到 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.ICollection" /> 複製過來之項目的目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">取得值，這個值表示對 <see cref="T:System.Collections.ICollection" /> 的存取是否同步 (安全執行緒)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">取得可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">將隨附有索引鍵和值的項目加入至 <see cref="T:System.Collections.IDictionary" /> 物件。</summary>
      <param name="keyword" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the key of the element to add.">
        <see cref="T:System.Object" />，用做要加入之項目的索引鍵。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the value of the element to add.">
        <see cref="T:System.Object" />，用做要加入之項目的值。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object contains an element with the specified key.">判斷 <see cref="T:System.Collections.IDictionary" /> 物件是否包含具有指定索引鍵的項目。</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">要在 <see cref="T:System.Collections.IDictionary" /> 物件中尋找的索引鍵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 包含具有該索引鍵的項目，則為 <see cref="T:System.Collections.IDictionary" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">傳回 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.IDictionaryEnumerator" /> 物件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> 物件的 <see cref="T:System.Collections.IDictionary" /> 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">取得或設定具有指定索引鍵的項目。</summary>
      <param name="keyword" vsli:raw="The key of the element to get or set.">要取得或設定之項目的索引鍵。</param>
      <returns vsli:raw="The element with the specified key.">具有指定索引鍵的項目。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">從 <see cref="T:System.Collections.IDictionary" /> 物件中移除具有指定索引鍵的項目。</summary>
      <param name="keyword" vsli:raw="The key of the element to remove.">要移除的項目索引鍵。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">傳回逐一查看集合的列舉值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">傳回元件之這個執行個體的自訂屬性集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; containing the attributes for this object.">
        <see cref="T:System.ComponentModel.AttributeCollection" />，其包含此物件的屬性。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">傳回這個元件執行個體的類別名稱。</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">此物件的類別名稱，或如果類別沒有名稱，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">傳回這個元件執行個體的名稱。</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">物件的名稱；如果物件沒有名稱，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">傳回這個元件執行個體的類型轉換子。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">這個物件之轉換子的 <see cref="T:System.ComponentModel.TypeConverter" />；如果這個物件沒有 <see cref="T:System.ComponentModel.TypeConverter" />，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">傳回這個元件執行個體的預設事件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">代表這個物件之預設事件的 <see cref="T:System.ComponentModel.EventDescriptor" />；如果這個物件沒有事件，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">傳回這個元件執行個體的屬性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">代表這個物件之預設屬性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果這個物件沒有屬性，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">傳回元件的這個執行個體之指定類型編輯器。</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">表示此物件編輯器的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">為此物件之編輯器的指定類型 <see cref="T:System.Object" />，如果找不到編輯器，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">傳回這個元件執行個體的事件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" />，代表此元件執行個體的事件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">使用指定屬性陣列做為篩選條件傳回元件之執行個體的事件。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">
        <see cref="T:System.Attribute" /> 類型陣列，可當做篩選條件使用。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" />，代表此元件執行個體篩選過的事件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">傳回元件之這個執行個體的屬性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，代表這個元件執行個體的屬性。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">使用屬性陣列做為篩選條件，傳回這個元件執行個體的屬性。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">
        <see cref="T:System.Attribute" /> 類型陣列，可當做篩選條件使用。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，代表這個元件執行個體的篩選後屬性。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">傳回物件，包含指定的屬性描述項所描述的屬性。</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" />，代表要尋找其擁有者的屬性。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">
        <see cref="T:System.Object" />，代表指定之屬性的擁有者。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary vsli:raw="Returns the connection string associated with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">傳回與這個 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 相關聯的連接字串。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">目前的 <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Retrieves a value corresponding to the supplied key from this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">從這個 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 擷取對應到所提供之索引鍵的值。</summary>
      <param name="keyword" vsli:raw="The key of the item to retrieve.">要擷取之項目的索引鍵。</param>
      <param name="value" vsli:raw="The value corresponding to the &lt;paramref name=&quot;keyword&quot; /&gt;.">對應至 <paramref name="keyword" /> 的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyword&quot; /&gt; was found within the connection string, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果在連接字串中找到 <paramref name="keyword" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; contains a null value (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> 包含 null 值 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">取得包含 <see cref="T:System.Collections.ICollection" /> 中之值的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" />，其中包含 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中的值。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary vsli:raw="Aids implementation of the &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; interface. Inheritors of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a DataAdapter.">協助 <see cref="T:System.Data.IDbDataAdapter" /> 介面的實作。 <see cref="T:System.Data.Common.DbDataAdapter" /> 繼承者實作一組函式以提供強型別，但繼承大多數完整實作 DataAdapter 所需的功能。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of a DataAdapter class.">初始化 DataAdapter 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DataAdapter&quot; /&gt; class from an existing object of the same type.">從相同類型的現有物件，初始化 <see langword="DataAdapter" /> 類別的新執行個體。</summary>
      <param name="adapter" vsli:raw="A &lt;see langword=&quot;DataAdapter&quot; /&gt; object used to create the new &lt;see langword=&quot;DataAdapter&quot; /&gt;.">
        <see langword="DataAdapter" /> 物件，用來建立新的 <see langword="DataAdapter" />。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to the current batch.">加入 <see cref="T:System.Data.IDbCommand" /> 至目前批次。</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to add to the batch.">要加入至批次的 <see cref="T:System.Data.IDbCommand" />。</param>
      <returns vsli:raw="The number of commands in the batch before adding the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">加入 <see cref="T:System.Data.IDbCommand" /> 之前，批次中的命令數目。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">配置器不支援批次。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; objects from the batch.">將所有的 <see cref="T:System.Data.IDbCommand" /> 物件從批次中移除。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">配置器不支援批次。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 類別的新執行個體。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; used to update the data source.">用來更新資料來源的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">在 <see cref="T:System.Data.IDbCommand" /> 期間執行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">命令為 UPDATE、INSERT、DELETE 或 SELECT 陳述式。</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 類別的新執行個體。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 類別的新執行個體。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that updates the data source.">更新資料來源的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要在 <see cref="T:System.Data.IDbCommand" /> 期間執行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">命令為 UPDATE、INSERT、DELETE 或 SELECT 陳述式。</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 物件。</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 類別的新執行個體。</returns>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary vsli:raw="The default name used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object for table mappings.">資料表對應之 <see cref="T:System.Data.Common.DataAdapter" /> 物件所使用的預設名稱。</summary>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets a command for deleting records from the data set.">取得或設定命令，以從資料集刪除資料錄。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所刪除的資料列刪除在資料來源中的資料錄。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Data.Common.DbDataAdapter" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary vsli:raw="Executes the current batch.">執行目前批次。</summary>
      <returns vsli:raw="The return value from the last command in the batch.">批次中上一個命令的傳回值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">在 <see cref="T:System.Data.DataSet" /> 中加入或重新整理資料列。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">要起始之以零為起始的資料錄編號。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">要擷取之資料錄的最大數目。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用於資料表對應的來源資料表名稱。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 無效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">來源資料表無效。  
 -或-  
 連接無效。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">找不到連線。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> 參數小於 0。  
-或- 
<paramref name="maxRecords" /> 參數小於 0。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and source table names, command string, and command behavior.">使用 <see cref="T:System.Data.DataSet" />、來源資料表名稱、命令字串和命令行為，加入或重新整理 <see cref="T:System.Data.DataSet" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">要起始之以零為起始的資料錄編號。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">要擷取之資料錄的最大數目。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用於資料表對應的來源資料表名稱。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">來源資料表無效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> 參數小於 0。  
-或- 
<paramref name="maxRecords" /> 參數小於 0。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中的資料列，以符合那些在資料來源中的資料列。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用於資料表對應的來源資料表名稱。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
      <exception cref="T:System.SystemException" vsli:raw="The source table is invalid.">來源資料表無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">使用 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</summary>
      <param name="dataTable" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use for table mapping.">用於資料表對應的 <see cref="T:System.Data.DataTable" /> 名稱。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">來源資料表無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Data.IDbCommand" />，加入或重新整理 <see cref="T:System.Data.CommandBehavior" /> 中的資料列，以符合那些在資料來源中的資料列。</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records and, if necessary, schema.">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataTable" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</summary>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">要從資料來源填入的 <see cref="T:System.Data.DataTable" /> 物件。</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">要起始之以零為起始的資料錄編號。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">要擷取之資料錄的最大數目。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed to fill the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">
        <see cref="T:System.Data.IDbCommand" />，執行其以填入 <see cref="T:System.Data.DataTable" /> 物件。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</param>
      <returns vsli:raw="The number of rows added to or refreshed in the data tables.">加入至資料的資料表 (Data Table) 或在其中重新整理的資料列數目。</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 無效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">來源資料表無效。  
 -或-  
 連接無效。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">找不到連線。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> 參數小於 0。  
-或- 
<paramref name="maxRecords" /> 參數小於 0。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary vsli:raw="Adds or refreshes rows in one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.">從指定的記錄開始擷取直到指定的記錄最大數目為止，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中的資料列，以符合那些在資料來源中的資料列。</summary>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">要起始之以零為起始的資料錄編號。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">要擷取之資料錄的最大數目。</param>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">要從資料來源填入的 <see cref="T:System.Data.DataTable" /> 物件。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects. This value does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataTable" /> 或在其中重新整理的資料列數目。 這個值不包含受未傳回資料列之陳述式所影響的資料列。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary vsli:raw="Gets or sets the behavior of the command used to fill the data adapter.">取得或設定用來填入資料配接器 (Adapter) 之命令的行為。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; of the command used to fill the data adapter.">命令的 <see cref="T:System.Data.CommandBehavior" />，用於填入資料配接器。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">將名稱為 "Table" 的 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />，並根據指定的 <see cref="T:System.Data.SchemaType" />，設定結構描述以符合資料來源中的資料表。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">要插入結構描述的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">其中一個 <see cref="T:System.Data.SchemaType" /> 值，指定插入結構描述的方法。</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">已加入至 <see cref="T:System.Data.DataTable" /> 之 <see cref="T:System.Data.DataSet" /> 物件集合的參考。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />，並且根據指定的 <see cref="T:System.Data.SchemaType" /> 設定結構描述，以符合資料來源中的資料表。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">
        <see cref="T:System.Data.DataSet" />，以資料來源中的結構描述來填入其中。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用於資料表對應的來源資料表名稱。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">
        <see cref="T:System.Data.DataTable" /> 物件的陣列，包含從資料來源傳回的結構描述資訊。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based upon the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />，並且根據指定的 <see cref="T:System.Data.SchemaType" /> 和 <see cref="T:System.Data.DataTable" /> 設定結構描述，以符合資料來源中的資料表。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">要插入結構描述的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">其中一個 <see cref="T:System.Data.SchemaType" /> 值，指定插入結構描述的方法。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用於資料表對應的來源資料表名稱。</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">已加入至 <see cref="T:System.Data.DataTable" /> 之 <see cref="T:System.Data.DataSet" /> 物件集合的參考。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A source table from which to get the schema could not be found.">無法找到要取得結構描述的來源資料表。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">根據指定的 <see cref="T:System.Data.DataTable" />，設定指定 <see cref="T:System.Data.SchemaType" /> 的結構描述。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">
        <see cref="T:System.Data.DataTable" />，以資料來源中的結構描述來填入其中。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information returned from the data source.">
        <see cref="T:System.Data.DataTable" />，包含從資料來源傳回的結構描述資訊。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;, command string, and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">根據指定的 <see cref="T:System.Data.DataTable" />、命令字串和 <see cref="T:System.Data.SchemaType" /> 值，設定指定 <see cref="T:System.Data.CommandBehavior" /> 的結構描述。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">
        <see cref="T:System.Data.DataTable" />，以資料來源中的結構描述來填入其中。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</param>
      <returns vsli:raw="A of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">
        <see cref="T:System.Data.DataTable" /> 物件，包含從資料來源傳回的結構描述資訊。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from one of the commands in the current batch.">從目前批次中的其中一個命令傳回 <see cref="T:System.Data.IDataParameter" />。</summary>
      <param name="commandIdentifier" vsli:raw="The index of the command to retrieve the parameter from.">要從其中擷取參數的命令索引。</param>
      <param name="parameterIndex" vsli:raw="The index of the parameter within the command.">命令內參數的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; specified.">指定的 <see cref="T:System.Data.IDataParameter" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">配置器不支援批次。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary vsli:raw="Returns information about an individual update attempt within a larger batched update.">傳回在較大之批次更新中嘗試個別更新的相關資訊。</summary>
      <param name="commandIdentifier" vsli:raw="The zero-based column ordinal of the individual command within the batch.">批次中個別命令之以零為基礎的資料行序數。</param>
      <param name="recordsAffected" vsli:raw="The number of rows affected in the data store by the specified command within the batch.">資料存放區中受批次內指定命令影響的資料行數目。</param>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; thrown during execution of the specified command. Returns &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no exception is thrown.">在指定命令的執行期間所擲回的 <see cref="T:System.Exception" />。 如果未擲回例外狀況，則傳回 <see langword="null" /> (在 Visual Basic 中為 <see langword="Nothing" />)。</param>
      <returns vsli:raw="Information about an individual update attempt within a larger batched update.">在較大批次更新內個別更新嘗試的相關資訊。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">取得在執行 SQL SELECT 陳述式時由使用者設定的參數。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">
        <see cref="T:System.Data.IDataParameter" /> 物件的陣列，含有由使用者設定的參數。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary vsli:raw="Initializes batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">初始化 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批次處理。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">配置器不支援批次。</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets a command used to insert new records into the data source.">取得或設定用來將新的資料錄插入至資料來源的命令。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中新的資料列插入在資料來源中的資料錄。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">引發 .NET Framework 資料提供者的 <see langword="RowUpdated" /> 事件。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdating&quot; /&gt; event of a .NET data provider.">引發 .NET Framework 資料提供者的 <see langword="RowUpdating" /> 事件。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</param>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets a command used to select records in the data source.">取得或設定用來在資料來源中選取資料錄的命令。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中的位置從資料來源選取資料錄。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">取得或設定 SQL 陳述式從資料集刪除資料錄。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所刪除的資料列刪除在資料來源中的資料錄。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">取得或設定用來將新的資料錄插入至資料來源的 SQL 陳述式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中新的資料列插入在資料來源中的資料錄。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">取得或設定用來在資料來源中選取資料錄的 SQL 陳述式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中的位置從資料來源選取資料錄。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">取得或設定用來在資料來源中更新資料錄的 SQL 陳述式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所修改的資料列更新在資料來源中的資料錄。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">建立目前執行個體複本的新物件。</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">這個執行個體複本的新物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary vsli:raw="Ends batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">結束 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批次處理。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">配置器不支援批次。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">針對 <see cref="T:System.Data.DataSet" /> 的指定陣列中每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">用來更新資料來源的 <see cref="T:System.Data.DataRow" /> 物件陣列。</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 無效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">來源資料表無效。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">要更新的 <see cref="T:System.Data.DataRow" /> 不存在。  
-或- 
要更新的 <see cref="T:System.Data.DataTable" /> 不存在。  
-或- 
要用來做為來源的 <see cref="T:System.Data.DataSet" /> 不存在。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">針對 <see cref="T:System.Data.DataSet" /> 物件的指定陣列中每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">用來更新資料來源的 <see cref="T:System.Data.DataRow" /> 物件陣列。</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;P:System.Data.IDataAdapter.TableMappings&quot; /&gt; collection to use.">要使用的 <see cref="P:System.Data.IDataAdapter.TableMappings" /> 集合。</param>
      <returns vsli:raw="The number of rows successfully updated from the array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 無效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">來源資料表無效。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">要更新的 <see cref="T:System.Data.DataRow" /> 不存在。  
-或- 
要更新的 <see cref="T:System.Data.DataTable" /> 不存在。  
-或- 
要用來做為來源的 <see cref="T:System.Data.DataSet" /> 不存在。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">針對指定之 <see cref="T:System.Data.DataSet" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">用來更新資料來源的 <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">來源資料表無效。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">針對具有指定 <see cref="T:System.Data.DataTable" /> 名稱之 <see cref="T:System.Data.DataSet" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use to update the data source.">用來更新資料來源的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用於資料表對應的來源資料表名稱。</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 無效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">來源資料表無效。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">針對指定之 <see cref="T:System.Data.DataTable" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; used to update the data source.">用來更新資料來源的 <see cref="T:System.Data.DataTable" />。</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">自 <see cref="T:System.Data.DataTable" /> 中成功更新的資料列數目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 無效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">來源資料表無效。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">要更新的 <see cref="T:System.Data.DataRow" /> 不存在。  
-或- 
要更新的 <see cref="T:System.Data.DataTable" /> 不存在。  
-或- 
要用來做為來源的 <see cref="T:System.Data.DataSet" /> 不存在。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary vsli:raw="Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.">取得或設定值，其啟用或停用批次處理支援，並指定可於批次中執行的命令數目。</summary>
      <returns vsli:raw="The number of rows to process per batch.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value is&lt;/term&gt;&lt;description&gt; Effect&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; There is no limit on the batch size.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Disables batch updating.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; &amp;gt; 1&lt;/term&gt;&lt;description&gt; Changes are sent using batches of &lt;see cref=&quot;P:System.Data.Common.DbDataAdapter.UpdateBatchSize&quot; /&gt; operations at a time.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; When setting this to a value other than 1, all the commands associated with the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; must have their &lt;see cref=&quot;P:System.Data.IDbCommand.UpdatedRowSource&quot; /&gt; property set to None or OutputParameters. An exception will be thrown otherwise.">每一批次要處理的資料列數目。  
  值為 
  作用 
  0 
  批次大小沒有任何限制。  

  1 
  停用批次更新。  

  &gt; 1 
  使用 <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> 作業的批次一次傳送變更。  

   

 將此設定為1以外的值時<see cref="T:System.Data.Common.DbDataAdapter" /> , 所有與相關聯的命令都必須將其<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />屬性設定為None或OutputParameters。 否則會擲回例外狀況。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets a command used to update records in the data source.">取得或設定用來在資料來源中更新資料錄的命令。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中修改的資料列更新在資料來源中的資料錄。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary vsli:raw="Reads a forward-only stream of rows from a data source.">從資料來源讀取順向的資料流。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbDataReader" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">關閉 <see cref="T:System.Data.Common.DbDataReader" /> 物件。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary vsli:raw="Asynchronously closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">非同步關閉 <see cref="T:System.Data.Common.DbDataReader" /> 物件。</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">取得值，表示目前資料列的巢狀深度。</summary>
      <returns vsli:raw="The depth of nesting for the current row.">目前資料列的巢狀深度。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">釋放 <see cref="T:System.Data.Common.DbDataReader" /> 類別目前的執行個體所使用的全部資源。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Data.Common.DbDataReader" /> 使用的 Managed 資源，並選擇性釋放 Unmanaged 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋出 Managed 和 Unmanaged 資源，<see langword="false" /> 表示只釋出 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary vsli:raw="Asynchronously releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">以非同步方式將 <see cref="T:System.Data.Common.DbDataReader" /> 類別的目前執行個體所使用所有資源釋出。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">代表非同步作業的 <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of columns in the current row.">在衍生類別中覆寫時，取得目前資料列中的資料行數目。</summary>
      <returns vsli:raw="The number of columns in the current row.">目前資料列中的資料行數目。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is no current connection to an instance of SQL Server.">目前沒有連接至 SQL Server 的執行個體。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a Boolean.">在衍生類別中覆寫時，取得指定資料行的值作為布林值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a byte.">在衍生類別中覆寫時，取得指定資料行的值作為位元組。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">在衍生類別中覆寫時，從起始於指定索引的指定資料行讀取指定的位元組數，並將其寫入至起始於緩衝區中指定位置的緩衝區。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">要開始讀取作業之資料列中的來源索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">要將資料複製到其中的目的緩衝區。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">要對其複製資料的緩衝區索引。</param>
      <param name="length" vsli:raw="The maximum number of bytes to read.">要讀取的字元數上限。</param>
      <returns vsli:raw="The actual number of bytes read.">讀取的實際位元組數目。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single character.">在衍生類別中覆寫時，取得指定資料行的值作為單一字元。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">在衍生類別中覆寫時，從起始於指定索引的指定資料行讀取指定的位元組數，並將其寫入至起始於指定位置的的緩衝區。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">要開始讀取作業之資料列中的來源索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">要將資料複製到其中的目的緩衝區。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">要對其複製資料的緩衝區索引。</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">要讀取的字元數上限。</param>
      <returns vsli:raw="The actual number of characters read.">讀取的實際字元數目。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">傳回所要求資料行的巢狀資料讀取器。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="A data reader.">資料讀取器。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets name of the data type of the specified column.">在衍生類別中覆寫時，取得指定資料行的資料類型名稱。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The name of the data type.">資料型別的名稱。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">在衍生類別中覆寫時，取得指定資料行的值作為 <see cref="T:System.DateTime" /> 物件。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">傳回所要求資料行序數的 <see cref="T:System.Data.Common.DbDataReader" /> 物件，可使用提供者特定的實作 (Implementation) 覆寫。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">在衍生類別中覆寫時，取得指定資料行的值作為 <see cref="T:System.Decimal" />。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a double-precision floating point number.">在衍生類別中覆寫時，取得指定資料行的值作為雙精確度浮點數。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary vsli:raw="When overridden in a derived class, returns an enumerator that can be used to iterate through the rows in the data reader.">在衍生類別中覆寫時，傳回可以用來逐一查看資料讀取器中資料列的列舉程式。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the rows in the data reader.">可用來逐一查看資料讀取器中資料列的列舉程式。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the data type of the specified column.">在衍生類別中覆寫時，取得指定資料行的資料類型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The data type of the specified column.">指定資料行的資料類型。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">取得所指定資料行值作為要求類型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">要傳回的值型别。</typeparam>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或- 
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，沒有呼叫第一個 <see cref="M:System.Data.Common.DbDataReader.Read" />，或傳回 <see langword="false" />)。  
-或-
讀取器已嘗試在循序模式下讀取先前讀取的資料行。  
-或-
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">資料來源傳回的值不符合或無法轉換成 <typeparamref name="T" />。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">以非同步方式取得所指定資料行的值作為要求類型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">要傳回的值型别。</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 包含所指定資料行值的工作。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或-
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，沒有呼叫第一個 <see cref="M:System.Data.Common.DbDataReader.Read" />，或傳回 <see langword="false" />)。
-或-
嘗試在循序模式下讀取先前讀取的資料行。  
-或-
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get_*_ 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">資料來源傳回的值不符合或無法轉換成 <typeparamref name="T" />。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">以非同步方式取得所指定資料行的值作為要求類型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">取消非同步作業的語彙基元。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">要傳回的值型别。</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 包含所指定資料行值的工作。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或-
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，沒有呼叫第一個 <see cref="M:System.Data.Common.DbDataReader.Read" />，或傳回 <see langword="false" />)。
-或-
嘗試在循序模式下讀取先前讀取的資料行。  
-或-
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get_*_ 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">資料來源傳回的值不符合或無法轉換成 <typeparamref name="T" />。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single-precision floating point number.">在衍生類別中覆寫時，取得指定資料行的值作為單精確度浮點數。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a globally unique identifier (GUID).">在衍生類別中覆寫時，取得指定資料行的值作為通用唯一識別碼 (GUID)。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 16-bit signed integer.">在衍生類別中覆寫時，取得指定資料行的值作為 16 位元帶正負號的整數。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 32-bit signed integer.">在衍生類別中覆寫時，取得指定資料行的值作為 32 位元帶正負號的整數。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 64-bit signed integer.">在衍生類別中覆寫時，取得指定資料行的值作為 64 位元帶正負號的整數。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the name of the column, given the zero-based column ordinal.">在衍生類別中覆寫時，取得資料行序數從零開始的資料行名稱。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The name of the specified column.">指定資料行的名稱。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the column ordinal given the name of the column.">在衍生類別中覆寫時，取得具有資料行名稱的資料行序數。</summary>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">取得指定資料行的提供者特定類型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="A provider-specific .NET type.">提供者特定的 .NET 類型。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">取得所指定資料行值作為提供者特定類型的執行個體。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Gets all provider-specific attribute columns in the collection for the current row.">為目前的資料列在集合中取得所有提供者特定的屬性資料行。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">要複製屬性資料行的目的 <see cref="T:System.Object" /> 陣列。</param>
      <returns vsli:raw="The number of instances of elements in the array.">陣列中元素的執行個體數目。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.Common.DbDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">傳回 <see cref="T:System.Data.DataTable" />，以描述 <see cref="T:System.Data.Common.DbDataReader" /> 的資料行中繼資料。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">描述資料行中繼資料的 <see cref="T:System.Data.DataTable" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.Common.DbDataReader" /> 已關閉。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">僅限 .NET Core：不支援此成員。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">取得資料流以從指定的資料行擷取資料。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="A stream.">資料流。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或-
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.Common.DbDataReader.Read" /> 沒有被呼叫，或傳回 false)。  
-或-
資料讀取器已嘗試在循序模式下讀取先前讀取的資料行。  
-或-
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定的資料行不是支援使用 <see cref="T:System.IO.Stream" /> 讀取的二進位型別。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">在衍生類別中覆寫時，取得指定資料行的值作為 <see cref="T:System.String" /> 的執行個體。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">取得文字讀取器以從資料行擷取資料。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="A text reader.">文字讀取器。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或-
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.Common.DbDataReader.Read" /> 沒有被呼叫，或傳回 false)。  
-或-
資料讀取器已嘗試在循序模式下讀取先前讀取的資料行。  
-或-
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定的資料行不是支援使用 <see cref="T:System.IO.TextReader" /> 讀取的文字型別。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">在衍生類別中覆寫時，取得指定資料行的值作為 <see cref="T:System.Object" /> 的執行個體。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary vsli:raw="When overridden in a derived class, populates an array of objects with the column values of the current row.">在衍生類別中覆寫時，使用目前資料列的資料行值填入物件陣列。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">要複製屬性資料行的目的 <see cref="T:System.Object" /> 陣列。</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">陣列中 <see cref="T:System.Object" /> 的執行個體數目。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows.">在衍生類別中覆寫時，取得指出這個 <see cref="T:System.Data.Common.DbDataReader" /> 是否包含一或多個資料列的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbDataReader" /> 包含一個或更多資料列，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">在衍生類別中覆寫時，取得指出 <see cref="T:System.Data.Common.DbDataReader" /> 是否已關閉的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbDataReader" /> 關閉，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.Common.DbDataReader" /> 已關閉。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the column contains nonexistent or missing values.">在衍生類別中覆寫時，取得指出資料行是否包含不存在或遺漏之值的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的資料行等於 <see cref="T:System.DBNull" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">以非同步方式取得值，指出資料行是否包含不存在或遺漏的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">要擷取的以零起始的資料行。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">如果所指定資料行值等於 <see langword="DBNull" />，則 <see cref="T:System.Threading.Tasks.Task`1" /> 的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 值為 <see langword="true" />；如果不相等，則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或-
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.Common.DbDataReader.Read" /> 沒有被呼叫，或傳回 false)。  
-或-
嘗試在循序模式下讀取先前讀取的資料行。  
-或-
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">以非同步方式取得值，指出資料行是否包含不存在或遺漏的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">要擷取的以零起始的資料行。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">取消非同步作業的語彙基元。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">如果所指定資料行值等於 <see langword="DBNull" />，則 <see cref="T:System.Threading.Tasks.Task`1" /> 的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 值為 <see langword="true" />；如果不相等，則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或-
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.Common.DbDataReader.Read" /> 沒有被呼叫，或傳回 false)。  
-或-
嘗試在循序模式下讀取先前讀取的資料行。  
-或- 
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">在衍生類別中覆寫時，取得指定資料行的值作為 <see cref="T:System.Object" /> 的執行個體。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">資料行索引超出範圍。</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">在衍生類別中覆寫時，取得指定資料行的值作為 <see cref="T:System.Object" /> 的執行個體。</summary>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">找不到具有指定名稱的資料行。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next result when reading the results of a batch of statements.">在衍生類別中覆寫時，當讀取陳述式批次的結果時，將讀取器向前移到下一個結果。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more result sets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果有其他的結果集 (Result Set)，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">在讀取陳述式批次的結果時，以非同步方式將讀取器向前移到下一個結果。</summary>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">如果有多個結果集，則為 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 屬性為 <see langword="true" /> 的工作；如果沒有，則為 <see langword="false" />。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">執行命令文字時發生錯誤。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">在讀取陳述式批次的結果時，以非同步方式將讀取器向前移到下一個結果。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">如果有多個結果集，則 <see cref="T:System.Threading.Tasks.Task`1" /> 的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 屬性為 <see langword="true" />；如果沒有，則為 <see langword="false" />。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">執行命令文字時發生錯誤。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next record in a result set.">在衍生類別中覆寫時，將讀取器向前移到結果集中的下一筆記錄。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果有多個資料列，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">以非同步方式將讀取器向前移到結果集中的下一筆記錄。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">如果有多個資料列，則 <see cref="T:System.Threading.Tasks.Task`1" /> 的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 屬性為 <see langword="true" />；如果沒有，則為 <see langword="false" />。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">執行命令文字時發生錯誤。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">以非同步方式將讀取器向前移到結果集中的下一筆記錄。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">如果有多個資料列，則 <see cref="T:System.Threading.Tasks.Task`1" /> 的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 屬性為 <see langword="true" />；如果沒有，則為 <see langword="false" />。</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">執行命令文字時發生錯誤。</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary vsli:raw="When overridden in a derived class, gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">在衍生類別中覆寫時，取得因執行 SQL 陳述式所變更、插入或刪除的資料列數目。</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.">已變更、插入或刪除的資料列數。 SELECT 陳述式的值為 -1，如果沒有任何資料列受到影響，或是陳述式失敗，則為 0。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Data.IDataRecord.GetData(System.Int32)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used when the field points to more remote structured data.">
        <see cref="T:System.Data.IDataReader" /> 的執行個體，可在欄位指向多個遠端結構化資料時使用。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary vsli:raw="Gets the number of fields in the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; that are not hidden.">取得 <see cref="T:System.Data.Common.DbDataReader" /> 中沒有隱藏的欄位數。</summary>
      <returns vsli:raw="The number of fields that are not hidden.">沒有隱藏的欄位數。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary vsli:raw="This class contains column schema extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">此類別包含 <see cref="T:System.Data.Common.DbDataReader" /> 的資料行結構描述擴充方法。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema.">取得值，指出 <see cref="T:System.Data.Common.DbDataReader" /> 是否可取得資料行結構描述。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to be checked for column schema support.">
        <see cref="T:System.Data.Common.DbDataReader" />，檢查是否支援資料行結構描述。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <see cref="T:System.Data.Common.DbDataReader" /> 可取得資料行結構描述即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">取得 <see cref="T:System.Data.Common.DbDataReader" /> 的資料行結構描述 (<see cref="T:System.Data.Common.DbColumn" /> 集合)。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to return the column schema.">
        <see cref="T:System.Data.Common.DbDataReader" />，傳回資料行結構描述。</param>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" /> 的資料行結構描述 (<see cref="T:System.Data.Common.DbColumn" /> 集合)。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary vsli:raw="Implements &lt;see cref=&quot;T:System.Data.IDataRecord&quot; /&gt; and &lt;see cref=&quot;T:System.ComponentModel.ICustomTypeDescriptor&quot; /&gt;, and provides data binding support for &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt;.">實作 <see cref="T:System.Data.IDataRecord" /> 和 <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />，並為 <see cref="T:System.Data.Common.DbEnumerator" /> 提供資料繫結支援。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataRecord&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbDataRecord" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary vsli:raw="Indicates the number of fields within the current record. This property is read-only.">指出目前記錄內的欄位數目。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="The number of fields within the current record.">目前記錄內的欄位數目。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Not connected to a data source to read from.">未連接到要讀取的資料來源。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a Boolean.">傳回指定資料行的值做為布林值。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Boolean is &lt;see langword=&quot;true&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果布林值是 <see langword="true" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte.">傳回指定資料行的值做為位元組。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte array.">傳回指定資料行的值做為位元組陣列。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">要開始讀取作業之欄位中的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">要將位元組資料流讀取到其中的緩衝區。</param>
      <param name="bufferIndex" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">要開始讀取作業的 <paramref name="buffer" /> 索引。</param>
      <param name="length" vsli:raw="The number of bytes to read.">要讀取的位元組數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character.">傳回指定資料行的值做為字元。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">傳回指定資料行的值做為字元陣列。</summary>
      <param name="i" vsli:raw="Column ordinal.">資料行序數。</param>
      <param name="dataIndex" vsli:raw="Buffer to copy data into.">要將資料複製到其中的緩衝區。</param>
      <param name="buffer" vsli:raw="Maximum length to copy into the buffer.">要複製到緩衝區的最大長度。</param>
      <param name="bufferIndex" vsli:raw="Point to start from within the buffer.">緩衝區中的起始點。</param>
      <param name="length" vsli:raw="Point to start from within the source data.">來源資料中的起始點。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Not currently supported.">目前不支援。</summary>
      <param name="i" vsli:raw="Not currently supported.">目前不支援。</param>
      <returns vsli:raw="Not currently supported.">目前不支援。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Returns the name of the back-end data type.">傳回後端資料類型的名稱。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The name of the back-end data type.">後端資料類型的名稱。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">傳回指定資料行的值做為 <see cref="T:System.DateTime" /> 物件。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">傳回所要求資料行序數的 <see cref="T:System.Data.Common.DbDataReader" /> 物件，可使用提供者特定的實作 (Implementation) 覆寫。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">傳回指定資料行的值做為 <see cref="T:System.Decimal" /> 物件。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a double-precision floating-point number.">傳回指定資料行的值做為雙精確度浮點數。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">傳回 <see cref="T:System.Type" />，此為物件的資料類型。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">
        <see cref="T:System.Type" />，此為物件的資料類型。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a single-precision floating-point number.">傳回指定資料行的值做為單精確度浮點數。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">傳回指定欄位的 GUID 值。</summary>
      <param name="i" vsli:raw="The index of the field to return.">要傳回的欄位索引。</param>
      <returns vsli:raw="The GUID value of the specified field.">指定欄位的 GUID 值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 16-bit signed integer.">傳回指定資料行的值做為 16 位元帶正負號的整數。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 32-bit signed integer.">傳回指定資料行的值做為 32 位元帶正負號的整數。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 64-bit signed integer.">傳回指定資料行的值做為 64 位元帶正負號的整數。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified column.">傳回指定資料行的名稱。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The name of the specified column.">指定資料行的名稱。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Returns the column ordinal, given the name of the column.">指定資料行的名稱，傳回資料行序數。</summary>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The column ordinal.">資料行序數。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a string.">傳回指定資料行的值做為字串。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Returns the value at the specified column in its native format.">以其原生格式傳回指定資料行的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value to return.">要傳回的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">使用目前記錄的資料行值填入物件的陣列。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">要將屬性欄位複製到其中的 <see cref="T:System.Object" /> 陣列。</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">陣列中 <see cref="T:System.Object" /> 的執行個體數目。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Used to indicate nonexistent values.">用來表示不存在的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果指定的資料行等於 <see cref="T:System.DBNull" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.">指定資料行序數，以其原生格式傳回指定資料行的值。 這個屬性是唯讀的。</summary>
      <param name="i" vsli:raw="The column ordinal.">資料行序數。</param>
      <returns vsli:raw="The value at the specified column in its native format.">指定資料行的值，以其原生格式表示。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column name. This property is read-only.">指定資料行名稱，以其原生格式傳回指定資料行的值。 這個屬性是唯讀的。</summary>
      <param name="name" vsli:raw="The column name.">資料行名稱。</param>
      <returns vsli:raw="The value at the specified column in its native format.">指定資料行的值，以其原生格式表示。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">傳回元件之這個執行個體的自訂屬性集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; that contains the attributes for this object.">
        <see cref="T:System.ComponentModel.AttributeCollection" />，包含這個物件的屬性。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">傳回這個元件執行個體的類別名稱。</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">此物件的類別名稱，或如果類別沒有名稱，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">傳回這個元件執行個體的名稱。</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">物件的名稱；如果物件沒有名稱，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">傳回這個元件執行個體的類型轉換子。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">這個物件之轉換子的 <see cref="T:System.ComponentModel.TypeConverter" />；如果這個物件沒有 <see cref="T:System.ComponentModel.TypeConverter" />，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">傳回這個元件執行個體的預設事件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">代表這個物件之預設事件的 <see cref="T:System.ComponentModel.EventDescriptor" />；如果這個物件沒有事件，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">傳回這個元件執行個體的屬性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">代表這個物件之預設屬性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果這個物件沒有屬性，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">傳回元件的這個執行個體之指定類型編輯器。</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">表示此物件編輯器的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">為此物件之編輯器的指定類型 <see cref="T:System.Object" />，如果找不到編輯器，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">傳回這個元件執行個體的事件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" />，代表此元件執行個體的事件。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">使用指定屬性陣列做為篩選條件傳回元件之執行個體的事件。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">
        <see cref="T:System.Attribute" /> 類型陣列，可當做篩選條件使用。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" />，代表此元件執行個體篩選過的事件。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">傳回元件之這個執行個體的屬性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，代表這個元件執行個體的屬性。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">使用屬性陣列做為篩選條件，傳回這個元件執行個體的屬性。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">
        <see cref="T:System.Attribute" /> 類型陣列，可當做篩選條件使用。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，代表這個元件執行個體的篩選後屬性。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">傳回物件，包含指定的屬性描述項所描述的屬性。</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" />，代表要尋找其擁有者的屬性。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">
        <see cref="T:System.Object" />，代表指定之屬性的擁有者。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary vsli:raw="Provides a mechanism for enumerating all available instances of database servers within the local network.">提供列舉區域網路內所有可用之資料庫伺服器執行個體的機制。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">建立 <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about all visible instances of the server represented by the strongly typed instance of this class.">擷取 <see cref="T:System.Data.DataTable" />，包含伺服器 (這個類別的強型別 (Strongly Typed) 所表示) 之所有可見執行個體的相關資訊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about the visible instances of the associated data source.">
        <see cref="T:System.Data.DataTable" />，包含相關聯資料來源的可見執行個體相關資訊。</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">公開 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法，該方法支援由 .NET Framework 資料提供者對集合執行簡單的反覆查看。</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class with the give n data reader.">使用指定的資料讀取器，初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 類別的新執行個體。</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">要逐一查看的 DataReader。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified reader and indicates whether to automatically close the reader after iterating through its data.">使用指定的讀取器初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 類別的新執行個體，並指出是否要在逐一查看其資料之後自動關閉讀取器。</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">要逐一查看的 DataReader。</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the DataReader after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">設為 <see langword="true" /> 會在逐一查看其資料後自動關閉 DataReader，否則設為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;.">使用指定的 <see cref="T:System.Data.Common.DbEnumerator" />，初始化 <see langword="DataReader" /> 類別的新執行個體。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">重複執行要透過的 <see langword="DataReader" />。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;, and indicates whether to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data.">使用指定的 <see langword="DataReader" /> 初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 類別的新執行個體，並指出是否要在逐一查看其資料之後自動關閉 <see langword="DataReader" />。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">重複執行要透過的 <see langword="DataReader" />。</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">設為 <see langword="true" /> 會在逐一查看其資料後自動關閉 <see langword="DataReader" />，否則設為 <see langword="false" />。</param>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">取得集合中目前的項目。</summary>
      <returns vsli:raw="The current element in the collection.">集合中目前的項目。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">列舉值是放在集合的第一個項目之前，或最後一個項目之後。</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">將列舉值往前推至下集合中的下一個項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">建立列舉值之後，集合已修改。</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">設定列舉值至它的初始位置，這是在集合中第一個項目之前。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">建立列舉值之後，集合已修改。</exception>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary vsli:raw="The base class for all exceptions thrown on behalf of the data source.">代表資料來源擲回之所有例外狀況的基底類別。</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified serialization information and context.">使用指定的序列化 (Serialization) 資訊和內容，初始化 <see cref="T:System.Data.Common.DbException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含所擲回之例外狀況的相關序列化物件資料。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">包含有關來源或目的端內容資訊的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message.">使用指定的錯誤訊息，初始化 <see cref="T:System.Data.Common.DbException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The message to display for this exception.">顯示這個例外狀況的訊息。</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息和造成這個例外狀況原因的內部例外狀況參考，初始化 <see cref="T:System.Data.Common.DbException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message string.">錯誤訊息字串。</param>
      <param name="innerException" vsli:raw="The inner exception reference.">內部例外狀況參考。</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and error code.">使用指定的錯誤訊息和錯誤碼，初始化 <see cref="T:System.Data.Common.DbException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="errorCode" vsli:raw="The error code for the exception.">例外狀況的錯誤碼。</param>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary vsli:raw="Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.">提供已知 MetaDataCollections 的常數清單：DataSourceInformation、DataTypes、MetaDataCollections、ReservedWords 和 Restrictions。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataSourceInformation collection.">表示 DataSourceInformation 集合的常數，與 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 方法搭配使用。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataTypes collection.">表示 DataTypes 集合的常數，與 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 方法搭配使用。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the MetaDataCollections collection.">表示 MetaDataCollections 集合的常數，與 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 方法搭配使用。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the ReservedWords collection.">表示 ReservedWords 集合的常數，與 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 方法搭配使用。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the Restrictions collection.">表示 Restrictions 集合的常數，與 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 方法搭配使用。</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary vsli:raw="Provides static values that are used for the column names in the MetaDataCollection objects contained in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is created by the GetSchema method.">提供靜態值，用於 <see cref="T:System.Data.DataTable" /> 中所含 MetaDataCollection 物件的資料行名稱。 <see cref="T:System.Data.DataTable" /> 是由 GetSchema 方法建立。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary vsli:raw="Used by the GetSchema method to create the CollectionName column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 CollectionName 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary vsli:raw="Used by the GetSchema method to create the ColumnSize column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 ColumnSize 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the CompositeIdentifierSeparatorPattern column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 CompositeIdentifierSeparatorPattern 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary vsli:raw="Used by the GetSchema method to create the CreateFormat column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 CreateFormat 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary vsli:raw="Used by the GetSchema method to create the CreateParameters column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 CreateParameters 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductName column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 DataSourceProductName 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersion column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 DataSourceProductVersion 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersionNormalized column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 DataSourceProductVersionNormalized 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary vsli:raw="Used by the GetSchema method to create the DataType column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 DataType 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary vsli:raw="Used by the GetSchema method to create the GroupByBehavior column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 GroupByBehavior 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierCase column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 IdentifierCase 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierPattern column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 IdentifierPattern 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary vsli:raw="Used by the GetSchema method to create the IsAutoIncrementable column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsAutoIncrementable 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary vsli:raw="Used by the GetSchema method to create the IsBestMatch column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsBestMatch 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary vsli:raw="Used by the GetSchema method to create the IsCaseSensitive column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsCaseSensitive 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary vsli:raw="Used by the GetSchema method to create the IsConcurrencyType column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsConcurrencyType 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedLength column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsFixedLength 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedPrecisionScale column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsFixedPrecisionScale 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary vsli:raw="Used by the GetSchema method to create the IsLiteralSupported column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsLiteralSupported 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary vsli:raw="Used by the GetSchema method to create the IsLong column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsLong 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary vsli:raw="Used by the GetSchema method to create the IsNullable column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsNullable 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchable column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsSearchable 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchableWithLike column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsSearchableWithLike 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary vsli:raw="Used by the GetSchema method to create the IsUnsigned column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 IsUnsigned 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralPrefix column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 LiteralPrefix 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralSuffix column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 LiteralSuffix 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MaximumScale column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 MaximumScale 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MinimumScale column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 MinimumScale 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfIdentifierParts column in the MetaDataCollections collection.">由 GetSchema 方法用來建立 MetaDataCollections 集合中的 NumberOfIdentifierParts 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfRestrictions column in the MetaDataCollections collection.">由 GetSchema方法用來建立 MetaDataCollections 集合中的 NumberOfRestrictions 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary vsli:raw="Used by the GetSchema method to create the OrderByColumnsInSelect column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 OrderByColumnsInSelect 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerFormat column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 ParameterMarkerFormat 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerPattern column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 ParameterMarkerPattern 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNameMaxLength column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 ParameterNameMaxLength 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNamePattern column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation集合中的 ParameterNamePattern 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary vsli:raw="Used by the GetSchema method to create the ProviderDbType column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 ProviderDbType 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierCase column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 QuotedIdentifierCase 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierPattern column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 QuotedIdentifierPattern 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary vsli:raw="Used by the GetSchema method to create the ReservedWord column in the ReservedWords collection.">由 GetSchema 方法用來建立 ReservedWords 集合中的 ReservedWord 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StatementSeparatorPattern column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 StatementSeparatorPattern 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StringLiteralPattern column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 StringLiteralPattern 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary vsli:raw="Used by the GetSchema method to create the SupportedJoinOperators column in the DataSourceInformation collection.">由 GetSchema 方法用來建立 DataSourceInformation 集合中的 SupportedJoinOperators 資料行。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary vsli:raw="Used by the GetSchema method to create the TypeName column in the DataTypes collection.">由 GetSchema 方法用來建立 DataTypes 集合中的 TypeName 資料行。</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary vsli:raw="Represents a parameter to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; and optionally, its mapping to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column. For more information on parameters, see Configuring Parameters and Parameter Data Types.">表示 <see cref="T:System.Data.Common.DbCommand" /> 的參數及其對 <see cref="T:System.Data.DataSet" /> 資料行的對應 (選擇性)。 如需參數的詳細資訊，請參閱設定參數和參數資料類型。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbParameter" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">取得或設定參數的 <see cref="T:System.Data.DbType" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">其中一個 <see cref="T:System.Data.DbType" /> 值。 預設為 <see cref="F:System.Data.DbType.String" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">屬性未設為有效的 <see cref="T:System.Data.DbType" />。</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">取得或設定值，以表示參數是僅限輸入、僅限輸出、雙向 (Bidirectional) 或預存程序 (Stored Procedure) 傳回值參數。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">其中一個 <see cref="T:System.Data.ParameterDirection" /> 值。 預設為 <see langword="Input" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">屬性未設為其中一個有效的 <see cref="T:System.Data.ParameterDirection" /> 值。</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter accepts null values.">取得或設定值，這個值指出該參數是否接受 null 值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果接受 null 值，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">取得或設定 <see cref="T:System.Data.Common.DbParameter" /> 的名稱。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;. The default is an empty string (&quot;&quot;).">
        <see cref="T:System.Data.Common.DbParameter" /> 的名稱。 預設為空字串 ("")。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary vsli:raw="Gets or sets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">取得或設定用來表示 <see cref="P:System.Data.Common.DbParameter.Value" /> 屬性的最大位數。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">用來表示 <see cref="P:System.Data.Common.DbParameter.Value" /> 屬性的最大位數。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary vsli:raw="Resets the DbType property to its original settings.">將 DbType 屬性重設為其原始設定。</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary vsli:raw="Gets or sets the number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">取得或設定 <see cref="P:System.Data.Common.DbParameter.Value" /> 所解析的小數點位數。</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> 所解析的小數點位數。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, of the data within the column.">取得或設定資料行中資料的最大大小 (以位元組為單位)。</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">資料行中資料的最大大小 (以位元組為單位)。 預設值是由參數值推斷。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">取得或設定來源資料行的名稱，這個資料行對應至 <see cref="T:System.Data.DataSet" />，並用來載入或傳回 <see cref="P:System.Data.Common.DbParameter.Value" />。</summary>
      <returns vsli:raw="The name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">對應至 <see cref="T:System.Data.DataSet" /> 的來源資料行名稱。 預設為空字串。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary vsli:raw="Gets or sets a value which indicates whether the source column is nullable. This allows &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to correctly generate Update statements for nullable columns.">設定或取得值，這個值表示來源資料行是否可為 Null。 這可讓 <see cref="T:System.Data.Common.DbCommandBuilder" /> 正確產生可為 Null 的資料行的 Update 陳述式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source column is nullable; &lt;see langword=&quot;false&quot; /&gt; if it is not.">如果來源資料行可為 Null，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when you load &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">取得或設定載入 <see cref="T:System.Data.DataRowVersion" /> 時要使用的 <see cref="P:System.Data.Common.DbParameter.Value" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。 預設為 <see langword="Current" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">屬性未設為其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">表示數值參數的整數位數。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; property of a data provider &lt;see langword=&quot;Parameter&quot; /&gt; object. The default value is 0, which indicates that a data provider sets the precision for &lt;see langword=&quot;Value&quot; /&gt;.">用來表示資料提供者 <see langword="Parameter" /> 物件的 <see langword="Value" /> 屬性的最大位數。 預設值是 0，表示資料提供者會設定 <see langword="Value" /> 的整數位數。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Data.IDbDataParameter.Scale&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Data.IDbDataParameter.Scale" />。</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">
        <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> 所解析的小數點位數。 預設值為 0。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">取得或設定參數的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">
        <see cref="T:System.Object" />，為參數的值。 預設值為 null。</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary vsli:raw="The base class for a collection of parameters relevant to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommand" /> 相關參數集合的基底類別。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbParameterCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">將指定的 <see cref="T:System.Data.Common.DbParameter" /> 物件加入至 <see cref="T:System.Data.Common.DbParameterCollection" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">要加入集合之 <see cref="T:System.Data.Common.DbParameter" /> 的 <see cref="P:System.Data.Common.DbParameter.Value" />。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">
        <see cref="T:System.Data.Common.DbParameter" /> 物件在集合中的索引。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary vsli:raw="Adds an array of items with the specified values to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">將具有指定值的項目陣列加入 <see cref="T:System.Data.Common.DbParameterCollection" />。</summary>
      <param name="values" vsli:raw="An array of values of type &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">要加入集合之 <see cref="T:System.Data.Common.DbParameter" /> 類型的值陣列。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; values from the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">從 <see cref="T:System.Data.Common.DbParameterCollection" /> 中移除所有 <see cref="T:System.Data.Common.DbParameter" /> 值。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is contained in the collection.">指出集合中是否包含具有指定 <see cref="P:System.Data.Common.DbParameter.Value" /> 的 <see cref="T:System.Data.Common.DbParameter" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">要在集合中尋找之 <see cref="T:System.Data.Common.DbParameter" /> 的 <see cref="P:System.Data.Common.DbParameter.Value" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果集合中有 <see cref="T:System.Data.Common.DbParameter" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name exists in the collection.">指出集合中是否存在具有指定名稱的 <see cref="T:System.Data.Common.DbParameter" />。</summary>
      <param name="value" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">要在集合中尋找的 <see cref="T:System.Data.Common.DbParameter" /> 名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果集合中有 <see cref="T:System.Data.Common.DbParameter" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies an array of items to the collection starting at the specified index.">從指定索引處開始，將項目的陣列複製到集合。</summary>
      <param name="array" vsli:raw="The array of items to copy to the collection.">要複製至集合的項目陣列。</param>
      <param name="index" vsli:raw="The index in the collection to copy the items.">要複製項目之集合中的索引。</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary vsli:raw="Specifies the number of items in the collection.">指定集合中的項目數目。</summary>
      <returns vsli:raw="The number of items in the collection.">集合中的項目數目</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">公開 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法，該方法支援由 .NET Framework 資料提供者對集合執行簡單的反覆查看。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">傳回位於此集合指定索引處的 <see cref="T:System.Data.Common.DbParameter" /> 物件。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">此集合中之 <see cref="T:System.Data.Common.DbParameter" /> 的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">位於此集合指定索引處的 <see cref="T:System.Data.Common.DbParameter" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">傳回具有指定名稱的 <see cref="T:System.Data.Common.DbParameter" /> 物件。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">此集合中的 <see cref="T:System.Data.Common.DbParameter" /> 名稱。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">
        <see cref="T:System.Data.Common.DbParameter" />，具有指定名稱的物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary vsli:raw="Returns the index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">傳回 <see cref="T:System.Data.Common.DbParameter" /> 物件指定之索引。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">集合裡的 <see cref="T:System.Data.Common.DbParameter" /> 物件。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">指定的 <see cref="T:System.Data.Common.DbParameter" /> 物件索引。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Returns the index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">傳回具有指定名稱的 <see cref="T:System.Data.Common.DbParameter" /> 物件之索引。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">集合中的 <see cref="T:System.Data.Common.DbParameter" /> 物件名稱。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">具有指定名稱的 <see cref="T:System.Data.Common.DbParameter" /> 物件之索引。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts the specified index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name into the collection at the specified index.">將具有指定名稱的 <see cref="T:System.Data.Common.DbParameter" /> 物件指定索引插入位於指定索引的集合中。</summary>
      <param name="index" vsli:raw="The index at which to insert the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">要插入 <see cref="T:System.Data.Common.DbParameter" /> 物件的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to insert into the collection.">要插入集合的 <see cref="T:System.Data.Common.DbParameter" /> 物件。</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary vsli:raw="Specifies whether the collection is a fixed size.">指定此集合是否為固定大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果集合為固定大小則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary vsli:raw="Specifies whether the collection is read-only.">指定此集合是否為唯讀。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果此集合是唯讀，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary vsli:raw="Specifies whether the collection is synchronized.">指定是否同步處理集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果集合已同步處理則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">取得或設定在指定索引處的 <see cref="T:System.Data.Common.DbParameter" />。</summary>
      <param name="index" vsli:raw="The zero-based index of the parameter.">參數之以零為起始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">指定索引處的 <see cref="T:System.Data.Common.DbParameter" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">指定的索引不存在。</exception>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">取得或設定具有指定之名稱的 <see cref="T:System.Data.Common.DbParameter" />。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">參數名稱。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">具有指定名稱的 <see cref="T:System.Data.Common.DbParameter" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">指定的索引不存在。</exception>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object from the collection.">從集合中移除指定的 <see cref="T:System.Data.Common.DbParameter" /> 物件。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.Common.DbParameter" /> 物件。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified from the collection.">從集合中的指定位置移除 <see cref="T:System.Data.Common.DbParameter" /> 物件。</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">
        <see cref="T:System.Data.Common.DbParameter" /> 物件所在的索引。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name from the collection.">從集合中移除具有指定名稱的 <see cref="T:System.Data.Common.DbParameter" /> 物件。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.Common.DbParameter" /> 物件名稱。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index to a new value.">將指定索引處的 <see cref="T:System.Data.Common.DbParameter" /> 物件設定為新值。</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">
        <see cref="T:System.Data.Common.DbParameter" /> 物件所在的索引。</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">新的 <see cref="T:System.Data.Common.DbParameter" /> 值。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name to a new value.">將具有指定名稱的 <see cref="T:System.Data.Common.DbParameter" /> 物件設定為新值。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">集合中的 <see cref="T:System.Data.Common.DbParameter" /> 物件名稱。</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">新的 <see cref="T:System.Data.Common.DbParameter" /> 值。</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the collection.">指定要用來同步存取此集合的 <see cref="T:System.Object" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">用來同步處理存取 <see cref="T:System.Data.Common.DbParameterCollection" /> 的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">在指定的索引位置上取得或設定項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">要取得或設定之以零為起始的項目索引。</param>
      <returns vsli:raw="The element at the specified index.">在指定索引上的項目。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">在指定索引位置上取得或設定參數。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">要擷取的參數名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">位於指定索引位置上的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary vsli:raw="Represents a set of static methods for creating one or more instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; classes.">表示用於建立 <see cref="T:System.Data.Common.DbProviderFactory" /> 類別 (Class) 之一個或多個執行個體的一組靜態方法。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">傳回 <see cref="T:System.Data.Common.DbProviderFactory" /> 的執行個體。</summary>
      <param name="connection" vsli:raw="The connection used.">已使用的連接。</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified connection.">指定連接之 <see cref="T:System.Data.Common.DbProviderFactory" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">傳回 <see cref="T:System.Data.Common.DbProviderFactory" /> 的執行個體。</summary>
      <param name="providerRow" vsli:raw="&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; containing the provider's configuration information.">
        <see cref="T:System.Data.DataRow" />，包含提供者 (Provider) 的組態資訊。</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定之 <see cref="T:System.Data.Common.DbProviderFactory" /> 的 <see cref="T:System.Data.DataRow" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">傳回 <see cref="T:System.Data.Common.DbProviderFactory" /> 的執行個體。</summary>
      <param name="providerInvariantName" vsli:raw="Invariant name of a provider.">提供者的非變異名稱。</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified provider name.">指定之提供者名稱的 <see cref="T:System.Data.Common.DbProviderFactory" /> 執行個體。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains information about all installed providers that implement &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">傳回 <see cref="T:System.Data.DataTable" />，包含所有實作 <see cref="T:System.Data.Common.DbProviderFactory" /> 之已安裝提供者的相關資訊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain the following data:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Column ordinal&lt;/term&gt;&lt;description&gt; Column name&lt;/description&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;description&gt; Human-readable name for the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;description&gt; Human-readable description of the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 2&lt;/term&gt;&lt;description&gt; InvariantName&lt;/description&gt;&lt;description&gt; Name that can be used programmatically to refer to the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 3&lt;/term&gt;&lt;description&gt; AssemblyQualifiedName&lt;/description&gt;&lt;description&gt; Fully qualified name of the factory class, which contains enough information to instantiate the object.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see cref="T:System.Data.DataTable" /> 包含含有下列資料的 <see cref="T:System.Data.DataRow" /> 物件： 
  資料行序數 
  資料行名稱 
  說明 
  0 
  名稱  
  資料提供者 (Data Provider) 之人們可讀取的名稱。  
  1 
  說明  
  資料提供者之人們可讀取的描述。  
  2 
  InvariantName  
  名稱，可用於以程式的方式參考資料提供者。  
  3 
  AssemblyQualifiedName  
  Factory 類別的完整名稱，包含執行個體化物件的足夠資訊。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames" />
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider." />
      <param name="factory" vsli:raw="The instance of the provider factory to be registered." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider." />
      <param name="factoryTypeAssemblyQualifiedName" vsli:raw="The assembly-qualified name for a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider." />
      <param name="providerFactoryClass" vsli:raw="The type representing a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name to look up." />
      <param name="factory" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; associated with the specified invariant provider name, if the name is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized." />
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <param name="providerInvariantName" vsli:raw="The invariant provider name of the registration to remove." />
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary vsli:raw="Represents a set of methods for creating instances of a provider's implementation of the data source classes.">表示用於建立資料來源類別 (class) 之提供者 (Provider) 實作 (Implementation) 執行個體的一組方法。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbProviderFactory" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">取得值，指出這個 <see cref="T:System.Data.Common.DbProviderFactory" /> 執行個體是否支援 <see cref="T:System.Data.Common.DbCommandBuilder" /> 類別。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果這個實例支援<see cref="T:System.Data.Common.DbCommandBuilder" />類別, 則為, <see langword="false" />否則為。</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">取得值，指出這個 <see cref="T:System.Data.Common.DbProviderFactory" /> 執行個體是否支援 <see cref="T:System.Data.Common.DbDataAdapter" /> 類別。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果實例支援<see cref="T:System.Data.Common.DbDataAdapter" />類別, 則為, <see langword="false" />否則為。</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">取得值，指出這個 <see cref="T:System.Data.Common.DbProviderFactory" /> 執行個體是否支援 <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 類別。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果實例支援<see cref="T:System.Data.Common.DbDataSourceEnumerator" />類別, 則為, <see langword="false" />否則為。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; class.">傳回提供者類別的新執行個體，該執行個體會實作 <see cref="T:System.Data.Common.DbCommand" /> 類別。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommand" /> 的新執行個體。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">傳回提供者類別的新執行個體，該執行個體會實作 <see cref="T:System.Data.Common.DbCommandBuilder" /> 類別。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> 的新執行個體。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">傳回提供者類別的新執行個體，該執行個體會實作 <see cref="T:System.Data.Common.DbConnection" /> 類別。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnection" /> 的新執行個體。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">傳回提供者類別的新執行個體，該執行個體會實作 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 類別。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的新執行個體。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">傳回提供者類別的新執行個體，該執行個體會實作 <see cref="T:System.Data.Common.DbDataAdapter" /> 類別。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> 的新執行個體。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">傳回提供者類別的新執行個體，該執行個體會實作 <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 類別。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 的新執行個體。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">傳回提供者類別的新執行個體，該執行個體會實作 <see cref="T:System.Data.Common.DbParameter" /> 類別。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameter" /> 的新執行個體。</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary vsli:raw="Identifies which provider-specific property in the strongly typed parameter classes is to be used when setting a provider-specific type.">設定特定提供者型別時，識別要使用強型別 (Strongly Typed) 參數類別 (Class) 中的哪個特定提供者屬性。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderSpecificTypePropertyAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" /> 類別的新執行個體。</summary>
      <param name="isProviderSpecificTypeProperty" vsli:raw="Specifies whether this property is a provider-specific property.">指定這個屬性是否為特定提供者屬性。</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary vsli:raw="Indicates whether the attributed property is a provider-specific type.">指出使用屬性 (Attribute) 的屬性 (Property) 是否為提供者特定的型別。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property that this attribute is applied to is a provider-specific type property; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果這個屬性 (Attribute) 套用到的屬性 (Property) 為提供者特定的型別屬性 (Property)，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary vsli:raw="Defines the core behavior of database transactions and provides a base class for database-specific transactions.">定義資料庫交易的核心行為，並為資料庫相關交易提供基底類別。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; object.">初始化新的 <see cref="T:System.Data.Common.DbTransaction" /> 物件。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary vsli:raw="When overridden in a derived class, commits the database transaction.">當覆寫衍生類別時，認可資料庫交易。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously commits the database transaction.">非同步地認可資料庫交易。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">取消非同步作業的語彙基元。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">代表非同步作業的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">指定與交易關聯的 <see cref="T:System.Data.Common.DbConnection" /> 物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">與交易相關聯的 <see cref="T:System.Data.Common.DbConnection" /> 物件。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">當覆寫衍生類別時，取得交易相關聯的 <see cref="T:System.Data.Common.DbConnection" /> 物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">與交易相關聯的 <see cref="T:System.Data.Common.DbConnection" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt;.">釋放由 <see cref="T:System.Data.Common.DbTransaction" /> 使用的 Unmanaged 資源。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Data.Common.DbTransaction" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, this method releases all resources held by any managed objects that this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; references.">如果為 <see langword="true" />，則這個方法會釋放這個 <see cref="T:System.Data.Common.DbTransaction" /> 參考之任何 Managed 物件所持有的所有資源。</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the transaction object.">非同步地處置交易物件。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">代表非同步作業的 <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary vsli:raw="When overridden in a derived class, gets the isolation level for this transaction.">當覆寫衍生類別時，取得此交易的隔離等級。</summary>
      <returns vsli:raw="The isolation level for this transaction.">此交易的隔離等級。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary vsli:raw="When overridden in a derived class, rolls back a transaction from a pending state.">當覆寫衍生類別時，復原暫止狀態的交易。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously rolls back a transaction from a pending state.">非同步地復原暫止狀態的交易。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">取消非同步作業的語彙基元。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示非同步作業的工作。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction, or a null reference if the transaction is no longer valid.">取得與交易相關聯的 <see cref="T:System.Data.Common.DbConnection" /> 物件，如果交易已不再有效，則為 Null 參考。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">與交易相關聯的 <see cref="T:System.Data.Common.DbConnection" /> 物件。</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary vsli:raw="Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select-list of a SELECT statement.">指定 GROUP BY 子句中的資料行與 SELECT 陳述式 (Statement) 之 SELECT 清單中非彙總 (Non-aggregated) 資料行之間的關聯性 (Relationship)。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and must not contain other columns not in the select list.">GROUP BY 子句必須包含 SELECT 清單中的所有非彙總資料行，且不可以包含其他不在 SELECT 清單中的資料行。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and can contain other columns not in the select list.">GROUP BY 子句必須包含 SELECT 清單中的所有非彙總資料行，且可以包含其他不在 SELECT 清單中的資料行。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary vsli:raw="The GROUP BY clause is not supported.">不支援 GROUP BY 子句。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary vsli:raw="The support for the GROUP BY clause is unknown.">是否支援 GROUP BY 子句是未知的。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary vsli:raw="There is no relationship between the columns in the GROUP BY clause and the nonaggregated columns in the SELECT list. You may group by any column.">GROUP BY 子句中的資料行與 SELECT 清單中的非彙總資料行之間的沒有關聯性。 您可以依任何資料行進行分組。</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary vsli:raw="Generates a column schema.">產生資料行結構描述。</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">取得資料行結構描述 (<see cref="T:System.Data.Common.DbColumn" /> 集合)。</summary>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">資料行結構描述 (<see cref="T:System.Data.Common.DbColumn" /> 集合)。</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary vsli:raw="Specifies how identifiers are treated by the data source when searching the system catalog.">指定在搜尋系統資料庫目錄 (Catalog) 時，資料來源如何處理識別項。</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary vsli:raw="The data source ignores identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will match.">資料來源在搜尋系統資料庫目錄時會忽略識別項的大小寫。 識別項 "ab" 與 "AB" 會符合。</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary vsli:raw="The data source distinguishes identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will not match.">資料來源在搜尋系統資料庫目錄時會區分識別項的大小寫。 識別項 "ab" 與 "AB" 不符合。</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary vsli:raw="The data source has ambiguous rules regarding identifier case and cannot discern this information.">資料來源對識別項大小寫的規則 (Rule) 模稜兩可，無法獲取此資訊。</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">為 .NET Framework 資料提供者 (Data Provider) 的 <see langword="RowUpdated" /> 事件提供資料。</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 類別的新執行個體。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">透過 <see cref="T:System.Data.DataRow" /> 傳送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">當呼叫 <see cref="T:System.Data.IDbCommand" /> 時執行的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="The type of SQL statement executed.">已執行的 SQL 陳述式型別。</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">透過 <see cref="T:System.Data.Common.DataTableMapping" /> 傳送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">呼叫 <see cref="T:System.Data.IDbCommand" /> 時，會使得 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 執行。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">當呼叫 <see cref="T:System.Data.IDbCommand" /> 時執行的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">複製已修改之列的參考至所提供的陣列中。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">要複製至其中之 <see cref="T:System.Data.DataRow" /> 的陣列。</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">複製已修改之列的參考至所提供的陣列中。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">要複製至其中之 <see cref="T:System.Data.DataRow" /> 的陣列。</param>
      <param name="arrayIndex" vsli:raw="The index in the array to start copying into.">陣列中的索引，要開始複製至其中。</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">取得執行 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> 時由 .NET Framework 資料提供者產生的任何錯誤。</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">錯誤，在執行 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> 時由 .NET Framework 資料提供者產生。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">取得因執行 SQL 陳述式所變更、插入或刪除的資料列數目。</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">已變更、插入或刪除的資料列數目；如果沒有任何資料列受到影響或陳述式失敗，則為 0；如果是 SELECT 陳述式，則為 -1。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">取得經由 <see cref="T:System.Data.DataRow" /> 所傳送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">透過 <see cref="T:System.Data.DataRow" /> 傳送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary vsli:raw="Gets the number of rows processed in a batch of updated records.">取得在已更新記錄的批次中處理的列數。</summary>
      <returns vsli:raw="&lt;see langword=&quot;int&quot; /&gt; that specifies the number of row processed.">
        <see langword="int" />，指定已處理列的數目。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement executed.">取得已執行的 SQL 陳述式型別。</summary>
      <returns vsli:raw="The type of SQL statement executed.">已執行的 SQL 陳述式型別。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">取得 <see cref="T:System.Data.UpdateStatus" /> 的 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">其中一個 <see cref="T:System.Data.UpdateStatus" /> 值。 預設為 <see langword="Continue" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">取得經由 <see cref="T:System.Data.Common.DataTableMapping" /> 所傳送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">透過 <see cref="T:System.Data.Common.DataTableMapping" /> 傳送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary vsli:raw="Provides the data for the RowUpdating event of a .NET data provider.">為 .NET Framework Data Provider 的 RowUpdating 事件提供資料。</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 類別的新執行個體。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">要在呼叫 <see cref="T:System.Data.IDbCommand" /> 時執行的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="The type of SQL statement to execute.">要執行的 SQL 陳述式型別。</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要經由 <see cref="T:System.Data.Common.DataTableMapping" /> 傳送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; object for an instance of this class.">取得或設定這個類別之執行個體的 <see cref="T:System.Data.IDbCommand" /> 物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要在 <see cref="T:System.Data.IDbCommand" /> 期間執行的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; operation.">取得要在 <see cref="T:System.Data.IDbCommand" /> 作業期間執行的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要在 <see cref="T:System.Data.IDbCommand" /> 期間執行的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">取得 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> 執行時由 .NET Framework 資料提供者產生的任何錯誤。</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">錯誤，在 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> 執行時由 .NET Framework 資料提供者產生。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that will be sent to the server as part of an insert, update, or delete operation.">取得 <see cref="T:System.Data.DataRow" />，將做為插入、更新或刪除作業的一部分傳送到伺服器。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要經由 <see cref="T:System.Data.DataRow" /> 傳送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement to execute.">取得要執行的 SQL 陳述式型別。</summary>
      <returns vsli:raw="The type of SQL statement to execute.">要執行的 SQL 陳述式型別。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">取得或設定 <see cref="T:System.Data.UpdateStatus" /> 屬性的 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">其中一個 <see cref="T:System.Data.UpdateStatus" /> 值。 預設為 <see langword="Continue" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">取得要經由 <see cref="T:System.Data.Common.DataTableMapping" /> 傳送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要經由 <see cref="T:System.Data.Common.DataTableMapping" /> 傳送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary vsli:raw="Describes the column metadata of the schema for a database table.">描述資料庫資料表之結構描述的資料行中繼資料 (Metadata)。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary vsli:raw="Specifies whether value &lt;see langword=&quot;DBNull&quot; /&gt; is allowed.">指定是否允許值 <see langword="DBNull" />。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">指定結構描述資料表中資料行的名稱。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary vsli:raw="Specifies the name of the schema in the schema table.">指定結構描述資料表中結構描述的名稱。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary vsli:raw="Specifies the name of the table in the schema table.">指定結構描述資料表中資料表的名稱。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">指定結構描述資料表中資料行的名稱。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary vsli:raw="Specifies the ordinal of the column.">指定資料行的序數。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary vsli:raw="Specifies the size of the column.">指定資料行的大小。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary vsli:raw="Specifies the type of data in the column.">指定資料行中的資料型別。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary vsli:raw="Specifies whether this column is aliased.">指定這個資料行是否已產生別名。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary vsli:raw="Specifies whether this column is an expression.">指定這個資料行是否為運算式。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary vsli:raw="Specifies whether this column is a key for the table.">指定這個資料行是否為資料表的索引鍵。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary vsli:raw="Specifies whether this column contains long data.">指定這個資料行是否包含 LONG 資料。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary vsli:raw="Specifies whether a unique constraint applies to this column.">指定唯一的條件約束 (Unique Constraint) 是否套用至這個資料行。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary vsli:raw="Specifies the non-versioned provider-specific data type of the column.">指定資料行的沒有建立版本的提供者特定資料型別。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary vsli:raw="Specifies the precision of the column data, if the data is numeric.">指定資料行資料的精確度 (如果資料為數值)。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary vsli:raw="Specifies the scale of the column data, if the data is numeric.">指定資料行資料的小數點位數 (如果資料為數值)。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">指定資料行的提供者特定資料型別。</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary vsli:raw="Describes optional column metadata of the schema for a database table.">描述資料庫資料表之結構描述的選擇性資料行中繼資料 (Metadata)。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary vsli:raw="Specifies the value at which the series for new identity columns is assigned.">指定會指派新識別資料行系列的值。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary vsli:raw="Specifies the increment between values in the identity column.">指定識別資料行中各個值之間的遞增。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary vsli:raw="The name of the catalog associated with the results of the latest query.">與最新查詢結果相關聯的資料庫目錄 (Catalog) 名稱。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary vsli:raw="The namespace of the column.">資料行的命名空間。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary vsli:raw="The server name of the column.">資料行的伺服器名稱。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary vsli:raw="The namespace for the table that contains the column.">包含資料行之資料表的命名空間。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary vsli:raw="Specifies the mapping for the column.">指定資料行的對應。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary vsli:raw="The default value for the column.">資料行的預設值。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary vsli:raw="The expression used to compute the column.">用於計算資料行的運算式。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary vsli:raw="Specifies whether the column values in the column are automatically incremented.">指定資料行中的資料行值是否會自動遞增。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary vsli:raw="Specifies whether this column is hidden.">指定這個資料行是否已隱藏。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary vsli:raw="Specifies whether this column is read-only.">指定這個資料行是否為唯讀。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary vsli:raw="Specifies whether this column contains row version information.">指定這個資料行是否包含資料列版本資訊。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">指定資料行的提供者特定資料型別。</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary vsli:raw="Specifies what types of Transact-SQL join statements are supported by the data source.">指定資料來源支援之 Transact-SQL join 陳述式的型別。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary vsli:raw="The data source supports full outer joins.">資料來源支援完整外部聯結 (Full Outer Join)。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary vsli:raw="The data source supports inner joins.">資料來源支援內部聯結 (Inner Join)。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary vsli:raw="The data source supports left outer joins.">資料來源支援左外部聯結 (Left Outer Join)。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary vsli:raw="The data source does not support join queries.">資料來源不支援聯結查詢。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary vsli:raw="The data source supports right outer joins.">資料來源支援右外部聯結 (Right Outer Join)。</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary vsli:raw="Specifies how conflicting changes to the data source will be detected and resolved.">指定資料來源的變更衝突將如何偵測及解決。</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary vsli:raw="Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying &lt;see langword=&quot;CompareAllValuesUpdate&quot; /&gt; | &lt;see langword=&quot;CompareAllValuesDelete&quot; /&gt;.">更新及刪除陳述式將包括 WHERE 子句的資料表中所有可搜尋的資料行。 這相當於指定 <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />。</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary vsli:raw="If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying &lt;see langword=&quot;CompareRowVersionUpdate&quot; /&gt; | &lt;see langword=&quot;CompareRowVersionDelete&quot; /&gt;.">如果資料表中有任何時間戳記資料行，它們是用在所有已產生之更新陳述式的 WHERE 子句中。 這相當於指定 <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />。</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary vsli:raw="All update and delete statements include only &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; columns in the WHERE clause. If no &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; is defined, all searchable columns are included in the WHERE clause. This is equivalent to &lt;see langword=&quot;OverwriteChangesUpdate&quot; /&gt; | &lt;see langword=&quot;OverwriteChangesDelete&quot; /&gt;.">所有更新和刪除陳述式在 WHERE 子句中都只包含 <see cref="P:System.Data.DataTable.PrimaryKey" /> 資料行。 如果沒有定義 <see cref="P:System.Data.DataTable.PrimaryKey" />，則將可搜尋的資料行包含在 WHERE 子句中。 這相當於 <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />。</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary vsli:raw="Describes the current state of the connection to a data source.">描述連接至資料來源的目前狀態。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary vsli:raw="The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.)">與資料來源的連接。 這只會發生在連接已經開啟之後。 這個狀態下的連接可能會先關閉再重新開啟 (這個值已保留供後續版本使用)。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary vsli:raw="The connection is closed.">連接關閉。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary vsli:raw="The connection object is connecting to the data source.">連接物件正連接至資料來源</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary vsli:raw="The connection object is executing a command. (This value is reserved for future versions of the product.)">物件正在執行命令 (這個值已保留供後續版本使用)。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary vsli:raw="The connection object is retrieving data. (This value is reserved for future versions of the product.)">連接物件正在擷取資料 (這個值已保留供後續版本使用)。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary vsli:raw="The connection is open.">連接開啟。</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary vsli:raw="Represents a constraint that can be enforced on one or more &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">表示可以在一或多個 <see cref="T:System.Data.DataColumn" /> 物件上強制使用的條件約束。</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">取得這個條件約束所屬的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the constraint belongs.">條件約束所屬的 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">取得這個條件約束所屬的 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary vsli:raw="The name of a constraint in the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt;.">
        <see cref="T:System.Data.ConstraintCollection" /> 中的條件約束名稱。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">
        <see cref="T:System.Data.Constraint" /> 的名稱。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; name is a null value or empty string.">
        <see cref="T:System.Data.Constraint" /> 名稱為 null 值或空字串。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; already contains a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the same name (The comparison is not case-sensitive.).">
        <see cref="T:System.Data.ConstraintCollection" /> 已經包含具有相同名稱的 <see cref="T:System.Data.Constraint" /> (該比較不區分大小寫)。</exception>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary vsli:raw="Gets the collection of user-defined constraint properties.">取得使用者定義條件約束屬性的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">自訂資訊的 <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary vsli:raw="Sets the constraint's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">設定條件約束的 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint will belong.">這個條件約束將歸屬的 <see cref="T:System.Data.DataSet" />。</param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">取得條件約束套用至的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">條件約束套用至的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;, if there is one, as a string.">取得 <see cref="P:System.Data.Constraint.ConstraintName" /> (如果有) 做為字串。</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;.">
        <see cref="P:System.Data.Constraint.ConstraintName" /> 的字串值。</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary vsli:raw="Represents a collection of constraints for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示為 <see cref="T:System.Data.DataTable" /> 的條件約束 (Constraint) 集合。</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object to the collection.">將指定的 <see cref="T:System.Data.Constraint" /> 物件加入至集合。</summary>
      <param name="constraint" vsli:raw="The &lt;see langword=&quot;Constraint&quot; /&gt; to add.">要加入的 <see langword="Constraint" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is null.">
        <paramref name="constraint" /> 引數為 null。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection, or belongs to another collection.">條件約束已經屬於此集合，或屬於另一個集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the same name. (The comparison is not case-sensitive.)">集合已經有相同名稱的條件約束。 (這項比較不會區分大小寫。)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, and value that indicates whether the column is a primary key, and adds it to the collection.">使用指定的名稱、<see cref="T:System.Data.UniqueConstraint" /> 和表示資料行是否為主索引鍵的值，來建構新的 <see cref="T:System.Data.DataColumn" />，並將它加入至集合中。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">
        <see langword="UniqueConstraint" /> 的名稱。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to which the constraint applies.">條件約束套用至的 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">指定資料行是否應為主索引鍵。 如果是 <see langword="true" />，表示資料行將會是主索引鍵資料行。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">新的 <see langword="UniqueConstraint" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">條件約束已屬於這個集合。  
 -或者-  
 條件約束屬於另一個集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">集合已經有指定名稱的條件約束 (這項比較不會區分大小寫。)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; with the specified name, parent column, and child column, and adds the constraint to the collection.">使用指定的名稱、父資料行和子資料行建構新的 <see cref="T:System.Data.ForeignKeyConstraint" />，並將條件約束加入至集合。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> 的名稱。</param>
      <param name="primaryKeyColumn" vsli:raw="The primary key, or parent, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">主索引鍵，或父 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="foreignKeyColumn" vsli:raw="The foreign key, or child, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">外部索引鍵，或子 <see cref="T:System.Data.DataColumn" />。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">新的 <see langword="ForeignKeyConstraint" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether the column is a primary key, and adds it to the collection.">使用指定的名稱、<see cref="T:System.Data.UniqueConstraint" /> 物件的陣列，以及表示資料行是否為主索引鍵的值，來建構新的 <see cref="T:System.Data.DataColumn" />，並將它加入至集合中。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt;.">
        <see cref="T:System.Data.UniqueConstraint" /> 的名稱。</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to which the constraint applies.">條件約束套用至的 <see cref="T:System.Data.DataColumn" /> 物件的陣列。</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">指定資料行是否應為主索引鍵。 如果是 <see langword="true" />，表示資料行將會是主索引鍵資料行。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">新的 <see langword="UniqueConstraint" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">條件約束已屬於這個集合。  
 -或者-  
 條件約束屬於另一個集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">集合已經有指定名稱的條件約束 (這項比較不會區分大小寫。)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.">使用父資料行和子資料行的指定陣列，建構新的 <see cref="T:System.Data.ForeignKeyConstraint" />，並將條件約束加入至集合。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> 的名稱。</param>
      <param name="primaryKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the primary key, or parent, columns.">
        <see cref="T:System.Data.DataColumn" /> 物件 (為主索引鍵或父資料行) 的陣列。</param>
      <param name="foreignKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the foreign key, or child, columns.">
        <see cref="T:System.Data.DataColumn" /> 物件 (為外部索引鍵或子資料行) 的陣列。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">新的 <see langword="ForeignKeyConstraint" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; array to the end of the collection.">將指定的 <see cref="T:System.Data.ConstraintCollection" /> 陣列元素複製到集合的末端。</summary>
      <param name="constraints" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; objects to add to the collection.">要加入至集合中之 <see cref="T:System.Data.ConstraintCollection" /> 物件的陣列。</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed.">指示是否能移除 <see cref="T:System.Data.Constraint" />。</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to be tested for removal from the collection.">針對從集合移除以測試的 <see cref="T:System.Data.Constraint" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed from collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以從集合中移除 <see cref="T:System.Data.Constraint" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary vsli:raw="Clears the collection of any &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects.">清除任何 <see cref="T:System.Data.Constraint" /> 物件的集合。</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary vsli:raw="Occurs whenever the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects being added or removed.">由於正在加入或移除 <see cref="T:System.Data.ConstraintCollection" /> 物件而導致 <see cref="T:System.Data.Constraint" /> 變更時，就會發生此情況。</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name exists in the collection.">指示依名稱所指定的 <see cref="T:System.Data.Constraint" /> 物件是否存在於集合中。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint.">條件約束的 <see cref="P:System.Data.Constraint.ConstraintName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified constraint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含指定的條件約束，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">將集合物件複製到指定索引開頭的一維 <see cref="T:System.Array" /> 執行個體。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">一維 <see cref="T:System.Array" />，是從集合複製之值的目的端。</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">要開始插入的陣列索引。</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">取得指定 <see cref="T:System.Data.Constraint" /> 的索引。</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to search for.">要搜尋的 <see cref="T:System.Data.Constraint" />。</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">
        <see cref="T:System.Data.Constraint" /> 之以零起始的索引 (如果位於集合中)，否則為 -1。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; specified by name.">取得根據名稱所指定的 <see cref="T:System.Data.Constraint" /> 之索引。</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">
        <see cref="T:System.Data.Constraint" /> 的名稱。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">
        <see cref="T:System.Data.Constraint" /> 的索引 (如果位於集合中)，否則為 -1。</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection at the specified index.">從集合的指定索引處取得 <see cref="T:System.Data.Constraint" />。</summary>
      <param name="index" vsli:raw="The index of the constraint to return.">要傳回之條件約束的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; at the specified index.">指定索引處的 <see cref="T:System.Data.Constraint" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">索引值大於集合中項目的數目。</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection with the specified name.">以指定名稱從集合取得 <see cref="T:System.Data.Constraint" />。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint to return.">要傳回之條件約束的 <see cref="P:System.Data.Constraint.ConstraintName" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the specified name; otherwise a null value if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; does not exist.">具有指定名稱的 <see cref="T:System.Data.Constraint" />，否則為 Null 值 (如果 <see cref="T:System.Data.Constraint" /> 不存在)。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection.">從集合移除指定的 <see cref="T:System.Data.Constraint" />。</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.Constraint" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="constraint" /> 引數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint does not belong to the collection.">條件約束不屬於集合。</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name from the collection.">從集合中移除名稱所指定的 <see cref="T:System.Data.Constraint" /> 物件。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.Constraint" /> 名稱。</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object at the specified index from the collection.">從集合移除指定之索引處的 <see cref="T:System.Data.Constraint" /> 物件。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.Constraint" /> 的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a constraint at this index.">集合在這個索引處沒有條件約束。</exception>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when attempting an action that violates a constraint.">代表嘗試進行違反條件約束的動作時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class. This is the parameterless constructor.">初始化 <see cref="T:System.Data.ConstraintException" /> 類別的新執行個體。 這是無參數建構函式。</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified serialization and stream context.">使用指定序列化 (Serialization) 和資料流內容來初始化 <see cref="T:System.Data.ConstraintException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">序列化或還原序列化物件所需的資料。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">來源的描述和指定的序列化資料流的目的端。</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.ConstraintException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified string and inner exception.">使用指定的字串和內部例外狀況，初始化 <see cref="T:System.Data.ConstraintException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
      <param name="innerException" vsli:raw="Gets the &lt;see langword=&quot;Exception&quot; /&gt; instance that caused the current exception.">取得造成目前例外狀況的 <see langword="Exception" /> 執行個體。</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary vsli:raw="Represents the schema of a column in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示 <see cref="T:System.Data.DataTable" /> 中資料行的結構描述。</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class as type string.">初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體 (Instance) 為型別字串。</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class, as type string, using the specified column name.">使用指定的資料行名稱，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體為類型字串。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">字串，表示要建立的資料行名稱。 如果設定為 <see langword="null" /> 或空字串 ("")，則在加入資料行集合時將指定預設名稱。</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified column name and data type.">使用指定的資料行名稱和資料類型，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">字串，表示要建立的資料行名稱。 如果設定為 <see langword="null" /> 或空字串 ("")，則在加入資料行集合時將指定預設名稱。</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">支援的 <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">未指定任何的 <paramref name="dataType" />。</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, and expression.">使用指定的名稱、資料型別和運算式，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">字串，表示要建立的資料行名稱。 如果設定為 <see langword="null" /> 或空字串 ("")，則在加入資料行集合時將指定預設名稱。</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">支援的 <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">用來建立資料行的運算式。 如需詳細資訊，請參閱 <see cref="P:System.Data.DataColumn.Expression" /> 屬性 (Property)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">未指定任何的 <paramref name="dataType" />。</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, expression, and value that determines whether the column is an attribute.">使用指定名稱、資料型別、運算式和判斷資料行是否是屬性 (Attribute) 的值，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">字串，表示要建立的資料行名稱。 如果設定為 <see langword="null" /> 或空字串 ("")，則在加入資料行集合時將指定預設名稱。</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">支援的 <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">用來建立資料行的運算式。 如需詳細資訊，請參閱 <see cref="P:System.Data.DataColumn.Expression" /> 屬性 (Property)。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MappingType" /> 值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">未指定任何的 <paramref name="dataType" />。</exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary vsli:raw="Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.">取得或設定值，指出對於屬於資料表的資料列而言，這個資料行中是否允許 Null 值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />如果允許 null 值, 則為,否則為<see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary vsli:raw="Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.">取得或設定值，指出對於加入至資料表的新資料列而言，該資料行是否自動遞增資料行的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the column increments automatically; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果資料行值自動遞增，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a computed column.">該資料行是計算的資料行。</exception>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary vsli:raw="Gets or sets the starting value for a column that has its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;. The default is 0.">取得或設定資料行的開始值，這個資料行的 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 屬性設定為 <see langword="true" />。 預設值為 0。</summary>
      <returns vsli:raw="The starting value for the &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; feature.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" /> 函式的開始值。</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary vsli:raw="Gets or sets the increment used by a column with its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">取得或設定資料行所使用的遞增，這個資料行的 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 屬性設定為 <see langword="true" />。</summary>
      <returns vsli:raw="The number by which the value of the column is automatically incremented. The default is 1.">自動遞增資料行值所根據的數字。 預設為 1。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is zero.">設定的值為零。</exception>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary vsli:raw="Gets or sets the caption for the column.">取得或設定資料行的標題。</summary>
      <returns vsli:raw="The caption of the column. If not set, returns the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; value.">資料行的標題。 如果未設定標題，則傳回 <see cref="P:System.Data.DataColumn.ColumnName" /> 值。</returns>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; of the column.">取得或設定資料行的 <see cref="T:System.Data.MappingType" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MappingType" /> 值。</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary vsli:raw="Gets or sets the name of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">取得或設定在 <see cref="T:System.Data.DataColumnCollection" /> 中的資料行名稱。</summary>
      <returns vsli:raw="The name of the column.">資料行名稱。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt; or an empty string and the column belongs to a collection.">屬性會設定為 <see langword="null" /> 或空字串，並且資料行會屬於集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A column with the same name already exists in the collection. The name comparison is not case sensitive.">具有相同名稱的資料行已經存在於集合中。 名稱比較不區分大小寫。</exception>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary vsli:raw="Gets or sets the type of data stored in the column.">取得或設定儲存在資料行中的資料型別。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the column data type.">
        <see cref="T:System.Type" /> 物件，表示資料行資料型別。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already has data stored.">資料行已經具有儲存的資料。</exception>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;DateTimeMode&quot; /&gt; for the column.">取得或設定資料行的 <see langword="DateTimeMode" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSetDateTime&quot; /&gt; for the specified column.">指定之資料行的 <see cref="T:System.Data.DataSetDateTime" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the column when you are creating new rows.">在建立新資料列時，取得或設定資料行的預設值。</summary>
      <returns vsli:raw="A value appropriate to the column's &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">適合資料行的 <see cref="P:System.Data.DataColumn.DataType" /> 之值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are adding a row, the default value is not an instance of the column's data type.">在加入資料列時，預設值不是資料行資料型別的執行個體。</exception>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary vsli:raw="Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.">取得或設定運算式，用來篩選資料列、計算資料行中的值或建立彙總資料行。</summary>
      <returns vsli:raw="An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the column.">運算式，用來計算資料行的值或建立彙總資料行。 運算式的傳回型別是由資料行的 <see cref="P:System.Data.DataColumn.DataType" /> 所判斷。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; or &lt;see cref=&quot;P:System.Data.DataColumn.Unique&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" /> 或 <see cref="P:System.Data.DataColumn.Unique" /> 屬性是設定為 <see langword="true" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.">在使用 CONVERT 函式時，運算式評估為字串，但是字串不包含可以轉變為型別參數的表示。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts.">在使用 CONVERT 函式時，不可能進行所要求的轉型。 請參閱下面段落中的型別轉換函式 (Conversion Function)，取得有關可能轉型的詳細資訊。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="When you use the SUBSTRING function, the start argument is out of range.  &#xA;  &#xA; -Or-  &#xA;  &#xA; When you use the SUBSTRING function, the length argument is out of range.">在使用 SUBSTRING 函式時，起始引數超出範圍。  
-或者- 
在使用 SUBSTRING 函式時，長度引數超出範圍。</exception>
      <exception cref="T:System.Exception" vsli:raw="When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to &lt;see cref=&quot;T:System.Char&quot; /&gt;.">在使用 LEN 函式或 TRIM 函式時，運算式不會評估為字串。 這包括評估為 <see cref="T:System.Char" /> 的運算式。</exception>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary vsli:raw="Gets the collection of custom user information associated with a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">取得與 <see cref="T:System.Data.DataColumn" /> 相關聯的自訂使用者資訊集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">自訂資訊的 <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length of a text column.">取得或設定文字資料行的最大長度。</summary>
      <returns vsli:raw="The maximum length of the column in characters. If the column has no maximum length, the value is -1 (default).">資料行的最大長度，以字元為單位。 如果資料行沒有最大長度, 則此值為-1 (預設值)。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">取得或設定 <see cref="T:System.Data.DataColumn" /> 的命名空間。</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 的命名空間。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">命名空間已經有資料。</exception>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">參數參考。</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary vsli:raw="Gets the (zero-based) position of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; collection.">取得 <see cref="T:System.Data.DataColumnCollection" /> 集合中 (以零起始) 的資料行位置。</summary>
      <returns vsli:raw="The position of the column. Gets -1 if the column is not a member of a collection.">資料行的位置。 如果資料行不是集合的成員，則取得 -1。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">取得或設定建立 <see cref="T:System.Data.DataTable" /> 命名空間別名的 XML 前置詞。</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace.">
        <see cref="T:System.Data.DataTable" /> 命名空間的 XML 前置詞。</returns>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="name" vsli:raw="Parameter reference.">參數參考。</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary vsli:raw="Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.">取得或設定值，指出是否資料列一加入至資料表，就允許變更資料行。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果資料行是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;false&quot; /&gt; on a computed column.">屬性在計算的資料行上設定為 <see langword="false" />。</exception>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary vsli:raw="Changes the ordinal or position of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to the specified ordinal or position.">將 <see cref="T:System.Data.DataColumn" /> 的序數或位置變更為指定的序數或位置。</summary>
      <param name="ordinal" vsli:raw="The specified ordinal.">指定的序數。</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the column belongs to.">取得資料行所屬的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; belongs to.">
        <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; of the column, if one exists.">取得資料行的 <see cref="P:System.Data.DataColumn.Expression" /> (如果存在)。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; value, if the property is set; otherwise, the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; property.">如果屬性已經設定，則為 <see cref="P:System.Data.DataColumn.Expression" /> 值，否則為 <see cref="P:System.Data.DataColumn.ColumnName" /> 屬性。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary vsli:raw="Gets or sets a value that indicates whether the values in each row of the column must be unique.">取得或設定值，指出在資料行之每個資料列中的值是否必須是唯一的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be unique; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果值必須是唯一的，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a calculated column.">該資料行是計算的資料行。</exception>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">提供 <see cref="E:System.Data.DataTable.ColumnChanging" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataColumnChangeEventArgs" /> 類別的新執行個體。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with the changing value.">具有變更值之資料行的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with the changing value.">具有變更值之 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="value" vsli:raw="The new value.">新值。</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">取得具有正在變更的值之 <see cref="T:System.Data.DataColumn" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">具有正在變更的值之 <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary vsli:raw="Gets or sets the proposed new value for the column.">取得或設定資料欄的建議新值。</summary>
      <returns vsli:raw="The proposed value, of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">建議值，屬於型別 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">取得具有正在變更的值之資料行的 <see cref="T:System.Data.DataRow" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">具有正在變更的值之資料行的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">代表將處理 <see cref="E:System.Data.DataTable.ColumnChanging" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataColumnChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示 <see cref="T:System.Data.DataColumn" /> 的 <see cref="T:System.Data.DataTable" /> 物件集合。</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">建立 <see cref="T:System.Data.DataColumn" /> 物件，並將它加入 <see cref="T:System.Data.DataColumnCollection" />。</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新建立的 <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary vsli:raw="Creates and adds the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">建立指定的 <see cref="T:System.Data.DataColumn" /> 物件，並將它加入 <see cref="T:System.Data.DataColumnCollection" />。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to add.">要加入的 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already belongs to this collection, or to another collection.">資料行永遠屬於這個集合，或屬於另一個集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">集合不具有含有指定名稱的資料行 (這項比較不會區分大小寫。)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">運算式無效。 請參閱 <see cref="P:System.Data.DataColumn.Expression" /> 屬性，取得如何建立運算式的詳細資訊。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">建立具有指定名稱的 <see cref="T:System.Data.DataColumn" /> 物件，並將它加入 <see cref="T:System.Data.DataColumnCollection" />。</summary>
      <param name="columnName" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新建立的 <see cref="T:System.Data.DataColumn" />。</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">集合不具有含有指定名稱的資料行 (這項比較不會區分大小寫。)</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name and type to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">建立具有指定名稱和型別的 <see cref="T:System.Data.DataColumn" /> 物件，並將它加入 <see cref="T:System.Data.DataColumnCollection" />。</summary>
      <param name="columnName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; to use when you create the column.">建立資料行時要使用的 <see cref="P:System.Data.DataColumn.ColumnName" />。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">新資料行的 <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新建立的 <see cref="T:System.Data.DataColumn" />。</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">集合不具有含有指定名稱的資料行 (這項比較不會區分大小寫。)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">運算式無效。 請參閱 <see cref="P:System.Data.DataColumn.Expression" /> 屬性，取得如何建立運算式的詳細資訊。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name, type, and expression to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">建立具有指定名稱、型別和運算式的 <see cref="T:System.Data.DataColumn" /> 物件，並將它加入 <see cref="T:System.Data.DataColumnCollection" />。</summary>
      <param name="columnName" vsli:raw="The name to use when you create the column.">建立資料行時要使用的名稱。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">新資料行的 <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <param name="expression" vsli:raw="The expression to assign to the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">要指派給 <see cref="P:System.Data.DataColumn.Expression" /> 屬性的運算式。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新建立的 <see cref="T:System.Data.DataColumn" />。</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">集合不具有含有指定名稱的資料行 (這項比較不會區分大小寫。)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">運算式無效。 請參閱 <see cref="P:System.Data.DataColumn.Expression" /> 屬性，取得如何建立運算式的詳細資訊。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; array to the end of the collection.">將指定的 <see cref="T:System.Data.DataColumn" /> 陣列元素複製到集合的末端。</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to add to the collection.">要加入至集合的 <see cref="T:System.Data.DataColumn" /> 物件陣列。</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary vsli:raw="Checks whether a specific column can be removed from the collection.">檢查是否可以從集合移除特定的資料行。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection.">在集合中的 <see cref="T:System.Data.DataColumn" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column can be removed. &lt;see langword=&quot;false&quot; /&gt; if,  &#xA;  &#xA;-   The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-   The column does not belong to this collection.  &#xA;  &#xA;-   The column is part of a relationship.  &#xA;  &#xA;-   Another column's expression depends on this column.">如果可以移除該資料行則為 <see langword="true" />。 否則為 <see langword="false" />。 

<paramref name="column" /> 參數是 <see langword="null" />。  

資料行不屬於此集合。  

資料行是關聯性的一部分。  

另一個資料行的運算式相依於此資料行。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is null.">
        <paramref name="column" /> 參數為 null。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.&#xA;        &#xA;-or-&#xA;&#xA;The column is part of a relationship.&#xA;&#xA;-or-&#xA;&#xA;Another column's expression depends on this column.">資料行不屬於這個集合。
-或-
資料行是關聯性的部分。
-或-
另一個資料行的運算式相依於這個資料行。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary vsli:raw="Clears the collection of any columns.">清除任何資料行的集合。</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the columns collection changes, either by adding or removing a column.">發生於資料行集合變更時 (藉由加入或移除資料行)。</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary vsli:raw="Checks whether the collection contains a column with the specified name.">檢查集合是否包含具有指定名稱的資料行。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to look for.">要尋找的資料行 <see cref="P:System.Data.DataColumn.ColumnName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a column exists with this name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果存在具有這個名稱的資料行，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary vsli:raw="Copies the entire collection into an existing array, starting at a specified index within the array.">將整個集合複製到現有陣列中，並於陣列中指定的索引處開始寫入。</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to copy the collection into.">
        <see cref="T:System.Data.DataColumn" /> 物件的陣列，用來包含複製的集合。</param>
      <param name="index" vsli:raw="The index to start from.">做為開頭的索引。</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary vsli:raw="Gets the index of a column specified by name.">取得由名稱指定的資料行索引。</summary>
      <param name="column" vsli:raw="The name of the column to return.">要傳回的資料行名稱。</param>
      <returns vsli:raw="The index of the column specified by &lt;paramref name=&quot;column&quot; /&gt; if it is found; otherwise, -1.">如果找到，則為 <paramref name="column" /> 指定的資料行索引，否則為 -1。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the column with the specific name (the name is not case sensitive).">取得具有特定名稱 (名稱不區分大小寫) 的資料行索引。</summary>
      <param name="columnName" vsli:raw="The name of the column to find.">要尋找的資料行名稱。</param>
      <returns vsli:raw="The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.">具有指定名稱的資料行之以零起始的索引，如果集合中沒有該資料行，則為 -1。</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection at the specified index.">從集合的指定索引處取得 <see cref="T:System.Data.DataColumn" />。</summary>
      <param name="index" vsli:raw="The zero-based index of the column to return.">要傳回的資料行之以零起始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; at the specified index.">指定索引處的 <see cref="T:System.Data.DataColumn" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">索引值大於集合中項目的數目。</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection with the specified name.">以指定名稱從集合取得 <see cref="T:System.Data.DataColumn" />。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to return.">要傳回的資料行 <see cref="P:System.Data.DataColumn.ColumnName" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection with the specified &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt;; otherwise a null value if the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; does not exist.">集合中具有指定 <see cref="T:System.Data.DataColumn" /> 的 <see cref="P:System.Data.DataColumn.ColumnName" />，否則為 Null 值 (如果 <see cref="T:System.Data.DataColumn" /> 不存在)。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object from the collection.">從集合中移除指定的 <see cref="T:System.Data.DataColumn" /> 物件。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The column is part of a relationship.  &#xA;  &#xA; -Or-  &#xA;  &#xA; Another column's expression depends on this column.">資料行不屬於這個集合。  
 -或者-  
 資料行是關聯性的部分。  
 -或者-  
 另一個資料行的運算式相依於這個資料行。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name from the collection.">從集合移除具有指定名稱的 <see cref="T:System.Data.DataColumn" /> 物件。</summary>
      <param name="name" vsli:raw="The name of the column to remove.">要移除的資料行名稱。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column with the specified name.">集合不具有含有指定名稱的資料行。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the column at the specified index from the collection.">從集合移除在指定索引處的資料行。</summary>
      <param name="index" vsli:raw="The index of the column to remove.">要移除的資料行索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column at the specified index.">集合的指定索引處不具有資料行。</exception>
    </member>
    <member name="T:System.Data.DataException">
      <summary vsli:raw="Represents the exception that is thrown when errors are generated using ADO.NET components.">表示會在使用 ADO.NET 元件產生錯誤時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class. This is the parameterless constructor.">初始化 <see cref="T:System.Data.DataException" /> 類別的新執行個體。 這是無參數建構函式。</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified serialization information and context.">使用指定的序列化 (Serialization) 資訊和內容，初始化 <see cref="T:System.Data.DataException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">序列化或還原序列化物件所需的資料。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">來源的描述和指定的序列化資料流的目的端。</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.DataException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string and inner exception.">使用指定的字串和內部例外狀況，初始化 <see cref="T:System.Data.DataException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">內部例外狀況的參考。</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary vsli:raw="Provides extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">提供 <see cref="T:System.Data.Common.DbDataReader" /> 的擴充方法。</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">取得指定之資料行的值做為布林值 (Boolean)。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">取得指定資料行的值做為位元組。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">從起始於所指定索引的指定資料行讀取所指定位元組數，並將其寫入至起始於緩衝區中指定位置的緩衝區。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">要開始讀取作業之資料列中的來源索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">要將資料複製到其中的目的緩衝區。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">要對其複製資料的緩衝區索引。</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">要讀取的字元數上限。</param>
      <returns vsli:raw="The actual number of bytes read.">讀取的實際位元組數目。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single character.">取得指定的資料行值做為單一字元。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">從起始於所指定索引的指定資料行讀取指定的字元數，並將其寫入至起始於指定位置的緩衝區。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">要開始讀取作業之資料列中的來源索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">要將資料複製到其中的目的緩衝區。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">要對其複製資料的緩衝區索引。</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">要讀取的字元數上限。</param>
      <returns vsli:raw="The actual number of characters read.">讀取的實際字元數目。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">傳回所要求資料行的巢狀資料讀取器。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="A data reader.">資料讀取器。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets name of the data type of the specified column.">取得指定資料行的資料類型名稱。</summary>
      <param name="reader" vsli:raw="The data reader to get the column type name from.">要從中取得資料行類型名稱的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The name of the data type.">資料型別的名稱。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">取得指定之資料行的值做為 <see cref="T:System.DateTime" /> 物件。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">取得指定的資料行值做為 <see cref="T:System.Decimal" />。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a double-precision floating point number.">取得指定資料行的值做為雙精確度浮點數。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the data type of the specified column.">取得指定資料行的資料類型。</summary>
      <param name="reader" vsli:raw="The data reader to get the field type from.">要從中取得欄位類型的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The data type of the specified column.">指定資料行的資料類型。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">取得所指定資料行值作為要求類型。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">要傳回的值型别。</typeparam>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或- 
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，沒有呼叫第一個 <see cref="M:System.Data.Common.DbDataReader.Read" />，或傳回 <see langword="false" />)。  
-或-
讀取器已嘗試在循序模式下讀取先前讀取的資料行。  
-或-
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">資料來源傳回的值不符合或無法轉換成 <typeparamref name="T" />。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">以非同步方式取得所指定資料行的值作為要求類型。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">取消非同步作業的選擇性語彙基元。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">要傳回的值型别。</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 包含所指定資料行值的工作。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或-
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，沒有呼叫第一個 <see cref="M:System.Data.Common.DbDataReader.Read" />，或傳回 <see langword="false" />)。
-或-
嘗試在循序模式下讀取先前讀取的資料行。  
-或-
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get_*_ 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">資料來源傳回的值不符合或無法轉換成 <typeparamref name="T" />。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">取得指定資料行的值做為單精確度浮點數。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a globally unique identifier (GUID).">取得指定資料行的值做為全域唯一識別項 (GUID)。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">取得指定資料行的值做為 16 位元帶正負號的整數。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">取得指定資料行的值作為 32 位元帶正負號的整數。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">取得指定資料行的值做為 64 位元帶正負號的整數 (Signed Integer)。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">取得指定資料行的提供者特定類型。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="A provider-specific .NET type.">提供者特定的 .NET 類型。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">取得所指定資料行值作為提供者特定類型的執行個體。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">取得資料流以從指定的資料行擷取資料。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="A stream.">資料流。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或-
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.Common.DbDataReader.Read" /> 沒有被呼叫，或傳回 false)。  
-或-
資料讀取器已嘗試在循序模式下讀取先前讀取的資料行。  
-或-
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定的資料行不是支援使用 <see cref="T:System.IO.Stream" /> 讀取的二進位型別。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">取得指定之資料行的值做為 <see cref="T:System.String" /> 的執行個體。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">取得文字讀取器以從資料行擷取資料。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="A text reader.">文字讀取器。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或-
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.Common.DbDataReader.Read" /> 沒有被呼叫，或傳回 false)。  
-或-
資料讀取器已嘗試在循序模式下讀取先前讀取的資料行。  
-或-
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定的資料行不是支援使用 <see cref="T:System.IO.TextReader" /> 讀取的文字型別。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">取得指定之資料行的值做為 <see cref="T:System.Object" /> 的執行個體。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a value that indicates whether the column contains nonexistent or missing values.">取得值，這個值表示資料行是否包含不存在或遺漏的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的資料行等於 <see cref="T:System.DBNull" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">以非同步方式取得值，指出資料行是否包含不存在或遺漏的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要從中取得資料行值的資料讀取器。</param>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">取消非同步作業的選擇性語彙基元。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">如果所指定資料行值等於 <see langword="DBNull" />，則 <see cref="T:System.Threading.Tasks.Task`1" /> 的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 值為 <see langword="true" />；如果不相等，則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">連線在資料擷取期間已中斷或關閉。  
-或-
資料讀取器在資料擷取期間已關閉。  
-或-
沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.Common.DbDataReader.Read" /> 沒有被呼叫，或傳回 false)。  
-或-
嘗試在循序模式下讀取先前讀取的資料行。  
-或- 
有進行中的非同步作業。 當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary vsli:raw="Represents a parent/child relationship between two &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">表示兩個 <see cref="T:System.Data.DataTable" /> 物件之間的父子關聯性。</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name, and parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定的 <see cref="T:System.Data.DataRelation" /> 名稱以及父和子 <see cref="T:System.Data.DataRelation" /> 物件，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 的名稱。 如果是 <see langword="null" /> 或空字串 ("")，在將建立的物件加入 <see cref="T:System.Data.DataRelationCollection" /> 時會指定預設的名稱。</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">關聯性中的父 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">關聯性中的子 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 物件的其中之一或兩者包含 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">資料行具有不同的資料型別 
-或者- 
資料表不屬於相同的 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and a value that indicates whether to create constraints.">使用指定的名稱、父和子 <see cref="T:System.Data.DataRelation" /> 物件，以及指出是否建立條件約束 (Constraint) 的值，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">關聯的名稱。 如果是 <see langword="null" /> 或空字串 ("")，在將建立的物件加入 <see cref="T:System.Data.DataRelationCollection" /> 時會指定預設的名稱。</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">關聯中的父 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">關聯中的子 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether constraints are created. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指出是否已建立條件約束的值。 如果已建立條件約束，則為 <see langword="true" />。 否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 物件的其中之一或兩者包含 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">資料行具有不同的資料型別 
-或者- 
資料表不屬於相同的 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定的 <see cref="T:System.Data.DataRelation" /> 名稱以及父和子 <see cref="T:System.Data.DataRelation" /> 物件的相符陣列，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">關聯的名稱。 如果是 <see langword="null" /> 或空字串 ("")，在將建立的物件加入 <see cref="T:System.Data.DataRelationCollection" /> 時會指定預設的名稱。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">父 <see cref="T:System.Data.DataColumn" /> 物件的陣列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">子 <see cref="T:System.Data.DataColumn" /> 物件的陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 物件的其中之一或兩者包含 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or both of the arrays are not composed of distinct columns from the same table.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 物件有不同的資料型別 
-或者- 
陣列的其中之一或兩者不是由相同資料表的不同資料行所組成。  
-或者- 
資料表不屬於相同的 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether to create constraints.">使用指定的名稱、父和子 <see cref="T:System.Data.DataRelation" /> 物件的相符陣列，以及指出是否建立條件約束的值，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">關聯的名稱。 如果是 <see langword="null" /> 或空字串 ("")，在將建立的物件加入 <see cref="T:System.Data.DataRelationCollection" /> 時會指定預設的名稱。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">父 <see cref="T:System.Data.DataColumn" /> 物件的陣列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">子 <see cref="T:System.Data.DataColumn" /> 物件的陣列。</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether to create constraints. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指出是否建立條件約束的值。 如果已建立條件約束，則為 <see langword="true" />。 否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 物件的其中之一或兩者都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">資料行具有不同的資料型別 
-或者- 
資料表不屬於相同的 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">這個建構函式是在 Visual Studio 環境中，針對支援設計階段而提供。</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 的名稱。 如果是 <see langword="null" /> 或空字串 ("")，在將建立的物件加入 <see cref="T:System.Data.DataRelationCollection" /> 時會指定預設的名稱。</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">為關聯父資料表的 <see cref="T:System.Data.DataTable" /> 之名稱。</param>
      <param name="parentTableNamespace" vsli:raw="The name of the parent table namespace.">父資料表命名空間的名稱。</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">為關聯子資料表的 <see cref="T:System.Data.DataTable" /> 之名稱。</param>
      <param name="childTableNamespace" vsli:raw="The name of the child table namespace.">子資料表命名空間的名稱。</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">關聯的父 <see cref="T:System.Data.DataColumn" /> 中 <see cref="T:System.Data.DataTable" /> 物件名稱的陣列。</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">關聯的子 <see cref="T:System.Data.DataColumn" /> 中 <see cref="T:System.Data.DataTable" /> 物件名稱的陣列。</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">指出關聯性是否為巢狀 (Nest) 的值。</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">這個建構函式是在 Visual Studio 環境中，針對支援設計階段而提供。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">關聯的名稱。 如果是 <see langword="null" /> 或空字串 ("")，在將建立的物件加入 <see cref="T:System.Data.DataRelationCollection" /> 時會指定預設的名稱。</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">為關聯父資料表的 <see cref="T:System.Data.DataTable" /> 之名稱。</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">為關聯子資料表的 <see cref="T:System.Data.DataTable" /> 之名稱。</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">關聯的父 <see cref="T:System.Data.DataColumn" /> 中 <see cref="T:System.Data.DataTable" /> 物件名稱的陣列。</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">關聯的子 <see cref="T:System.Data.DataColumn" /> 中 <see cref="T:System.Data.DataTable" /> 物件名稱的陣列。</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">指出關聯性是否為巢狀 (Nest) 的值。</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary vsli:raw="This method supports .NET infrastructure and is not intended to be used directly from your code.">此方法支援 .NET Framework 結構而且並非設計直接從程式碼使用。</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The parent and child tables belong to different &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; objects.  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or more pairs of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have mismatched data types.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects are identical.">父和子資料表屬於不同的 <see cref="T:System.Data.DataSet" /> 物件。  
-或者- 
一或多對的父和子 <see cref="T:System.Data.DataColumn" /> 物件有不相符的資料型別。  
-或者- 
父和子 <see cref="T:System.Data.DataColumn" /> 物件相同。</exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary vsli:raw="Gets the child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects of this relation.">取得這個關聯的子 <see cref="T:System.Data.DataColumn" /> 物件。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataColumn" /> 物件的陣列。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; for the relation.">取得關聯的 <see cref="T:System.Data.ForeignKeyConstraint" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">
        <see langword="ForeignKeyConstraint" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary vsli:raw="Gets the child table of this relation.">取得這個關聯的子資料表。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">
        <see cref="T:System.Data.DataTable" />，為關聯的子資料表。</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">取得 <see cref="T:System.Data.DataSet" /> 所屬的 <see cref="T:System.Data.DataRelation" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">
        <see cref="T:System.Data.DataSet" /> 所屬的 <see cref="T:System.Data.DataRelation" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary vsli:raw="Gets the collection that stores customized properties.">取得儲存自訂屬性的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains customized properties.">
        <see cref="T:System.Data.PropertyCollection" />，其中包含自訂的屬性。</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested.">取得或設定值，指出 <see cref="T:System.Data.DataRelation" /> 物件是否為巢狀。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.DataRelation" /> 物件為巢狀，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">參數參考。</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">取得為這個 <see cref="T:System.Data.DataColumn" /> 父資料行的 <see cref="T:System.Data.DataRelation" /> 物件陣列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 物件 (為這個 <see cref="T:System.Data.DataRelation" /> 的父資料行) 的陣列。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that guarantees that values in the parent column of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; are unique.">取得 <see cref="T:System.Data.UniqueConstraint" />，確保 <see cref="T:System.Data.DataRelation" /> 之父資料行中的值為唯一。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that makes sure that values in a parent column are unique.">
        <see cref="T:System.Data.UniqueConstraint" />，確保父資料行中的值是唯一的。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">取得這個 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataRelation" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of this relation.">
        <see cref="T:System.Data.DataTable" />，為這個關聯的父資料表。</returns>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="name" vsli:raw="Parameter reference.">參數參考。</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary vsli:raw="Gets or sets the name used to retrieve a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">取得或設定用來從 <see cref="T:System.Data.DataRelation" /> 擷取 <see cref="T:System.Data.DataRelationCollection" /> 的名稱。</summary>
      <returns vsli:raw="The name of the a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 的名稱。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) was passed into a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see langword="null" /> 或空字串 ("") 已傳遞到 <see cref="T:System.Data.DataColumn" /> (為 <see cref="T:System.Data.DataRelation" />)。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs to a collection that already contains a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the same name.">
        <see cref="T:System.Data.DataRelation" /> 屬於已經包含具有相同名稱之 <see cref="T:System.Data.DataRelation" /> 的集合。</exception>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt;, if one exists.">取得 <see cref="P:System.Data.DataRelation.RelationName" /> (如果關聯名稱存在)。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; property.">
        <see cref="P:System.Data.DataRelation.RelationName" /> 屬性的值。</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary vsli:raw="Represents the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">表示這個 <see cref="T:System.Data.DataRelation" /> 的 <see cref="T:System.Data.DataSet" /> 物件集合。</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataRelationCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with a specified parent and child column, and adds it to the collection.">使用指定的父資料行和子資料行建立 <see cref="T:System.Data.DataRelation" />，並將它加入至集合中。</summary>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">關聯的父資料行。</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">關聯的子資料行。</param>
      <returns vsli:raw="The created relation.">建立的關聯。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified parent and child columns, and adds it to the collection.">使用指定的名稱以及父資料行和子資料行來建立 <see cref="T:System.Data.DataRelation" />，並將它加入至集合中。</summary>
      <param name="parentColumns" vsli:raw="The parent columns of the relation.">關聯的父資料行。</param>
      <param name="childColumns" vsli:raw="The child columns of the relation.">關聯的子資料行。</param>
      <returns vsli:raw="The created relation.">建立的關聯。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; argument is a null value.">
        <paramref name="relation" /> 引數為 Null 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">關聯永遠屬於這個集合，或屬於另一個集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">集合已經和相同名稱產生關聯 (名稱比較不區分大小寫)。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">關聯從一建立以來就進入無效的狀態。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">將 <see cref="T:System.Data.DataRelation" /> 加入至 <see cref="T:System.Data.DataRelationCollection" />。</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; to add to the collection.">要加入至集合的 <see langword="DataRelation" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; parameter is a null value.">
        <paramref name="relation" /> 引數為 Null 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">關聯永遠屬於這個集合，或屬於另一個集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the specified name. (The comparison is not case sensitive.)">集合已經和指定名稱產生關聯 (名稱比較不區分大小寫)。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">關聯從一建立以來就進入無效的狀態。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, and parent and child columns, and adds it to the collection.">使用指定的名稱以及父資料行和子資料行來建立 <see cref="T:System.Data.DataRelation" />，並將它加入至集合中。</summary>
      <param name="name" vsli:raw="The name of the relation.">關聯的名稱。</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">關聯的父資料行。</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">關聯的子資料行。</param>
      <returns vsli:raw="The created relation.">建立的關聯。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, parent and child columns, with optional constraints according to the value of the &lt;paramref name=&quot;createConstraints&quot; /&gt; parameter, and adds it to the collection.">使用指定的名稱、父資料行和子資料行，並附根據 <paramref name="createConstraints" /> 參數值的選擇性條件約束，來建立 <see cref="T:System.Data.DataRelation" />，並將它加入至集合中。</summary>
      <param name="name" vsli:raw="The name of the relation.">關聯的名稱。</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">關聯的父資料行。</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">關聯的子資料行。</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create constraints; otherwise &lt;see langword=&quot;false&quot; /&gt;. (The default is &lt;see langword=&quot;true&quot; /&gt;).">若要建立條件約束，則為 <see langword="true" />，否則為 <see langword="false" /> 預設值為 <see langword="true" />。</param>
      <returns vsli:raw="The created relation.">建立的關聯。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name and arrays of parent and child columns, and adds it to the collection.">使用指定名稱以及父資料行和子資料行的陣列來建立 <see cref="T:System.Data.DataRelation" />，並將它加入至集合。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">要建立的 <see langword="DataRelation" /> 名稱。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">父 <see cref="T:System.Data.DataColumn" /> 物件的陣列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">子 <see langword="DataColumn" /> 物件的陣列。</param>
      <returns vsli:raw="The created &lt;see langword=&quot;DataRelation&quot; /&gt;.">建立的 <see langword="DataRelation" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">關聯名稱為 Null 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">關聯永遠屬於這個集合，或屬於另一個集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">集合已經和相同名稱產生關聯 (名稱比較不區分大小寫)。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">關聯從一建立以來就進入無效的狀態。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.">使用指定名稱、父資料行和子資料行的陣列和指定是否要建立條件限制的值來建立 <see cref="T:System.Data.DataRelation" />，並將它加入至集合。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">要建立的 <see langword="DataRelation" /> 名稱。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">父 <see cref="T:System.Data.DataColumn" /> 物件的陣列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">子 <see langword="DataColumn" /> 物件的陣列。</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a constraint; otherwise &lt;see langword=&quot;false&quot; /&gt;.">若要建立條件約束，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <returns vsli:raw="The created relation.">建立的關聯。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">關聯名稱為 Null 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">關聯永遠屬於這個集合，或屬於另一個集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">集合已經和相同名稱產生關聯 (名稱比較不區分大小寫)。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">關聯從一建立以來就進入無效的狀態。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs verification on the table.">在資料表上執行驗證。</summary>
      <param name="relation" vsli:raw="The relation to check.">要檢查的關聯。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is null.">關聯為 null。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">關聯永遠屬於這個集合，或屬於另一個集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">集合已經和相同名稱產生關聯 (名稱比較不區分大小寫)。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; array to the end of the collection.">將指定的 <see cref="T:System.Data.DataRelation" /> 陣列元素複製到集合的末端。</summary>
      <param name="relations" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to add to the collection.">要加入至集合的 <see cref="T:System.Data.DataRelation" /> 物件陣列。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed from the collection.">驗證是否可以從集合移除指定的 <see cref="T:System.Data.DataRelation" />。</summary>
      <param name="relation" vsli:raw="The relation to perform the check against.">執行檢查所針對的關聯。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以移除 <see cref="T:System.Data.DataRelation" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary vsli:raw="Clears the collection of any relations.">清除任何關聯的集合。</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the collection has changed.">發生於集合變更時。</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specific name (case insensitive) exists in the collection.">驗證集合中是否有具指定名稱 (不區分大小寫) 的 <see cref="T:System.Data.DataRelation" />。</summary>
      <param name="name" vsli:raw="The name of the relation to find.">要尋找的關聯名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a relation with the specified name exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果存在具有指定名稱的關聯，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary vsli:raw="Copies the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects starting at the specified index.">複製 <see cref="T:System.Data.DataRelation" /> 物件的集合，從指定的索引處開始。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to copy the collection to.">
        <see cref="T:System.Data.DataRelation" /> 物件的陣列，用來包含複製的集合。</param>
      <param name="index" vsli:raw="The index to start from.">做為開頭的索引。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary vsli:raw="This method supports the .NET infrastructure and is not intended to be used directly from your code.">此方法支援 .NET Framework 結構而且並非設計直接從程式碼使用。</summary>
      <returns vsli:raw="The referenced DataSet.">參考的資料集。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">取得指定 <see cref="T:System.Data.DataRelation" /> 物件的索引。</summary>
      <param name="relation" vsli:raw="The relation to search for.">要搜尋的關聯。</param>
      <returns vsli:raw="The 0-based index of the relation, or -1 if the relation is not found in the collection.">關聯的以零起始之索引或 –1 (如果集合中未發現關聯)。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; specified by name.">取得根據名稱所指定的 <see cref="T:System.Data.DataRelation" /> 之索引。</summary>
      <param name="relationName" vsli:raw="The name of the relation to find.">要尋找的關聯名稱。</param>
      <returns vsli:raw="The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.">具有指定名稱的關聯之以零起始索引或 –1 (如果集合中未發現關聯)。</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object at the specified index.">取得在指定之索引處的 <see cref="T:System.Data.DataRelation" /> 物件。</summary>
      <param name="index" vsli:raw="The zero-based index to find.">要尋找的以零起始之索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataRelation" /> 或 Null 值 (如果指定的 <see cref="T:System.Data.DataRelation" /> 不存在)。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">索引值大於集合中項目的數目。</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object specified by name.">取得根據名稱所指定的 <see cref="T:System.Data.DataRelation" /> 物件。</summary>
      <param name="name" vsli:raw="The name of the relation to find.">要尋找的關聯名稱。</param>
      <returns vsli:raw="The named &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">具名的 <see cref="T:System.Data.DataRelation" /> 或 Null 值 (如果指定的 <see cref="T:System.Data.DataRelation" /> 不存在)。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">引發 <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> 事件。</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">引發 <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> 事件。</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary vsli:raw="Removes the specified relation from the collection.">從集合移除指定的關聯。</summary>
      <param name="relation" vsli:raw="The relation to remove.">要移除的關聯。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is a null value.">關聯為 null 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the collection.">關聯不屬於集合。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary vsli:raw="Removes the relation with the specified name from the collection.">從集合移除具有指定名稱的關聯。</summary>
      <param name="name" vsli:raw="The name of the relation to remove.">要移除的關聯名稱。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a relation with the specified name.">集合沒有包含具有指定名稱的關聯。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the relation at the specified index from the collection.">從集合移除在指定索引處的關聯。</summary>
      <param name="index" vsli:raw="The index of the relation to remove.">要移除的關聯索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a relation at the specified index.">集合在指定索引處不具有關聯。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs a verification on the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">在指定的 <see cref="T:System.Data.DataRelation" /> 物件上執行驗證。</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; object to verify.">要驗證的 <see langword="DataRelation" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The collection does not have a relation at the specified index.">集合在指定索引處不具有關聯。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified relation does not belong to this collection, or it belongs to another collection.">指定的關聯不屬於這個集合，或者屬於另一個集合。</exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary vsli:raw="Represents a row of data in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示 <see cref="T:System.Data.DataTable" /> 中的資料列。</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary vsli:raw="Initializes a new instance of the DataRow class using the specified builder. Only for internal usage.">將新的 DataRow 執行個體初始化。 從產生器建構資料列。 僅供內部使用。</summary>
      <param name="builder" vsli:raw="The builder that contains the table and record for the new row.">產生器</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this row since the last time &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was called.">認可自前一次呼叫 <see cref="M:System.Data.DataRow.AcceptChanges" /> 以來，對這個資料列所做的所有變更。</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary vsli:raw="Starts an edit operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">在 <see cref="T:System.Data.DataRow" /> 物件上開始編輯作業。</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中呼叫該方法。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The method was called upon a deleted row.">在刪除的資料列上呼叫該方法。</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary vsli:raw="Cancels the current edit on the row.">取消資料列上目前的編輯。</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中呼叫該方法。</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary vsli:raw="Clears the errors for the row. This includes the &lt;see cref=&quot;P:System.Data.DataRow.RowError&quot; /&gt; and errors set with &lt;see cref=&quot;M:System.Data.DataRow.SetColumnError(System.Int32,System.String)&quot; /&gt;.">清除資料列的錯誤。 這包括 <see cref="P:System.Data.DataRow.RowError" /> 和以 <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> 設定的錯誤。</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">刪除 <see cref="T:System.Data.DataRow" />。</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has already been deleted.">
        <see cref="T:System.Data.DataRow" /> 已經刪除。</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary vsli:raw="Ends the edit occurring on the row.">結束資料列上發生的編輯。</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中呼叫該方法。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The edit broke a constraint.">編輯中斷條件約束。</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="The row belongs to the table and the edit tried to change the value of a read-only column.">資料列屬於資料表，而且編輯嘗試變更唯讀資料行的值。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The edit tried to put a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">編輯嘗試將 Null 值置於 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 為 False 的資料行。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the child rows of this &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRow" />，取得這個 <see cref="T:System.Data.DataRelation" /> 的子資料列。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">關聯和資料列不屬於相同資料表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is &lt;see langword=&quot;null&quot; /&gt;.">relation 為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">資料列沒有這個版本的資料。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRow" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的子資料列。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定要取得的資料版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">關聯和資料列不屬於相同資料表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">資料列沒有要求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" />，取得 <see cref="T:System.Data.DataRelation" /> 的子資料列。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">關聯和資料列不屬於相同資料表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的子資料列。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定要取得的資料版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">關聯和資料列不屬於相同資料表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">資料列沒有要求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary vsli:raw="Gets the error description of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">取得指定 <see cref="T:System.Data.DataColumn" /> 的錯誤描述。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
      <returns vsli:raw="The text of the error description.">錯誤描述的文字。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary vsli:raw="Gets the error description for the column specified by index.">取得索引指定的資料行的錯誤描述。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">資料行的以零起始的索引。</param>
      <returns vsli:raw="The text of the error description.">錯誤描述的文字。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">
        <paramref name="columnIndex" /> 引數超出範圍。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary vsli:raw="Gets the error description for a column, specified by name.">取得名稱指定的資料行的錯誤描述。</summary>
      <param name="columnName" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The text of the error description.">錯誤描述的文字。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary vsli:raw="Gets an array of columns that have errors.">取得具有錯誤的資料行陣列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that contain errors.">包含錯誤的 <see cref="T:System.Data.DataColumn" /> 物件陣列。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRow" />，取得 <see cref="T:System.Data.DataRelation" /> 的父資料列。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">目前資料列的父 <see cref="T:System.Data.DataRow" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The row is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 不屬於 <see cref="T:System.Data.DataTable" />。  
-或-
資料列為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子資料行有多個父代。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="This row does not belong to the child table of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">這個資料列不屬於 <see cref="T:System.Data.DataRelation" /> 物件的子資料表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">資料列不屬於資料表。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRow" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的父資料列。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定要取得的資料版本。</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">目前資料列的父 <see cref="T:System.Data.DataRow" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to this table's parent relations.">資料列為 <see langword="null" />。  
-或-
<paramref name="relation" /> 不屬於這個資料表的父關聯。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子資料行有多個父代。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">關聯的子資料表不是資料列所屬的資料表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">資料列不屬於資料表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">資料列沒有這個版本的資料。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" />，取得 <see cref="T:System.Data.DataRelation" /> 的父資料列。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">目前資料列的父 <see cref="T:System.Data.DataRow" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">關聯和資料列不屬於相同資料表。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子資料行有多個父代。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的父資料列。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">目前資料列的父 <see cref="T:System.Data.DataRow" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">關聯和資料列不屬於相同資料表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子資料行有多個父代。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">資料列沒有要求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRow" />，取得 <see cref="T:System.Data.DataRelation" /> 的父資料列。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 不屬於這個資料列的 <see cref="T:System.Data.DataSet" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">資料列為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">關聯的子資料表不是資料列所屬的資料表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">資料列不屬於 <see cref="T:System.Data.DataTable" />。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRow" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的父資料列。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定要取得的資料版本。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 不屬於這個資料列的 <see cref="T:System.Data.DataSet" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">資料列為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">關聯的子資料表不是資料列所屬的資料表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">資料列不屬於 <see cref="T:System.Data.DataTable" />。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">資料列沒有要求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" />，取得 <see cref="T:System.Data.DataRelation" /> 的父資料列。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">關聯和資料列不屬於相同資料表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的父資料列。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定要取得的資料版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">關聯和資料列不屬於相同資料表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">資料列沒有要求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary vsli:raw="Gets a value that indicates whether there are errors in a row.">取得值，指出資料列中是否有錯誤。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果資料列含有錯誤，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether a specified version exists.">取得值，指出是否有指定的版本。</summary>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定資料列的版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the version exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果版本存在，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a null value.">取得值，指出指定的 <see cref="T:System.Data.DataColumn" /> 是否含有 Null 值。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果資料行包含 Null 值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; contains a null value.">取得值，指出指定的 <see cref="T:System.Data.DataColumn" /> 和 <see cref="T:System.Data.DataRowVersion" /> 是否包含 Null 值。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定資料列的版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果資料行包含 Null 值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;paramref name=&quot;version&quot; /&gt;.">資料列沒有要求的 <paramref name="version" />。</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column at the specified index contains a null value.">取得值，指出指定之索引處的資料行是否包含 Null 值。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">資料行的以零起始的索引。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果資料行包含 Null 值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to the index specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">無資料行對應至 <paramref name="columnIndex" /> 指定的索引。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary vsli:raw="Gets a value that indicates whether the named column contains a null value.">取得值，指出具名資料行是否包含 Null 值。</summary>
      <param name="columnName" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果資料行包含 Null 值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">找不到 <paramref name="columnName" /> 指定的資料行。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;columnName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="columnName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary vsli:raw="Gets or sets the data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">取得或設定儲存於指定的 <see cref="T:System.Data.DataColumn" /> 中的資料。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains the data.">包含資料的 <see cref="T:System.Data.DataColumn" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" />，包含資料。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this table.">資料行不屬於這個資料表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" /> 為 Null。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">嘗試在刪除的資料列上設定值。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">數值和資料行的資料型別不相符。</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">取得儲存於指定的 <see cref="T:System.Data.DataColumn" /> 中指定版本的資料。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains information about the column.">
        <see cref="T:System.Data.DataColumn" />，其中包含資料行的相關資訊。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定您所要的資料列版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" />，包含資料。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to the table.">此資料行不屬於此資料表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; argument contains null.">
        <paramref name="column" /> 引數包含 Null。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">資料列沒有這個版本的資料。</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by index.">取得或設定儲存於索引指定的資料行中的資料。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">資料行的以零起始的索引。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" />，包含資料。</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">嘗試在刪除的資料列上設定值時發生。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">
        <paramref name="columnIndex" /> 引數超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set the value and the new value's &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">設定了值而新值的 <see cref="T:System.Type" /> 與 <see cref="P:System.Data.DataColumn.DataType" /> 不相符時發生。</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the data stored in the column, specified by index and version of the data to retrieve.">取得儲存於資料行中的資料，它是由要擷取的資料索引和版本所指定。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">資料行的以零起始的索引。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定您所要的資料列版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" />，包含資料。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">
        <paramref name="columnIndex" /> 引數超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">數值和資料行的資料型別不相符。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">資料列沒有這個版本的資料。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">嘗試在刪除的資料列上設定值。</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by name.">取得或設定儲存於名稱所指定之資料行的資料。</summary>
      <param name="columnName" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" />，包含資料。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">找不到 <paramref name="columnName" /> 指定的資料行。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">嘗試在刪除的資料列上設定值時發生。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set a value and its &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">當設定值而其 <see cref="T:System.Type" /> 與 <see cref="P:System.Data.DataColumn.DataType" /> 不相符時發生。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Occurs when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">發生於您嘗試將 null 值插入至 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 設定為 <see langword="false" /> 的資料行時。</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the named column.">取得儲存於具名資料行中指定版本的資料。</summary>
      <param name="columnName" vsli:raw="The name of the column.">資料行名稱。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定您所要的資料列版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" />，包含資料。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">找不到 <paramref name="columnName" /> 指定的資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">數值和資料行的資料型別不相符。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">資料列沒有這個版本的資料。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row was deleted.">資料列已經刪除。</exception>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary vsli:raw="Gets or sets all the values for this row through an array.">透過陣列取得或設定這個資料列的所有值。</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">類型為 <see cref="T:System.Object" /> 的陣列。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">陣列大於資料表中的資料行數目。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value in the array does not match its &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; in its respective &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">陣列中的值與其在個別的 <see cref="P:System.Data.DataColumn.DataType" /> 中之 <see cref="T:System.Data.DataColumn" /> 不相符。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="An edit broke a constraint.">編輯中斷條件約束。</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="An edit tried to change the value of a read-only column.">編輯嘗試變更唯讀資料行的值。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="An edit tried to put a null value in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object is &lt;see langword=&quot;false&quot; /&gt;.">某項編輯作業嘗試將 null 值置於資料行中，而該資料行中 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 物件的 <see cref="T:System.Data.DataColumn" /> 為 <see langword="false" />。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row has been deleted.">資料列已經刪除。</exception>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary vsli:raw="Rejects all changes made to the row since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">拒絕自前一次呼叫 <see cref="M:System.Data.DataRow.AcceptChanges" /> 以來，對資料列所做的所有變更。</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">資料列不屬於資料表。</exception>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary vsli:raw="Gets or sets the custom error description for a row.">取得或設定資料列的自訂錯誤描述。</summary>
      <returns vsli:raw="The text describing an error.">描述錯誤的文字。</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary vsli:raw="Gets the current state of the row with regard to its relationship to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">取得關於資料列與 <see cref="T:System.Data.DataRowCollection" /> 之關聯性 (Relationship) 的資料列目前狀態。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.DataRowState" /> 值。</returns>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Added&quot; /&gt;.">將 <see cref="P:System.Data.DataRow.RowState" /> 的 <see cref="T:System.Data.DataRow" /> 變更為 <see langword="Added" />。</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary vsli:raw="Sets the error description for a column specified as a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">對指定為 <see cref="T:System.Data.DataColumn" /> 的資料行設定錯誤描述。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to set the error description for.">要為其設定錯誤描述的 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="error" vsli:raw="The error description.">錯誤描述。</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by index.">設定索引指定的資料行的錯誤描述。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">資料行的以零起始的索引。</param>
      <param name="error" vsli:raw="The error description.">錯誤描述。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range">
        <paramref name="columnIndex" /> 引數超出範圍</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by name.">設定名稱指定的資料行的錯誤描述。</summary>
      <param name="columnName" vsli:raw="The name of the column.">資料行名稱。</param>
      <param name="error" vsli:raw="The error description.">錯誤描述。</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Modified&quot; /&gt;.">將 <see cref="P:System.Data.DataRow.RowState" /> 的 <see cref="T:System.Data.DataRow" /> 變更為 <see langword="Modified" />。</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary vsli:raw="Sets the value of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to a null value.">將指定的 <see cref="T:System.Data.DataColumn" /> 的值設定為 Null 值。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">使用指定的新父 <see cref="T:System.Data.DataRow" />，設定 <see cref="T:System.Data.DataRow" /> 的父資料列。</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新的父 <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用指定的新父 <see cref="T:System.Data.DataRow" /> 和 <see cref="T:System.Data.DataRow" />，設定 <see cref="T:System.Data.DataRelation" /> 的父資料列。</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新的父 <see cref="T:System.Data.DataRow" />。</param>
      <param name="relation" vsli:raw="The relation &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的關聯 <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="One of the rows does not belong to a table">其中一個資料列不屬於資料表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the rows is &lt;see langword=&quot;null&quot; /&gt;.">其中一個資料列為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object.">關聯不屬於 <see cref="T:System.Data.DataRelationCollection" /> 物件 <see cref="T:System.Data.DataSet" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is not the table this row belongs to.">關聯的子 <see cref="T:System.Data.DataTable" /> 不是這個資料列所屬的資料表。</exception>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for which this row has a schema.">取得其中的這個資料列具有結構描述的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which this row belongs.">這個資料列所屬的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary vsli:raw="Describes an action performed on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">描述在 <see cref="T:System.Data.DataRow" /> 上執行的動作。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary vsli:raw="The row has been added to the table.">資料列已經加入至資料表。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary vsli:raw="The row has changed.">資料列已經變更。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary vsli:raw="The original and the current versions of the row have been changed.">資料列的原始和目前版本已經變更。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary vsli:raw="The original version of the row has been changed.">資料列的原始版本已經變更。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary vsli:raw="The changes to the row have been committed.">資料列的變更已經認可。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary vsli:raw="The row was deleted from the table.">資料列已經從資料表刪除。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary vsli:raw="The row has not changed.">資料列尚未變更。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary vsli:raw="The most recent change to the row has been rolled back.">資料列最近的變更已經復原。</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary vsli:raw="The &lt;see langword=&quot;DataRowBuilder&quot; /&gt; type supports the .NET infrastructure and is not intended to be used directly from your code.">
        <see langword="DataRowBuilder" /> 型別支援 .NET Framework 基礎結構，而且不適合直接從您的程式碼使用。</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)&quot; /&gt; events.">提供 <see cref="E:System.Data.DataTable.RowChanged" />、<see cref="E:System.Data.DataTable.RowChanging" />、<see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> 和 <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataRowChangeEventArgs" /> 類別的新執行個體。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action is occurring.">動作正在發生的所在 <see cref="T:System.Data.DataRow" />。</param>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.DataRowAction" /> 值。</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary vsli:raw="Gets the action that has occurred on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">取得已經在 <see cref="T:System.Data.DataRow" /> 上發生的動作。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.DataRowAction" /> 值。</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary vsli:raw="Gets the row upon which an action has occurred.">取得動作已經發生的所在資料列。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action has occurred.">動作已經發生的所在 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt;, and &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; events of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示處理 <see cref="E:System.Data.DataTable.RowChanging" /> 之 <see cref="E:System.Data.DataTable.RowChanged" />、<see cref="E:System.Data.DataTable.RowDeleting" />、<see cref="E:System.Data.DataTable.RowDeleted" /> 和 <see cref="T:System.Data.DataTable" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataRowChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary vsli:raw="Represents a collection of rows for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示 <see cref="T:System.Data.DataTable" /> 的資料列集合。</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; object.">將指定的 <see cref="T:System.Data.DataRow" /> 加入至 <see cref="T:System.Data.DataRowCollection" /> 物件中。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">要加入的 <see cref="T:System.Data.DataRow" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is null.">資料列為 null。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The row either belongs to another table or already belongs to this table.">資料列不是屬於另一個資料表，就是已經屬於這個資料表。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The addition invalidates a constraint.">新增會使條件約束 (Constraint) 失效。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The addition tries to put a null in a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">新增會嘗試將 Null 置於 <see cref="T:System.Data.DataColumn" /> 為 False 的 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 中。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary vsli:raw="Creates a row using specified values and adds it to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">使用指定的值建立資料列，並將它加入至 <see cref="T:System.Data.DataRowCollection" />。</summary>
      <param name="values" vsli:raw="The array of values that are used to create the new row.">用來建立新資料列之值的陣列。</param>
      <returns vsli:raw="The new row.">無。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">陣列大於資料表中的資料行數目。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value does not match its respective column type.">值不符合其個別的資料行型別。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">加入資料列會使條件約束失效。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Trying to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">嘗試將 Null 置於 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 為 False 的資料行中。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary vsli:raw="Clears the collection of all rows.">清除所有資料列的集合。</summary>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="A &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced on the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">在 <see cref="T:System.Data.ForeignKeyConstraint" /> 上強制使用 <see cref="T:System.Data.DataRowCollection" />。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether the primary key of any row in the collection contains the specified value.">取得值，指出集合中任何資料列的主索引鍵是否包含指定的值。</summary>
      <param name="key" vsli:raw="The value of the primary key to test for.">要測試的主索引鍵值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified primary key value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含具有指定主索引鍵值的 <see cref="T:System.Data.DataRow" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">資料表沒有主索引鍵。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary vsli:raw="Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.">取得值，指出集合中任何資料列的主索引鍵資料行是否包含在物件陣列中所指定的值。</summary>
      <param name="keys" vsli:raw="An array of primary key values to test for.">要測試的主索引鍵值的陣列。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified key values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.DataRowCollection" /> 包含具有指定索引鍵值的 <see cref="T:System.Data.DataRow" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">資料表沒有主索引鍵。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">將這個集合中所有的 <see cref="T:System.Data.DataRow" /> 物件複製到從指定目的端陣列索引開始的指定陣列中。</summary>
      <param name="ar" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">從 <see langword="DataRowCollection" /> 複製的項目之目的地一維陣列。 陣列必須有以零為起始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">陣列中以零為起始的索引，而且複製會從該位置開始。</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">將這個集合中所有的 <see cref="T:System.Data.DataRow" /> 物件複製到從指定目的端陣列索引開始的指定陣列中。</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">從 <see langword="DataRowCollection" /> 複製的項目之目的地一維陣列。 陣列必須有以零為起始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">陣列中以零為起始的索引，而且複製會從該位置開始。</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary vsli:raw="Gets the total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">取得此集合中的 <see cref="T:System.Data.DataRow" /> 物件總數。</summary>
      <returns vsli:raw="The total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">此集合中的 <see cref="T:System.Data.DataRow" /> 物件總數。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary vsli:raw="Gets the row specified by the primary key value.">取得主索引鍵值指定的資料列。</summary>
      <param name="key" vsli:raw="The primary key value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to find.">要尋找之 <see cref="T:System.Data.DataRow" /> 的主索引鍵值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />，其中包含指定的主索引鍵值，否則，如果 <see cref="T:System.Data.DataRowCollection" /> 中沒有主索引鍵值，就傳回 Null 值。</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">資料表沒有主索引鍵。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary vsli:raw="Gets the row that contains the specified primary key values.">取得包含指定主索引鍵值的資料列。</summary>
      <param name="keys" vsli:raw="An array of primary key values to find. The type of the array is &lt;see langword=&quot;Object&quot; /&gt;.">要尋找的主索引鍵值的陣列。 陣列的型別為 <see langword="Object" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 物件，其包含指定的主索引鍵值；如果 <see cref="T:System.Data.DataRowCollection" /> 中沒有主索引鍵值，則傳回 null 值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No row corresponds to that index value.">沒有資料列對應至該索引值。</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">資料表沒有主索引鍵。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">取得這個集合的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">這個集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">取得指定 <see cref="T:System.Data.DataRow" /> 物件的索引。</summary>
      <param name="row" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; to search for.">要搜尋的 <see langword="DataRow" />。</param>
      <returns vsli:raw="The zero-based index of the row, or -1 if the row is not found in the collection.">資料列的以零起始之索引；如果在集合中找不到此資料列，則為 -1。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Inserts a new row into the collection at the specified location.">將新的資料列插入集合的指定位置。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">要加入的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="pos" vsli:raw="The (zero-based) location in the collection where you want to add the &lt;see langword=&quot;DataRow&quot; /&gt;.">集合中要加入 <see langword="DataRow" /> 的 (以零起始) 位置。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;pos&quot; /&gt; is less than 0.">
        <paramref name="pos" /> 小於 0。</exception>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the row at the specified index.">取得在指定索引處的資料列。</summary>
      <param name="index" vsli:raw="The zero-based index of the row to return.">要傳回之資料列的以零起始的索引。</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定的 <see cref="T:System.Data.DataRow" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">索引值大於集合中項目的數目。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the collection.">從集合移除指定的 <see cref="T:System.Data.DataRow" />。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the row at the specified index from the collection.">從集合的指定索引處移除資料列。</summary>
      <param name="index" vsli:raw="The index of the row to remove.">要移除之資料列的索引。</param>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary vsli:raw="Returns a singleton instance of the &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt; class.">傳回 <see cref="T:System.Data.DataRowComparer`1" /> 類別的單一執行個體。</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">取得 <see cref="T:System.Data.DataRowComparer`1" /> 的單一執行個體。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">
        <see cref="T:System.Data.DataRowComparer`1" /> 的執行個體。</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects for equivalence by using value-based comparison.">使用數值比較，比較兩個 <see cref="T:System.Data.DataRow" /> 物件是否相等。</summary>
      <typeparam name="TRow" vsli:raw="The type of objects to be compared, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">要比較之物件的型別，通常為 <see cref="T:System.Data.DataRow" />。</typeparam>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">取得 <see cref="T:System.Data.DataRowComparer`1" /> 的單一執行個體。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">
        <see cref="T:System.Data.DataRowComparer`1" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects by using a column-by-column, value-based comparison.">使用數值比較，逐資料行比較兩個 <see cref="T:System.Data.DataRow" /> 物件。</summary>
      <param name="leftRow" vsli:raw="The first &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">要比較的第一個 <see cref="T:System.Data.DataRow" /> 物件。</param>
      <param name="rightRow" vsli:raw="The second &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">要比較的第二個 <see cref="T:System.Data.DataRow" /> 物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects have ordered sets of column values that are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這兩個 <see cref="T:System.Data.DataRow" /> 物件具有已排序的相等資料行值集合，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects are &lt;see langword=&quot;null&quot; /&gt;.">來源 <see cref="T:System.Data.DataRow" /> 物件的其中之一或兩者都是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary vsli:raw="Returns a hash code for the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">傳回指定之 <see cref="T:System.Data.DataRow" /> 物件的雜湊程式碼。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to compute the hash code from.">
        <see cref="T:System.Data.DataRow" />，要從中計算雜湊程式碼。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the hash code of the row.">
        <see cref="T:System.Int32" /> 值，表示資料列的雜湊程式碼。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">來源 <see cref="T:System.Data.DataRow" /> 物件不屬於 <see cref="T:System.Data.DataTable" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">來源 <see cref="T:System.Data.DataRow" /> 物件為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; class. This is a static class.">定義 <see cref="T:System.Data.DataRow" /> 類別的擴充方法。 這是靜態類別。</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)&quot; /&gt; method also supports nullable types.">提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> 方法也支援可為 null 的型別。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">輸入 <see cref="T:System.Data.DataColumn" /> 物件，指定要傳回其值的資料行。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">泛型參數，會指定資料行的傳回型別。</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt;.">
        <paramref name="T" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="column" /> 型別值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="column" /> 所指定的資料行不會出現在 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">null 值已指派給不可為 Null 的類型。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> 方法也支援可為 null 的型別。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">輸入 <see cref="T:System.Data.DataColumn" /> 物件，指定要傳回其值的資料行。</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">
        <see cref="T:System.Data.DataRowVersion" /> 列舉，會指定要傳回之資料行值的版本，例如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">泛型參數，會指定資料行的傳回型別。</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">
        <paramref name="T" /> 和 <paramref name="column" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="version" /> 型別值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="column" /> 所指定的資料行不會存在於 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">null 值已指派給不可為 Null 的類型。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)&quot; /&gt; method also supports nullable types.">提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> 方法也支援可為 null 的型別。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
      <param name="columnIndex" vsli:raw="The column index.">資料行索引。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">泛型參數，會指定資料行的傳回型別。</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">
        <paramref name="T" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="columnIndex" /> 型別值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="ordinal" /> 所指定的資料行不會存在於 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">null 值已指派給不可為 Null 的類型。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> 方法也支援可為 null 的型別。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to return the value of.">要傳回其值的資料行之以零起始的序數。</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">
        <see cref="T:System.Data.DataRowVersion" /> 列舉，會指定要傳回之資料行值的版本，例如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">泛型參數，會指定資料行的傳回型別。</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;ordinal&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">
        <paramref name="T" /> 和 <paramref name="ordinal" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="version" /> 型別值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="ordinal" /> 所指定的資料行不會存在於 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">null 值已指派給不可為 Null 的類型。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)&quot; /&gt; method also supports nullable types.">提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> 方法也支援可為 null 的型別。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">要傳回其值的資料行名稱。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">泛型參數，會指定資料行的傳回型別。</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt;.">
        <paramref name="T" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="columnName" /> 型別值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="columnName" /> 所指定的資料行不會出現在 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A &lt;see langword=&quot;null&quot; /&gt; value was assigned to a non-nullable type.">
        <see langword="null" /> 值已指派給不可為 null 的型別。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> 方法也支援可為 null 的型別。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">要傳回其值的資料行名稱。</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">
        <see cref="T:System.Data.DataRowVersion" /> 列舉，會指定要傳回之資料行值的版本，例如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">泛型參數，會指定資料行的傳回型別。</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">
        <paramref name="T" /> 和 <paramref name="columnName" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="version" /> 型別值。</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="columnName" /> 所指定的資料行不會存在於 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">null 值已指派給不可為 Null 的類型。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)&quot; /&gt; method also supports nullable types.">在 <see cref="T:System.Data.DataRow" /> 中，為指定的資料行設定新的值。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> 方法也支援可為 null 的型別。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specifies which row value to retrieve.">輸入 <see cref="T:System.Data.DataColumn" />，指定要擷取哪個資料列值。</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">指定之資料行的新資料列值，這個值的型別為 <paramref name="T" />。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">泛型參數，會指定資料行的實值型別。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; cannot be found.">找不到 <paramref name="column" /> 指定的資料行。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" /> 為 null。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">嘗試在已刪除的資料列上設定值時發生。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; the method is called on. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)&quot; /&gt; method also supports nullable types.">在 <see cref="T:System.Data.DataRow" /> (會針對它呼叫此方法) 中，為指定的資料行設定新的值。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> 方法也支援可為 null 的型別。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to set the value of.">要設定其值的資料行之以零起始的序數。</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">指定之資料行的新資料列值，這個值的型別為 <paramref name="T" />。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">泛型參數，會指定資料行的實值型別。</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">嘗試在已刪除的資料列上設定值時發生。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;ordinal&quot; /&gt; argument is out of range.">
        <paramref name="ordinal" /> 引數超出範圍。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could be not cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)&quot; /&gt; method also supports nullable types.">在 <see cref="T:System.Data.DataRow" /> 中，為指定的資料行設定新的值。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> 方法也支援可為 null 的型別。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
      <param name="columnName" vsli:raw="The name of the column to set the value of.">要設定其值的資料行名稱。</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">指定之資料行的新資料列值，這個值的型別為 <paramref name="T" />。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">泛型參數，會指定資料行的實值型別。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">找不到 <paramref name="columnName" /> 指定的資料行。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">嘗試在已刪除的資料列上設定值時發生。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary vsli:raw="Gets the state of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">取得 <see cref="T:System.Data.DataRow" /> 物件的狀態。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary vsli:raw="The row has been added to a &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">資料列已經加入至 <see cref="T:System.Data.DataRowCollection" />，並且尚未呼叫 <see cref="M:System.Data.DataRow.AcceptChanges" />。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary vsli:raw="The row was deleted using the &lt;see cref=&quot;M:System.Data.DataRow.Delete&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">使用 <see cref="M:System.Data.DataRow.Delete" /> 的 <see cref="T:System.Data.DataRow" /> 方法來刪除資料列。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary vsli:raw="The row has been created but is not part of any &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;. A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is in this state immediately after it has been created and before it is added to a collection, or if it has been removed from a collection.">資料列已建立，但它不屬於任何 <see cref="T:System.Data.DataRowCollection" />。 <see cref="T:System.Data.DataRow" /> 在已經建立後、加入至集合前，或如果已經從集合移除後，會立即處在這個狀態中。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary vsli:raw="The row has been modified and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">已經修改資料列，並且尚未呼叫 <see cref="M:System.Data.DataRow.AcceptChanges" />。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary vsli:raw="The row has not changed since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">資料列從上次呼叫 <see cref="M:System.Data.DataRow.AcceptChanges" /> 之後就未變更。</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary vsli:raw="Describes the version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">說明 <see cref="T:System.Data.DataRow" /> 的版本。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary vsli:raw="The row contains current values.">資料列包含目前的值。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary vsli:raw="The default version of &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;. For a &lt;see langword=&quot;DataRowState&quot; /&gt; value of &lt;see langword=&quot;Added&quot; /&gt;, &lt;see langword=&quot;Modified&quot; /&gt; or &lt;see langword=&quot;Deleted&quot; /&gt;, the default version is &lt;see langword=&quot;Current&quot; /&gt;. For a &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; value of &lt;see langword=&quot;Detached&quot; /&gt;, the version is &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowState" /> 的預設版本。 針對 <see langword="Added" />、<see langword="Modified" /> 或 <see langword="Deleted" /> 的 <see langword="DataRowState" /> 值，預設版本是 <see langword="Current" />。 針對 <see langword="Detached" /> 的 <see cref="T:System.Data.DataRowState" /> 值，版本是 <see langword="Proposed" />。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary vsli:raw="The row contains its original values.">資料列包含其原始值。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary vsli:raw="The row contains a proposed value.">資料列包含建議值。</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary vsli:raw="Represents a customized view of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">表示 <see cref="T:System.Data.DataRow" /> 的自訂檢視。</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary vsli:raw="Begins an edit procedure.">開始編輯程序。</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary vsli:raw="Cancels an edit procedure.">取消編輯程序。</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用指定的子 <see cref="T:System.Data.DataView" />，傳回子系 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataRelation" />。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">
        <see cref="T:System.Data.DataRelation" /> 物件。</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子系 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; and parent.">使用指定的 <see cref="T:System.Data.DataRelation" /> 和父系，傳回子系 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataView" />。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">
        <see cref="T:System.Data.DataRelation" /> 物件。</param>
      <param name="followParent" vsli:raw="The parent object.">父物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataTable" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">使用指定的子 <see cref="T:System.Data.DataView" /> 名稱，傳回子系 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataRelation" />。</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">含有 <see cref="T:System.Data.DataRelation" /> 名稱的字串。</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子系 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and parent.">使用指定的 <see cref="T:System.Data.DataView" /> 名稱和父代，傳回子系 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataRelation" />。</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">含有 <see cref="T:System.Data.DataRelation" /> 名稱的字串。</param>
      <param name="followParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the created child view in sync with the parent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 讓建立的子檢視與父系保持同步；否則為 <see langword="false" />。</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子系 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataTable" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to which this row belongs.">取得這個資料列所屬的 <see cref="T:System.Data.DataView" />。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataView&quot; /&gt; to which this row belongs.">這個資料列所屬的 <see langword="DataView" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary vsli:raw="Deletes a row.">刪除資料列。</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary vsli:raw="Commits changes to the underlying &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and ends the editing session that was begun with &lt;see cref=&quot;M:System.Data.DataRowView.BeginEdit&quot; /&gt;.  Use &lt;see cref=&quot;M:System.Data.DataRowView.CancelEdit&quot; /&gt; to discard the changes made to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">認可對基礎 <see cref="T:System.Data.DataRow" /> 的變更，並結束以 <see cref="M:System.Data.DataRowView.BeginEdit" /> 開始的編輯階段作業。  使用<see cref="M:System.Data.DataRowView.CancelEdit" />可放棄對<see cref="T:System.Data.DataRow" />所做的變更。</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is identical to the specified object.">取得值，指出目前的 <see cref="T:System.Data.DataRowView" /> 是否與指定的物件相同。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;object&quot; /&gt; is a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; and it returns the same row as the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="object" /> 是 <see cref="T:System.Data.DataRowView" />，且傳回與目前的 <see cref="T:System.Data.DataRowView" /> 相同的資料列，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary vsli:raw="Returns the hash code of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">傳回 <see cref="T:System.Data.DataRow" /> 物件的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code 1, which represents Boolean &lt;see langword=&quot;true&quot; /&gt; if the value of this instance is nonzero; otherwise the integer zero, which represents Boolean &lt;see langword=&quot;false&quot; /&gt;.">如果這個執行個體的值為非零值 (Nonzero)，則為表示布林值 (Boolean) <see langword="true" /> 的 32 位元帶正負號的整數 (Signed Integer) 雜湊程式碼 1，否則為表示布林值 <see langword="false" /> 的整數零。</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary vsli:raw="Indicates whether the row is in edit mode.">指示資料列是否處於編輯模式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is in edit mode; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />，表示資料列處於編輯模式；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is new.">指示 <see cref="T:System.Data.DataRowView" /> 是否為新的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is new; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />，表示資料列是新的；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value in a specified column.">取得或設定指定資料行中的值。</summary>
      <param name="ndx" vsli:raw="The column index.">資料行索引。</param>
      <returns vsli:raw="The value of the column.">資料行的值。</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">
        <see cref="P:System.Data.DataRowView.DataView" /> 不允許編輯且 <see cref="T:System.Data.DataRowView" /> 不是新的。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to that index value.">沒有對應至該索引值的資料行。</exception>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary vsli:raw="Gets or sets a value in a specified column.">取得或設定指定資料行中的值。</summary>
      <param name="property" vsli:raw="String that contains the specified column.">包含指定資料行的字串。</param>
      <returns vsli:raw="The value of the column.">資料行的值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A column with the specified name or relation was not found.&#xA;        &#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">找不到具有指定名稱或關聯性的資料行。
-或-
<see cref="P:System.Data.DataRowView.DataView" /> 不允許編輯且 <see cref="T:System.Data.DataRowView" /> 不是新的。</exception>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary vsli:raw="Event that is raised when a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; property is changed.">當 <see cref="T:System.Data.DataRowView" /> 屬性變更時所引發的事件。</summary>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed.">取得正在檢視的 <see cref="T:System.Data.DataRow" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed by the &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;.">正在由 <see cref="T:System.Data.DataRow" /> 檢視的 <see cref="T:System.Data.DataRowView" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary vsli:raw="Gets the current version description of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">取得 <see cref="T:System.Data.DataRow" /> 的目前版本描述。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. Possible values for the &lt;see cref=&quot;P:System.Data.DataRowView.RowVersion&quot; /&gt; property are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。 <see cref="P:System.Data.DataRowView.RowVersion" /> 屬性可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">傳回元件之這個執行個體的自訂屬性集合。</summary>
      <returns vsli:raw="An AttributeCollection containing the attributes for this object.">包含此物件之屬性的 AttributeCollection。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">傳回這個元件執行個體的類別名稱。</summary>
      <returns vsli:raw="The class name of this instance of a component.">這個元件執行個體的類別名稱。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">傳回這個元件執行個體的名稱。</summary>
      <returns vsli:raw="The name of this instance of a component.">元件的這個執行個體的名稱。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">傳回這個元件執行個體的類型轉換子。</summary>
      <returns vsli:raw="The type converter for this instance of a component.">這個元件執行個體的型別轉換子。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">傳回這個元件執行個體的預設事件。</summary>
      <returns vsli:raw="The default event for this instance of a component.">這個元件執行個體的預設事件。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">傳回這個元件執行個體的屬性。</summary>
      <returns vsli:raw="The default property for this instance of a component.">這個元件執行個體的預設屬性。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">傳回元件的這個執行個體之指定類型編輯器。</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">表示此物件編輯器的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">為此物件之編輯器的指定類型 <see cref="T:System.Object" />，如果找不到編輯器，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">傳回這個元件執行個體的事件。</summary>
      <returns vsli:raw="The events for this instance of a component.">這個元件執行個體的事件。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component with specified attributes.">傳回這個含指定屬性之元件執行個體的事件。</summary>
      <param name="attributes" vsli:raw="The attributes.">屬性</param>
      <returns vsli:raw="The events for this instance of a component.">這個元件執行個體的事件。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">傳回元件之這個執行個體的屬性。</summary>
      <returns vsli:raw="The properties for this instance of a component.">這個元件執行個體的屬性。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component with specified attributes.">傳回這個含指定屬性之元件執行個體的屬性。</summary>
      <param name="attributes" vsli:raw="The attributes.">屬性。</param>
      <returns vsli:raw="The properties for this instance of a component.">這個元件執行個體的屬性。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">傳回物件，包含指定的屬性描述項所描述的屬性。</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" />，代表要尋找其擁有者的屬性。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">
        <see cref="T:System.Object" />，代表指定之屬性的擁有者。</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary vsli:raw="Gets a message that describes any validation errors for the object.">取得說明物件驗證錯誤的訊息。</summary>
      <returns vsli:raw="The validation error on the object.">物件的驗證錯誤。</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary vsli:raw="Gets the error message for the property with the given name.">使用指定的名稱取得屬性的錯誤訊息。</summary>
      <param name="colName" vsli:raw="The name of the property whose error message to get.">要取得其錯誤訊息的屬性名稱。</param>
      <returns vsli:raw="The error message for the property. The default is an empty string (&quot;&quot;).">屬性的錯誤訊息。 預設為空字串 ("")。</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary vsli:raw="Represents an in-memory cache of data.">代表資料的記憶體中快取。</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataSet" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">初始化具有指定序列化資訊和內容之 <see cref="T:System.Data.DataSet" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">序列化或還原序列化物件所需的資料。</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">指定的序列化資料流的來源和目的端。</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">初始化 <see cref="T:System.Data.DataSet" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件。</param>
      <param name="ConstructSchema" vsli:raw="">布林值。</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with the given name.">使用指定名稱，初始化 <see cref="T:System.Data.DataSet" /> 類別的新執行個體。</summary>
      <param name="dataSetName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 的名稱。</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was loaded or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">認可從載入這個 <see cref="T:System.Data.DataSet" /> 物件或前一次呼叫 <see cref="M:System.Data.DataSet.AcceptChanges" /> 以來，對該物件做的所有變更。</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">開始對表單或另一個元件所使用的 <see cref="T:System.Data.DataSet" /> 進行初始化作業。 初始化發生於執行階段。</summary>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary vsli:raw="Gets or sets a value indicating whether string comparisons within &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects are case-sensitive.">取得或設定值，指出在 <see cref="T:System.Data.DataTable" /> 物件中的字串比較是否為區分大小寫。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if string comparisons are case-sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果字串比較區分大小寫, 則為,否則為<see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; of any data by removing all rows in all tables.">移除所有資料表中的資料列，以清除任何資料的 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary vsli:raw="Copies the structure of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas, relations, and constraints. Does not copy any data.">複製 <see cref="T:System.Data.DataSet" /> 的結構，包括所有 <see cref="T:System.Data.DataTable" /> 結構描述、關聯和條件約束。 不要複製任何資料。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, but none of the data.">具有與目前的 <see cref="T:System.Data.DataSet" /> 相同結構描述之新 <see cref="T:System.Data.DataSet" />，但是沒有資料。</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">複製這個 <see cref="T:System.Data.DataSet" /> 的結構和資料。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same structure (table schemas, relations, and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">新的 <see cref="T:System.Data.DataSet" />，具有與這個 <see cref="T:System.Data.DataSet" /> 相同的結構 (資料表結構描述、關聯和條件約束) 和資料。  
   
 如果這些類別已形成子類別，則複本也會屬於相同的子類別。</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, in the same sequence as the tables appear in the &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; collection.">傳回 <see cref="T:System.Data.DataTableReader" />，每個 <see cref="T:System.Data.DataTable" /> 有一個結果集，順序與資料表出現在 <see cref="P:System.Data.DataSet.Tables" /> 集合中的順序相同。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" />，包含一個或多個結果集，對應於包含在來源 <see cref="T:System.Data.DataTable" /> 之中的 <see cref="T:System.Data.DataSet" /> 執行個體。</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">傳回 <see cref="T:System.Data.DataTableReader" />，每一個 <see cref="T:System.Data.DataTable" /> 有一個結果集。</summary>
      <param name="dataTables" vsli:raw="An array of DataTables providing the order of the result sets to be returned in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">DataTable 的陣列提供要在 <see cref="T:System.Data.DataTableReader" /> 中傳回的結果集順序。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The returned result sets are in the order specified by the &lt;paramref name=&quot;dataTables&quot; /&gt; parameter.">
        <see cref="T:System.Data.DataTableReader" />，包含一個或多個結果集，對應於包含在來源 <see cref="T:System.Data.DataTable" /> 之中的 <see cref="T:System.Data.DataSet" /> 執行個體。 傳回的結果集的順序是 <paramref name="dataTables" /> 參數所指定的順序。</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary vsli:raw="Gets or sets the name of the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">取得或設定目前 <see cref="T:System.Data.DataSet" /> 的名稱。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 的名稱。</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary vsli:raw="Gets a custom view of the data contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to allow filtering, searching, and navigating using a custom &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">取得 <see cref="T:System.Data.DataSet" /> (它允許使用自訂的 <see cref="T:System.Data.DataViewManager" /> 進行篩選、搜尋和巡覽) 所包含的資料之自訂檢視。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">
        <see cref="T:System.Data.DataViewManager" /> 物件。</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">判斷 <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> 的 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，在遠端還原序列化案例中，以 <see langword="DataSet" /> 的保護建構函式 <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 叫用。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，在遠端還原序列化案例中，以 <see langword="DataSet" /> 的保護建構函式 <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 叫用。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">
        <see cref="T:System.Data.SchemaSerializationMode" /> 列舉，指出結構描述資訊是否已從承載中省略。</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">判斷 <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> 的 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance that is passed during deserialization of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> 執行個體，是在 <see cref="T:System.Data.DataSet" /> 的還原序列化期間傳遞的。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">
        <see cref="T:System.Data.SchemaSerializationMode" /> 列舉，指出結構描述資訊是否已從承載中省略。</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">結束對表單或另一個元件所使用的 <see cref="T:System.Data.DataSet" /> 進行初始化作業。 初始化發生於執行階段。</summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary vsli:raw="Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.">取得或設定值，指出在嘗試任何更新作業時，是否遵循條件約束 (Constraint) 規則。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if rules are enforced; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />如果強制執行規則,否則為<see langword="false" />。 預設為 <see langword="true" />。</returns>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enforced.">一個或多個條件約束無法強制遵循。</exception>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information associated with the &lt;see langword=&quot;DataSet&quot; /&gt;.">取得與 <see langword="DataSet" /> 相關聯的自訂使用者資訊集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; with all custom user information.">具有所有自訂使用者資訊的 <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that contains all changes made to it since it was loaded or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was last called.">取得 <see cref="T:System.Data.DataSet" /> (包含從載入它或前一次呼叫 <see cref="M:System.Data.DataSet.AcceptChanges" /> 以來所做的所有變更) 的複本。</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it and later be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no changed rows are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">這個 <see cref="T:System.Data.DataSet" /> 所產生變更的複本，可在其上執行動作，並且稍後使用 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 合併回來。 如果找不到已變更的資料列，則方法會傳回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">取得 <see cref="T:System.Data.DataSet" /> (包含從前一次載入它或呼叫 <see cref="M:System.Data.DataSet.AcceptChanges" /> 以來所做的所有變更) 的複本 (由 <see cref="T:System.Data.DataRowState" /> 篩選)。</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.DataRowState" /> 值。</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it, and subsequently be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">篩選過的 <see cref="T:System.Data.DataSet" /> 複本，可以在其上執行動作，然後在使用 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 時合併回來。 如果找不到所需的 <see cref="T:System.Data.DataRowState" /> 的資料列，則方法會傳回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Gets a copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; for the DataSet.">取得資料集之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的複本。</summary>
      <param name="schemaSet" vsli:raw="The specified schema set.">指定的結構描述集。</param>
      <returns vsli:raw="A copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的複本。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">以序列化 <see cref="T:System.Data.DataSet" /> 所需的資料，填入序列化資訊物件。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，保留與 <see cref="T:System.Data.DataSet" /> 關聯的序列化資料。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，含有與 <see cref="T:System.Data.DataSet" /> 關聯的序列資料流的來源和目的端。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary vsli:raw="Returns a serializable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">傳回可序列化的 <see cref="T:System.Xml.Schema.XmlSchema" /> 執行個體。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 執行個體。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Deserializes the table data from the binary or XML stream.">從二進位或 XML 資料流還原序列化資料表資料。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 執行個體。</param>
      <param name="context" vsli:raw="The streaming context.">資料流內容。</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary vsli:raw="Returns the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">傳回儲存於 <see cref="T:System.Data.DataSet" /> 的資料之 XML 表示。</summary>
      <returns vsli:raw="A string that is a representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">字串，儲存於 <see cref="T:System.Data.DataSet" /> 的資料表示。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary vsli:raw="Returns the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">為儲存於 <see cref="T:System.Data.DataSet" /> 的資料之 XML 表示，傳回 XML 結構描述。</summary>
      <returns vsli:raw="String that is the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">字串，為儲存於 <see cref="T:System.Data.DataSet" /> 的資料之 XML 表示的 XML 結構描述。</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows.">取得值，表示 <see cref="T:System.Data.DataSet" /> 是否包含變更，包括加入、刪除或修改的資料列。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <see cref="T:System.Data.DataSet" /> 包含變更，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">取得值，指出 <see cref="T:System.Data.DataSet" /> 是否包含變更，包括加入、刪除或修改的資料列 (由 <see cref="T:System.Data.DataRowState" /> 篩選)。</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.DataRowState" /> 值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <see cref="T:System.Data.DataSet" /> 包含變更，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">取得值，指出這個 <see cref="T:System.Data.DataTable" /> 內的 <see cref="T:System.Data.DataSet" /> 物件中是否有任何一個有錯誤。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any table contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果有任何資料表包含錯誤, 則為,否則為<see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">從指定的 <see cref="T:System.IO.Stream" />，將 XML 結構描述套用至 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="stream" vsli:raw="The &lt;see langword=&quot;Stream&quot; /&gt; from which to read the schema.">要從其中讀取結構描述的來源 <see langword="Stream" />。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">要從結構描述 (Schema) 推斷中排除之命名空間統一資源識別元 (URI) 字串的陣列。</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">從指定的 <see cref="T:System.IO.TextReader" />，將 XML 結構描述套用至 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema.">要從其中讀取結構描述的來源 <see langword="TextReader" />。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">要從結構描述 (Schema) 推斷中排除之命名空間統一資源識別元 (URI) 字串的陣列。</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified file to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">從指定的檔案，將 XML 結構描述套用至 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="fileName" vsli:raw="The name of the file (including the path) from which to read the schema.">要從中讀取結構描述的來源檔案名稱 (包含路徑)。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">要從結構描述 (Schema) 推斷中排除之命名空間統一資源識別元 (URI) 字串的陣列。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 並不是設定為 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">從指定的 <see cref="T:System.Xml.XmlReader" />，將 XML 結構描述套用至 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XMLReader&quot; /&gt; from which to read the schema.">要從其中讀取結構描述的來源 <see langword="XMLReader" />。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">要從結構描述 (Schema) 推斷中排除之命名空間統一資源識別元 (URI) 字串的陣列。</param>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">發生於 <see cref="T:System.Data.DataSet" /> 初始化之後。</summary>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary vsli:raw="Deserialize all of the tables data of the DataSet from the binary or XML stream.">從二進位或 XML 資料流還原序列化資料集的所有資料表資料。</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Inspects the format of the serialized representation of the &lt;see langword=&quot;DataSet&quot; /&gt;.">檢查 <see langword="DataSet" /> 之序列化表示的格式。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; represents a &lt;see langword=&quot;DataSet&quot; /&gt; serialized in its binary format, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 表示以二進位格式序列化的 <see langword="true" />，則為 <see langword="DataSet" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">取得值，指出 <see cref="T:System.Data.DataSet" /> 是否已初始化。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示元件已完成初始化，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">使用所提供的 <see cref="T:System.Data.DataSet" />，以資料來源的值，填入 <see cref="T:System.Data.IDataReader" />，使用 <see cref="T:System.Data.DataTable" /> 執行個體的陣列，以提供結構描述和命名空間資訊。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" />，提供一個或多個結果集。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">來自 <see cref="T:System.Data.LoadOption" /> 列舉的值，表示已經在 <see cref="T:System.Data.DataTable" /> 之內 <see cref="T:System.Data.DataSet" /> 執行個體中的資料列如何與共用相同主索引鍵的傳入資料列結合。</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information. Each of these tables must be a member of the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 執行個體的陣列，<see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> 方法從中擷取名稱和命名空間資訊。 這些資料表的每一個都必須為這個 <see cref="T:System.Data.DataTableCollection" /> 所包含 <see cref="T:System.Data.DataSet" /> 的成員。</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">使用所提供的 <see cref="T:System.Data.DataSet" />，以資料來源的值，填入 <see cref="T:System.Data.IDataReader" />，使用 <see cref="T:System.Data.DataTable" /> 執行個體的陣列，以提供結構描述和命名空間資訊。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" />，提供一個或多個結果集。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">來自 <see cref="T:System.Data.LoadOption" /> 列舉的值，表示已經在 <see cref="T:System.Data.DataTable" /> 之內 <see cref="T:System.Data.DataSet" /> 執行個體中的資料列如何與共用相同主索引鍵的傳入資料列結合。</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">載入資料時發生錯誤，要呼叫的 <see cref="T:System.Data.FillErrorEventHandler" /> 委派。</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information.">
        <see cref="T:System.Data.DataTable" /> 執行個體的陣列，<see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> 方法從中擷取名稱和命名空間資訊。</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of strings to supply the names for the tables within the &lt;see langword=&quot;DataSet&quot; /&gt;.">使用所提供的 <see cref="T:System.Data.DataSet" />，以資料來源的值填入 <see cref="T:System.Data.IDataReader" />，使用字串的陣列來提供 <see langword="DataSet" /> 之內的資料表名稱。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" />，提供一個或多個結果集。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see langword=&quot;DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">來自 <see cref="T:System.Data.LoadOption" /> 列舉的值，表示已經在 <see cref="T:System.Data.DataTable" /> 之內 <see langword="DataSet" /> 執行個體中的資料列如何與共用相同主索引鍵的傳入資料列結合。</param>
      <param name="tables" vsli:raw="An array of strings, from which the &lt;see langword=&quot;Load&quot; /&gt; method retrieves table name information.">字串的陣列，<see langword="Load" /> 方法從中擷取資料表名稱資訊。</param>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">取得或設定用來在資料表中比較字串的地區設定 (Locale) 資訊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Globalization.CultureInfo" />，包含使用者電腦地區設定的資料。 預設為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">將 <see cref="T:System.Data.DataRow" /> 物件的陣列合併到目前的 <see cref="T:System.Data.DataSet" /> 中。</summary>
      <param name="rows" vsli:raw="The array of &lt;see langword=&quot;DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">
        <see langword="DataRow" /> 物件的陣列，將合併至 <see langword="DataSet" />。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">將 <see cref="T:System.Data.DataRow" /> 物件的陣列合併到目前的 <see cref="T:System.Data.DataSet" /> 中，根據給定參數保留或忽略 <see langword="DataSet" /> 中的變更，並處理不相容的結構描述。</summary>
      <param name="rows" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列，將合併至 <see langword="DataSet" />。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要保留 <see langword="DataSet" /> 中的變更，則為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;.">將指定的 <see cref="T:System.Data.DataSet" /> 及其結構描述合併到目前的 <see langword="DataSet" /> 中。</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataSet" />，其資料及結構描述將被合併。</param>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enabled.">一個或多個條件約束無法啟用。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding any changes in this &lt;see langword=&quot;DataSet&quot; /&gt; according to the given argument.">將指定的 <see cref="T:System.Data.DataSet" /> 及其結構描述合併到目前的 <see langword="DataSet" /> 中，根據給定參數保留或忽略這個 <see langword="DataSet" /> 中的任何變更。</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataSet" />，其資料及結構描述將被合併。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要保留目前 <see langword="DataSet" /> 中的變更，則為 <see langword="true" />；否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema with the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the current &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">將指定的 <see cref="T:System.Data.DataSet" /> 及其結構描述與目前的 <see langword="DataSet" /> 合併，根據給定參數保留或忽略目前 <see langword="DataSet" /> 中的變更，並處理不相容的結構描述。</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataSet" />，其資料及結構描述將被合併。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要保留目前 <see langword="DataSet" /> 中的變更，則為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">將指定的 <see cref="T:System.Data.DataTable" /> 及其結構描述合併到目前的 <see cref="T:System.Data.DataSet" /> 中。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose data and schema will be merged.">
        <see cref="T:System.Data.DataTable" />，其資料及結構描述將被合併。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;table&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="table" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">將指定的 <see cref="T:System.Data.DataTable" /> 及其結構描述合併到目前的 <see langword="DataSet" />，根據給定引數保留或忽略 <see langword="DataSet" /> 中的變更，並處理不相容的結構描述。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataTable" />，其資料及結構描述將被合併。</param>
      <param name="preserveChanges" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</param>
      <param name="missingSchemaAction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要保留 <see langword="DataSet" /> 中的變更，則為 <see langword="true" />；否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary vsli:raw="Occurs when a target and source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; have the same primary key value, and &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; is set to true.">當目標和來源 <see cref="T:System.Data.DataRow" /> 有相同的主索引鍵值，且 <see cref="P:System.Data.DataSet.EnforceConstraints" /> 設定為 True 時發生。</summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">取得或設定 <see cref="T:System.Data.DataSet" /> 的命名空間。</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 的命名空間。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">命名空間已經有資料。</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)&quot; /&gt; event.">引發 <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> 事件。</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object is removed from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">發生於從 <see cref="T:System.Data.DataRelation" /> 移除 <see cref="T:System.Data.DataTable" /> 時。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; being removed.">正在移除的 <see cref="T:System.Data.DataRelation" />。</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is removed from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">發生於從 <see cref="T:System.Data.DataTable" /> 移除 <see cref="T:System.Data.DataSet" /> 時。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being removed.">正在移除的 <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">取得或設定建立 <see cref="T:System.Data.DataSet" /> 命名空間別名的 XML 前置詞。</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; namespace.">
        <see cref="T:System.Data.DataSet" /> 命名空間的 XML 前置詞。</returns>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary vsli:raw="Sends a notification that the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; property is about to change.">傳送一個指定的 <see cref="T:System.Data.DataSet" /> 屬性即將變更的告知。</summary>
      <param name="name" vsli:raw="The name of the property that is about to change.">將要變更的屬性名稱。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" />，將 XML 結構描述和資料讀入 <see cref="T:System.IO.Stream" />。</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">衍生自 <see cref="T:System.IO.Stream" /> 的物件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" />，用來讀取資料。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.IO.Stream" />，將 XML 結構描述和資料讀入 <see cref="T:System.Data.XmlReadMode" />。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">要讀取的來源 <see cref="T:System.IO.Stream" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlReadMode" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" />，用來讀取資料。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" />，將 XML 結構描述和資料讀入 <see cref="T:System.IO.TextReader" />。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema and data.">要從中讀取結構描述和資料的 <see langword="TextReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" />，用來讀取資料。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.IO.TextReader" />，將 XML 結構描述和資料讀入 <see cref="T:System.Data.XmlReadMode" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">要讀取的來源 <see cref="T:System.IO.TextReader" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlReadMode" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" />，用來讀取資料。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file.">使用指定的檔案，將 XML 結構描述和資料讀入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">要讀取的檔案名稱 (包括路徑)。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" />，用來讀取資料。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 並不是設定為 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">使用指定的檔案和 <see cref="T:System.Data.DataSet" />，將 XML 結構描述和資料讀入 <see cref="T:System.Data.XmlReadMode" />。</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">要讀取的檔案名稱 (包括路徑)。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlReadMode" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" />，用來讀取資料。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 並不是設定為 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" />，將 XML 結構描述和資料讀入 <see cref="T:System.Xml.XmlReader" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">要讀取的來源 <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" />，用來讀取資料。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Xml.XmlReader" />，將 XML 結構描述和資料讀入 <see cref="T:System.Data.XmlReadMode" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">要讀取的來源 <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlReadMode" /> 值。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" />，用來讀取資料。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">從指定的 <see cref="T:System.IO.Stream" />，將 XML 結構描述讀入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">要讀取的來源 <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">從指定的 <see cref="T:System.IO.TextReader" />，將 XML 結構描述讀入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">要讀取的來源 <see cref="T:System.IO.TextReader" />。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads the XML schema from the specified file into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">從指定的檔案，將 XML 結構描述讀入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) from which to read.">要讀取的來源檔案名稱 (包括路徑)。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 並不是設定為 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">從指定的 <see cref="T:System.Xml.XmlReader" />，將 XML 結構描述讀入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">要讀取的來源 <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Ignores attributes and returns an empty DataSet.">忽略屬性並傳回空白資料集。</summary>
      <param name="reader" vsli:raw="The specified XML reader.">指定的 XML 讀取器。</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary vsli:raw="Rolls back all the changes made to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was created, or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">復原從建立 <see cref="T:System.Data.DataSet" /> 物件或前一次呼叫 <see cref="M:System.Data.DataSet.AcceptChanges" /> 以來，對該物件做的所有變更。</summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary vsli:raw="Gets the collection of relations that link tables and allow navigation from parent tables to child tables.">取得關聯的集合，這些關聯會連結資料表，並允許從父資料表巡覽至子資料表。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">包含 <see cref="T:System.Data.DataRelationCollection" /> 物件集合的 <see cref="T:System.Data.DataRelation" />。 如果沒有任何 <see cref="T:System.Data.DataRelation" /> 物件存在，則會傳回空的集合。</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that's used during remoting.">取得或設定遠端作業中使用之 <see cref="T:System.Data.SerializationFormat" /> 的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">
        <see cref="T:System.Data.SerializationFormat" /> 物件。</returns>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary vsli:raw="Clears all tables and removes all relations, foreign constraints, and tables from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. Subclasses should override &lt;see cref=&quot;M:System.Data.DataSet.Reset&quot; /&gt; to restore a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to its original state.">清除所有資料表，並從 <see cref="T:System.Data.DataSet" /> 中移除所有關聯、外部條件約束和資料表。 子類別應該覆寫 <see cref="M:System.Data.DataSet.Reset" /> 以還原 <see cref="T:System.Data.DataSet" /> 到它的原始狀態。</summary>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">取得或設定 <see cref="T:System.Data.SchemaSerializationMode" /> 的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.SchemaSerializationMode" /> 的 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Relations&quot; /&gt; property should be persisted.">取得值，表示是否應該保存 <see cref="P:System.Data.DataSet.Relations" /> 屬性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; property should be persisted.">取得值，表示是否應該保存 <see cref="P:System.Data.DataSet.Tables" /> 屬性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">取得或設定 <see cref="T:System.ComponentModel.ISite" /> 的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> 的 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IListSource.GetList" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IListSource.GetList" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary vsli:raw="Gets the collection of tables contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">取得包含在 <see cref="T:System.Data.DataSet" /> 中的資料表的集合。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataTableCollection" />，這個 <see cref="T:System.Data.DataSet" /> 所包含的集合。 如果沒有任何 <see cref="T:System.Data.DataTable" /> 物件存在，則會傳回空的集合。</returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" />，寫入 <see cref="T:System.IO.Stream" /> 的目前資料。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">用來寫入檔案的 <see cref="T:System.IO.Stream" /> 物件。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.IO.Stream" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">用來寫入檔案的 <see cref="T:System.IO.Stream" /> 物件。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" />，寫入 <see cref="T:System.IO.TextWriter" /> 的目前資料。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">用來寫入的 <see cref="T:System.IO.TextWriter" /> 物件。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.IO.TextWriter" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object used to write the document.">用來寫入文件的 <see cref="T:System.IO.TextWriter" /> 物件。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file.">將 <see cref="T:System.Data.DataSet" /> 的目前資料寫入指定的檔案。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">要寫入的目的檔案名稱 (包括路徑)。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 並不是設定為 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料 (並選擇性寫入結構描述) 至指定的檔案。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">要寫入的目的檔案名稱 (包括路徑)。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 並不是設定為 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將 <see cref="T:System.Data.DataSet" /> 的目前資料寫入指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">要用來寫入的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Xml.XmlWriter" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">要用來寫入的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">將 <see cref="T:System.Data.DataSet" /> 結構做為 XML 結構描述寫入指定的 <see cref="T:System.IO.Stream" /> 物件。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">用來寫入檔案的 <see cref="T:System.IO.Stream" /> 物件。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">將 <see cref="T:System.Data.DataSet" /> 結構做為 XML 結構描述寫入指定的 <see cref="T:System.IO.Stream" /> 物件。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to write to.">要寫入的目標 <see cref="T:System.IO.Stream" /> 物件。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">用於將 <see cref="T:System.Type" /> 轉換成字串的委派。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object.">將 <see cref="T:System.Data.DataSet" /> 結構做為 XML 結構描述寫入指定的 <see cref="T:System.IO.TextWriter" /> 物件。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">用來寫入的 <see cref="T:System.IO.TextWriter" /> 物件。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">將 <see cref="T:System.Data.DataSet" /> 結構當做 XML 結構描述寫入至指定的 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object to write to.">要寫入的目標 <see cref="T:System.IO.TextWriter" /> 物件。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">用於將 <see cref="T:System.Type" /> 轉換成字串的委派。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">將 <see cref="T:System.Data.DataSet" /> 結構做為 XML 結構描述寫入檔案。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">要寫入的目的檔案名稱 (包括路徑)。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 並不是設定為 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">將 <see cref="T:System.Data.DataSet" /> 結構做為 XML 結構描述寫入檔案。</summary>
      <param name="fileName" vsli:raw="The name of the file to write to.">要寫入的檔案名稱。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">用於將 <see cref="T:System.Type" /> 轉換成字串的委派。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">將 <see cref="T:System.Data.DataSet" /> 結構做為 XML 結構描述寫入 <see cref="T:System.Xml.XmlWriter" /> 物件。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">要寫入的目標 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">將 <see cref="T:System.Data.DataSet" /> 結構當做 XML 結構描述寫入至指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write to.">要寫入的目標 <see cref="T:System.Xml.XmlWriter" /> 物件。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">用於將 <see cref="T:System.Type" /> 轉換成字串的委派。</param>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary vsli:raw="Describes the serialization format for &lt;see cref=&quot;T:System.DateTime&quot; /&gt; columns in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">描述 <see cref="T:System.DateTime" /> 中 <see cref="T:System.Data.DataSet" /> 資料行的序列化格式。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Local. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.">
        <see langword="DateTime" /> 一定都是以 Local 存放。 如果 <see cref="F:System.Data.DataSetDateTime.Utc" /> 或 <see cref="F:System.Data.DataSetDateTime.Unspecified" /> 是指定給這個模式中的資料行，它是先轉換成 Local。 這個模式中的序列化一定都是以 Local 執行。 在序列化過程中有位移 (Offset)。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode does not cause an offset.">
        <see langword="DateTime" /> 一定都是以 Unspecified 存放。 如果 <see cref="F:System.Data.DataSetDateTime.Local" /> 或 <see cref="F:System.Data.DataSetDateTime.Utc" /> 是指定給這個模式中的資料行，它是先轉換成 <see cref="F:System.Data.DataSetDateTime.Unspecified" />。 這個模式中的序列化不會產生位移。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; during serialization.">
        <see langword="DateTime" /> 以 Unspecified 存放。 如果 <see cref="F:System.Data.DataSetDateTime.Local" /> 或 <see cref="F:System.Data.DataSetDateTime.Utc" /> 是指定給這個模式中的資料行，它是先轉換成 <see cref="F:System.Data.DataSetDateTime.Unspecified" />。 這個模式中的序列化會產生位移。 這是預設的行為，而且是回溯相容。 這個選項在儲存體中應該視為 Unspecified，但是在序列化過程中，套用類似於 <see cref="F:System.Data.DataSetDateTime.Local" /> 的位移。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Universal Coordinated Time (UTC). If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see langword=&quot;Utc&quot; /&gt; format. Serialization in this mode is always performed in &lt;see langword=&quot;Utc&quot; /&gt;. There is no offset during serialization.">
        <see langword="DateTime" /> 是以 Universal Coordinated Time (UTC) 時間存放。 如果 <see cref="F:System.Data.DataSetDateTime.Local" /> 或 <see cref="F:System.Data.DataSetDateTime.Unspecified" /> 是指定給這個模式中的資料行，它是先轉換成 <see langword="Utc" /> 格式。 這個模式中的序列化一定都是以 <see langword="Utc" /> 執行。 在序列化過程中沒有位移。</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary vsli:raw="Marks a property, event, or extender with a description. Visual designers can display this description when referencing the member.">使用描述來標記屬性、事件或擴充項 (Extender)。 視覺化設計工具在參考成員時可以顯示這個描述。</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSysDescriptionAttribute&quot; /&gt; class using the specified description string.">使用指定的描述字串來初始化 <see cref="T:System.Data.DataSysDescriptionAttribute" /> 類別的新執行個體。</summary>
      <param name="description" vsli:raw="The description string.">描述字串。</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary vsli:raw="Gets the text for the description.">為描述取得文字。</summary>
      <returns vsli:raw="The description string.">描述字串。</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary vsli:raw="Represents one table of in-memory data.">表示記憶體中資料的一個資料表。</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with no arguments.">不使用引數來初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with serialized data.">使用 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">序列化或還原序列化物件所需的資料。</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">指定的序列化資料流的來源和目的端。</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with the specified table name.">使用指定的資料表名稱，初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">要提供資料表的名稱。 如果 <paramref name="tableName" /> 是 <see langword="null" /> 或空字串，則會在加入至 <see cref="T:System.Data.DataTableCollection" /> 時提供預設名稱。</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class using the specified table name and namespace.">使用指定的資料表名稱和命名空間，初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">要提供資料表的名稱。 如果 <paramref name="tableName" /> 是 <see langword="null" /> 或空字串，則會在加入至 <see cref="T:System.Data.DataTableCollection" /> 時提供預設名稱。</param>
      <param name="tableNamespace" vsli:raw="The namespace for the XML representation of the data stored in the &lt;see langword=&quot;DataTable&quot; /&gt;.">儲存於 <see langword="DataTable" /> 中資料之 XML 表示的命名空間。</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this table since the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">認可自前一次呼叫 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以來對這個資料表所做的所有變更。</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">開始對表單或另一個元件所使用的 <see cref="T:System.Data.DataTable" /> 進行初始化作業。 初始化發生於執行階段。</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary vsli:raw="Turns off notifications, index maintenance, and constraints while loading data.">載入資料時關閉告知、索引維護和條件約束。</summary>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary vsli:raw="Indicates whether string comparisons within the table are case-sensitive.">指示字串比較在資料表中是否區分大小寫。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the comparison is case-sensitive; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is set to the parent &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;P:System.Data.DataSet.CaseSensitive&quot; /&gt; property, or &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; was created independently of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">如果比較區分大小寫，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值會設定為父 <see cref="T:System.Data.DataSet" /> 物件的 <see cref="P:System.Data.DataSet.CaseSensitive" /> 屬性，或者，如果 <see cref="T:System.Data.DataTable" /> 是獨自建立而無關 <see cref="T:System.Data.DataSet" /> 時，則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary vsli:raw="Gets the collection of child relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">為這個 <see cref="T:System.Data.DataTable" /> 取得子關聯的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the child relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataRelationCollection" />，其中包含資料表的子關聯。 如果沒有任何 <see cref="T:System.Data.DataRelation" /> 物件存在，則會傳回空的集合。</returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of all data.">清除所有資料的 <see cref="T:System.Data.DataTable" />。</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary vsli:raw="Clones the structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas and constraints.">複製 (Clone) <see cref="T:System.Data.DataTable" /> 的結構，包括所有 <see cref="T:System.Data.DataTable" /> 結構描述和條件約束。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新的 <see cref="T:System.Data.DataTable" />，具有與目前 <see cref="T:System.Data.DataTable" /> 相同的結構描述。</returns>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary vsli:raw="Occurs after a value has been changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">發生在值已經為 <see cref="T:System.Data.DataColumn" /> 中指定的 <see cref="T:System.Data.DataRow" /> 變更之後。</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary vsli:raw="Occurs when a value is being changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">發生在值正在為 <see cref="T:System.Data.DataColumn" /> 中指定的 <see cref="T:System.Data.DataRow" /> 變更之後。</summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary vsli:raw="Gets the collection of columns that belong to this table.">取得屬於這個資料表的資料行集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataColumnCollection" />，其中包含資料表的 <see cref="T:System.Data.DataColumn" /> 物件集合。 如果沒有任何 <see cref="T:System.Data.DataColumn" /> 物件存在，則會傳回空的集合。</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary vsli:raw="Computes the given expression on the current rows that pass the filter criteria.">計算在傳遞篩選準則的目前資料列上的指定運算式。</summary>
      <param name="expression" vsli:raw="The expression to compute.">要計算的運算式。</param>
      <param name="filter" vsli:raw="The filter to limit the rows that evaluate in the expression.">要限制在運算式中評估之資料列的篩選條件。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;, set to the result of the computation. If the expression evaluates to null, the return value will be &lt;see cref=&quot;F:System.DBNull.Value&quot; /&gt;.">
        <see cref="T:System.Object" />，設定為計算的結果。 若運算式評估為 Null，傳回值會是 <see cref="F:System.DBNull.Value" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary vsli:raw="Gets the collection of constraints maintained by this table.">取得這個資料表所維護的條件約束 (Constraint) 集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects exist.">
        <see cref="T:System.Data.ConstraintCollection" />，其中包含資料表的 <see cref="T:System.Data.Constraint" /> 物件集合。 如果沒有任何 <see cref="T:System.Data.Constraint" /> 物件存在，則會傳回空的集合。</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">複製這個 <see cref="T:System.Data.DataTable" /> 的結構和資料。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure (table schemas and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA; If these classes have been derived, the copy will also be of the same derived classes.  &#xA;  &#xA; &lt;see cref=&quot;M:System.Data.DataTable.Copy&quot; /&gt; creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure and data as the original &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. To copy the structure to a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, but not the data, use &lt;see cref=&quot;M:System.Data.DataTable.Clone&quot; /&gt;.">新的 <see cref="T:System.Data.DataTable" />，具有與這個 <see cref="T:System.Data.DataTable" /> 相同的結構 (資料表結構描述和條件約束) 和資料。  
如果這些類別已形成子類別，則複本也會屬於相同的子類別。  
 <see cref="M:System.Data.DataTable.Copy" /> 會建立與原始 <see cref="T:System.Data.DataTable" /> 具有相同結構和資料的新 <see cref="T:System.Data.DataTable" />。 若要將結構複製到新的 <see cref="T:System.Data.DataTable" />，但是不複製資料，請使用 <see cref="M:System.Data.DataTable.Clone" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; corresponding to the data within this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">傳回對應於這個 <see cref="T:System.Data.DataTableReader" /> 之中資料的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one result set, corresponding to the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance.">
        <see cref="T:System.Data.DataTableReader" />，其中包含一個結果集，對應於來源 <see cref="T:System.Data.DataTable" /> 執行個體。</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary vsli:raw="Creates a new instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">建立 <see cref="T:System.Data.DataTable" /> 的新執行個體。</summary>
      <returns vsli:raw="The new expression.">新的運算式。</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">取得這個資料表所屬的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">這個資料表所屬的 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary vsli:raw="Gets a customized view of the table that may include a filtered view, or a cursor position.">取得可能含有已篩選檢視表或游標位置的資料表自訂檢視表。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">與 <see cref="T:System.Data.DataView" /> 關聯的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary vsli:raw="Gets or sets the expression that returns a value used to represent this table in the user interface. The &lt;see langword=&quot;DisplayExpression&quot; /&gt; property lets you display the name of this table in a user interface.">取得或設定會傳回用來在使用者介面中表示這個資料表之值的運算式。 <see langword="DisplayExpression" /> 屬性可讓您將這個資料表的名稱顯示在使用者介面中。</summary>
      <returns vsli:raw="A display string.">一個顯示字串。</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">結束對表單或另一個元件所使用的 <see cref="T:System.Data.DataTable" /> 進行初始化作業。 初始化發生於執行階段。</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary vsli:raw="Turns on notifications, index maintenance, and constraints after loading data.">載入資料後開啟告知、索引維護和條件約束。</summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information.">取得自訂使用者資訊的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains custom user information.">
        <see cref="T:System.Data.PropertyCollection" />，含有自訂使用者資訊。</returns>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary vsli:raw="Checks whether initialization is in progress. The initialization occurs at run time.">檢查初始化是否仍在進行中。 初始化發生於執行階段。</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains all changes made to it since it was loaded or &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was last called.">取得 <see cref="T:System.Data.DataTable" /> (包含從載入它或前一次呼叫 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以來所做的所有變更) 的複本。</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if no changes are found.">這個 <see cref="T:System.Data.DataTable" /> 所產生變更的複本，如果沒有變更，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">取得 <see cref="T:System.Data.DataTable" /> (包含從前一次載入它或呼叫 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以來所做的所有變更) 的複本 (由 <see cref="T:System.Data.DataRowState" /> 篩選)。</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.DataRowState" /> 值。</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that can have actions performed on it, and later be merged back in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">篩選過的 <see cref="T:System.Data.DataTable" /> 複本，可以在其上執行動作，稍後會在 <see cref="T:System.Data.DataTable" /> 中使用 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 合併回來。 如果找不到所需的 <see cref="T:System.Data.DataRowState" /> 的資料列，則方法會傳回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="This method returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance containing the Web Services Description Language (WSDL) that describes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for Web Services.">這個方法會傳回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 執行個體，此執行個體包含描述 Web 服務之 <see cref="T:System.Data.DataTable" /> 的 Web 服務描述語言 (WSDL)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 執行個體。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 執行個體。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain errors.">取得包含錯誤之 <see cref="T:System.Data.DataRow" /> 物件的陣列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that have errors.">具有錯誤之 <see cref="T:System.Data.DataRow" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">以序列化 <see cref="T:System.Data.DataTable" /> 所需的資料，填入序列化資訊物件。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，其保留與 <see cref="T:System.Data.DataTable" /> 關聯的序列化資料。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件，其包含與 <see cref="T:System.Data.DataTable" /> 關聯之序列化資料流的來源和目的端。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="info" /> 參數為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary vsli:raw="Gets the row type.">取得資料列型別。</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 的類型。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" />，描述物件的 XML 表示，該物件由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法產生，由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> 方法取用。</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the rows in any of the tables of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the table belongs.">取得值，指出資料表所屬 <see cref="T:System.Data.DataSet" /> 的任何資料表中的任何資料列是否存在錯誤。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if errors exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />，表示存在錯誤；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary vsli:raw="Copies a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; into a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, preserving any property settings, as well as original and current values.">將 <see cref="T:System.Data.DataRow" /> 複製至 <see cref="T:System.Data.DataTable" />，保留任何屬性設定，以及原始值和目前值。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to be imported.">要匯入的 <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">發生於 <see cref="T:System.Data.DataTable" /> 初始化之後。</summary>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">取得值，指出 <see cref="T:System.Data.DataTable" /> 是否已初始化。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示元件已完成初始化，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows.">使用所提供的 <see cref="T:System.Data.DataTable" />，用資料來源的值填滿 <see cref="T:System.Data.IDataReader" />。 如果 <see cref="T:System.Data.DataTable" /> 已經包含資料列，從資料來源傳入的資料會與現有的資料列合併。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">
        <see cref="T:System.Data.IDataReader" />，提供結果集。</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see langword=&quot;DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the &lt;paramref name=&quot;loadOption&quot; /&gt; parameter.">使用所提供的 <see cref="T:System.Data.DataTable" />，用資料來源的值填滿 <see cref="T:System.Data.IDataReader" />。 如果 <see langword="DataTable" /> 已經包含資料列，從資料來源傳入的資料會根據 <paramref name="loadOption" /> 參數的值，與現有的資料列合併。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" />，提供一個或多個結果集。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">來自 <see cref="T:System.Data.LoadOption" /> 列舉的值，指出已經在 <see cref="T:System.Data.DataTable" /> 中的資料列如何與共用相同主索引鍵的傳入資料列結合。</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using an error-handling delegate.">使用所提供的 <see cref="T:System.Data.DataTable" />，以資料來源的值填滿 <see cref="T:System.Data.IDataReader" />，使用錯誤處理委派。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">
        <see cref="T:System.Data.IDataReader" />，提供結果集。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">來自 <see cref="T:System.Data.LoadOption" /> 列舉的值，指出已經在 <see cref="T:System.Data.DataTable" /> 中的資料列如何與共用相同主索引鍵的傳入資料列結合。</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">載入資料時發生錯誤，要呼叫的 <see cref="T:System.Data.FillErrorEventHandler" /> 委派。</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">尋找並更新特定資料列。 如果找不到符合的資料列，則使用指定值來建立新的資料列。</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">用來建立新資料列的值陣列。</param>
      <param name="fAcceptChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to accept changes; otherwise &lt;see langword=&quot;false&quot; /&gt;.">若要接受變更，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新的 <see cref="T:System.Data.DataRow" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">陣列大於資料表中的資料行數目。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value doesn't match its respective column type.">數值不符合其個別的資料行型別。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">加入資料列會使條件約束失效。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Attempting to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">嘗試將 Null 置於 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 為 False 的資料行中。</exception>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">尋找並更新特定資料列。 如果找不到符合的資料列，則使用指定值來建立新的資料列。</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">用來建立新資料列的值陣列。</param>
      <param name="loadOption" vsli:raw="Used to determine how the array values are applied to the corresponding values in an existing row.">用來判斷陣列值如何套用至現有資料列中對應的值。</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">取得或設定用來在資料表中比較字串的地區設定 (Locale) 資訊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; (returned by the &lt;see cref=&quot;P:System.Data.DataSet.Locale&quot; /&gt; property) to which the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; belongs; if the table doesn't belong to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, the default is the current system &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">
        <see cref="T:System.Globalization.CultureInfo" />，包含使用者電腦地區設定的資料。 預設值為 <see cref="T:System.Data.DataSet" /> 所屬的 <see cref="T:System.Globalization.CultureInfo" /> 物件的 <see cref="P:System.Data.DataSet.Locale" /> (由 <see cref="T:System.Data.DataTable" /> 屬性傳回)，如果資料表不屬於 <see cref="T:System.Data.DataSet" />，則預設值是目前系統 <see cref="T:System.Globalization.CultureInfo" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">將指定的 <see cref="T:System.Data.DataTable" /> 與目前的 <see cref="T:System.Data.DataTable" /> 合併。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />，要與目前的 <see cref="T:System.Data.DataTable" /> 合併。</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">合併指定的 <see cref="T:System.Data.DataTable" /> 與目前的 <see langword="DataTable" />，指出是否保留目前 <see langword="DataTable" /> 中的變更。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to be merged with the current &lt;see langword=&quot;DataTable&quot; /&gt;.">
        <see langword="DataTable" />，要與目前的 <see langword="DataTable" /> 合併。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">若要保留目前 <see langword="true" /> 中的變更，則為 <see langword="DataTable" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes and how to handle missing schema in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">合併指定的 <see cref="T:System.Data.DataTable" /> 與目前的 <see langword="DataTable" />，指出是否保留變更，以及如何處理目前在 <see langword="DataTable" /> 中缺少的結構描述。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" />，要與目前的 <see cref="T:System.Data.DataTable" /> 合併。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">若要保留目前 <see langword="true" /> 中的變更，則為 <see cref="T:System.Data.DataTable" />，否則為 <see langword="false" />。</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</param>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary vsli:raw="Gets or sets the initial starting size for this table.">取得或設定這個資料表的初始開始大小。</summary>
      <returns vsli:raw="The initial starting size in rows of this table. The default is 50.">這個資料表的資料列中的初始開始大小。 預設值為50。</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">為在 <see cref="T:System.Data.DataTable" /> 中所儲存資料的 XML 表示取得或設定命名空間。</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的命名空間。</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the table.">使用與資料表相同的結構描述來建立新的 <see cref="T:System.Data.DataRow" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" />，具有與 <see cref="T:System.Data.DataTable" /> 相同的結構描述。</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">傳回 <see cref="T:System.Data.DataRow" /> 的陣列。</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that describes the size of the array.">描述陣列大小的 <see cref="T:System.Int32" /> 值。</param>
      <returns vsli:raw="The new array.">新陣列。</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary vsli:raw="Creates a new row from an existing row.">從現有的資料列建立新的資料列。</summary>
      <param name="builder" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowBuilder&quot; /&gt; object.">
        <see cref="T:System.Data.DataRowBuilder" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; derived class.">
        <see cref="T:System.Data.DataRow" /> 衍生類別。</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanged&quot; /&gt; event.">引發 <see cref="E:System.Data.DataTable.ColumnChanged" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataColumnChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">引發 <see cref="E:System.Data.DataTable.ColumnChanging" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataColumnChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件。</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is being removed.">向 <see cref="T:System.Data.DataTable" /> 通知 <see cref="T:System.Data.DataColumn" /> 正在移除。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; being removed.">正在移除的 <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt; event.">引發 <see cref="E:System.Data.DataTable.RowChanged" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataRowChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">引發 <see cref="E:System.Data.DataTable.RowChanging" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataRowChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; event.">引發 <see cref="E:System.Data.DataTable.RowDeleted" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataRowChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt; event.">引發 <see cref="E:System.Data.DataTable.RowDeleting" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataRowChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableCleared&quot; /&gt; event.">引發 <see cref="E:System.Data.DataTable.TableCleared" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataTableClearEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableClearing&quot; /&gt; event.">引發 <see cref="E:System.Data.DataTable.TableClearing" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataTableClearEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableNewRow&quot; /&gt; event.">引發 <see cref="E:System.Data.DataTable.TableNewRow" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataTableNewRowEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary vsli:raw="Gets the collection of parent relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">為這個 <see cref="T:System.Data.DataTable" /> 取得父關聯的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the parent relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataRelationCollection" />，其中包含資料表的父關聯。 如果沒有任何 <see cref="T:System.Data.DataRelation" /> 物件存在，則會傳回空的集合。</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">為在 <see cref="T:System.Data.DataTable" /> 中所儲存資料的 XML 表示取得或設定命名空間。</summary>
      <returns vsli:raw="The prefix of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的前置詞。</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary vsli:raw="Gets or sets an array of columns that function as primary keys for the data table.">取得或設定資料行的陣列，這些資料行是做為資料表 (Data Table) 之主索引鍵。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataColumn" /> 物件的陣列。</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The key is a foreign key.">索引鍵為外部索引鍵。</exception>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，將 XML 結構描述和資料讀入 <see cref="T:System.IO.Stream" />。</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">衍生自 <see cref="T:System.IO.Stream" /> 的物件</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" />，用來讀取資料。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，將 XML 結構描述和資料讀入 <see cref="T:System.IO.TextReader" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be used to read the data.">
        <see cref="T:System.IO.TextReader" />，將用來讀取資料。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" />，用來讀取資料。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">將 XML 結構描述和資料從指定的檔案讀入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the data.">要從中讀取資料的檔案名稱。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" />，用來讀取資料。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML Schema and Data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，將 XML 結構描述和資料讀入 <see cref="T:System.Xml.XmlReader" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be used to read the data.">
        <see cref="T:System.Xml.XmlReader" />，將用來讀取資料。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" />，用來讀取資料。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified stream.">使用指定的資料流，將 XML 結構描述讀入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="stream" vsli:raw="The stream used to read the schema.">用來讀取結構描述的資料流。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，將 XML 結構描述讀入 <see cref="T:System.IO.TextReader" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; used to read the schema information.">
        <see cref="T:System.IO.TextReader" />，用來讀取結構描述資訊。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">從指定的檔案，將 XML 結構描述讀入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the schema information.">要從中讀取結構描述資訊的檔案名稱。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，將 XML 結構描述讀入 <see cref="T:System.Xml.XmlReader" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the schema information.">
        <see cref="T:System.Xml.XmlReader" />，用來讀取結構描述資訊。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Reads from an XML stream.">從 XML 資料流讀取。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlReader" /> 物件。</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary vsli:raw="Rolls back all changes that have been made to the table since it was loaded, or the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">復原從資料表載入以來，或前一次呼叫 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以來，對該資料表所做的所有變更。</summary>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format.">取得或設定序列化格式。</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">指定 <see langword="Binary" /> 或 <see langword="Xml" /> 序列化的 <see cref="T:System.Data.SerializationFormat" /> 列舉。</returns>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to its original state. Reset removes all data, indexes, relations, and columns of the table. If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.">重設 <see cref="T:System.Data.DataTable" /> 為它的原始狀態。 重設會移除資料表的所有資料、索引、關聯和資料行。 如果資料集包含 DataTable，則重設資料表之後，資料表仍將是資料集的一部分。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has been changed successfully.">成功變更 <see cref="T:System.Data.DataRow" /> 後發生。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is changing.">發生在 <see cref="T:System.Data.DataRow" /> 正在變更時。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary vsli:raw="Occurs after a row in the table has been deleted.">發生在資料表中的資料列已經刪除之後。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary vsli:raw="Occurs before a row in the table is about to be deleted.">發生在資料表中的資料列將要刪除之前。</summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary vsli:raw="Gets the collection of rows that belong to this table.">取得屬於這個資料表的資料列集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; that contains &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRowCollection" /> (包含 <see cref="T:System.Data.DataRow" /> 物件)，否則為 Null 值 (如果 <see cref="T:System.Data.DataRow" /> 物件不存在)。</returns>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">取得所有 <see cref="T:System.Data.DataRow" /> 物件的陣列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria.">取得所有符合篩選準則之 <see cref="T:System.Data.DataRow" /> 物件的陣列。</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">用來篩選資料列的準則。 如需如何篩選資料列的範例，請參閱 DataView RowFilter Syntax [C#] (DataView RowFilter 語法 [C#])。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria, in the specified sort order.">取得按照指定排序順序符合篩選條件的所有 <see cref="T:System.Data.DataRow" /> 物件之陣列。</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">用來篩選資料列的準則。 如需如何篩選資料列的範例，請參閱 DataView RowFilter Syntax [C#] (DataView RowFilter 語法 [C#])。</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">指定資料行和排序方向的字串。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects matching the filter expression.">符合篩選條件運算式的 <see cref="T:System.Data.DataRow" /> 物件之陣列。</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter in the order of the sort that match the specified state.">取得符合篩選條件 (按照排序順序，並符合指定狀態) 的所有 <see cref="T:System.Data.DataRow" /> 物件之陣列。</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">用來篩選資料列的準則。 如需如何篩選資料列的範例，請參閱 DataView RowFilter Syntax [C#] (DataView RowFilter 語法 [C#])。</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">指定資料行和排序方向的字串。</param>
      <param name="recordStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.DataViewRowState" /> 值。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRow" /> 物件的陣列。</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">取得或設定 <see cref="T:System.ComponentModel.ISite" /> 的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> 的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a collection of &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; objects; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合為 <see cref="T:System.Collections.IList" /> 物件的集合，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IListSource.GetList" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that can be bound to a data source from the object.">
        <see cref="T:System.Collections.IList" />，從物件繫結至資料來源。</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" />，描述物件的 XML 表示，該物件由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法產生，由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> 方法取用。</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</summary>
      <param name="reader" vsli:raw="An XmlReader.">XmlReader。</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />。</summary>
      <param name="writer" vsli:raw="An XmlWriter.">XmlWriter。</param>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">發生在清除 <see cref="T:System.Data.DataTable" /> 之後。</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">發生於清除 <see cref="T:System.Data.DataTable" /> 時。</summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">取得或設定 <see cref="T:System.Data.DataTable" /> 的名稱。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的名稱。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) is passed in and this table belongs to a collection.">
        <see langword="null" /> 或空字串 ("") 會傳入，並且這個資料表屬於集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).">資料表屬於已經具有相同名稱之資料表的集合 (比較是區分大小寫的)。</exception>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is inserted.">發生在插入新的 <see cref="T:System.Data.DataRow" /> 時。</summary>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt;, if there is one as a concatenated string.">如果存在串連的字串，則取得 <see cref="P:System.Data.DataTable.TableName" /> 和 <see cref="P:System.Data.DataTable.DisplayExpression" />。</summary>
      <returns vsli:raw="A string consisting of the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt; values.">字串，由 <see cref="P:System.Data.DataTable.TableName" /> 和 <see cref="P:System.Data.DataTable.DisplayExpression" /> 值組成。</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">使用指定的 <see cref="T:System.IO.Stream" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">將資料寫入其中的資料流。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.IO.Stream" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。 若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">將資料寫入其中的資料流。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料 (並選擇性寫入結構描述) 至指定的檔案。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">將資料寫入其中的資料流。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料 (並選擇性寫入結構描述) 至指定的檔案。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。 若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">將資料寫入其中的資料流。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">使用指定的 <see cref="T:System.IO.TextWriter" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">用來撰寫內容的 <see cref="T:System.IO.TextWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.IO.TextWriter" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。 若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">用來撰寫內容的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.IO.TextWriter" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">寫入文件所用的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.IO.TextWriter" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。 若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">寫入文件所用的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file.">使用指定的檔案，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫成 XML。</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">要寫入 XML 資料的檔案。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的檔案，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫成 XML。 若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">要寫入 XML 資料的檔案。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的檔案和 <see cref="T:System.Data.DataTable" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">資料將寫入其中的檔案名稱。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的檔案和 <see cref="T:System.Data.DataTable" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。 若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">資料將寫入其中的檔案名稱。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlWriter" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">要用來寫入內容的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlWriter" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">要用來寫入內容的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Xml.XmlWriter" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">寫入文件所用的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Xml.XmlWriter" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。 若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。 若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">寫入文件所用的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream.">將 <see cref="T:System.Data.DataTable" /> 目前的資料結構撰寫成 XML 結構描述，寫入至指定的資料流。</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">XML 結構描述將寫入其中的資料流。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">將 <see cref="T:System.Data.DataTable" /> 目前的資料結構撰寫成 XML 結構描述，寫入至指定的資料流。 若要儲存資料表及其所有子代的結構描述，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">XML 結構描述將寫入其中的資料流。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及其所有子代的結構描述。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的結構描述。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，將 <see cref="T:System.IO.TextWriter" /> 目前的資料結構撰寫成 XML 結構描述。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">要用來寫入的 <see cref="T:System.IO.TextWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，將 <see cref="T:System.IO.TextWriter" /> 目前的資料結構撰寫成 XML 結構描述。 若要儲存資料表及其所有子代的結構描述，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">要用來寫入的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及其所有子代的結構描述。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的結構描述。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file.">將 <see cref="T:System.Data.DataTable" /> 目前的資料結構撰寫成 XML 結構描述，寫入至指定的檔案。</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">要使用的檔案名稱。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">將 <see cref="T:System.Data.DataTable" /> 目前的資料結構撰寫成 XML 結構描述，寫入至指定的檔案。 若要儲存資料表及其所有子代的結構描述，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">要使用的檔案名稱。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及其所有子代的結構描述。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的結構描述。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，將 <see cref="T:System.Xml.XmlWriter" /> 目前的資料結構撰寫成 XML 結構描述。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />，將 <see cref="T:System.Xml.XmlWriter" /> 目前的資料結構撰寫成 XML 結構描述。 若要儲存資料表及其所有子代的結構描述，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">寫入文件所用的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">如果為 <see langword="true" />，就會寫入目前資料表及其所有子代的結構描述。 如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的結構描述。</param>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">提供 <see cref="M:System.Data.DataTable.Clear" /> 方法的資料。</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataTableClearEventArgs" /> 類別的新執行個體。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">正在清除其資料列的 <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary vsli:raw="Gets the table whose rows are being cleared.">取得正在清除其資料列的資料表。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">正在清除其資料列的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary vsli:raw="Gets the table name whose rows are being cleared.">取得正在清除其資料列的資料表名稱。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the table name.">表示資料表名稱的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary vsli:raw="Gets the namespace of the table whose rows are being cleared.">取得正在清除其資料列的資料表之命名空間。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the namespace name.">表示命名空間名稱的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">表示處理 <see cref="M:System.Data.DataTable.Clear" /> 方法的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataTableClearEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary vsli:raw="Represents the collection of tables for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">表示 <see cref="T:System.Data.DataSet" /> 的資料表集合。</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using a default name and adds it to the collection.">使用預設名稱建立新的 <see cref="T:System.Data.DataTable" /> 物件，並將它加入至集合。</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新建立的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary vsli:raw="Adds the specified &lt;see langword=&quot;DataTable&quot; /&gt; to the collection.">將指定的 <see langword="DataTable" /> 加入至集合。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; object to add.">要加入的 <see langword="DataTable" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">資料表的指定值為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table already belongs to this collection, or belongs to another collection.">資料表永遠屬於這個集合，或屬於另一個集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. The comparison is not case sensitive.">集合中的資料表具有相同的名稱 (名稱比較不區分大小寫)。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">使用指定的名稱建立 <see cref="T:System.Data.DataTable" /> 物件，並將它加入至集合。</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">要給建立的 <see cref="T:System.Data.DataTable" /> 的名稱。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新建立的 <see cref="T:System.Data.DataTable" />。</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">集合中的資料表具有相同的名稱 (名稱比較不區分大小寫)。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">使用指定的名稱建立 <see cref="T:System.Data.DataTable" /> 物件，並將它加入至集合。</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">要給建立的 <see cref="T:System.Data.DataTable" /> 的名稱。</param>
      <param name="tableNamespace" vsli:raw="The namespace to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">要給所建立 <see cref="T:System.Data.DataTable" /> 的命名空間。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新建立的 <see cref="T:System.Data.DataTable" />。</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">集合中的資料表具有相同的名稱 (名稱比較不區分大小寫)。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; array to the end of the collection.">將指定的 <see cref="T:System.Data.DataTable" /> 陣列元素複製到集合的末端。</summary>
      <param name="tables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to add to the collection.">要加入至集合的 <see cref="T:System.Data.DataTable" /> 物件陣列。</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object can be removed from the collection.">驗證是否可以從集合移除指定的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; in the collection to perform the check against.">集合中要執行檢查的 <see langword="DataTable" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the table can be removed; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果可以將資料表移除，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary vsli:raw="Clears the collection of all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">清除所有 <see cref="T:System.Data.DataTable" /> 物件的集合。</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">由於正在加入或移除 <see cref="T:System.Data.DataTableCollection" /> 物件而導致 <see cref="T:System.Data.DataTable" /> 變更時，就會發生此情況。</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary vsli:raw="Occurs while the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changing because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">由於正在加入或移除 <see cref="T:System.Data.DataTableCollection" /> 物件而導致 <see cref="T:System.Data.DataTable" /> 變更時，就會發生此一情況。</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name exists in the collection.">取得值，指出集合中是否含有具此指定名稱的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要尋找的 <see cref="T:System.Data.DataTable" /> 名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果指定的資料表存在，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name and table namespace exists in the collection.">取得指出具有所指定名稱和資料表命名空間的 <see cref="T:System.Data.DataTable" /> 物件是否存在於集合中的值。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要尋找的 <see cref="T:System.Data.DataTable" /> 名稱。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">要查詢之 <see cref="T:System.Data.DataTable" /> 命名空間的名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果指定的資料表存在，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified destination array index.">複製目前 <see cref="T:System.Data.DataTableCollection" /> 的所有項目至一維 <see cref="T:System.Array" />，從指定的目的陣列索引開始。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; object's elements into.">要複製目前 <see cref="T:System.Array" /> 物件項目的目的一維 <see cref="T:System.Data.DataTableCollection" />。</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">要開始複製的目的端 <see cref="T:System.Array" /> 索引。</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">取得指定 <see cref="T:System.Data.DataTable" /> 物件的索引。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to search for.">要搜尋的 <see langword="DataTable" />。</param>
      <returns vsli:raw="The zero-based index of the table, or -1 if the table is not found in the collection.">資料表的以零起始之索引；如果在集合中找不到此資料表，則為 -1。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index in the collection of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">取得在具有指定名稱之 <see cref="T:System.Data.DataTable" /> 物件的集合中的索引。</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; object to look for.">要搜尋之 <see langword="DataTable" /> 物件的名稱。</param>
      <returns vsli:raw="The zero-based index of the &lt;see langword=&quot;DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">具有指定名稱之 <see langword="DataTable" /> 的以零為起始索引；如果集合中沒有資料表，則為 –1。  
   
 當有兩個以上的資料表具有相同名稱但是命名空間不同時，則傳回 -1。 如果資料表名稱無法完全與單一資料表相符 (即有任何名稱語意模糊)，呼叫就會失敗。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary vsli:raw="Gets the index in the collection of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">取得指定 <see cref="T:System.Data.DataTable" /> 物件集合中的索引。</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to look for.">要搜尋之 <see cref="T:System.Data.DataTable" /> 物件的名稱。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">要查詢之 <see cref="T:System.Data.DataTable" /> 命名空間的名稱。</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">具有指定名稱之 <see cref="T:System.Data.DataTable" /> 的以零為起始索引；如果集合中沒有資料表，則為 –1。</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index.">取得在指定之索引處的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要尋找之 <see cref="T:System.Data.DataTable" /> 的以零起始的索引。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified index; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">具有指定索引的<see langword="null" /> ; 如果<see cref="T:System.Data.DataTable" />不存在, 則為。 <see cref="T:System.Data.DataTable" /></returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">索引值大於集合中項目的數目。</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">取得具有指定名稱的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">要尋找的 <see langword="DataTable" /> 名稱。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">具有指定之名稱的 <see cref="T:System.Data.DataTable" />。但如果 <see cref="T:System.Data.DataTable" /> 不存在時，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name in the specified namespace.">取得指定命名空間中具有指定名稱的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">要尋找的 <see langword="DataTable" /> 名稱。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">要查詢之 <see cref="T:System.Data.DataTable" /> 命名空間的名稱。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">具有指定之名稱的 <see cref="T:System.Data.DataTable" />。但如果 <see cref="T:System.Data.DataTable" /> 不存在時，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object from the collection.">從集合中移除指定的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">要移除的 <see langword="DataTable" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">資料表的指定值為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table does not belong to this collection.  &#xA;  &#xA; -or-  &#xA;  &#xA; The table is part of a relationship.">此資料表不屬於這個集合。  
 -或-  
 資料表是關聯性 (Relationship) 的一部分。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">從集合中移除具有指定名稱的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.DataTable" /> 物件名稱。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">集合沒有包含具有指定名稱的資料表。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">從集合中移除具有指定名稱的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.DataTable" /> 物件名稱。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">要查詢之 <see cref="T:System.Data.DataTable" /> 命名空間的名稱。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">集合沒有包含具有指定名稱的資料表。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index from the collection.">從集合移除指定之索引處的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">要移除的 <see langword="DataTable" /> 的索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table at the specified index.">集合在指定索引處沒有資料表。</exception>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class. &lt;see cref=&quot;T:System.Data.DataTableExtensions&quot; /&gt; is a static class.">定義 <see cref="T:System.Data.DataTable" /> 類別的擴充方法。 <see cref="T:System.Data.DataTableExtensions" /> 為靜態類別。</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">建立並傳回已啟用 LINQ 的 <see cref="T:System.Data.DataView" /> 物件。</summary>
      <param name="table" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">來源 <see cref="T:System.Data.DataTable" />，已啟用 LINQ 的 <see cref="T:System.Data.DataView" /> 是從其中建立。</param>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">已啟用 LINQ 的 <see cref="T:System.Data.DataView" /> 物件。</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object representing the LINQ to DataSet query.">建立並傳回已啟用 LINQ 的 <see cref="T:System.Data.DataView" /> 物件，表示 LINQ to DataSet 查詢。</summary>
      <param name="source" vsli:raw="The source LINQ to DataSet query from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">來源 LINQ to DataSet 查詢，已啟用 LINQ 的 <see cref="T:System.Data.DataView" /> 是從其中建立。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">來源序列中的物件類型，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">已啟用 LINQ 的 <see cref="T:System.Data.DataView" /> 物件。</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">傳回 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 物件，其中泛型參數 <paramref name="T" /> 為 <see cref="T:System.Data.DataRow" />。 這個物件可以在 LINQ 運算式或方法查詢中使用。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to make enumerable.">要成為可列舉的來源 <see cref="T:System.Data.DataTable" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 物件，其中泛型參數 <paramref name="T" /> 為 <see cref="T:System.Data.DataRow" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">來源 <see cref="T:System.Data.DataTable" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains copies of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">根據輸入 <see cref="T:System.Data.DataTable" /> 物件 (其中泛型參數 <paramref name="T" /> 為 <see cref="T:System.Data.DataRow" />) 傳回包含 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 物件複本的 <see cref="T:System.Data.DataRow" />。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">來源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">來源序列中的物件類型，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains the input sequence as the type of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataTable" />，包含當做 <see cref="T:System.Data.DataRow" /> 物件型別的輸入序列。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; and a new table cannot be created.">來源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列為 <see langword="null" />，而且無法建立新的資料表。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">來源序列中的 <see cref="T:System.Data.DataRow" /> 具有 <see cref="F:System.Data.DataRowState.Deleted" /> 的狀態。  
來源序列不含任何 <see cref="T:System.Data.DataRow" /> 物件。  
來源序列中的 <see cref="T:System.Data.DataRow" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">根據輸入 <see cref="T:System.Data.DataRow" /> 物件 (其中泛型參數 <paramref name="T" /> 為 <see cref="T:System.Data.DataTable" />)，將 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 物件複製到指定的 <see cref="T:System.Data.DataRow" />。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">來源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列。</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">目的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">指定 <see cref="T:System.Data.LoadOption" /> 載入選項的 <see cref="T:System.Data.DataTable" /> 列舉型別。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">來源序列中的物件類型，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">已複製的 <see cref="T:System.Data.DataRow" /> 物件不適合目的 <see cref="T:System.Data.DataTable" /> 的結構描述。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">來源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列為 <see langword="null" />，或者目的 <see cref="T:System.Data.DataTable" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">來源序列中的 <see cref="T:System.Data.DataRow" /> 具有 <see cref="F:System.Data.DataRowState.Deleted" /> 的狀態。  
來源序列不含任何 <see cref="T:System.Data.DataRow" /> 物件。  
來源序列中的 <see cref="T:System.Data.DataRow" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">根據輸入 <see cref="T:System.Data.DataRow" /> 物件 (其中泛型參數 <paramref name="T" /> 為 <see cref="T:System.Data.DataTable" />)，將 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 物件複製到指定的 <see cref="T:System.Data.DataRow" />。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">來源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列。</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">目的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">指定 <see cref="T:System.Data.LoadOption" /> 載入選項的 <see cref="T:System.Data.DataTable" /> 列舉型別。</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate that represents the method that will handle an error.">
        <see cref="T:System.Data.FillErrorEventHandler" /> 委派，表示會處理錯誤的方法。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">來源序列中的物件類型，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">已複製的 <see cref="T:System.Data.DataRow" /> 物件不適合目的 <see cref="T:System.Data.DataTable" /> 的結構描述。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">來源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列為 <see langword="null" />，或者目的 <see cref="T:System.Data.DataTable" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; -or-  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">來源序列中的 <see cref="T:System.Data.DataRow" /> 具有 <see cref="F:System.Data.DataRowState.Deleted" /> 的狀態。  
-或- 
來源序列不含任何 <see cref="T:System.Data.DataRow" /> 物件。  
-或- 
來源序列中的 <see cref="T:System.Data.DataRow" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">提供 <see cref="M:System.Data.DataTable.NewRow" /> 方法的資料。</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt;.">初始化 <see cref="T:System.Data.DataTableNewRowEventArgs" /> 的新執行個體。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being added.">正在加入的 <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary vsli:raw="Gets the row that is being added.">取得正在加入的資料列。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is being added.">正在加入的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">表示處理 <see cref="M:System.Data.DataTable.NewRow" /> 方法的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataTableNewRowEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains the contents of one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects in the form of one or more read-only, forward-only result sets.">
        <see cref="T:System.Data.DataTableReader" /> 會以一或多個唯讀、順向結果集的形式，取得一或多個 <see cref="T:System.Data.DataTable" /> 物件的內容。</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class by using data from the supplied &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">使用所提供之 <see cref="T:System.Data.DataTableReader" /> 的資料，初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains its result set.">
        <see cref="T:System.Data.DataTable" />，新的 <see cref="T:System.Data.DataTableReader" /> 從中取得其結果集。</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class using the supplied array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">使用 <see cref="T:System.Data.DataTableReader" /> 物件所提供的陣列，初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</summary>
      <param name="dataTables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that supplies the results for the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 物件的陣列，該物件可以為新的 <see cref="T:System.Data.DataTableReader" /> 物件提供結果。</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary vsli:raw="Closes the current &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">關閉目前的 <see cref="T:System.Data.DataTableReader" />。</summary>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary vsli:raw="The depth of nesting for the current row of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" /> 目前資料列的巢狀深度。</summary>
      <returns vsli:raw="The depth of nesting for the current row; always zero.">目前資料列的巢狀深度，一定都是零。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary vsli:raw="Returns the number of columns in the current row.">傳回目前資料列中的資料行數目。</summary>
      <returns vsli:raw="When not positioned in a valid result set, 0; otherwise the number of columns in the current row.">當未位於有效結果集時，則為 0，否則為目前資料列中的資料行數目。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve the field count in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試擷取已關閉之 <see cref="T:System.Data.DataTableReader" /> 中的欄位計數。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">取得指定的資料行值做為 <see cref="T:System.Boolean" />。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Boolean&quot; /&gt;.">指定的資料行不包含 <see langword="Boolean" />。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">取得指定資料行的值做為位元組。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte.">指定的資料行不包含位元組。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.">從指定的資料行位移開始，將位元組的資料流讀入緩衝區，做為從指定的緩衝區位移開始的陣列。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">要開始讀取作業之欄位中的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">要將位元組資料流讀取到其中的緩衝區。</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">緩衝區中的索引，從該處開始放置資料。</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">複製入緩衝區的最大長度。</param>
      <returns vsli:raw="The actual number of bytes read.">讀取的實際位元組數目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte array.">指定的資料行不包含位元組陣列。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a character.">取得指定資料行的值做為字元。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the column.">資料行的值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified field does not contain a character.">指定的欄位不包含字元。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">傳回指定資料行的值做為字元陣列。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">要開始讀取作業之欄位中的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of chars.">要讀入字元資料流的目的緩衝區。</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">緩衝區中的索引，從該處開始放置資料。</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">複製入緩衝區的最大長度。</param>
      <returns vsli:raw="The actual number of characters read.">讀取的實際字元數目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a character array.">指定的資料行不包含字元陣列。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets a string representing the data type of the specified column.">取得字串，表示指定之資料行的資料型別。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="A string representing the column's data type.">字串，表示資料行的資料型別。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">取得指定之資料行的值做為 <see cref="T:System.DateTime" /> 物件。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a DateTime value.">指定的資料行不包含 DateTime 值。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">取得指定的資料行值做為 <see cref="T:System.Decimal" />。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Decimal&quot; /&gt; value.">指定的資料行不包含 <see langword="Decimal" /> 值。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the value of the column as a double-precision floating point number.">取得資料行的值做為雙精確度浮點數。</summary>
      <param name="ordinal" vsli:raw="The zero-based ordinal of the column.">資料行以零為起始的序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a double-precision floating point number.">指定的資料行不包含雙精確度浮點數。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can be used to iterate through the item collection.">傳回可用來逐一查看項目集合的列舉值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that represents the item collection.">
        <see cref="T:System.Collections.IEnumerator" /> 物件，表示項目集合。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">取得 <see cref="T:System.Type" />，即是物件的資料型別。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">
        <see cref="T:System.Type" />，此為物件的資料類型。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">取得指定資料行的值做為單精確度浮點數。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the column.">資料行的值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a single-precision floating point number.">指定的資料行不包含單精確度浮點數。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a globally-unique identifier (GUID).">取得指定資料行的值做為全域唯一識別項 (GUID)。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a GUID.">指定的資料行不包含 GUID。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">取得指定資料行的值做為 16 位元帶正負號的整數。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零起始的資料行序數</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 16-bit signed integer.">指定的資料行不包含 16 位元帶正負號的整數。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">取得指定資料行的值作為 32 位元帶正負號的整數。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零起始的資料行序數</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 32-bit signed integer value.">指定的資料行不包含 32 位元帶正負號的整數值。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">取得指定資料行的值做為 64 位元帶正負號的整數 (Signed Integer)。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零起始的資料行序數</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 64-bit signed integer value.">指定的資料行不包含 64 位元帶正負號的整數值。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">取得指定的資料行值做為 <see cref="T:System.String" />。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零起始的資料行序數</param>
      <returns vsli:raw="The name of the specified column.">指定資料行的名稱。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary vsli:raw="Gets the column ordinal, given the name of the column.">提供資料行的名稱，取得資料行序數。</summary>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the type of the specified column in provider-specific format.">以提供者專屬格式，取得指定之資料行的型別。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">
        <see cref="T:System.Type" />，此為物件的資料類型。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in provider-specific format.">以提供者專屬格式，取得指定之資料行的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based number of the column whose value is retrieved.">已擷取其值之資料行的以零為起始的數目。</param>
      <returns vsli:raw="The value of the specified column in provider-specific format.">提供者專屬格式之指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Fills the supplied array with provider-specific type information for all the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">以 <see cref="T:System.Data.DataTableReader" /> 中所有資料行的提供者專屬型別資訊，填入所提供的陣列。</summary>
      <param name="values" vsli:raw="An array of objects to be filled in with type information for the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">物件陣列，要以 <see cref="T:System.Data.DataTableReader" /> 中資料行的型別資訊填入。</param>
      <returns vsli:raw="The number of column values copied into the array.">複製至陣列的資料行值數目。</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">傳回 <see cref="T:System.Data.DataTable" />，以描述 <see cref="T:System.Data.DataTableReader" /> 的資料行中繼資料。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">描述資料行中繼資料的 <see cref="T:System.Data.DataTable" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.DataTableReader" /> 已關閉。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a string.">取得指定的資料行值做為字串。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零起始的資料行序數</param>
      <returns vsli:raw="The value of the specified column.">指定的資料行值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a string.">指定的資料行不包含字串。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format.">取得使用原生格式的指定資料行值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零起始的資料行序數</param>
      <returns vsli:raw="The value of the specified column. This method returns &lt;see langword=&quot;DBNull&quot; /&gt; for null columns.">指定的資料行值。 這個方法會傳回 null 資料行的 <see langword="DBNull" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access columns in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current row.">使用目前資料列的資料行值填入物件陣列。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the column values from the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Object" /> 的陣列，要從 <see cref="T:System.Data.DataTableReader" /> 複製資料行值至其中。</param>
      <returns vsli:raw="The number of column values copied into the array.">複製至陣列的資料行值數目。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows.">取得值，指出 <see cref="T:System.Data.DataTableReader" /> 是否包含一個或多個資料列。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.DataTableReader" /> 包含一個或更多資料列，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve information about a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試擷取有關已關閉之 <see cref="T:System.Data.DataTableReader" /> 的資訊。</exception>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">取得值，指出 <see cref="T:System.Data.DataTableReader" /> 是否已關閉。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.DataTableReader" /> 關閉，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column contains non-existent or missing values.">取得值，指出資料行是否含有不存在或遺漏的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零起始的資料行序數</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的資料行值等於 <see cref="T:System.DBNull" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column ordinal.">提供資料行序數，取得使用原生格式的指定資料行值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the specified column in its native format.">使用原生格式的指定資料行值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column name.">提供資料行名稱，取得使用原生格式的指定資料行值。</summary>
      <param name="name" vsli:raw="The name of the column.">資料行名稱。</param>
      <returns vsli:raw="The value of the specified column in its native format.">使用原生格式的指定資料行值。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">指定的名稱不是有效的資料行名稱。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">嘗試從已刪除的資料列擷取資料。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next result set, if any.">將 <see cref="T:System.Data.DataTableReader" /> 前移到下一個結果集 (如果有的話)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another result set; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果有其他的結果集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to navigate within a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">嘗試在已關閉的 <see cref="T:System.Data.DataTableReader" /> 之內巡覽。</exception>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next record.">將 <see cref="T:System.Data.DataTableReader" /> 推進到下一筆記錄。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another row to read; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果有其他要讀取的資料列，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.">取得透過執行 SQL 陳述式所插入、變更或刪除的資料列數目。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; does not support this property and always returns 0.">
        <see cref="T:System.Data.DataTableReader" /> 不支援這個屬性，而且一定會傳回 0。</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary vsli:raw="Represents a databindable, customized view of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for sorting, filtering, searching, editing, and navigation. The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; does not store data, but instead represents a connected view of its corresponding &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;'s data will affect the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;'s data will affect all &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;s associated with it.">代表用於排序、篩選、搜尋、編輯和巡覽的 <see cref="T:System.Data.DataTable" /> 可資料繫結的自訂檢視。 <see cref="T:System.Data.DataView" /> 不儲存資料，卻代表其對應之 <see cref="T:System.Data.DataTable" /> 的連線檢視。 <see cref="T:System.Data.DataView" /> 的資料變更會影響 <see cref="T:System.Data.DataTable" />。 <see cref="T:System.Data.DataTable" /> 的資料變更會影響所有與它建立關聯的 <see cref="T:System.Data.DataView" />。</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataView" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataView" /> 初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要加入至 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />、<see cref="P:System.Data.DataView.RowFilter" />、<see cref="P:System.Data.DataView.Sort" /> 和 <see cref="T:System.Data.DataViewRowState" />，初始化 <see cref="T:System.Data.DataView" /> 類別的新執行個體。</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要加入至 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="RowFilter" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要套用至 <see cref="T:System.Data.DataView" /> 的 <see cref="P:System.Data.DataView.RowFilter" />。</param>
      <param name="Sort" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要套用至 <see cref="P:System.Data.DataView.Sort" /> 的 <see cref="T:System.Data.DataView" />。</param>
      <param name="RowState" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要套用至 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataViewRowState" />。</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary vsli:raw="Adds a new row to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">將新資料列加入 <see cref="T:System.Data.DataView" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; object.">新的 <see cref="T:System.Data.DataRowView" /> 物件。</returns>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary vsli:raw="Gets or sets a value that indicates whether deletes are allowed.">設定或取得值，表示是否允許刪除。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if deletes are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允許刪除，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary vsli:raw="Gets or sets a value that indicates whether edits are allowed.">取得或設定值，指出是否允許編輯。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if edits are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允許編輯，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary vsli:raw="Gets or sets a value that indicates whether the new rows can be added by using the &lt;see cref=&quot;M:System.Data.DataView.AddNew&quot; /&gt; method.">取得或設定值，指出是否可以使用 <see cref="M:System.Data.DataView.AddNew" /> 方法加入新的資料列。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if new rows can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以加入新的資料列，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value that indicates whether to use the default sort. The default sort is (ascending) by all primary keys as specified by &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt;.">取得或設定值，指出是否要使用預設排序。 預設排序是依 <see cref="P:System.Data.DataTable.PrimaryKey" /> 指定的所有主要金鑰遞增排序。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the default sort is used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果使用預設排序，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary vsli:raw="Starts the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">開始對表單或另一個元件所使用的 <see cref="T:System.Data.DataView" /> 進行初始化作業。 初始化會於執行階段時執行。</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">關閉 <see cref="T:System.Data.DataView" />。</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; has been changed successfully.">成功變更 <see cref="T:System.Data.DataColumnCollection" /> 後發生。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies items into an array. Only for Web Forms Interfaces.">將項目複製到陣列。 僅適用於 Web Form 介面。</summary>
      <param name="array" vsli:raw="array to copy into.">複製的目的地陣列。</param>
      <param name="index" vsli:raw="index to start at.">做為開頭的索引。</param>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary vsli:raw="Gets the number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; after &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt; have been applied.">取得套用 <see cref="P:System.Data.DataView.RowFilter" /> 和 <see cref="P:System.Data.DataView.RowStateFilter" /> 之後，<see cref="T:System.Data.DataView" /> 中的記錄數目。</summary>
      <returns vsli:raw="The number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> 中的記錄數目。</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; associated with this view.">取得與這份檢視相關聯的 <see cref="T:System.Data.DataViewManager" />。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataViewManager&quot; /&gt; that created this view. If this is the default &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, the &lt;see langword=&quot;DataViewManager&quot; /&gt; property returns the default &lt;see langword=&quot;DataViewManager&quot; /&gt; for the &lt;see langword=&quot;DataSet&quot; /&gt;. Otherwise, if the &lt;see langword=&quot;DataView&quot; /&gt; was created without a &lt;see langword=&quot;DataViewManager&quot; /&gt;, this property is &lt;see langword=&quot;null&quot; /&gt;.">建立此檢視的 <see langword="DataViewManager" />。 如果這是 <see cref="T:System.Data.DataTable" /> 的預設 <see cref="T:System.Data.DataView" />，則 <see langword="DataViewManager" /> 屬性會傳回 <see langword="DataSet" /> 的預設 <see langword="DataViewManager" />。 否則，如果 <see langword="DataView" /> 不是使用 <see langword="DataViewManager" /> 所建立，則這個屬性是 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary vsli:raw="Deletes a row at the specified index.">刪除指定索引處的資料列。</summary>
      <param name="index" vsli:raw="The index of the row to delete.">要刪除的資料列索引。</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary vsli:raw="Disposes of the resources (other than memory) used by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">處置 <see cref="T:System.Data.DataView" /> 物件所使用的資源 (除了記憶體之外)。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">結束對表單或另一個元件所使用的 <see cref="T:System.Data.DataView" /> 進行初始化作業。 初始化會於執行階段時執行。</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are considered equal.">判斷指定的 <see cref="T:System.Data.DataView" /> 執行個體是否視為相等。</summary>
      <param name="view" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Data.DataView" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個 <see cref="T:System.Data.DataView" /> 執行個體相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key value.">依據指定的排序索引鍵值，找出 <see cref="T:System.Data.DataView" /> 中的資料列。</summary>
      <param name="key" vsli:raw="The object to search for.">要搜尋的物件。</param>
      <returns vsli:raw="The index of the row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that contains the sort key value specified; otherwise -1 if the sort key value does not exist.">
        <see cref="T:System.Data.DataView" /> 中的資料列索引，其包含指定的排序索引鍵值；如果排序索引鍵值不存在，則為 -1。</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key values.">依據指定的排序索引鍵值，找出 <see cref="T:System.Data.DataView" /> 中的資料列。</summary>
      <param name="key" vsli:raw="An array of values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;.">值的陣列，類型為 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="The index of the position of the first row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that matches the sort key values specified; otherwise -1 if there are no matching sort key values.">
        <see cref="T:System.Data.DataView" /> 中第一個資料列的位置索引，其符合指定的排序索引鍵值；否則，如果沒有符合的排序索引鍵值，則為 -1。</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">傳回 <see cref="T:System.Data.DataRowView" /> 物件的陣列，其資料行符合指定的排序鍵值。</summary>
      <param name="key" vsli:raw="The column value, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">要搜尋的資料行值，輸入為 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">
        <see langword="DataRowView" /> 物件的陣列，其資料行符合指定的排序鍵值；或若資料列不含指定的排序鍵值，則為空的 <see langword="DataRowView" /> 陣列。</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">傳回 <see cref="T:System.Data.DataRowView" /> 物件的陣列，其資料行符合指定的排序鍵值。</summary>
      <param name="key" vsli:raw="An array of column values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">要搜尋的資料行值陣列，輸入為 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">
        <see langword="DataRowView" /> 物件的陣列，其資料行符合指定的排序鍵值；或若資料列不含指定的排序鍵值，則為空的 <see langword="DataRowView" /> 陣列。</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary vsli:raw="Gets an enumerator for this &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">取得這個 <see cref="T:System.Data.DataView" /> 的列舉值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for navigating through the list.">用於巡覽清單的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; has been changed successfully.">成功變更 <see cref="T:System.Data.DataView" /> 後發生。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary vsli:raw="Occurs when initialization of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is completed.">發生於 <see cref="T:System.Data.DataView" /> 的初始化完成時。</summary>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the component is initialized.">取得值，表示元件是否已初始化。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示元件已完成初始化，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary vsli:raw="Gets a value that indicates whether the data source is currently open and projecting views of data on the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">取得值，指出資料來源目前是否開放且在 <see cref="T:System.Data.DataTable" /> 上投影出資料檢視。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the source is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果來源開放，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary vsli:raw="Gets a row of data from a specified table.">從指定的資料表取得一列資料。</summary>
      <param name="recordIndex" vsli:raw="The index of a record in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 中之記錄的索引。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; of the row that you want.">所需的資料列之 <see cref="T:System.Data.DataRowView" />。</returns>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary vsli:raw="Occurs when the list managed by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; changes.">發生於清單受 <see cref="T:System.Data.DataView" /> 變更管理時。</summary>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataView.ListChanged&quot; /&gt; event.">引發 <see cref="E:System.Data.DataView.ListChanged" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">開啟 <see cref="T:System.Data.DataView" />。</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary vsli:raw="Reserved for internal use only.">已保留供內部使用。</summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary vsli:raw="Gets or sets the expression used to filter which rows are viewed in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">取得或設定用來篩選在 <see cref="T:System.Data.DataView" /> 中檢視之資料列的運算式。</summary>
      <returns vsli:raw="A string that specifies how rows are to be filtered.">字串，指定資料列的篩選方式。</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary vsli:raw="Gets or sets the row state filter used in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">取得或設定在 <see cref="T:System.Data.DataView" /> 使用的資料列狀態篩選。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.DataViewRowState" /> 值。</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary vsli:raw="Gets or sets the sort column or columns, and sort order for the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">取得或設定排序資料行或資料行，並排序 <see cref="T:System.Data.DataView" /> 的次序。</summary>
      <returns vsli:raw="A string that contains the column name followed by &quot;ASC&quot; (ascending) or &quot;DESC&quot; (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas.">包含資料行名稱的字串，後面緊接著 "ASC" (表示遞增) 或 "DESC" (表示遞減)。 根據預設會遞增排序資料行。 可以用逗號分隔多個資料行。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.SyncRoot" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 值。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.Add(System.Object)" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 值。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 值。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 值。</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value to be inserted.">要插入的 <see cref="T:System.Object" /> 值。</param>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IList.IsFixedSize" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IList.IsReadOnly" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <param name="recordIndex" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 值。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 值。</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.RemoveAt(System.Int32)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">
        <see cref="T:System.Int32" /> 值。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingList.AddNew" />。</summary>
      <returns vsli:raw="The item added to the list.">加入此清單的項目。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件。</param>
      <param name="direction" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.ListSortDirection" /> 物件。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件。</param>
      <param name="key" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">
        <see cref="T:System.Object" /> 值。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveSort&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />。</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />。</summary>
      <param name="sorts" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDescriptionCollection&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> 物件。</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingListView.Filter" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingListView.Filter" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.RemoveFilter&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />。</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">尋找在集合中顯示為可繫結的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件陣列。 這可以是 <see langword="null" />。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件的陣列。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />。</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary vsli:raw="Gets or sets the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">取得或設定來源 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that provides the data for this view.">為這個檢視提供資料的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">根據現有 <see cref="T:System.Data.DataView" /> 中的資料列，建立並傳回新的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">新的 <see cref="T:System.Data.DataTable" /> 執行個體，其中包含所要求的資料列和資料行。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">根據現有 <see cref="T:System.Data.DataView" /> 中的資料列，建立並傳回新的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">如果為 <see langword="true" />，則傳回的 <see cref="T:System.Data.DataTable" /> 包含具有其所有資料行相異值的資料列。 預設值為 <see langword="false" />。</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">包含資料行名稱清單的字串陣列，並且要包含在傳回的 <see cref="T:System.Data.DataTable" />。 <see cref="T:System.Data.DataTable" /> 包含指定資料行，其順序為在此陣列中出現的順序。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">新的 <see cref="T:System.Data.DataTable" /> 執行個體，其中包含所要求的資料列和資料行。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">根據現有 <see cref="T:System.Data.DataView" /> 中的資料列，建立並傳回新的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">傳回之 <see cref="T:System.Data.DataTable" /> 的名稱。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">新的 <see cref="T:System.Data.DataTable" /> 執行個體，其中包含所要求的資料列和資料行。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">根據現有 <see cref="T:System.Data.DataView" /> 中的資料列，建立並傳回新的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">傳回之 <see cref="T:System.Data.DataTable" /> 的名稱。</param>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">如果為 <see langword="true" />，則傳回的 <see cref="T:System.Data.DataTable" /> 包含具有其所有資料行相異值的資料列。 預設值為 <see langword="false" />。</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see langword=&quot;DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">包含資料行名稱清單的字串陣列，並且要包含在傳回的 <see cref="T:System.Data.DataTable" />。 <see langword="DataTable" /> 包含指定資料行，其順序為在此陣列中出現的順序。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">新的 <see cref="T:System.Data.DataTable" /> 執行個體，其中包含所要求的資料列和資料行。</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary vsli:raw="Reserved for internal use only.">已保留供內部使用。</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary vsli:raw="Reserved for internal use only.">已保留供內部使用。</summary>
      <param name="force" vsli:raw="Reserved for internal use only.">已保留供內部使用。</param>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary vsli:raw="Contains a default &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 中的每一個 <see cref="T:System.Data.DataTable" /> 都包含預設的 <see cref="T:System.Data.DataViewSettingCollection" />。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataViewManager" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">為指定的 <see cref="T:System.Data.DataSet" /> 初始化 <see cref="T:System.Data.DataViewManager" /> 類別的新執行個體。</summary>
      <param name="dataSet" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataSet" /> 的名稱。</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">為指定的 <see cref="T:System.Data.DataTable" /> 建立 <see cref="T:System.Data.DataView" />。</summary>
      <param name="table" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要在 <see cref="T:System.Data.DataTable" /> 中使用的 <see cref="T:System.Data.DataView" /> 名稱。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">
        <see cref="T:System.Data.DataView" /> 物件。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use with the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">取得或設定與 <see cref="T:System.Data.DataSet" /> 一起使用的 <see cref="T:System.Data.DataViewManager" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary vsli:raw="Gets or sets a value that is used for code persistence.">取得或設定用於程式碼保存的值。</summary>
      <returns vsli:raw="A value that is used for code persistence.">用於程式碼保存的值。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">為每個在 <see cref="T:System.Data.DataViewSettingCollection" /> 中的 <see cref="T:System.Data.DataTable" /> 取得 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see langword=&quot;DataTable&quot; /&gt;.">每個 <see langword="DataTable" /> 的 <see cref="T:System.Data.DataViewSettingCollection" />。</returns>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary vsli:raw="Occurs after a row is added to or deleted from a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">發生於在 <see cref="T:System.Data.DataView" /> 中加入或刪除資料列之後。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataViewManager.ListChanged&quot; /&gt; event.">引發 <see cref="E:System.Data.DataViewManager.ListChanged" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">在 <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> 中加入或刪除 <see cref="T:System.Data.DataRelation" /> 時，引發 <see cref="T:System.Data.DataRelationCollection" /> 事件。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">從特定的 <see cref="T:System.Collections.ICollection" /> 索引開始，將 <see cref="T:System.Array" /> 的項目複製到 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.ICollection" /> 複製過來之項目的目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.Count" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">將項目加入至 <see cref="T:System.Collections.IList" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">要加入至 <see cref="T:System.Object" /> 的 <see cref="T:System.Collections.IList" />。</param>
      <returns vsli:raw="The position into which the new element was inserted.">插入新項目的位置。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; contains a specific value.">判斷 <see cref="T:System.Collections.IList" /> 是否包含特定值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">要在 <see cref="T:System.Collections.IList" /> 中尋找的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在 <see cref="T:System.Collections.IList" /> 中找到 <see cref="T:System.Object" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">判斷 <see cref="T:System.Collections.IList" /> 中指定項目的索引。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">要在 <see cref="T:System.Collections.IList" /> 中尋找的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">如果可在清單中找到則為 <paramref name="value" /> 的索引，否則為 -1。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; at the specified index.">將項目插入位於指定索引的 <see cref="T:System.Collections.IList" />。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">應在 <paramref name="value" /> 插入以零為起始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert into the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">要插入 <see cref="T:System.Collections.IList" /> 的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 有固定大小，則為 <see cref="T:System.Collections.IList" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IList.IsReadOnly" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">在指定的索引位置上取得或設定項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">要取得或設定之以零為起始的項目索引。</param>
      <returns vsli:raw="The element at the specified index.">在指定索引上的項目。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">從 <see cref="T:System.Collections.IList" /> 移除特定物件之第一個符合的元素。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">要從 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; item at the specified index.">移除在指定索引處的 <see cref="T:System.Collections.IList" /> 項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">要移除之項目的以零為起始的索引。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to the indexes used for searching.">將 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 加入用來搜尋的索引中。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to add to the indexes used for searching.">要加入至用來搜尋之索引的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingList.AddNew" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IBindingList.AddNew" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Sorts the list based on a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; and a &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt;.">根據 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 和 <see cref="T:System.ComponentModel.ListSortDirection" /> 來排序清單。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to sort by.">要做為排序依據的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; values.">其中一個 <see cref="T:System.ComponentModel.ListSortDirection" /> 值。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="Returns the index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">傳回具有指定 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 的列索引。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to search on.">要在其上搜尋的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="key" vsli:raw="The value of the property parameter to search for.">要搜尋的 property 參數值。</param>
      <returns vsli:raw="The index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">具有指定 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 的列索引。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; from the indexes used for searching.">從用來搜尋的索引中移除 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to remove from the indexes used for searching.">要從用來搜尋的索引中移除的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="Removes any sort applied using &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">移除任何使用 <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> 的套用排序。</summary>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">傳回代表繫結資料所用各項目屬性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">尋找在集合中顯示為可繫結的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件陣列。 這可以是 <see langword="null" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">代表繫結資料所用各項目屬性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the name of the list.">傳回清單的名稱。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects, for which the list name is returned. This can be &lt;see langword=&quot;null&quot; /&gt;.">傳回清單名稱之 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件的陣列。 這可以是 <see langword="null" />。</param>
      <returns vsli:raw="The name of the list.">清單的名稱。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataTableCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">在 <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> 中加入或刪除 <see cref="T:System.Data.DataTable" /> 時，引發 <see cref="T:System.Data.DataTableCollection" /> 事件。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary vsli:raw="Describes the version of data in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">描述 <see cref="T:System.Data.DataRow" /> 中的資料版本。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary vsli:raw="A new row.">新的資料列。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary vsli:raw="Current rows including unchanged, new, and modified rows. By default, &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; is set to CurrentRows.">目前的資料列，這些資料列包含未變更的、新的和修改的資料列。 根據預設，<see cref="T:System.Data.DataViewRowState" /> 會設為 CurrentRows。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary vsli:raw="A deleted row.">刪除的資料列。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary vsli:raw="A current version of original data that has been modified (see &lt;see langword=&quot;ModifiedOriginal&quot; /&gt;).">已經修改之原始資料目前的版本 (請參閱 <see langword="ModifiedOriginal" />)。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary vsli:raw="The original version of the data that was modified. (Although the data has since been modified, it is available as &lt;see langword=&quot;ModifiedCurrent&quot; /&gt;).">已修改之資料的原始版本 (雖然已經過修改，這些資料還是以 <see langword="ModifiedCurrent" /> 提供)。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary vsli:raw="None.">無。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary vsli:raw="Original rows including unchanged and deleted rows.">原始資料列，這些資料列包含未變更和已刪除的資料列。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary vsli:raw="An unchanged row.">未變更的資料列。</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary vsli:raw="Represents the default settings for &lt;see cref=&quot;P:System.Data.DataView.ApplyDefaultSort&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.DataViewManager&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;P:System.Data.DataView.Table&quot; /&gt; for DataViews created from the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">表示從 <see cref="P:System.Data.DataView.ApplyDefaultSort" /> 建立之 DataView 的 <see cref="P:System.Data.DataView.DataViewManager" />、<see cref="P:System.Data.DataView.RowFilter" />、<see cref="P:System.Data.DataView.RowStateFilter" />、<see cref="P:System.Data.DataView.Sort" />、<see cref="P:System.Data.DataView.Table" /> 和 <see cref="T:System.Data.DataViewManager" /> 等的預設值。</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value indicating whether to use the default sort.">取得或設定數值，表示是否要使用預設排序。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default sort is used; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />，表示使用預設排序；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; that contains this &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt;.">取得含有這個 <see cref="T:System.Data.DataViewManager" /> 的 <see cref="T:System.Data.DataViewSetting" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">
        <see cref="T:System.Data.DataViewManager" /> 物件。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary vsli:raw="Gets or sets the filter to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;. See &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; for a code sample using RowFilter.">取得或設定要在 <see cref="T:System.Data.DataView" /> 中套用的篩選條件。 如需使用 RowFilter 的程式碼範例，請參閱 <see cref="P:System.Data.DataView.RowFilter" />。</summary>
      <returns vsli:raw="A string that contains the filter to apply.">字串，含有要套用的篩選條件。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary vsli:raw="Gets or sets a value indicating whether to display Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">取得或設定數值，表示是否要在 <see cref="T:System.Data.DataView" /> 中顯示 Current、Deleted、Modified Current、ModifiedOriginal、New、Original、Unchanged 或無資料列。</summary>
      <returns vsli:raw="A value that indicates which rows to display.">指示要顯示哪個資料列的值。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary vsli:raw="Gets or sets a value indicating the sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">取得或設定數值，表示要在 <see cref="T:System.Data.DataView" /> 中套用的排序。</summary>
      <returns vsli:raw="The sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要在 <see cref="T:System.Data.DataView" /> 中套用的排序。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; properties apply.">取得 <see cref="T:System.Data.DataTable" /> 屬性套用至的 <see cref="T:System.Data.DataViewSetting" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 物件。</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary vsli:raw="Contains a read-only collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">含有在 <see cref="T:System.Data.DataViewSetting" /> 中每個 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataSet" /> 物件之唯讀集合。</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">將集合物件複製到指定索引開頭的一維 <see cref="T:System.Array" /> 執行個體。</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">一維 <see cref="T:System.Array" />，是從集合複製之值的目的端。</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">要開始插入的陣列索引。</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">將集合物件複製到指定索引開頭的一維 <see cref="T:System.Array" /> 執行個體。</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">一維 <see cref="T:System.Array" />，是從集合複製之值的目的端。</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">要開始插入的陣列索引。</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">取得 <see cref="T:System.Data.DataViewSetting" /> 中的 <see cref="T:System.Data.DataViewSettingCollection" /> 物件數目。</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the collection.">集合中的 <see cref="T:System.Data.DataViewSetting" /> 物件數目。</returns>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">取得集合的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">
        <see cref="T:System.Collections.IEnumerator" /> 物件。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is read-only.">取得值，這個值表示 <see cref="T:System.Data.DataViewSettingCollection" /> 是否為唯讀。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt; to indicate the collection is read-only.">一律傳回<see langword="true" />以表示集合是唯讀的。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is synchronized (thread-safe).">取得值，指出 <see cref="T:System.Data.DataViewSettingCollection" /> 的存取是否同步 (安全執行緒)。</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;, unless overridden by a derived class.">除非由衍生類別 (Derived Class) 覆寫，否則這個屬性一定是 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the collection.">從集合中取得指定之 <see cref="T:System.Data.DataViewSetting" /> 的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要尋找的 <see cref="T:System.Data.DataTable" />。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> 物件的集合。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its index.">取得由其索引指定之 <see cref="T:System.Data.DataViewSetting" /> 的 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要尋找之 <see cref="T:System.Data.DataTable" /> 的以零起始的索引。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> 物件的集合。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its name.">取得由其名稱指定之 <see cref="T:System.Data.DataViewSetting" /> 的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要尋找的 <see cref="T:System.Data.DataTable" /> 名稱。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> 物件的集合。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">取得可用以同步存取 <see cref="T:System.Data.DataViewSettingCollection" /> 的物件。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">可用以同步存取 <see cref="T:System.Data.DataViewSettingCollection" /> 的物件。</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary vsli:raw="The exception that is thrown by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; during an insert, update, or delete operation if the number of rows affected equals zero.">受影響的資料列數目等於零時，由 <see cref="T:System.Data.Common.DataAdapter" /> 在插入、更新或刪除作業期間擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DBConcurrencyException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DBConcurrencyException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">描述例外狀況詳細資料的文字字串。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DBConcurrencyException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">描述例外狀況詳細資料的文字字串。</param>
      <param name="inner" vsli:raw="A reference to an inner exception.">內部例外狀況的參考。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DBConcurrencyException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for this exception.">解釋這個例外狀況原因的錯誤訊息。</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
      <param name="dataRows" vsli:raw="An array containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception.">包含更新失敗並且產生此例外狀況之 <see cref="T:System.Data.DataRow" /> 物件的陣列。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">複製更新失敗並產生此例外狀況的 <see cref="T:System.Data.DataRow" /> 物件到指定的 <see cref="T:System.Data.DataRow" /> 陣列中。</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">
        <see cref="T:System.Data.DataRow" /> 物件的一維陣列，用來包含複製的 <see cref="T:System.Data.DataRow" /> 物件。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, starting at the specified destination array index.">複製更新失敗並產生此例外狀況的 <see cref="T:System.Data.DataRow" /> 物件到指定的 <see cref="T:System.Data.DataRow" /> 陣列中，從指定之目的陣列索引開始。</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">
        <see cref="T:System.Data.DataRow" /> 物件的一維陣列，用來包含複製的 <see cref="T:System.Data.DataRow" /> 物件。</param>
      <param name="arrayIndex" vsli:raw="The destination array index to start copying into.">要開始複製的目的陣列索引。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the specified serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">以序列化 <see cref="T:System.Data.DBConcurrencyException" /> 所需的資料填入指定的序列化資訊物件。</summary>
      <param name="si">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，保留與 <see cref="T:System.Data.DBConcurrencyException" /> 關聯的序列化資料。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，含有與 <see cref="T:System.Data.DBConcurrencyException" /> 關聯的序列資料流的來源和目的端。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="info" /> 參數為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that generated the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">取得或設定產生 <see cref="T:System.Data.DataRow" /> 之 <see cref="T:System.Data.DBConcurrencyException" /> 的值。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 的值。</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary vsli:raw="Gets the number of rows whose update failed, generating this exception.">取得資料列的數目，這些資料列的更新失敗，因而產生此例外狀況。</summary>
      <returns vsli:raw="An integer containing a count of the number of rows whose update failed.">包含資料列計數的整數，這些資料列的更新失敗。</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary vsli:raw="Specifies the data type of a field, a property, or a &lt;see langword=&quot;Parameter&quot; /&gt; object of a .NET data provider.">指定 .NET Framework 資料提供者 (Data Provider) 的欄位、屬性或 <see langword="Parameter" /> 物件的資料型別。</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary vsli:raw="A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">非 Unicode 字元的可變長度資料流，範圍在 1 和 8,000 字元之間。</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary vsli:raw="A fixed-length stream of non-Unicode characters.">非 Unicode 字元的固定長度資料流。</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary vsli:raw="A variable-length stream of binary data ranging between 1 and 8,000 bytes.">二進位資料的可變長度資料流，範圍在 1 和 8,000 位元組之間。</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary vsli:raw="A simple type representing Boolean values of &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">表示 <see langword="true" /> 或 <see langword="false" /> 的布林值的簡單型別。</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary vsli:raw="An 8-bit unsigned integer ranging in value from 0 to 255.">值範圍在 0 到 255 之間的 8 位元不帶正負號整數 (Unsigned Integer)。</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary vsli:raw="A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.">貨幣值，範圍從 -2 63 (或 -922,337,203,685,477.5808) 到 2 63 -1 (或 +922,337,203,685,477.5807)，正確率為貨幣單位的千分之十。</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary vsli:raw="A type representing a date value.">代表日期值的型別。</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary vsli:raw="A type representing a date and time value.">表示日期和時間值的型別。</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">日期和時間資料。 日期值範圍是從西元後 1 年 1 月 1 日到西元後 9999 年 12 月31 日。 時間值的範圍從 00:00:00 到 23:59:59.9999999，精確度為 100 奈秒。</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">具備時區感知功能的日期和時間資料。 日期值範圍是從西元後 1 年 1 月 1 日到西元後 9999 年 12 月31 日。 時間值的範圍從 00:00:00 到 23:59:59.9999999，精確度為 100 奈秒。 時區值範圍從 -14:00 到 +14:00。</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary vsli:raw="A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.">簡單型別，表示具有 28-29 個有效位數、範圍從 1.0 x 10 -28 到大約 7.9 x 10 28 的數值。</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary vsli:raw="A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.">浮點型別，表示具有 15-16 位數精確度、範圍從 5.0 x 10 -324 到大約 1.7 x 10 308 的數值。</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary vsli:raw="A globally unique identifier (or GUID).">全域唯一識別項 (或 GUID)。</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary vsli:raw="An integral type representing signed 16-bit integers with values between -32768 and 32767.">表示帶正負號的 16 位元整數的整數型別，其值介於 -32768 和 32767 之間。</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary vsli:raw="An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.">表示帶正負號的 32 位元整數的整數型別，其值介於 -2147483648 和 2147483647 之間。</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary vsli:raw="An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.">表示帶正負號的 64 位元整數的整數型別，其值介於 -9223372036854775808 和 9223372036854775807 之間。</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary vsli:raw="A general type representing any reference or value type not explicitly represented by another &lt;see langword=&quot;DbType&quot; /&gt; value.">表示未明確由其他 <see langword="DbType" /> 值表示的任何參考或實值型別之一般型別。</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary vsli:raw="An integral type representing signed 8-bit integers with values between -128 and 127.">表示帶正負號的 8 位元整數的整數型別，其值介於 -128 和 127 之間。</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary vsli:raw="A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.">浮點型別，表示具有 7 位數精確度、範圍從 1.5 x 10 -45 到大約 3.4 x 10 38 的數值。</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary vsli:raw="A type representing Unicode character strings.">表示 Unicode 字元字串的型別。</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary vsli:raw="A fixed-length string of Unicode characters.">Unicode 字元的固定長度字串。</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary vsli:raw="A type representing a SQL Server &lt;see langword=&quot;DateTime&quot; /&gt; value. If you want to use a SQL Server &lt;see langword=&quot;time&quot; /&gt; value, use &lt;see cref=&quot;F:System.Data.SqlDbType.Time&quot; /&gt;.">型別，表示 SQL Server <see langword="DateTime" /> 值。 如果您想要使用 SQL Server <see langword="time" /> 值，請使用 <see cref="F:System.Data.SqlDbType.Time" />。</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary vsli:raw="An integral type representing unsigned 16-bit integers with values between 0 and 65535.">表示不帶正負號的 16 位元整數的整數型別，其值介於 0 和 65535 之間。</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary vsli:raw="An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.">表示不帶正負號的 32 位元整數的整數型別，其值介於 0 和 4294967295 之間。</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary vsli:raw="An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.">表示不帶正負號的 64 位元整數的整數型別，其值介於 0 和 18446744073709551615 之間。</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary vsli:raw="A variable-length numeric value.">可變長度數值。</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary vsli:raw="A parsed representation of an XML document or fragment.">XML 文件或片段的剖析表示。</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary vsli:raw="Represents the exception that is thrown when an action is tried on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">表示在已經刪除的 <see cref="T:System.Data.DataRow" /> 上嘗試動作時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with serialization information.">使用序列化資訊，初始化 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或還原序列化物件所需要的資料。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">來源的描述和指定的序列化資料流的目的端。</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary vsli:raw="Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; -related object.">表示在 <see cref="T:System.Data.DataSet" /> 相關物件中的加入作業期間遭遇重複的資料庫物件時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DuplicateNameException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with serialization information.">使用序列化資訊，初始化 <see cref="T:System.Data.DuplicateNameException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或還原序列化物件所需要的資料。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">來源的描述和指定的序列化資料流的目的端。</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.DuplicateNameException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string and exception.">使用指定的字串和例外狀況，初始化 <see cref="T:System.Data.DuplicateNameException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a LINQ to DataSet query. This API supports the .NET infrastructure and is not intended to be used directly from your code.">表示從 LINQ to DataSet 查詢所傳回之 <see cref="T:System.Data.DataRow" /> 物件的集合。 這個 API 支援 .NET Framework 基礎結構，並不適合直接從您的程式碼中使用。</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects. This API supports the .NET infrastructure and is not intended to be used directly from your code.">傳回 <see cref="T:System.Data.DataRow" /> 物件集合的列舉值。 這個 API 支援 .NET Framework 基礎結構，並不適合直接從您的程式碼中使用。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Collections.IEnumerator" />，可用來周遊 <see cref="T:System.Data.DataRow" /> 物件的集合。</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">表示從查詢所傳回之 <see cref="T:System.Data.DataRow" /> 物件的集合。</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">來源序列中的物件類型，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of contained row objects.">傳回所包含之資料列物件集合的列舉值。</summary>
      <returns vsli:raw="A strongly-typed &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to traverse the collection of &lt;paramref name=&quot;TRow&quot; /&gt; objects.">強型別的 <see cref="T:System.Collections.Generic.IEnumerator`1" />，可用來周遊 <paramref name="TRow" /> 物件的集合。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">傳回 <see cref="T:System.Data.DataRow" /> 物件集合的列舉值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Collections.IEnumerator" />，可用來周遊 <see cref="T:System.Data.DataRow" /> 物件的集合。</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary vsli:raw="Contains the extension methods for the data row collection classes.">包含資料列集合類別的擴充方法。</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; to the specified type.">將 <see cref="T:System.Data.EnumerableRowCollection" /> 的項目轉換為指定的型別。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains the elements to be converted.">包含要轉換之項目的 <see cref="T:System.Data.EnumerableRowCollection" />。</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of source to.">做為來源之項目要轉換的目標型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含已轉換成指定之型別的每個來源序列項目。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">無法將序列中的項目轉換為型別 <paramref name="TResult" />。</exception>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">依據指定的索引鍵，按遞增順序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的資料列。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目排序依據是指定的索引鍵。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">依據指定的索引鍵和比較子，按遞增順序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的資料列。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目是根據指定的索引鍵和比較子進行排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">依據指定的索引鍵，按遞減順序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的資料列。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目排序依據是指定的索引鍵。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">依據指定的索引鍵和比較子，按遞減順序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的資料列。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目是根據指定的索引鍵和比較子進行排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; into a new form.">將 <see cref="T:System.Data.EnumerableRowCollection`1" /> 的每一個項目規劃成一個新的表單。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transform function upon.">
        <see cref="T:System.Data.EnumerableRowCollection`1" />，包含要對其叫用轉換函式的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">要套用至每個項目的轉換函式。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="S" vsli:raw="The type that &lt;paramref name=&quot;TRow&quot; /&gt; will be transformed into.">
        <paramref name="TRow" /> 將轉換為那種型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Data.EnumerableRowCollection`1" />，其項目是對 <paramref name="source" /> 之各個項目叫用轉換函式所產生的結果。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">依據指定的索引鍵，按遞增順序執行 <see cref="T:System.Data.EnumerableRowCollection" /> 中資料列的次要排序作業。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目排序依據是指定的索引鍵。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">依據指定的索引鍵和比較子，按遞增順序執行 <see cref="T:System.Data.EnumerableRowCollection" /> 中資料列的次要排序作業。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目是根據指定的索引鍵和比較子進行排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">依據指定的索引鍵，按遞減順序執行 <see cref="T:System.Data.EnumerableRowCollection" /> 中資料列的次要排序作業。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目排序依據是指定的索引鍵。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">依據指定的索引鍵和比較子，按遞減順序執行 <see cref="T:System.Data.EnumerableRowCollection" /> 中資料列的次要排序作業。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目是根據指定的索引鍵和比較子進行排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">根據指定的述詞來篩選資料列序列。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含要篩選的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其中包含輸入序列中符合條件的資料列。</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; cannot be evaluated.">表示無法評估 <see cref="P:System.Data.DataColumn.Expression" /> 的 <see cref="T:System.Data.DataColumn" /> 屬性時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class.">初始化 <see cref="T:System.Data.EvaluateException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">使用 <see cref="T:System.Data.EvaluateException" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">序列化或還原序列化物件所需的資料。</param>
      <param name="context" vsli:raw="The source and destination of a particular serialized stream.">特定序列化資料流的來源和目的端。</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.EvaluateException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.EvaluateException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">提供 <see cref="E:System.Data.Common.DataAdapter.FillError" /> 的 <see cref="T:System.Data.Common.DbDataAdapter" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.FillErrorEventArgs" /> 類別的新執行個體。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">正在更新的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="values" vsli:raw="The values for the row being updated.">正在更新的資料列值。</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary vsli:raw="Gets or sets a value indicating whether to continue the fill operation despite the error.">取得或設定數值，表示是否要忽略錯誤來繼續填入作業。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the fill operation should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果填入作業應該繼續，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated when the error occurred.">取得錯誤發生時正在更新的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">正在更新的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary vsli:raw="Gets the errors being handled.">取得正在處理的錯誤。</summary>
      <returns vsli:raw="The errors being handled.">正在處理的錯誤。</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary vsli:raw="Gets the values for the row being updated when the error occurred.">取得錯誤發生時正在更新的資料列值。</summary>
      <returns vsli:raw="The values for the row being updated.">正在更新的資料列值。</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event.">代表將處理 <see cref="E:System.Data.Common.DataAdapter.FillError" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.Data.FillErrorEventArgs" />。</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary vsli:raw="Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.">表示值或資料列刪除或更新時，在主索引鍵/外部索引鍵關聯性 (Relationship) 中的資料行集上強制執行的動作限制。</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定的父代和子系 <see cref="T:System.Data.ForeignKeyConstraint" /> 物件，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">條件約束中的父代 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">條件約束中的子系 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">資料行的其中一個或者兩個都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">資料行具有不同的資料型別。  
-或- 
資料表不屬於相同的 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用父代和子系 <see cref="T:System.Data.ForeignKeyConstraint" /> 物件的指定陣列，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">條件約束中父代 <see cref="T:System.Data.DataColumn" /> 的陣列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">條件約束中子系 <see cref="T:System.Data.DataColumn" /> 的陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">資料行的其中一個或者兩個都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">資料行具有不同的資料型別。  
-或- 
資料表不屬於相同的 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定名稱以及父代和子系 <see cref="T:System.Data.ForeignKeyConstraint" /> 物件，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">條件約束的名稱。</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">條件約束中的父代 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">條件約束中的子系 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">資料行的其中一個或者兩個都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">資料行具有不同的資料型別。  
-或- 
資料表不屬於相同的 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, and arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定名稱以及父代和子系 <see cref="T:System.Data.ForeignKeyConstraint" /> 物件的陣列，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or empty string, a default name will be given when added to the constraints collection.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> 的名稱。 如果是 <see langword="null" /> 或空字串，則在加入至條件約束集合時，會指定預設的名稱。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">條件約束中父代 <see cref="T:System.Data.DataColumn" /> 的陣列。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">條件約束中子系 <see cref="T:System.Data.DataColumn" /> 的陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">資料行的其中一個或者兩個都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">資料行具有不同的資料型別。  
-或- 
資料表不屬於相同的 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">這個建構函式是在 Visual Studio 環境中，針對支援設計階段而提供。 接著必須透過 <see cref="T:System.Data.ForeignKeyConstraint" />，將使用此建構函式建立的 <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" /> 物件加入至集合中。 具有指定名稱的資料表和資料行必須在呼叫方法時便存在，如果在呼叫這個建構函式之前便已經呼叫 <see cref="M:System.Data.DataTable.BeginInit" />，則具有指定名稱的資料表和資料行必須在呼叫 <see cref="M:System.Data.DataTable.EndInit" /> 時已存在。</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">條件約束的名稱。</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">父代 (Parent) <see cref="T:System.Data.DataTable" /> 的名稱，包含條件約束 (Constraint) 中的父代 <see cref="T:System.Data.DataColumn" /> 物件。</param>
      <param name="parentTableNamespace" vsli:raw="The name of the &lt;see cref=&quot;P:System.Data.DataTable.Namespace&quot; /&gt;.">
        <see cref="P:System.Data.DataTable.Namespace" /> 的名稱。</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">條件約束中的父代 <see cref="T:System.Data.DataColumn" /> 物件的名稱陣列。</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">條件約束中的子系 <see cref="T:System.Data.DataColumn" /> 物件的名稱陣列。</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">其中一個 <see cref="T:System.Data.AcceptRejectRule" /> 值。 可能的值包括 <see langword="None" />、<see langword="Cascade" /> 和 <see langword="Default" />。</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">其中一個 <see cref="T:System.Data.Rule" /> 值，要在資料列刪除時使用。 預設為 <see langword="Cascade" />。 可能的值包括：<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" /> 和 <see langword="Default" />。</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">其中一個 <see cref="T:System.Data.Rule" /> 值，要在資料列更新時使用。 預設為 <see langword="Cascade" />。 可能的值包括：<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" /> 和 <see langword="Default" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">資料行的其中一個或者兩個都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">資料行具有不同的資料型別。  
-或- 
資料表不屬於相同的 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">這個建構函式是在 Visual Studio 環境中，針對支援設計階段而提供。 接著必須透過 <see cref="T:System.Data.ForeignKeyConstraint" />，將使用此建構函式建立的 <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" /> 物件加入至集合中。 具有指定名稱的資料表和資料行必須在呼叫方法時便存在，如果在呼叫這個建構函式之前便已經呼叫 <see cref="M:System.Data.DataTable.BeginInit" />，則具有指定名稱的資料表和資料行必須在呼叫 <see cref="M:System.Data.DataTable.EndInit" /> 時已存在。</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">條件約束的名稱。</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">父代 (Parent) <see cref="T:System.Data.DataTable" /> 的名稱，包含條件約束 (Constraint) 中的父代 <see cref="T:System.Data.DataColumn" /> 物件。</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">條件約束中的父代 <see cref="T:System.Data.DataColumn" /> 物件的名稱陣列。</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">條件約束中的子系 <see cref="T:System.Data.DataColumn" /> 物件的名稱陣列。</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">其中一個 <see cref="T:System.Data.AcceptRejectRule" /> 值。 可能的值包括 <see langword="None" />、<see langword="Cascade" /> 和 <see langword="Default" />。</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">其中一個 <see cref="T:System.Data.Rule" /> 值，要在資料列刪除時使用。 預設為 <see langword="Cascade" />。 可能的值包括：<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" /> 和 <see langword="Default" />。</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">其中一個 <see cref="T:System.Data.Rule" /> 值，要在資料列更新時使用。 預設為 <see langword="Cascade" />。 可能的值包括：<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" /> 和 <see langword="Default" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">資料行的其中一個或者兩個都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">資料行具有不同的資料型別。  
-或- 
資料表不屬於相同的 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary vsli:raw="Indicates the action that should take place across this constraint when &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; is invoked.">指示在叫用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 時應該跨越這個條件約束來發生的動作。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, and &lt;see langword=&quot;Cascade&quot; /&gt;. The default is &lt;see langword=&quot;None&quot; /&gt;.">其中一個 <see cref="T:System.Data.AcceptRejectRule" /> 值。 可能的值包括 <see langword="None" /> 和 <see langword="Cascade" />。 預設為 <see langword="None" />。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary vsli:raw="Gets the child columns of this constraint.">取得這個條件約束的子資料行。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the child columns of the constraint.">
        <see cref="T:System.Data.DataColumn" /> 物件 (為條件約束的子資料行) 的陣列。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint when a row is deleted.">取得或設定資料列刪除時會跨越這個條件約束發生的動作。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">其中一個 <see cref="T:System.Data.Rule" /> 值。 預設為 <see langword="Cascade" />。</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is identical to the specified object.">取得值，指出目前的 <see cref="T:System.Data.ForeignKeyConstraint" /> 是否與指定的物件相同。</summary>
      <param name="key" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is compared. Two &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; are equal if they constrain the same columns.">這個 <see cref="T:System.Data.ForeignKeyConstraint" /> 所要比較的物件。 如果兩個 <see cref="T:System.Data.ForeignKeyConstraint" /> 約束相同的資料行，則這兩者相等。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果物件相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; object.">取得 <see cref="T:System.Data.ForeignKeyConstraint" /> 物件的這個執行個體之雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary vsli:raw="The parent columns of this constraint.">這個條件約束的父資料行。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of the constraint.">
        <see cref="T:System.Data.DataColumn" /> 物件 (為條件約束的父資料行) 的陣列。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary vsli:raw="Gets the parent table of this constraint.">取得這個條件約束的父資料表。</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this constraint.">這個條件約束的父代 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary vsli:raw="Gets the child table of this constraint.">取得這個條件約束的子資料表。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table in the constraint.">
        <see cref="T:System.Data.DataTable" />，即條件約束中的子資料表。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint on when a row is updated.">取得或設定資料列更新時會跨越這個條件約束發生的動作。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">其中一個 <see cref="T:System.Data.Rule" /> 值。 預設為 <see langword="Cascade" />。</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary vsli:raw="Associates a data source column with a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class, which is used in common by .NET data providers.">將資料來源資料行與 <see cref="T:System.Data.DataSet" /> 資料行相關聯，並且由 <see cref="T:System.Data.Common.DataColumnMapping" /> 類別實作，這個類別是由 .NET Framework 資料提供者所共同使用。</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">取得或設定在要對應的 <see cref="T:System.Data.DataSet" /> 中的目的資料行名稱。</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">在要對應的 <see cref="T:System.Data.DataSet" /> 中的目的資料行名稱。 名稱不區分大小寫。</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">取得或設定在資料來源中的來源資料行名稱。 名稱區分大小寫。</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">在資料來源中的資料行的區分大小寫名稱。</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary vsli:raw="Contains a collection of DataColumnMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">包含 DataColumnMapping 物件的集合，並且是由 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 所實作，這是由 .NET Framework 資料提供者 (Data Provider) 所共同使用。</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a ColumnMapping object to the ColumnMapping collection using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">使用來源資料行和 <see cref="T:System.Data.DataSet" /> 資料行名稱來將 ColumnMapping 物件加入至 ColumnMapping 集合。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">來源資料行的區分大小寫名稱。</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">
        <see cref="T:System.Data.DataSet" /> 資料行的名稱。</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">加入至集合的 ColumnMapping 物件。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">取得值，表示 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 是否包含具有指定來源資料行名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">來源資料行的區分大小寫名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果存在具有指定來源資料行名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the ColumnMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">取得具有指定 <see cref="T:System.Data.DataSet" /> 資料行名稱的 ColumnMapping 物件。</summary>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column within the collection.">在集合中的 <see cref="T:System.Data.DataSet" /> 資料行名稱。</param>
      <returns vsli:raw="The ColumnMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; column name.">具有指定 <see langword="DataSet" /> 資料行名稱的 ColumnMapping 物件。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name. The name is case-sensitive.">取得具有指定來源資料行名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件位置。 名稱區分大小寫。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">來源資料行的區分大小寫名稱。</param>
      <returns vsli:raw="The zero-based location of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object with the specified source column name.">具有指定來源資料行名稱的 <see langword="DataColumnMapping" /> 物件之以零起始的位置。</returns>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">取得或設定具有指定 <see langword="SourceColumn" /> 名稱的 <see cref="T:System.Data.IColumnMapping" /> 物件。</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceColumn&quot; /&gt; name of the &lt;see langword=&quot;IColumnMapping&quot; /&gt; object to find.">要尋找的 <see langword="SourceColumn" /> 物件之 <see langword="IColumnMapping" /> 名稱。</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">具有指定 <see langword="IColumnMapping" /> 名稱的 <see langword="SourceColumn" /> 物件。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.IColumnMapping.SourceColumn&quot; /&gt; name from the collection.">從集合中移除具有指定 <see cref="T:System.Data.IColumnMapping" /> 名稱的 <see cref="P:System.Data.IColumnMapping.SourceColumn" /> 物件。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">區分大小寫的 <see langword="SourceColumn" /> 名稱。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object does not exist with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">不存在具有指定 <see langword="SourceColumn" /> 名稱的 <see cref="T:System.Data.Common.DataColumnMapping" /> 物件。</exception>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary vsli:raw="Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source.  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while &lt;see cref=&quot;T:System.Data.IDataAdapter&quot; /&gt; instances could can use any type of data source.">允許物件實作 DataAdapter，並表示用來填滿和更新 <see cref="T:System.Data.DataSet" /> 並更新資料來源的方法集和對應動作相關屬性集。  
 <see cref="T:System.Data.IDbDataAdapter" /> 執行個體適用於本身為 (或類似於) 採用文字命令 (例如 Transact-SQL) 之關聯式資料庫的資料來源，而 <see cref="T:System.Data.IDataAdapter" /> 執行個體則可以使用任何類型的資料來源。</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or updates rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; name, and creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">使用 <see cref="T:System.Data.DataSet" /> 名稱，加入或更新 <see cref="T:System.Data.DataSet" /> 中的資料列，以符合那些在資料來源中的資料列，並建立命名為 "Table" 的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">新增一個名為 "Table" 的 <see cref="T:System.Data.DataTable" /> 至指定的 <see cref="T:System.Data.DataSet" />，並且設定符合指定的 <see cref="T:System.Data.SchemaType" /> 上之資料來源的結構描述。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">
        <see cref="T:System.Data.DataSet" />，以資料來源中的結構描述來填入其中。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">
        <see cref="T:System.Data.DataTable" /> 物件的陣列，包含從資料來源傳回的結構描述資訊。</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">取得在執行 SQL SELECT 陳述式時由使用者設定的參數。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">
        <see cref="T:System.Data.IDataParameter" /> 物件的陣列，含有由使用者設定的參數。</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary vsli:raw="Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.">指示或指定未對應的來源資料表或資料行是否為了篩選或引發錯誤，而使用它們的來源名稱傳遞。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。 預設為 <see langword="Passthrough" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">設定的值不是其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary vsli:raw="Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.">指示或指定遺漏的來源資料表、資料行和關聯性 (Relationship) 是否加入至資料集結構描述 (Schema)、已忽略，或造成要引發的錯誤。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。 預設為 <see langword="Add" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">設定的值不是其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">指示來源資料表如何對應至資料集資料表。</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">集合，提供傳回的資料錄和 <see cref="T:System.Data.DataSet" /> 之間的主要對應。 預設值為空集合。</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">從命名為 "Table" 之 <see cref="T:System.Data.DataSet" /> 的指定 <see cref="T:System.Data.DataTable" /> 中，為每個插入、更新或刪除的資料列呼叫對應的 INSERT、UPDATE 或 DELETE 陳述式。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">用來更新資料來源的 <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</returns>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</exception>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary vsli:raw="Represents a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns; and is implemented by .NET data providers that access data sources.">代表 Command 物件的參數及 (選擇性) 其與 <see cref="T:System.Data.DataSet" /> 資料行的對應，而且是由存取資料來源的 .NET Framework 資料提供者所實作。</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">取得或設定參數的 <see cref="T:System.Data.DbType" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">其中一個 <see cref="T:System.Data.DbType" /> 值。 預設為 <see cref="F:System.Data.DbType.String" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property was not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">屬性並未設定為有效的 <see cref="T:System.Data.DbType" />。</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary vsli:raw="Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">取得或設定值，表示參數是僅限輸入、僅限輸出、雙向或預存程序傳回值參數。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">其中一個 <see cref="T:System.Data.ParameterDirection" /> 值。 預設為 <see langword="Input" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">屬性未設定為其中一個有效的 <see cref="T:System.Data.ParameterDirection" /> 值。</exception>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary vsli:raw="Gets a value indicating whether the parameter accepts null values.">取得值，這個值指出參數是否接受 Null 值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果接受 Null 值，則為 <see langword="true" />；否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;.">取得或設定 <see cref="T:System.Data.IDataParameter" /> 的名稱。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;. The default is an empty string.">
        <see cref="T:System.Data.IDataParameter" /> 的名稱。 預設為空字串。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">取得或設定來源資料行的名稱，其對應至 <see cref="T:System.Data.DataSet" /> 並用於載入或傳回 <see cref="P:System.Data.IDataParameter.Value" />。</summary>
      <returns vsli:raw="The name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">對應至 <see cref="T:System.Data.DataSet" /> 的來源資料行名稱。 預設為空字串。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when loading &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">取得或設定 <see cref="T:System.Data.DataRowVersion" />，以在載入 <see cref="P:System.Data.IDataParameter.Value" /> 時使用。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。 預設為 <see langword="Current" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">屬性未設定為其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">取得或設定參數的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">
        <see cref="T:System.Object" />，為參數的值。 預設值為 null。</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary vsli:raw="Collects all parameters relevant to a Command object and their mappings to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns, and is implemented by .NET data providers that access data sources.">收集所有與 Command 物件相關的參數及其與 <see cref="T:System.Data.DataSet" /> 資料行的對應，而且是由存取資料來源的 .NET Framework 資料提供者所實作。</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a parameter in the collection has the specified name.">取得值，表示集合中的參數是否具有指定的名稱。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">參數名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含該參數，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">取得集合中 <see cref="T:System.Data.IDataParameter" /> 的位置。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">參數名稱。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">集合中 <see cref="T:System.Data.IDataParameter" /> 以零為起始的位置。</returns>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">在指定索引位置上取得或設定參數。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">要擷取的參數名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">位於指定索引位置上的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from the collection.">從集合中移除 <see cref="T:System.Data.IDataParameter" />。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">參數名稱。</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary vsli:raw="Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET data providers that access relational databases.">提供一種方法來讀取一或多個順向的結果集資料流 (這些結果集是在資料來源上執行命令而獲得的)，而且是由存取關聯式資料庫的 .NET Framework 資料提供者所實作。</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; Object.">關閉 <see cref="T:System.Data.IDataReader" /> 物件。</summary>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">取得值，表示目前資料列的巢狀深度。</summary>
      <returns vsli:raw="The level of nesting.">巢狀層級。</returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.&#xA;&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.IDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">傳回 <see cref="T:System.Data.DataTable" />，以描述 <see cref="T:System.Data.IDataReader" /> 的資料行中繼資料。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">描述資料行中繼資料的 <see cref="T:System.Data.DataTable" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.IDataReader" /> 已關閉。</exception>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary vsli:raw="Gets a value indicating whether the data reader is closed.">取得值，指出資料讀取器是否已關閉。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data reader is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果資料讀取器已關閉，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary vsli:raw="Advances the data reader to the next result, when reading the results of batch SQL statements.">在讀取批次 SQL 陳述式的結果時，會將資料讀取器向前移到下一個結果。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果有多個資料列，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to the next record.">將 <see cref="T:System.Data.IDataReader" /> 推進到下一筆記錄。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果有多個資料列，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">取得因執行 SQL 陳述式所變更、插入或刪除的資料列數目。</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">已變更、插入或刪除的資料列數目；如果沒有任何資料列受到影響或陳述式失敗，則為 0；如果是 SELECT 陳述式，則為 -1。</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary vsli:raw="Provides access to the column values within each row for a &lt;see langword=&quot;DataReader&quot; /&gt;, and is implemented by .NET data providers that access relational databases.">針對 <see langword="DataReader" /> 提供存取每個資料列中資料行值的權限，而且是由存取關聯式資料庫的 .NET Framework 資料提供者所實作。</summary>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary vsli:raw="Gets the number of columns in the current row.">取得目前資料列中的資料行數目。</summary>
      <returns vsli:raw="When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.">若未置於有效的資料集中，則為 0；否則為目前記錄中的資料行數目。 預設值為 -1。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">取得指定之資料行的值做為布林值 (Boolean)。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The value of the column.">資料行的值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Gets the 8-bit unsigned integer value of the specified column.">取得指定資料行的 8 位元不帶正負號的整數值。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The 8-bit unsigned integer value of the specified column.">指定資料行的 8 位元不帶正負號的整數值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.">從指定的緩衝區位移開始，將來自指定資料行位移的位元組資料流讀取到緩衝區以做為陣列。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <param name="fieldOffset" vsli:raw="The index within the field from which to start the read operation.">要開始讀取作業之欄位中的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">要將位元組資料流讀取到其中的緩衝區。</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">要開始讀取作業的 <paramref name="buffer" /> 索引。</param>
      <param name="length" vsli:raw="The number of bytes to read.">要讀取的位元組數。</param>
      <returns vsli:raw="The actual number of bytes read.">讀取的實際位元組數目。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Gets the character value of the specified column.">取得指定資料行的字元值。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <returns vsli:raw="The character value of the specified column.">指定資料行的字元值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.">從指定的緩衝區位移開始，將來自指定資料行位移的字元資料流讀取到緩衝區以做為陣列。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">以零為基底的資料行序數。</param>
      <param name="fieldoffset" vsli:raw="The index within the row from which to start the read operation.">要開始讀取作業之資料列中的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">要將位元組資料流讀取到其中的緩衝區。</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">要開始讀取作業的 <paramref name="buffer" /> 索引。</param>
      <param name="length" vsli:raw="The number of bytes to read.">要讀取的位元組數。</param>
      <returns vsli:raw="The actual number of characters read.">讀取的實際字元數目。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">傳回指定之資料行序數的 <see cref="T:System.Data.IDataReader" />。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">指定之資料行序數的 <see cref="T:System.Data.IDataReader" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets the data type information for the specified field.">取得指定欄位的資料類型資訊。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The data type information for the specified field.">指定欄位的資料類型資訊。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the date and time data value of the specified field.">取得指定欄位的日期和時間資料值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The date and time data value of the specified field.">指定欄位的日期和時間資料值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the fixed-position numeric value of the specified field.">取得指定欄位的固定位置數值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The fixed-position numeric value of the specified field.">指定欄位的固定位置數值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the double-precision floating point number of the specified field.">取得指定欄位的雙精確度浮點數。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The double-precision floating point number of the specified field.">指定欄位的雙精確度浮點數。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">取得對應至 <see cref="T:System.Object" /> 類型的 <see cref="T:System.Type" /> 資訊，前者是從 <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> 所傳回。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">對應至 <see cref="T:System.Object" /> 類型的 <see cref="T:System.Type" /> 資訊，前者是從 <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> 所傳回。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the single-precision floating point number of the specified field.">取得指定欄位的單精確度浮點數。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The single-precision floating point number of the specified field.">指定欄位的單精確度浮點數。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">傳回指定欄位的 GUID 值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The GUID value of the specified field.">指定欄位的 GUID 值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the 16-bit signed integer value of the specified field.">取得指定欄位的 16 位元帶正負號的整數值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The 16-bit signed integer value of the specified field.">指定欄位的 16 位元帶正負號的整數值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the 32-bit signed integer value of the specified field.">取得指定欄位的 32 位元帶正負號的整數值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The 32-bit signed integer value of the specified field.">指定欄位的 32 位元帶正負號的整數值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the 64-bit signed integer value of the specified field.">取得指定欄位的 64 位元帶正負號的整數值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The 64-bit signed integer value of the specified field.">指定欄位的 64 位元帶正負號的整數值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Gets the name for the field to find.">取得要尋找的欄位名稱。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The name of the field or the empty string (&quot;&quot;), if there is no value to return.">欄位名稱，或者如果沒有傳回值，則為空字串 ("")。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Return the index of the named field.">傳回具名欄位的索引。</summary>
      <param name="name" vsli:raw="The name of the field to find.">要尋找的欄位名稱。</param>
      <returns vsli:raw="The index of the named field.">具名欄位的索引。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Gets the string value of the specified field.">取得指定欄位的字串值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The string value of the specified field.">指定欄位的字串值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Return the value of the specified field.">傳回指定欄位的值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; which will contain the field value upon return.">
        <see cref="T:System.Object" />，其中將包含所傳回的欄位值。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">使用目前記錄的資料行值填入物件的陣列。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">要將屬性欄位複製到其中的 <see cref="T:System.Object" /> 陣列。</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">陣列中 <see cref="T:System.Object" /> 的執行個體數目。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Return whether the specified field is set to null.">傳回指定的欄位是否設定為 Null。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要尋找的欄位索引。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified field is set to null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的欄位已設為 Null，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary vsli:raw="Gets the column located at the specified index.">取得位於指定索引位置的資料行。</summary>
      <param name="i" vsli:raw="The zero-based index of the column to get.">要取得的資料行中以零為起始的索引。</param>
      <returns vsli:raw="The column located at the specified index as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">位於指定索引位置的資料行以做為 <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary vsli:raw="Gets the column with the specified name.">取得具有指定名稱的資料行。</summary>
      <param name="name" vsli:raw="The name of the column to find.">要尋找的資料行名稱。</param>
      <returns vsli:raw="The column with the specified name as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">具有指定名稱的資料行，以做為 <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">找不到具有指定名稱的資料行。</exception>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary vsli:raw="Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.">代表在連接至資料來源時執行的 SQL 陳述式，而且是由存取關聯式資料庫的 .NET Framework 資料提供者所實作。</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary vsli:raw="Attempts to cancels the execution of an &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">嘗試取消 <see cref="T:System.Data.IDbCommand" /> 的執行。</summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">取得或設定要對資料來源執行的文字命令。</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">要執行的文字命令。 預設值為空字串 ("")。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.">取得或設定結束執行命令的嘗試並產生錯誤之前的等待時間。</summary>
      <returns vsli:raw="The time (in seconds) to wait for the command to execute. The default value is 30 seconds.">等待命令執行的時間 (以秒為單位)。 預設值為 30 秒。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property value assigned is less than 0.">指派的屬性值小於 0。</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary vsli:raw="Indicates or specifies how the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; property is interpreted.">指示或指定 <see cref="P:System.Data.IDbCommand.CommandText" /> 屬性應如何解譯。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandType&quot; /&gt; values. The default is &lt;see langword=&quot;Text&quot; /&gt;.">其中一個 <see cref="T:System.Data.CommandType" /> 值。 預設為 <see langword="Text" />。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">取得或設定 <see cref="T:System.Data.IDbCommand" /> 的這個執行個體所使用的 <see cref="T:System.Data.IDbConnection" />。</summary>
      <returns vsli:raw="The connection to the data source.">與資料來源的連接。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">建立 <see cref="T:System.Data.IDbDataParameter" /> 物件的新執行個體。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">
        <see langword="IDbDataParameter" /> 物件。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes an SQL statement against the &lt;see langword=&quot;Connection&quot; /&gt; object of a .NET data provider, and returns the number of rows affected.">針對 .NET Framework 資料提供者的 <see langword="Connection" /> 物件執行 SQL 陳述式，並傳回受影響的資料列數目。</summary>
      <returns vsli:raw="The number of rows affected.">受影響的資料列數目。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is not open.">連接不存在。  
 -或-  
 連接未開啟。</exception>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">針對 <see cref="P:System.Data.IDbCommand.Connection" /> 執行 <see cref="P:System.Data.IDbCommand.CommandText" />，並建置 <see cref="T:System.Data.IDataReader" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> 物件。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">針對 <see cref="P:System.Data.IDbCommand.Connection" /> 執行 <see cref="P:System.Data.IDbCommand.CommandText" />，並使用其中一個 <see cref="T:System.Data.CommandBehavior" /> 值來建置 <see cref="T:System.Data.IDataReader" />。</summary>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.IDataReader" /> 物件。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.">執行查詢，並傳回查詢所傳回的結果集中第一個資料列的第一個資料行。 額外的資料行或資料列都會遭到忽略。</summary>
      <returns vsli:raw="The first column of the first row in the resultset.">結果集中第一個資料列的第一個資料行。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">取得 <see cref="T:System.Data.IDataParameterCollection" />。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 陳述式或預存程序的參數。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">在資料來源上建立命令已備妥 (或已編譯) 的版本。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not &lt;see cref=&quot;M:System.Data.OleDb.OleDbConnection.Open&quot; /&gt;.">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 未設定。  
-或- 
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 不是 <see cref="M:System.Data.OleDb.OleDbConnection.Open" />。</exception>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary vsli:raw="Gets or sets the transaction within which the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET data provider executes.">取得或設定 .NET Framework 資料提供者的 <see langword="Command" /> 物件會在其中執行的交易。</summary>
      <returns vsli:raw="the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is &lt;see langword=&quot;null&quot; /&gt;.">.NET Framework 資料提供者執行的 <see langword="Command" /> 物件。 預設值為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">取得或設定由 <see cref="T:System.Data.DataRow" /> 的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 方法使用命令結果時，如何將其套用至 <see cref="T:System.Data.Common.DbDataAdapter" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">其中一個 <see cref="T:System.Data.UpdateRowSource" /> 值。 除非會自動產生命令，否則預設值為 <see langword="Both" />。 預設值為 <see langword="None" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value entered was not one of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values.">輸入的值不是其中一個 <see cref="T:System.Data.UpdateRowSource" /> 值。</exception>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary vsli:raw="Represents an open connection to a data source, and is implemented by .NET data providers that access relational databases.">代表連至資料來源的開放連線，而且是由存取關聯式資料庫的 .NET Framework 資料提供者所實作。</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">開始資料庫異動。</summary>
      <returns vsli:raw="An object representing the new transaction.">代表新異動的物件。</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; value.">使用指定的 <see cref="T:System.Data.IsolationLevel" /> 值來開始資料庫交易。</summary>
      <param name="il" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; values.">其中一個 <see cref="T:System.Data.IsolationLevel" /> 值。</param>
      <returns vsli:raw="An object representing the new transaction.">代表新異動的物件。</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="Changes the current database for an open &lt;see langword=&quot;Connection&quot; /&gt; object.">為開啟的 <see langword="Connection" /> 物件變更目前的資料庫。</summary>
      <param name="databaseName" vsli:raw="The name of the database to use in place of the current database.">用於代替目前資料庫的資料庫名稱。</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary vsli:raw="Closes the connection to the database.">關閉與資料庫的連接。</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary vsli:raw="Gets or sets the string used to open a database.">取得或設定用來開啟資料庫的字串。</summary>
      <returns vsli:raw="A string containing connection settings.">包含連線設定的字串。</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.">取得在終止嘗試並產生錯誤前嘗試建立連接的等待時間。</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is 15 seconds.">等待連接開啟的時間 (以秒為單位)。 預設值為 15 秒。</returns>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a Command object associated with the connection.">建立並傳回與連線相關聯的 Command 物件。</summary>
      <returns vsli:raw="A Command object associated with the connection.">與連線相關聯的 Command 物件。</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary vsli:raw="Gets the name of the current database or the database to be used after a connection is opened.">取得目前資料庫或要在連接開啟之後使用的資料庫名稱。</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.">目前資料庫的名稱或連接開啟後要使用之資料庫的名稱。 預設值為空字串。</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary vsli:raw="Opens a database connection with the settings specified by the &lt;see langword=&quot;ConnectionString&quot; /&gt; property of the provider-specific Connection object.">使用提供者特定 Connection 物件的 <see langword="ConnectionString" /> 屬性所指定的設定來開啟資料庫連接。</summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary vsli:raw="Gets the current state of the connection.">取得連線目前的狀態。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.ConnectionState" /> 值。</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary vsli:raw="Represents a set of command-related properties that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source, and is implemented by .NET data providers that access relational databases.">表示與命令相關的屬性集，這些屬性是用來填入 <see cref="T:System.Data.DataSet" /> 並更新資料來源，並且由存取關聯式資料庫的 .NET Framework 資料提供者所實作。</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">取得或設定 SQL 陳述式從資料集刪除資料錄。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所刪除的資料列刪除在資料來源中的資料錄。</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">取得或設定用來將新的資料錄插入至資料來源的 SQL 陳述式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中新的資料列插入在資料來源中的資料錄。</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">取得或設定用來在資料來源中選取資料錄的 SQL 陳述式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中的位置從資料來源選取資料錄。</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">取得或設定用來在資料來源中更新資料錄的 SQL 陳述式。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所修改的資料列更新在資料來源中的資料錄。</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary vsli:raw="Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns.">Visual Basic.NET 資料設計工具用來代表 Command 物件的參數，以及選擇性地代表其與 <see cref="T:System.Data.DataSet" /> 資料行的對應。</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">表示數值參數的整數位數。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.">用來表示資料提供者 Parameter 物件的 Value 屬性的最大位數。 預設值是 0，表示資料提供者會設定 Value 的整數位數。</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary vsli:raw="Indicates the scale of numeric parameters.">表示數值參數的小數位數。</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">
        <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> 所解析的小數點位數。 預設值為 0。</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary vsli:raw="The size of the parameter.">參數的大小。</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">資料行中資料的最大大小 (以位元組為單位)。 預設值是由參數值推斷。</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary vsli:raw="Represents a transaction to be performed at a data source, and is implemented by .NET data providers that access relational databases.">代表要在資料來源上執行的交易，而且是由存取關聯式資料庫的 .NET Framework 資料提供者所實作。</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary vsli:raw="Commits the database transaction.">認可資料庫交易。</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">嘗試認可交易時發生錯誤。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">已認可或復原交易。  
 -或-  
 連線已中斷。</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary vsli:raw="Specifies the Connection object to associate with the transaction.">指定要與交易產生關聯的連接物件。</summary>
      <returns vsli:raw="The Connection object to associate with the transaction.">要與交易產生關聯的連接物件。</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction.">指定適用於此交易的 <see cref="T:System.Data.IsolationLevel" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction. The default is &lt;see langword=&quot;ReadCommitted&quot; /&gt;.">適用於此交易的 <see cref="T:System.Data.IsolationLevel" />。 預設為 <see langword="ReadCommitted" />。</returns>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary vsli:raw="Rolls back a transaction from a pending state.">從暫止狀態復原交易。</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">嘗試認可交易時發生錯誤。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">已認可或復原交易。  
 -或-  
 連線已中斷。</exception>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary vsli:raw="Represents the exception that is thrown when you call the &lt;see cref=&quot;M:System.Data.DataRow.EndEdit&quot; /&gt; method within the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">表示呼叫 <see cref="M:System.Data.DataRow.EndEdit" /> 事件內的 <see cref="E:System.Data.DataTable.RowChanging" /> 方法時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class.">初始化 <see cref="T:System.Data.InRowChangingEventException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with serialization information.">使用序列化資訊，初始化 <see cref="T:System.Data.InRowChangingEventException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或還原序列化物件所需要的資料。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">來源的描述和指定的序列化資料流的目的端。</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.InRowChangingEventException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.InRowChangingEventException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary vsli:raw="Provides the base functionality for creating collections.">提供建立集合的基底功能。</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; class.">初始化 <see cref="T:System.Data.InternalDataCollectionBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; index.">複製目前 <see cref="T:System.Data.InternalDataCollectionBase" /> 的所有項目至一維 <see cref="T:System.Array" />，開始於指定的 <see cref="T:System.Data.InternalDataCollectionBase" /> 索引。</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; object's elements into.">要複製目前 <see cref="T:System.Array" /> 物件項目的目的一維 <see cref="T:System.Data.InternalDataCollectionBase" />。</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">要開始複製的目的端 <see cref="T:System.Array" /> 索引。</param>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary vsli:raw="Gets the total number of elements in a collection.">取得集合中的項目總數。</summary>
      <returns vsli:raw="The total number of elements in a collection.">集合中的項目總數。</returns>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">取得集合的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is read-only.">取得值，這個值表示 <see cref="T:System.Data.InternalDataCollectionBase" /> 是否為唯讀。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果集合是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is synchronized.">取得值，表示 <see cref="T:System.Data.InternalDataCollectionBase" /> 是否同步處理。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果集合已同步處理，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary vsli:raw="Gets the items of the collection as a list.">取得集合的項目做為清單。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the collection.">包含集合的 <see cref="T:System.Collections.ArrayList" />。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize the collection.">取得可以用來同步集合的物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; used to synchronize the collection.">用來同步處理集合的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when incorrectly trying to create or access a relation.">表示錯誤嘗試建立或存取關聯時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class.">初始化 <see cref="T:System.Data.InvalidConstraintException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with serialization information.">使用序列化資訊，初始化 <see cref="T:System.Data.InvalidConstraintException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或還原序列化物件所需要的資料。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">來源的描述和指定的序列化資料流的目的端。</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.InvalidConstraintException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.InvalidConstraintException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary vsli:raw="Represents the exception that is thrown when you try to add a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains an invalid &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">表示在嘗試將含有無效之 <see cref="T:System.Data.DataColumn" /> 的 <see cref="P:System.Data.DataColumn.Expression" /> 加入至 <see cref="T:System.Data.DataColumnCollection" /> 時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class.">初始化 <see cref="T:System.Data.InvalidExpressionException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">使用 <see cref="T:System.Data.InvalidExpressionException" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">序列化或還原序列化物件所需的資料。</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">指定的序列化資料流的來源和目的端。</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.InvalidExpressionException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.InvalidExpressionException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary vsli:raw="Specifies the transaction locking behavior for the connection.">指定連接的異動鎖定行為。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">無法覆寫來自隔離程度更深之交易的暫止變更。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.">當正在讀取資料來避免 Dirty 讀取時，會使用共用鎖定，但是在異動結束之前，資料可以變更，這將會產生非重複讀取或虛設資料。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.">可以進行 Dirty 讀取，這表示未發出共用鎖定，並且沒有生效的獨佔鎖定。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.">鎖定是加諸於查詢中使用的所有資料，以防止其他使用者更新資料。 防止非重複讀取，但是仍然可能造成虛設資料列。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary vsli:raw="A range lock is placed on the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preventing other users from updating or inserting rows into the dataset until the transaction is complete.">範圍鎖定會置於 <see cref="T:System.Data.DataSet" /> 上，以免其他使用者在異動完成前將資料列更新或插入至資料集中。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary vsli:raw="Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.">在其他應用程式正在修改相同資料時，儲存應用程式可以讀取的資料版本，藉此減少封鎖。 指出即使重新查詢，您也無法從某個異動看到在其他異動中所產生的變更。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined.">使用與指定不同的隔離等級，但無法判斷該等級。</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary vsli:raw="Associates a source table with a table in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class, which is used in common by .NET data providers.">將來源資料表和 <see cref="T:System.Data.DataSet" /> 中的資料表相關聯，並且由 .NET Framework 資料提供者 (Data Provider) 共同使用的 <see cref="T:System.Data.Common.DataTableMapping" /> 類別來實作。</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">為 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 取得衍生的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A collection of data column mappings.">資料行對應的集合。</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">取得或設定在 <see cref="T:System.Data.DataSet" /> 中資料表的不區分大小寫名稱。</summary>
      <returns vsli:raw="The case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">在 <see cref="T:System.Data.DataSet" /> 中資料表的不區分大小寫名稱。</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive name of the source table.">取得或設定來源資料表的區分大小寫名稱。</summary>
      <returns vsli:raw="The case-sensitive name of the source table.">來源資料表的區分大小寫名稱。</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary vsli:raw="Contains a collection of TableMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">含有 TableMapping 物件的集合，並且是由 .NET Framework 資料提供者 (Data Provider) 共同使用的 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 所實作。</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">加入資料表對應至集合。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">來源資料表的區分大小寫名稱。</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">
        <see cref="T:System.Data.DataSet" /> 資料表的名稱。</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">新對應 <see cref="T:System.Data.ITableMapping" /> 物件的參考。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the collection contains a table mapping with the specified source table name.">取得值，表示集合是否包含具有指定來源資料表名稱的資料表對應。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">來源資料表的區分大小寫名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a table mapping with the specified source table name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果存在具有指定來源資料行名稱的資料表對應，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">取得具有指定 <see cref="T:System.Data.DataSet" /> 資料表名稱的 TableMapping 物件。</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">在集合中的 <see langword="DataSet" /> 資料表名稱。</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">具有指定 <see langword="DataSet" /> 資料表名稱的 TableMapping 物件。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">取得集合中 <see cref="T:System.Data.ITableMapping" /> 物件的位置。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">來源資料表的區分大小寫名稱。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">集合中 <see cref="T:System.Data.ITableMapping" /> 物件的以零起始位置。</returns>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">取得或設定具有指定 <see cref="T:System.Data.ITableMapping" /> 名稱之 <see cref="P:System.Data.ITableMapping.SourceTable" /> 的執行個體。</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">
        <see cref="T:System.Data.ITableMapping" /> 的 <see langword="SourceTable" /> 名稱。</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">具有指定 <see langword="SourceTable" /> 名稱之 <see cref="T:System.Data.ITableMapping" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name from the collection.">從集合中移除具有指定 <see cref="T:System.Data.ITableMapping" /> 名稱的 <see cref="P:System.Data.ITableMapping.SourceTable" /> 物件。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the &lt;see langword=&quot;SourceTable&quot; /&gt;.">
        <see langword="SourceTable" /> 的區分大小寫名稱。</param>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies a list of connection string parameters identified by the &lt;see langword=&quot;KeyRestrictions&quot; /&gt; property that are either allowed or not allowed.">識別由 <see langword="KeyRestrictions" /> 屬性識別之連接字串 (Connection String) 參數 (允許或不允許) 的清單。</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary vsli:raw="Default. Identifies the only additional connection string parameters that are allowed.">預設值： 識別唯一允許的額外連接字串參數。</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary vsli:raw="Identifies additional connection string parameters that are not allowed.">識別不允許的額外連接字串參數。</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary vsli:raw="Controls how the values from the data source will be applied to existing rows when using the &lt;see cref=&quot;Overload:System.Data.DataTable.Load&quot; /&gt; or &lt;see cref=&quot;Overload:System.Data.DataSet.Load&quot; /&gt; method.">控制使用 <see cref="Overload:System.Data.DataTable.Load" /> 或 <see cref="Overload:System.Data.DataSet.Load" /> 方法時，從資料來源取得的資料值應如何套用到現有的資料列上。</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary vsli:raw="The incoming values for this row will be written to both the current value and the original value versions of the data for each column.">把這個資料列的輸入資料值同時寫入每個資料行的目前資料值版本與原始資料值版本。</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary vsli:raw="The incoming values for this row will be written to the original value version of each column. The current version of the data in each column will not be changed.  This is the default.">把這個資料列的輸入資料值寫入每個資料行的原始資料值版本， 每個資料行中目前的資料值不變。  這是預設值。</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary vsli:raw="The incoming values for this row will be written to the current version of each column. The original version of each column's data will not be changed.">把此資料列的輸入資料值寫入每個資料行的目前版本， 每個資料行的原始版本不變。</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary vsli:raw="Specifies how a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is mapped.">指定如何對應 <see cref="T:System.Data.DataColumn" />。</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary vsli:raw="The column is mapped to an XML attribute.">資料行是對應至 XML 屬性 (Attribute)。</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary vsli:raw="The column is mapped to an XML element.">資料行是對應至 XML 項目。</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary vsli:raw="The column is mapped to an internal structure.">資料行是對應至內部結構。</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary vsli:raw="The column is mapped to an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; node.">資料行是對應至 <see cref="T:System.Xml.XmlText" /> 節點。</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary vsli:raw="Occurs when a target and source &lt;see langword=&quot;DataRow&quot; /&gt; have the same primary key value, and the &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; property is set to true.">發生於目標和來源 <see langword="DataRow" /> 具有相同主索引鍵值，並且 <see cref="P:System.Data.DataSet.EnforceConstraints" /> 屬性設定為 True 時。</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MergeFailedEventArgs&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and a description of the merge conflict.">使用 <see cref="T:System.Data.MergeFailedEventArgs" /> 和合併衝突的描述，初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 物件。</param>
      <param name="conflict" vsli:raw="A description of the merge conflict.">合併衝突的描述。</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary vsli:raw="Returns a description of the merge conflict.">傳回合併衝突的描述。</summary>
      <returns vsli:raw="A description of the merge conflict.">合併衝突的描述。</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">傳回 <see cref="T:System.Data.DataTable" /> 物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 物件。</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataSet.MergeFailed&quot; /&gt; event.">代表將處理 <see cref="E:System.Data.DataSet.MergeFailed" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="The data for the event.">事件的資料。</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary vsli:raw="Determines the action that occurs when a mapping is missing from a source table or a source column.">判斷來源資料表或來源資料行中遺漏對應時會發生的動作。</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">如果缺少指定的資料行對應，則會產生 <see cref="T:System.InvalidOperationException" />。</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary vsli:raw="The column or table not having a mapping is ignored. Returns &lt;see langword=&quot;null&quot; /&gt;.">會略過不具有對應的資料行或資料表。 傳回 <see langword="null" />。</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary vsli:raw="The source column or source table is created and added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using its original name.">使用原始名稱所建立並加入至 <see cref="T:System.Data.DataSet" /> 的來源資料行或來源資料表。</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to access a row in a table that has no primary key.">表示嘗試在不具有主索引鍵的資料表中存取資料列時會擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.MissingPrimaryKeyException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with serialization information.">使用序列化資訊，初始化 <see cref="T:System.Data.MissingPrimaryKeyException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或還原序列化物件所需要的資料。</param>
      <param name="context" vsli:raw="A description of the source and destination of the specified serialized stream.">指定序列化資料流的來源和目的端之描述。</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.MissingPrimaryKeyException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.MissingPrimaryKeyException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary vsli:raw="Specifies the action to take when adding data to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and the required &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; or &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is missing.">指定在將資料加入至 <see cref="T:System.Data.DataSet" /> 而且必要的 <see cref="T:System.Data.DataTable" /> 或 <see cref="T:System.Data.DataColumn" /> 遺失時所要採取的動作。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary vsli:raw="Adds the necessary columns to complete the schema.">加入必要的資料行來完成結構描述。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary vsli:raw="&lt;para&gt;Adds the necessary columns and primary key information to complete the schema. For more information about how primary key information is added to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, see &lt;see cref=&quot;M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt;.&lt;/para&gt;&lt;para&gt;To function properly with the .NET Framework Data Provider for OLE DB, &lt;see langword=&quot;AddWithKey&quot; /&gt; requires that the native OLE DB provider obtains necessary primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an alternative, the user may explicitly set the primary key constraints on each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This ensures that incoming records that match existing records are updated instead of appended. When using &lt;see langword=&quot;AddWithKey&quot; /&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. For more information, see SET FMTONLY (Transact-SQL).&lt;/para&gt;">加入必要的資料行和主索引鍵資訊來完成結構描述。 如需主索引鍵資訊如何加入至 <see cref="T:System.Data.DataTable" /> 的詳細資訊，請參閱 <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />。若要利用 .NET Framework Data Provider for OLE DB 正常運作，<see langword="AddWithKey" /> 需要原生 OLE DB 提供者取得必要的主索引鍵資訊，方法是設定 DBPROP_UNIQUEROWS 屬性，然後檢查 IColumnsRowset 中的 DBCOLUMN_KEYCOLUMN 來判斷哪些資料行是主索引鍵資料行。 或者，使用者可能在每個 <see cref="T:System.Data.DataTable" /> 上明確設定主索引鍵條件約束。 這確保與現有資料錄相符的連入資料錄是更新，而不是附加。 使用 <see langword="AddWithKey" /> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。 使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。 如需詳細資訊，請參閱 SET FMTONLY (Transact-SQL)。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">如果缺少指定的資料行對應，則會產生 <see cref="T:System.InvalidOperationException" />。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary vsli:raw="Ignores the extra columns.">忽略額外的資料行。</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary vsli:raw="Represents the exception that is thrown when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">表示嘗試將 Null 值插入至 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 設定為 <see langword="false" /> 的資料行時會擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class.">初始化 <see cref="T:System.Data.NoNullAllowedException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with serialization information.">使用序列化資訊，初始化 <see cref="T:System.Data.NoNullAllowedException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或還原序列化物件所需要的資料。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">來源的描述和指定的序列化資料流的目的端。</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.NoNullAllowedException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.NoNullAllowedException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of ordered &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">代表從查詢傳回之已排序 <see cref="T:System.Data.DataRow" /> 物件的集合。</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">來源序列中的物件類型，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary vsli:raw="Specifies the type of a parameter within a query relative to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定與 <see cref="T:System.Data.DataSet" /> 相關查詢中的參數型別。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary vsli:raw="The parameter is an input parameter.">這是輸入參數，</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary vsli:raw="The parameter is capable of both input and output.">參數能夠輸入和輸出。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary vsli:raw="The parameter is an output parameter.">這是輸出參數。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary vsli:raw="The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.">此參數代表預存程序 (Stored Procedure)、內建函式或使用者定義函式等作業的傳回值。</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary vsli:raw="Represents a collection of properties that can be added to &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示可以加入至 <see cref="T:System.Data.DataColumn" />、<see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" /> 的屬性集合。</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">初始化 <see cref="T:System.Data.PropertyCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">初始化 <see cref="T:System.Data.PropertyCollection" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">序列化或還原序列化物件所需的資料。</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">指定的序列化資料流的來源和目的端。</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">建立 <see cref="T:System.Data.PropertyCollection" /> 物件的淺層複本 (Shallow Copy)。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Object&quot; /&gt;, a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">傳回 <see cref="T:System.Object" />，<see cref="T:System.Data.PropertyCollection" /> 物件的淺層複本。</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to change the value of a read-only column.">表示嘗試變更唯讀資料行的值時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.ReadOnlyException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with serialization information.">使用序列化資訊，初始化 <see cref="T:System.Data.ReadOnlyException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或還原序列化物件所需要的資料。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">來源的描述和指定的序列化資料流的目的端。</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.ReadOnlyException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.ReadOnlyException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary vsli:raw="Represents the exception that is thrown when you try to perform an operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is not in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示嘗試在不是位於 <see cref="T:System.Data.DataRow" /> 中的 <see cref="T:System.Data.DataTable" /> 上執行作業時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class.">初始化 <see cref="T:System.Data.RowNotInTableException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with serialization information.">使用序列化資訊，初始化 <see cref="T:System.Data.RowNotInTableException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或還原序列化物件所需要的資料。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">來源的描述和指定的序列化資料流的目的端。</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.RowNotInTableException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.RowNotInTableException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary vsli:raw="Indicates the action that occurs when a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced.">指示當強制使用 <see cref="T:System.Data.ForeignKeyConstraint" /> 時發生的動作。</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary vsli:raw="Delete or update related rows. This is the default.">刪除或更新關聯資料列。 這是預設值。</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary vsli:raw="No action taken on related rows.">不會在相關的資料列上採取任何動作。</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary vsli:raw="Set values in related rows to the value contained in the &lt;see cref=&quot;P:System.Data.DataColumn.DefaultValue&quot; /&gt; property.">將相關資料列中的值設定為 <see cref="P:System.Data.DataColumn.DefaultValue" /> 屬性中所包含的值。</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary vsli:raw="Set values in related rows to &lt;see langword=&quot;DBNull&quot; /&gt;.">將相關資料列中的值設定為 <see langword="DBNull" />。</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary vsli:raw="Indicates the schema serialization mode for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指出型別 <see cref="T:System.Data.DataSet" /> 的結構描述序列化模式。</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary vsli:raw="Skips schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">略過 <see cref="T:System.Data.DataSet" /> 型別的結構描述序列化。</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary vsli:raw="Includes schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default.">包括 <see cref="T:System.Data.DataSet" /> 型別的結構描述序列化。 預設值。</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary vsli:raw="Specifies how to handle existing schema mappings when performing a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt; operation.">指定如何在執行 <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> 作業時處理現有的結構描述 (Schema) 對應。</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary vsli:raw="Apply any existing table mappings to the incoming schema. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the transformed schema.">套用所有的現有資料表對應至內送的結構描述 (Schema)。 使用變形的結構描述來設定 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary vsli:raw="Ignore any table mappings on the DataAdapter. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the incoming schema without applying any transformations.">忽略在 DataAdapter 上的任何資料表對應。 使用內送的結構描述來設定 <see cref="T:System.Data.DataSet" />，而不套用任何的變形。</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary vsli:raw="Determines the serialization format for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">決定 <see cref="T:System.Data.DataSet" /> 的序列化格式。</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary vsli:raw="Serialize as binary content. Available in ADO.NET 2.0 and later versions only. This field is obsolete starting in .NET 7.">序列化為二進位內容。 僅可在 ADO.NET 2.0 中使用。</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary vsli:raw="Serialize as XML content. The default.">序列化為 XML 內容。 預設值。</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary vsli:raw="Specifies SQL Server-specific data type of a field, property, for use in a &lt;see cref=&quot;T:System.Data.SqlClient.SqlParameter&quot; /&gt;.">指定欄位的 SQL Server 特定的資料型別與屬性，以便在 <see cref="T:System.Data.SqlClient.SqlParameter" /> 中使用。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int64&quot; /&gt;. A 64-bit signed integer.">
        <see cref="T:System.Int64" />. 64 位元帶正負號的整數。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.">型別 <see cref="T:System.Array" /> 的 <see cref="T:System.Byte" />。 二進位資料的固定長度資料流，範圍在 1 和 8,000 位元組之間。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Boolean&quot; /&gt;. An unsigned numeric value that can be 0, 1, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" />. 不帶正負號的數值，這個值可以是 0、1 或 <see langword="null" />。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">
        <see cref="T:System.String" />. 非 Unicode 字元的固定長度資料流，範圍在 1 到 8,000 個字元之間。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary vsli:raw="Date data ranging in value from January 1,1 AD through December 31, 9999 AD.">日期資料範圍是從西元 1 年 1 月 1 日到西元 9999 年 12 月 31 日。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.">
        <see cref="T:System.DateTime" />. 日期和時間資料，值範圍從 1753 年 1 月 1 日到 9999 年 12 月 31 日，正確率為 3.33 毫秒。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">日期和時間資料。 日期值範圍是從西元後 1 年 1 月 1 日到西元後 9999 年 12 月31 日。 時間值的範圍從 00:00:00 到 23:59:59.9999999，精確度為 100 奈秒。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">具備時區感知功能的日期和時間資料。 日期值範圍是從西元後 1 年 1 月 1 日到西元後 9999 年 12 月31 日。 時間值的範圍從 00:00:00 到 23:59:59.9999999，精確度為 100 奈秒。 時區值範圍從 -14:00 到 +14:00。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.">
        <see cref="T:System.Decimal" />. 固定的有效位數及小數位數值，介於 -10 38 -1 和 10 38 -1 之間。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Double&quot; /&gt;. A floating point number within the range of -1.79E +308 through 1.79E +308.">
        <see cref="T:System.Double" />. 浮點數，範圍為 -1.79E +308 到 1.79E +308。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.">型別 <see cref="T:System.Array" /> 的 <see cref="T:System.Byte" />。 二進位資料的可變長度資料流，範圍從 0 到 2 31 -1 (或 2,147,483,647) 個位元組。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int32&quot; /&gt;. A 32-bit signed integer.">
        <see cref="T:System.Int32" />. 32 位元帶正負號的整數。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. 貨幣值，範圍從 -2 63 (或 -9,223,372,036,854,775,808) 到 2 63 -1 (或 +9,223,372,036,854,775,807)，正確率為貨幣單位的千分之十。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.">
        <see cref="T:System.String" />. Unicode 字元的固定長度資料流，範圍在 1 到 4,000 個字元之間。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.">
        <see cref="T:System.String" />. Unicode 資料的可變長度資料流，具有 2 30 - 1 (或 1,073,741,823) 個字元的最大長度。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.NVarChar&quot; /&gt; when the database column is &lt;see langword=&quot;nvarchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Unicode 字元的可變長度資料流，範圍在 1 到 4,000 個字元之間。 如果字串大於 4,000 個字元，則隱含轉換會失敗。 當使用大於 4,000 個字元的字串時，明確設定物件。 當資料庫資料行是 <see langword="nvarchar(max)" /> 時，請使用 <see cref="F:System.Data.SqlDbType.NVarChar" />。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Single&quot; /&gt;. A floating point number within the range of -3.40E +38 through 3.40E +38.">
        <see cref="T:System.Single" />. 浮點數，範圍為 -3.40E +38 到 3.40E +38。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.">
        <see cref="T:System.DateTime" />. 日期和時間資料，值範圍從 1900 年 1 月 1 日到 2079 年 6 月 6 日，正確率為 1 分鐘。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int16&quot; /&gt;. A 16-bit signed integer.">
        <see cref="T:System.Int16" />. 16 位元帶正負號的整數。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. 貨幣值，範圍從 -214,748.3648 到 +214,748.3647，正確率為貨幣單位的千分之十。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary vsli:raw="A special data type for specifying structured data contained in table-valued parameters.">特殊資料型別，可指定資料表值參數所包含的結構化資料。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.">
        <see cref="T:System.String" />. 非 Unicode 資料的可變長度資料流，具有 2 31 - 1 (或 2,147,483,647) 個字元的最大長度。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary vsli:raw="Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server &lt;see langword=&quot;time&quot; /&gt; value.">24 小時制的時間資料。 時間值的範圍從 00:00:00 到 23:59:59.9999999，精確度為 100 奈秒。 對應至 SQL Server <see langword="time" /> 值。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. Automatically generated binary numbers, which are guaranteed to be unique within a database. &lt;see langword=&quot;timestamp&quot; /&gt; is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.">型別 <see cref="T:System.Array" /> 的 <see cref="T:System.Byte" />。 自動產生的二進位號碼，保證都是資料庫內唯一的號碼 <see langword="timestamp" /> 通常用來當做為版本戳記表格列的機制。 儲存區大小為 8 位元組。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Byte&quot; /&gt;. An 8-bit unsigned integer.">
        <see cref="T:System.Byte" />. 8 位元不帶正負號的整數。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary vsli:raw="A SQL Server user-defined type (UDT).">SQL Server 使用者定義型別 (UDT)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Guid&quot; /&gt;. A globally unique identifier (or GUID).">
        <see cref="T:System.Guid" />. 全域唯一識別項 (或 GUID)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.">型別 <see cref="T:System.Array" /> 的 <see cref="T:System.Byte" />。 二進位資料的可變長度資料流，範圍在 1 和 8,000 位元組之間。 如果位元組陣列大於 8,000 個位元組，則隱含轉換會失敗。 在使用大於 8,000 個位元組的位元組陣列時，明確設定物件。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.VarChar&quot; /&gt; when the database column is &lt;see langword=&quot;varchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. 非 Unicode 字元的可變長度資料流，範圍在 1 和 8,000 字元之間。 當資料庫資料行是 <see langword="varchar(max)" /> 時，請使用 <see cref="F:System.Data.SqlDbType.VarChar" />。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Object&quot; /&gt;. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.">
        <see cref="T:System.Object" />. 特殊的資料型別，可以包含數值、字串、二進位或日期資料，以及 Empty 和 Null 等 SQL Server 值 (如果未宣告其他型別，則會假定為這個型別)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary vsli:raw="An XML value. Obtain the XML as a string using the &lt;see cref=&quot;M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)&quot; /&gt; method or &lt;see cref=&quot;P:System.Data.SqlTypes.SqlXml.Value&quot; /&gt; property, or as an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; by calling the &lt;see cref=&quot;M:System.Data.SqlTypes.SqlXml.CreateReader&quot; /&gt; method.">XML 值。 使用 <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> 方法或 <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> 屬性取得 XML 做為字串，或呼叫 <see cref="T:System.Xml.XmlReader" /> 方法 <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" /> 取得 XML 做為字串。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary vsli:raw="All the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; objects and structures implement the &lt;see langword=&quot;INullable&quot; /&gt; interface.">所有的 <see cref="N:System.Data.SqlTypes" /> 物件和結構都會實作 <see langword="INullable" /> 介面。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary vsli:raw="Indicates whether a structure is null. This property is read-only.">指出結構是否為 null。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; if the value of this object is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" />如果這個物件的值為 null, 則為。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 類別並非要做為獨立的元件使用，而是要做為其他類別衍生標準功能時所根據的類別。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
      <param name="e" vsli:raw="A reference to an inner exception.">內部例外狀況的參考。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Represents a variable-length stream of binary data to be stored in or retrieved from a database.">表示要存放在資料庫或從資料庫中擷取之二進位資料的可變長度資料流。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure, setting the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property to the contents of the supplied byte array.">將 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性設定為提供之位元組陣列的內容，來初始化 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="The byte array to be stored or retrieved.">要存放或擷取的位元組陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">將兩個指定的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 參數串連，以建立新的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; that is the concatenated value of x and y.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />，其為 x 和 y 的串連值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件與提供的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">要與這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構相比較的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，指出這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件的值小於物件。  

  零 
  這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件和物件相同。  

  大於零 
  這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件大於物件。  

-或- 
物件是 Null 參考。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied object and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件與提供的物件相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">要與這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構相比較的物件。</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，指出這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件的值小於物件。  

  零 
  這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件和物件相同。  

  大於零 
  這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件大於物件。  

-或- 
物件是 Null 參考。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">將兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構串連以建立新的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">
        <paramref name="x" /> 和 <paramref name="y" /> 參數的串連值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlBinary&quot; /&gt; will be null.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。 如果任一執行個體是 null，則 <see langword="SqlBinary" /> 會是 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">將提供的物件參數與 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果物件是 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的執行個體，並且兩者相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">傳回這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" />，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure is null. This property is read-only.">表示這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構是否為 Null。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果是 <see langword="null" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary vsli:raw="Gets the single byte from the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property located at the position indicated by the integer parameter, &lt;paramref name=&quot;index&quot; /&gt;. If &lt;paramref name=&quot;index&quot; /&gt; indicates a position beyond the end of the byte array, a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; will be raised. This property is read-only.">從位於整數參數 <paramref name="index" /> 所指示之位置的 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性中取得單一位元組。 如果 <paramref name="index" /> 指示超過位元組陣列末端的位置，則會引發 <see cref="T:System.Data.SqlTypes.SqlNullValueException" />。 這個屬性是唯讀的。</summary>
      <param name="index" vsli:raw="The position of the byte to be retrieved.">要擷取的位元組位置。</param>
      <returns vsli:raw="The byte located at the position indicated by the integer parameter.">位元組，位於整數參數所指示的位置。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;index&quot; /&gt; parameter indicates a position beyond the length of the byte array as indicated by the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property.">當 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性包含 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 時讀取屬性。  
-或- 
<paramref name="index" /> 參數指示超過位元組陣列長度的位置，如 <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> 屬性所指示。</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary vsli:raw="Gets the length in bytes of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property. This property is read-only.">取得 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性的長度，以位元組為單位。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="The length of the binary data in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性中二進位資料的長度。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">當 <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> 屬性包含 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 時，就會讀取 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 屬性。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameters to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">將兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 參數串連以建立新的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">
        <paramref name="x" /> 和 <paramref name="y" /> 參數的串連值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">將 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構轉換成 <see cref="T:System.Byte" /> 陣列。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Byte" /> 陣列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts an array of bytes to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">將位元組的陣列轉換成 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <param name="x" vsli:raw="The array of bytes to be converted.">要轉換的位元組陣列。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure that represents the converted array of bytes.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，表示轉換的位元組陣列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 執行個體。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的執行個體轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to a string.">將這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件轉換成字串。</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;. If the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; is null the string will contain &quot;null&quot;.">字串，含有 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBinary" />。 如果 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 為 null，則字串將包含 "null"。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure. This property is read-only.">取得 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構的值。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property is read when the property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">當屬性包含 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 時，就會讀取 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 屬性。</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.">表示要存放在資料庫或從資料庫擷取的 1 或 0 之整數值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the supplied Boolean value.">使用提供的布林值，初始化 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="The value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure; either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值，不是 <see langword="true" /> 就是 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the specified integer value.">使用指定的整數值，初始化 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="The integer whose value is to be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">整數，其值會用於新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">計算兩個指定 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的位元 AND 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="The result of the logical AND operation.">邏輯的 AND 運算的結果。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure as a byte.">取得 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值做為位元組。</summary>
      <returns vsli:raw="A byte representing the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">位元組，表示 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 物件與提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 物件相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">要比較的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> 物件，或 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，指出執行個體與值的相對值。  
  值 
  說明 
  負整數 
  這個執行個體小於 <paramref name="value" />。  

  零 
  這個執行個體等於 <paramref name="value" />。  

  正整數 
  這個執行個體大於 <paramref name="value" />。  

-或- 
 <paramref name="value" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a specified object and returns an indication of their relative values.">比較這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構與指定的物件，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="An object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">要比較的物件，或 null 參考 (在 Visual Basic 為 <see langword="Nothing" />)。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，指出執行個體與值的相對值。  
  值 
  說明 
  負整數 
  這個執行個體小於 <paramref name="value" />。  

  零 
  這個執行個體等於 <paramref name="value" />。  

  正整數 
  這個執行個體大於 <paramref name="value" />。  

-或- 
 <paramref name="value" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether they are equal.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">若兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；若兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">比較提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果物件是 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的執行個體，而且比較結果是兩者相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary vsli:raw="Represents a false value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示可以指派至 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 結構之執行個體的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 屬性 false 值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">若第一個執行個體大於第二個執行個體，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若第一個執行個體大於或等於第二個執行個體，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">指示目前的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 是否為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 為 <see langword="Value" />，則為 <see langword="False" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null.">表示這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構是否為 Null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果結構為 null, 則為, <see langword="false" />否則為。 <see cref="T:System.Data.SqlTypes.SqlBoolean" /></returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary vsli:raw="Gets a value that indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">取得值，這個值表示目前的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 是否為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 為 <see langword="Value" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">若第一個執行個體小於第二個執行個體，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">若第一個執行個體小於或等於第二個執行個體，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">若兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；若兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary vsli:raw="Represents &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的執行個體。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary vsli:raw="Represents a one value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示可以指派至 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 結構之執行個體的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 屬性的一個值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">在提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構上執行一進位補數運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">所提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 一進位補數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">計算兩個指定 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的位元 AND 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="The result of the logical AND operation.">邏輯的 AND 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise OR of its operands.">計算其運算元的位元 OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="The results of the logical OR operation.">邏輯 OR 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">若兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；若兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.">在提供的參數上執行位元 Exclusive-OR (XOR) 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="The result of the logical XOR operation.">邏輯 XOR 作業的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to a Boolean.">將 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 轉換成布林。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to convert.">要進行轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A Boolean set to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">布林設定為 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">轉換成 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The false operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is false.">False 運算子可以用來測試 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，判斷它是否為 False。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">要測試的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若所提供的參數 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 是 <see langword="false" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，判斷第一個結構是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 物件。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 物件。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">若第一個執行個體大於第二個執行個體，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若第一個執行個體大於或等於第二個執行個體，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">將提供的位元組值轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">要被轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的位元組值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; value that contains 0 or 1.">包含 0 或 1 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether they are not equal.">比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">若兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；若兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若第一個執行個體小於第二個執行個體，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若第一個執行個體小於或等於第二個執行個體，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a NOT operation on a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">在 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 上執行 NOT 運算。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; on which the NOT operation will be performed.">其中將執行 NOT 運算的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; with the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt;&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if argument was true, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if argument was null, and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; otherwise.">如果引數是 true，則為具有 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果引數是 Null，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">在提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構上執行一進位補數運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">所提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 一進位補數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The true operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is true.">True 運算子可以用來測試 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，判斷它是否為 True。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">要測試的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若提供的參數 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 是 <see langword="true" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise OR operation on the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">在兩個指定的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構上執行位元 OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose Value is the result of the bitwise OR operation.">新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其 Value 是位元 OR 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a logical value to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; equivalent.">將邏輯值之指定的 <see cref="T:System.String" /> 表示轉換成其 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 對等用法。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">要轉換的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure that contains the parsed value.">含有剖析值的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 0.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其值為 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 <see langword="true" />，則新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的值為 1。 否則，新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 0.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其值為 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 <see langword="true" />，則新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值為 1。 否則，新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 0.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其值為 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 <see langword="true" />，則新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的值為 1。 否則，新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure's value is 0.">新的 <see langword="SqlInt16" /> 結構，其值為 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 <see langword="true" />，則新 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值為 1。 否則，新 <see langword="SqlInt16" /> 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure's value is 0.">新的 <see langword="SqlInt32" /> 結構，其值為 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 <see langword="true" />，則新 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的值為 1。 否則，新 <see langword="SqlInt32" /> 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure's value is 0.">新的 <see langword="SqlInt64" /> 結構，其值為 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 <see langword="true" />，則新 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的值為 1。 否則，新 <see langword="SqlInt64" /> 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 1. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;false&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 0. If &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value is neither 1 nor 0, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其值為 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 <see langword="true" />，則新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值為 1。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 <see langword="false" />，則新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值為 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值不是 1 也不是 0，新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值就會是 <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose value is 1 or 0.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals true, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 1; otherwise the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 0.">新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其值為 1 或 0。  
如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 true，新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的值會是 1，否則，新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的值就會是 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 0.">新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構，其值為 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 <see langword="true" />，則 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的值為 1。 否則，新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a string.">將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成字串。</summary>
      <returns vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;. If the value is null, the string will contain &quot;null&quot;.">字串，含有 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的值。 如果該值是 null，則字串將包含 "null"。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary vsli:raw="Represents a true value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示可以指派至 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 結構之執行個體的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 屬性 true 值。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value. This property is read-only.">取得 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 是 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">此屬性設定為 null。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="The result of the logical XOR operation.">邏輯 XOR 作業的結果。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示零值，其可以指派至 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 結構之執行個體的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.">表示要存放在資料庫或從資料庫擷取的 8 位元不帶正負號的整數 (Unsigned Integer)，範圍介於 0 到 255 之間。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure using the specified byte value.">使用指定的位元組值，初始化 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A byte value to be stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">位元組值，要存放在新 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 屬性中。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構之總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; property contains the results of the addition.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see langword="Value" /> 屬性包含加法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">計算其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的位元 AND 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="The results of the bitwise AND operation.">位元 AND 作業的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">執行其兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的位元 OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="The results of the bitwise OR operation.">位元 OR 作業的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object and returns an indication of their relative values.">將這個執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 物件相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 物件。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">將這個執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">用 <see cref="T:System.Data.SqlTypes.SqlByte" /> 第二個運算元除第一個運算元。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlByte&quot; /&gt; will be null.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。 如果任一執行個體是 null，則 <see langword="SqlByte" /> 會是 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object.">將提供的 <see cref="T:System.Object" /> 參數與 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果物件是 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的執行個體，並且兩者相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure is null.">取得布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構是否為 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果是 null 則為 <see langword="true" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的最小可能值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">在將餘數的第一個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元除以它的第二個運算元之後計算餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 包含餘數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; values and returns the remainder.">為兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 值進行除法運算，並傳回餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">除法運算之後的餘數會在 <paramref name="x" /> 和 <paramref name="y" /> 上執行。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含乘法運算的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">一進位補數運算子在其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元上執行位元一進位補數作業。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數之元件。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構之總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the sum of the two operands.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含兩個運算元的總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">計算其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的位元 AND 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="The results of the bitwise AND operation.">位元 AND 作業的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">執行其兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的位元 OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="The results of the bitwise OR operation.">位元 OR 作業的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">用 <see cref="T:System.Data.SqlTypes.SqlByte" /> 第二個運算元除第一個運算元。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="The results of the bitwise XOR operation.">位元 XOR 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">要轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的<see cref="T:System.Data.SqlTypes.SqlByte" /> 參數。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於指定之 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a byte.">將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成位元組。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted to a byte.">要轉換成位元組的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A byte whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">位元組，其值等於 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 參數的 <see langword="SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure.">
        <see langword="SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="An instance of the &lt;see langword=&quot;SqlString&quot; /&gt; class.">
        <see langword="SqlString" /> 類別的執行個體。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the numeric value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示的數值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see langword=&quot;SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see langword="SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將提供的位元組值轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">要被轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的位元組值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the supplied parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於提供的參數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">在將餘數的第一個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元除以它的第二個運算元之後計算餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 包含餘數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含乘法運算的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">一進位補數運算子在其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元上執行位元一進位補數作業。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數之元件。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">從第一個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元減去第二個運算元。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">第一個運算元減去第二個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 8-bit unsigned integer equivalent.">將數字的 <see cref="T:System.String" /> 表示轉換成它的對等 8 位元不帶正負號的整數。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要剖析的 <see langword="String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure that contains the 8-bit number represented by the &lt;see langword=&quot;String&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，含有 <see langword="String" /> 參數表示的 8 位元數字。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">從第一個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元減去第二個運算元。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">第一個運算元減去第二個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 為非零，則為 <see langword="true" />，如果為零，則為 <see langword="false" />，否則為 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see langword="SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDouble&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see langword="SqlDouble" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt16&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see langword="SqlInt16" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt32&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see langword="SqlInt32" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure who &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see langword="SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於這個 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see langword="SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlSingle&quot; /&gt; structure that has the same &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see langword="SqlSingle" /> 結構，擁有和這個 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 結構相同的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的執行個體轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt;.">
        <see langword="SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 之字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;. If the &lt;see langword=&quot;Value&quot; /&gt; is null, the &lt;see langword=&quot;String&quot; /&gt; will be a null string.">字串，含有 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlByte" />。 如果 <see langword="Value" /> 為 null，則 <see langword="String" /> 將會是 null 字串。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure. This property is read-only.">取得 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="The results of the XOR operation.">XOR 運算的結果。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">表示零值，其可以指派至 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 結構之執行個體的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Represents a mutable reference type that wraps either a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Buffer&quot; /&gt; or a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Stream&quot; /&gt;.">表示可變動的參考型別 (Reference Type)，用來包裝 <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> 或 <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified byte array.">根據指定的位元組陣列，初始化 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 類別的新執行個體。</summary>
      <param name="buffer" vsli:raw="The array of unsigned bytes.">不帶正負號的位元組陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">根據指定的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 值來初始化 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; value.">根據指定的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 值來初始化 <see cref="T:System.IO.Stream" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">傳回內部緩衝區的參考。</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">內部緩衝區的參考。 如果是在 Unmanaged 指標上建立的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體，則會傳回內部緩衝區的 Managed 複本。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see langword=&quot;XmlSchemaSet&quot; /&gt;.">
        <see langword="string" />，表示指定之 <see langword="XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null.">取得布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 是否為 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 是 null，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance at the specified index.">取得或設定位於指定索引處的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體。</summary>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">
        <see cref="T:System.Int64" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">
        <see cref="T:System.Byte" /> 值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">取得 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體內含值的長度。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">
        <see cref="T:System.Int64" /> 值，表示 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體內含值的長度。  
如果沒有緩衝區可供執行個體使用，或值為 null，則傳回 -1。  
傳回資料流包裝執行個體的 <see cref="P:System.IO.Stream.Length" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary vsli:raw="Gets the maximum length of the value of the internal buffer of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">取得這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的內部緩衝區值的最大長度。</summary>
      <returns vsli:raw="A long representing the maximum length of the value of the internal buffer. Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">long，表示內部緩衝區值的最大長度。 傳回 -1，代表資料流包裝的 <see cref="T:System.Data.SqlTypes.SqlBytes" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary vsli:raw="Gets a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">取得此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的 Null 執行個體。</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> 其<see langword="true" />屬性傳回的實例。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 結構。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 結構。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to the passed-in buffer and returns the number of copied bytes.">將位元組從這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體複製到傳入緩衝區，並傳回複製位元組的數目。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Int64" /> long 值，位移至包含在 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體中的值。</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">要複製的目標位元組陣列緩衝區。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">緩衝區中要開始進行資料複製的 <see cref="T:System.Int32" /> 整數位移。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">
        <see cref="T:System.Int32" /> 整數，表示要複製的位元組數目。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the number of copied bytes.">
        <see cref="T:System.Int64" /> long 值，表示複製的位元組數目。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">設定這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體的長度。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the length.">表示長度的 <see cref="T:System.Int64" /> long 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to null.">將這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體設定為 null。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">傳回關於這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體儲存狀態的資訊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">
        <see cref="T:System.Data.SqlTypes.StorageState" /> 列舉型別。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary vsli:raw="Gets or sets the data of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as a stream.">取得或將這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的資料設定為資料流。</summary>
      <returns vsli:raw="The stream that contains the SqlBytes data.">包含 SqlBytes 資料的資料流。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">取得序列化資訊，以及重新執行個體化這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體所需的所有資料。</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">要被填入 (Populate) 序列化資訊的物件。</param>
      <param name="context" vsli:raw="The destination context of the serialization.">序列化的目的端內容。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary vsli:raw="Constructs and returns a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">從這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 執行個體建構並傳回 <see cref="T:System.Data.SqlTypes.SqlBytes" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this instance.">來自這個執行個體的 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">傳回這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 所保留值的 Managed 複本。</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as an array of bytes.">這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的位元組陣列值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">將位元組從傳入緩衝區複製到這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Int64" /> long 值，位移至包含在 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體中的值。</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">要複製的目標位元組陣列緩衝區。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">緩衝區中要開始進行資料複製的 <see cref="T:System.Int32" /> 整數位移。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">
        <see cref="T:System.Int32" /> 整數，表示要複製的位元組數目。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is a mutable reference type that wraps a &lt;see cref=&quot;T:System.Char&quot; /&gt; array or a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 是一種可變動的參考型別 (Reference Type)，它會包裝 <see cref="T:System.Char" /> 陣列或 <see cref="T:System.Data.SqlTypes.SqlString" /> 執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlChars" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified character array.">根據指定的字元陣列，初始化 <see cref="T:System.Data.SqlTypes.SqlChars" /> 類別的新執行個體。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">
        <see cref="T:System.Char" /> 陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; value.">根據指定的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 值來初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">傳回內部緩衝區的參考。</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">內部緩衝區的參考。 如果是在 Unmanaged 指標上建立的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體，則會傳回內部緩衝區的 Managed 複本。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null.">取得布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 是否為 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.SqlTypes.SqlChars" /> 是 null，則為 <see langword="true" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance at the specified index.">取得或設定位於指定索引處的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">
        <see cref="T:System.Int64" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">
        <see cref="T:System.Char" /> 值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">取得 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體內含值的長度。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that indicates the length in characters of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance, or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">
        <see cref="T:System.Int64" /> 值，表示 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體內含值的字元長度。  
如果沒有緩衝區可供執行個體使用，或值為 null，則傳回 -1。  
傳回資料流包裝執行個體的 <see cref="P:System.IO.Stream.Length" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary vsli:raw="Gets the maximum length in two-byte characters of the value the internal buffer can hold.">取得內部緩衝區可以保留的值的最大長度 (以雙位元組字元為單位)。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the maximum length in two-byte characters of the value of the internal buffer.  &#xA;  &#xA; Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">
        <see cref="T:System.Int64" /> 值，表示內部緩衝區中值的最大長度 (以雙位元組字元為單位)。  
傳回 -1，代表資料流包裝的 <see cref="T:System.Data.SqlTypes.SqlChars" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary vsli:raw="Returns a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">傳回這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 的 null 執行個體。</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlChars.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;. For more information, see Handling Null Values.">
        <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> 其<see langword="true" />屬性傳回的實例。 如需詳細資訊, 請參閱處理 Null 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlChars" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 結構。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlChars" /> 結構。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 結構。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to the passed-in buffer and returns the number of copied characters.">將字元從這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體複製到傳入緩衝區，並傳回複製字元的數目。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Int64" />
        <see langword="long" /> 值，會位移至包含在 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體中的值。</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">要複製的目標字元陣列緩衝區。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">緩衝區中要開始進行資料複製的 <see cref="T:System.Int32" /> 整數位移。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer value representing the number of characters to copy.">
        <see cref="T:System.Int32" /> 整數值，表示要複製的字元數目。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the number of copied bytes.">
        <see cref="T:System.Int64" />
        <see langword="long" /> 值，表示複製的位元組數目。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">設定這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體的長度。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the length.">表示長度的 <see cref="T:System.Int64" /><see langword="long" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to null.">將這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體設定為 null。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">傳回關於這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體儲存狀態的資訊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">
        <see cref="T:System.Data.SqlTypes.StorageState" /> 列舉型別。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">取得序列化資訊，以及重新執行個體化這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體所需的所有資料。</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">要被填入 (Populate) 序列化資訊的物件。</param>
      <param name="context" vsli:raw="The destination context of the serialization.">序列化的目的端內容。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to its equivalent &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation.">將這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體轉換成其對等的 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation of this type.">這個型別的 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">傳回這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 所保留值的 Managed 複本。</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; as an array of characters.">這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 的字元陣列值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">將字元從傳入緩衝區複製到這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體。</summary>
      <param name="offset" vsli:raw="A &lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see langword="long" /> 值，位移至包含在 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體中的值。</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">要複製的目標字元陣列緩衝區。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">緩衝區中要開始進行資料複製的 <see cref="T:System.Int32" /> 整數位移。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of characters to copy.">
        <see cref="T:System.Int32" /> 整數，表示要複製的字元數目。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary vsli:raw="Specifies the compare option values for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">指定排序應該根據字元數值，而非其字母順序值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary vsli:raw="Performs a binary sort.">執行二進位編碼排序。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore case.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較必須忽略大小寫。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as &quot;computer&quot; or &quot;Internet&quot;. A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較必須忽略假名類型。 假名類型意指日文平假名和片假名字元，表示日本語言中的語音。 平假名用於本土日文的語句和字詞，而片假名則用於自其他語言引進的字詞，例如「computer」或「Internet」。 平假名和片假名都可以用來表達語音。 如果選取這個值，就會將代表一個語音的平假名字元視為等於代表相同語音的片假名字元。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore nonspace combining characters, such as diacritics. The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at https://www.unicode.org.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較必須忽略非空格組成的字元，例如變音符號 (Diacritic)。 Unicode Standard 將組合的字元定義為與基底字元結合以產生新字元的字元。 非空格組合的字元在呈現時本身並不會使用字元空間。 如需非空格組合字元的詳細資訊，請參閱 https://www.unicode.org 的＜Unicode 標準＞。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較必須忽略字元寬度。 例如，日文片假名字元可以書寫為全型或半型，而如果這個值被選取，片假名字元則書寫成全型並被視為相等於以半型書寫的相同字元。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary vsli:raw="Specifies the default option settings for &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較的預設選項設定值。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure has a different underlying data structure from its corresponding .NET type, &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from &quot;00:00:00 AM 1/1/1900&quot; to an integer will return 0.">表示要存放在資料庫或從資料庫擷取的日期與時間資料，值範圍從 1753 年 1 月 1 日至 9999 年 12 月 31 日，精確度為 3.33 毫秒。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構擁有的基礎資料結構與其對應的 .NET Framework 型別 <see cref="T:System.DateTime" /> 不同，後者可以表示介於 0001 年 1 月 1 日上午 12:00:00 到 9999 年 12 月 31 日下午 11:59:59 的任何時間，精確度可達 100 奈秒。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 實際儲存的則是與 1900 年 1 月 1 日上午 00:00:00 的相對差異。 因此將 "00:00:00 AM 1/1/1900" 轉換成整數的結果將傳回 0。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">使用指定的 <see cref="T:System.DateTime" /> 值，初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">
        <see langword="DateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters.">使用提供的參數，初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="dayTicks" vsli:raw="An integer value that represents the date as ticks.">表示日期為刻度的整數值。</param>
      <param name="timeTicks" vsli:raw="An integer value that represents the time as ticks.">表示時間為刻度的整數值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day.">使用提供的參數來初始化年、月、日，初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="year" vsli:raw="An integer representing the year of the of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的年。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的月。</param>
      <param name="day" vsli:raw="An integer value representing the day number of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的日數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.">使用提供的參數初始化新結構的年、月、日、時、分和秒，以初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的年。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的月。</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構之月份日期。</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的時。</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的分。</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的秒。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.">使用提供的參數初始化新結構的年、月、日、時、分、秒和毫秒，以初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的年。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的月。</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構之月份日期。</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的時。</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的分。</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的秒。</param>
      <param name="millisecond" vsli:raw="An double value representing the millisecond of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">雙精度浮點數 (Double) 值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的毫秒。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and microsecond of the new structure.">使用提供的參數初始化新結構的年、月、日、時、分、秒和微秒，以初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的年。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的月。</param>
      <param name="day" vsli:raw="An integer value representing the day of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的日。</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的時。</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的分。</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的秒。</param>
      <param name="bilisecond" vsli:raw="An integer value representing the microsecond (thousandths of a millisecond) of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的微秒 (毫秒的一千倍)。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to the specified &lt;see langword=&quot;TimeSpan&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 加入至指定的 <see langword="TimeSpan" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">
        <see langword="Timespan" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構與提供的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。  

  零 
  這個執行個體和 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 相同。  

  大於零 
  這個執行個體大於 <see cref="T:System.Data.SqlTypes.SqlDateTime" />  

-或- 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; as Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (Visual Basic 中的 <see langword="Nothing" />)。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary vsli:raw="Gets the number of ticks representing the date of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">取得表示這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的日期的刻度數。</summary>
      <returns vsli:raw="The number of ticks representing the date that is contained in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">刻度數，表示包含在這個 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 屬性中的日期。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">當 <see langword="Value" /> 結構的 <see cref="N:System.Data.SqlTypes" /> 屬性設定為 null 時，所擲回的例外狀況。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; object.">將提供的物件參數與 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果物件是 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的執行個體，並且兩者相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">取得這個執行個體的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure is null.">表示這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構是否為 Null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果是 null 則為 <see langword="true" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary vsli:raw="Represents the maximum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">表示 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的最大有效日期值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary vsli:raw="Represents the minimum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">表示 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的最小有效日期值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 執行個體的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds the period of time indicated by the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; parameter, &lt;paramref name=&quot;t&quot; /&gt;, to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">將提供的 <see cref="T:System.TimeSpan" /> 參數 (<paramref name="t" />) 指示的時期間加入至提供的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構中。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">
        <see cref="T:System.TimeSpan" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;. If either argument is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;, the new &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。 如果任一引數為 <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />，則新的 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">將 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構轉換成 <see cref="T:System.DateTime" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object whose &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties contain the same date and time values as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.DateTime" /> 物件，其 <see cref="P:System.DateTime.Date" /> 和 <see cref="P:System.DateTime.TimeOfDay" /> 屬性包含與提供的 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 結構之 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 屬性相同的日期與時間值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the date and time represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see langword=&quot;Value&quot; /&gt; of the newly created &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure will be null.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的日期與時間。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 為 Null，則新建立的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構之 <see langword="Value" /> 將會是 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">將 <see cref="T:System.DateTime" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">
        <see langword="DateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the combined &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties of the supplied &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 等於提供的 <see cref="P:System.DateTime.Date" /> 結構之組合的 <see cref="P:System.DateTime.TimeOfDay" /> 和 <see cref="T:System.DateTime" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 執行個體的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure, &lt;paramref name=&quot;t&quot; /&gt;, from the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">從提供的 <see cref="T:System.TimeSpan" /> 結構中減去提供的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構 (<paramref name="t" />)。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">
        <see cref="T:System.TimeSpan" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure representing the results of the subtraction.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構，表示減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a date and time to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; equivalent.">將日期與時間之指定的 <see cref="T:System.String" /> 表示轉換成它的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 對等用法。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to be parsed.">要剖析的 <see langword="string" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure equal to the date and time represented by the specified &lt;see langword=&quot;string&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構，等於指定的 <see langword="string" /> 表示的日期與時間。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one hour.">常數的值相當於 1 小時的刻度數。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one minute.">常數的值相當於 1 分鐘的刻度數。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one second.">常數的值相當於 1 秒鐘的刻度數。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the specified &lt;see langword=&quot;Timespan&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; instance.">從這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 執行個體中減去指定的 <see langword="Timespan" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">
        <see langword="Timespan" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary vsli:raw="Gets the number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">取得表示這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的時間的刻度數。</summary>
      <returns vsli:raw="The number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">刻度數，表示這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的時間的刻度數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; structure whose value is a string representing the date and time that is contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see langword="SqlString" /> 結構，其值為一個字串，表示包含在這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構中的日期和時間。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see langword="String" />，表示這個 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 屬性。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure. This property is read-only.">取得 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的值。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">當 <see langword="Value" /> 結構的 <see cref="N:System.Data.SqlTypes" /> 屬性設定為 null 時，所擲回的例外狀況。</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.">表示具有固定整數位數和小數位數的數值，介於 - 10^38 +1 和 10^38 - 1 之間。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">使用提供的參數，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">可以用來表示新 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 結構之 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 屬性的最大位數。</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性要對新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構解析的小數位數。</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">布林值，指出新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構是否表示正數或負數。</param>
      <param name="data1" vsli:raw="An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">32 位元不帶正負號的整數 (Unsigned Integer)，將與 data2、data3 和 data4 組合以構成表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的 128 位元不帶正負號的整數。</param>
      <param name="data2" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">32 位元不帶正負號的整數，將與 data1、data3 和 data4 組合以構成表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的 128 位元不帶正負號的整數。</param>
      <param name="data3" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">32 位元不帶正負號的整數，將與 data1、data2 和 data4 組合以構成表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的 128 位元不帶正負號的整數。</param>
      <param name="data4" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">32 位元不帶正負號的整數，將與 data1、data2 和 data3 組合以構成表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的 128 位元不帶正負號的整數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">使用提供的參數，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">可以用來表示新 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 結構之 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 屬性的最大位數。</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性要對新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構解析的小數位數。</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">布林值，指出新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構是否表示正數或負數。</param>
      <param name="bits" vsli:raw="The 128-bit unsigned integer that provides the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">128 位元不帶正負號的整數，提供新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">使用提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 值，初始化 <see cref="T:System.Decimal" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be stored as a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">要被存放為 <see cref="T:System.Decimal" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied double parameter.">使用提供的雙精度浮點數 (Double) 參數，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="dVal" vsli:raw="A double, representing the value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">雙精度浮點數，表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied integer value.">使用提供的整數值，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="The supplied integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">提供的整數值，將被用來做為新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied long integer value.">使用提供的長整數值，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="The supplied long integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">提供的長整數值，將被用來做為新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The Abs method gets the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Abs 方法會取得 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的絕對值。</summary>
      <param name="n" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the unsigned number representing the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含表示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數之絕對值的不帶正負號的數字。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算子的總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary vsli:raw="The scale of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.">將 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的小數點位數調整成數字參數所指定的數字位數。 根據 fRound 參數的值，這個值不是被四捨五入到適合的數字位數，就是被截斷。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be adjusted.">要調整的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="digits" vsli:raw="The number of digits in the adjusted structure.">在調整結構中的數字位數。</param>
      <param name="fRound" vsli:raw="If this parameter is &lt;see langword=&quot;true&quot; /&gt;, the new Value will be rounded, if &lt;see langword=&quot;false&quot; /&gt;, the value will be truncated.">如果這個參數為 <see langword="true" />，則新 Value 將被四捨五入，如果為 <see langword="false" />，則該值將被截斷。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the adjusted number.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含調整過的位數。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary vsli:raw="Gets the binary representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of bytes.">取得這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的二進位表示當作位元組的陣列。</summary>
      <returns vsli:raw="An array of bytes that contains the binary representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value.">位元組的陣列，包含 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的二進位表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Returns the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">傳回大於或等於指定之 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的最小整數。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the ceiling value is to be calculated.">要計算最高限度值的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; representing the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />，表示大於或等於指定之 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的最小整數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; object and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 物件相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary vsli:raw="Adjusts the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand to the indicated precision and scale.">將 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的值調整成指示的精確度和小數位數。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is to be adjusted.">要調整值的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="precision" vsli:raw="The precision for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的精確度。</param>
      <param name="scale" vsli:raw="The scale for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的小數點位數。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value has been adjusted to the precision and scale indicated in the parameters.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 Value 已經被調整成參數中所指示的精確度和小數位數。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary vsli:raw="Gets the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of integers.">取得這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的二進位表示當做整數的陣列。</summary>
      <returns vsli:raw="An array of integers that contains the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">整數的陣列，包含這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的二進位表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">除法運算子計算將第一個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算子除以第二個的結果。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, the value of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; will be null.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。 如果任一執行個體為 null，<see langword="SqlDecimal" /> 的值也將是 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance.">將提供的 <see cref="T:System.Object" /> 參數與 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 執行個體的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果物件是 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的執行個體，並且兩者相等，則為 <see langword="true" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Rounds a specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; number to the next lower whole number.">將指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 數字四捨五入到下一個較低的整數。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the floor value is to be calculated.">要計算最低限度值的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the whole number part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，包含這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的邏輯比對，以判斷第一個結構是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null.">表示這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構是否為 Null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構為 null，則為 <see langword="true" />， 否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is greater than zero.">指出這個 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 是否大於零。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is assigned to null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果將 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 指定為 null，則為 <see langword="true" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的邏輯比對，以判斷第一個結構是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary vsli:raw="A constant representing the largest possible value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Precision&quot; /&gt; property.">常數，表示 <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" /> 屬性的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary vsli:raw="A constant representing the maximum value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Scale&quot; /&gt; property.">常數，表示 <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" /> 屬性的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary vsli:raw="A constant representing the maximum value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary vsli:raw="A constant representing the minimum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的最小值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含乘法運算的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; class.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算子的總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">除法運算子計算將第一個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算子除以第二個的結果。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Decimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">新的 <see langword="Decimal" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將 <see cref="T:System.Double" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Double" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value equals the value of the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其值等於 <see cref="T:System.Double" /> 參數的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的邏輯比對，以判斷第一個結構是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to SqlDecimal.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 SqlDecimal。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; operand to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 運算元轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將 <see cref="T:System.Decimal" /> 值轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">要被轉換的 <see cref="T:System.Decimal" /> 值。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see langword=&quot;Decimal&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see langword="Decimal" /> 參數的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將提供的 <see cref="T:System.Int64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Int64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see cref="T:System.Int64" /> 參數的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的邏輯比對，以判斷第一個結構是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含乘法運算的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">計算第一個運算元減去第二個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的結果。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 Value 屬性包含減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">一元減號運算子將 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 變成相反值。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be negated.">要變成相反值的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value contains the results of the negation.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其值包含負運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent.">將數字的 <see cref="T:System.String" /> 表示轉換為其 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 對等用法。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要剖析的 <see langword="String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />，等於指定 <see cref="T:System.String" /> 中所包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary vsli:raw="Raises the value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to the specified exponential power.">將指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值做為指定的指數乘冪。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be raised to a power.">要做為乘冪數的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="exp" vsli:raw="A double value that indicates the power to which the number should be raised.">雙精度浮點數值，指出應該提高哪一個乘冪數。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results.">包含結果的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary vsli:raw="Gets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">取得用來表示 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性的最大位數。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">最大位數，用來表示這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 <see langword="Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Gets the number nearest the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value with the specified precision.">取得最接近指定之 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的數字 (具有指定的精確度)。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be rounded.">要被四捨五入的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="position" vsli:raw="The number of significant fractional digits (precision) in the return value.">在傳回值中的有效分數位數 (精確度) 的數目。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results of the rounding operation.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，包含四捨五入運算的結果。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary vsli:raw="Gets the number of decimal places to which &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is resolved.">取得解析 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 的小數位數數目。</summary>
      <returns vsli:raw="The number of decimal places to which the &lt;see langword=&quot;Value&quot; /&gt; property is resolved.">解析 <see langword="Value" /> 屬性的小數位數數目。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Gets a value that indicates the sign of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">取得值，指出 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性之符號。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose sign is to be evaluated.">要評估其符號的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">數字，指出 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的符號。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">計算第一個運算元減去第二個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的結果。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 Value 屬性包含減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary vsli:raw="Returns the a double equal to the contents of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of this instance.">傳回雙精度浮點數，等於這個執行個體的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性內容。</summary>
      <returns vsli:raw="The decimal representation of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性的十進位表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 為非零，則為 <see langword="true" />，如果為零，則為 <see langword="false" />，否則為 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 <see langword="Value" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值為 <see langword="true" />，則 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see langword="Value" /> 將會是 1。 否則，<see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see langword="Value" /> 會是 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 結構，其值為字串，這個字串表示這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構中包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換為 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">新的 <see cref="T:System.String" /> 物件，包含 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性之字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Truncates the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value to the that you want position.">將指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構之值截斷到想要的位置。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be truncated.">要被截斷的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="position" vsli:raw="The decimal position to which the number will be truncated.">將截斷數字的小數點位置。</param>
      <returns vsli:raw="Supply a negative value for the &lt;paramref name=&quot;position&quot; /&gt; parameter in order to truncate the value to the corresponding position to the left of the decimal point.">提供 <paramref name="position" /> 參數的負值，以便將該值截斷至小數點左邊的對應位置。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. This property is read-only.">取得 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.">介於 -79,228,162,514,264,337,593,543,950,335 到 79,228,162,514,162,514,264,337,593,543,950,335 之間的數字。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.">表示 -1.79E +308 到 1.79E +308 範圍內的浮點數 (儲存於資料庫或從資料庫擷取)。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure using the supplied double parameter to set the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property.">使用提供的雙精確度浮點數 (Double) 參數設定新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 屬性，以初始化 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A double whose value will be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">雙精確度浮點數 (Double)，其值將被用於新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">加法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (Visual Basic 中的 <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">除法運算子用第二個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元除第一個運算元。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 執行個體的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; object.">將提供的物件參數與 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">傳回這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance is null.">傳回布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 執行個體是否為 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 為 null，則為 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary vsli:raw="A constant representing the maximum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary vsli:raw="A constant representing the minimum possible value of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的最小可能值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are notequal.">比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">加法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">除法運算子用第二個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元除第一個運算元。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 執行個體的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is either 0 or 1, depending on the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，根據 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 屬性，其 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 不是 0 就是 1。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to double.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成雙精確度浮點數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A double equivalent to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">雙精確度浮點數，相當於指定的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構之值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the value of the number represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示的數字值。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 為 <see cref="F:System.Data.SqlTypes.SqlString.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlByte.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlByte" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 為 <see cref="F:System.Data.SqlTypes.SqlByte.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDecimal.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 為 <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt16.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 為 <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 為 <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt64.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 為 <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 為 <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlSingle.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 為 <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied double value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將提供的雙精確度浮點數值轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="The double value to convert.">要轉換的雙精確度浮點數值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; with the same value as the specified double parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />，具有與指定的雙精確度浮點數參數相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are not equal.">比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">減法運算子從第一個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元減去第二個運算元。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="The results of the subtraction operation.">減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Returns the negated value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">傳回指定的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的負值。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the negated value.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，含有相反的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its double-precision floating point number equivalent.">將數字的 <see cref="T:System.String" /> 表示轉換成相等的雙精確度浮點數。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要剖析的 <see langword="String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that contains the value represented by the &lt;see langword=&quot;String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" />，包含 <see langword="String" /> 表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">減法運算子從第一個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元減去第二個運算元。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="The results of the subtraction operation.">減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">.NET Framework 使用的 XML 結構描述。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBoolean&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is non-zero, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is zero and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">
        <see langword="SqlBoolean" /> 結構，如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 為非零值，則它的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 將會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 為零，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />，如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構為 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see langword="SqlByte" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的 <see langword="Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose converted value equals the rounded value of this &lt;see langword=&quot;SqlDouble&quot; /&gt;.">新的 <see langword="SqlDecimal" /> 結構，其轉換值等於這個 <see langword="SqlDouble" /> 的進位值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see langword="Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構值的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see langword="Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構值的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see langword="Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構值的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; is equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">新的 <see langword="SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">新的 <see langword="SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於這個 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">
        <see langword="SqlString" />，表示這個 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to a string.">將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成字串。</summary>
      <returns vsli:raw="A string representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">字串，表示這個 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure. This property is read-only.">取得 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的值。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">表示零值，其可以指派至 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 結構之執行個體的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Represents a GUID to be stored in or retrieved from a database.">表示要存放在資料庫或從資料庫擷取的 GUID。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the supplied byte array parameter.">使用提供的位元組陣列參數，初始化 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A byte array.">位元組陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">使用指定的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 參數，初始化 <see cref="T:System.Guid" /> 結構的新執行個體。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified values.">使用指定的值，初始化 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的新執行個體。</summary>
      <param name="a" vsli:raw="The first four bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的前 4 個位元組。</param>
      <param name="b" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下兩個位元組。</param>
      <param name="c" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下兩個位元組。</param>
      <param name="d" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="e" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="f" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="g" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="h" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="i" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="j" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="k" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.String&quot; /&gt; parameter.">使用指定的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 參數，初始化 <see cref="T:System.String" /> 結構的新執行個體。</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object.">
        <see cref="T:System.String" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構與提供的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 相比較，並傳回它們相對值的指示。 比較最後 6 個以上的位元組，並將最後 6 個位元組視為比較中的最大顯著性位元組。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件為 Null 參考 (<see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied object and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構與提供的物件相比較，並傳回它們相對值的指示。 比較最後 6 個以上的位元組，並將最後 6 個位元組視為比較中的最大顯著性位元組。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件為 Null 參考 (<see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlGuid&quot; /&gt; will be null.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。 如果任一執行個體是 null，則 <see langword="SqlGuid" /> 會是 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; object.">將提供的物件參數與 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果物件是 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的執行個體，並且兩者相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary vsli:raw="Returns the hash code of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">傳回這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure is null.">取得布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構是否為 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="null" />，便傳回 <see langword="true" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的邏輯比對，判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; object.">
        <see langword="SqlBinary" /> 物件。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlGuid" />，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 參數轉換成 <see cref="T:System.Guid" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Guid&quot; /&gt; equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">新的 <see cref="T:System.Guid" />，等於 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">將提供的 <see cref="T:System.Guid" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlGuid" />，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 等於 <see cref="T:System.Guid" /> 參數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的邏輯比對，判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">將指定的 <see cref="T:System.String" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要剖析的 <see langword="String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />，等於指定 <see cref="T:System.String" /> 中所包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a byte array.">將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構轉換成位元組陣列。</summary>
      <returns vsli:raw="An array of bytes representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">位元組的陣列，表示這個 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; structure that contains the bytes in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see langword="SqlBinary" /> 結構，包含 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構中的位元組。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 結構，包含 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.String" />，包含 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的字串表示。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure. This property is read-only.">取得 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; structure.">
        <see cref="T:System.Guid" /> 結構。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Represents a 16-bit signed integer to be stored in or retrieved from a database.">表示要在資料庫中儲存或擷取的 16 位元帶正負號的整數。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure using the supplied short integer parameter.">使用提供的短整數 (Short Integer) 參數，初始化 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A short integer.">短整數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">計算其 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的位元 AND 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含位元 AND 的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">執行其兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的位元 OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含位元 OR 的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object, or the object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">用第二個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元除第一個運算元。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt16&quot; /&gt; will be null.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。 如果任一執行個體是 null，則 <see langword="SqlInt16" /> 會是 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; object.">比較指定的物件與 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 屬性。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果物件是 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的執行個體，並且兩者相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.String" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure is null.">表示這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構是否為 Null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. For more information, see Handling Null Values.">如果是 null 則為 <see langword="true" />。 否則為 <see langword="false" />。 如需詳細資訊, 請參閱處理 Null 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，判斷第一個結構是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的最小可能值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">在將餘數的第一個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元除以它的第二個運算元之後計算餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含餘數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; values and returns the remainder.">為兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值進行除法運算，並傳回餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">除法運算之後的餘數會在 <paramref name="x" /> 和 <paramref name="y" /> 上執行。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含兩個參數的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">~ 運算子在其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元上執行位元一進位補數作業。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含指定的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構之補數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">計算其 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的位元 AND 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含位元 AND 的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">執行其兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的位元 OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含位元 OR 的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">用第二個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元除第一個運算元。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" />，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise XOR.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含位元 XOR 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to a short integer.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成短整數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A short integer whose value is the Value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">短整數，其值是 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的 Value。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於提供的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件參數表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied short integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將提供的短整數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A short integer value.">短整數值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as the specified short integer.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，具有與指定之短整數相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">比較 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，判斷第一個結構是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">在將餘數的第一個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元除以它的第二個運算元之後計算餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含餘數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含兩個參數的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">~ 運算子在其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元上執行位元一進位補數作業。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含指定的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構之補數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">從第一個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數減去第二個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand.">一元減號運算子將 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 運算元的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 變成相反值。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the negated value.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，含有相反的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 16-bit signed integer equivalent.">將數字的 <see cref="T:System.String" /> 表示轉換成它的對等 16 位元帶正負號的整數。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要剖析的 <see langword="String" />。</param>
      <returns vsli:raw="A 16-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">16 位元帶正負號的整數，等於指定的 <see cref="T:System.String" /> 中所包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">從第一個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數減去第二個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">.NET Framework 使用的 XML 結構描述。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 為非零，則為 <see langword="true" />，如果為零，則為 <see langword="false" />，否則為 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 小於 0 或大於 255，則會發生 <see cref="T:System.OverflowException" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">新 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">新 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />，表示這個 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 之執行個體的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.String" /> 物件，表示這個 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 之執行個體的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary vsli:raw="Gets the value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. This property is read-only.">取得這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構之執行個體的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="A short integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">短整數，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the results of the XOR operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，包含 XOR 運算的結果。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">表示零值，其可以指派至 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 結構之執行個體的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Represents a 32-bit signed integer to be stored in or retrieved from a database.">表示要在資料庫中儲存或擷取的 32 位元帶正負號的整數 (Signed Integer)。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure using the supplied integer value.">使用提供的整數值，初始化 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="The integer to be converted.">要轉換的整數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">計算其 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 運算元的位元 AND 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 AND 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">計算指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之位元 OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 OR 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (Visual Basic 中的 <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">用第二個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數除第一個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" />，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt32&quot; /&gt; will be null.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。 如果任一執行個體是 null，則 <see langword="SqlInt32" /> 會是 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; object.">將提供的物件參數與 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果物件是 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的執行個體，並且兩者相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure is null.">表示這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構是否為 Null。</summary>
      <returns vsli:raw="This property is &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 是 null，則這個屬性為 <see langword="true" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的最小可能值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">在將第一個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數除以第二個參數之後計算餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含餘數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; values and returns the remainder.">為兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值進行除法運算，並傳回餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">除法運算之後的餘數會在 <paramref name="x" /> 和 <paramref name="y" /> 上執行。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含兩個參數的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; class.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">在指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構上執行位元一進位補數運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含一進位補數運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">計算其 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 運算元的位元 AND 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 AND 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">計算指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之位元 OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 OR 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">用第二個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數除第一個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" />，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">在指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構上執行位元 Exclusive-OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 XOR 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to an integer.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成整數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="The converted integer value.">轉換的整數值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 參數的 <see langword="SqlInt64" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; property to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 屬性轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將提供的整數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="An integer value.">整數值。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose Value property is equal to the integer parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 Value 屬性等於整數參數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">在將第一個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數除以第二個參數之後計算餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含餘數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含兩個參數的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">在指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構上執行位元一進位補數運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含一進位補數運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">從第一個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數減去第二個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operand.">將 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 運算元的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 變成相反值。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the negated value.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，含有相反的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 32-bit signed integer equivalent.">將數字的 <see cref="T:System.String" /> 表示轉換成它的對等 32 位元帶正負號的整數。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">要剖析的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A 32-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">32 位元帶正負號的整數，等於指定的 <see cref="T:System.String" /> 中所包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">從第一個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數減去第二個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 為非零，則為 <see langword="true" />，如果為零，則為 <see langword="false" />，否則為 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. If the value of the &lt;see langword=&quot;SqlInt32&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的 <see langword="Value" />。 如果 <see langword="SqlInt32" /> 小於 0 或大於 255，則會發生 <see cref="T:System.OverflowException" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.String" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. This property is read-only.">取得這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="An integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">整數，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的值。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;.">屬性包含 <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">在指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構上執行位元 Exclusive-OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 XOR 運算的結果。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">表示零值，其可以指派至 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 結構之執行個體的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Represents a 64-bit signed integer to be stored in or retrieved from a database.">表示要在資料庫中儲存或擷取的 64 位元帶正負號的整數。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure using the supplied long integer.">使用提供的長整數 (Long Integer)，初始化 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A long integer.">長整數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">計算其 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元的位元 AND 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 AND 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">執行其兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元的位元 OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 OR 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (Visual Basic 中的 <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (Visual Basic 中的 <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">用第二個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數除第一個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt64&quot; /&gt; will be null.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。 如果任一執行個體是 null，則 <see langword="SqlInt64" /> 會是 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; object.">將提供的物件參數與 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果物件是 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的執行個體，並且兩者相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" />，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷第一個參數是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure is null.">取得布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構是否為 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果是 null 則為 <see langword="true" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，判斷第一個參數是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，判斷第一個參數是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的最小可能值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">在將第一個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數除以第二個參數之後計算餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性包含其餘部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; values and returns the remainder.">為兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值進行除法運算，並傳回餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">除法運算之後的餘數會在 <paramref name="x" /> 和 <paramref name="y" /> 上執行。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">對兩個 SqlInt64 參數進行邏輯比較以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">在其 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元上執行位元一進位補數作業。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的一進位補數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">計算其 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元的位元 AND 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 AND 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">執行其兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元的位元 OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 OR 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">用第二個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數除第一個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 XOR 運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to long.">將 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換成長整數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new long value equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的長整數值，等於 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性包含 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷第一個參數是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the long parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將長整數參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="A long integer value.">長整數值。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the value of the long parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於長整數參數的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">對兩個 SqlInt64 參數進行邏輯比較以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，判斷第一個參數是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，判斷第一個參數是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">在將第一個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數除以第二個參數之後計算餘數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性包含其餘部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">在其 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元上執行位元一進位補數作業。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的一進位補數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">從第一個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數減去第二個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">一元減號運算子將 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 運算元的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 變成相反值。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the negated &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 參數的否定 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 64-bit signed integer equivalent.">將數字的 <see cref="T:System.String" /> 表示轉換成它的對等 64 位元帶正負號的整數。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">要剖析的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A 64-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">64 位元帶正負號的整數，等於指定的 <see cref="T:System.String" /> 中所包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">從第一個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數減去第二個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 為非零，則為 <see langword="true" />，如果為零，則為 <see langword="false" />，否則為 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的 <see langword="Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlSingle" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.String&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的執行個體轉換成 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">
        <see cref="T:System.String" />，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure. This property is read-only.">取得這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="A long integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">短整數，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 XOR 運算的結果。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">表示零值，其可以指派至 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 結構之執行個體的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.">表示要存放在資料庫或從資料庫擷取的貨幣值，範圍從 -2 63 (或 -922,337,203,685,477.5808) 到 2 63 -1 (或 +922,337,203,685,477.5807)，正確率為貨幣單位的萬分之一。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">使用指定的 <see cref="T:System.Decimal" /> 值，初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">要初始化的貨幣值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with specified double value.">使用指定的雙精度浮點數 (Double) 值，初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">要初始化的貨幣值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified integer value.">使用指定的整數值，初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">要初始化的貨幣值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified long integer value.">使用指定的長整數 (Long Integer) 值，初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">要初始化的貨幣值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">除法運算子用第二個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數除第一個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlMoney&quot; /&gt; will be null.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。 如果任一執行個體是 null，則 <see langword="SqlMoney" /> 會是 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; object.">將提供的物件參數與 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若物件是 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的執行個體且兩者相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">取得這個執行個體的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" />，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is null.">傳回布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構是否為 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果是 null 則為 <see langword="true" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">表示可以指派至 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 類別之執行個體的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 屬性的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">表示可以指派至 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 類別之執行個體的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 屬性的最小值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含乘法運算的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">計算兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">除法運算子用第二個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數除第一個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Decimal" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">新的 <see cref="T:System.Decimal" /> 結構，其值等於 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個運算子會將 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">將 <see cref="T:System.Decimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">要被轉換的 <see cref="T:System.Decimal" /> 值。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the value of the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 等於 <see cref="T:System.Decimal" /> 參數的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">這個隱含運算子會將提供的 <see cref="T:System.Int64" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Int64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Int64" /> 參數的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含乘法運算的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">減法運算子從第一個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數減去第二個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，包含減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">一元減號運算子將 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 變成相反值。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be negated.">要變成相反值的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the negation.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含負運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent.">將數字的 <see cref="T:System.String" /> 表示轉換為其 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 對等用法。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要剖析的 <see langword="String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" />，等於指定 <see cref="T:System.String" /> 中所包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">減法運算子從第一個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數減去第二個參數。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，包含減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary vsli:raw="Converts the Value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 之執行個體的 Value 轉換為 <see cref="T:System.Decimal" /> 結構。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Decimal" /> 結構，其值等於這個 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Double" />。</summary>
      <returns vsli:raw="A double with a value equal to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">雙精度浮點數，具有等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Int32" />。</summary>
      <returns vsli:raw="A 32-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">32 位元的整數，其值等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary vsli:raw="Converts the Value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的值轉換成 <see cref="T:System.Int64" />。</summary>
      <returns vsli:raw="A 64-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">64 位元的整數，其值等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is zero, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的值為零，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值將會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlSingle" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 結構，其值是表示這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 之值的字串。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to string.">將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的執行個體轉換成字串。</summary>
      <returns vsli:raw="A string whose value is the string representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">字串，其值是表示這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 之值的字串。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary vsli:raw="Gets the monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure. This property is read-only.">取得 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的執行個體之貨幣值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="The monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的執行個體之貨幣值。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">此屬性設定為 null。</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">表示可以指派至 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 類別之執行個體的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 屬性的零值。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 類別並非要做為獨立的元件使用，而是要做為其他類別衍生標準功能時所根據的類別。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
      <param name="e" vsli:raw="A reference to an inner exception.">內部例外狀況的參考。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">當 <see langword="Value" /> 結構的 <see cref="N:System.Data.SqlTypes" /> 屬性設定為 null 時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a system-supplied message that describes the error.">以系統提供的錯誤說明訊息，初始化 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified message that describes the error.">使用指定的錯誤說明訊息，初始化 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">說明例外狀況的訊息。 這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">說明例外狀況的訊息。 這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">做為目前例外狀況發生原因的例外狀況。 如果 <c>innerException</c> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外的 <see langword="catch" /> 區塊中引發。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.">表示 -3.40E +38 到 3.40E +38 範圍內的浮點數 (儲存於資料庫或從資料庫擷取)。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure using the supplied double parameter.">使用提供的雙精度浮點數 (Double) 參數，初始化 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A double value which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">雙精度浮點數值，將用來做為新 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">初始化 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的新執行個體。</summary>
      <param name="value" vsli:raw="A floating point number which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">浮點數值，將用來做為新 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">將第一個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構除以第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure that contains the results of the division.">
        <see langword="SqlInt64" /> 結構，包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlSingle&quot; /&gt; will be null.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。 如果任一執行個體是 null，則 <see langword="SqlSingle" /> 會是 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; object.">將提供的物件參數與 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果物件是 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的執行個體，並且兩者相等，則為 <see langword="true" />， 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">取得這個執行個體的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 運算元的邏輯比對，判斷第一個運算元是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的邏輯比對，判斷第一個結構是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure is null.">表示這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構是否為 Null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果是 null 則為 <see langword="true" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷第一個參數是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">表示可以指派至 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 類別之執行個體的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 屬性的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">表示可以指派至 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 類別之執行個體的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 屬性的最小值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含乘法運算的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之總和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之總和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">將第一個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構除以第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含除法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two SqlSingle parameters to determine whether they are equal.">執行兩個 SqlSingle 參數的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to float.">將指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成浮點數 (Float)。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; value to be converted to float.">要被轉換成浮點數的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 值。</param>
      <returns vsli:raw="A float that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">浮點數，包含 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 運算元的邏輯比對，判斷第一個運算元是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的邏輯比對，判斷第一個結構是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">這個隱含運算子會將 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 屬性等於 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 參數的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the specified floating point value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將指定的浮點數值轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The float value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">要被轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的浮點數值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the value of the specified float.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含指定的浮點數的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷第一個參數是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之乘積。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含乘法運算的乘積。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">從第一個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構減去第二個結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">否定指定的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the negated value.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，含有相反的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">將指定的 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">要剖析的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" />，等於指定 <see cref="T:System.String" /> 中所包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">從第一個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構減去第二個結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含減法運算的結果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 為非零，則為 <see langword="true" />，如果為零，則為 <see langword="false" />，否則為 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see langword="Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的 <see langword="Value" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的值為 <see langword="true" />，則 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see langword="Value" /> 將會是 1。 否則，<see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see langword="Value" /> 會是 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">新的 <see langword="SqlDecimal" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">新的 <see langword="SqlDouble" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">新的 <see langword="SqlInt16" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />，表示這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換為 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; object representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">
        <see langword="String" /> 物件，表示這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. This property is read-only.">取得這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的值。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="A floating point value in the range -3.40E+38 through 3.40E+38.">介於 -3.40E+38 到 3.40E+38 之間的浮點數值。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">表示可以指派至 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 類別之執行個體的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 屬性的零值。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Represents a variable-length stream of characters to be stored in or retrieved from the database. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; has a different underlying data structure from its corresponding .NET &lt;see cref=&quot;T:System.String&quot; /&gt; data type.">表示要儲存在資料庫或自資料庫擷取之字元的可變長度資料流。 <see cref="T:System.Data.SqlTypes.SqlString" /> 具有與其在 .NET Framework 中對應的 <see cref="T:System.String" /> 資料類型不同的基礎資料結構。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified locale id, compare options, and data.">使用指定的地區設定 ID、比較選項和資料，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的新執行個體。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
      <param name="data" vsli:raw="The data array to store.">要儲存的資料陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 類別的新執行個體。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
      <param name="data" vsli:raw="The data array to store.">要儲存的資料陣列。</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果編碼為 Unicode，則為 <see langword="true" />， 否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 類別的新執行個體。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
      <param name="data" vsli:raw="The data array to store.">要儲存的資料陣列。</param>
      <param name="index" vsli:raw="The starting index within the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">從索引中要複製的字元數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 類別的新執行個體。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
      <param name="data" vsli:raw="The data array to store.">要儲存的資料陣列。</param>
      <param name="index" vsli:raw="The starting index within the array.">陣列中的開始索引。</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">從索引中要複製的字元數。</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果編碼為 Unicode，則為 <see langword="true" />， 否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的新執行個體。</summary>
      <param name="data" vsli:raw="The string to store.">要儲存的字串。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string and locale id values.">使用指定的字串與地區設定 ID (Locale ID) 值，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的新執行個體。</summary>
      <param name="data" vsli:raw="The string to store.">要儲存的字串。</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string, locale id, and compare option values.">用指定的字串、地區設定 ID 和比較選項值，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的新執行個體。</summary>
      <param name="data" vsli:raw="The string to store.">要儲存的字串。</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">將兩個指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數串連，以建立新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that is the concatenated value of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />，為 <paramref name="x" /> 和 <paramref name="y" /> 的串連值。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">指定排序應該根據字元數值，而非其字母順序值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary vsli:raw="Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.">指定排序應該根據字元的數值，而非其字母順序值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">建立這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件的複本。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object in which all property values are the same as the original.">新 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件，其中所有屬性值都與原始值相同。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareInfo&quot; /&gt; object that defines how string comparisons should be performed for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">取得 <see cref="T:System.Globalization.CompareInfo" /> 物件，其定義應該如何為這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構執行字串比較。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;CompareInfo&quot; /&gt; object that defines string comparison for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see langword="CompareInfo" /> 物件，定義這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的字串比較。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareOptions&quot; /&gt; enumeration equivalent of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value.">取得指定 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 值的相等 <see cref="T:System.Globalization.CompareOptions" /> 列舉。</summary>
      <param name="compareOptions" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value that describes the comparison options for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 值，描述這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
      <returns vsli:raw="A &lt;see langword=&quot;CompareOptions&quot; /&gt; value that corresponds to the &lt;see langword=&quot;SqlCompareOptions&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see langword="CompareOptions" /> 值，對應這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的 <see langword="SqlCompareOptions" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (Visual Basic 中的 <see langword="Nothing" />)。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">帶正負號的數字，表示執行個體與物件的相對值。  
  傳回值 
  條件 
  小於零 
  這個執行個體小於物件。  

  零 
  這個執行個體與物件相同。  

  大於零 
  這個執行個體大於物件。 
-或- 
物件是 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">將兩個指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構串連在一起。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">
        <see cref="T:System.Data.SqlTypes.SqlString" />，包含剛串連的值，這個值表示兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數的內容。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that represents information about the culture of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">取得 <see cref="T:System.Globalization.CultureInfo" /> 結構，其表示有關這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件的文化特性 (Culture) 資訊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.">
        <see cref="T:System.Globalization.CultureInfo" /> 結構，描述有關這個 SqlString 結構的文化特性資訊，包括文化特性的名稱、撰寫的系統和使用的曆法，也包括存取特定文化特性的物件，這些物件會為一般作業 (例如格式化日期及排序字串) 提供方法。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlString&quot; /&gt; will be null.">如果兩個值相等，則為 <see langword="true" />， 否則為 <see langword="false" />。 如果任一執行個體是 null，則 <see langword="SqlString" /> 會是 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">將提供的物件參數與 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 物件的 <see cref="T:System.Data.SqlTypes.SqlString" /> 屬性相比較。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若物件是 <see cref="T:System.Data.SqlTypes.SqlString" /> 的執行個體且兩者相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">取得這個執行個體的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">取得位元組的陣列，包含 ANSI 格式的 <see cref="T:System.Data.SqlTypes.SqlString" /> 內容。</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">位元組陣列，包含 ANSI 格式的 <see cref="T:System.Data.SqlTypes.SqlString" /> 內容。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">取得位元組的陣列，包含 Unicode 格式的 <see cref="T:System.Data.SqlTypes.SqlString" /> 內容。</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">位元組陣列，包含 Unicode 格式的 <see cref="T:System.Data.SqlTypes.SqlString" /> 內容。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> 值，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons should ignore case.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較必須應該忽略大小寫。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary vsli:raw="Specifies that the string comparison must ignore the Kana type.">指定字串比較必須忽略假名類型。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary vsli:raw="Specifies that the string comparison must ignore non-space combining characters, such as diacritics.">指定字串比較必須忽略非空格組合的字元，例如變音符號 (Diacritic)。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary vsli:raw="Specifies that the string comparison must ignore the character width.">指定字串比較必須忽略字元寬度。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure is null.">表示這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構是否為 Null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 為 <see cref="F:System.Data.SqlTypes.SqlString.Null" />，則為 <see langword="true" />， 否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary vsli:raw="Specifies the geographical locale and language for the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理地區設定和語言。</summary>
      <returns vsli:raw="The locale id for the string stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property.">存放在 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 屬性中字串的地區設定 ID。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">將兩個指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構串連在一起。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">
        <see cref="T:System.Data.SqlTypes.SqlString" />，包含剛串連的值，這個值表示兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數的內容。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，以判斷它們是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件，含有 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 參數的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure to be converted.">要轉換的 <see langword="SqlDecimal" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see langword="SqlDecimal" /> 參數的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; whose value is the string representation of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />，其值為指定 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件，含有 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The SqlInt32 structure to be converted.">要被轉換的 SqlInt32 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件，含有 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件，含有 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlString" /> 轉換成 <see cref="T:System.String" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted.">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt;, whose contents are the same as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see langword="String" />，其內容與 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 屬性相同。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否大於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否大於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">將 <see cref="T:System.String" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">要轉換的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the value of the specified &lt;see langword=&quot;String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />，包含指定 <see langword="String" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，以判斷它們是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否小於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否小於或等於第二個。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />， 否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary vsli:raw="A combination of one or more of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; enumeration values that represent the way in which this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">一個或多個 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 列舉 (Enumeration) 值的組合表示應該將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 與其他 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構相比較的方式。</summary>
      <returns vsli:raw="A value specifying how this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">數值，指定應該如何將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 與其他 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構相比較。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 為非零，則為 <see langword="true" />，如果為零，則為 <see langword="false" />，否則為 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; equals the number represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新的 <see langword="SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構所表示的數字。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDateTime&quot; /&gt; structure that contains the date value represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">新的 <see langword="SqlDateTime" /> 結構，含有這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 所表示的日期值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; that contains the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />，包含這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is the &lt;see langword=&quot;Guid&quot; /&gt; represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">新的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 為這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構所表示的 <see langword="Guid" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlSingle" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件轉換成 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.String" />，具有與這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構相同的值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary vsli:raw="Gets the string that is stored in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure. This property is read-only.">取得存放在這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構中的字串。 這個屬性是唯讀的。</summary>
      <returns vsli:raw="The string that is stored.">已儲存的字串。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The value of the string is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;.">字串的值是 <see cref="F:System.Data.SqlTypes.SqlString.Null" />。</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary vsli:raw="The exception that is thrown when you set a value into a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure would truncate that value.">將某一個值設定成會截斷該值的 <see cref="N:System.Data.SqlTypes" /> 結構時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message.">使用指定的錯誤訊息，初始化 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message and a reference to the &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">使用指定的錯誤訊息和 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 的參考，初始化 <see cref="T:System.Exception" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="e" vsli:raw="A reference to an inner &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">內部 <see cref="T:System.Exception" /> 的參考。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary vsli:raw="The base exception class for the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt;.">
        <see cref="N:System.Data.SqlTypes" /> 的基底例外狀況 (Exception) 類別。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with serialized data.">使用序列化資料，初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 類別的新執行個體。</summary>
      <param name="si" vsli:raw="The object that holds the serialized object data.">存放序列物件資料的物件。</param>
      <param name="sc" vsli:raw="The contextual information about the source or destination.">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message.">使用指定的錯誤訊息，初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">說明例外狀況的訊息。 這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">做為目前例外狀況發生原因的例外狀況。 如果 <c>innerException</c> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外的 <see langword="catch" /> 區塊中引發。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary vsli:raw="Represents XML data stored in or retrieved from a server.">表示存放在伺服器或從伺服器擷取的 XML 資料。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">建立新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance, supplying the XML value from the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance.">建立新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體，從提供的 <see cref="T:System.IO.Stream" /> 衍生執行個體提供 XML 值。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance (such as &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt;) from which to load the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance's Xml content.">
        <see cref="T:System.IO.Stream" /> 衍生的執行個體 (例如 <see cref="T:System.IO.FileStream" />)，從其中載入 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體的 XML 內容。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance and associates it with the content of the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">建立新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體，並使它與提供的 <see cref="T:System.Xml.XmlReader" /> 內容產生關聯。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived class instance to be used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">
        <see cref="T:System.Xml.XmlReader" /> 衍生類別執行個體，用來當做新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體之值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary vsli:raw="Gets the value of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; as a &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">取得這個 <see cref="T:System.Data.SqlTypes.SqlXml" /> 之 XML 內容的值做為 <see cref="T:System.Xml.XmlReader" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived instance that contains the XML content. The actual type may vary (for example, the return value might be &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;) depending on how the information is represented internally, on the server.">包含 XML 內容的 <see cref="T:System.Xml.XmlReader" /> 衍生執行個體。 實際型別會因伺服器在內部表示資訊的方式而異 (例如，傳回值可能是 <see cref="T:System.Xml.XmlTextReader" />)。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="Attempt was made to access this property on a null instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt;.">嘗試在 <see cref="T:System.Data.SqlTypes.SqlXml" /> 的 null 執行個體上存取這個屬性。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">傳回指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A string that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">字串，表示指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary vsli:raw="Indicates whether this instance represents a null &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; value.">指出這個執行個體是否表示 null 的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 為 null，則為 <see langword="Value" />。 否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary vsli:raw="Represents a null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">表示 <see cref="T:System.Data.SqlTypes.SqlXml" /> 型別的 null 執行個體。</summary>
      <returns vsli:raw="A null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 型別的 null 執行個體。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" />，描述物件的 XML 表示，該物件由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法產生，由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> 方法取用。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</summary>
      <param name="r" vsli:raw="An XmlReader.">XmlReader。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">XmlWriter。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary vsli:raw="Gets the string representation of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">取得這個 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體的 XML 內容字串表示。</summary>
      <returns vsli:raw="The string representation of the XML content.">XML 內容的字串表示。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration is not intended for use as a stand-alone component, but as an enumeration from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.StorageState" /> 列舉型別 (Enumeration) 並非要做為獨立的元件使用，而是要做為其他類別衍生標準功能的列舉型別。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary vsli:raw="Buffer size.">緩衝區大小。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary vsli:raw="Stream.">資料流。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary vsli:raw="Unmanaged buffer.">Unmanaged 緩衝區。</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary vsli:raw="Provides data for the state change event of a .NET data provider.">為 .NET Framework 資料提供者 (Data Provider) 的狀態變更事件提供資料。</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; class, when given the original state and the current state of the object.">在提供物件的原始狀態和目前狀態時，初始化 <see cref="T:System.Data.StateChangeEventArgs" /> 類別的新執行個體。</summary>
      <param name="originalState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.ConnectionState" /> 值。</param>
      <param name="currentState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.ConnectionState" /> 值。</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary vsli:raw="Gets the new state of the connection. The connection object will be in the new state already when the event is fired.">取得連線的新狀態。 當引發事件時，連接物件將會處於新的狀態中。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.ConnectionState" /> 值。</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary vsli:raw="Gets the original state of the connection.">取得連線的原始狀態。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">其中一個 <see cref="T:System.Data.ConnectionState" /> 值。</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">代表將處理 <see cref="E:System.Data.Common.DbConnection.StateChange" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.Data.StateChangeEventArgs" />。</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary vsli:raw="Provides additional information for the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">提供 <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件的其他資訊。</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.StatementCompletedEventArgs&quot; /&gt; class.">建立 <see cref="T:System.Data.StatementCompletedEventArgs" /> 類別的新執行個體。</summary>
      <param name="recordCount" vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">指出導致發生 <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件之陳述式所影響的列數。</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">指出導致發生 <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件之陳述式所影響的列數。</summary>
      <returns vsli:raw="The number of rows affected.">受影響的資料列數目。</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary vsli:raw="The delegate type for the event handlers of the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件之事件處理常式的委派型別。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="The data for the event.">事件的資料。</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary vsli:raw="Specifies the type of SQL query to be used by the &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatedEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatingEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatedEventArgs&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatingEventArgs&quot; /&gt; class.">指定要由 <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />、<see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />、<see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> 或 <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> 類別使用的 SQL 查詢型別。</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary vsli:raw="A SQL query that is a batch statement.">SQL 查詢為批次陳述式。</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary vsli:raw="An SQL query that is a DELETE statement.">SQL 查詢為 DELETE 陳述式 (Statement)。</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary vsli:raw="An SQL query that is an INSERT statement.">SQL 查詢為 INSERT 陳述式。</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary vsli:raw="An SQL query that is a SELECT statement.">SQL 查詢為 SELECT 陳述式。</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary vsli:raw="An SQL query that is an UPDATE statement.">SQL 查詢為 UPDATE 陳述式。</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary vsli:raw="The exception that is thrown by a strongly typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; when the user accesses a &lt;see langword=&quot;DBNull&quot; /&gt; value.">例外狀況，會在使用者存取 <see langword="DBNull" /> 值時由強型別 (Strongly Typed) <see cref="T:System.Data.DataSet" /> 擲回。</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class.">初始化 <see cref="T:System.Data.StrongTypingException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class using the specified serialization information and streaming context.">使用指定序列化 (Serialization) 資訊和資料流 (Streaming) 內容，初始化 <see cref="T:System.Data.StrongTypingException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 結構。</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.StrongTypingException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string and inner exception.">使用指定的字串和內部例外狀況，初始化 <see cref="T:System.Data.StrongTypingException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">內部例外狀況的參考。</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a syntax error.">表示當 <see cref="P:System.Data.DataColumn.Expression" /> 的 <see cref="T:System.Data.DataColumn" /> 屬性含有語法錯誤時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SyntaxErrorException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">使用 <see cref="T:System.Data.SyntaxErrorException" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">序列化或還原序列化物件所需的資料。</param>
      <param name="context" vsli:raw="The source and destination of a specific serialized stream.">特定序列化資料流的來源和目的端。</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.SyntaxErrorException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.SyntaxErrorException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary vsli:raw="This type is used as a base class for typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code.">這個類型在 Visual Studio 和 XSD.exe .NET Framework 工具產生 <see cref="T:System.Data.DataTable" /> 型物件時使用作為基底類別，不能直接從程式碼使用。</summary>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence represented by the table, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">資料表所表示來源序列中物件的型別，通常為 <see cref="T:System.Data.DataRow" />。</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This type is not intended to be used directly from your code.">初始化新的 <see cref="T:System.Data.TypedTableBase`1" />。 這個方法支援 Visual Studio 和 XSD.exe .NET Framework 工具產生的具型別 <see cref="T:System.Data.DataTable" /> 物件。 這個型別並不適合直接從您的程式碼使用。</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">初始化新的 <see cref="T:System.Data.TypedTableBase`1" />。 這個方法支援 Visual Studio 和 XSD.exe .NET Framework 工具產生的具型別 <see cref="T:System.Data.DataTable" /> 物件。 這個方法不能從程式碼直接使用。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains data to construct the object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含建構物件所需的資料。</param>
      <param name="context" vsli:raw="The streaming context for the object being deserialized.">所要還原序列化的物件串流內容。</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to the specified type. This method supports typed &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">將 <see cref="T:System.Data.TypedTableBase`1" /> 的項目轉換為指定的型別。 這個方法支援 Visual Studio 和 XSD.exe .NET Framework 工具產生的具型別 <see cref="T:System.Data.DataTable" /> 物件。 這個方法不能從程式碼直接使用。</summary>
      <typeparam name="TResult" vsli:raw="The type to convert the elements to." />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">
        <see cref="T:System.Data.EnumerableRowCollection" />，包含已轉換成指定之型別的每個來源序列項目。</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">傳回 <see cref="T:System.Data.DataRow" /> 型別的列舉程式。 這個方法支援 Visual Studio 和 XSD.exe .NET Framework 工具產生的具型別 <see cref="T:System.Data.DataTable" /> 物件。 這個方法不能從程式碼直接使用。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">實作 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 介面的物件。</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">傳回 <see cref="T:System.Data.DataRow" /> 型別的列舉程式。 這個方法支援 Visual Studio 和 XSD.exe .NET Framework 工具產生的具型別 <see cref="T:System.Data.DataTable" /> 物件。 這個方法不能從程式碼直接使用。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">實作 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 介面的物件。</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary vsli:raw="Contains the extension methods for the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; class.">包含 <see cref="T:System.Data.TypedTableBase`1" /> 類別的擴充方法。</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary vsli:raw="Enumerates the data row elements of the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; and returns an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">列舉 <see cref="T:System.Data.TypedTableBase`1" /> 的資料列項目並傳回 <see cref="T:System.Data.EnumerableRowCollection`1" /> 物件，其中泛型參數 <paramref name="T" /> 為 <see cref="T:System.Data.DataRow" />。 這個物件可以在 LINQ 運算式或方法查詢中使用。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to make enumerable.">要成為可列舉的來源 <see cref="T:System.Data.TypedTableBase`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type to convert the elements of the source to.">來源的項目所要轉換的目標型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> 物件，其中泛型參數 <paramref name="T" /> 為 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified row in a sequence or a default value if the row is out of range.">傳回位於序列中指定的資料列的項目；如果資料列超出範圍，則傳回預設值。</summary>
      <param name="source" vsli:raw="An enumerable object to return an element from.">要從中傳回項目的可列舉物件。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">要擷取的項目之以零為起始索引。</param>
      <typeparam name="TRow" vsli:raw="The type of the elements or the row.">項目的型別或資料列。</typeparam>
      <returns vsli:raw="The element at a specified row in a sequence.">位於序列中之指定的資料列的項目。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key.">依據指定的索引鍵，按遞增順序排序 <see cref="T:System.Data.TypedTableBase`1" /> 的資料列。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" />，其中包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目排序依據是指定的索引鍵。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key and comparer.">依據指定的索引鍵和比較子，按遞增順序排序 <see cref="T:System.Data.TypedTableBase`1" /> 的資料列。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" />，其中包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目是根據指定的索引鍵和比較子進行排序。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key.">依據指定的索引鍵，按遞減順序排序 <see cref="T:System.Data.TypedTableBase`1" /> 的資料列。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" />，其中包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目排序依據是指定的索引鍵。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key and comparer.">依據指定的索引鍵和比較子，按遞減順序排序 <see cref="T:System.Data.TypedTableBase`1" /> 的資料列。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" />，其中包含要排序的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 所傳回之索引鍵的型別。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其項目是根據指定的索引鍵和比較子進行排序。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; into a new form.">將 <see cref="T:System.Data.TypedTableBase`1" /> 的各個項目投影成一個新的表單。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transformation function upon.">
        <see cref="T:System.Data.TypedTableBase`1" />，包含要對其叫用轉換函式的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="selector" vsli:raw="A transformation function to apply to each element.">要套用至各個項目的轉換函式。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="S" vsli:raw="" />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transformation function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Data.EnumerableRowCollection`1" />，其項目是對 <paramref name="source" /> 的各個項目叫用轉換函式的結果。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">根據指定的述詞來篩選資料列序列。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">
        <see cref="T:System.Data.TypedTableBase`1" />，其中包含要篩選的 <see cref="T:System.Data.DataRow" /> 項目。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中資料列項目的型別，通常是 <see cref="T:System.Data.DataRow" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其中包含輸入序列中符合條件的資料列。</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary vsli:raw="Represents a restriction on a set of columns in which all values must be unique.">表示所有值都必須是唯一的資料行集限制。</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">使用指定的 <see cref="T:System.Data.UniqueConstraint" /> 初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">要限制的 <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">使用要限制的 <see cref="T:System.Data.UniqueConstraint" /> 和指定條件約束是否為主索引鍵的值，來初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">要限制的 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示條件約束是主索引鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the given array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用 <see cref="T:System.Data.UniqueConstraint" /> 物件的指定陣列，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">要限制的 <see cref="T:System.Data.DataColumn" /> 物件陣列。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">使用要限制的 <see cref="T:System.Data.UniqueConstraint" /> 物件陣列和指定條件約束是否為主索引鍵的值，來初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">要限制的 <see cref="T:System.Data.DataColumn" /> 物件陣列。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示條件約束是主索引鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">使用指定名稱和 <see cref="T:System.Data.UniqueConstraint" /> 來初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The name of the constraint.">條件約束的名稱。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">要限制的 <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">使用指定名稱、要限制的 <see cref="T:System.Data.UniqueConstraint" /> 和指定條件約束是否為主索引鍵的值，來初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The name of the constraint.">條件約束的名稱。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">要限制的 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示條件約束是主索引鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定名稱和 <see cref="T:System.Data.UniqueConstraint" /> 物件的陣列，來初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The name of the constraint.">條件約束的名稱。</param>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">要限制的 <see cref="T:System.Data.DataColumn" /> 物件陣列。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">使用指定名稱、要限制的 <see cref="T:System.Data.UniqueConstraint" /> 物件陣列和指定條件約束是否為主索引鍵的值，來初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The name of the constraint.">條件約束的名稱。</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">要限制的 <see cref="T:System.Data.DataColumn" /> 物件陣列。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示條件約束是主索引鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">使用指定名稱、要限制的 <see cref="T:System.Data.UniqueConstraint" /> 物件陣列和指定條件約束是否為主索引鍵的值，來初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The name of the constraint.">條件約束的名稱。</param>
      <param name="columnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">要限制的 <see cref="T:System.Data.DataColumn" /> 物件陣列。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示條件約束是主索引鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary vsli:raw="Gets the array of columns that this constraint affects.">取得這個條件約束影響的資料行陣列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">
        <see cref="T:System.Data.DataColumn" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary vsli:raw="Compares this constraint to a second to determine if both are identical.">將這個條件約束和第二個條件約束相比較，以判斷兩者是否相同。</summary>
      <param name="key2" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; is compared.">這個 <see cref="T:System.Data.UniqueConstraint" /> 所要比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraints are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若兩個條件約束相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; object.">取得 <see cref="T:System.Data.UniqueConstraint" /> 物件的這個執行個體之雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary vsli:raw="Gets a value indicating whether or not the constraint is on a primary key.">取得數值，指示條件約束是否在主索引鍵上。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraint is on a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果條件約束在主索引鍵上，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary vsli:raw="Gets the table to which this constraint belongs.">取得這個條件約束所屬的資料表。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint belongs.">條件約束所屬的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary vsli:raw="Specifies how query command results are applied to the row being updated.">指定如何將查詢命令結果套用到正在更新的資料列。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary vsli:raw="Both the output parameters and the first returned row are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">輸出參數和第一個傳回的資料列都對應至 <see cref="T:System.Data.DataSet" /> 中已變更的資料列。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary vsli:raw="The data in the first returned row is mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">第一個傳回的資料列中的資料是對應至 <see cref="T:System.Data.DataSet" /> 中已經變更的資料列。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary vsli:raw="Any returned parameters or rows are ignored.">系統會忽略任何傳回的參數或資料列。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary vsli:raw="Output parameters are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">輸出參數是對應至 <see cref="T:System.Data.DataSet" /> 中已經變更的資料列。</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary vsli:raw="Specifies the action to take with regard to the current and remaining rows during an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">指定 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間要採取關於目前和其餘資料列的動作。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; is to continue processing rows.">
        <see cref="T:System.Data.Common.DataAdapter" /> 將繼續處理資料列。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary vsli:raw="The event handler reports that the update should be treated as an error.">事件處理常式會報告應該將更新視為錯誤。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary vsli:raw="The current row and all remaining rows are not to be updated.">不更新目前的資料列和所有其餘的資料列。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary vsli:raw="The current row is not to be updated.">將不更新目前的資料列。</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when you try to return a version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">表示在嘗試傳回已經刪除的 <see cref="T:System.Data.DataRow" /> 版本時所傳回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class.">初始化 <see cref="T:System.Data.VersionNotFoundException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with serialization information.">使用序列化資訊，初始化 <see cref="T:System.Data.VersionNotFoundException" /> 類別的新執行個體。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或還原序列化物件所需要的資料。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">來源的描述和指定的序列化資料流的目的端。</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with the specified string.">使用指定的字串，初始化 <see cref="T:System.Data.VersionNotFoundException" /> 類別的新執行個體。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">例外狀況擲回時要顯示的字串。</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Data.VersionNotFoundException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解釋例外狀況原因的錯誤訊息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">造成目前例外狀況的例外狀況，若未指定內部例外狀況，則為 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary vsli:raw="Specifies how to read XML data and a relational schema into a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定如何將 XML 資料和關聯式結構描述讀入 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary vsli:raw="The default read mode.">預設的讀取模式。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary vsli:raw="Reads a DiffGram, applying changes from the DiffGram to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The semantics are identical to those of a &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation. As with the &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation, &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; values are preserved. Input to &lt;see cref=&quot;M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)&quot; /&gt; with DiffGrams should only be obtained using the output from &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram.&#xA;        &#xA;The target &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; must have the same schema as the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; on which &lt;see cref=&quot;Overload:System.Data.DataSet.WriteXml&quot; /&gt; as DiffGram is called. Otherwise the DiffGram merge operation fails and an exception is thrown.">讀取 DiffGram，同時將來自 DiffGram 的變更套用至 <see cref="T:System.Data.DataSet" />。 其語意與 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 作業的語意相同。 如同 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 作業一樣，會保留 <see cref="P:System.Data.DataRow.RowState" /> 值。 若要取得含有 DiffGram 的 <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> 輸入，您應該只使用來自 <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> 且為 DiffGram 形式的輸出。
目標 <see cref="T:System.Data.DataSet" /> 必須與 <see cref="Overload:System.Data.DataSet.WriteXml" /> 呼叫 DiffGram 所在 <see cref="T:System.Data.DataSet" /> 具有相同的結構描述。 否則，DiffGram 合併作業會失敗並擲回例外狀況。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary vsli:raw="Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; is set to &lt;see langword=&quot;Fragment&quot; /&gt;, the default namespace is read as the inline schema.">讀取 XML 片段，例如針對 SQL Server 的執行個體執行 FOR XML 查詢時所產生的片段。 當 <see cref="T:System.Data.XmlReadMode" /> 設定為 <see langword="Fragment" /> 時，系統會將預設命名空間讀取為內嵌結構描述。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary vsli:raw="Ignores any inline schema and reads data into the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;). If the data is a DiffGram, &lt;see langword=&quot;IgnoreSchema&quot; /&gt; has the same functionality as &lt;see langword=&quot;DiffGram&quot; /&gt;.">忽略任何內嵌結構描述，並將資料讀入現有的 <see cref="T:System.Data.DataSet" /> 結構描述中。 如果沒有任何資料符合現有的結構描述，則會捨棄該資料 (包括為 <see cref="T:System.Data.DataSet" /> 定義之不同命名空間的資料)。 如果資料是 DiffGram，則 <see langword="IgnoreSchema" /> 具有與 <see langword="DiffGram" /> 相同的功能。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary vsli:raw="Ignores any inline schema, infers schema from the data and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">忽略任何內嵌結構描述、從資料推斷結構描述，並載入資料。 如果 <see cref="T:System.Data.DataSet" /> 已經含有結構描述，則會新增新的資料表或將資料行新增至現有資料表，以擴充目前的結構描述。 如果推斷的資料表已經存在，但是具有不同的命名空間，或者如果任何的推斷資料行與現有資料行衝突，則會擲回例外狀況。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary vsli:raw="Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">忽略任何內嵌結構描述，從資料推斷出強型別結構描述，並載入資料。 如果無法從資料推斷類型，就會將其解譯為字串資料。 如果 <see cref="T:System.Data.DataSet" /> 已經含有結構描述，則會新增新的資料表或將資料行新增至現有資料表，以擴充目前的結構描述。 如果推斷的資料表已經存在，但是具有不同的命名空間，或者如果任何的推斷資料行與現有資料行衝突，則會擲回例外狀況。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary vsli:raw="Reads any inline schema and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">讀取任何內嵌結構描述，並載入資料。 如果 <see cref="T:System.Data.DataSet" /> 已經含有結構描述，則可能會將新的資料表新增至結構描述，但如果內嵌結構描述中的任何資料表已經存在於 <see cref="T:System.Data.DataSet" /> 中，則會擲回例外狀況。</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary vsli:raw="Specifies how to write XML data and a relational schema from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定如何從 <see cref="T:System.Data.DataSet" /> 寫入 XML 資料和關聯式結構描述 (Schema)。</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary vsli:raw="Writes the entire &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as a DiffGram, including original and current values. To generate a DiffGram containing only changed values, call &lt;see cref=&quot;M:System.Data.DataSet.GetChanges&quot; /&gt;, and then call &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram on the returned &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">將整個 <see cref="T:System.Data.DataSet" /> 寫入為 DiffGram (包括原始值和目前值)。 若要產生僅含有已變更值的 DiffGram，請呼叫 <see cref="M:System.Data.DataSet.GetChanges" />，然後在傳回的 <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> 上呼叫做為 DiffGram 的 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data, without an XSD schema. If no data is loaded into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, nothing is written.">將 <see cref="T:System.Data.DataSet" /> 的目前內容寫入為 XML 資料，不包括 XSD 結構描述。 如果沒有資料載入至 <see cref="T:System.Data.DataSet" />，則不會寫入任何內容。</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data with the relational structure as inline XSD schema. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has only a schema with no data, only the inline schema is written. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; does not have a current schema, nothing is written.">將 <see cref="T:System.Data.DataSet" /> 的目前內容寫入為XML 資料，該資料具有做為內嵌 XSD 結構描述的關聯式結構。 如果 <see cref="T:System.Data.DataSet" /> 只有不具有資料的結構描述，則只會寫入內嵌結構描述。 如果 <see cref="T:System.Data.DataSet" /> 不具有目前的結構描述，則不會寫入任何內容。</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary vsli:raw="Allows structured data to be stored, retrieved, and manipulated through a relational &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">允許透過關聯式 <see cref="T:System.Data.DataSet" /> 存放、擷取及管理結構化資料。</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class.">初始化 <see cref="T:System.Xml.XmlDataDocument" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlDataDocument" /> 初始化 <see cref="T:System.Data.DataSet" /> 類別的新執行個體。</summary>
      <param name="dataset" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; to load into &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">要載入 <see langword="DataSet" /> 中的 <see langword="XmlDataDocument" />。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the current node.">建立目前節點的複本。</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">若要在指定的節點下遞迴地複製子樹狀結構，則為 <see langword="true" />；若只要複製節點本身，則為 <see langword="false" />。</param>
      <returns vsli:raw="The cloned node.">複製的節點。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; , and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">建立具有指定之 <see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.LocalName" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的項目。</summary>
      <param name="prefix" vsli:raw="The prefix of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no prefix.">新項目的前置詞。 如果 String.Empty 或 <see langword="null" />，則沒有前置字元。</param>
      <param name="localName" vsli:raw="The local name of the new element.">新項目的本機名稱。</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no namespaceURI.">取得新項目的命名空間統一資源識別元 (URI)。 如果 String.Empty 或 <see langword="null" />，則沒有命名空間 URI。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">新的 <see cref="T:System.Xml.XmlElement" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">建立具有指定名稱的 <see cref="T:System.Xml.XmlEntityReference" />。</summary>
      <param name="name" vsli:raw="The name of the entity reference.">實體參考的名稱。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">具有指定名稱的 <see cref="T:System.Xml.XmlEntityReference" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">呼叫這個方法。</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node specified in the &lt;paramref name=&quot;node&quot; /&gt; parameter.">建立巡覽這份文件的新 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。 <see langword="XPathNavigator" /> 定位在 <paramref name="node" /> 參數中指定的節點上。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">您希望巡覽器一開始定位所在的 <see cref="T:System.Xml.XmlNode" />。</param>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; used to navigate the document.">用來巡覽文件的 <see langword="XPathNavigator" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that provides a relational representation of the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">取得提供 <see langword="XmlDataDocument" /> 中之資料的關聯式表示的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;DataSet&quot; /&gt; that can be used to access the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using a relational model.">
        <see langword="DataSet" />，可以利用關聯式模型以用於存取 <see langword="XmlDataDocument" /> 中的資料。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID. This method is not supported by the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class. Calling this method throws an exception.">取得具有指定 ID 的 <see cref="T:System.Xml.XmlElement" />。 <see cref="T:System.Xml.XmlDataDocument" /> 類別不支援這個方法。 呼叫這個方法會擲回例外狀況。</summary>
      <param name="elemId" vsli:raw="The attribute ID to match.">要比對的屬性 ID。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">具有指定 ID 的 <see cref="T:System.Xml.XmlElement" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">呼叫這個方法。</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">擷取與指定的 <see cref="T:System.Xml.XmlElement" /> 關聯的 <see cref="T:System.Data.DataRow" />。</summary>
      <param name="r" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; whose associated &lt;see langword=&quot;XmlElement&quot; /&gt; you want to retrieve.">您要擷取其相關 <see langword="DataRow" /> 的 <see langword="XmlElement" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; containing a representation of the specified &lt;see langword=&quot;DataRow&quot; /&gt;.">
        <see langword="XmlElement" />，含指定的 <see langword="DataRow" /> 的表示。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">傳回 <see cref="T:System.Xml.XmlNodeList" />，其中包含符合指定 <see cref="P:System.Xml.XmlDocument.Name" /> 之所有子代 (Descendant) 項目的清單。</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">要相符的限定名稱。 它會與符合節點的 <see cref="P:System.Xml.XmlDocument.Name" /> 屬性比對。 特殊值 "*" 與所有標記相符。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes.">
        <see cref="T:System.Xml.XmlNodeList" />，包含所有符合節點的清單。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">擷取與指定的 <see cref="T:System.Data.DataRow" /> 關聯的 <see cref="T:System.Xml.XmlElement" />。</summary>
      <param name="e" vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; whose associated &lt;see langword=&quot;DataRow&quot; /&gt; you want to retrieve.">您要擷取其相關 <see langword="XmlElement" /> 的 <see langword="DataRow" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; containing a representation of the &lt;see langword=&quot;XmlElement&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;DataRow&quot; /&gt; associated with the &lt;see langword=&quot;XmlElement&quot; /&gt;.">包含 <see langword="DataRow" /> 表示的 <see langword="XmlElement" />，如果沒有與 <see langword="null" /> 關聯的 <see langword="DataRow" />，則為 <see langword="XmlElement" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified stream.">從指定的資料流載入 <see langword="XmlDataDocument" />。</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">包含要載入之 XML 文件的資料流。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">從指定的 <see cref="T:System.IO.TextReader" /> 載入 <see langword="XmlDataDocument" />。</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">用於將 XML 資料送入文件中的 <see langword="TextReader" />。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using the specified URL.">使用指定的 URL 載入 <see langword="XmlDataDocument" />。</summary>
      <param name="filename" vsli:raw="The URL of the file containing the XML document to load.">包含要載入之 XML 文件的檔案的 URL。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">從指定的 <see cref="T:System.Xml.XmlReader" /> 載入 <see langword="XmlDataDocument" />。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML document to load.">
        <see langword="XmlReader" />，包含要載入的 XML 文件。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The XML being loaded contains entity references, and the reader cannot resolve entities.">載入的 XML 包含實體參考，並且讀取器不能解析實體。</exception>
    </member>
  </members>
</doc>