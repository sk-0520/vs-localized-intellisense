<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary vsli:raw="Represents an operation with context to be used for logging.">Représente une opération avec le contexte à utiliser pour la journalisation.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="operationName" vsli:raw="The name of the operation.">Nom de l'opération.</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary vsli:raw="Gets or sets the flags (defined by the W3C ID specification) associated with the activity.">Obtient les indicateurs (définis par la spécification d’ID de W3C) associés à l’activité.</summary>
      <returns vsli:raw="the flags associated with the activity.">indicateurs associés à l’activité.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to have a new baggage item with the specified key and value.">Met à jour le <see cref="T:System.Diagnostics.Activity" /> pour avoir un nouvel élément bagage avec la clé et la valeur spécifiées.</summary>
      <param name="key" vsli:raw="The baggage key.">Clé du bagage.</param>
      <param name="value" vsli:raw="The baggage value.">Valeur du bagage.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to have a new tag with the provided &lt;paramref name=&quot;key&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt;.">Met à jour <see cref="T:System.Diagnostics.Activity" /> pour avoir une nouvelle balise avec les valeurs <paramref name="key" /> et <paramref name="value" /> fournies. .</summary>
      <param name="key" vsli:raw="The tag key.">Clé de la balise.</param>
      <param name="value" vsli:raw="The tag value.">Valeur de la balise.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary vsli:raw="Gets a collection of key/value pairs that represents information that is passed to children of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Obtient une collection de paires clé-valeur qui représentent les informations passées aux enfants de ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns vsli:raw="Information that's passed to children of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Énumération de paires clé-valeur de chaîne de chaîne.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary vsli:raw="Gets or sets the current operation (&lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;) for the current thread. This flows across async calls.">Obtient ou définit l’opération en cours (<see cref="T:System.Diagnostics.Activity" />) pour le thread actuel.  Cela s’effectue par le biais d’appels asynchrones.</summary>
      <returns vsli:raw="The current operation for the current thread.">Opération actuelle pour le thread actuel.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary vsli:raw="Gets or sets the default ID format for the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Obtient ou définit le format d’ID par défaut pour la <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary vsli:raw="Gets the duration of the operation.">Obtient la durée de l’opération.</summary>
      <returns vsli:raw="The delta between &lt;see cref=&quot;P:System.Diagnostics.Activity.StartTimeUtc&quot; /&gt; and the end time if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has ended (&lt;see cref=&quot;M:System.Diagnostics.Activity.Stop&quot; /&gt; or &lt;see cref=&quot;M:System.Diagnostics.Activity.SetEndTime(System.DateTime)&quot; /&gt; was called), or &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has not ended and &lt;see cref=&quot;M:System.Diagnostics.Activity.SetEndTime(System.DateTime)&quot; /&gt; was not called.">Le delta entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> et l’heure de fin si <see cref="T:System.Diagnostics.Activity" /> la est terminée<see cref="M:System.Diagnostics.Activity.Stop" /> ( <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /><see cref="T:System.Diagnostics.Activity" /> ou a été appelée) <see cref="F:System.TimeSpan.Zero" /> , ou si n’a pas <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> terminé et n’a pas été appelé.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary vsli:raw="Gets or sets a value that detrmines if the &lt;see cref=&quot;P:System.Diagnostics.Activity.DefaultIdFormat&quot; /&gt; is always used to define the default ID format.">Obtient ou définit une valeur qui détermine si le <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> est toujours utilisé pour définir le format d’ID par défaut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always use the &lt;see cref=&quot;P:System.Diagnostics.Activity.DefaultIdFormat&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />pour toujours utiliser le <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary vsli:raw="Returns the value of a key-value pair added to the activity with &lt;see cref=&quot;M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)&quot; /&gt;.">Retourne la valeur d’une paire clé-valeur ajoutée à l’activité avec <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />.</summary>
      <param name="key" vsli:raw="The baggage key.">Clé du bagage.</param>
      <returns vsli:raw="The value of the key-value-pair item if it exists, or &lt;see langword=&quot;null&quot; /&gt; if it does not exist.">Valeur de la paire clé-valeur si elle existe ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary vsli:raw="Gets an identifier that is specific to a particular request.">Obtient un identificateur qui est propre à chaque requête.</summary>
      <returns vsli:raw="The activity ID.">ID de l'activité.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary vsli:raw="Gets the format for the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Obtient le format pour la <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns vsli:raw="The format for the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Format <see cref="P:System.Diagnostics.Activity.Id" />du.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary vsli:raw="Gets the operation name.">Obtient le nom de l’opération.</summary>
      <returns vsli:raw="The name of the operation.">Nom de l'opération.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; that created this activity.">Obtient le parent de <see cref="T:System.Diagnostics.Activity" /> qui a créé cette activité.</summary>
      <returns vsli:raw="The parent of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;, if it is from the same process, or &lt;see langword=&quot;null&quot; /&gt; if this instance has no parent (it is a root activity) or if the parent is from outside the process.">Parent de ce <see cref="T:System.Diagnostics.Activity" />, s’il s’agit du même processus, ou <see langword="null" /> si cette instance n’a pas de parent (il s’agit d’une activité racine) ou si le parent est en dehors du processus.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary vsli:raw="Gets the ID of this activity's parent.">Obtient l’ID du parent de cette activité.</summary>
      <returns vsli:raw="The parent ID, if one exists, or &lt;see langword=&quot;null&quot; /&gt; if it does not.">ID parent, s’il en existe un, <see langword="null" /> ou si ce n’est pas le cas.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary vsli:raw="Gets the parent's &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt;.">Obtient le <see cref="P:System.Diagnostics.Activity.SpanId" /> du parent.</summary>
      <returns vsli:raw="The parent's &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt;.">Du <see cref="P:System.Diagnostics.Activity.SpanId" />parent.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary vsli:raw="Gets a value that indicates whether the W3CIdFlags.Recorded flag is set.">Obtient une valeur qui indique si l’indicateur W3CIdFlags.Recorded est défini.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the W3CIdFlags.Recorded flag is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si l’indicateur W3CIdFlags. enregistred est défini; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary vsli:raw="Gets the root ID of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Obtient l’ID racine de ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns vsli:raw="The root ID, or &lt;see langword=&quot;null&quot; /&gt; if the current instance has either a &lt;see cref=&quot;P:System.Diagnostics.Activity.ParentId&quot; /&gt; or an &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">ID racine, ou <see langword="null" /> si l’instance actuelle a une <see cref="P:System.Diagnostics.Activity.ParentId" /> valeur ou <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary vsli:raw="Updates the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to set its &lt;see cref=&quot;P:System.Diagnostics.Activity.Duration&quot; /&gt; as the difference between &lt;see cref=&quot;P:System.Diagnostics.Activity.StartTimeUtc&quot; /&gt; and the specified stop time.">Met à jour le <see cref="T:System.Diagnostics.Activity" /> pour définir son <see cref="P:System.Diagnostics.Activity.Duration" /> comme la différence entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> et l’heure d’arrêt spécifiée.</summary>
      <param name="endTimeUtc" vsli:raw="The UTC stop time.">Heure UTC de l’arrêt.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary vsli:raw="Sets the ID format on this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; before it is started.">Définit le format d’ID sur ce <see cref="T:System.Diagnostics.Activity" /> avant qu’il ne soit démarré.</summary>
      <param name="format" vsli:raw="One of the enumeration values that specifies the format of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt; property.">Une des valeurs d'énumération qui spécifie le format de la propriété <see cref="P:System.Diagnostics.Activity.Id" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary vsli:raw="Sets the parent ID using the W3C convention of a TraceId and a SpanId.">Définit l’ID parent à l’aide de la convention W3C d’un TraceId et d’un SpanId.</summary>
      <param name="traceId" vsli:raw="The parent activity's TraceId.">TraceId de l’activité parente.</param>
      <param name="spanId" vsli:raw="The parent activity's SpanId.">SpanId de l’activité parente.</param>
      <param name="activityTraceFlags" vsli:raw="One of the enumeration values that specifies flags defined by the W3C standard that are associated with an activity.">Une des valeurs d’énumération qui spécifie des indicateurs définis par le standard W3C qui sont associés à une activité.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary vsli:raw="Updates this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; with an ID of &lt;paramref name=&quot;parentId&quot; /&gt; caused this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Met à jour ce <see cref="T:System.Diagnostics.Activity" /> pour indiquer que le <see cref="T:System.Diagnostics.Activity" /> avec un ID <paramref name="parentId" /> a provoqué ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="parentId" vsli:raw="The ID of the parent operation.">ID de l’opération parente.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary vsli:raw="Sets the start time of this &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;.">Définit l’heure de début de ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="startTimeUtc" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; start time in UTC.">Heure UTC du début de <see cref="T:System.Diagnostics.Activity" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary vsli:raw="Gets the SPAN part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Obtient la partie SPAN du <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns vsli:raw="The ID for the SPAN part of &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;, if the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; has the W3C format; otherwise, a zero &lt;see langword=&quot;SpanId&quot; /&gt;.">ID de la partie d’étendue de <see cref="P:System.Diagnostics.Activity.Id" />, si le <see cref="T:System.Diagnostics.Activity" /> a le format W3C; sinon, zéro <see langword="SpanId" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary vsli:raw="Starts the activity.">Démarre l’activité.</summary>
      <returns vsli:raw="&lt;see langword=&quot;this&quot; /&gt; for convenient chaining.">
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary vsli:raw="Gets the time when the operation started.">Obtient l’heure à laquelle l’opération a démarré.</summary>
      <returns vsli:raw="The UTC time that the operation started.">Heure UTC à laquelle l’opération a démarré.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary vsli:raw="Stops the activity.">Arrête l’activité.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary vsli:raw="Gets a collection of key/value pairs that represent information that will be logged along with the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to the logging system.">Obtient une collection de paires clé-valeur qui représentent les informations à enregistrer avec le <see cref="T:System.Diagnostics.Activity" /> dans le système de journalisation.</summary>
      <returns vsli:raw="Information that will be logged along with the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to the logging system.">Énumération de paires clé-valeur de chaîne de chaîne.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary vsli:raw="Gets the TraceId part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;.">Obtient la partie TraceId du <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns vsli:raw="The ID for the TraceId part of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt;, if the ID has the W3C format; otherwise, a zero TraceId.">ID de la partie TraceID du <see cref="P:System.Diagnostics.Activity.Id" />, si l’ID a le format W3C; sinon, zéro TraceID.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary vsli:raw="Gets or sets the W3C &lt;see langword=&quot;tracestate&quot; /&gt; header.">Obtient l’en-tête <see langword="tracestate" /> W3C.</summary>
      <returns vsli:raw="The W3C &lt;see langword=&quot;tracestate&quot; /&gt; header.">En- <see langword="tracestate" /> tête du W3C.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary vsli:raw="Specifies the format of the &lt;see cref=&quot;P:System.Diagnostics.Activity.Id&quot; /&gt; property.">Spécifie le format de la propriété <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary vsli:raw="The hierarchical format.">Format hiérarchique.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary vsli:raw="An unknown format.">Format inconnu.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary vsli:raw="The W3C format.">Format W3C.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary vsli:raw="Represents a &lt;see cref=&quot;P:System.Diagnostics.Activity.SpanId&quot; /&gt; formatted based on a W3C standard.">Représente un <see cref="P:System.Diagnostics.Activity.SpanId" /> mis en forme selon une norme W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the 8 bytes of the current &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; to a specified span.">Copie les 8 octets du <see cref="T:System.Diagnostics.ActivitySpanId" /> actuel vers une plage spécifiée.</summary>
      <param name="destination" vsli:raw="The span to which the 8 bytes of the SpanID are to be copied.">Plage dans laquelle les 8 octets du SpanID doivent être copiés.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of eight bytes.">Crée une valeur <see cref="T:System.Diagnostics.ActivitySpanId" /> à partir d’une plage en lecture seule de 8 octets.</summary>
      <param name="idData" vsli:raw="A read-only span of eight bytes.">Plage en lecture seule de 8 octets.</param>
      <returns vsli:raw="The new span ID.">Nouvel ID de plage.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain eight bytes.">
        <paramref name="idData" /> ne contient pas huit octets.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of 16 hexadecimal characters.">Crée une valeur <see cref="T:System.Diagnostics.ActivitySpanId" /> à partir d’une plage en lecture seule de 16 caractères hexadécimaux.</summary>
      <param name="idData" vsli:raw="A span that contains 16 hexadecimal characters.">Plage qui contient 16 caractères hexadécimaux.</param>
      <returns vsli:raw="The new span ID.">Nouvel ID de plage.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain 16 hexadecimal characters.&#xA;&#xA;-or-&#xA;          &#xA;The characters in &lt;paramref name=&quot;idData&quot; /&gt; are not all lower-case hexadecimal characters or all zeros.">
        <paramref name="idData" /> ne contient pas 16 caractères hexadécimaux.

ou - 
Les caractères dans <paramref name="idData" /> ne sont pas tous des caractères hexadécimaux minuscules ou tous des zéros.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; value from a read-only span of UTF8-encoded bytes.">Crée une valeur <see cref="T:System.Diagnostics.ActivitySpanId" /> à partir d’une plage en lecture seule d’octets encodés en UTF-8.</summary>
      <param name="idData" vsli:raw="A read-only span of UTF8-encoded bytes.">Plage en lecture seule d’octets encodés en UTF-8.</param>
      <returns vsli:raw="The new span ID.">Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; based on a random number (that is very likely to be unique).">Crée un <see cref="T:System.Diagnostics.ActivitySpanId" /> basé sur un nombre aléatoire (qui est très probablement unique).</summary>
      <returns vsli:raw="The new span ID.">Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determines whether this instance and the specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instance have the same value.">Détermine si cette instance et l’instance <see cref="T:System.Diagnostics.ActivitySpanId" /> spécifiée ont la même valeur.</summary>
      <param name="spanId" vsli:raw="The instance to compare.">Instance à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;spanId&quot; /&gt; has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="spanId" /> a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary vsli:raw="the current instance and a specified object, which also must be an &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instance, have the same value.">l’instance et un objet spécifié, qui doit aussi être une instance <see cref="T:System.Diagnostics.ActivitySpanId" />, ont la même valeur.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; and has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> est une instance de <see cref="T:System.Diagnostics.ActivitySpanId" /> et a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary vsli:raw="Returns the hash code of the SpanId.">Retourne le code de hachage du SpanId.</summary>
      <returns vsli:raw="The hash code of the SpanId.">Code de hachage du SpanId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instances have the same value.">Détermine si deux instances <see cref="T:System.Diagnostics.ActivitySpanId" /> spécifiées ont la même valeur.</summary>
      <param name="spanId1" vsli:raw="The first instance to compare.">Première instance à comparer.</param>
      <param name="spandId2" vsli:raw="The second instance to compare.">Deuxième instance à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the SpanId of &lt;paramref name=&quot;spanId1&quot; /&gt; is the same as the SpanId of &lt;paramref name=&quot;spandId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le SpanId de <paramref name="spanId1" /> est le même que le SpanId de <paramref name="spandId2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary vsli:raw="Determine whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivitySpanId&quot; /&gt; instances have unequal values.">Détermine si deux instances <see cref="T:System.Diagnostics.ActivitySpanId" /> spécifiées ont des valeurs inégales.</summary>
      <param name="spanId1" vsli:raw="The first instance to compare.">Première instance à comparer.</param>
      <param name="spandId2" vsli:raw="The second instance to compare.">Deuxième instance à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the SpanId of &lt;paramref name=&quot;spanId1&quot; /&gt; is different from the SpanId of &lt;paramref name=&quot;spandId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le SpanId de <paramref name="spanId1" /> est différent du SpanId de <paramref name="spandId2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary vsli:raw="Returns a 16-character hexadecimal string that represents this span ID.">Retourne une chaîne de 16 caractères hexadécimaux qui représente cet ID de plage.</summary>
      <returns vsli:raw="The 16-character hexadecimal string representation of this span ID.">Représentation sous forme de chaîne de 16 caractères hexadécimaux de cet ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary vsli:raw="Returns a 16-character hexadecimal string that represents this span ID.">Retourne une chaîne de 16 caractères hexadécimaux qui représente cet ID de plage.</summary>
      <returns vsli:raw="The 16-character hexadecimal string representation of this span ID.">Représentation sous forme de chaîne de 16 caractères hexadécimaux de cet ID de plage.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary vsli:raw="Specifies flags defined by the W3C standard that are associated with an activity.">Spécifie des indicateurs définis par le standard W3C qui sont associés à une activité.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary vsli:raw="The activity has not been marked.">L’activité n’a pas été marquée.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary vsli:raw="The activity (or more likely its parents) has been marked as useful to record.">L’activité (ou plus probablement ses parents) a été marquée comme utile pour l’enregistrement.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary vsli:raw="Represents a &lt;see cref=&quot;P:System.Diagnostics.Activity.TraceId&quot; /&gt; whose format is based on a W3C standard.">Représente un <see cref="P:System.Diagnostics.Activity.TraceId" /> dont le format est basé sur un standard W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary vsli:raw="Copies the 16 bytes of the current &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; to a specified span.">Copie les 16 octets du <see cref="T:System.Diagnostics.ActivityTraceId" /> actuel dans une plage spécifiée.</summary>
      <param name="destination" vsli:raw="The span to which the 16 bytes of the trace ID are to be copied.">La plage dans laquelle les 16 octets de l’ID de trace doivent être copiés.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of 16 bytes.">Crée une valeur <see cref="T:System.Diagnostics.ActivityTraceId" /> à partir d’une plage en lecture seule de 16 octets.</summary>
      <param name="idData" vsli:raw="A read-only span of 16 bytes.">Plage en lecture seule de 16 octets.</param>
      <returns vsli:raw="The new trace ID.">Nouvel ID de trace.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain eight bytes.">
        <paramref name="idData" /> ne contient pas huit octets.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of 32 hexadecimal characters.">Crée une valeur <see cref="T:System.Diagnostics.ActivityTraceId" /> à partir d’une plage en lecture seule de 32 caractères hexadécimaux.</summary>
      <param name="idData" vsli:raw="A span that contains 32 hexadecimal characters.">Plage qui contient 32 caractères hexadécimaux.</param>
      <returns vsli:raw="The new trace ID.">Nouvel ID de trace.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;idData&quot; /&gt; does not contain 16 hexadecimal characters.&#xA;&#xA;-or-&#xA;&#xA;The characters in &lt;paramref name=&quot;idData&quot; /&gt; are not all lower-case hexadecimal characters or all zeros.">
        <paramref name="idData" /> ne contient pas 16 caractères hexadécimaux.

ou -

Les caractères dans <paramref name="idData" /> ne sont pas tous des caractères hexadécimaux minuscules ou tous des zéros.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; value from a read-only span of UTF8-encoded bytes.">Crée une valeur <see cref="T:System.Diagnostics.ActivityTraceId" /> à partir d’une plage en lecture seule d’octets encodés en UTF-8.</summary>
      <param name="idData" vsli:raw="A read-only span of UTF8-encoded bytes.">Plage en lecture seule d’octets encodés en UTF-8.</param>
      <returns vsli:raw="The new trace ID.">Nouvel ID de trace.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; based on a random number (that is very likely to be unique).">Crée un <see cref="T:System.Diagnostics.ActivitySpanId" /> basé sur un nombre aléatoire (qui est très probablement unique).</summary>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt;.">Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether the current instance and a specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; are equal.">Détermine si l’instance actuelle et un <see cref="T:System.Diagnostics.ActivityTraceId" /> spécifié sont égaux.</summary>
      <param name="traceId" vsli:raw="The instance to compare.">Instance à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;traceId&quot; /&gt; has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="traceId" /> a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance and a specified object, which must also be an &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instance, have the same value.">Détermine si cette instance et un objet spécifié, qui doit aussi être une instance <see cref="T:System.Diagnostics.ActivityTraceId" />, ont la même valeur.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; and has the same hex value as the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> est une instance de <see cref="T:System.Diagnostics.ActivityTraceId" /> et a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary vsli:raw="Returns the hash code of the TraceId.">Retourne le code de hachage du TraceId.</summary>
      <returns vsli:raw="The hash code of the TraceId.">Code de hachage du TraceId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instances have the same value.">Détermine si deux instances <see cref="T:System.Diagnostics.ActivityTraceId" /> spécifiées ont la même valeur.</summary>
      <param name="traceId1" vsli:raw="The first instance to compare.">Première instance à comparer.</param>
      <param name="traceId2" vsli:raw="The second instance to compare.">Deuxième instance à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the TraceId of &lt;paramref name=&quot;traceId1&quot; /&gt; is the same as the TraceId of &lt;paramref name=&quot;traceId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le TraceId de <paramref name="traceId1" /> est le même que le TraceId de <paramref name="traceId2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Diagnostics.ActivityTraceId&quot; /&gt; instances have the same value.">Détermine si deux instances <see cref="T:System.Diagnostics.ActivityTraceId" /> spécifiées ont la même valeur.</summary>
      <param name="traceId1" vsli:raw="The first instance to compare.">Première instance à comparer.</param>
      <param name="traceId2" vsli:raw="The second instance to compare.">Deuxième instance à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the TraceId of &lt;paramref name=&quot;traceId1&quot; /&gt; is different from the TraceId of &lt;paramref name=&quot;traceId2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le TraceId de <paramref name="traceId1" /> est différent du TraceId de <paramref name="traceId2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary vsli:raw="Returns a 32-character hexadecimal string that represents this span ID.">Retourne une chaîne de 16 caractères hexadécimaux qui représente cet ID de plage.</summary>
      <returns vsli:raw="The 32-character hexadecimal string representation of this trace ID.">Représentation sous forme de chaîne de 32 caractères hexadécimaux de cet ID de trace.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary vsli:raw="Returns a 32-character hexadecimal string that represents this trace ID.">Retourne une chaîne de 32 caractères hexadécimaux qui représente cet ID de trace.</summary>
      <returns vsli:raw="The 32-character hexadecimal string representation of this trace ID.">Représentation sous forme de chaîne de 32 caractères hexadécimaux de cet ID de trace.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary vsli:raw="Provides an implementation of the abstract &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; class that represents a named place to which a source sends its information (events).">Fournit une implémentation de la classe <see cref="T:System.Diagnostics.DiagnosticSource" /> abstraite qui représente un emplacement nommé auquel une source envoie ses informations (événements).</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Crée un <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <param name="name" vsli:raw="The name of this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Nom de cet objet <see cref="T:System.Diagnostics.DiagnosticListener" />.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary vsli:raw="Gets the collection of listeners for this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Obtient la collection d’écouteurs de ce <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary vsli:raw="Disposes the NotificationListeners.">Supprime les NotificationListeners.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary vsli:raw="Determines whether there are any registered subscribers.">Détermine s’il y a des abonnés inscrits.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are any registered subscribers, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> s’il y en a, <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary vsli:raw="Checks whether the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt; is enabled.">Vérifie si le <see cref="T:System.Diagnostics.DiagnosticListener" /> est activé.</summary>
      <param name="name" vsli:raw="The name of the event to check." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les notifications sont activées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary vsli:raw="Checks if any subscriber to the diagnostic events is interested in receiving events with this name. Subscribers indicate their interest using a delegate provided in &lt;see cref=&quot;Overload:System.Diagnostics.DiagnosticListener.Subscribe&quot; /&gt;.">Vérifie si le DiagnosticListener est activé.</summary>
      <param name="name" vsli:raw="The name of the event to check." />
      <param name="arg1" vsli:raw="The object that represents a context." />
      <param name="arg2" vsli:raw="The object that represents a context." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> s’il est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary vsli:raw="Gets the name of this &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Obtient le nom de cet objet <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticListener&quot; /&gt;.">Nom du <see cref="T:System.Diagnostics.DiagnosticListener" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Invokes the OnActivityExport method of all the subscribers.">Appelle la méthode OnActivityExport de tous les abonnés.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">Activité affectée par un événement externe.</param>
      <param name="payload" vsli:raw="An object that represents the outgoing request.">Objet qui représente la requête sortante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Invokes the OnActivityImport method of all the subscribers.">Appelle la méthode OnActivityImport de tous les abonnés.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">Activité affectée par un événement externe.</param>
      <param name="payload" vsli:raw="An object that represents the incoming request.">Objet qui représente la requête entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary vsli:raw="Adds a subscriber.">Ajoute un abonné.</summary>
      <param name="observer" vsli:raw="A subscriber.">Abonné.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary vsli:raw="Adds a subscriber, and optionally filters events based on their name and up to two context objects.">Ajoute un abonné et filtre éventuellement les événements en fonction de leur nom et de jusqu’à deux objets de contexte.</summary>
      <param name="observer" vsli:raw="A subscriber.">Abonné.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name and up to two context objects (which can be &lt;see langword=&quot;null&quot; /&gt;), or &lt;see langword=&quot;null&quot; /&gt; to if an event filter is not desirable.">Délégué qui filtre les événements en fonction de leur nom et de jusqu’à deux objets de contexte (pouvant être <see langword="null" />), ou <see langword="null" /> si un filtre d’événements n’est pas souhaitable.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary vsli:raw="Adds a subscriber, optionally filters events based on their name and up to two context objects, and specifies methods to call when providers import or export activites from outside the process.">Ajoute un abonné, filtre éventuellement les événements en fonction de leur nom et de jusqu’à deux objets de contexte, et spécifie les méthodes à appeler quand les fournisseurs importent ou exportent des activités depuis en dehors du processus.</summary>
      <param name="observer" vsli:raw="A subscriber.">Abonné.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name and up to two context objects (which can be &lt;see langword=&quot;null&quot; /&gt;), or &lt;see langword=&quot;null&quot; /&gt; if an event filter is not desirable.">Délégué qui filtre les événements en fonction de leur nom et de jusqu’à deux objets de contexte (pouvant être <see langword="null" />), ou <see langword="null" /> si un filtre d’événements n’est pas souhaitable.</param>
      <param name="onActivityImport" vsli:raw="An action delegate that receives the activity affected by an external event and an object that represents the incoming request.">Délégué d’action qui reçoit l’activité affectée par un événement externe et un objet qui représente la requête entrante.</param>
      <param name="onActivityExport" vsli:raw="An action delegate that receives the activity affected by an external event and an object that represents the outgoing request.">Délégué d’action qui reçoit l’activité affectée par un événement externe et un objet qui représente la requête sortante.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary vsli:raw="Adds a subscriber, and optionally filters events based on their name.">Ajoute un abonné et filtre éventuellement les événements en fonction de leur nom.</summary>
      <param name="observer" vsli:raw="A subscriber.">Abonné.</param>
      <param name="isEnabled" vsli:raw="A delegate that filters events based on their name (&lt;see cref=&quot;T:System.String&quot; /&gt;). The delegate should return &lt;see langword=&quot;true&quot; /&gt; if the event is enabled.">Délégué qui filtre les événements en fonction de leur nom (<see cref="T:System.String" />). Le délégué doit retourner <see langword="true" /> si l’événement est activé.</param>
      <returns vsli:raw="A reference to an interface that allows the listener to stop receiving notifications before the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; has finished sending them.">Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary vsli:raw="Returns a string with the name of this DiagnosticListener.">Retourne une chaîne avec le nom de ce DiagnosticListener.</summary>
      <returns vsli:raw="The name of this DiagnosticListener.">Nom de ce DiagnosticListener.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary vsli:raw="Logs a notification.">Journalise une notification.</summary>
      <param name="name" vsli:raw="The name of the event to log.">Nom de l’événement à journaliser.</param>
      <param name="value" vsli:raw="An object that represents the payload for the event.">Objet qui représente la charge utile pour l’événement.</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary vsli:raw="An abstract class that allows code to be instrumented for production-time logging of rich data payloads for consumption within the process that was instrumented.">Classe abstraite qui permet d’instrumenter le code pour la journalisation en production des charges enrichies à consommer dans le processus qui a été instrumenté.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Diagnostics.DiagnosticSource&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Diagnostics.DiagnosticSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary vsli:raw="Verifies if the notification event is enabled.">Vérifie si l’événement de notification est activé.</summary>
      <param name="name" vsli:raw="The name of the event being written.">Nom de l’événement écrit.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the notification event is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si l’événement de notification est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary vsli:raw="Verifies it the notification event is enabled.">Vérifie si l’événement de notification est activé.</summary>
      <param name="name" vsli:raw="The name of the event being written.">Nom de l’événement écrit.</param>
      <param name="arg1" vsli:raw="An object that represents the additional context for IsEnabled. Consumers should expect to receive &lt;see langword=&quot;null&quot; /&gt; which may indicate that producer called pure IsEnabled(string) to check if consumer wants to get notifications for such events at all. Based on that, producer may call IsEnabled(string, object, object) again with non-&lt;see langword=&quot;null&quot; /&gt; context.">Objet représentant le contexte supplémentaire pour IsEnabled. Les consommateurs doivent s’attendre à recevoir une valeur <see langword="null" />, qui peut indiquer que le producteur a appelé un IsEnabled(string) pur afin de vérifier si le consommateur souhaite obtenir des notifications des événements de ce type. En fonction de cela, le producteur peut rappeler IsEnabled (string, object, object) avec un contexte non <see langword="null" />.</param>
      <param name="arg2" vsli:raw="Optional. An object that represents the additional context for IsEnabled. &lt;see langword=&quot;null&quot; /&gt; by default. Consumers should expect to receive &lt;see langword=&quot;null&quot; /&gt; which may indicate that producer called pure IsEnabled(string) or producer passed all necessary context in &lt;paramref name=&quot;arg1&quot; /&gt;.">Optionnel. Objet représentant le contexte supplémentaire pour IsEnabled. <see langword="null" /> par défaut. Les consommateurs doivent s’attendre à recevoir une valeur <see langword="null" />, qui peut indiquer que le producteur a appelé un IsEnabled(string) pur ou que le producteur a passé tout le contexte nécessaire dans <paramref name="arg1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the notification event is enabled, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si l’événement de notification est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Transfers state from an activity to some event or operation, such as an outgoing HTTP request, that will occur outside the process.">Transfère l’état d’une activité à un événement ou une opération, comme une requête HTTP sortante, qui se produit en dehors du processus.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">Activité affectée par un événement externe.</param>
      <param name="payload" vsli:raw="An object that represents the outgoing request.">Objet qui représente la requête sortante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Transfers state to an activity from some event or operation, such as an incoming request, that occurred outside the process.">Transfère l’état à une activité depuis un événement ou une opération, comme une requête HTTP entrante, qui s’est produite en dehors du processus.</summary>
      <param name="activity" vsli:raw="The activity affected by an external event.">Activité affectée par un événement externe.</param>
      <param name="payload" vsli:raw="A payload that represents the incoming request.">Charge utile qui représente la requête entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Starts an &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; and writes a start event.">Démarre un <see cref="T:System.Diagnostics.Activity" /> et écrit un événement de démarrage.</summary>
      <param name="activity" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; to be started.">Le <see cref="T:System.Diagnostics.Activity" /> à démarrer.</param>
      <param name="args" vsli:raw="An object that represent the value being passed as a payload for the event.">Objet qui représente la valeur passée comme charge utile pour l’événement.</param>
      <returns vsli:raw="The started activity for convenient chaining.">Activité démarrée pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary vsli:raw="Stops the given &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt;, maintains the global &lt;see cref=&quot;P:System.Diagnostics.Activity.Current&quot; /&gt; activity, and notifies consumers that the &lt;see cref=&quot;T:System.Diagnostics.Activity&quot; /&gt; was stopped.">Arrête l’activité <see cref="T:System.Diagnostics.Activity" />, continue l’activité <see cref="P:System.Diagnostics.Activity.Current" /> globale et notifie les consommateurs que l’activité <see cref="T:System.Diagnostics.Activity" /> a été arrêtée.</summary>
      <param name="activity" vsli:raw="The activity to be stopped.">Activité à arrêter.</param>
      <param name="args" vsli:raw="An object that represents the value passed as a payload for the event.">Objet qui représente la valeur passée comme charge utile pour l’événement.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary vsli:raw="Provides a generic way of logging complex payloads.">Fournit un moyen générique pour journaliser les charges utiles complexes.</summary>
      <param name="name" vsli:raw="The name of the event being written.">Nom de l’événement écrit.</param>
      <param name="value" vsli:raw="An object that represents the value being passed as a payload for the event. This is often an anonymous type which contains several sub-values.">Objet qui représente la valeur passée comme charge utile pour l’événement. C’est souvent un type anonyme qui contient plusieurs sous-valeurs.</param>
    </member>
  </members>
</doc>