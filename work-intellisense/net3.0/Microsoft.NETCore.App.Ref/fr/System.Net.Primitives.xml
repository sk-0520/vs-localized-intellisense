<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemes">
      <summary vsli:raw="Specifies protocols for authentication.">Spécifie les protocoles pour l'authentification.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Anonymous">
      <summary vsli:raw="Specifies anonymous authentication.">Spécifie l'authentification anonyme.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Basic">
      <summary vsli:raw="Specifies basic authentication.">Spécifie l'authentification de base.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Digest">
      <summary vsli:raw="Specifies digest authentication.">Spécifie l’authentification Digest.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <summary vsli:raw="Specifies Windows authentication.">Spécifie l'authentification Windows.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Negotiate">
      <summary vsli:raw="Negotiates with the client to determine the authentication scheme. If both client and server support Kerberos, it is used; otherwise, NTLM is used.">Négocie avec le client afin de déterminer le schéma d’authentification. Si le client et le serveur prennent tous les deux en charge Kerberos, ce protocole est utilisé ; sinon, NTLM est utilisé.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.None">
      <summary vsli:raw="No authentication is allowed. A client requesting an &lt;see cref=&quot;T:System.Net.HttpListener&quot; /&gt; object with this flag set will always receive a 403 Forbidden status. Use this flag when a resource should never be served to a client.">Aucune authentification n’est autorisée. Un client qui demande un objet <see cref="T:System.Net.HttpListener" /> avec cet indicateur défini reçoit toujours un état 403 Interdit. Utilisez cet indicateur quand une ressource ne doit jamais être fournie à un client.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Ntlm">
      <summary vsli:raw="Specifies NTLM authentication.">Spécifie l'authentification NTLM.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCacheLevel">
      <summary vsli:raw="Specifies caching behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; and its derived classes.">Spécifie le comportement de mise en cache pour les ressources obtenues à l'aide de <see cref="T:System.Net.WebRequest" /> et ses classes dérivées.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.BypassCache">
      <summary vsli:raw="Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.">Satisfait une demande en utilisant le serveur. Aucune entrée n'est prise à partir des caches, ajoutée aux caches, ni supprimée des caches entre le client et serveur. Il s'agit du comportement de cache par défaut spécifié dans le fichier de configuration machine fourni avec le .NET Framework.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
      <summary vsli:raw="Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.">Satisfait une demande de ressource à partir du cache si la ressource est disponible ; sinon, envoie une demande de ressource au serveur. Si l'élément demandé est disponible dans un cache quelconque entre le client et le serveur, la demande peut être satisfaite par le cache intermédiaire.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheOnly">
      <summary vsli:raw="Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; exception is thrown if the item is not in the client cache.">Satisfait une demande en utilisant la ressource mise en cache localement ; n'envoie pas de demande pour un élément qui n'est pas dans le cache. Lorsque ce niveau de stratégie de cache est spécifié, une exception <see cref="T:System.Net.WebException" /> est levée si l'élément n'est pas dans le cache client.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Default">
      <summary vsli:raw="Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.">Satisfait une demande de ressource en utilisant la copie mise en cache de la ressource ou en envoyant une demande de ressource au serveur. L'action prise est déterminée par la stratégie de cache actuelle et l'âge du contenu du cache. C'est le niveau de cache qui doit être utilisé par la plupart des applications.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
      <summary vsli:raw="Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive.">Ne satisfait jamais une demande en utilisant des ressources du cache et ne met pas les ressources en cache. Si la ressource est présente dans le cache local, elle est supprimée. Ce niveau de stratégie indique aux caches intermédiaires qu'ils doivent supprimer la ressource. Dans le protocole de mise en cache HTTP, cette opération est effectuée à l'aide de la directive de contrôle de cache <see langword="no-cache" />.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Reload">
      <summary vsli:raw="Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive and the no-cache &lt;see langword=&quot;Pragma&quot; /&gt; header.">Satisfait une demande en utilisant le serveur. La réponse peut être enregistrée dans le cache. Dans le protocole de mise en cache HTTP, cette opération est effectuée à l'aide de la directive de contrôle de cache <see langword="no-cache" /> et de l'en-tête <see langword="Pragma" /> no-cache.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Revalidate">
      <summary vsli:raw="Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.">Satisfait une demande en utilisant la copie mise en cache de la ressource si l'horodatage est le même que celui de la ressource sur le serveur ; sinon, la ressource est téléchargée à partir du serveur, présentée à l'appelant et stockée dans le cache.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCachePolicy">
      <summary vsli:raw="Defines an application's caching requirements for resources obtained by using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">Définit les exigences de mise en cache d'une application pour des ressources obtenues à l'aide d'objets <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.RequestCachePolicy" />.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor(System.Net.Cache.RequestCacheLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class. using the specified cache policy.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.RequestCachePolicy" />. à l'aide de la stratégie de cache spécifiée.</summary>
      <param name="level" vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.Cache.RequestCacheLevel" /> qui spécifie le comportement de cache pour les ressources obtenues à l'aide d'objets <see cref="T:System.Net.WebRequest" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="level is not a valid &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt;.value.">le niveau n'est pas une valeur <see cref="T:System.Net.Cache.RequestCacheLevel" /> valide.</exception>
    </member>
    <member name="P:System.Net.Cache.RequestCachePolicy.Level">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value specified when this instance was constructed.">Obtient la valeur de <see cref="T:System.Net.Cache.RequestCacheLevel" /> spécifiée lors de la construction de cette instance.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">Valeur de <see cref="T:System.Net.Cache.RequestCacheLevel" /> qui spécifie le comportement de cache pour les ressources obtenues à l'aide d'objets <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.ToString">
      <summary vsli:raw="Returns a string representation of this instance.">Retourne une représentation sous forme de chaîne de cette instance.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Net.Cache.RequestCachePolicy.Level&quot; /&gt; for this instance.">
        <see cref="T:System.String" /> contenant le <see cref="P:System.Net.Cache.RequestCachePolicy.Level" /> pour cette instance.</returns>
    </member>
    <member name="T:System.Net.Cookie">
      <summary vsli:raw="Provides a set of properties and methods that are used to manage cookies. This class cannot be inherited.">Fournit un ensemble de propriétés et de méthodes qui permettent de gérer les cookies. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cookie" />.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cookie" /> avec les <see cref="P:System.Net.Cookie.Name" /> et <see cref="P:System.Net.Cookie.Value" /> spécifiés.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">Nom de <see cref="T:System.Net.Cookie" />. Les caractères suivants ne doivent pas être utilisés à l'intérieur de <paramref name="name" /> : signe égal, point-virgule, virgule, saut de ligne (\n), retour (\r), tabulation (\t) et espace blanc. Le symbole du dollar ("$") ne peut pas être le premier caractère.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">Valeur de <see cref="T:System.Net.Cookie" />. Les caractères suivants ne doivent pas être utilisés à l'intérieur de <paramref name="value" /> : point-virgule, virgule.</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.  
ou 
Le paramètre <paramref name="name" /> est de longueur nulle.  

ou - 
Le paramètre <paramref name="name" /> contient un caractère non valide.  

ou - 
Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.  


ou 
Le paramètre <paramref name="value" /> contient une chaîne non indiquée entre guillemets qui comprend un caractère non valide.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cookie" /> avec les <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" /> et <see cref="P:System.Net.Cookie.Path" /> spécifiés.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">Nom de <see cref="T:System.Net.Cookie" />. Les caractères suivants ne doivent pas être utilisés à l'intérieur de <paramref name="name" /> : signe égal, point-virgule, virgule, saut de ligne (\n), retour (\r), tabulation (\t) et espace blanc. Le symbole du dollar ("$") ne peut pas être le premier caractère.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">Valeur de <see cref="T:System.Net.Cookie" />. Les caractères suivants ne doivent pas être utilisés à l'intérieur de <paramref name="value" /> : point-virgule, virgule.</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">Sous-ensemble d'URI sur le serveur d'origine auquel ce <see cref="T:System.Net.Cookie" /> s'applique. La valeur par défaut est "/".</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.  
ou 
Le paramètre <paramref name="name" /> est de longueur nulle.  

ou - 
Le paramètre <paramref name="name" /> contient un caractère non valide.  

ou 
Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.  
ou 
Le paramètre <paramref name="value" /> contient une chaîne non indiquée entre guillemets qui comprend un caractère non valide.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cookie" /> avec les <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" />, <see cref="P:System.Net.Cookie.Path" /> et <see cref="P:System.Net.Cookie.Domain" /> spécifiés.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">Nom de <see cref="T:System.Net.Cookie" />. Les caractères suivants ne doivent pas être utilisés à l'intérieur de <paramref name="name" /> : signe égal, point-virgule, virgule, saut de ligne (\n), retour (\r), tabulation (\t) et espace blanc. Le symbole du dollar ("$") ne peut pas être le premier caractère.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">Valeur d'un objet <see cref="T:System.Net.Cookie" />. Les caractères suivants ne doivent pas être utilisés à l'intérieur de <paramref name="value" /> : point-virgule, virgule.</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">Sous-ensemble d'URI sur le serveur d'origine auquel ce <see cref="T:System.Net.Cookie" /> s'applique. La valeur par défaut est "/".</param>
      <param name="domain" vsli:raw="The optional internet domain for which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid. The default value is the host this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has been received from.">Domaine Internet facultatif pour lequel <see cref="T:System.Net.Cookie" /> est valide. La valeur par défaut correspond à l'hôte à partir duquel <see cref="T:System.Net.Cookie" /> a été reçu.</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.  

ou - 
Le paramètre <paramref name="name" /> est de longueur nulle.  

ou - 
Le paramètre <paramref name="name" /> contient un caractère non valide.  


ou 
Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.  
ou 
Le paramètre <paramref name="value" /> contient une chaîne non indiquée entre guillemets qui comprend un caractère non valide.</exception>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary vsli:raw="Gets or sets a comment that the server can add to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtient ou définit un commentaire que le serveur peut ajouter à <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="An optional comment to document intended usage for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Commentaire facultatif servant à documenter l'usage prévu de <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary vsli:raw="Gets or sets a URI comment that the server can provide with a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtient ou définit un commentaire URI que le serveur peut fournir avec un <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="An optional comment that represents the intended usage of the URI reference for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The value must conform to URI format.">Commentaire facultatif qui représente l'utilisation prévue de la référence URI de ce <see cref="T:System.Net.Cookie" />. La valeur doit être conforme au format URI.</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary vsli:raw="Gets or sets the discard flag set by the server.">Obtient ou définit l'indicateur de suppression défini par le serveur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is to discard the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; at the end of the current session; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le client doit supprimer <see cref="T:System.Net.Cookie" /> à la fin de la session en cours ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary vsli:raw="Gets or sets the URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">Obtient ou définit l'URI pour lequel <see cref="T:System.Net.Cookie" /> est valide.</summary>
      <returns vsli:raw="The URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">URI pour lequel <see cref="T:System.Net.Cookie" /> est valide.</returns>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.Equals(System.Object)&quot; /&gt; method.">Substitue la méthode <see cref="M:System.Object.Equals(System.Object)" />.</summary>
      <param name="comparand" vsli:raw="A reference to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Référence à un <see cref="T:System.Net.Cookie" />.</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is equal to &lt;paramref name=&quot;comparand&quot; /&gt;. Two &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances are equal if their &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Version&quot; /&gt; properties are equal. &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt; string comparisons are case-insensitive.">Retourne <see langword="true" /> si <see cref="T:System.Net.Cookie" /> est égal à <paramref name="comparand" />. Deux instances <see cref="T:System.Net.Cookie" /> sont égales si leurs propriétés <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" />, <see cref="P:System.Net.Cookie.Path" />, <see cref="P:System.Net.Cookie.Domain" /> et <see cref="P:System.Net.Cookie.Version" /> sont égales. Les comparaisons de chaînes <see cref="P:System.Net.Cookie.Name" /> et <see cref="P:System.Net.Cookie.Domain" /> ne respectent pas la casse.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary vsli:raw="Gets or sets the current state of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtient ou définit l'état actuel de <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has expired; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Cookie" /> a expiré ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary vsli:raw="Gets or sets the expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Obtient ou définit la date et l'heure d'expiration de <see cref="T:System.Net.Cookie" /> sous la forme <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; instance.">Date et heure d'expiration de <see cref="T:System.Net.Cookie" /> sous la forme d'une instance <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.GetHashCode&quot; /&gt; method.">Substitue la méthode <see cref="M:System.Object.GetHashCode" />.</summary>
      <returns vsli:raw="The 32-bit signed integer hash code for this instance.">Code de hachage entier signé 32 bits pour cette instance.</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary vsli:raw="Determines whether a page script or other active content can access this cookie.">Détermine si un script de page ou un autre contenu actif peut accéder à ce cookie.</summary>
      <returns vsli:raw="Boolean value that determines whether a page script or other active content can access this cookie.">Valeur booléenne qui détermine si un script de page ou un autre contenu actif peut accéder à ce cookie.</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary vsli:raw="Gets or sets the name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtient ou définit le nom de <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="The name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Nom de l'objet <see cref="T:System.Net.Cookie" />.</returns>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation is &lt;see langword=&quot;null&quot; /&gt; or the empty string  &#xA;  &#xA;-or-&#xA;  &#xA; The value specified for a set operation contained an illegal character. The following characters must not be used inside the &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; property: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">La valeur spécifiée pour une opération de définition est <see langword="null" /> ou la chaîne vide. 
ou 
La valeur spécifiée pour une opération de définition contient un caractère illégal. Les caractères suivants ne doivent pas être utilisés dans la propriété <see cref="P:System.Net.Cookie.Name" /> : signe égal, point-virgule, virgule, saut de ligne (\n), retour (\r), tabulation (\t) et espace blanc. Le symbole du dollar ("$") ne peut pas être le premier caractère.</exception>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary vsli:raw="Gets or sets the URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">Obtient ou définit les URI auxquels <see cref="T:System.Net.Cookie" /> s'applique.</summary>
      <returns vsli:raw="The URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">URI auxquels <see cref="T:System.Net.Cookie" /> s'applique.</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary vsli:raw="Gets or sets a list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">Obtient ou définit la liste de ports TCP auxquels <see cref="T:System.Net.Cookie" /> s'applique.</summary>
      <returns vsli:raw="The list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">Liste de ports TCP auxquels <see cref="T:System.Net.Cookie" /> s'applique.</returns>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation could not be parsed or is not enclosed in double quotes.">La valeur spécifiée pour une opération de définition ne peut pas être analysée ou elle n'est pas entourée de guillemets doubles.</exception>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary vsli:raw="Gets or sets the security level of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtient ou définit le niveau de sécurité d'un <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is only to return the cookie in subsequent requests if those requests use Secure Hypertext Transfer Protocol (HTTPS); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le client doit uniquement retourner le cookie dans les demandes suivantes si ces demandes utilisent le protocole HTTPS (Secure Hypertext Transfer Protocol) ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary vsli:raw="Gets the time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Obtient sous la forme <see cref="T:System.DateTime" /> l'heure d'émission du cookie.</summary>
      <returns vsli:raw="The time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Heure d'émission du cookie sous la forme <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method.">Substitue la méthode <see cref="M:System.Object.ToString" />.</summary>
      <returns vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object that is suitable for including in a HTTP Cookie: request header.">Retourne une représentation de chaîne de cet objet <see cref="T:System.Net.Cookie" /> permettant l'inclusion dans un en-tête de demande HTTP Cookie:.</returns>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtient ou définit <see cref="P:System.Net.Cookie.Value" /> pour <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="P:System.Net.Cookie.Value" /> pour <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary vsli:raw="Gets or sets the version of HTTP state maintenance to which the cookie conforms.">Obtient ou définit la version de la maintenance d'état HTTP à laquelle le cookie se conforme.</summary>
      <returns vsli:raw="The version of HTTP state maintenance to which the cookie conforms.">Version de la maintenance d'état HTTP à laquelle le cookie se conforme.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a version is not allowed.">La valeur spécifiée pour une version n'est pas autorisée.</exception>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary vsli:raw="Provides a collection container for instances of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">Fournit un conteneur de collection pour les instances de la classe <see cref="T:System.Net.Cookie" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Ajoute un <see cref="T:System.Net.Cookie" /> à un <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> à ajouter à <see cref="T:System.Net.CookieCollection" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the current instance.">Ajoute le contenu de <see cref="T:System.Net.CookieCollection" /> à l’instance active.</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added.">
        <see cref="T:System.Net.CookieCollection" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Clear">
      <summary vsli:raw="Removes all elements from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; object.">Supprime tous les éléments de l'objet <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Contains(System.Net.Cookie)">
      <summary vsli:raw="Determines whether the specified cookie is in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Détermine si le cookie spécifié se trouve dans <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="cookie" vsli:raw="The cookie to locate in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Cookie à localiser dans le <see cref="T:System.Net.CookieCollection" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified cookie is found in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le cookie spécifié est trouvé dans <see cref="T:System.Net.CookieCollection" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the specified array, starting at a particular index.">Copie les éléments d’un <see cref="T:System.Net.CookieCollection" /> dans le tableau spécifié, en commençant à un index particulier.</summary>
      <param name="array" vsli:raw="The target array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">Tableau cible dans lequel <see cref="T:System.Net.CookieCollection" /> sera copié.</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">Index de base zéro dans le tableau cible où la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> est multidimensionnel.  

ou - 
Le nombre d’éléments de ce <see cref="T:System.Net.CookieCollection" /> est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Les éléments de ce <see cref="T:System.Net.CookieCollection" /> ne peuvent pas être castés automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)">
      <summary vsli:raw="Copies the elements of this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array starting at the specified index of the target array.">Copie les éléments de ce <see cref="T:System.Net.CookieCollection" /> dans un tableau <see cref="T:System.Net.Cookie" /> en commençant à l’index spécifié du tableau cible.</summary>
      <param name="array" vsli:raw="The target &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">Tableau <see cref="T:System.Net.Cookie" /> cible dans lequel <see cref="T:System.Net.CookieCollection" /> sera copié.</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">Index de base zéro dans le tableau cible où la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> est multidimensionnel.  

ou - 
Le nombre d’éléments de ce <see cref="T:System.Net.CookieCollection" /> est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Les éléments de ce <see cref="T:System.Net.CookieCollection" /> ne peuvent pas être castés automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary vsli:raw="Gets the number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtient le nombre de cookies contenus dans <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns vsli:raw="The number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Nombre de cookies contenus dans une <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtient un énumérateur capable d’itérer au sein d’un <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">
        <see cref="T:System.Collections.IEnumerator" /> pour cette collection.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is read-only.">Obtient une valeur qui indique si <see cref="T:System.Net.CookieCollection" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this is a read-only &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> s'il s'agit d'un <see cref="T:System.Net.CookieCollection" /> en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe.">Obtient une valeur indiquant si l’accès à <see cref="T:System.Net.CookieCollection" /> est thread-safe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Net.CookieCollection" /> est thread-safe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtient le <see cref="T:System.Net.Cookie" /> avec un index spécifique à partir d’un <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">Index de base zéro du <see cref="T:System.Net.Cookie" /> à rechercher.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> avec un index spécifique de <see cref="T:System.Net.CookieCollection" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Net.CookieCollection.Count&quot; /&gt;.">
        <paramref name="index" /> est inférieur à 0, ou <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Net.CookieCollection.Count" />.</exception>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtient le <see cref="T:System.Net.Cookie" /> avec un index spécifique à partir d’un <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">Nom du <see cref="T:System.Net.Cookie" /> à rechercher.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> portant un nom spécifique de <see cref="T:System.Net.CookieCollection" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Remove(System.Net.Cookie)">
      <summary vsli:raw="Removes the specified cookie from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Supprime le cookie spécifié de <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="cookie" vsli:raw="The cookie to remove from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Cookie à supprimer de <see cref="T:System.Net.CookieCollection" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;cookie&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if item is not found in the original collection.">
        <see langword="true" /> si <paramref name="cookie" /> a été correctement supprimé de <see cref="T:System.Net.CookieCollection" /> ; sinon <see langword="false" />. Cette méthode retourne également <see langword="false" /> si item est introuvable dans la collection d’origine.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.SyncRoot">
      <summary vsli:raw="Gets an object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtient un objet pour synchroniser l’accès à <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns vsli:raw="An object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Un objet pour synchroniser l'accès à <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#Generic#IEnumerable{System#Net#Cookie}#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtient un énumérateur qui peut itérer au sein de la <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; for this collection.">
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> pour cette collection.</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary vsli:raw="Provides a container for a collection of &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; objects.">Fournit un conteneur pour une collection d'objets <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.CookieContainer" />.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with a specified value for the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the container can hold.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.CookieContainer" /> avec une valeur spécifiée pour le nombre d'instances <see cref="T:System.Net.Cookie" /> que le conteneur peut recevoir.</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">Nombre d'instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> peut recevoir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> est inférieur ou égal à zéro.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with specific properties.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.CookieContainer" /> avec des propriétés spécifiques.</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">Nombre d'instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> peut recevoir.</param>
      <param name="perDomainCapacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances per domain.">Nombre d'instances de <see cref="T:System.Net.Cookie" /> par domaine.</param>
      <param name="maxCookieSize" vsli:raw="The maximum size in bytes for any single &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; in a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">La taille maximale en octets pour un <see cref="T:System.Net.Cookie" /> unique dans <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.  &#xA;  &#xA; and  &#xA;  &#xA; &lt;paramref name=&quot;(perDomainCapacity&quot; /&gt; is less than or equal to zero or &lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is greater than &lt;paramref name=&quot;capacity)&quot; /&gt;.">
        <paramref name="perDomainCapacity" /> n'est pas égal à <see cref="F:System.Int32.MaxValue" />.  
et 
 <paramref name="(perDomainCapacity" /> est inférieur ou égal à zéro ou <paramref name="perDomainCapacity" /> est supérieur à <paramref name="capacity)" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;maxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="maxCookieSize" /> est inférieur ou égal à zéro.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;. This method uses the domain from the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to determine which domain collection to associate the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with.">Ajoute un <see cref="T:System.Net.Cookie" /> à un <see cref="T:System.Net.CookieContainer" />. Cette méthode utilise le domaine de <see cref="T:System.Net.Cookie" /> pour déterminer à quelle collection de domaine il convient d'associer <see cref="T:System.Net.Cookie" />.</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> à ajouter à <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or the empty string (&quot;&quot;).">Le domaine de <paramref name="cookie" /> est <see langword="null" /> ou la chaîne vide ("").</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; the domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" /> est supérieur à <paramref name="maxCookieSize" />.  

ou - 
le domaine du <paramref name="cookie" /> n'est pas un URI valide.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Ajoute le contenu de <see cref="T:System.Net.CookieCollection" /> à <see cref="T:System.Net.CookieContainer" />.</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> à ajouter à <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">Ajoute <see cref="T:System.Net.Cookie" /> au <see cref="T:System.Net.CookieContainer" /> d'un URI particulier.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">URI du <see cref="T:System.Net.Cookie" /> à ajouter à <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> à ajouter à <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> a la valeur <see langword="null" /> ou <paramref name="cookie" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" /> est supérieur à <paramref name="maxCookieSize" />.  
ou 
Le domaine de <paramref name="cookie" /> n'est pas un URI valide.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">Ajoute le contenu de <see cref="T:System.Net.CookieCollection" /> au <see cref="T:System.Net.CookieContainer" /> d'un URI particulier.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">URI du <see cref="T:System.Net.CookieCollection" /> à ajouter à <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> à ajouter à <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for one of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Le domaine de l'un des cookies dans <paramref name="cookies" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; contains an invalid domain.">L'un des cookies dans <paramref name="cookies" /> contient un domaine non valide.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">Obtient ou définit le nombre d’instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> peut contenir.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This is a hard limit and cannot be exceeded by adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Nombre d'instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> peut recevoir. Cette limite imposée ne peut pas être dépassée en ajoutant <see cref="T:System.Net.Cookie" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;Capacity&quot; /&gt; is less than or equal to zero or (value is less than &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; and &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="Capacity" /> est inférieur ou égal à zéro (la valeur est inférieure à la propriété <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> et la propriété <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> est différente du champ <see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds.">Obtient le nombre d'instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> contient actuellement.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds. This is the total of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances in all domains.">Nombre d'instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> contient actuellement. Cela correspond au total d'instances de <see cref="T:System.Net.Cookie" /> dans tous les domaines.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary vsli:raw="Represents the default maximum size, in bytes, of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">Représente la taille maximale par défaut, en octets, des instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> peut recevoir. Ce champ est constant.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">Représente le nombre maximal par défaut d'instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> peut recevoir. Ce champ est constant.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can reference per domain. This field is constant.">Représente le nombre maximal par défaut d'instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> peut référencer par domaine. Ce champ est constant.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary vsli:raw="Gets the HTTP cookie header that contains the HTTP cookies that represent the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">Obtient l'en-tête cookie HTTP qui contient les cookies HTTP représentant les instances de <see cref="T:System.Net.Cookie" /> qui sont associées à un URI spécifique.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">URI des instances de <see cref="T:System.Net.Cookie" /> désirées.</param>
      <returns vsli:raw="An HTTP cookie header, with strings representing &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by semicolons.">En-tête cookie HTTP, avec des chaînes représentant des instances de <see cref="T:System.Net.Cookie" /> séparées par des points-virgules.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> construit par défaut est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">Obtient un <see cref="T:System.Net.CookieCollection" /> qui contient les instances de <see cref="T:System.Net.Cookie" /> qui sont associées à un URI spécifique.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">URI des instances de <see cref="T:System.Net.Cookie" /> désirées.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">
        <see cref="T:System.Net.CookieCollection" /> qui contient les instances de <see cref="T:System.Net.Cookie" /> qui sont associées à un URI spécifique.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> construit par défaut est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary vsli:raw="Represents the maximum allowed length of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Représente la longueur maximale autorisée de <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="The maximum allowed length, in bytes, of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Longueur maximale autorisée, en octets, de <see cref="T:System.Net.Cookie" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;MaxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="MaxCookieSize" /> est inférieur ou égal à zéro.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold per domain.">Obtient ou définit le nombre d’instances de <see cref="T:System.Net.Cookie" /> que <see cref="T:System.Net.CookieContainer" /> peut contenir par domaine.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are allowed per domain.">Nombre d'instances de <see cref="T:System.Net.Cookie" /> qui sont autorisées par domaine.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;PerDomainCapacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;(PerDomainCapacity&quot; /&gt; is greater than the maximum allowable number of cookies instances, 300, and is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="PerDomainCapacity" /> est inférieur ou égal à zéro.  
ou 
 <paramref name="(PerDomainCapacity" /> est supérieur au nombre maximal d'instances de cookies autorisé, 300, et est différent du champ <see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary vsli:raw="Adds &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances for one or more cookies from an HTTP cookie header to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a specific URI.">Ajoute des instances de <see cref="T:System.Net.Cookie" /> pour un ou plusieurs cookies d'un en-tête cookie HTTP au <see cref="T:System.Net.CookieContainer" /> d'un URI spécifique.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">L'URI du <see cref="T:System.Net.CookieCollection" />.</param>
      <param name="cookieHeader" vsli:raw="The contents of an HTTP set-cookie header as returned by a HTTP server, with &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by commas.">Le contenu d'un en-tête HTTP set-cookie tel que retourné par un serveur HTTP, avec les instances de <see cref="T:System.Net.Cookie" /> séparés par des virgules.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;cookieHeader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> ou <paramref name="cookieHeader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while adding one of the cookies to the container.">L'un des cookies n'est pas valide.  

ou -  

 Une erreur s'est produite lors de l'ajout de l'un des cookies au conteneur.</exception>
    </member>
    <member name="T:System.Net.CookieException">
      <summary vsli:raw="The exception that is thrown when an error is made adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Exception levée si une erreur se produit quand un <see cref="T:System.Net.Cookie" /> est ajouté à un <see cref="T:System.Net.CookieContainer" />.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.CookieException" />.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class with specific values of &lt;paramref name=&quot;serializationInfo&quot; /&gt; and &lt;paramref name=&quot;streamingContext&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.CookieException" /> avec les valeurs spécifiques de <paramref name="serializationInfo" /> et <paramref name="streamingContext" />.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à utiliser.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> à utiliser.</param>
    </member>
    <member name="M:System.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">Remplit une instance <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser <see cref="T:System.Net.CookieException" />.</summary>
      <param name="serializationInfo" vsli:raw="The object that holds the serialized object data. The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">Objet qui contient les données sérialisées de l'objet. <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="streamingContext" vsli:raw="The contextual information about the source or destination. A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">Informations contextuelles sur la source ou la destination. <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la destination de cette sérialisation.</param>
    </member>
    <member name="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">Remplit une instance <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser <see cref="T:System.Net.CookieException" />.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à utiliser.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> à utiliser.</param>
    </member>
    <member name="T:System.Net.CredentialCache">
      <summary vsli:raw="Provides storage for multiple credentials.">Fournit le stockage pour plusieurs informations d'identification.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.CredentialCache" />.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.">Ajoute au cache d’informations d’identification une instance de <see cref="T:System.Net.NetworkCredential" /> à utiliser avec SMTP et l’associe à un ordinateur hôte, à un port et à un protocole d’authentification. Les informations d’identification ajoutées avec cette méthode peuvent uniquement être utilisées avec SMTP. Cette méthode ne fonctionne pas pour les requêtes HTTP ou FTP.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">
        <see cref="T:System.String" /> qui identifie l’ordinateur hôte.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui spécifie le port auquel se connecter sur <paramref name="host" /></param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt; using &lt;paramref name=&quot;cred&quot; /&gt;.">
        <see cref="T:System.String" /> qui identifie le schéma d'authentification utilisé lors de la connexion à <paramref name="host" /> à l'aide de <paramref name="cred" />.</param>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">
        <see cref="T:System.Net.NetworkCredential" /> à ajouter au cache des informations d’identification.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> est <see langword="null" />.  

ou - 
<paramref name="authType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.">
        <paramref name="authType" /> n’est pas une valeur admise.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.">Ajoute au cache d’informations d’identification une instance de <see cref="T:System.Net.NetworkCredential" /> à utiliser avec des protocoles autres que SMTP, et l’associe à un préfixe URI (Uniform Resource Identifier) ainsi qu’à un protocole d’authentification.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">
        <see cref="T:System.Uri" /> qui spécifie le préfixe URI des ressources auxquelles les informations d’identification autorisent l’accès.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">Schéma d'authentification utilisé par la ressource nommée dans <paramref name="uriPrefix" />.</param>
      <param name="cred" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">
        <see cref="T:System.Net.NetworkCredential" /> à ajouter au cache des informations d’identification.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="authType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The same credentials are added more than once.">Les mêmes informations d’identification sont ajoutées à plusieurs reprises.</exception>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultCredentials">
      <summary vsli:raw="Gets the system credentials of the application.">Obtient les informations d’identification système de l’application.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; that represents the system credentials of the application.">
        <see cref="T:System.Net.ICredentials" /> qui représente les informations d'identification système de l'application.</returns>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <summary vsli:raw="Gets the network credentials of the current security context.">Obtient les informations d’identification réseau du contexte de sécurité actuel.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that represents the network credentials of the current user or application.">
        <see cref="T:System.Net.NetworkCredential" /> qui représente les informations d'identification réseau de l'utilisateur ou de l'application en cours.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified host, port, and authentication protocol.">Retourne l’instance de <see cref="T:System.Net.NetworkCredential" /> associée à l’hôte, au port et au protocole d’authentification spécifiés.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">
        <see cref="T:System.String" /> qui identifie l’ordinateur hôte.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui spécifie le port auquel se connecter sur <paramref name="host" /></param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">
        <see cref="T:System.String" /> qui identifie le schéma d'authentification utilisé lors de la connexion à <paramref name="host" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" /> ou, s’il n’existe aucune information d’identification correspondante dans le cache, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="authType" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;host&quot; /&gt; is equal to the empty string (&quot;&quot;).">
        <paramref name="authType" /> n’est pas une valeur admise.  
ou 
 <paramref name="host" /> est égal à la chaîne vide ("").</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified Uniform Resource Identifier (URI) and authentication type.">Retourne l’instance de <see cref="T:System.Net.NetworkCredential" /> associée à l’URI (Uniform Resource Identifier) et au type d’authentification spécifiés.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">
        <see cref="T:System.Uri" /> qui spécifie le préfixe URI des ressources auxquelles les informations d’identification autorisent l’accès.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">Schéma d'authentification utilisé par la ressource nommée dans <paramref name="uriPrefix" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" /> ou, s’il n’existe aucune information d’identification correspondante dans le cache, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; or &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> ou <paramref name="authType" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; instance.">Retourne un énumérateur qui peut itérer au sein de l'instance <see cref="T:System.Net.CredentialCache" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Net.CredentialCache" />.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified host, port, and authentication protocol.">Supprime une instance de <see cref="T:System.Net.NetworkCredential" /> du cache si elle est associée à l’hôte, au port et au protocole d’authentification spécifiés.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">
        <see cref="T:System.String" /> qui identifie l’ordinateur hôte.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui spécifie le port auquel se connecter sur <paramref name="host" /></param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">
        <see cref="T:System.String" /> qui identifie le schéma d'authentification utilisé lors de la connexion à <paramref name="host" />.</param>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.">Supprime une instance de <see cref="T:System.Net.NetworkCredential" /> du cache si elle est associée au préfixe URI (Uniform Resource Identifier) et au protocole d’authentification spécifiés.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential is used for.">
        <see cref="T:System.Uri" /> qui spécifie le préfixe URI des ressources pour lesquelles les informations d’identification sont utilisées.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the host named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">Schéma d'authentification utilisé par l'hôte nommé dans <paramref name="uriPrefix" />.</param>
    </member>
    <member name="T:System.Net.DecompressionMethods">
      <summary vsli:raw="Represents the file compression and decompression encoding format to be used to compress the data received in response to an &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt;.">Représente le format de codage de compression et de décompression de fichiers à utiliser pour compresser les données reçues en réponse à <see cref="T:System.Net.HttpWebRequest" />.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.All">
      <summary vsli:raw="Use all compression-decompression algorithms.">Utilise tous les algorithmes de compression-décompression.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Brotli">
      <summary vsli:raw="Use the Brotli compression-decompression algorithm.">Utilise l’algorithme de compression-décompression Brotli.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Deflate">
      <summary vsli:raw="Use the deflate compression-decompression algorithm.">Utilise l'algorithme de compression-décompression deflate.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.GZip">
      <summary vsli:raw="Use the gZip compression-decompression algorithm.">Utilise l'algorithme de compression-décompression GZip.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.None">
      <summary vsli:raw="Do not use compression.">N'utilise pas de compression.</summary>
    </member>
    <member name="T:System.Net.DnsEndPoint">
      <summary vsli:raw="Represents a network endpoint as a host name or a string representation of an IP address and a port number.">Représente un point de terminaison réseau sous la forme d'un nom d'hôte ou d'une représentation sous forme de chaîne d'une adresse IP et d'un numéro de port.</summary>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address and a port number.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.DnsEndPoint" /> avec le nom d'hôte ou la représentation sous forme de chaîne d'une adresse IP et d'un numéro de port.</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">Nom d'hôte ou représentation sous forme de chaîne de l'adresse IP.</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">Numéro de port associé à l'adresse ou 0 pour spécifier tout port disponible. <paramref name="port" /> est dans l'ordre des hôtes.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.">Le paramètre <paramref name="host" /> contient une chaîne vide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="host" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> est inférieur à <see cref="F:System.Net.IPEndPoint.MinPort" />.  
ou 
 <paramref name="port" /> est supérieur à <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address, a port number, and an address family.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.DnsEndPoint" /> avec le nom d'hôte ou la représentation sous forme de chaîne d'une adresse IP, d'un numéro de port et d'une famille d'adresses.</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">Nom d'hôte ou représentation sous forme de chaîne de l'adresse IP.</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">Numéro de port associé à l'adresse ou 0 pour spécifier tout port disponible. <paramref name="port" /> est dans l'ordre des hôtes.</param>
      <param name="addressFamily" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;addressFamily&quot; /&gt; is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.Unknown&quot; /&gt;.">Le paramètre <paramref name="host" /> contient une chaîne vide.  

ou - 
<paramref name="addressFamily" /> construit par défaut est <see cref="F:System.Net.Sockets.AddressFamily.Unknown" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="host" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> est inférieur à <see cref="F:System.Net.IPEndPoint.MinPort" />.  

ou - 
<paramref name="port" /> est supérieur à <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="P:System.Net.DnsEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">Obtient la famille d'adresses IP (Internet Protocol).</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; objects.">Compare deux objets <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <param name="comparand" vsli:raw="A &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instance to compare to the current instance.">Instance de <see cref="T:System.Net.DnsEndPoint" /> à comparer à l'instance actuelle.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux instances <see cref="T:System.Net.DnsEndPoint" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Retourne une valeur de hachage pour <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns vsli:raw="An integer hash value for the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Valeur de hachage entier pour <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Host">
      <summary vsli:raw="Gets the host name or string representation of the Internet Protocol (IP) address of the host.">Obtient le nom d'hôte ou la représentation sous forme de chaîne de l'adresse IP de l'hôte.</summary>
      <returns vsli:raw="A host name or string representation of an IP address.">Nom d'hôte ou représentation sous forme de chaîne d'une adresse IP.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Port">
      <summary vsli:raw="Gets the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Obtient le numéro de port de <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns vsli:raw="An integer value in the range 0 to 0xffff indicating the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Valeur entière comprise entre 0 et 0xffff qui indique le numéro de port de <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.ToString">
      <summary vsli:raw="Returns the host name or string representation of the IP address and port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Retourne le nom d'hôte ou la représentation sous forme de chaîne de l'adresse IP et du numéro de port de <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns vsli:raw="A string containing the address family, host name or IP address string, and the port number of the specified &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Chaîne contenant la famille d'adresses, le nom d'hôte ou la chaîne d'adresse IP, ainsi que le numéro de port du <see cref="T:System.Net.DnsEndPoint" /> spécifié.</returns>
    </member>
    <member name="T:System.Net.EndPoint">
      <summary vsli:raw="Identifies a network address. This is an &lt;see langword=&quot;abstract&quot; /&gt; class.">Identifie une adresse réseau. Il s'agit d'une classe <see langword="abstract" />.</summary>
    </member>
    <member name="M:System.Net.EndPoint.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="P:System.Net.EndPoint.AddressFamily">
      <summary vsli:raw="Gets the address family to which the endpoint belongs.">Obtient la famille d'adresses à laquelle appartient ce point de terminaison.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property when the property is not overridden in a descendant class.">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si elle n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance from a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Crée une instance de <see cref="T:System.Net.EndPoint" /> à partir d'une instance de <see cref="T:System.Net.SocketAddress" />.</summary>
      <param name="socketAddress" vsli:raw="The socket address that serves as the endpoint for a connection.">Adresse de socket qui sert de point de terminaison pour une connexion.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance that is initialized from the specified &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Nouvelle instance de <see cref="T:System.Net.EndPoint" /> qui est initialisée à partir de l'instance de <see cref="T:System.Net.SocketAddress" /> spécifiée.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.EndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Sérialise les informations sur le point de terminaison dans une instance de <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance that contains the endpoint information.">Instance de <see cref="T:System.Net.SocketAddress" /> qui contient les informations sur le point de terminaison.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary vsli:raw="Contains the values of status codes defined for HTTP defined in RFC 2616 for HTTP 1.1.">Contient les valeurs des codes d'état définis pour HTTP.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary vsli:raw="Equivalent to HTTP status 202. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Accepted&quot; /&gt; indicates that the request has been accepted for further processing.">Équivalent de l'état HTTP 202. Le champ <see cref="F:System.Net.HttpStatusCode.Accepted" /> indique que le traitement de la requête peut se poursuivre.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.AlreadyReported" />
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Ambiguous&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;Ambiguous&lt;/c&gt; is a synonym for &lt;c&gt;MultipleChoices&lt;/c&gt;.">Équivalent de l’état HTTP 300. Le champ <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> indique que les informations demandées possèdent plusieurs représentations. L'action par défaut consiste à traiter cet état en tant que redirection et à suivre le contenu de l'en-tête Location associé à cette réponse. <c>Ambigu</c> est un synonyme de <c>MultipleChoices</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary vsli:raw="Equivalent to HTTP status 502. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadGateway&quot; /&gt; indicates that an intermediate proxy server received a bad response from another proxy or the origin server.">Équivalent de l’état HTTP 502. Le champ <see cref="F:System.Net.HttpStatusCode.BadGateway" /> indique qu'un serveur proxy intermédiaire a reçu une mauvaise réponse d'un autre proxy ou du serveur d'origine.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary vsli:raw="Equivalent to HTTP status 400. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; indicates that the request could not be understood by the server. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; is sent when no other error is applicable, or if the exact error is unknown or does not have its own error code.">Équivalent de l’état HTTP 400. Le champ <see cref="F:System.Net.HttpStatusCode.BadRequest" /> indique que le serveur n'a pas pu interpréter la requête. Le champ <see cref="F:System.Net.HttpStatusCode.BadRequest" /> est envoyé lorsque aucune autre erreur n'est applicable, ou si l'erreur exacte est inconnue ou n'a pas son propre code d'erreur.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary vsli:raw="Equivalent to HTTP status 409. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Conflict&quot; /&gt; indicates that the request could not be carried out because of a conflict on the server.">Équivalent de l’état HTTP 409. Le champ <see cref="F:System.Net.HttpStatusCode.Conflict" /> indique que la requête n'a pas pu être exécutée en raison d'un conflit sur le serveur.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary vsli:raw="Equivalent to HTTP status 100. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Continue&quot; /&gt; indicates that the client can continue with its request.">Équivalent de l’état HTTP 100. Le champ <see cref="F:System.Net.HttpStatusCode.Continue" /> indique que le client peut poursuivre sa requête.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary vsli:raw="Equivalent to HTTP status 201. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Created&quot; /&gt; indicates that the request resulted in a new resource created before the response was sent.">Équivalent de l’état HTTP 201. Le champ <see cref="F:System.Net.HttpStatusCode.Created" /> indique que la requête a provoqué la création d'une nouvelle ressource avant l'envoi de la réponse.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.EarlyHints" />
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary vsli:raw="Equivalent to HTTP status 417. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ExpectationFailed&quot; /&gt; indicates that an expectation given in an Expect header could not be met by the server.">Équivalent de l’état HTTP 417. Le champ <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> indique que le serveur n'a pas pu donner suite à une attente spécifiée dans un en-tête Expect.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.FailedDependency" />
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary vsli:raw="Equivalent to HTTP status 403. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Forbidden&quot; /&gt; indicates that the server refuses to fulfill the request.">Équivalent de l’état HTTP 403. Le champ <see cref="F:System.Net.HttpStatusCode.Forbidden" /> indique que le serveur refuse de donner suite à la requête.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Found&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Found&lt;/c&gt; is a synonym for &lt;c&gt;Redirect&lt;/c&gt;.">Équivalent de l’état HTTP 302. Le champ <see cref="F:System.Net.HttpStatusCode.Found" /> indique que les informations demandées se trouvent au niveau de l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. Lorsque la méthode de la demande d'origine est POST, la demande redirigée utilise la méthode GET. <c>Trouvé</c> est un synonyme de <c>Rediriger</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary vsli:raw="Equivalent to HTTP status 504. &lt;see cref=&quot;F:System.Net.HttpStatusCode.GatewayTimeout&quot; /&gt; indicates that an intermediate proxy server timed out while waiting for a response from another proxy or the origin server.">Équivalent de l’état HTTP 504. Le champ <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> indique qu'un serveur proxy intermédiaire a dépassé le délai spécifié lors de l'attente d'une réponse d'un autre proxy ou du serveur d'origine.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary vsli:raw="Equivalent to HTTP status 410. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Gone&quot; /&gt; indicates that the requested resource is no longer available.">Équivalent de l’état HTTP 410. Le champ <see cref="F:System.Net.HttpStatusCode.Gone" /> indique que la ressource demandée n'est plus disponible.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary vsli:raw="Equivalent to HTTP status 505. &lt;see cref=&quot;F:System.Net.HttpStatusCode.HttpVersionNotSupported&quot; /&gt; indicates that the requested HTTP version is not supported by the server.">Équivalent de l’état HTTP 505. Le champ <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> indique que le serveur ne prend pas en charge la version HTTP demandée.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.IMUsed" />
    <member name="F:System.Net.HttpStatusCode.InsufficientStorage" />
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary vsli:raw="Equivalent to HTTP status 500. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InternalServerError&quot; /&gt; indicates that a generic error has occurred on the server.">Équivalent de l’état HTTP 500. Le champ <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> indique qu'une erreur générique s'est produite sur le serveur.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary vsli:raw="Equivalent to HTTP status 411. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LengthRequired&quot; /&gt; indicates that the required Content-length header is missing.">Équivalent de l’état HTTP 411. Le champ <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> indique que l'en-tête Content-Length requis est manquant.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Locked" />
    <member name="F:System.Net.HttpStatusCode.LoopDetected" />
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary vsli:raw="Equivalent to HTTP status 405. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MethodNotAllowed&quot; /&gt; indicates that the request method (POST or GET) is not allowed on the requested resource.">Équivalent de l’état HTTP 405. Le champ <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> indique que la méthode de requête (POST ou GET) n'est pas autorisée sur la ressource demandée.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MisdirectedRequest" />
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Moved&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Moved&lt;/c&gt; is a synonym for &lt;c&gt;MovedPermanently&lt;/c&gt;.">Équivalent de l’état HTTP 301. Le champ <see cref="F:System.Net.HttpStatusCode.Moved" /> indique que les informations demandées ont été déplacées vers l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. Lorsque la méthode de la demande d'origine est POST, la demande redirigée utilise la méthode GET. <c>Délacé</c> est un synonyme de <c>MovedPermanently</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MovedPermanently&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. &lt;c&gt;MovedPermanently&lt;/c&gt; is a synonym for &lt;c&gt;Moved&lt;/c&gt;.">Équivalent de l’état HTTP 301. Le champ <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> indique que les informations demandées ont été déplacées vers l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. <c>MovedPermanently</c> est un synonyme de <c>Déplacé</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultipleChoices&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;MultipleChoices&lt;/c&gt; is a synonym for &lt;c&gt;Ambiguous&lt;/c&gt;.">Équivalent de l’état HTTP 300. Le champ <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> indique que les informations demandées possèdent plusieurs représentations. L'action par défaut consiste à traiter cet état en tant que redirection et à suivre le contenu de l'en-tête Location associé à cette réponse. <c>MultipleChoices</c> est un synonyme d’<c>Ambigu</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultiStatus" />
    <member name="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired" />
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary vsli:raw="Equivalent to HTTP status 204. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NoContent&quot; /&gt; indicates that the request has been successfully processed and that the response is intentionally blank.">Équivalent de l’état HTTP 204. Le champ <see cref="F:System.Net.HttpStatusCode.NoContent" /> indique que la requête a été correctement traitée et que la réponse vide est intentionnelle.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary vsli:raw="Equivalent to HTTP status 203. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NonAuthoritativeInformation&quot; /&gt; indicates that the returned meta information is from a cached copy instead of the origin server and therefore may be incorrect.">Équivalent de l’état HTTP 203. Le champ <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> indique que les méta-informations retournées proviennent d'une copie mise en cache, et non du serveur d'origine, et qu'elles risquent donc d'être incorrectes.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary vsli:raw="Equivalent to HTTP status 406. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotAcceptable&quot; /&gt; indicates that the client has indicated with Accept headers that it will not accept any of the available representations of the resource.">Équivalent de l’état HTTP 406. Le champ <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> indique que le client a spécifié, par le biais d'en-têtes Accept, qu'il n'acceptera aucune des représentations disponibles pour la ressource.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotExtended" />
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary vsli:raw="Equivalent to HTTP status 404. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotFound&quot; /&gt; indicates that the requested resource does not exist on the server.">Équivalent de l’état HTTP 404. Le champ <see cref="F:System.Net.HttpStatusCode.NotFound" /> indique que la ressource demandée n'existe pas sur le serveur.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary vsli:raw="Equivalent to HTTP status 501. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotImplemented&quot; /&gt; indicates that the server does not support the requested function.">Équivalent de l’état HTTP 501. Le champ <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> indique que le serveur ne prend pas en charge la fonction demandée.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary vsli:raw="Equivalent to HTTP status 304. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotModified&quot; /&gt; indicates that the client's cached copy is up to date. The contents of the resource are not transferred.">Équivalent de l’état HTTP 304. <see cref="F:System.Net.HttpStatusCode.NotModified" /> indique que la copie mise en cache du client est à jour. Le contenu de la ressource n'a pas été transféré.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary vsli:raw="Equivalent to HTTP status 200. &lt;see cref=&quot;F:System.Net.HttpStatusCode.OK&quot; /&gt; indicates that the request succeeded and that the requested information is in the response. This is the most common status code to receive.">Équivalent de l’état HTTP 200. Le champ <see cref="F:System.Net.HttpStatusCode.OK" /> indique que la requête a abouti et que les informations demandées figurent dans la réponse. Ceci constitue le code d'état le plus fréquemment reçu.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary vsli:raw="Equivalent to HTTP status 206. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PartialContent&quot; /&gt; indicates that the response is a partial response as requested by a GET request that includes a byte range.">Équivalent de l’état HTTP 206. Le champ <see cref="F:System.Net.HttpStatusCode.PartialContent" /> indique que la réponse est une réponse partielle, comme indiqué par une requête GET qui spécifie une plage d'octets.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary vsli:raw="Equivalent to HTTP status 402. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PaymentRequired&quot; /&gt; is reserved for future use.">Équivalent de l’état HTTP 402. Le champ <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> est réservé à une utilisation ultérieure.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PermanentRedirect" />
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary vsli:raw="Equivalent to HTTP status 412. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionFailed&quot; /&gt; indicates that a condition set for this request failed, and the request cannot be carried out. Conditions are set with conditional request headers like If-Match, If-None-Match, or If-Unmodified-Since.">Équivalent de l’état HTTP 412. <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> indique qu'une condition définie pour cette requête a échoué et que la requête n'a pas pu être exécutée. Les conditions sont définies à l'aide d'en-têtes de demande conditionnels tels que If-Match, If-None-Match ou If-Unmodified-Since.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionRequired" />
    <member name="F:System.Net.HttpStatusCode.Processing" />
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 407. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ProxyAuthenticationRequired&quot; /&gt; indicates that the requested proxy requires authentication. The Proxy-authenticate header contains the details of how to perform the authentication.">Équivalent de l’état HTTP 407. <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> indique que le proxy demandé requiert une authentification. L'en-tête Proxy-authenticate contient les détails nécessaires à l'authentification.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Redirect&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Redirect&lt;/c&gt; is a synonym for &lt;c&gt;Found&lt;/c&gt;.">Équivalent de l’état HTTP 302. Le champ <see cref="F:System.Net.HttpStatusCode.Redirect" /> indique que les informations demandées se trouvent au niveau de l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. Lorsque la méthode de la demande d'origine est POST, la demande redirigée utilise la méthode GET. <c>Rediriger</c> est un synonyme de <c>Trouvé</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectKeepVerb&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;RedirectKeepVerb&lt;/c&gt; is a synonym for &lt;c&gt;TemporaryRedirect&lt;/c&gt;.">Équivalent de l’état HTTP 307. Le champ <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> indique que les informations demandées se trouvent au niveau de l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. Lorsque la méthode de la demande d'origine est POST, la demande redirigée utilise également la méthode POST. <c>RedirectKeepVerb</c> est un synonyme de <c>TemporaryRedirect</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectMethod&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;RedirectMethod&lt;/c&gt; is a synonym for &lt;c&gt;SeeOther&lt;/c&gt;.">Équivalent de l’état HTTP 303. Le champ <see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> redirige automatiquement le client vers l'URI spécifié dans l'en-tête Location suite à une requête POST. La demande à la ressource spécifiée par l'en-tête Location sera faite à l'aide de la méthode GET. <c>RedirectMethod</c> est un synonyme de <c>SeeOther</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary vsli:raw="Equivalent to HTTP status 416. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable&quot; /&gt; indicates that the range of data requested from the resource cannot be returned, either because the beginning of the range is before the beginning of the resource, or the end of the range is after the end of the resource.">Équivalent de l’état HTTP 416. Le champ <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> indique qu'il n'a pas été possible de retourner la plage de données demandée à partir de la ressource car le début de la plage se situe avant le début de la ressource ou la fin de la plage se trouve après la fin de la ressource.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 413. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestEntityTooLarge&quot; /&gt; indicates that the request is too large for the server to process.">Équivalent de l’état HTTP 413. Le champ <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> indique que la requête ne peut pas être traitée par le serveur car elle est trop volumineuse.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge" />
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary vsli:raw="Equivalent to HTTP status 408. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestTimeout&quot; /&gt; indicates that the client did not send a request within the time the server was expecting the request.">Équivalent de l’état HTTP 408. Le champ <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> indique que le client n'a pas envoyé une requête dans le délai attendu par le serveur.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary vsli:raw="Equivalent to HTTP status 414. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestUriTooLong&quot; /&gt; indicates that the URI is too long.">Équivalent de l’état HTTP 414. Le champ <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> indique que l'URI est trop long.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary vsli:raw="Equivalent to HTTP status 205. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ResetContent&quot; /&gt; indicates that the client should reset (not reload) the current resource.">Équivalent de l’état HTTP 205. <see cref="F:System.Net.HttpStatusCode.ResetContent" /> indique que le client doit réinitialiser (et non recharger) la ressource actuelle.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SeeOther&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;SeeOther&lt;/c&gt; is a synonym for &lt;c&gt;RedirectMethod&lt;/c&gt;.">Équivalent de l’état HTTP 303. Le champ <see cref="F:System.Net.HttpStatusCode.SeeOther" /> redirige automatiquement le client vers l'URI spécifié dans l'en-tête Location suite à une requête POST. La demande à la ressource spécifiée par l'en-tête Location sera faite à l'aide de la méthode GET. <c>SeeOther</c> est un synonyme de <c>RedirectMethod</c></summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary vsli:raw="Equivalent to HTTP status 503. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ServiceUnavailable&quot; /&gt; indicates that the server is temporarily unavailable, usually due to high load or maintenance.">Équivalent de l’état HTTP 503. <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> indique que le serveur n'est pas disponible temporairement. Cela est généralement dû à une charge élevée ou à des opérations de maintenance.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary vsli:raw="Equivalent to HTTP status 101. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SwitchingProtocols&quot; /&gt; indicates that the protocol version or protocol is being changed.">Équivalent de l’état HTTP 101. Le champ <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> indique que la version du protocole ou que le protocole est en cours de changement.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TemporaryRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;TemporaryRedirect&lt;/c&gt; is a synonym for &lt;c&gt;RedirectKeepVerb&lt;/c&gt;.">Équivalent de l’état HTTP 307. Le champ <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> indique que les informations demandées se trouvent au niveau de l'URI spécifié dans l'en-tête Location. À la réception de cet état, l'action par défaut consiste à suivre l'en-tête Location associé à la réponse. Lorsque la méthode de la demande d'origine est POST, la demande redirigée utilise également la méthode POST. <c>TemporaryRedirect</c> est un synonyme de <c>RedirectKeepVerb</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TooManyRequests" />
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary vsli:raw="Equivalent to HTTP status 401. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unauthorized&quot; /&gt; indicates that the requested resource requires authentication. The WWW-Authenticate header contains the details of how to perform the authentication.">Équivalent de l’état HTTP 401. Le champ <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> indique que les ressources demandées requièrent une authentification. L'en-tête WWW-Authenticate contient les détails nécessaires à l'authentification.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnavailableForLegalReasons" />
    <member name="F:System.Net.HttpStatusCode.UnprocessableEntity" />
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary vsli:raw="Equivalent to HTTP status 415. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnsupportedMediaType&quot; /&gt; indicates that the request is an unsupported type.">Équivalent de l’état HTTP 415. Le champ <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> indique que ce type de requête n'est pas pris en charge.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary vsli:raw="Equivalent to HTTP status 306. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unused&quot; /&gt; is a proposed extension to the HTTP/1.1 specification that is not fully specified.">Équivalent de l’état HTTP 306. Le champ <see cref="F:System.Net.HttpStatusCode.Unused" /> est une proposition d'extension de la spécification HTTP/1.1 qui n'est pas complètement spécifiée.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UpgradeRequired">
      <summary vsli:raw="Equivalent to HTTP status 426. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UpgradeRequired&quot; /&gt; indicates that the client should switch to a different protocol such as TLS/1.0.">Équivalent de l’état HTTP 426. <see cref="F:System.Net.HttpStatusCode.UpgradeRequired" /> indique que le client doit basculer vers un autre protocole tel que TLS/1.0.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary vsli:raw="Equivalent to HTTP status 305. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UseProxy&quot; /&gt; indicates that the request should use the proxy server at the URI specified in the Location header.">Équivalent de l’état HTTP 305. Le champ <see cref="F:System.Net.HttpStatusCode.UseProxy" /> indique que la requête doit utiliser le serveur proxy au niveau de l'URI spécifié dans l'en-tête Location.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.VariantAlsoNegotiates" />
    <member name="T:System.Net.HttpVersion">
      <summary vsli:raw="Defines the HTTP version numbers that are supported by the &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; and &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt; classes.">Définit les numéros de version HTTP qui sont pris en charge par les classes <see cref="T:System.Net.HttpWebRequest" /> et <see cref="T:System.Net.HttpWebResponse" />.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Unknown" />
    <member name="F:System.Net.HttpVersion.Version10">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.0.">Définit une instance de <see cref="T:System.Version" /> pour HTTP 1.0.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version11">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.1.">Définit une instance de <see cref="T:System.Version" /> pour HTTP 1.1.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version20" />
    <member name="T:System.Net.ICredentials">
      <summary vsli:raw="Provides the base authentication interface for retrieving credentials for Web client authentication.">Fournit l'interface d'authentification de base pour la récupération d'informations d'identification destinées à l'authentification des clients Web.</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object that is associated with the specified URI, and authentication type.">Retourne un objet <see cref="T:System.Net.NetworkCredential" /> associé à l’URI et au type d’authentification spécifiés.</summary>
      <param name="uri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; that the client is providing authentication for.">
        <see cref="T:System.Uri" /> pour lequel le client fournit des informations d’authentification.</param>
      <param name="authType" vsli:raw="The type of authentication, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">Type d’authentification tel qu’il est défini dans la propriété <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is associated with the specified URI and authentication type, or, if no credentials are available, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" /> associé à l’URI et au type d’authentification spécifiés, ou <see langword="null" /> si aucune information d’identification n’est disponible.</returns>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary vsli:raw="Provides the interface for retrieving credentials for a host, port, and authentication type.">Fournit l'interface pour la récupération des informations d'identification d'un hôte, d'un port et d'un type d'authentification.</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the credential for the specified host, port, and authentication protocol.">Retourne les informations d’identification de l’hôte, du port et du protocole d’authentification spécifiés.</summary>
      <param name="host" vsli:raw="The host computer that is authenticating the client.">Ordinateur hôte qui authentifie le client.</param>
      <param name="port" vsli:raw="The port on &lt;paramref name=&quot;host&quot; /&gt; that the client will communicate with.">Port de <paramref name="host" />avec lequel le client doit communiquer.</param>
      <param name="authenticationType" vsli:raw="The authentication protocol.">Protocole d’authentification.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">
        <see cref="T:System.Net.NetworkCredential" /> de l’hôte, du port et du protocole d’authentification spécifiés, ou <see langword="null" /> si aucune information d’identification n’est disponible pour l’hôte, le port et le protocole d’authentification spécifiés.</returns>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary vsli:raw="Provides an Internet Protocol (IP) address.">Fournit une adresse IP (Internet Protocol).</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPAddress" /> avec l'adresse spécifiée sous forme de tableau de <see cref="T:System.Byte" />.</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">Valeur du tableau d'octets de l'adresse IP.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> contient une mauvaise adresse IP.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array and the specified scope identifier.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPAddress" /> avec l'adresse spécifiée sous forme de tableau de <see cref="T:System.Byte" /> et l'identificateur de portée spécifié.</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">Valeur du tableau d'octets de l'adresse IP.</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">Valeur de type Long de l'identificateur de portée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> contient une mauvaise adresse IP.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" /> &lt; 0 ou 
 <paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPAddress" /> avec l'adresse spécifiée sous forme de <see cref="T:System.Int64" />.</summary>
      <param name="newAddress" vsli:raw="The long value of the IP address. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">Valeur de type Long de l'adresse IP. Par exemple, la valeur 0x2414188f au format big-endian correspond à l'adresse IP 143.24.20.36.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;newAddress&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;newAddress&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="newAddress" /> &lt; 0 ou 
 <paramref name="newAddress" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte})">
      <param name="address" vsli:raw="The byte representation of the IP address, in network byte order, with the most significant byte first in index position 0." />
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte},System.Int64)">
      <param name="address" vsli:raw="The byte span value of the IP address." />
      <param name="scopeid" vsli:raw="The long value of the scope identifier." />
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary vsli:raw="An Internet Protocol (IP) address.">Adresse IP (Internet Protocol).</summary>
      <returns vsli:raw="The long value of the IP address.">Valeur de type Long de l'adresse IP.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">La famille d'adresses est <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary vsli:raw="Gets the address family of the IP address.">Obtient la famille d'adresses de l'adresse IP.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; for IPv4 or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; for IPv6.">Retourne <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> pour IPv4 ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> pour IPv6.</returns>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary vsli:raw="Provides an IP address that indicates that the server must listen for client activity on all network interfaces. This field is read-only.">Fournit une adresse IP qui indique que le serveur doit écouter les activités des clients sur toutes les interfaces réseau. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary vsli:raw="Provides the IP broadcast address. This field is read-only.">Fournit une adresse de diffusion IP. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary vsli:raw="Compares two IP addresses.">Compare deux adresses IP.</summary>
      <param name="comparand" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance to compare to the current instance.">Instance de <see cref="T:System.Net.IPAddress" /> à comparer à l'instance actuelle.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two addresses are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux adresses sont identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary vsli:raw="Provides a copy of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; as an array of bytes in network order.">Fournit une copie de <see cref="T:System.Net.IPAddress" /> sous forme de tableau d'octets.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Tableau <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary vsli:raw="Returns a hash value for an IP address.">Retourne une valeur de hachage pour une adresse IP.</summary>
      <returns vsli:raw="An integer hash value.">Valeur de hachage entier.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from host byte order to network byte order.">Convertit une valeur courte pour qu'elle utilise l'ordre d'octet du réseau, et non celui de l'hôte.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">Nombre à convertir utilisant l'ordre d'octet de l'hôte.</param>
      <returns vsli:raw="A short value, expressed in network byte order.">Valeur courte utilisant l'ordre d'octet du réseau.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from host byte order to network byte order.">Convertit une valeur entière pour qu'elle utilise l'ordre d'octet du réseau, et non celui de l'hôte.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">Nombre à convertir utilisant l'ordre d'octet de l'hôte.</param>
      <returns vsli:raw="An integer value, expressed in network byte order.">Valeur entière utilisant l'ordre d'octet du réseau.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from host byte order to network byte order.">Convertit une valeur de type Long pour qu'elle utilise l'ordre d'octet du réseau, et non celui de l'hôte.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">Nombre à convertir utilisant l'ordre d'octet de l'hôte.</param>
      <returns vsli:raw="A long value, expressed in network byte order.">Valeur de type Long utilisant l'ordre d'octet du réseau.</returns>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; method uses the &lt;see cref=&quot;F:System.Net.IPAddress.IPv6Any&quot; /&gt; field to indicate that a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; must listen for client activity on all network interfaces.">La méthode <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> utilise le champ <see cref="F:System.Net.IPAddress.IPv6Any" /> pour indiquer que <see cref="T:System.Net.Sockets.Socket" /> doit écouter les activités des clients sur toutes les interfaces réseau.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary vsli:raw="Provides the IP loopback address. This property is read-only.">Fournit l'adresse de bouclage IP. Cette propriété est en lecture seule.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This property is read-only.">Fournit une adresse IP qui indique qu'aucune interface réseau ne doit être utilisée. Cette propriété est en lecture seule.</summary>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
      <summary vsli:raw="Gets whether the IP address is an IPv4-mapped IPv6 address.">Indique si l'adresse IP est une adresse IPv6 mappée IPv4.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.&#xA;&#xA; &lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv4-mapped IPv6 address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">retourne <see cref="T:System.Boolean" /> ;  
 <see langword="true" /> si l'adresse IP est une adresse IPv6 mappée IPv4 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 link local address.">Indique si l'adresse est une adresse de lien local IPv6.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 link local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'adresse IP est une adresse de lien local IPv6 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary vsli:raw="Gets whether the address is an IPv6 multicast global address.">Indique si l'adresse est une adresse globale multicast IPv6.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 multicast global address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'adresse IP est une adresse globale multicast IPv6 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 site local address.">Indique si l'adresse est une adresse de site local IPv6.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 site local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'adresse IP est une adresse de site local IPv6 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Teredo">
      <summary vsli:raw="Gets whether the address is an IPv6 Teredo address.">Indique si l'adresse est une adresse Teredo IPv6.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 Teredo address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'adresse IP est une adresse Teredo IPv6 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary vsli:raw="Indicates whether the specified IP address is the loopback address.">Indique si l'adresse IP spécifiée est une adresse de bouclage.</summary>
      <param name="address" vsli:raw="An IP address.">Adresse IP.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;address&quot; /&gt; is the loopback address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="address" /> est l'adresse de bouclage, sinon <see langword="false" />.</returns>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary vsli:raw="Provides the IP loopback address. This field is read-only.">Fournit l'adresse de bouclage IP. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv4">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv4 address.">Mappe l'objet <see cref="T:System.Net.IPAddress" /> à une adresse IPv4.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv4 address.">retourne <see cref="T:System.Net.IPAddress" /> ;  
Adresse IPv4.</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv6">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv6 address.">Mappe l'objet <see cref="T:System.Net.IPAddress" /> à une adresse IPv6.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv6 address.">retourne <see cref="T:System.Net.IPAddress" /> ;  
Adresse IPv6.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from network byte order to host byte order.">Convertit une valeur courte pour qu'elle utilise l'ordre d'octet de l'hôte, et non celui du réseau.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">Nombre à convertir utilisant l'ordre d'octet du réseau.</param>
      <returns vsli:raw="A short value, expressed in host byte order.">Valeur courte utilisant l'ordre d'octet de l'hôte.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from network byte order to host byte order.">Convertit une valeur entière pour qu'elle utilise l'ordre d'octet de l'hôte, et non celui du réseau.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">Nombre à convertir utilisant l'ordre d'octet du réseau.</param>
      <returns vsli:raw="An integer value, expressed in host byte order.">Valeur entière utilisant l'ordre d'octet de l'hôte.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from network byte order to host byte order.">Convertit une valeur de type Long pour qu'elle utilise l'ordre d'octet de l'hôte, et non celui du réseau.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">Nombre à convertir utilisant l'ordre d'octet du réseau.</param>
      <returns vsli:raw="A long value, expressed in host byte order.">Valeur de type Long utilisant l'ordre d'octet de l'hôte.</returns>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This field is read-only.">Fournit une adresse IP qui indique qu'aucune interface réseau ne doit être utilisée. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.ReadOnlySpan{System.Char})">
      <param name="ipString" />
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary vsli:raw="Converts an IP address string to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">Convertit une chaîne d'adresse IP en instance de <see cref="T:System.Net.IPAddress" />.</summary>
      <param name="ipString" vsli:raw="A string that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6.">Chaîne qui contient une adresse IP en notation ponctuée à quatre nombres pour IPv4 et en notation hexadécimale utilisant le signe deux-points comme séparateur pour IPv6.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">Instance de <see cref="T:System.Net.IPAddress" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">
        <paramref name="ipString" /> n’est pas une adresse IP valide.</exception>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary vsli:raw="Gets or sets the IPv6 address scope identifier.">Obtient ou définit l'identificateur de portée d'adresse IPv6.</summary>
      <returns vsli:raw="A long integer that specifies the scope of the address.">Entier long qui spécifie la portée de l'adresse.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;see langword=&quot;AddressFamily&quot; /&gt; = &lt;see langword=&quot;InterNetwork&quot; /&gt;.">
        <see langword="AddressFamily" /> = <see langword="InterNetwork" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeId" /> &lt; 0 

ou - 
<paramref name="scopeId" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary vsli:raw="Converts an Internet address to its standard notation.">Convertit une adresse Internet en notation standard.</summary>
      <returns vsli:raw="A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.">Chaîne qui contient l'adresse IP en notation ponctuée à quatre nombres IPv4 ou en notation hexadécimale utilisant le signe deux-points comme séparateur en IPv6.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; and the address is bad.">La famille d'adresses est <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> et l'adresse est mauvaise.</exception>
    </member>
    <member name="M:System.Net.IPAddress.TryFormat(System.Span{System.Char},System.Int32@)">
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of characters." />
      <param name="charsWritten" vsli:raw="When this method returns, the number of characters written into the span." />
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPAddress@)">
      <param name="ipString" />
      <param name="address" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the byte span." />
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary vsli:raw="Determines whether a string is a valid IP address.">Détermine si une chaîne est une adresse IP valide.</summary>
      <param name="ipString" vsli:raw="The string to parse.">Chaîne à valider.</param>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the string.">La version <see cref="T:System.Net.IPAddress" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipString&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="ipString" /> a pu être analysée comme une adresse IP ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Net.IPAddress.TryWriteBytes(System.Span{System.Byte},System.Int32@)">
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of bytes." />
      <param name="bytesWritten" vsli:raw="When this method returns, the number of bytes written into the span." />
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary vsli:raw="Represents a network endpoint as an IP address and a port number.">Représente un point de terminaison du réseau comme une adresse IP et un numéro de port.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPEndPoint" /> avec l'adresse et le numéro de port spécifiés.</summary>
      <param name="address" vsli:raw="The IP address of the Internet host. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">Adresse IP de l'hôte Internet.</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">Numéro de port associé à <paramref name="address" />, ou 0 pour spécifier tout port disponible. <paramref name="port" /> est dans l'ordre des hôtes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;address&quot; /&gt; is less than 0 or greater than 0x00000000FFFFFFFF.">
        <paramref name="port" /> est inférieur à <see cref="F:System.Net.IPEndPoint.MinPort" />.  
ou 
 <paramref name="port" /> est supérieur à <see cref="F:System.Net.IPEndPoint.MaxPort" />.  

ou - 
<paramref name="address" /> est inférieur à 0 ou supérieur à 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.IPEndPoint" /> avec l'adresse et le numéro de port spécifiés.</summary>
      <param name="address" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">Élément <see cref="T:System.Net.IPAddress" />.</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">Numéro de port associé à <paramref name="address" />, ou 0 pour spécifier tout port disponible. <paramref name="port" /> est dans l'ordre des hôtes.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> est inférieur à <see cref="F:System.Net.IPEndPoint.MinPort" />.  
ou 
 <paramref name="port" /> est supérieur à <see cref="F:System.Net.IPEndPoint.MaxPort" />.  

ou - 
<paramref name="address" /> est inférieur à 0 ou supérieur à 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary vsli:raw="Gets or sets the IP address of the endpoint.">Obtient ou définit l'adresse IP du point de terminaison.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance containing the IP address of the endpoint.">Instance de <see cref="T:System.Net.IPAddress" /> contenant l'adresse IP du point de terminaison.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">Obtient la famille d'adresses IP (Internet Protocol).</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;.">retourne <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ;</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an endpoint from a socket address.">Crée un point de terminaison à partir d'une adresse de socket.</summary>
      <param name="socketAddress" vsli:raw="The &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; to use for the endpoint.">
        <see cref="T:System.Net.SocketAddress" /> à utiliser pour le point de terminaison.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance using the specified socket address.">Instance de <see cref="T:System.Net.EndPoint" /> qui utilise l'adresse de socket spécifiée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The AddressFamily of &lt;paramref name=&quot;socketAddress&quot; /&gt; is not equal to the AddressFamily of the current instance.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;socketAddress&quot; /&gt;.Size &amp;lt; 8.">AddressFamily de <paramref name="socketAddress" /> est différent de AddressFamily de l'instance actuelle.  

ou - 
<paramref name="socketAddress" />. Taille &lt; 8.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Object" /> actuel.</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" /> à comparer avec l'objet <see cref="T:System.Object" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal au <see cref="T:System.Object" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">Retourne une valeur de hachage pour une instance de <see cref="T:System.Net.IPEndPoint" />.</summary>
      <returns vsli:raw="An integer hash value.">Valeur de hachage entier.</returns>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary vsli:raw="Specifies the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. The MaxPort value is set to 0x0000FFFF. This field is read-only.">Spécifie la valeur maximale qui peut être assignée à la propriété <see cref="P:System.Net.IPEndPoint.Port" />. MaxPort a la valeur 0x0000FFFF. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary vsli:raw="Specifies the minimum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. This field is read-only.">Spécifie la valeur minimale qui peut être assignée à la propriété <see cref="P:System.Net.IPEndPoint.Port" />. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a read-only span to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">Convertit un point de terminaison du réseau IP (adresse et port) représenté sous la forme d’une étendue en lecture seule en une instance <see cref="T:System.Net.IPEndPoint" />.</summary>
      <param name="s" vsli:raw="A read-only span that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">Étendue en lecture seule qui contient un point de terminaison IP en notation ponctuée à quatre nombres ou ordre d’octet réseau pour IPv4 et en notation hexadécimale utilisant le signe deux-points comme séparateur pour IPv6.</param>
      <returns vsli:raw="The object representation of an IP network endpoint.">Représentation sous forme d’objet d’un point de terminaison du réseau IP.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" /> n’est pas un point de terminaison IP valide.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.String)">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a string to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">Convertit un point de terminaison du réseau IP (adresse et port) représenté sous la forme d’une chaîne en une instance <see cref="T:System.Net.IPEndPoint" />.</summary>
      <param name="s" vsli:raw="A string that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">Chaîne qui contient un point de terminaison IP en notation ponctuée à quatre nombres ou ordre d’octet réseau pour IPv4 et en notation hexadécimale utilisant le signe deux-points comme séparateur pour IPv6.</param>
      <returns vsli:raw="The object representation of an IP network endpoint.">Représentation sous forme d’objet d’un point de terminaison du réseau IP.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" /> n’est pas un point de terminaison IP valide.</exception>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary vsli:raw="Gets or sets the port number of the endpoint.">Obtient ou définit le numéro de port du point de terminaison.</summary>
      <returns vsli:raw="An integer value in the range &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; to &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt; indicating the port number of the endpoint.">Valeur entière comprise entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" /> qui indique le numéro de port du point de terminaison.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value that was specified for a set operation is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; or greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">La valeur spécifiée pour une opération ensembliste est inférieure à celle du champ <see cref="F:System.Net.IPEndPoint.MinPort" /> ou supérieure à celle du champ <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Sérialise les informations sur le point de terminaison dans une instance de <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance containing the socket address for the endpoint.">Instance de <see cref="T:System.Net.SocketAddress" /> contenant l'adresse de socket du point de terminaison.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary vsli:raw="Returns the IP address and port number of the specified endpoint.">Retourne l'adresse IP et le numéro de port du point de terminaison spécifié.</summary>
      <returns vsli:raw="A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).">Chaîne contenant une adresse IP et le numéro de port du point de terminaison spécifié (par exemple, "192.168.1.2:80").</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a read-only span to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Tente de convertir un point de terminaison du réseau IP (adresse et port) représenté sous la forme d’une étendue en lecture seule en son <see cref="T:System.Net.IPEndPoint" /> équivalent, et retourne une valeur qui indique si la conversion a réussi.</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">Point de terminaison IP à valider.</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">Lorsque cette méthode est retournée, version <see cref="T:System.Net.IPEndPoint" /> de <paramref name="s" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="s" /> peut être analysé en tant que point de terminaison IP ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.String,System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a string to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Tente de convertir un point de terminaison du réseau IP (adresse et port) représenté sous la forme d’une chaîne en son <see cref="T:System.Net.IPEndPoint" /> équivalent, et retourne une valeur qui indique si la conversion a réussi.</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">Point de terminaison IP à valider.</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">Lorsque cette méthode est retournée, version <see cref="T:System.Net.IPEndPoint" /> de <paramref name="s" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="s" /> peut être analysé en tant que point de terminaison IP ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary vsli:raw="Provides the base interface for implementation of proxy access for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class.">Fournit l'interface de base pour l'implémentation de l'accès proxy pour la classe <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary vsli:raw="The credentials to submit to the proxy server for authentication.">Informations d'identification à envoyer au serveur proxy pour l'authentification.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; instance that contains the credentials that are needed to authenticate a request to the proxy server.">Instance de <see cref="T:System.Net.ICredentials" /> qui contient les informations d'identification qui sont nécessaires pour authentifier une demande adressée au serveur proxy.</returns>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary vsli:raw="Returns the URI of a proxy.">Retourne l'URI d'un proxy.</summary>
      <param name="destination" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the requested Internet resource.">
        <see cref="T:System.Uri" /> qui spécifie la ressource Internet demandée.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; instance that contains the URI of the proxy used to contact &lt;paramref name=&quot;destination&quot; /&gt;; otherwise null or &lt;paramref name=&quot;destination&quot; /&gt; itself.">Instance de <see cref="T:System.Uri" /> qui contient l'URI du proxy utilisé pour contacter <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary vsli:raw="Indicates that the proxy should not be used for the specified host.">Indique que le proxy ne doit pas être utilisé pour l'hôte spécifié.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the host to check for proxy use.">
        <see cref="T:System.Uri" /> de l'hôte dont l'utilisation du proxy doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the proxy server should not be used for &lt;paramref name=&quot;host&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le serveur proxy ne doit pas être utilisé pour <paramref name="host" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary vsli:raw="Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.">Fournit des informations d'identification pour les schémas d'authentification qui utilisent les mots de passe, tels que Basic, Digest, NTLM et Kerberos.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkCredential" />.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkCredential" /> avec le nom d'utilisateur et le mot de passe spécifiés.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Nom d'utilisateur associé aux informations d'identification.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">Mot de passe du nom d'utilisateur associé aux informations d'identification.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">La classe <see cref="T:System.Security.SecureString" /> n'est pas prise en charge sur cette plateforme.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkCredential" /> avec le nom d'utilisateur, le mot de passe et le domaine spécifiés.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Nom d'utilisateur associé aux informations d'identification.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">Mot de passe du nom d'utilisateur associé aux informations d'identification.</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">Domaine associé à ces informations d'identification.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">La classe <see cref="T:System.Security.SecureString" /> n'est pas prise en charge sur cette plateforme.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkCredential" /> avec le nom d'utilisateur et le mot de passe spécifiés.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Nom d'utilisateur associé aux informations d'identification.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">Mot de passe du nom d'utilisateur associé aux informations d'identification.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkCredential" /> avec le nom d'utilisateur, le mot de passe et le domaine spécifiés.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Nom d'utilisateur associé aux informations d'identification.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">Mot de passe du nom d'utilisateur associé aux informations d'identification.</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">Domaine associé à ces informations d'identification.</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary vsli:raw="Gets or sets the domain or computer name that verifies the credentials.">Obtient ou définit le nom de domaine ou d'ordinateur qui vérifie les informations d'identification.</summary>
      <returns vsli:raw="The name of the domain associated with the credentials.">Nom du domaine associé aux informations d'identification.</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified host, port, and authentication type.">Retourne une instance de la classe <see cref="T:System.Net.NetworkCredential" /> pour l'hôte, le port et le type d'authentification spécifiés.</summary>
      <param name="host" vsli:raw="The host computer that authenticates the client.">Ordinateur hôte qui authentifie le client.</param>
      <param name="port" vsli:raw="The port on the &lt;paramref name=&quot;host&quot; /&gt; that the client communicates with.">Port sur <paramref name="host" /> avec lequel le client communique.</param>
      <param name="authenticationType" vsli:raw="The type of authentication requested, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">Type d'authentification demandé, tel que défini par la propriété <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">
        <see cref="T:System.Net.NetworkCredential" /> de l’hôte, du port et du protocole d’authentification spécifiés, ou <see langword="null" /> si aucune information d’identification n’est disponible pour l’hôte, le port et le protocole d’authentification spécifiés.</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified Uniform Resource Identifier (URI) and authentication type.">Retourne une instance de la classe <see cref="T:System.Net.NetworkCredential" /> pour l'URI (Uniform Resource Identifier) et le type d'authentification spécifiés.</summary>
      <param name="uri" vsli:raw="The URI that the client provides authentication for.">URI pour lequel le client fournit des informations d'identification.</param>
      <param name="authType">Type d'authentification demandé, tel que défini par la propriété <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object.">Objet <see cref="T:System.Net.NetworkCredential" />.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary vsli:raw="Gets or sets the password for the user name associated with the credentials.">Obtient ou définit le mot de passe correspondant au nom d'utilisateur associé aux informations d'identification.</summary>
      <returns vsli:raw="The password associated with the credentials. If this &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance was initialized with the &lt;paramref name=&quot;password&quot; /&gt; parameter set to &lt;see langword=&quot;null&quot; /&gt;, then the &lt;see cref=&quot;P:System.Net.NetworkCredential.Password&quot; /&gt; property will return an empty string.">Mot de passe associé aux informations d'identification. Si cette instance de <see cref="T:System.Net.NetworkCredential" /> a été initialisée avec la valeur <see langword="null" /> pour le paramètre <paramref name="password" />, la propriété <see cref="P:System.Net.NetworkCredential.Password" /> retournera une chaîne vide.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.SecurePassword">
      <summary vsli:raw="Gets or sets the password as a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; instance.">Obtient ou définit le mot de passe en tant qu'instance de <see cref="T:System.Security.SecureString" />.</summary>
      <returns vsli:raw="The password for the user name associated with the credentials.">Mot de passe du nom d'utilisateur associé aux informations d'identification.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">La classe <see cref="T:System.Security.SecureString" /> n'est pas prise en charge sur cette plateforme.</exception>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary vsli:raw="Gets or sets the user name associated with the credentials.">Obtient ou définit le nom d'utilisateur associé aux informations d'identification.</summary>
      <returns vsli:raw="The user name associated with the credentials.">Nom d'utilisateur associé aux informations d'identification.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPAddressCollection">
      <summary vsli:raw="Stores a set of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types.">Stocke un jeu de types <see cref="T:System.Net.IPAddress" />.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">Lève une <see cref="T:System.NotSupportedException" /> car cette opération n’est pas prise en charge pour cette collection.</summary>
      <param name="address" vsli:raw="The object to be added to the collection.">Objet à ajouter à la collection.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Clear">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">Lève une <see cref="T:System.NotSupportedException" /> car cette opération n’est pas prise en charge pour cette collection.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)">
      <summary vsli:raw="Checks whether the collection contains the specified &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object.">Vérifie si la collection contient l’objet <see cref="T:System.Net.IPAddress" /> spécifié.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to be searched in the collection.">Objet <see cref="T:System.Net.IPAddress" /> à rechercher dans la collection.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Net.IPAddress" /> existe dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Copies the elements in this collection to a one-dimensional array of type &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">Copie les éléments de cette collection dans un tableau unidimensionnel de type <see cref="T:System.Net.IPAddress" />.</summary>
      <param name="array" vsli:raw="A one-dimensional array that receives a copy of the collection.">Tableau unidimensionnel qui reçoit une copie de la collection.</param>
      <param name="offset" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which the copy begins.">Index de base zéro dans <paramref name="array" /> au niveau duquel commence la copie.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than zero.">
        <paramref name="offset" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;&#xA;-or-  &#xA;&#xA;The number of elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;offset&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> est multidimensionnel.  

ou 
Le nombre d’éléments de ce <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> est supérieur à la quantité d’espace disponible entre <paramref name="offset" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Les éléments de ce <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> ne peuvent pas être castés automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">Obtient le nombre de types <see cref="T:System.Net.IPAddress" /> de cette collection.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that contains the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">Valeur <see cref="T:System.Int32" /> qui contient le nombre de types <see cref="T:System.Net.IPAddress" /> de cette collection.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">Retourne un objet qui peut être utilisé pour itérer au sein de cette collection.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">Objet qui implémente l’interface <see cref="T:System.Collections.IEnumerator" /> et fournit l’accès aux types <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> dans cette collection.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether access to this collection is read-only.">Obtient une valeur qui indique si l’accès à cette collection est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index of the collection.">Obtient <see cref="T:System.Net.IPAddress" /> à l'index spécifié de la collection.</summary>
      <param name="index" vsli:raw="The index of interest.">Index concerné.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index in the collection.">
        <see cref="T:System.Net.IPAddress" /> à l'index spécifique dans la collection.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">Lève une <see cref="T:System.NotSupportedException" /> car cette opération n’est pas prise en charge pour cette collection.</summary>
      <param name="address" vsli:raw="The object to be removed.">Objet à supprimer.</param>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Lève toujours <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">Retourne un objet qui peut être utilisé pour itérer au sein de cette collection.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">Objet qui implémente l’interface <see cref="T:System.Collections.IEnumerator" /> et fournit l’accès aux types <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> dans cette collection.</returns>
    </member>
    <member name="T:System.Net.Security.AuthenticationLevel">
      <summary vsli:raw="Specifies client requirements for authentication and impersonation when using the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class and derived classes to request a resource.">Spécifie les exigences du client en matière d'authentification et d'emprunt d'identité lors de l'utilisation de la classe <see cref="T:System.Net.WebRequest" /> et des classes dérivées pour demander une ressource.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested">
      <summary vsli:raw="The client and server should be authenticated. The request does not fail if the server is not authenticated. To determine whether mutual authentication occurred, check the value of the &lt;see cref=&quot;P:System.Net.WebResponse.IsMutuallyAuthenticated&quot; /&gt; property.">Le client et le serveur doivent être authentifiés. La demande n'échoue pas si le serveur n'est pas authentifié. Pour déterminer si l'authentification mutuelle s'est produite, vérifiez la valeur de la propriété <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" />.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired">
      <summary vsli:raw="The client and server should be authenticated. If the server is not authenticated, your application will receive an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; with a &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; inner exception that indicates that mutual authentication failed.">Le client et le serveur doivent être authentifiés. Si le serveur n'est pas authentifié, votre application reçoit <see cref="T:System.IO.IOException" /> avec une exception interne <see cref="T:System.Net.ProtocolViolationException" /> qui indique que l'authentification mutuelle a échoué</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.None">
      <summary vsli:raw="No authentication is required for the client and server.">Aucune authentification n'est requise pour le client et le serveur.</summary>
    </member>
    <member name="T:System.Net.Security.SslPolicyErrors">
      <summary vsli:raw="Enumerates Secure Socket Layer (SSL) policy errors.">Énumère les erreurs de stratégie SSL (Secure Socket Layer).</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.None">
      <summary vsli:raw="No SSL policy errors.">Aucune erreur de stratégie SSL.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <summary vsli:raw="&lt;see cref=&quot;P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus&quot; /&gt; has returned a non empty array.">
        <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" /> a retourné un tableau non vide.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <summary vsli:raw="Certificate name mismatch.">Incompatibilité du nom du certificat.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <summary vsli:raw="Certificate not available.">Certificat non disponible.</summary>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary vsli:raw="Stores serialized information from &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; derived classes.">Stocke des informations sérialisées provenant des classes dérivées <see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class for the given address family.">Crée une instance de la classe <see cref="T:System.Net.SocketAddress" /> pour la famille d'adresses donnée.</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">Valeur énumérée <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class using the specified address family and buffer size.">Crée une nouvelle instance de la classe <see cref="T:System.Net.SocketAddress" /> en utilisant la famille d'adresses et la taille de mémoire tampon spécifiées.</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">Valeur énumérée <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <param name="size" vsli:raw="The number of bytes to allocate for the underlying buffer.">Nombre d'octets à allouer à la mémoire tampon sous-jacente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is less than 2. These 2 bytes are needed to store &lt;paramref name=&quot;family&quot; /&gt;.">
        <paramref name="size" /> est inférieur à 2. Ces 2 octets sont nécessaires pour stocker <paramref name="family" />.</exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;.">Détermine si l'objet <see langword="Object" /> spécifié est égal à l'objet <see langword="Object" /> actuel.</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see langword=&quot;Object&quot; /&gt;.">
        <see cref="T:System.Object" /> à comparer avec l'objet <see langword="Object" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see langword="Object" /> spécifié est égal au <see langword="Object" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value of the current &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Obtient la valeur énumérée <see cref="T:System.Net.Sockets.AddressFamily" /> du <see cref="T:System.Net.SocketAddress" /> actuel.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated values.">Une des valeurs énumérées <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.">Sert de fonction de hachage pour un type particulier et convient à une utilisation dans des algorithmes de hachage et des structures de données telles qu’une table de hachage.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Code de hachage du <see cref="T:System.Object" /> actuel.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the specified index element in the underlying buffer.">Obtient ou définit l'élément d'index spécifié dans la mémoire tampon sous-jacente.</summary>
      <param name="offset" vsli:raw="The array index element of the desired information.">Élément d'index de tableau des informations désirées.</param>
      <returns vsli:raw="The value of the specified index element in the underlying buffer.">Valeur de l'élément d'index spécifié dans la mémoire tampon sous-jacente.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist in the buffer.">L'index spécifié n'existe pas dans la mémoire tampon.</exception>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary vsli:raw="Gets the underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Obtient la taille de la mémoire tampon sous-jacente de <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns vsli:raw="The underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Taille de la mémoire tampon sous-jacente de <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary vsli:raw="Returns information about the socket address.">Retourne des informations sur l'adresse du socket.</summary>
      <returns vsli:raw="A string that contains information about the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Chaîne qui contient des informations sur la structure <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary vsli:raw="Specifies the addressing scheme that an instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class can use.">Spécifie le schéma d'adressage pouvant être utilisé par une instance de la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.AppleTalk">
      <summary vsli:raw="AppleTalk address.">Adresse AppleTalk.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Atm">
      <summary vsli:raw="Native ATM services address.">Adresse de services ATM natifs.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Banyan">
      <summary vsli:raw="Banyan address.">Adresse Banyan.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ccitt">
      <summary vsli:raw="Addresses for CCITT protocols, such as X.25.">Adresses de protocoles CCITT, tels que X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Chaos">
      <summary vsli:raw="Address for MIT CHAOS protocols.">Adresse de protocoles MIT CHAOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Cluster">
      <summary vsli:raw="Address for Microsoft cluster products.">Adresse de produits de cluster Microsoft.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ControllerAreaNetwork">
      <summary vsli:raw="Controller Area Network address.">Adresse CAN (Controller Area Network).</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataKit">
      <summary vsli:raw="Address for Datakit protocols.">Adresse de protocoles Datakit.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataLink">
      <summary vsli:raw="Direct data-link interface address.">Adresse d'interface de liaison de données directe.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DecNet">
      <summary vsli:raw="DECnet address.">Adresse DECnet.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ecma">
      <summary vsli:raw="European Computer Manufacturers Association (ECMA) address.">Adresse ECMA (European Computer Manufacturers Association).</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.FireFox">
      <summary vsli:raw="FireFox address.">Adresse FireFox.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.HyperChannel">
      <summary vsli:raw="NSC Hyperchannel address.">Adresse NSC Hyperchannel.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ieee12844">
      <summary vsli:raw="IEEE 1284.4 workgroup address.">Adresse de groupe de travail IEEE 1284.4.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ImpLink">
      <summary vsli:raw="ARPANET IMP address.">Adresse ARPANET IMP.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary vsli:raw="Address for IP version 4.">Adresse IP version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary vsli:raw="Address for IP version 6.">Adresse IP version 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ipx">
      <summary vsli:raw="IPX or SPX address.">Adresse IPX ou SPX.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Irda">
      <summary vsli:raw="IrDA address.">Adresse IrDA.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Iso">
      <summary vsli:raw="Address for ISO protocols.">Adresse de protocoles ISO.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Lat">
      <summary vsli:raw="LAT address.">Adresse LAT.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Max">
      <summary vsli:raw="MAX address.">Adresse MAX.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetBios">
      <summary vsli:raw="NetBios address.">Adresse NetBios.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Netlink">
      <summary>Adresse Netlink.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetworkDesigners">
      <summary vsli:raw="Address for Network Designers OSI gateway-enabled protocols.">Adresse de protocoles compatibles avec la passerelle Network Designers OSI.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NS">
      <summary vsli:raw="Address for Xerox NS protocols.">Adresse de protocoles Xerox NS.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Osi">
      <summary vsli:raw="Address for OSI protocols.">Adresse de protocoles OSI.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Packet">
      <summary vsli:raw="Low-level Packet address.">Adresse du paquet de bas niveau.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Pup">
      <summary vsli:raw="Address for PUP protocols.">Adresse de protocoles PUP.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Sna">
      <summary vsli:raw="IBM SNA address.">Adresse IBM SNA.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unix">
      <summary vsli:raw="Unix local to host address.">Adresse Unix locale vers hôte.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary vsli:raw="Unknown address family.">Famille d'adresses inconnue.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary vsli:raw="Unspecified address family.">Famille d'adresses non spécifiée.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.VoiceView">
      <summary vsli:raw="VoiceView address.">Adresse VoiceView.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary vsli:raw="Defines error codes for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">Définit les codes d'erreur pour la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary vsli:raw="An attempt was made to access a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; in a way that is forbidden by its access permissions.">Une tentative d'accès à un <see cref="T:System.Net.Sockets.Socket" /> a été effectuée d'une manière interdite par ses autorisations d'accès.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary vsli:raw="Only one use of an address is normally permitted.">Une seule utilisation d'une adresse est normalement autorisée.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary vsli:raw="The address family specified is not supported. This error is returned if the IPv6 address family was specified and the IPv6 stack is not installed on the local machine. This error is returned if the IPv4 address family was specified and the IPv4 stack is not installed on the local machine.">La famille d'adresses indiquée n'est pas prise en charge. Cette erreur est retournée si la famille d'adresses IPv6 a été spécifiée et que la pile IPv6 ne soit pas installée sur l'ordinateur local. Cette erreur est retournée si la famille d'adresses IPv4 a été spécifiée et que la pile IPv4 ne soit pas installée sur l'ordinateur local.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary vsli:raw="The selected IP address is not valid in this context.">L'adresse IP sélectionnée n'est pas valide dans ce contexte.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary vsli:raw="The nonblocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; already has an operation in progress.">Le <see cref="T:System.Net.Sockets.Socket" /> non bloquant a déjà une opération en cours.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary vsli:raw="The connection was aborted by .NET or the underlying socket provider.">La connexion a été abandonnée par le .NET Framework ou le fournisseur de sockets sous-jacent.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary vsli:raw="The remote host is actively refusing a connection.">L'hôte distant refuse expressément une connexion.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary vsli:raw="The connection was reset by the remote peer.">La connexion a été réinitialisée par le pair distant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary vsli:raw="A required address was omitted from an operation on a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Une adresse nécessaire a été omise d'une opération sur un <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary vsli:raw="A graceful shutdown is in progress.">Un arrêt correct est en cours.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary vsli:raw="An invalid pointer address was detected by the underlying socket provider.">Une adresse de pointeur non valide a été détectée par le fournisseur de sockets sous-jacent.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary vsli:raw="The operation failed because the remote host is down.">L'opération a échoué parce que l'hôte distant ne fonctionne pas.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary vsli:raw="No such host is known. The name is not an official host name or alias.">Hôte inconnu. Le nom n'est pas un nom d'hôte officiel ni un alias.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary vsli:raw="There is no network route to the specified host.">Il n'existe aucun itinéraire de réseau vers l'hôte spécifié.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary vsli:raw="A blocking operation is in progress.">Une opération de blocage est en cours d'exécution.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary vsli:raw="A blocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; call was canceled.">Un appel <see cref="T:System.Net.Sockets.Socket" /> bloquant a été annulé.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary vsli:raw="An invalid argument was supplied to a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; member.">Un argument non valide a été fourni à un membre <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary vsli:raw="The application has initiated an overlapped operation that cannot be completed immediately.">L'application a initialisé une opération avec chevauchement qui ne peut pas être achevée immédiatement.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is already connected.">
        <see cref="T:System.Net.Sockets.Socket" /> est déjà connecté.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary vsli:raw="The datagram is too long.">Le datagramme est trop long.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary vsli:raw="The network is not available.">Le réseau n'est pas disponible.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary vsli:raw="The application tried to set &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.KeepAlive&quot; /&gt; on a connection that has already timed out.">L'application a essayé de définir <see cref="F:System.Net.Sockets.SocketOptionName.KeepAlive" /> sur une connexion dont le délai d'attente est déjà dépassé.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary vsli:raw="No route to the remote host exists.">Il n'existe aucun itinéraire vers l'hôte distant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary vsli:raw="No free buffer space is available for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation.">Aucun espace de mémoire tampon libre n'est disponible pour une opération <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary vsli:raw="The requested name or IP address was not found on the name server.">Le nom ou l'adresse IP demandés n'ont pas été trouvés sur le serveur de noms.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary vsli:raw="The error is unrecoverable or the requested database cannot be located.">L'erreur est irrécupérable ou la base de données demandée est introuvable.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary vsli:raw="The application tried to send or receive data, and the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not connected.">L'application a essayé d'envoyer ou de recevoir des données et <see cref="T:System.Net.Sockets.Socket" /> n'est pas connecté.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary vsli:raw="The underlying socket provider has not been initialized.">Le fournisseur de sockets sous-jacent n'a pas été initialisé.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation was attempted on a non-socket.">Une opération <see cref="T:System.Net.Sockets.Socket" /> a été tentée sur un objet autre qu'un socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary vsli:raw="The overlapped operation was aborted due to the closure of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">L'opération avec chevauchement a été abandonnée en raison de la fermeture du <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary vsli:raw="The address family is not supported by the protocol family.">La famille d'adresses n'est pas prise en charge par la famille de protocoles.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary vsli:raw="Too many processes are using the underlying socket provider.">Trop de processus utilisent le fournisseur de sockets sous-jacent.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary vsli:raw="The protocol family is not implemented or has not been configured.">La famille de protocoles n'est pas implémentée ou n'est pas configurée.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary vsli:raw="The protocol is not implemented or has not been configured.">Le protocole n'est pas implémenté ou n'est pas configuré.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary vsli:raw="An unknown, invalid, or unsupported option or level was used with a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Une option ou un niveau inconnu, non valide ou non pris en charge a été utilisé avec <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary vsli:raw="The protocol type is incorrect for this &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le type de protocole est incorrect pour ce <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary vsli:raw="A request to send or receive data was disallowed because the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has already been closed.">Une demande d'envoi ou de réception de données a été interdite car <see cref="T:System.Net.Sockets.Socket" /> a déjà été arrêté.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary vsli:raw="An unspecified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error has occurred.">Une erreur <see cref="T:System.Net.Sockets.Socket" /> non spécifiée s'est produite.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary vsli:raw="The support for the specified socket type does not exist in this address family.">La prise en charge du type de socket spécifié n'existe pas dans cette famille d'adresses.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation succeeded.">L'opération <see cref="T:System.Net.Sockets.Socket" /> a réussi.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary vsli:raw="The network subsystem is unavailable.">Le sous-système réseau n'est pas disponible.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary vsli:raw="The connection attempt timed out, or the connected host has failed to respond.">Le délai pour la tentative de connexion a expiré ou l'hôte connecté n'a pas pu répondre.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary vsli:raw="There are too many open sockets in the underlying socket provider.">Trop de sockets sont ouverts dans le fournisseur de sockets sous-jacent.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary vsli:raw="The name of the host could not be resolved. Try again later.">Le nom de l'hôte n'a pas pu être résolu. Réessayez ultérieurement.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary vsli:raw="The specified class was not found.">La classe spécifiée est introuvable.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary vsli:raw="The version of the underlying socket provider is out of range.">La version du fournisseur de sockets sous-jacent est hors limites.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary vsli:raw="An operation on a nonblocking socket cannot be completed immediately.">Une opération sur un socket non bloquant ne peut pas être effectuée immédiatement.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary vsli:raw="The exception that is thrown when a socket error occurs.">Exception levée lorsqu'une erreur de socket se produit.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the last operating system error code.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SocketException" /> avec le dernier code d'erreur du système d'exploitation.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the specified error code.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SocketException" /> avec le code d'erreur spécifié.</summary>
      <param name="errorCode" vsli:raw="The error code that indicates the error that occurred.">Code d'erreur qui indique l'erreur qui s'est produite.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SocketException" /> à partir des instances spécifiées des classes <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance that contains the information that is required to serialize the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">Instance de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations requises pour sérialiser la nouvelle instance de <see cref="T:System.Net.Sockets.SocketException" />.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source du flux sérialisé associé à la nouvelle instance de <see cref="T:System.Net.Sockets.SocketException" />.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">Obtient le code d'erreur associé à cette exception.</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">Code d'erreur entier associé à cette exception.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.Message">
      <summary vsli:raw="Gets the error message that is associated with this exception.">Obtient le message d'erreur associé à cette exception.</summary>
      <returns vsli:raw="A string that contains the error message.">Chaîne qui contient le message d'erreur.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">Obtient le code d'erreur associé à cette exception.</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">Code d'erreur entier associé à cette exception.</returns>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class provides additional context about the underlying transport layer.">La classe <see cref="T:System.Net.TransportContext" /> fournit le contexte supplémentaire relatif à la couche de transport sous-jacente.</summary>
    </member>
    <member name="M:System.Net.TransportContext.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class.">Crée une nouvelle instance de la classe <see cref="T:System.Net.TransportContext" />.</summary>
    </member>
    <member name="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
      <summary vsli:raw="Retrieves the requested channel binding.">Récupère la liaison de canal demandée.</summary>
      <param name="kind" vsli:raw="The type of channel binding to retrieve.">Type de liaison de canal à récupérer.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the channel binding is not supported by the current transport or by the operating system.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> demandé ou <see langword="null" /> si la liaison de canal n'est pas prise en charge par le transport actuel ou par le système d'exploitation.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;kind&quot; /&gt; is must be &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&quot; /&gt; for use with the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; retrieved from the &lt;see cref=&quot;P:System.Net.HttpListenerRequest.TransportContext&quot; /&gt; property.">
        <paramref name="kind" /> doit être <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> pour une utilisation avec le <see cref="T:System.Net.TransportContext" /> extrait de la propriété <see cref="P:System.Net.HttpListenerRequest.TransportContext" />.</exception>
    </member>
    <member name="T:System.Security.Authentication.CipherAlgorithmType">
      <summary vsli:raw="Defines the possible cipher algorithms for the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class.">Définit les algorithmes de chiffrement possibles pour la classe <see cref="T:System.Net.Security.SslStream" />.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm.">Algorithme Advanced Encryption Standard (AES).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes128">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 128 bit key.">Algorithme AES (Advanced Encryption Standard) avec une clé 128 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes192">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 192 bit key.">Algorithme AES (Advanced Encryption Standard) avec une clé 192 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes256">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 256 bit key.">Algorithme AES (Advanced Encryption Standard) avec une clé 256 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Des">
      <summary vsli:raw="The Data Encryption Standard (DES) algorithm.">Algorithme Data Encryption Standard (DES).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.None">
      <summary vsli:raw="No encryption algorithm is used.">Aucun algorithme de chiffrement n'est utilisé.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Null">
      <summary vsli:raw="No encryption is used with a Null cipher algorithm.">Aucun chiffrement n'est utilisé avec un algorithme de chiffrement Null.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc2">
      <summary vsli:raw="Rivest's Code 2 (RC2) algorithm.">Algorithme Rivest's Code 2 (RC2).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc4">
      <summary vsli:raw="Rivest's Code 4 (RC4) algorithm.">Algorithme Rivest's Code 4 (RC4).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.TripleDes">
      <summary vsli:raw="The Triple Data Encryption Standard (3DES) algorithm.">Algorithme Triple Data Encryption Standard (3DES).</summary>
    </member>
    <member name="T:System.Security.Authentication.ExchangeAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used to create keys shared by the client and server.">Spécifie l'algorithme utilisé pour créer des clés partagées par le client et le serveur.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.DiffieHellman">
      <summary vsli:raw="The Diffie Hellman ephemeral key exchange algorithm.">Algorithme d'échange de clé éphémère Diffie Hellman.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.None">
      <summary vsli:raw="No key exchange algorithm is used.">Aucun algorithme d'échange de clé n'est utilisé.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaKeyX">
      <summary vsli:raw="The RSA public-key exchange algorithm.">Algorithme d'échange de clé publique RSA.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaSign">
      <summary vsli:raw="The RSA public-key signature algorithm.">Algorithme de signature de clé publique RSA.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBinding">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.">La classe <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> encapsule un pointeur vers les données opaques utilisé pour lier une transaction authentifiée à un canal sécurisé.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />.</summary>
      <param name="ownsHandle" vsli:raw="A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.">Valeur booléenne qui indique si l'application possède le handle sécurisé d'une région de mémoire native contenant les données d'octets qui peuvent être passées aux appels natifs assurant la protection étendue pour l'authentification Windows intégrée.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size&quot; /&gt; property gets the size, in bytes, of the channel binding token associated with the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">La propriété <see cref="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size" /> obtient la taille, en octets, du jeton de liaison de canal associé à l'instance <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />.</summary>
      <returns vsli:raw="The size, in bytes, of the channel binding token in the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">Taille, en octets, du jeton de liaison de canal dans l'instance <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /></returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&quot; /&gt; enumeration represents the kinds of channel bindings that can be queried from secure channels.">L'énumération <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind" /> représente les genres de liaisons de canal pouvant être interrogées à partir des canaux sécurisés.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint">
      <summary vsli:raw="A channel binding unique to a given endpoint (a TLS server certificate, for example).">Liaison de canal unique à un point de terminaison donné (certificat de serveur TLS, par exemple).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique">
      <summary vsli:raw="A channel binding completely unique to a given channel (a TLS session key, for example).">Liaison de canal complètement unique à un canal donné (clé de session TLS, par exemple).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unknown">
      <summary vsli:raw="An unknown channel binding type.">Type de liaison de canal inconnu.</summary>
    </member>
    <member name="T:System.Security.Authentication.HashAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used for generating message authentication codes (MACs).">Spécifie l'algorithme utilisé pour générer des codes d'authentification de message.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Md5">
      <summary vsli:raw="&lt;para&gt;The Message Digest 5 (MD5) hashing algorithm.&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">Algorithme de hachage MD5 (Message Digest 5).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.None">
      <summary vsli:raw="No hashing algorithm is used.">Aucun algorithme de hachage utilisé.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha1">
      <summary vsli:raw="&lt;para&gt;The Secure Hashing Algorithm (SHA1).&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">Algorithme de hachage sécurisé (SHA1).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha256">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 256-bit digest.">L’algorithme de hachage SHA-2, avec un condensat de 256 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha384">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 384-bit digest.">L’algorithme de hachage SHA-2, avec un condensat de 384 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha512">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 512-bit digest.">L’algorithme de hachage SHA-2, avec un condensat de 512 bits.</summary>
    </member>
    <member name="T:System.Security.Authentication.SslProtocols">
      <summary vsli:raw="Defines the possible versions of &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt;.">Définit les versions possibles de <see cref="T:System.Security.Authentication.SslProtocols" />.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Default">
      <summary vsli:raw="Use None instead of Default. Default permits only the Secure Sockets Layer (SSL) 3.0 or Transport Layer Security (TLS) 1.0 protocols to be negotiated, and those options are now considered obsolete. Consequently, Default is not allowed in many organizations. Despite the name of this field, &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; does not use it as a default except under special circumstances.">Utilisez None à la place de Default. Default autorise uniquement la négociation des protocoles Secure Sockets Layer (SSL) 3.0 ou Transport Layer Security (TLS) 1.0, et ces options sont désormais considérées comme obsolètes. Par conséquent, Default n’est pas autorisé dans de nombreuses organisations. En dépit du nom de ce champ, <see cref="T:System.Net.Security.SslStream" /> ne l’utilise pas comme valeur par défaut, sauf dans des circonstances particulières.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.None">
      <summary vsli:raw="Allows the operating system to choose the best protocol to use, and to block protocols that are not secure. Unless your app has a specific reason not to, you should use this field.">Permet au système d’exploitation de choisir le meilleur protocole à utiliser et de bloquer les protocoles qui ne sont pas sécurisés. À moins que votre application ait une raison spécifique de ne pas le faire, vous devez utiliser ce champ.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl2">
      <summary vsli:raw="Specifies the SSL 2.0 protocol. SSL 2.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">Spécifie le protocole SSL 2.0. SSL 2.0 a été remplacé par le protocole TLS ; il n'est prévu que pour des raisons de compatibilité descendante.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl3">
      <summary vsli:raw="Specifies the SSL 3.0 protocol. SSL 3.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">Spécifie le protocole SSL 3.0. SSL 3.0 a été remplacé par le protocole TLS ; il n'est prévu que pour des raisons de compatibilité descendante.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls">
      <summary vsli:raw="Specifies the TLS 1.0 security protocol. TLS 1.0 is provided for backward compatibility only. The TLS protocol is defined in IETF RFC 2246. This member is obsolete starting in .NET 7.">Spécifie le protocole de sécurité TLS 1.0. Le protocole TLS est défini dans IETF RFC 2246.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls11">
      <summary vsli:raw="Specifies the TLS 1.1 security protocol. The TLS protocol is defined in IETF RFC 4346. This member is obsolete starting in .NET 7.">Spécifie le protocole de sécurité TLS 1.1. Le protocole TLS est défini dans IETF RFC 4346.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls12">
      <summary vsli:raw="Specifies the TLS 1.2 security protocol. The TLS protocol is defined in IETF RFC 5246.">Spécifie le protocole de sécurité TLS 1.2. Le protocole TLS est défini dans IETF RFC 5246.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls13">
      <summary vsli:raw="Specifies the TLS 1.3 security protocol. The TLS protocol is defined in IETF RFC 8446.">Spécifie le protocole de sécurité TLS 1.3. Le protocole TLS est défini dans IETF RFC 8446.</summary>
    </member>
  </members>
</doc>