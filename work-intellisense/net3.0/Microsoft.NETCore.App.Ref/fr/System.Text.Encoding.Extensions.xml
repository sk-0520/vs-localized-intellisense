<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.Encoding.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Text.ASCIIEncoding">
      <summary vsli:raw="Represents an ASCII character encoding of Unicode characters.">Représente un encodage de caractères ASCII de caractères Unicode.</summary>
    </member>
    <member name="M:System.Text.ASCIIEncoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.ASCIIEncoding&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.ASCIIEncoding" />.</summary>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères commençant au pointeur de caractère spécifié.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Pointeur du premier caractère à encoder.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères du tableau de caractères spécifié.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Tableau de caractères contenant le jeu de caractères à encoder.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
ou 
 <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the specified character span.">Calcule le nombre d’octets générés par l’encodage de l’étendue de caractères spécifiée.</summary>
      <param name="chars" vsli:raw="The span that contains the set of characters to encode.">Étendue contenant le jeu de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified character span.">Nombre d’octets produits par l'encodage de l’étendue de caractères spécifiée.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Calcule le nombre d'octets générés en encodant les caractères dans le <see cref="T:System.String" /> spécifié.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> contenant le jeu de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Code une séquence de caractères commençant au pointeur de caractère spécifié en une séquence d'octets, qui sera stockée à partir du pointeur d'octet spécifié.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Pointeur du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Pointeur de l'emplacement où commencer l'écriture de la séquence d'octets obtenue.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Nombre maximal d'octets à écrire.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits à l'emplacement indiqué par <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="bytes" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> ou <paramref name="byteCount" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">
        <paramref name="byteCount" /> est inférieur au nombre d'octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Encode un jeu de caractères du tableau de caractères spécifié dans le tableau d'octets indiqué.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Tableau de caractères contenant le jeu de caractères à encoder.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Index auquel commencer l'écriture de la séquence d'octets obtenue.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.  

ou - 
<paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})">
      <summary vsli:raw="Encodes the specified character span into the specified byte span.">Encode l’étendue de caractères spécifiée dans l’étendue d’octets spécifiée.</summary>
      <param name="chars" vsli:raw="The character span to encode.">Étendue de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The span to contain the resulting set of bytes.">Étendue pour contenir le jeu d’octets obtenu.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Encode un jeu de caractères de la chaîne <see cref="T:System.String" /> spécifiée dans le tableau d'octets indiqué.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> contenant le jeu de caractères à encoder.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Index auquel commencer l'écriture de la séquence d'octets obtenue.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> est <see langword="null" />.  

ou - 
<paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.  

ou - 
<paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets commençant au pointeur d'octet spécifié.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Pointeur du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> est inférieur à zéro.  
ou 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets du tableau d'octets spécifié.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Calculates the number of characters produced by decoding the specified byte span.">Calcule le nombre de caractères produits par le décodage de l’étendue d’octets spécifiée.</summary>
      <param name="bytes" vsli:raw="The span containing the set of bytes to decode.">Étendue contenant le jeu d’octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified byte span.">Nombre de caractères produits par le décodage de l’étendue d’octets spécifiée.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Décode une séquence d'octets commençant au pointeur d'octet spécifié en un jeu de caractères qui sera stocké à partir du pointeur de caractère spécifié.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Pointeur du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Pointeur de l'emplacement où commencer l'écriture du jeu de caractères obtenu.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Nombre maximal de caractères à écrire.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits à l'emplacement indiqué par <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> est <see langword="null" />.  

ou - 
<paramref name="chars" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> ou <paramref name="charCount" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">
        <paramref name="charCount" /> est inférieur au nombre de caractères obtenus.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Décode une séquence d'octets du tableau d'octets spécifié dans le tableau de caractères spécifié.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Tableau de caractères destiné à contenir le jeu de caractères obtenu.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Index auquel commencer l'écriture du jeu de caractères obtenu.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits dans <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> est <see langword="null" />.  

ou - 
<paramref name="chars" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> est inférieur à zéro.  

ou - 
<paramref name="byteindex" /> et <paramref name="byteCount" /> ne désignent pas une plage valide dans <paramref name="bytes" />.  

ou - 
<paramref name="charIndex" /> n'est pas un index valide dans <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">
        <paramref name="chars" /> ne possède pas une capacité suffisante entre <paramref name="charIndex" /> et la fin du tableau pour prendre en charge les caractères obtenus.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})">
      <summary vsli:raw="Decodes the specified byte span into the specified character span.">Décode l’étendue d’octets spécifiée dans l’étendue de caractères spécifiée.</summary>
      <param name="bytes" vsli:raw="The span containing the bytes to decode.">Étendue contenant les octets à décoder.</param>
      <param name="chars" vsli:raw="The span to contain the resulting set of characters.">Étendue pour contenir le jeu de caractères obtenu.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits dans <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.">Obtient un décodeur qui convertit une séquence d'octets encodée en ASCII en une séquence de caractères Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.">
        <see cref="T:System.Text.Decoder" /> qui convertit une séquence d'octets encodée en ASCII en une séquence de caractères Unicode.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.">Obtient un encodeur qui convertit une séquence de caractères Unicode en une séquence d'octets encodée en ASCII.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.">
        <see cref="T:System.Text.Encoder" /> qui convertit une séquence de caractères Unicode en une séquence d'octets encodée en ASCII.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcule le nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcule le nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Décode une plage d'octets d'un tableau d'octets en une chaîne.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">
        <see cref="T:System.String" /> contenant les résultats du décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
ou 
 <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="P:System.Text.ASCIIEncoding.IsSingleByte">
      <summary vsli:raw="Gets a value indicating whether the current encoding uses single-byte code points.">Obtient une valeur qui indique si l'encodage en cours utilise des points de code encodés sur un octet.</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;true&quot; /&gt;.">Cette propriété a toujours la valeur <see langword="true" />.</returns>
    </member>
    <member name="T:System.Text.UnicodeEncoding">
      <summary vsli:raw="Represents a UTF-16 encoding of Unicode characters.">Représente un encodage UTF-16 de caractères Unicode.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UnicodeEncoding" />.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order and whether the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UnicodeEncoding" />. Les paramètres indiquent s'il faut utiliser l'ordre d'octet avec primauté des octets de poids fort (big-endian) et si la méthode <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> retourne une marque d'ordre d'octet Unicode.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> pour utiliser l'ordre d'octet avec primauté des octets de poids fort (big-endian) (octet le plus significatif en premier) ou <see langword="false" /> pour utiliser l'ordre d'octet avec primauté des octets de poids faible (little-endian) (octet le moins significatif en premier).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier que la méthode <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> retourne une marque d'ordre d'octet Unicode ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UnicodeEncoding" />. Les paramètres indiquent s'il faut utiliser l'ordre d'octet avec primauté des octets de poids fort (big-endian), fournir une marque d'ordre d'octet Unicode et lever une exception en cas de détection d'un encodage non valide.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first); &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> pour utiliser l'ordre d'octet avec primauté des octets de poids fort (big-endian) (octet le plus significatif en premier) ; <see langword="false" /> pour utiliser l'ordre d'octet avec primauté des octets de poids faible (little-endian) (octet le moins significatif en premier).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier que la méthode <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> retourne une marque d'ordre d'octet Unicode ; sinon, <see langword="false" />.</param>
      <param name="throwOnInvalidBytes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that an exception should be thrown when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier qu'une exception doit être levée quand un encodage non valide est détecté ; sinon, <see langword="false" />.</param>
    </member>
    <member name="F:System.Text.UnicodeEncoding.CharSize">
      <summary vsli:raw="Represents the Unicode character size in bytes. This field is a constant.">Représente la taille des caractères Unicode en octets. Ce champ est une constante.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Text.UnicodeEncoding" /> actuel.</summary>
      <param name="value" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> est une instance de <see cref="T:System.Text.UnicodeEncoding" /> et s'il est égal à l'objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères commençant au pointeur de caractère spécifié.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Pointeur du premier caractère à encoder.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> est inférieur à zéro.  
ou 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">La détection d'erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères du tableau de caractères spécifié.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Tableau de caractères contenant le jeu de caractères à encoder.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
ou 
 <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="chars" />.  
ou 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified string.">Calcule le nombre d'octets générés en codant les caractères dans la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string that contains the set of characters to encode.">Chaîne contenant le jeu de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.">La détection d’erreurs est activée et <paramref name="s" /> contient une séquence de caractères non valide.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Code une séquence de caractères commençant au pointeur de caractère spécifié en une séquence d'octets, qui sera stockée à partir du pointeur d'octet spécifié.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Pointeur du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Pointeur de l'emplacement où commencer l'écriture de la séquence d'octets obtenue.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Nombre maximal d'octets à écrire.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by the &lt;paramref name=&quot;bytes&quot; /&gt; parameter.">Nombre réel d'octets écrits à l'emplacement indiqué par le paramètre <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> ou <paramref name="byteCount" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.  
ou 
 <paramref name="byteCount" /> est inférieur au nombre d'octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Encode un jeu de caractères du tableau de caractères spécifié dans le tableau d'octets indiqué.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Tableau de caractères contenant le jeu de caractères à encoder.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Index auquel commencer l'écriture de la séquence d'octets obtenue.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).  
ou 
 <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.  

ou - 
<paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou 
 <paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.  

ou - 
<paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Encode un jeu de caractères de la chaîne <see cref="T:System.String" /> spécifiée dans le tableau d'octets indiqué.</summary>
      <param name="s" vsli:raw="The string containing the set of characters to encode.">Chaîne contenant le jeu de caractères à encoder.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Index auquel commencer l'écriture de la séquence d'octets obtenue.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> est <see langword="null" />.  

ou - 
<paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.  

ou - 
<paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">La détection d’erreurs est activée et <paramref name="s" /> contient une séquence de caractères non valide.  

ou - 
<paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets commençant au pointeur d'octet spécifié.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Pointeur du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> est inférieur à zéro.  
ou 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets du tableau d'octets spécifié.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Décode une séquence d'octets commençant au pointeur d'octet spécifié en un jeu de caractères qui sera stocké à partir du pointeur de caractère spécifié.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Pointeur du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Pointeur de l'emplacement où commencer l'écriture du jeu de caractères obtenu.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Nombre maximal de caractères à écrire.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by the &lt;paramref name=&quot;chars&quot; /&gt; parameter.">Nombre réel de caractères écrits à l'emplacement indiqué par le paramètre <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="chars" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> ou <paramref name="charCount" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.  
ou 
 <paramref name="charCount" /> est inférieur au nombre de caractères obtenus.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Décode une séquence d'octets du tableau d'octets spécifié dans le tableau de caractères spécifié.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Tableau de caractères destiné à contenir le jeu de caractères obtenu.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Index auquel commencer l'écriture du jeu de caractères obtenu.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits dans <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="chars" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> est inférieur à zéro.  

ou - 
<paramref name="byteindex" /> et <paramref name="byteCount" /> ne désignent pas une plage valide dans <paramref name="bytes" />.  

ou 
 <paramref name="charIndex" /> n'est pas un index valide dans <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.  
ou 
 <paramref name="chars" /> ne possède pas une capacité suffisante entre <paramref name="charIndex" /> et la fin du tableau pour prendre en charge les caractères obtenus.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.">Obtient un décodeur qui convertit une séquence d'octets encodée en UTF-16 en une séquence de caractères Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.">
        <see cref="T:System.Text.Decoder" /> qui convertit une séquence d'octets encodée en UTF-16 en une séquence de caractères Unicode.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.">Obtient un encodeur qui convertit une séquence de caractères Unicode en une séquence d'octets encodée en UTF-16.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.">Un objet <see cref="T:System.Text.Encoder" /> qui convertit une séquence de caractères Unicode en une séquence d'octets encodée en UTF-16.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Retourne le code de hachage pour l'instance actuelle.</summary>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object.">Code de hachage pour l'objet <see cref="T:System.Text.UnicodeEncoding" /> actuel.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcule le nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcule le nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.">Retourne une marque d'ordre d'octet Unicode au format UTF-16 si le constructeur de cette instance demande une marque d'ordre d'octet.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Tableau d'octets contenant la marque d'ordre d'octet Unicode, si l'objet <see cref="T:System.Text.UnicodeEncoding" /> est configuré pour en fournir une. Sinon, cette méthode retourne un tableau d'octets de longueur égale à zéro.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Décode une plage d'octets d'un tableau d'octets en une chaîne.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object containing the results of decoding the specified sequence of bytes.">Objet <see cref="T:System.String" /> contenant les résultats du décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
ou 
 <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="P:System.Text.UnicodeEncoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-16 format, if this object is configured to supply one.">Obtient une marque d’ordre d’octet Unicode encodée au format UTF-16 si cet objet est configuré pour en fournir une.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.">Étendue d’octets contenant la marque d’ordre d’octet Unicode, si cet objet est configuré pour en fournir un; dans le cas contraire, il s’agit de l’étendue par défaut.</returns>
    </member>
    <member name="T:System.Text.UTF32Encoding">
      <summary vsli:raw="Represents a UTF-32 encoding of Unicode characters.">Représente un encodage UTF-32 de caractères Unicode.</summary>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF32Encoding" />.</summary>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order and whether the &lt;see cref=&quot;M:System.Text.UTF32Encoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF32Encoding" />. Les paramètres indiquent s'il faut utiliser l'ordre d'octet avec primauté des octets de poids fort (big-endian) et si la méthode <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> retourne une marque d'ordre d'octet Unicode.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> pour utiliser l'ordre d'octet avec primauté des octets de poids fort (big-endian) (octet le plus significatif en premier) ou <see langword="false" /> pour utiliser l'ordre d'octet avec primauté des octets de poids faible (little-endian) (octet le moins significatif en premier).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that a Unicode byte order mark is provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier qu'une marque d'ordre d'octet Unicode est fournie ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF32Encoding" />. Les paramètres indiquent s'il faut utiliser l'ordre d'octet avec primauté des octets de poids fort (big-endian), fournir une marque d'ordre d'octet Unicode et lever une exception en cas de détection d'un encodage non valide.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> pour utiliser l'ordre d'octet avec primauté des octets de poids fort (big-endian) (octet le plus significatif en premier) ou <see langword="false" /> pour utiliser l'ordre d'octet avec primauté des octets de poids faible (little-endian) (octet le moins significatif en premier).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that a Unicode byte order mark is provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier qu'une marque d'ordre d'octet Unicode est fournie ; sinon, <see langword="false" />.</param>
      <param name="throwOnInvalidCharacters" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that an exception should be thrown when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier qu'une exception doit être levée quand un encodage non valide est détecté ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF32Encoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Text.UTF32Encoding" /> actuel.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current object.">Objet <see cref="T:System.Object" /> à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> est une instance de <see cref="T:System.Text.UTF32Encoding" /> et s'il est égal à l'objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères commençant au pointeur de caractère spécifié.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Pointeur du premier caractère à encoder.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères du tableau de caractères spécifié.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Tableau de caractères contenant le jeu de caractères à encoder.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
ou 
 <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="chars" />.  
ou 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Calcule le nombre d'octets générés en encodant les caractères dans le <see cref="T:System.String" /> spécifié.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> contenant le jeu de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> construit par défaut est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.">La détection d’erreurs est activée et <paramref name="s" /> contient une séquence de caractères non valide.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Code une séquence de caractères commençant au pointeur de caractère spécifié en une séquence d'octets, qui sera stockée à partir du pointeur d'octet spécifié.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Pointeur du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Pointeur de l'emplacement où commencer l'écriture de la séquence d'octets obtenue.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Nombre maximal d'octets à écrire.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by the &lt;paramref name=&quot;bytes&quot; /&gt; parameter.">Nombre réel d'octets écrits à l'emplacement indiqué par le paramètre <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> est <see langword="null" />.  

ou - 
<paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> ou <paramref name="byteCount" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.  
ou 
 <paramref name="byteCount" /> est inférieur au nombre d'octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Encode un jeu de caractères du tableau de caractères spécifié dans le tableau d'octets indiqué.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Tableau de caractères contenant le jeu de caractères à encoder.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Index auquel commencer l'écriture de la séquence d'octets obtenue.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> est <see langword="null" />.  

ou - 
<paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.  

ou - 
<paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.  
ou 
 <paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Encode un jeu de caractères de la chaîne <see cref="T:System.String" /> spécifiée dans le tableau d'octets indiqué.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> contenant le jeu de caractères à encoder.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Index auquel commencer l'écriture de la séquence d'octets obtenue.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> construit par défaut est <see langword="null" />.  

ou - 
<paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.  

ou - 
<paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou 
 <paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">La détection d’erreurs est activée et <paramref name="s" /> contient une séquence de caractères non valide.  
ou 
 <paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets commençant au pointeur d'octet spécifié.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Pointeur du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> est inférieur à zéro.  
ou 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets du tableau d'octets spécifié.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
ou 
 <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Décode une séquence d'octets commençant au pointeur d'octet spécifié en un jeu de caractères qui sera stocké à partir du pointeur de caractère spécifié.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Pointeur du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Pointeur de l'emplacement où commencer l'écriture du jeu de caractères obtenu.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Nombre maximal de caractères à écrire.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits à l'emplacement indiqué par <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> est <see langword="null" />.  

ou - 
<paramref name="chars" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> ou <paramref name="charCount" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.  

ou - 
<paramref name="charCount" /> est inférieur au nombre de caractères obtenus.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Décode une séquence d'octets du tableau d'octets spécifié dans le tableau de caractères spécifié.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Tableau de caractères destiné à contenir le jeu de caractères obtenu.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Index auquel commencer l'écriture du jeu de caractères obtenu.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits dans <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> construit par défaut est <see langword="null" />.  

ou - 
<paramref name="chars" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> est inférieur à zéro.  

ou - 
<paramref name="byteindex" /> et <paramref name="byteCount" /> ne désignent pas une plage valide dans <paramref name="bytes" />.  

ou - 
<paramref name="charIndex" /> n'est pas un index valide dans <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.  

ou - 
<paramref name="chars" /> ne possède pas une capacité suffisante entre <paramref name="charIndex" /> et la fin du tableau pour prendre en charge les caractères obtenus.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.">Obtient un décodeur qui convertit une séquence d'octets encodée en UTF-32 en une séquence de caractères Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.">
        <see cref="T:System.Text.Decoder" /> qui convertit une séquence d'octets encodée en UTF-32 en une séquence de caractères Unicode.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.">Obtient un encodeur qui convertit une séquence de caractères Unicode en une séquence d'octets encodée en UTF-32.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.">Un <see cref="T:System.Text.Encoder" /> qui convertit une séquence de caractères Unicode en une séquence de caractères UTF-32.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Retourne le code de hachage pour l'instance actuelle.</summary>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object.">Code de hachage pour l'objet <see cref="T:System.Text.UTF32Encoding" /> actuel.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcule le nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> est inférieur à zéro.  
ou 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcule le nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-32 format, if the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object is configured to supply one.">Retourne une marque d'ordre d'octet Unicode encodée au format UTF-32 si l'objet <see cref="T:System.Text.UTF32Encoding" /> est configuré pour en fournir une.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Tableau d'octets contenant la marque d'ordre d'octet Unicode, si l'objet <see cref="T:System.Text.UTF32Encoding" /> est configuré pour en fournir une. Sinon, cette méthode retourne un tableau d'octets de longueur égale à zéro.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Décode une plage d'octets d'un tableau d'octets en une chaîne.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="A string that contains the results of decoding the specified sequence of bytes.">Chaîne contenant les résultats du décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> construit par défaut est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET for a complete explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="P:System.Text.UTF32Encoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-32 format, if this object is configured to supply one.">Obtient une marque d’ordre d’octet Unicode encodée au format UTF-32 si cet objet est configuré pour en fournir une.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, a default span.">Étendue d’octets contenant la marque d’ordre d’octet Unicode, si cet objet est configuré pour en fournir un; dans le cas contraire, il s’agit d’une étendue par défaut.</returns>
    </member>
    <member name="T:System.Text.UTF7Encoding">
      <summary vsli:raw="Represents a UTF-7 encoding of Unicode characters.">Représente un encodage UTF-7 de caractères Unicode.</summary>
    </member>
    <member name="M:System.Text.UTF7Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF7Encoding" />.</summary>
    </member>
    <member name="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; class. A parameter specifies whether to allow optional characters.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF7Encoding" />. Un paramètre spécifie si les caractères facultatifs sont autorisés.</summary>
      <param name="allowOptionals" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that optional characters are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier que les caractères facultatifs sont autorisés ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF7Encoding.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is equal to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Obtient une valeur indiquant si l'objet spécifié est identique à l’objet <see cref="T:System.Text.UTF7Encoding" /> actuel.</summary>
      <param name="value" vsli:raw="An object to compare to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Objet à comparer à l’objet <see cref="T:System.Text.UTF7Encoding" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is a &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object and is equal to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> est un objet <see cref="T:System.Text.UTF7Encoding" /> et s'il est égal à l'objet actuel <see cref="T:System.Text.UTF7Encoding" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères commençant au pointeur de caractère spécifié.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Pointeur du premier caractère à encoder.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic .NET).">
        <paramref name="chars" /> est <see langword="null" /> (<see langword="Nothing" /> en Visual Basic .NET).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="count" /> est inférieur à zéro.  
ou 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères du tableau de caractères spécifié.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Tableau de caractères contenant le jeu de caractères à encoder.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Calcule le nombre d’octets générés en encodant les caractères dans l’objet <see cref="T:System.String" /> spécifié.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object containing the set of characters to encode.">Objet <see cref="T:System.String" /> contenant le jeu de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an int.">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Code une séquence de caractères commençant au pointeur de caractère spécifié en une séquence d'octets, qui sera stockée à partir du pointeur d'octet spécifié.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Pointeur du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Pointeur de l'emplacement où commencer l'écriture de la séquence d'octets obtenue.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Nombre maximal d'octets à écrire.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits à l'emplacement indiqué par <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> ou <paramref name="byteCount" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">
        <paramref name="byteCount" /> est inférieur au nombre d'octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Encode un jeu de caractères du tableau de caractères spécifié dans le tableau d'octets indiqué.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Tableau de caractères contenant le jeu de caractères à encoder.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Index auquel commencer l'écriture de la séquence d'octets obtenue.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.  

ou - 
<paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Encode un jeu de caractères de la chaîne <see cref="T:System.String" /> spécifiée dans le tableau d'octets indiqué.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> contenant le jeu de caractères à encoder.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Index auquel commencer l'écriture de la séquence d'octets obtenue.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).  
ou 
 <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.  

ou - 
<paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou 
 <paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets commençant au pointeur d'octet spécifié.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Pointeur du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="count" /> est inférieur à zéro.  
ou 
Le nombre de caractères résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets du tableau d'octets spécifié.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.  

ou - 
Le nombre de caractères résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Décode une séquence d'octets commençant au pointeur d'octet spécifié en un jeu de caractères qui sera stocké à partir du pointeur de caractère spécifié.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Pointeur du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Pointeur de l'emplacement où commencer l'écriture du jeu de caractères obtenu.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Nombre maximal de caractères à écrire.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits à l'emplacement indiqué par <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).  

ou - 
<paramref name="chars" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> ou <paramref name="charCount" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">
        <paramref name="charCount" /> est inférieur au nombre de caractères obtenus.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Décode une séquence d'octets du tableau d'octets spécifié dans le tableau de caractères spécifié.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Tableau de caractères destiné à contenir le jeu de caractères obtenu.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Index auquel commencer l'écriture du jeu de caractères obtenu.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits dans <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).  
ou 
 <paramref name="chars" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> est inférieur à zéro.  

ou - 
<paramref name="byteindex" /> et <paramref name="byteCount" /> ne désignent pas une plage valide dans <paramref name="bytes" />.  

ou 
 <paramref name="charIndex" /> n'est pas un index valide dans <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">
        <paramref name="chars" /> ne possède pas une capacité suffisante entre <paramref name="charIndex" /> et la fin du tableau pour prendre en charge les caractères obtenus.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.">Obtient un décodeur qui convertit une séquence d’octets encodée en UTF-7 en une séquence de caractères Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.">
        <see cref="T:System.Text.Decoder" /> qui convertit une séquence d’octets encodée en UTF-7 en une séquence de caractères Unicode.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.">Obtient un encodeur qui convertit une séquence de caractères Unicode en une séquence d’octets encodée en UTF-7.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.">Un <see cref="T:System.Text.Encoder" /> qui convertit une séquence de caractères Unicode en une séquence de caractères UTF-7.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Retourne le code de hachage pour l'objet <see cref="T:System.Text.UTF7Encoding" /> actuel.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcule le nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="charCount" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcule le nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="byteCount" /> est inférieur à zéro.  
ou 
Le nombre de caractères résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Décode une plage d'octets d'un tableau d'octets en une chaîne.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">
        <see cref="T:System.String" /> contenant les résultats du décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> a la valeur <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour une explication plus complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="T:System.Text.UTF8Encoding">
      <summary vsli:raw="Represents a UTF-8 encoding of Unicode characters.">Représente un encodage UTF-8 de caractères Unicode.</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF8Encoding" />.</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class. A parameter specifies whether to provide a Unicode byte order mark.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF8Encoding" />. Un paramètre spécifie si une marque d'ordre d'octet Unicode doit être fournie.</summary>
      <param name="encoderShouldEmitUTF8Identifier" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UTF8Encoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier que la méthode <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> retourne une marque d'ordre d'octet Unicode ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class. Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.UTF8Encoding" />. Les paramètres spécifient s'il faut fournir une marque d'ordre d'octet Unicode et si une exception doit être levée quand un encodage non valide est détecté.</summary>
      <param name="encoderShouldEmitUTF8Identifier" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UTF8Encoding.GetPreamble&quot; /&gt; method should return a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier que la méthode <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> doit retourner une marque d'ordre d'octet Unicode ; sinon, <see langword="false" />.</param>
      <param name="throwOnInvalidBytes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour lever une exception lorsqu'un encodage non valide est détecté ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified object is equal to the current &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; object.">Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Text.UTF8Encoding" /> actuel.</summary>
      <param name="value" vsli:raw="The object to compare with the current instance.">Objet à comparer à l'instance actuelle.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> est une instance de <see cref="T:System.Text.UTF8Encoding" /> et s'il est égal à l'objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères commençant au pointeur de caractère spécifié.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Pointeur du premier caractère à encoder.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for a complete explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcule le nombre d'octets produits par l'encodage d'un jeu de caractères du tableau de caractères spécifié.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Tableau de caractères contenant le jeu de caractères à encoder.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
ou 
 <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; property is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
La propriété <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the specified character span.">Calcule le nombre d’octets générés par l’encodage de l’étendue de caractères spécifiée.</summary>
      <param name="chars" vsli:raw="The span that contains the set of characters to encode.">Étendue contenant le jeu de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified character span.">Nombre d’octets produits par l'encodage de l’étendue de caractères spécifiée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Calcule le nombre d'octets générés en encodant les caractères dans le <see cref="T:System.String" /> spécifié.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> contenant le jeu de caractères à encoder.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Nombre d'octets produits par l'encodage des caractères spécifiés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Code une séquence de caractères commençant au pointeur de caractère spécifié en une séquence d'octets, qui sera stockée à partir du pointeur d'octet spécifié.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Pointeur du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Pointeur de l'emplacement où commencer l'écriture de la séquence d'octets obtenue.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Nombre maximal d'octets à écrire.</param>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits à l'emplacement indiqué par <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> est <see langword="null" />.  

ou - 
<paramref name="bytes" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> ou <paramref name="byteCount" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.  

ou - 
<paramref name="byteCount" /> est inférieur au nombre d'octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Encode un jeu de caractères du tableau de caractères spécifié dans le tableau d'octets indiqué.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Tableau de caractères contenant le jeu de caractères à encoder.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Index auquel commencer l'écriture de la séquence d'octets obtenue.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="bytes" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.  

ou - 
<paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">La détection d’erreurs est activée et <paramref name="chars" /> contient une séquence de caractères non valide.  

ou - 
<paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})">
      <summary vsli:raw="Encodes the specified character span into the specified byte span.">Encode l’étendue de caractères spécifiée dans l’étendue d’octets spécifiée.</summary>
      <param name="chars" vsli:raw="The character span to encode.">Étendue de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The span to contain the resulting set of bytes.">Étendue pour contenir le jeu d’octets obtenu.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Encode un jeu de caractères de la chaîne <see cref="T:System.String" /> spécifiée dans le tableau d'octets indiqué.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> contenant le jeu de caractères à encoder.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Index du premier caractère à encoder.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Tableau d'octets destiné à contenir la séquence d'octets obtenue.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Index auquel commencer l'écriture de la séquence d'octets obtenue.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Nombre réel d'octets écrits dans <paramref name="bytes" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="bytes" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="charIndex" />, <paramref name="charCount" /> ou <paramref name="byteIndex" /> est inférieur à zéro.  

ou - 
<paramref name="charIndex" /> et <paramref name="charCount" /> ne désignent pas une plage valide dans <paramref name="chars" />.  

ou - 
<paramref name="byteIndex" /> n'est pas un index valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">La détection d’erreurs est activée et <paramref name="s" /> contient une séquence de caractères non valide.  
ou 
 <paramref name="bytes" /> ne possède pas une capacité suffisante entre <paramref name="byteIndex" /> et la fin du tableau pour prendre en charge les octets obtenus.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets commençant au pointeur d'octet spécifié.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Pointeur du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> est inférieur à zéro.  
ou 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcule le nombre de caractères produits par le décodage d'une séquence d'octets du tableau d'octets spécifié.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Nombre de caractères produits par le décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
ou 
 <paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Calculates the number of characters produced by decoding the specified byte span.">Calcule le nombre de caractères produits par le décodage de l’étendue d’octets spécifiée.</summary>
      <param name="bytes" vsli:raw="The span containing the set of bytes to decode.">Étendue contenant le jeu d’octets à décoder.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified byte span.">Nombre de caractères produits par le décodage de l’étendue d’octets spécifiée.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Décode une séquence d'octets commençant au pointeur d'octet spécifié en un jeu de caractères qui sera stocké à partir du pointeur de caractère spécifié.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Pointeur du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Pointeur de l'emplacement où commencer l'écriture du jeu de caractères obtenu.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Nombre maximal de caractères à écrire.</param>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits à l'emplacement indiqué par <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="chars" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> ou <paramref name="charCount" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.  

ou - 
<paramref name="charCount" /> est inférieur au nombre de caractères obtenus.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Décode une séquence d'octets du tableau d'octets spécifié dans le tableau de caractères spécifié.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Tableau de caractères destiné à contenir le jeu de caractères obtenu.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Index auquel commencer l'écriture du jeu de caractères obtenu.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits dans <paramref name="chars" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="chars" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> ou <paramref name="charIndex" /> est inférieur à zéro.  

ou - 
<paramref name="byteindex" /> et <paramref name="byteCount" /> ne désignent pas une plage valide dans <paramref name="bytes" />.  

ou - 
<paramref name="charIndex" /> n'est pas un index valide dans <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.  
ou 
 <paramref name="chars" /> ne possède pas une capacité suffisante entre <paramref name="charIndex" /> et la fin du tableau pour prendre en charge les caractères obtenus.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})">
      <summary vsli:raw="Decodes the specified byte span into the specified character span.">Décode l’étendue d’octets spécifiée dans l’étendue de caractères spécifiée.</summary>
      <param name="bytes" vsli:raw="The span containing the bytes to decode.">Étendue contenant les octets à décoder.</param>
      <param name="chars" vsli:raw="The span to contain the resulting set of characters.">Étendue pour contenir le jeu de caractères obtenu.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Nombre réel de caractères écrits dans <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.">Obtient un décodeur qui convertit une séquence d'octets encodée en UTF-8 en une séquence de caractères Unicode.</summary>
      <returns vsli:raw="A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.">Décodeur qui convertit une séquence d'octets encodée en UTF-8 en une séquence de caractères Unicode.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.">Obtient un encodeur qui convertit une séquence de caractères Unicode en une séquence d'octets encodée en UTF-8.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.">Un <see cref="T:System.Text.Encoder" /> qui convertit une séquence de caractères Unicode en une séquence de caractères UTF-8.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Retourne le code de hachage pour l'instance actuelle.</summary>
      <returns vsli:raw="The hash code for the current instance.">Code de hachage de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcule le nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Nombre de caractères à encoder.</param>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Nombre maximal d'octets produits par l'encodage du nombre de caractères spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.EncoderFallback" /> a la valeur <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcule le nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Nombre maximal de caractères produits par le décodage du nombre d'octets spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> est inférieur à zéro.  

ou - 
Le nombre d’octets résultant est supérieur au nombre maximal accepté pour un entier.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-8 format, if the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; encoding object is configured to supply one.">Retourne une marque d'ordre d'octet Unicode au format UTF-8, si l'objet de codage <see cref="T:System.Text.UTF8Encoding" /> est configuré pour en fournir une.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; encoding object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Tableau d'octets contenant la marque d'ordre d'octet Unicode, si l'objet de codage <see cref="T:System.Text.UTF8Encoding" /> est configuré pour en fournir une. Sinon, cette méthode retourne un tableau d'octets de longueur égale à zéro.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Décode une plage d'octets d'un tableau d'octets en une chaîne.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Tableau d'octets contenant la séquence d'octets à décoder.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Index du premier octet à décoder.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Nombre d'octets à décoder.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">
        <see cref="T:System.String" /> contenant les résultats du décodage de la séquence d'octets spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> et <paramref name="count" /> ne désignent pas une plage valide dans <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">La détection d’erreurs est activée et <paramref name="bytes" /> contient une séquence d’octets non valide.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Une procédure de secours a eu lieu (consultez Encodage de caractères dans le .NET Framework pour obtenir une explication complète) 
-et- 
 <see cref="P:System.Text.Encoding.DecoderFallback" /> a la valeur <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
    </member>
    <member name="P:System.Text.UTF8Encoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-8 format, if this object is configured to supply one.">Obtient une marque d’ordre d’octet Unicode encodée au format UTF-8 si cet objet est configuré pour en fournir une.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.">Étendue d’octets contenant la marque d’ordre d’octet Unicode, si cet objet est configuré pour en fournir un; dans le cas contraire, il s’agit de l’étendue par défaut.</returns>
    </member>
  </members>
</doc>