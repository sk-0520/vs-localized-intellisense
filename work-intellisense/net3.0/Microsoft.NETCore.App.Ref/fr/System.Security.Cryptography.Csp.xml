<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Csp</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.AesCryptoServiceProvider">
      <summary>Exécute un chiffrement et un déchiffrement symétriques à l'aide de l'implémentation CAPI (Cryptographic Application Programming Interfaces) de l'algorithme AES (Advanced Encryption Standard).</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.AesCryptoServiceProvider" />.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Il n'y a aucune taille de clé prise en charge pour la plateforme actuelle.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.BlockSize" />
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor">
      <summary>Crée un objet déchiffreur AES symétrique avec la clé et le vecteur d'initialisation actuels.</summary>
      <returns>Objet déchiffreur AES symétrique.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La clé actuelle n'est pas valide ou est absente.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Crée un objet déchiffreur AES symétrique avec la clé et le vecteur d'initialisation spécifiés.</summary>
      <param name="rgbKey">Clé secrète à utiliser pour l'algorithme symétrique.</param>
      <param name="rgbIV">Vecteur d'initialisation à utiliser pour l'algorithme symétrique.</param>
      <returns>Objet déchiffreur AES symétrique.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ou <paramref name="iv" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor">
      <summary>Crée un objet chiffreur AES symétrique avec la clé et le vecteur d'initialisation actuels.</summary>
      <returns>Objet chiffreur symétrique AES.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Crée un objet chiffreur symétrique avec la clé et le vecteur d'initialisation spécifiés.</summary>
      <param name="rgbKey">Clé secrète à utiliser pour l'algorithme symétrique.</param>
      <param name="rgbIV">Vecteur d'initialisation à utiliser pour l'algorithme symétrique.</param>
      <returns>Objet chiffreur symétrique AES.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="key" /> ou <paramref name="iv" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> n'est pas valide.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.FeedbackSize" />
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV">
      <summary>Génère un vecteur d'initialisation aléatoire à utiliser pour l'algorithme.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le vecteur d'initialisation n'a pas pu être généré.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey">
      <summary>Génère une clé aléatoire à utiliser pour l'algorithme.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La clé n'a pas pu être générée.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.IV" />
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.Key">
      <summary>Obtient ou définit la clé symétrique utilisée pour le chiffrement et le déchiffrement.</summary>
      <returns>La clé symétrique utilisée pour le chiffrement et le déchiffrement.</returns>
      <exception cref="T:System.ArgumentNullException">La de la clé est <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La taille de la clé n'est pas valide.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.KeySize">
      <summary>Obtient ou définit la taille, en bits, de la clé secrète.</summary>
      <returns>La taille de la clé en bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.LegalBlockSizes" />
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.LegalKeySizes" />
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.Mode" />
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.Padding" />
    <member name="T:System.Security.Cryptography.CspKeyContainerInfo">
      <summary>Fournit des informations supplémentaires sur une paire de clés de chiffrement. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> à l'aide des paramètres spécifiés.</summary>
      <param name="parameters">Un objet <see cref="T:System.Security.Cryptography.CspParameters" /> qui fournit des informations sur la clé.</param>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Accessible">
      <summary>Obtient une valeur qui indique si une clé dans un conteneur de clé est accessible.</summary>
      <returns>
        <see langword="true" /> si la clé est accessible ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.NotSupportedException">Le type de clé n'est pas pris en charge.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Exportable">
      <summary>Obtient une valeur qui indique si une clé peut être exportée d'un conteneur de clé.</summary>
      <returns>
        <see langword="true" /> si la clé peut être exportée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.NotSupportedException">Le type de clé n'est pas pris en charge.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement est introuvable.  
 ou  
 Impossible de trouver le conteneur de clé.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice">
      <summary>Obtient une valeur qui indique si une clé est une clé matérielle.</summary>
      <returns>
        <see langword="true" /> si la clé est une clé matérielle ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement est introuvable.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName">
      <summary>Obtient un nom de conteneur de clé.</summary>
      <returns>Nom du conteneur de clé.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber">
      <summary>Obtient une valeur qui décrit si une clé asymétrique a été créée en tant que clé de signature ou clé d'échange.</summary>
      <returns>Une des valeurs <see cref="T:System.Security.Cryptography.KeyNumber" /> qui décrit si une clé asymétrique a été créée en tant que clé de signature ou clé d'échange.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore">
      <summary>Obtient une valeur qui indique si une clé provient d'un jeu de clés ordinateur.</summary>
      <returns>
        <see langword="true" /> si la clé provient du jeu de clés ordinateur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Protected">
      <summary>Obtient une valeur qui indique si une paire de clés est protégée.</summary>
      <returns>
        <see langword="true" /> si la paire de clés est protégée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.NotSupportedException">Le type de clé n'est pas pris en charge.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement est introuvable.  
 ou  
 Impossible de trouver le conteneur de clé.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderName">
      <summary>Obtient le nom de fournisseur d'une clé.</summary>
      <returns>Nom du fournisseur.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderType">
      <summary>Obtient le type de fournisseur d'une clé.</summary>
      <returns>Type du fournisseur. La valeur par défaut est 1.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated">
      <summary>Obtient une valeur qui indique si un conteneur de clé a été généré aléatoirement par une classe de chiffrement managée.</summary>
      <returns>
        <see langword="true" /> si le conteneur de clé a été généré aléatoirement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Removable">
      <summary>Obtient une valeur qui indique si une clé peut être supprimée d'un conteneur de clé.</summary>
      <returns>
        <see langword="true" /> si la clé peut être supprimée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement est introuvable.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName">
      <summary>Obtient un nom de conteneur de clé unique.</summary>
      <returns>Le nom de conteneur de clé unique.</returns>
      <exception cref="T:System.NotSupportedException">Le type de clé n'est pas pris en charge.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement est introuvable.  

ou -  

 Impossible de trouver le conteneur de clé.</exception>
    </member>
    <member name="T:System.Security.Cryptography.CspParameters">
      <summary>Contient les paramètres passés au fournisseur de services de chiffrement (CSP) qui effectue les calculs de chiffrement. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.CspParameters" /> avec le code du type de fournisseur spécifié.</summary>
      <param name="dwTypeIn">Code du type de fournisseur qui spécifie le type de fournisseur à créer.</param>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.CspParameters" /> avec le code et le nom du type de fournisseur spécifié.</summary>
      <param name="dwTypeIn">Code du type de fournisseur qui spécifie le type de fournisseur à créer.</param>
      <param name="strProviderNameIn">Nom du fournisseur.</param>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.CspParameters" /> avec le code et le nom du type de fournisseur spécifié, ainsi que le nom du conteneur spécifié.</summary>
      <param name="dwTypeIn">Code du type de fournisseur qui spécifie le type de fournisseur à créer.</param>
      <param name="strProviderNameIn">Nom du fournisseur.</param>
      <param name="strContainerNameIn">Nom du conteneur.</param>
    </member>
    <member name="P:System.Security.Cryptography.CspParameters.Flags">
      <summary>Représente les indicateurs de <see cref="T:System.Security.Cryptography.CspParameters" /> qui modifient le comportement du fournisseur de services de chiffrement (CSP).</summary>
      <returns>Valeur d'énumération ou combinaison d'opérations de bits de valeurs d'énumération.</returns>
      <exception cref="T:System.ArgumentException">La valeur n'est pas une valeur d'énumération valide.</exception>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.KeyContainerName">
      <summary>Représente le nom du conteneur de clé pour <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.KeyNumber">
      <summary>Spécifie si une clé asymétrique est créée en tant que clé de signature ou clé d'échange.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CspParameters.KeyPassword">
      <summary>Obtient ou définit un mot de passe associé à une clé de carte à puce.</summary>
      <returns>Mot de passe associé à une clé de carte à puce.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspParameters.ParentWindowHandle">
      <summary>Obtient ou définit un handle vers la fenêtre parente non managée d'une boîte de dialogue pour mot de passe d'accès à une carte à puce.</summary>
      <returns>Handle vers la fenêtre parente dans une boîte de dialogue pour mot de passe d'accès à une carte à puce.</returns>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.ProviderName">
      <summary>Représente le nom du fournisseur pour <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.ProviderType">
      <summary>Représente le code du type de fournisseur pour <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CspProviderFlags">
      <summary>Spécifie les indicateurs qui modifient le comportement des fournisseurs de services de chiffrement (CSP).</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.CreateEphemeralKey">
      <summary>Créez une clé temporaire qui est libérée lorsque l'objet RSA (Rivest-Shamir-Adleman) associé est fermé. N'utilisez pas cet indicateur si vous souhaitez que votre clé soit indépendante de l'objet RSA.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.NoFlags">
      <summary>Ne spécifiez pas de paramètres.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.NoPrompt">
      <summary>Empêchez le CSP d'afficher toute interface utilisateur dans ce contexte.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseArchivableKey">
      <summary>Autorisez l'exportation d'une clé à des fins d'archivage ou de récupération.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseDefaultKeyContainer">
      <summary>Utilisez les informations de clés du conteneur de clé par défaut.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseExistingKey">
      <summary>Utilisez les informations de clés de la clé actuelle.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore">
      <summary>Utilisez les informations de clés du magasin de clés de l'ordinateur.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseNonExportableKey">
      <summary>Utilisez les informations de clés qui ne peuvent pas être exportées.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseUserProtectedKey">
      <summary>Notifiez l'utilisateur à l'aide d'une boîte de dialogue ou d'une autre méthode lorsque certaines actions essaient d'utiliser une clé.  Cet indicateur n'est pas compatible avec l'indicateur <see cref="F:System.Security.Cryptography.CspProviderFlags.NoPrompt" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.DESCryptoServiceProvider">
      <summary>Définit un objet de wrapper pour accéder à la version du fournisseur de services de chiffrement (CSP) de l'algorithme Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />). Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.DESCryptoServiceProvider" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) n'est pas disponible.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor" />
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Crée un objet déchiffreur Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) symétrique avec la clé spécifiée (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) et le vecteur d'initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Clé secrète à utiliser pour l'algorithme symétrique.</param>
      <param name="rgbIV">Vecteur d'initialisation à utiliser pour l'algorithme symétrique.</param>
      <returns>Objet déchiffreur <see cref="T:System.Security.Cryptography.DES" /> symétrique.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La valeur de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> est <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.  
ou 
La valeur de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> est <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> et la valeur de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> n'est pas 8.  
ou 
Une taille de clé non valide a été utilisée.  
ou 
La taille de la clé d'algorithme n'était pas disponible.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor" />
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Crée un objet chiffreur Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) symétrique avec la clé spécifiée (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) et le vecteur d'initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Clé secrète à utiliser pour l'algorithme symétrique.</param>
      <param name="rgbIV">Vecteur d'initialisation à utiliser pour l'algorithme symétrique.</param>
      <returns>Objet chiffreur <see cref="T:System.Security.Cryptography.DES" /> symétrique.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La valeur de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> est <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.  
ou 
La valeur de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> est <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> et la valeur de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> n'est pas 8.  
ou 
Une taille de clé non valide a été utilisée.  

ou - 
La taille de la clé d'algorithme n'était pas disponible.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV">
      <summary>Génère un vecteur d'initialisation aléatoire (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) à utiliser pour l'algorithme.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey">
      <summary>Génère une clé aléatoire (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) à utiliser pour l'algorithme.</summary>
    </member>
    <member name="T:System.Security.Cryptography.DSACryptoServiceProvider">
      <summary>Définit un objet de wrapper pour accéder à l'implémentation du fournisseur de services de chiffrement (CSP) de l'algorithme <see cref="T:System.Security.Cryptography.DSA" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> avec la taille de clé spécifiée.</summary>
      <param name="dwKeySize">Taille de la clé utilisée par l'algorithme asymétrique en bits.</param>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> avec la taille de clé et les paramètres spécifiés pour le fournisseur de services de chiffrement (CSP).</summary>
      <param name="dwKeySize">Taille de la clé utilisée par l'algorithme de chiffrement en bits.</param>
      <param name="parameters">Paramètres pour le CSP.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Impossible d'acquérir le CSP.  

ou -  

 Impossible de créer la clé.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dwKeySize" /> est hors limites.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> avec les paramètres spécifiés pour le fournisseur de services de chiffrement (CSP).</summary>
      <param name="parameters">Paramètres pour le CSP.</param>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature(System.Byte[])">
      <summary>Crée la signature <see cref="T:System.Security.Cryptography.DSA" /> pour les données spécifiées.</summary>
      <param name="rgbHash">Données à signer.</param>
      <returns>Signature numérique pour les données spécifiées.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo">
      <summary>Obtient un objet <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> qui comprend des informations supplémentaires concernant une paire de clés de chiffrement.</summary>
      <returns>Objet <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> qui comprend des informations supplémentaires concernant une paire de clés de chiffrement.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
      <summary>Exporte un blob qui contient les informations de clés associées à un objet <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> pour inclure la clé privée ; sinon, <see langword="false" />.</param>
      <returns>Tableau d'octets qui contient les informations de clés associées à un objet <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)">
      <summary>Exporte les <see cref="T:System.Security.Cryptography.DSAParameters" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> pour inclure les paramètres privés ; sinon <see langword="false" />.</param>
      <returns>Paramètres pour <see cref="T:System.Security.Cryptography.DSA" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Impossible d'exporter la clé.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
      <summary>Importe un blob qui représente les informations relatives aux clés DSA.</summary>
      <param name="keyBlob">Tableau d'octets qui représente un blob de clés DSA.</param>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
      <summary>Importe les <see cref="T:System.Security.Cryptography.DSAParameters" /> spécifiés.</summary>
      <param name="parameters">Paramètres pour <see cref="T:System.Security.Cryptography.DSA" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.  

ou - 
Il manque des champs dans le paramètre <paramref name="parameters" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.KeyExchangeAlgorithm">
      <summary>Obtient le nom de l'algorithme d'échange de clés.</summary>
      <returns>Nom de l'algorithme d'échange de clés.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize">
      <summary>Obtient la taille de la clé utilisée par l'algorithme asymétrique en bits.</summary>
      <returns>Taille de la clé utilisée par l'algorithme asymétrique.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.LegalKeySizes">
      <summary>Obtient les tailles de clé prises en charge par l'algorithme asymétrique.</summary>
      <returns>Seules les tailles de clé qui correspondent à une entrée de ce tableau sont prises en charge par l'algorithme asymétrique.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
      <summary>Obtient ou définit une valeur qui indique si la clé doit être persistante dans le fournisseur de services de chiffrement (CSP).</summary>
      <returns>
        <see langword="true" /> si la clé doit être persistante dans le CSP ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly">
      <summary>Obtient une valeur qui indique si l'objet <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> ne contient qu'une clé publique.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> ne contient qu'une clé publique ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.SignatureAlgorithm">
      <summary>Obtient le nom de l'algorithme de signature.</summary>
      <returns>Nom de l'algorithme de signature.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])">
      <summary>Calcule la valeur de hachage du tableau d'octets spécifié et signe la valeur de hachage résultante.</summary>
      <param name="buffer">Données d'entrée pour lesquelles calculer le hachage.</param>
      <returns>Signature <see cref="T:System.Security.Cryptography.DSA" /> des données spécifiées.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)">
      <summary>Signe un tableau d'octets depuis le point de départ spécifié jusqu'au point de terminaison spécifié.</summary>
      <param name="buffer">Données d'entrée à signer.</param>
      <param name="offset">Offset dans le tableau à partir duquel l'utilisation des données commence.</param>
      <param name="count">Nombre d'octets dans le tableau à utiliser comme données.</param>
      <returns>Signature <see cref="T:System.Security.Cryptography.DSA" /> des données spécifiées.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)">
      <summary>Calcule la valeur de hachage du flux d'entrée spécifié et signe la valeur de hachage résultante.</summary>
      <param name="inputStream">Données d'entrée pour lesquelles calculer le hachage.</param>
      <returns>Signature <see cref="T:System.Security.Cryptography.DSA" /> des données spécifiées.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
      <summary>Calcule la signature pour la valeur de hachage spécifiée en la chiffrant avec la clé privée.</summary>
      <param name="rgbHash">Valeur de hachage des données à signer.</param>
      <param name="str">Nom de l'algorithme de hachage utilisé pour créer la valeur de hachage des données.</param>
      <returns>Signature <see cref="T:System.Security.Cryptography.DSA" /> de la valeur de hachage spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rgbHash" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.  
 ou  
 Il n'existe aucune clé privée.</exception>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore">
      <summary>Obtient ou définit une valeur qui indique si la clé doit être persistante dans le magasin de clés de l'ordinateur plutôt que dans celui des profils utilisateur.</summary>
      <returns>
        <see langword="true" /> si la clé doit être persistante dans le magasin de clés de l'ordinateur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])">
      <summary>Vérifie les données de signature spécifiées en les comparant à la signature calculée pour les données spécifiées.</summary>
      <param name="rgbData">les données qui ont été signées ;</param>
      <param name="rgbSignature">Données de la signature à vérifier.</param>
      <returns>
        <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
      <summary>Vérifie les données de signature spécifiées en les comparant à la signature calculée pour la valeur de hachage spécifiée.</summary>
      <param name="rgbHash">Valeur de hachage des données à signer.</param>
      <param name="str">Nom de l'algorithme de hachage utilisé pour créer la valeur de hachage des données.</param>
      <param name="rgbSignature">Données de la signature à vérifier.</param>
      <returns>
        <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rgbHash" /> a la valeur <see langword="null" />.  

ou - 
Le paramètre <paramref name="rgbSignature" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.  

ou -  

 Impossible de vérifier la signature.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])">
      <summary>Vérifie la signature <see cref="T:System.Security.Cryptography.DSA" /> pour les données spécifiées.</summary>
      <param name="rgbHash">Données de signature <paramref name="rgbSignature" />.</param>
      <param name="rgbSignature">Signature qui doit être vérifiée pour <paramref name="rgbData" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="rgbSignature" /> correspond à la signature calculée à l'aide de l'algorithme de hachage et de la clé spécifiés sur <paramref name="rgbHash" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ICspAsymmetricAlgorithm">
      <summary>Définit des méthodes qui permettent à une classe <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> d’énumérer les informations du conteneur de clé ainsi que d’importer et d’exporter des objets blob de clé compatibles avec Microsoft Cryptography API (CAPI).</summary>
    </member>
    <member name="P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo">
      <summary>Obtient un objet <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> qui comprend des informations supplémentaires concernant une paire de clés de chiffrement.</summary>
      <returns>Objet <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> qui comprend des informations supplémentaires concernant une paire de clés de chiffrement.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)">
      <summary>Exporte un blob qui contient les informations de clés associées à un objet <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> pour inclure la clé privée ; sinon, <see langword="false" />.</param>
      <returns>Tableau d'octets qui contient les informations de clés associées à un objet <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])">
      <summary>Importe un blob qui représente des informations de clés asymétriques.</summary>
      <param name="rawData">Tableau d'octets qui représente un blob de clé asymétrique.</param>
    </member>
    <member name="T:System.Security.Cryptography.KeyNumber">
      <summary>Spécifie s'il convient de créer une clé de signature asymétrique ou une clé d'échange asymétrique.</summary>
    </member>
    <member name="F:System.Security.Cryptography.KeyNumber.Exchange">
      <summary>Paire de clés d'échange utilisée pour chiffrer les clés de session de sorte qu'elles puissent être stockées et échangées sans risque avec d'autres utilisateurs. Cette valeur correspond à la valeur AT_KEYEXCHANGE utilisée dans l’API Microsoft Cryptographic API (CAPI) non managée.</summary>
    </member>
    <member name="F:System.Security.Cryptography.KeyNumber.Signature">
      <summary>Paire de clés de signature utilisée pour authentifier numériquement les messages ou les fichiers signés. Cette valeur correspond à la valeur AT_SIGNATURE utilisée dans l’API Microsoft Cryptographic API (CAPI) non managée.</summary>
    </member>
    <member name="T:System.Security.Cryptography.MD5CryptoServiceProvider">
      <summary>Calcule la valeur de hachage <see cref="T:System.Security.Cryptography.MD5" /> pour les données d'entrée à l'aide de l'implémentation fournie par le fournisseur de services de chiffrement (CSP). Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.MD5CryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" />.</summary>
      <exception cref="T:System.InvalidOperationException">Aucune stratégie d'algorithme compatible FIPS n'est utilisée.</exception>
    </member>
    <member name="M:System.Security.Cryptography.MD5CryptoServiceProvider.Initialize">
      <summary>Initialise une instance de <see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.PasswordDeriveBytes">
      <summary>Dérive une clé d'un mot de passe à l'aide d'une extension de l'algorithme PBKDF1.</summary>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> avec le mot de passe et le salt de clé à utiliser pour dériver la clé.</summary>
      <param name="password">Mot de passe pour lequel dériver la clé.</param>
      <param name="salt">Salt de clé à utiliser pour dériver la clé.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> avec le mot de passe, le salt de clé et le fournisseur de services de chiffrement (CSP) à utiliser pour dériver la clé.</summary>
      <param name="password">Mot de passe pour lequel dériver la clé.</param>
      <param name="salt">Salt de clé à utiliser pour dériver la clé.</param>
      <param name="cspParams">Paramètres du fournisseur de services de chiffrement (CSP) pour l'opération.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> avec le mot de passe, le salt de clé, le nom de hachage et le nombre d'itérations à utiliser pour dériver la clé.</summary>
      <param name="password">Mot de passe pour lequel dériver la clé.</param>
      <param name="salt">Salt de clé à utiliser pour dériver la clé.</param>
      <param name="hashName">Algorithme de hachage à utiliser pour dériver la clé.</param>
      <param name="iterations">Nombre d'itérations à utiliser pour dériver la clé.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> avec le mot de passe, le salt de clé, le nom de hachage, les itérations et le fournisseur de services de chiffrement (CSP) à utiliser pour dériver la clé.</summary>
      <param name="password">Mot de passe pour lequel dériver la clé.</param>
      <param name="salt">Salt de clé à utiliser pour dériver la clé.</param>
      <param name="hashName">Algorithme de hachage à utiliser pour dériver la clé.</param>
      <param name="iterations">Nombre d'itérations à utiliser pour dériver la clé.</param>
      <param name="cspParams">Paramètres du fournisseur de services de chiffrement (CSP) pour l'opération.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> avec le mot de passe et le salt de clé à utiliser pour dériver la clé.</summary>
      <param name="strPassword">Mot de passe pour lequel la clé doit être dérivée.</param>
      <param name="rgbSalt">Salt de clé à utiliser pour dériver la clé.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> avec le mot de passe, le salt de clé et les paramètres du fournisseur de services de chiffrement (CSP) à utiliser pour dériver la clé.</summary>
      <param name="strPassword">Mot de passe pour lequel la clé doit être dérivée.</param>
      <param name="rgbSalt">Salt de clé à utiliser pour dériver la clé.</param>
      <param name="cspParams">Paramètres du CSP pour l'opération.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> avec le mot de passe, le salt de clé, le nom de hachage et le nombre d'itérations à utiliser pour dériver la clé.</summary>
      <param name="strPassword">Mot de passe pour lequel la clé doit être dérivée.</param>
      <param name="rgbSalt">Salt de clé à utiliser pour dériver la clé.</param>
      <param name="strHashName">Nom de l'algorithme de hachage pour l'opération.</param>
      <param name="iterations">Nombre d'itérations pour l'opération.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> avec le mot de passe, le salt de clé, le nom de l'algorithme de hachage, le nombre d'itérations et les paramètres du fournisseur de services de chiffrement (CSP) à utiliser pour dériver la clé.</summary>
      <param name="strPassword">Mot de passe pour lequel la clé doit être dérivée.</param>
      <param name="rgbSalt">Salt de clé à utiliser pour dériver la clé.</param>
      <param name="strHashName">Nom de l'algorithme de hachage pour l'opération.</param>
      <param name="iterations">Nombre d'itérations pour l'opération.</param>
      <param name="cspParams">Paramètres du CSP pour l'opération.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
      <summary>Dérive une clé de chiffrement de l'objet <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />.</summary>
      <param name="algname">Nom de l'algorithme pour lequel la clé doit être dérivée.</param>
      <param name="alghashname">Nom de l'algorithme de hachage à utiliser pour dériver la clé.</param>
      <param name="keySize">Taille de la clé à dériver, en bits.</param>
      <param name="rgbIV">Vecteur d'initialisation (IV) à utiliser pour dériver la clé.</param>
      <returns>Clé dérivée.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le paramètre <paramref name="keySize" /> est incorrect.  
ou 
Le fournisseur de services de chiffrement ne peut pas être acquis.  

ou - 
Le paramètre <paramref name="algname" /> n'est pas un nom d'algorithme valide.  

ou 
Le paramètre <paramref name="alghashname" /> n'est pas un nom d'algorithme de hachage valide.</exception>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par la classe <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)">
      <summary>Retourne les octets de clé pseudo-aléatoires.</summary>
      <param name="cb">Nombre d'octets de clé pseudo-aléatoires à générer.</param>
      <returns>Tableau d'octets rempli avec des octets de clé pseudo-aléatoires.</returns>
    </member>
    <member name="P:System.Security.Cryptography.PasswordDeriveBytes.HashName">
      <summary>Obtient ou définit le nom de l'algorithme de hachage pour l'opération.</summary>
      <returns>Nom de l'algorithme de hachage pour l'opération.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le nom de la valeur de hachage est fixe et une tentative est effectuée pour modifier cette valeur.</exception>
    </member>
    <member name="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount">
      <summary>Obtient ou définit le nombre d'itérations pour l'opération.</summary>
      <returns>Nombre d'itérations pour l'opération.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le nombre d'itérations est fixe et une tentative est effectuée pour modifier cette valeur.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La propriété ne peut pas être définie, car sa valeur est hors limites. Cette propriété requiert un nombre non négatif.</exception>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.Reset">
      <summary>Rétablit l'état de l'opération.</summary>
    </member>
    <member name="P:System.Security.Cryptography.PasswordDeriveBytes.Salt">
      <summary>Obtient ou définit la valeur salt de clé pour l'opération.</summary>
      <returns>Valeur salt de clé pour l'opération.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La valeur salt de clé est fixe et une tentative est effectuée pour modifier cette valeur.</exception>
    </member>
    <member name="T:System.Security.Cryptography.RC2CryptoServiceProvider">
      <summary>Définit un objet de wrapper pour accéder à l'implémentation du fournisseur de services de chiffrement (CSP) de l'algorithme <see cref="T:System.Security.Cryptography.RC2" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.RC2CryptoServiceProvider" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.</exception>
      <exception cref="T:System.InvalidOperationException">Un algorithme FIPS non conforme a été trouvé.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Crée un objet déchiffreur <see cref="T:System.Security.Cryptography.RC2" /> symétrique avec la clé spécifiée (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) et le vecteur d’initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Clé secrète à utiliser pour l'algorithme symétrique.</param>
      <param name="rgbIV">Vecteur d'initialisation à utiliser pour l'algorithme symétrique.</param>
      <returns>Objet déchiffreur <see cref="T:System.Security.Cryptography.RC2" /> symétrique.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Un mode de chiffrement <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> a été utilisé.  
ou 
Un mode de chiffrement <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> avec une taille de commentaires différente de 8 bits a été utilisé.  

ou - 
Une taille de clé non valide a été utilisée.  

ou - 
La taille de la clé d'algorithme n'était pas disponible.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Crée un objet chiffreur <see cref="T:System.Security.Cryptography.RC2" /> symétrique avec la clé spécifiée (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) et le vecteur d'initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Clé secrète à utiliser pour l'algorithme symétrique.</param>
      <param name="rgbIV">Vecteur d'initialisation à utiliser pour l'algorithme symétrique.</param>
      <returns>Objet chiffreur <see cref="T:System.Security.Cryptography.RC2" /> symétrique.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Un mode de chiffrement <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> a été utilisé.  

ou - 
Un mode de chiffrement <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> avec une taille de commentaires différente de 8 bits a été utilisé.  

ou - 
Une taille de clé non valide a été utilisée.  


ou 
La taille de la clé d'algorithme n'était pas disponible.</exception>
    </member>
    <member name="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize">
      <summary>Obtient ou définit la taille effective, en bits, de la clé secrète utilisée par l'algorithme <see cref="T:System.Security.Cryptography.RC2" />.</summary>
      <returns>Taille effective de la clé, en bits, utilisée par l'algorithme <see cref="T:System.Security.Cryptography.RC2" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">La propriété <see cref="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" /> a été définie à une valeur autre que la propriété <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV">
      <summary>Génère un vecteur d'initialisation aléatoire (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) à utiliser pour l'algorithme.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey">
      <summary>Génère une clé aléatoire (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) à utiliser pour l'algorithme.</summary>
    </member>
    <member name="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt">
      <summary>Obtient ou définit une valeur qui détermine l'opportunité de créer une clé avec un salt de valeur zéro et de 11 octets de longueur.</summary>
      <returns>
        <see langword="true" /> si la clé doit être créée avec un salt de valeur zéro et de 11 octets de longueur ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.RNGCryptoServiceProvider">
      <summary>Implémente un générateur de nombres aléatoires (RNG) de chiffrement à l'aide de l'implémentation fournie par le fournisseur de services de chiffrement (CSP). Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" />.</summary>
      <param name="rgb">Tableau d'octets. Cette valeur est ignorée.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /> avec les paramètres spécifiés.</summary>
      <param name="cspParams">Paramètres à passer au fournisseur de services de chiffrement (CSP).</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" />.</summary>
      <param name="str">Entrée de chaîne. Ce paramètre est ignoré.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
      <summary>Remplit un tableau d'octets avec une séquence de valeurs aléatoires forte du point de vue du chiffrement.</summary>
      <param name="data">Tableau à remplir avec une séquence de valeurs aléatoires forte du point de vue du chiffrement.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Remplit le tableau d’octets spécifié avec une séquence de valeurs aléatoires fortes du point de vue du chiffrement, en commençant à un index spécifié pour un nombre spécifié d’octets.</summary>
      <param name="data">Tableau à remplir avec les octets aléatoires forts du point de vue du chiffrement.</param>
      <param name="offset">Index du tableau auquel commencer l'opération de remplissage.</param>
      <param name="count">Nombre d'octets à remplir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> plus <paramref name="count" /> excède la longueur de <paramref name="data" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Span{System.Byte})">
      <summary>Remplit une étendue avec les octets aléatoires forts du point de vue du chiffrement.</summary>
      <param name="data">Étendue à remplir avec les octets aléatoires forts du point de vue du chiffrement.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
      <summary>Remplit un tableau d'octets avec une séquence de valeurs aléatoires différentes de zéro et forte du point de vue du chiffrement.</summary>
      <param name="data">Tableau à remplir avec une séquence forte du point de vue du chiffrement de valeurs aléatoires différentes de zéro.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Span{System.Byte})">
      <summary>Remplit une étendue d’octets avec une séquence aléatoire forte du point de vue du chiffrement de valeurs différentes de zéro.</summary>
      <param name="data">Étendue à remplir avec les octets aléatoires forts du point de vue du chiffrement, différents de zéro.</param>
    </member>
    <member name="T:System.Security.Cryptography.RSACryptoServiceProvider">
      <summary>Procède au chiffrement et au déchiffrement asymétriques à l'aide de l'implémentation de l'algorithme <see cref="T:System.Security.Cryptography.RSA" /> fourni par le fournisseur de services de chiffrement (CSP). Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> à l'aide de la clé par défaut.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> avec la taille de clé spécifiée.</summary>
      <param name="dwKeySize">Taille de la clé à utiliser, en bits.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> avec la taille et les paramètres de clé spécifiés.</summary>
      <param name="dwKeySize">Taille de la clé à utiliser, en bits.</param>
      <param name="parameters">Paramètres à passer au fournisseur de services de chiffrement (CSP).</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Impossible d'acquérir le CSP.  

ou -  

 Impossible de créer la clé.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> avec les paramètres spécifiés.</summary>
      <param name="parameters">Paramètres à passer au fournisseur de services de chiffrement (CSP).</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Impossible d'acquérir le CSP.</exception>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
      <summary>Obtient un objet <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> qui comprend des informations supplémentaires concernant une paire de clés de chiffrement.</summary>
      <returns>Objet <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> qui comprend des informations supplémentaires concernant une paire de clés de chiffrement.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
      <summary>Déchiffre les données avec l'algorithme <see cref="T:System.Security.Cryptography.RSA" />.</summary>
      <param name="rgb">Données à déchiffrer.</param>
      <param name="fOAEP">
        <see langword="true" /> pour procéder à un déchiffrement <see cref="T:System.Security.Cryptography.RSA" /> direct à l'aide du remplissage OAEP (uniquement disponible sur un ordinateur exécutant Microsoft XP ou ultérieur) ; sinon, <see langword="false" /> pour utiliser le remplissage PKCS#1 v1.5.</param>
      <returns>Données déchiffrées qui correspondent au texte brut d'origine avant le chiffrement.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.  

ou - 
Le paramètre <paramref name="fOAEP" /> est <see langword="true" /> et la longueur du paramètre <paramref name="rgb" /> est supérieure à <see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />.  

ou - 
Le paramètre <paramref name="fOAEP" /> est <see langword="true" /> et OAEP n'est pas pris en charge.  


ou 
La clé ne correspond pas aux données chiffrées. Toutefois, le libellé des exceptions peut ne pas être précis. Par exemple, elle peut indiquer <c>Espace insuffisant pour traiter cette commande</c>.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgb" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>Déchiffre les données précédemment chiffrées avec l’algorithme <see cref="T:System.Security.Cryptography.RSA" /> à l’aide du remplissage spécifié.</summary>
      <param name="data">Données à déchiffrer.</param>
      <param name="padding">Remplissage.</param>
      <returns>Données déchiffrées.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="padding" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le mode de remplissage n’est pas pris en charge.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
      <summary>Cette méthode n'est pas prise en charge dans la version actuelle.</summary>
      <param name="rgb">Données à déchiffrer.</param>
      <returns>Données déchiffrées qui correspondent au texte brut d'origine avant le chiffrement.</returns>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge dans la version actuelle.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
      <summary>Chiffre les données avec l’algorithme <see cref="T:System.Security.Cryptography.RSA" />.</summary>
      <param name="rgb">Données à chiffrer.</param>
      <param name="fOAEP">
        <see langword="true" /> pour effectuer directement le chiffrement <see cref="T:System.Security.Cryptography.RSA" /> à l’aide du remplissage OAEP (uniquement disponible sur un ordinateur exécutant Windows XP ou ultérieur) ; sinon, <see langword="false" /> pour utiliser le remplissage PKCS #1 v1.5.</param>
      <returns>Données chiffrées.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.  
ou 
La longueur du paramètre <paramref name="rgb" /> est supérieure à la longueur maximale autorisée.  

ou - 
Le paramètre <paramref name="fOAEP" /> est <see langword="true" /> et le remplissage OAEP n’est pas pris en charge.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgb" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>Chiffre les données avec l’algorithme <see cref="T:System.Security.Cryptography.RSA" /> à l’aide du remplissage spécifié.</summary>
      <param name="data">Données à chiffrer.</param>
      <param name="padding">Remplissage.</param>
      <returns>Données chiffrées.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="padding" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le mode de remplissage n’est pas pris en charge.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
      <summary>Cette méthode n'est pas prise en charge dans la version actuelle.</summary>
      <param name="rgb">Données à chiffrer.</param>
      <returns>Données chiffrées.</returns>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge dans la version actuelle.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
      <summary>Exporte un blob qui contient les informations de clés associées à un objet <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> pour inclure la clé privée ; sinon, <see langword="false" />.</param>
      <returns>Tableau d'octets qui contient les informations de clés associées à un objet <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
      <summary>Exporte les <see cref="T:System.Security.Cryptography.RSAParameters" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> pour inclure les paramètres privés ; sinon <see langword="false" />.</param>
      <returns>Paramètres pour <see cref="T:System.Security.Cryptography.RSA" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Impossible d'exporter la clé.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
      <summary>Importe un blob qui représente les informations relatives aux clés RSA.</summary>
      <param name="keyBlob">Tableau d'octets qui représente un blob de clé RSA.</param>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
      <summary>Importe les <see cref="T:System.Security.Cryptography.RSAParameters" /> spécifiés.</summary>
      <param name="parameters">Paramètres pour <see cref="T:System.Security.Cryptography.RSA" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.  

ou - 
Il manque des champs dans le paramètre <paramref name="parameters" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
      <summary>Obtient le nom de l’algorithme d’échange de clés disponible avec cette implémentation de <see cref="T:System.Security.Cryptography.RSA" />.</summary>
      <returns>Nom de l'algorithme d'échange de clés s'il existe ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
      <summary>Obtient la taille de la clé en cours.</summary>
      <returns>Taille de la clé en bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes" />
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
      <summary>Obtient ou définit une valeur qui indique si la clé doit être persistante dans le fournisseur de services de chiffrement (CSP).</summary>
      <returns>
        <see langword="true" /> si la clé doit être persistante dans le CSP ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
      <summary>Obtient une valeur qui indique si l'objet <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> ne contient qu'une clé publique.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> ne contient qu'une clé publique ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
      <summary>Obtient le nom de l’algorithme de signature disponible avec cette implémentation de <see cref="T:System.Security.Cryptography.RSA" />.</summary>
      <returns>Nom de l'algorithme de signature.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
      <summary>Calcule la valeur de hachage d'un sous-ensemble du tableau d'octets spécifié à l'aide de l'algorithme de hachage spécifié et signe la valeur de hachage qui en résulte.</summary>
      <param name="buffer">Données d'entrée pour lesquelles calculer le hachage.</param>
      <param name="offset">Offset dans le tableau à partir duquel l'utilisation des données commence.</param>
      <param name="count">Nombre d'octets dans le tableau à utiliser comme données.</param>
      <param name="halg">Algorithme de hachage à utiliser pour créer la valeur de hachage.</param>
      <returns>Signature <see cref="T:System.Security.Cryptography.RSA" /> des données spécifiées.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="halg" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le type du paramètre <paramref name="halg" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
      <summary>Calcule la valeur de hachage du tableau d'octets spécifié à l'aide de l'algorithme de hachage indiqué et signe la valeur de hachage qui en résulte.</summary>
      <param name="buffer">Données d'entrée pour lesquelles calculer le hachage.</param>
      <param name="halg">Algorithme de hachage à utiliser pour créer la valeur de hachage.</param>
      <returns>Signature <see cref="T:System.Security.Cryptography.RSA" /> des données spécifiées.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="halg" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le type du paramètre <paramref name="halg" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
      <summary>Calcule la valeur de hachage du flux d'entrée spécifié à l'aide de l'algorithme de hachage spécifié et signe la valeur de hachage qui en résulte.</summary>
      <param name="inputStream">Données d'entrée pour lesquelles calculer le hachage.</param>
      <param name="halg">Algorithme de hachage à utiliser pour créer la valeur de hachage.</param>
      <returns>Signature <see cref="T:System.Security.Cryptography.RSA" /> des données spécifiées.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="halg" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le type du paramètre <paramref name="halg" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>Calcule la signature pour la valeur de hachage spécifiée en la chiffrant avec la clé privée à l’aide du remplissage spécifié.</summary>
      <param name="hash">Valeur de hachage des données à signer.</param>
      <param name="hashAlgorithm">Nom de l’algorithme de hachage utilisé pour créer la valeur de hachage des données.</param>
      <param name="padding">Remplissage.</param>
      <returns>Signature <see cref="T:System.Security.Cryptography.RSA" /> de la valeur de hachage spécifiée.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" /> a la valeur <see langword="null" /> ou <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> est <see langword="null" />.  

ou - 
<paramref name="padding" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> n’est pas égal à <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
      <summary>Calcule la signature pour la valeur de hachage spécifiée en la chiffrant avec la clé privée.</summary>
      <param name="rgbHash">Valeur de hachage des données à signer.</param>
      <param name="str">Identificateur d'algorithme de hachage (OID) utilisé pour créer la valeur de hachage des données.</param>
      <returns>Signature <see cref="T:System.Security.Cryptography.RSA" /> de la valeur de hachage spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rgbHash" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.  
 ou  
 Il n'existe aucune clé privée.</exception>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
      <summary>Obtient ou définit une valeur qui indique si la clé doit être persistante dans le magasin de clés de l'ordinateur plutôt que dans celui des profils utilisateur.</summary>
      <returns>
        <see langword="true" /> si la clé doit être persistante dans le magasin de clés de l'ordinateur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
      <summary>Vérifie qu'une signature numérique est valide en déterminant la valeur de hachage dans la signature en utilisant la clé publique fournie et en la comparant à la valeur de hachage des données fournies.</summary>
      <param name="buffer">les données qui ont été signées ;</param>
      <param name="halg">Nom de l'algorithme de hachage utilisé pour créer la valeur de hachage des données.</param>
      <param name="signature">Données de la signature à vérifier.</param>
      <returns>
        <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="halg" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le type du paramètre <paramref name="halg" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>Vérifie qu’une signature numérique est valide en déterminant la valeur de hachage dans la signature en utilisant l’algorithme de hachage et le remplissage spécifiés, et en la comparant à la valeur de hachage fournie.</summary>
      <param name="hash">Valeur de hachage des données signées.</param>
      <param name="signature">Données de la signature à vérifier.</param>
      <param name="hashAlgorithm">Nom de l’algorithme de hachage utilisé pour créer la valeur de hachage.</param>
      <param name="padding">Remplissage.</param>
      <returns>
        <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" /> a la valeur <see langword="null" /> ou <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> a la valeur <see langword="null" />.  

ou - 
<paramref name="padding" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> n’est pas égal à <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
      <summary>Vérifie qu'une signature numérique est valide en déterminant la valeur de hachage dans la signature en utilisant la clé publique fournie et en la comparant à la valeur de hachage fournie.</summary>
      <param name="rgbHash">Valeur de hachage des données signées.</param>
      <param name="str">Identificateur d'algorithme de hachage (OID) utilisé pour créer la valeur de hachage des données.</param>
      <param name="rgbSignature">Données de la signature à vérifier.</param>
      <returns>
        <see langword="true" /> si la signature est valide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="rgbHash" /> a la valeur <see langword="null" />.  

ou - 
Le paramètre <paramref name="rgbSignature" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement ne peut pas être acquis.  
 ou  
 Impossible de vérifier la signature.</exception>
    </member>
    <member name="T:System.Security.Cryptography.SHA1CryptoServiceProvider">
      <summary>Calcule la valeur de hachage <see cref="T:System.Security.Cryptography.SHA1" /> pour les données d'entrée à l'aide de l'implémentation fournie par le fournisseur de services de chiffrement (CSP). Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA1CryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize">
      <summary>Initialise une instance de <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA256CryptoServiceProvider">
      <summary>Définit un objet de wrapper pour accéder à l'implémentation du fournisseur de services de chiffrement (CSP) de l'algorithme <see cref="T:System.Security.Cryptography.SHA256" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256CryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.SHA256CryptoServiceProvider" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256CryptoServiceProvider.Initialize">
      <summary>Initialise, ou réinitialise, une instance d'un algorithme de hachage.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA384CryptoServiceProvider">
      <summary>Définit un objet de wrapper pour accéder à l'implémentation du fournisseur de services de chiffrement (CSP) de l'algorithme <see cref="T:System.Security.Cryptography.SHA384" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384CryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.SHA384CryptoServiceProvider" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384CryptoServiceProvider.Initialize">
      <summary>Initialise, ou réinitialise, une instance d'un algorithme de hachage.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA512CryptoServiceProvider">
      <summary>Définit un objet de wrapper pour accéder à l'implémentation du fournisseur de services de chiffrement (CSP) de l'algorithme <see cref="T:System.Security.Cryptography.SHA512" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512CryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.SHA512CryptoServiceProvider" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512CryptoServiceProvider.Initialize">
      <summary>Initialise, ou réinitialise, une instance d'un algorithme de hachage.</summary>
    </member>
    <member name="T:System.Security.Cryptography.TripleDESCryptoServiceProvider">
      <summary>Définit un objet de wrapper pour accéder à la version du fournisseur de services de chiffrement (CSP) de l'algorithme <see cref="T:System.Security.Cryptography.TripleDES" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.TripleDESCryptoServiceProvider" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le fournisseur de services de chiffrement <see cref="T:System.Security.Cryptography.TripleDES" /> n'est pas disponible.</exception>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize" />
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor" />
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Crée un objet déchiffreur <see cref="T:System.Security.Cryptography.TripleDES" /> symétrique avec la clé spécifiée (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) et le vecteur d’initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Clé secrète à utiliser pour l'algorithme symétrique.</param>
      <param name="rgbIV">Vecteur d'initialisation à utiliser pour l'algorithme symétrique.</param>
      <returns>Objet déchiffreur <see cref="T:System.Security.Cryptography.TripleDES" /> symétrique.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> possède la valeur <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.  
ou 
La valeur de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> est <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> et la valeur de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> n'est pas 8.  
ou 
Une taille de clé non valide a été utilisée.  

ou - 
La taille de la clé d'algorithme n'était pas disponible.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor" />
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Crée un objet chiffreur <see cref="T:System.Security.Cryptography.TripleDES" /> symétrique avec la clé spécifiée (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) et le vecteur d'initialisation (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Clé secrète à utiliser pour l'algorithme symétrique.</param>
      <param name="rgbIV">Vecteur d'initialisation à utiliser pour l'algorithme symétrique.  
   
 Le vecteur d'initialisation doit faire 8 octets de long. S'il dépasse 8 octets, il est tronqué et aucune exception n'est levée. Avant d'appeler <see cref="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />, vérifiez la longueur du vecteur d'initialisation et lever une exception si elle est trop longue.</param>
      <returns>Objet chiffreur <see cref="T:System.Security.Cryptography.TripleDES" /> symétrique.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> possède la valeur <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.  
ou 
La valeur de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> est <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> et la valeur de la propriété <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> n'est pas 8.  
ou 
Une taille de clé non valide a été utilisée.  

ou - 
La taille de la clé d'algorithme n'était pas disponible.</exception>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize" />
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV">
      <summary>Génère un vecteur d'initialisation aléatoire (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) à utiliser pour l'algorithme.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey">
      <summary>Génère un <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> aléatoire à utiliser pour l'algorithme.</summary>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.IV" />
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Key" />
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize" />
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes" />
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode" />
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding" />
  </members>
</doc>