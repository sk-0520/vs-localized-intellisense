<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Collections.NonGeneric</name>
  </assembly>
  <members>
    <member name="T:System.Collections.CaseInsensitiveComparer">
      <summary vsli:raw="Compares two objects for equivalence, ignoring the case of strings.">Compare deux objets pour contrôler leur équivalence, en ignorant la casse des chaînes.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; class using the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveComparer" /> à l'aide de <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveComparer" /> à l'aide du <see cref="T:System.Globalization.CultureInfo" /> spécifié.</summary>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use for the new &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt;.">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser pour le nouveau <see cref="T:System.Collections.CaseInsensitiveComparer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;culture&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="culture" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)">
      <summary vsli:raw="Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.">Exécute une comparaison sans respect de la casse de deux objets du même type et retourne une valeur indiquant si l'un est inférieur, égal ou supérieur à l'autre.</summary>
      <param name="a" vsli:raw="The first object to compare.">Premier objet à comparer.</param>
      <param name="b" vsli:raw="The second object to compare.">Deuxième objet à comparer.</param>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; is less than &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; equals &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; is greater than &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Entier signé qui indique les valeurs relatives de <paramref name="a" /> et <paramref name="b" />, comme indiqué dans le tableau suivant.  
  Value 
  Signification 
  Inférieure à zéro 
 <paramref name="a" /> est inférieur à <paramref name="b" />, sans respect de la casse.  

  Zéro 
 <paramref name="a" /> est égal à <paramref name="b" />, sans respect de la casse.  

  Supérieure à zéro 
 <paramref name="a" /> est supérieur à <paramref name="b" />, sans respect de la casse.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;a&quot; /&gt; nor &lt;paramref name=&quot;b&quot; /&gt; implements the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are of different types.">Ni <paramref name="a" /> ni <paramref name="b" /> n'implémente l'interface <see cref="T:System.IComparable" />.  

ou - 
<paramref name="a" /> et <paramref name="b" /> sont de types différents.</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.Default">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread and that is always available.">Obtient une instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours et toujours disponible.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">Instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt; and that is always available.">Obtient une instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> et toujours disponible.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt;.">Instance de <see cref="T:System.Collections.CaseInsensitiveComparer" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</returns>
    </member>
    <member name="T:System.Collections.CaseInsensitiveHashCodeProvider">
      <summary vsli:raw="Supplies a hash code for an object, using a hashing algorithm that ignores the case of strings.">Fournit un code de hachage pour un objet en utilisant un algorithme de hachage qui ignore la casse des chaînes.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; class using the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> à l'aide de <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> à l'aide du <see cref="T:System.Globalization.CultureInfo" /> spécifié.</summary>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use for the new &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt;.">
        <see cref="T:System.Globalization.CultureInfo" /> à utiliser pour le nouveau <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;culture&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="culture" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread and that is always available.">Obtient une instance de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours et toujours disponible.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">Instance de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> associée au <see cref="P:System.Threading.Thread.CurrentCulture" /> du thread en cours.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt; and that is always available.">Obtient une instance de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> et toujours disponible.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt;.">Instance de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> associée à <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</returns>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code for the given object, using a hashing algorithm that ignores the case of strings.">Retourne un code de hachage pour un objet donné, en utilisant un algorithme de hachage qui ignore la casse des chaînes.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; for which a hash code is to be returned.">
        <see cref="T:System.Object" /> pour lequel un code de hachage doit être retourné.</param>
      <returns vsli:raw="A hash code for the given object, using a hashing algorithm that ignores the case of strings.">Code de hachage pour l'objet donné à l'aide d'un algorithme de hachage qui ignore la casse des chaînes.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.CollectionBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed collection.">Fournit la classe de base <see langword="abstract" /> pour une collection fortement typée.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; class with the default initial capacity.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CollectionBase" /> avec la capacité initiale par défaut.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; class with the specified capacity.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.CollectionBase" /> avec la capacité spécifiée.</summary>
      <param name="capacity" vsli:raw="The number of elements that the new list can initially store.">Nombre d'éléments que la nouvelle liste peut initialement stocker.</param>
    </member>
    <member name="P:System.Collections.CollectionBase.Capacity">
      <summary vsli:raw="Gets or sets the number of elements that the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; can contain.">Obtient ou définit le nombre d'éléments que <see cref="T:System.Collections.CollectionBase" /> peut contenir.</summary>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; can contain.">Nombre initial d'éléments que <see cref="T:System.Collections.CollectionBase" /> peut contenir.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;see cref=&quot;P:System.Collections.CollectionBase.Capacity&quot; /&gt; is set to a value that is less than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">La valeur affectée à <see cref="P:System.Collections.CollectionBase.Capacity" /> est inférieure à <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">Il n’y a pas assez de mémoire disponible sur le système.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This method cannot be overridden.">Supprime tous les objets de l'instance de <see cref="T:System.Collections.CollectionBase" />. Elle ne peut pas être substituée.</summary>
    </member>
    <member name="P:System.Collections.CollectionBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This property cannot be overridden.">Obtient le nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.CollectionBase" />. Cette propriété ne peut pas être remplacée.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. Retrieving the value of this property is an O(1) operation.">Nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.CollectionBase" />.  
La récupération de la valeur de cette propriété est une opération O(1).</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Retourne un énumérateur qui itère au sein de l'instance <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.InnerList">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; containing the list of elements in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Obtient <see cref="T:System.Collections.ArrayList" /> contenant la liste des éléments dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance itself. Retrieving the value of this property is an O(1) operation.">
        <see cref="T:System.Collections.ArrayList" /> représentant l'instance de <see cref="T:System.Collections.CollectionBase" /> elle-même.  
La récupération de la valeur de cette propriété est une opération O(1).</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.List">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; containing the list of elements in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Obtient <see cref="T:System.Collections.IList" /> contenant la liste des éléments dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.IList" /> représentant l'instance de <see cref="T:System.Collections.CollectionBase" /> elle-même.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires lors de l'effacement du contenu de l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClearComplete">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires après l'effacement du contenu de l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Exécute les processus personnalisés supplémentaires avant l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">Index de base zéro au niveau duquel insérer <paramref name="value" />.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes after inserting a new element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Exécute les processus personnalisés supplémentaires après l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">Index de base zéro au niveau duquel insérer <paramref name="value" />.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires lors de la suppression d'un élément de l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</param>
      <param name="value" vsli:raw="The value of the element to remove from &lt;paramref name=&quot;index&quot; /&gt;.">Valeur de l'élément à supprimer de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes after removing an element from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires après la suppression d'un élément de l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</param>
      <param name="value" vsli:raw="The value of the element to remove from &lt;paramref name=&quot;index&quot; /&gt;.">Valeur de l'élément à supprimer de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires avant la définition d'une valeur dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">Valeur à remplacer par <paramref name="newValue" />.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after setting a value in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires après la définition d'une valeur dans l'instance de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">Valeur à remplacer par <paramref name="newValue" />.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">Exécute des processus personnalisés supplémentaires lors de la validation d'une valeur.</summary>
      <param name="value" vsli:raw="The object to validate.">Objet à valider.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This method is not overridable.">Supprime l'élément à l'index spécifié de l'instance de <see cref="T:System.Collections.CollectionBase" />. Cette méthode n'est pas substituable.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Index de base zéro de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copie l'ensemble de l'objet <see cref="T:System.Collections.CollectionBase" /> vers un objet <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.CollectionBase" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> est multidimensionnel.  
ou 
Le nombre d’éléments dans le <see cref="T:System.Collections.CollectionBase" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Le type du <see cref="T:System.Collections.CollectionBase" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is synchronized (thread safe).">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.CollectionBase" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.CollectionBase" /> est synchronisé (thread-safe) ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Ajoute un objet à la fin de la <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be added to the end of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" /> à ajouter à la fin de <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; index at which the &lt;paramref name=&quot;value&quot; /&gt; has been added.">Index <see cref="T:System.Collections.CollectionBase" /> auquel <paramref name="value" /> a été ajouté.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.  

ou - 
<see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; contains a specific element.">Détermine si <see cref="T:System.Collections.CollectionBase" /> contient un élément spécifique.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; contains the specified &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> contient le <paramref name="value" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Searches for the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Recherche le <see cref="T:System.Object" /> spécifié et retourne l’index de base zéro de la première occurrence dans l’ensemble du <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;, if found; otherwise, -1.">Index de base zéro de la première occurrence de <paramref name="value" /> dans l'ensemble du <see cref="T:System.Collections.CollectionBase" />, s'il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; at the specified index.">Insère un élément dans la classe <see cref="T:System.Collections.CollectionBase" /> au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert.">
        <see cref="T:System.Object" /> à insérer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> est inférieur à zéro.  

ou - 
<paramref name="index" /> est supérieur à <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.  
ou 
<see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">Obtient une valeur indiquant si <see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> est de taille fixe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.">Obtient une valeur indiquant si <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <returns vsli:raw="The element at the specified index.">Élément au niveau de l'index spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> est inférieur à zéro.  
ou 
 <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" /> à supprimer de <see cref="T:System.Collections.CollectionBase" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter was not found in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; object.">Le paramètre <paramref name="value" /> est introuvable dans l'objet <see cref="T:System.Collections.CollectionBase" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> est en lecture seule.  

ou - 
<see cref="T:System.Collections.CollectionBase" /> est de taille fixe.</exception>
    </member>
    <member name="T:System.Collections.DictionaryBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed collection of key/value pairs.">Fournit la classe de base <see langword="abstract" /> pour une collection fortement typée de paires clé/valeur.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Efface le contenu de l'instance <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; elements to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">Copie les entrées des éléments <see cref="T:System.Collections.DictionaryBase" /> dans un <see cref="T:System.Array" /> à une dimension à l'index spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; objects copied from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> à une dimension qui constitue la destination des objets <see cref="T:System.Collections.DictionaryEntry" /> copiés à partir de l'instance de <see cref="T:System.Collections.DictionaryBase" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> est multidimensionnel.  

ou - 
Le nombre d’éléments dans le <see cref="T:System.Collections.DictionaryBase" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Le type du <see cref="T:System.Collections.DictionaryBase" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Obtient le nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Dictionary">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Obtient la liste des éléments contenus dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.IDictionary" /> représentant l'instance de <see cref="T:System.Collections.DictionaryBase" /> elle-même.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Retourne <see cref="T:System.Collections.IDictionaryEnumerator" /> qui itère au sein de l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> pour l'instance du <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.InnerHashtable">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Obtient la liste des éléments contenus dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.Hashtable" /> représentant l'instance de <see cref="T:System.Collections.DictionaryBase" /> elle-même.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClear">
      <summary vsli:raw="Performs additional custom processes before clearing the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Effectue des traitements personnalisés supplémentaires avant l'effacement du contenu de l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClearComplete">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires après l'effacement du contenu de l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
      <summary vsli:raw="Gets the element with the specified key and value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Obtient l'élément correspondant à la clé et la valeur spécifiées dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to get.">Clé de l'élément à obtenir.</param>
      <param name="currentValue" vsli:raw="The current value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">Valeur actuelle de l'élément associé à <paramref name="key" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the element with the specified key and value.">
        <see cref="T:System.Object" /> contenant l'élément avec la clé et la valeur spécifiées.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Exécute les processus personnalisés supplémentaires avant l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to insert.">Clé de l'élément à insérer.</param>
      <param name="value" vsli:raw="The value of the element to insert.">Valeur de l'élément à insérer.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after inserting a new element into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Exécute les processus personnalisés supplémentaires après l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to insert.">Clé de l'élément à insérer.</param>
      <param name="value" vsli:raw="The value of the element to insert.">Valeur de l'élément à insérer.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before removing an element from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Effectue des traitements personnalisés supplémentaires avant la suppression d'un élément de l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Clé de l'élément à supprimer.</param>
      <param name="value" vsli:raw="The value of the element to remove.">Valeur de l’élément à supprimer.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after removing an element from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires après la suppression d'un élément de l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Clé de l'élément à supprimer.</param>
      <param name="value" vsli:raw="The value of the element to remove.">Valeur de l’élément à supprimer.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires avant la définition d'une valeur dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to locate.">Clé de l'élément à trouver.</param>
      <param name="oldValue" vsli:raw="The old value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">Ancienne valeur de l'élément associé à <paramref name="key" />.</param>
      <param name="newValue" vsli:raw="The new value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">Nouvelle valeur de l'élément associé à <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after setting a value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires après la définition d'une valeur dans l'instance de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to locate.">Clé de l'élément à trouver.</param>
      <param name="oldValue" vsli:raw="The old value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">Ancienne valeur de l'élément associé à <paramref name="key" />.</param>
      <param name="newValue" vsli:raw="The new value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">Nouvelle valeur de l'élément associé à <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating the element with the specified key and value.">Effectue des traitements personnalisés supplémentaires lors de la validation de l'élément correspondant à la clé et la valeur spécifiées.</summary>
      <param name="key" vsli:raw="The key of the element to validate.">Clé de l'élément à valider.</param>
      <param name="value" vsli:raw="The value of the element to validate.">Valeur de l'élément à valider.</param>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is synchronized (thread safe).">Obtient une valeur indiquant si l'accès à un objet <see cref="T:System.Collections.DictionaryBase" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à l'objet <see cref="T:System.Collections.DictionaryBase" /> est synchronisé (thread-safe) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à un objet <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Objet pouvant être utilisé pour synchroniser l’accès à l’objet <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the specified key and value into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Ajoute un élément avec la clé et la valeur spécifiées dans <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Clé de l'élément à ajouter.</param>
      <param name="value" vsli:raw="The value of the element to add.">Valeur de l'élément à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Un élément possédant la même clé existe déjà dans <see cref="T:System.Collections.DictionaryBase" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" /> est en lecture seule.  

ou - 
<see cref="T:System.Collections.DictionaryBase" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; contains a specific key.">Détermine si <see cref="T:System.Collections.DictionaryBase" /> contient une clé spécifique.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Clé à rechercher dans <see cref="T:System.Collections.DictionaryBase" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.DictionaryBase" /> contient un élément correspondant à la clé spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object has a fixed size.">Obtient une valeur indiquant si un objet <see cref="T:System.Collections.DictionaryBase" /> est de taille fixe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Collections.DictionaryBase" /> est de taille fixe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is read-only.">Obtient une valeur indiquant si un objet <see cref="T:System.Collections.DictionaryBase" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Collections.DictionaryBase" /> est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Obtient ou définit la valeur associée à la clé spécifiée.</summary>
      <param name="key" vsli:raw="The key whose value to get or set.">Clé dont la valeur doit être obtenue ou définie.</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, attempting to get it returns &lt;see langword=&quot;null&quot; /&gt;, and attempting to set it creates a new element using the specified key.">Valeur associée à la clé spécifiée. Si la clé spécifiée est introuvable, la tentative d'obtention retourne <see langword="null" /> et la tentative de définition crée un nouvel élément avec la clé spécifiée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property is set, &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">La propriété est définie et <see cref="T:System.Collections.DictionaryBase" /> est en lecture seule.  
ou 
La propriété est définie, <paramref name="key" /> n’existe pas dans la collection et <see cref="T:System.Collections.DictionaryBase" /> a une taille fixe.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Obtient un objet <see cref="T:System.Collections.ICollection" /> contenant les clés de l'objet <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Objet <see cref="T:System.Collections.ICollection" /> contenant les clés de l'objet <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Supprime l'élément avec la clé spécifiée d'<see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Clé de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" /> est en lecture seule.  
ou 
<see cref="T:System.Collections.DictionaryBase" /> est de taille fixe.</exception>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Obtient un objet <see cref="T:System.Collections.ICollection" /> contenant les valeurs de l'objet <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Objet <see cref="T:System.Collections.ICollection" /> contenant les valeurs de l'objet <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Retourne un <see cref="T:System.Collections.IEnumerator" /> qui itère au sein de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="T:System.Collections.Queue">
      <summary vsli:raw="Represents a first-in, first-out collection of objects.">Représente une collection d'objets premier entré, premier sorti.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the default initial capacity, and uses the default growth factor.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui est vide, possède la capacité initiale par défaut et utilise le facteur de croissance par défaut.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui contient des éléments copiés à partir de la collection spécifiée, possède la capacité initiale correspondant au nombre d'éléments copiés et utilise le facteur de croissance par défaut.</summary>
      <param name="col" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to copy elements from.">
        <see cref="T:System.Collections.ICollection" /> à partir duquel les éléments sont copiés.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;col&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="col" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the specified initial capacity, and uses the default growth factor.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui est vide, possède la capacité initiale spécifiée et utilise le facteur de croissance par défaut.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; can contain.">Nombre initial d'éléments que <see cref="T:System.Collections.Queue" /> peut contenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the specified initial capacity, and uses the specified growth factor.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Queue" /> qui est vide, possède la capacité initiale spécifiée et utilise le facteur de croissance spécifié.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; can contain.">Nombre initial d'éléments que <see cref="T:System.Collections.Queue" /> peut contenir.</param>
      <param name="growFactor" vsli:raw="The factor by which the capacity of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is expanded.">Facteur d'augmentation de la capacité de <see cref="T:System.Collections.Queue" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;growFactor&quot; /&gt; is less than 1.0 or greater than 10.0.">
        <paramref name="capacity" /> est inférieur à zéro.  

ou - 
<paramref name="growFactor" /> est inférieur à 1.0 ou supérieur à 10.0.</exception>
    </member>
    <member name="M:System.Collections.Queue.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Supprime tous les objets du <see cref="T:System.Collections.Queue" />.</summary>
    </member>
    <member name="M:System.Collections.Queue.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Crée une copie superficielle de <see cref="T:System.Collections.Queue" />.</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Copie superficielle de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Contains(System.Object)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Détermine si le <see cref="T:System.Collections.Queue" /> contient un élément.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.Queue" />. La valeur peut être <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> existe dans <see cref="T:System.Collections.Queue" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Copie les éléments <see cref="T:System.Collections.Queue" /> dans un <see cref="T:System.Array" /> unidimensionnel existant, en commençant au niveau de l'index de tableau spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Queue" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> est multidimensionnel.  

ou - 
Le nombre d’éléments dans le <see cref="T:System.Collections.Queue" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.ArrayTypeMismatchException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Le type du <see cref="T:System.Collections.Queue" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.Queue.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Obtient le nombre d'éléments contenus dans le <see cref="T:System.Collections.Queue" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Nombre d'éléments contenus dans <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Dequeue">
      <summary vsli:raw="Removes and returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Supprime et retourne l'objet au début de <see cref="T:System.Collections.Queue" />.</summary>
      <returns vsli:raw="The object that is removed from the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Objet supprimé du début de <see cref="T:System.Collections.Queue" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is empty.">La <see cref="T:System.Collections.Queue" /> est vide.</exception>
    </member>
    <member name="M:System.Collections.Queue.Enqueue(System.Object)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Ajoute un objet à la fin de la <see cref="T:System.Collections.Queue" />.</summary>
      <param name="obj" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Objet à ajouter à <see cref="T:System.Collections.Queue" />. La valeur peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.Collections.Queue.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Retourne un énumérateur qui itère au sein de <see cref="T:System.Collections.Queue" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="P:System.Collections.Queue.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is synchronized (thread safe).">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.Queue" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.Queue" /> est synchronisé (thread-safe) ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Peek">
      <summary vsli:raw="Returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; without removing it.">Retourne l'objet situé au début de <see cref="T:System.Collections.Queue" /> sans le supprimer.</summary>
      <returns vsli:raw="The object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Objet situé au début de la <see cref="T:System.Collections.Queue" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is empty.">La <see cref="T:System.Collections.Queue" /> est vide.</exception>
    </member>
    <member name="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; that wraps the original queue, and is thread safe.">Retourne un nouvel objet <see cref="T:System.Collections.Queue" /> thread-safe encapsulant la file d'attente d'origine.</summary>
      <param name="queue" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; to synchronize.">
        <see cref="T:System.Collections.Queue" /> à synchroniser.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; wrapper that is synchronized (thread safe).">Wrapper <see cref="T:System.Collections.Queue" /> synchronisé (thread-safe).</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;queue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="queue" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Queue.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Queue" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; elements to a new array.">Copie les éléments <see cref="T:System.Collections.Queue" /> vers un nouveau tableau.</summary>
      <returns vsli:raw="A new array containing elements copied from the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Nouveau tableau contenant les éléments copiés à partir de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.TrimToSize">
      <summary vsli:raw="Sets the capacity to the actual number of elements in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Définit la capacité au nombre réel d'éléments dans <see cref="T:System.Collections.Queue" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.Queue" /> est en lecture seule.</exception>
    </member>
    <member name="T:System.Collections.ReadOnlyCollectionBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed non-generic read-only collection.">Fournit la classe de base <see langword="abstract" /> pour une collection en lecture seule, non générique et fortement typée.</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">Obtient le nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance. Retrieving the value of this property is an O(1) operation.">Nombre d'éléments contenus dans l'instance de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.  
La récupération de la valeur de cette propriété est une opération O(1).</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">Retourne un énumérateur qui itère au sein de l'instance <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.InnerList">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">Obtient la liste des éléments contenus dans l'instance de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.ArrayList" /> représentant l'instance de <see cref="T:System.Collections.ReadOnlyCollectionBase" /> elle-même.</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copie l'ensemble de l'objet <see cref="T:System.Collections.ReadOnlyCollectionBase" /> vers un objet <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ReadOnlyCollectionBase" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> est multidimensionnel.  

ou - 
Le nombre d’éléments dans le <see cref="T:System.Collections.ReadOnlyCollectionBase" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Le type du <see cref="T:System.Collections.ReadOnlyCollectionBase" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object is synchronized (thread safe).">Obtient une valeur indiquant si l'accès à un objet <see cref="T:System.Collections.ReadOnlyCollectionBase" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à l'objet <see cref="T:System.Collections.ReadOnlyCollectionBase" /> est synchronisé (thread-safe) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à un objet <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object.">Objet pouvant être utilisé pour synchroniser l’accès à l’objet <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="T:System.Collections.SortedList">
      <summary vsli:raw="Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.">Représente une collection de paires clé/valeur triées par les clés et accessible par clé et par index.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the default initial capacity, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key added to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale par défaut et est triée suivant l'interface <see cref="T:System.IComparable" /> implémentée par chaque clé ajoutée à l'objet <see cref="T:System.Collections.SortedList" />.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the default initial capacity, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale par défaut et est triée suivant l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison de clés.  
ou 
 <see langword="null" /> pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</param>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the specified initial capacity, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale spécifiée et est triée suivant l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison de clés.  

ou - 
<see langword="null" /> pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</param>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">Nombre initial d'éléments que l'objet <see cref="T:System.Collections.SortedList" /> peut contenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> est inférieur à zéro.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to create a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object with the specified &lt;paramref name=&quot;capacity&quot; /&gt;.">La mémoire disponible est insuffisante pour créer un objet <see cref="T:System.Collections.SortedList" /> avec le <paramref name="capacity" /> spécifié.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui contient des éléments copiés à partir du dictionnaire spécifié, possède la capacité initiale correspondant au nombre d'éléments copiés et est triée suivant l'interface <see cref="T:System.IComparable" /> implémentée par chaque clé.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; implementation to copy to a new &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Implémentation de <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="One or more elements in &lt;paramref name=&quot;d&quot; /&gt; do not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">Un ou plusieurs éléments de <paramref name="d" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui contient des éléments copiés à partir du dictionnaire spécifié, possède la capacité initiale correspondant au nombre d'éléments copiés et est triée suivant l'interface <see cref="T:System.Collections.IComparer" /> spécifiée.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; implementation to copy to a new &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Implémentation de <see cref="T:System.Collections.IDictionary" /> à copier vers un nouvel objet <see cref="T:System.Collections.SortedList" />.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">Implémentation de <see cref="T:System.Collections.IComparer" /> à utiliser lors de la comparaison de clés.  

ou - 
<see langword="null" /> pour utiliser l'implémentation de <see cref="T:System.IComparable" /> de chaque clé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and one or more elements in &lt;paramref name=&quot;d&quot; /&gt; do not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">
        <paramref name="comparer" /> est <see langword="null" /> et un ou plusieurs éléments de <paramref name="d" /> n'implémentent pas l'interface <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the specified initial capacity, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key added to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui est vide, possède la capacité initiale spécifiée et est triée suivant l'interface <see cref="T:System.IComparable" /> implémentée par chaque clé ajoutée à l'objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="initialCapacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">Nombre initial d'éléments que l'objet <see cref="T:System.Collections.SortedList" /> peut contenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCapacity&quot; /&gt; is less than zero.">
        <paramref name="initialCapacity" /> est inférieur à zéro.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to create a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object with the specified &lt;paramref name=&quot;initialCapacity&quot; /&gt;.">La mémoire disponible est insuffisante pour créer un objet <see cref="T:System.Collections.SortedList" /> avec le <paramref name="initialCapacity" /> spécifié.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the specified key and value to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Ajoute un élément avec la clé et la valeur spécifiées dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Clé de l'élément à ajouter.</param>
      <param name="value" vsli:raw="The value of the element to add. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Valeur de l'élément à ajouter. La valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the specified &lt;paramref name=&quot;key&quot; /&gt; already exists in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is set to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface, and &lt;paramref name=&quot;key&quot; /&gt; does not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">Un élément possédant le <paramref name="key" /> spécifié existe déjà dans l'objet <see cref="T:System.Collections.SortedList" />.  

ou - 
<see cref="T:System.Collections.SortedList" /> est défini pour utiliser l'interface <see cref="T:System.IComparable" /> et <paramref name="key" /> n'implémente pas l'interface <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> est en lecture seule.  
ou 
<see cref="T:System.Collections.SortedList" /> est de taille fixe.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to add the element to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">La mémoire disponible est insuffisante pour ajouter l'élément à <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">Le comparateur lève une exception.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Capacity">
      <summary vsli:raw="Gets or sets the capacity of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtient ou définit la capacité d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">Nombre d'éléments que l'objet <see cref="T:System.Collections.SortedList" /> peut contenir.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value assigned is less than the current number of elements in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">La valeur assignée est inférieure ou égale au nombre actuel d'éléments dans l'objet <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">Il n’y a pas assez de mémoire disponible sur le système.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clear">
      <summary vsli:raw="Removes all elements from a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Supprime tous les éléments d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">L'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.  

ou - 
<see cref="T:System.Collections.SortedList" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clone">
      <summary vsli:raw="Creates a shallow copy of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Crée une copie superficielle d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Copie superficielle de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Contains(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific key.">Détermine si un objet <see cref="T:System.Collections.SortedList" /> contient une clé spécifique.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Clé à rechercher dans l'objet <see cref="T:System.Collections.SortedList" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;key&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> contient un élément avec le <paramref name="key" /> spécifié ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">Le comparateur lève une exception.</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific key.">Détermine si un objet <see cref="T:System.Collections.SortedList" /> contient une clé spécifique.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Clé à rechercher dans l'objet <see cref="T:System.Collections.SortedList" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;key&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> contient un élément avec le <paramref name="key" /> spécifié ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">Le comparateur lève une exception.</exception>
    </member>
    <member name="M:System.Collections.SortedList.ContainsValue(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific value.">Détermine si un objet <see cref="T:System.Collections.SortedList" /> contient une valeur spécifique.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Valeur à trouver dans l'objet <see cref="T:System.Collections.SortedList" />. La valeur peut être <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> contient un élément avec le <paramref name="value" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; elements to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; object, starting at the specified index in the array.">Copie des éléments <see cref="T:System.Collections.SortedList" /> dans un objet <see cref="T:System.Array" /> unidimensionnel, en commençant à l'index spécifié dans le tableau.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; object that is the destination of the &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; objects copied from &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Objet <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des objets <see cref="T:System.Collections.DictionaryEntry" /> copiés à partir de <see cref="T:System.Collections.SortedList" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.">
        <paramref name="arrayIndex" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> est multidimensionnel.  

ou - 
Le nombre d'éléments de l'objet <see cref="T:System.Collections.SortedList" /> source est supérieur à la quantité d'espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Le type du <see cref="T:System.Collections.SortedList" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Count">
      <summary vsli:raw="Gets the number of elements contained in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtient le nombre d'éléments contenus dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Nombre d'éléments contenus dans l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetByIndex(System.Int32)">
      <summary vsli:raw="Gets the value at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtient la valeur à l'index spécifié d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the value to get.">Index de base zéro de la valeur à obtenir.</param>
      <returns vsli:raw="The value at the specified index of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Valeur à l'index spécifié de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object that iterates through a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Retourne un objet <see cref="T:System.Collections.IDictionaryEnumerator" /> qui itère a sein d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objet <see cref="T:System.Collections.IDictionaryEnumerator" /> de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtient la clé à l'index spécifié d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the key to get.">Index de base zéro de la clé à obtenir.</param>
      <returns vsli:raw="The key at the specified index of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Clé à l'index spécifié de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetKeyList">
      <summary vsli:raw="Gets the keys in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtient les clés d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objet <see cref="T:System.Collections.IList" /> contenant les clés de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetValueList">
      <summary vsli:raw="Gets the values in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtient les valeurs d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objet <see cref="T:System.Collections.IList" /> contenant les valeurs de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfKey(System.Object)">
      <summary vsli:raw="Returns the zero-based index of the specified key in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Retourne l'index de base zéro de la clé spécifiée dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Clé à rechercher dans l'objet <see cref="T:System.Collections.SortedList" />.</param>
      <returns vsli:raw="The zero-based index of the &lt;paramref name=&quot;key&quot; /&gt; parameter, if &lt;paramref name=&quot;key&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object; otherwise, -1.">Index de base zéro du paramètre <paramref name="key" />, si <paramref name="key" /> se trouve dans l'objet <see cref="T:System.Collections.SortedList" /> ; sinon, -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">Le comparateur lève une exception.</exception>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfValue(System.Object)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified value in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Retourne l'index de base zéro de la première occurrence de la valeur spécifiée dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Valeur à trouver dans l'objet <see cref="T:System.Collections.SortedList" />. La valeur peut être <see langword="null" />.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the &lt;paramref name=&quot;value&quot; /&gt; parameter, if &lt;paramref name=&quot;value&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object; otherwise, -1.">Index de base zéro de la première occurrence du paramètre <paramref name="value" />, si <paramref name="value" /> se trouve dans l'objet <see cref="T:System.Collections.SortedList" /> ; sinon, -1.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object has a fixed size.">Obtient une valeur indiquant si un objet <see cref="T:System.Collections.SortedList" /> est de taille fixe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> est de taille fixe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.">Obtient une valeur indiquant si un objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is synchronized (thread safe).">Obtient une valeur indiquant si l'accès à un objet <see cref="T:System.Collections.SortedList" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à l'objet <see cref="T:System.Collections.SortedList" /> est synchronisé (thread-safe) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with a specific key in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtient ou définit la valeur associée à une clé spécifique dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key" vsli:raw="The key associated with the value to get or set.">Clé dont la valeur doit être obtenue ou définie.</param>
      <returns vsli:raw="The value associated with the &lt;paramref name=&quot;key&quot; /&gt; parameter in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object, if &lt;paramref name=&quot;key&quot; /&gt; is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valeur associée au paramètre <paramref name="key" /> dans l'objet <see cref="T:System.Collections.SortedList" />, si <paramref name="key" /> existe ; sinon, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property is set, &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">La propriété est définie et l'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.  

ou - 
La propriété est définie, <paramref name="key" /> n’existe pas dans la collection et <see cref="T:System.Collections.SortedList" /> a une taille fixe.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to add the element to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">La mémoire disponible est insuffisante pour ajouter l'élément à <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">Le comparateur lève une exception.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Keys">
      <summary vsli:raw="Gets the keys in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtient les clés d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objet <see cref="T:System.Collections.ICollection" /> contenant les clés de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Supprime d'un objet <see cref="T:System.Collections.SortedList" /> l'élément ayant la clé spécifiée.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Clé de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">L'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.  
ou 
<see cref="T:System.Collections.SortedList" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Collections.SortedList.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Supprime l'élément à l'index spécifié d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Index de base zéro de l'élément à supprimer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> est en lecture seule.  

ou - 
<see cref="T:System.Collections.SortedList" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
      <summary vsli:raw="Replaces the value at a specific index in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Remplace la valeur à l'index spécifié dans un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to save &lt;paramref name=&quot;value&quot; /&gt;.">Index de base zéro au niveau duquel enregistrer <paramref name="value" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to save into the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> à enregistrer dans l'objet <see cref="T:System.Collections.SortedList" />. La valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> sort de la plage d'index valides pour l'objet <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
      <summary vsli:raw="Returns a synchronized (thread-safe) wrapper for a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Retourne un wrapper synchronisé (thread-safe) pour un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object to synchronize.">Objet <see cref="T:System.Collections.SortedList" /> à synchroniser.</param>
      <returns vsli:raw="A synchronized (thread-safe) wrapper for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Wrapper synchronisé (thread-safe) pour l'objet <see cref="T:System.Collections.SortedList" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;list&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="list" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.SortedList.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objet pouvant être utilisé pour synchroniser l’accès à l’objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">Retourne un <see cref="T:System.Collections.IEnumerator" /> qui itère au sein de <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.TrimToSize">
      <summary vsli:raw="Sets the capacity to the actual number of elements in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Affecte à la capacité le nombre réel d'éléments d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">L'objet <see cref="T:System.Collections.SortedList" /> est en lecture seule.  

ou - 
<see cref="T:System.Collections.SortedList" /> est de taille fixe.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Values">
      <summary vsli:raw="Gets the values in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtient les valeurs d'un objet <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objet <see cref="T:System.Collections.ICollection" /> contenant les valeurs de l'objet <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary vsli:raw="Creates collections that ignore the case in strings.">Crée des collections qui ignorent la casse dans les chaînes.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.CollectionsUtil&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Specialized.CollectionsUtil" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary vsli:raw="Creates a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the default initial capacity.">Crée une nouvelle instance ne respectant pas la casse de la classe <see cref="T:System.Collections.Hashtable" /> avec la capacité initiale par défaut.</summary>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the default initial capacity.">Nouvelle instance ne respectant pas la casse de la classe <see cref="T:System.Collections.Hashtable" /> avec la capacité initiale par défaut.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary vsli:raw="Copies the entries from the specified dictionary to a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the same initial capacity as the number of entries copied.">Copie les entrées du dictionnaire spécifié dans une nouvelle instance de la classe <see cref="T:System.Collections.Hashtable" /> avec la même capacité initiale que le nombre d'entrées copiées.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; to copy to a new case-insensitive &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt;.">
        <see cref="T:System.Collections.IDictionary" /> à copier vers un nouveau <see cref="T:System.Collections.Hashtable" /> qui ne respecte pas la casse.</param>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class containing the entries from the specified &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Nouvelle instance ne respectant pas la casse de la classe <see cref="T:System.Collections.Hashtable" /> contenant les entrées du <see cref="T:System.Collections.IDictionary" /> spécifié.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary vsli:raw="Creates a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the specified initial capacity.">Crée une nouvelle instance ne respectant pas la casse de la classe <see cref="T:System.Collections.Hashtable" /> avec la capacité initiale spécifiée.</summary>
      <param name="capacity" vsli:raw="The approximate number of entries that the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; can initially contain.">Nombre approximatif d'entrées que <see cref="T:System.Collections.Hashtable" /> peut contenir initialement.</param>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the specified initial capacity.">Nouvelle instance ne respectant pas la casse de la classe <see cref="T:System.Collections.Hashtable" /> avec la capacité initiale spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that ignores the case of strings.">Crée une nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui ignore la casse des chaînes.</summary>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that ignores the case of strings.">Nouvelle instance de la classe <see cref="T:System.Collections.SortedList" /> qui ignore la casse des chaînes.</returns>
    </member>
    <member name="T:System.Collections.Stack">
      <summary vsli:raw="Represents a simple last-in-first-out (LIFO) non-generic collection of objects.">Représente une simple collection d'objets non générique de type dernier entré, premier sorti (LIFO, last-in-first-out).</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that is empty and has the default initial capacity.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Stack" /> qui est vide et possède la capacité initiale par défaut.</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Stack" /> qui contient des éléments copiés à partir de la collection spécifiée et qui possède la capacité initiale correspondant au nombre d'éléments copiés.</summary>
      <param name="col" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to copy elements from.">
        <see cref="T:System.Collections.ICollection" /> à partir duquel les éléments sont copiés.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;col&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="col" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Stack" /> qui est vide et possède une capacité égale à la plus grande valeur parmi la capacité initiale spécifiée et la capacité initiale par défaut.</summary>
      <param name="initialCapacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; can contain.">Nombre initial d'éléments que <see cref="T:System.Collections.Stack" /> peut contenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCapacity&quot; /&gt; is less than zero.">
        <paramref name="initialCapacity" /> est inférieur à zéro.</exception>
    </member>
    <member name="M:System.Collections.Stack.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Supprime tous les objets du <see cref="T:System.Collections.Stack" />.</summary>
    </member>
    <member name="M:System.Collections.Stack.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Crée une copie superficielle de <see cref="T:System.Collections.Stack" />.</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Copie superficielle de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Contains(System.Object)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Détermine si le <see cref="T:System.Collections.Stack" /> contient un élément.</summary>
      <param name="obj" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Objet à rechercher dans <see cref="T:System.Collections.Stack" />. La valeur peut être <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;paramref name=&quot;obj&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> existe dans <see cref="T:System.Collections.Stack" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Copie <see cref="T:System.Collections.Stack" /> dans un <see cref="T:System.Array" /> unidimensionnel existant commençant à l'index de tableau spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Stack" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> est multidimensionnel.  

ou - 
Le nombre d’éléments dans le <see cref="T:System.Collections.Stack" /> source est supérieur à la quantité d’espace disponible entre <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Le type du <see cref="T:System.Collections.Stack" /> source ne peut pas être converti automatiquement en type du <paramref name="array" /> de destination.</exception>
    </member>
    <member name="P:System.Collections.Stack.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Obtient le nombre d'éléments contenus dans le <see cref="T:System.Collections.Stack" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Nombre d'éléments contenus dans <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Retourne <see cref="T:System.Collections.IEnumerator" /> pour l'objet <see cref="T:System.Collections.Stack" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="P:System.Collections.Stack.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is synchronized (thread safe).">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.Stack" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.Stack" /> est synchronisé (thread-safe) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Peek">
      <summary vsli:raw="Returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; without removing it.">Retourne l'objet situé en haut de <see cref="T:System.Collections.Stack" /> sans le supprimer.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Object" /> situé en haut de <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is empty.">La <see cref="T:System.Collections.Stack" /> est vide.</exception>
    </member>
    <member name="M:System.Collections.Stack.Pop">
      <summary vsli:raw="Removes and returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Supprime et retourne l'objet en haut de <see cref="T:System.Collections.Stack" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; removed from the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Object" /> supprimé du haut de <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is empty.">La <see cref="T:System.Collections.Stack" /> est vide.</exception>
    </member>
    <member name="M:System.Collections.Stack.Push(System.Object)">
      <summary vsli:raw="Inserts an object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Insère un objet en haut de <see cref="T:System.Collections.Stack" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to push onto the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> sur lequel un push doit être exécuté dans <see cref="T:System.Collections.Stack" />. La valeur peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
      <summary vsli:raw="Returns a synchronized (thread safe) wrapper for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Retourne un wrapper synchronisé (thread-safe) pour <see cref="T:System.Collections.Stack" />.</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to synchronize.">
        <see cref="T:System.Collections.Stack" /> à synchroniser.</param>
      <returns vsli:raw="A synchronized wrapper around the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Wrapper synchronisé (thread-safe) autour de <see cref="T:System.Collections.Stack" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stack" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Stack.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Stack" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Object" /> pouvant être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to a new array.">Copie <see cref="T:System.Collections.Stack" /> vers un nouveau tableau.</summary>
      <returns vsli:raw="A new array containing copies of the elements of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Nouveau tableau contenant les copies des éléments de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
  </members>
</doc>