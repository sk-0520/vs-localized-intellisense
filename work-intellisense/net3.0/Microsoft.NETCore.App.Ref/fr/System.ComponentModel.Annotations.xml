<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.Annotations</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider">
      <summary vsli:raw="Extends the metadata information for a class by adding attributes and property information that is defined in an associated class.">Étend les informations de métadonnées pour une classe en ajoutant les informations d'attributs et de propriétés définies dans une classe associée.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified type.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> en utilisant le type spécifié.</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">Type pour lequel le fournisseur de métadonnées est créé.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified metadata provider type and associated type.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> en utilisant le type de fournisseur de métadonnées spécifié et le type d'associé.</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">Type pour lequel le fournisseur de métadonnées est créé.</param>
      <param name="associatedMetadataType" vsli:raw="The associated type that contains the metadata.">Type associé contenant les métadonnées.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;associatedMetadataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="associatedMetadataType" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
      <summary vsli:raw="Gets a type descriptor for the specified type and object.">Obtient un descripteur de type pour le type et l'objet spécifiés.</summary>
      <param name="objectType" vsli:raw="The type of object to retrieve the type descriptor for.">Type d'objet pour lequel le descripteur de type doit être récupéré.</param>
      <param name="instance" vsli:raw="An instance of the type.">Instance du type.</param>
      <returns vsli:raw="The descriptor that provides metadata for the type.">Descripteur qui fournit des métadonnées pour le type.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.AssociationAttribute">
      <summary vsli:raw="Specifies that an entity member represents a data relationship, such as a foreign key relationship.">Spécifie qu'un membre d'entité représente une relation de données, telle qu'une relation de clé étrangère.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociationAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociationAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.AssociationAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the association.">Nom de l'association.</param>
      <param name="thisKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;thisKey&quot; /&gt; side of the association.">Liste séparée par des virgules des noms de propriété des valeurs de clé du côté <paramref name="thisKey" /> de l'association.</param>
      <param name="otherKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;otherKey&quot; /&gt; side of the association.">Liste séparée par des virgules des noms de propriété des valeurs de clé du côté <paramref name="otherKey" /> de l'association.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.IsForeignKey">
      <summary vsli:raw="Gets or sets a value that indicates whether the association member represents a foreign key.">Obtient ou définit une valeur qui indique si le membre d'association représente une clé étrangère.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the association represents a foreign key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'association représente une clé étrangère ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.Name">
      <summary vsli:raw="Gets the name of the association.">Obtient le nom de l'association.</summary>
      <returns vsli:raw="The name of the association.">Nom de l'association.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey">
      <summary vsli:raw="Gets the property names of the key values on the OtherKey side of the association.">Obtient les noms de propriété des valeurs de clé du coté OtherKey de l'association.</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the OtherKey side of the association.">Liste séparée par des virgules des noms de propriété qui représentent les valeurs de clé du côté OtherKey de l'association.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">Obtient une collection des membres de clé individuels spécifiés dans la propriété <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" />.</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">Collection des membres de clé individuels spécifiés dans la propriété <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey">
      <summary vsli:raw="Gets the property names of the key values on the ThisKey side of the association.">Obtient les noms de propriété des valeurs de clé du coté ThisKey de l'association.</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the ThisKey side of the association.">Liste séparée par des virgules des noms de propriété qui représentent les valeurs de clé du côté ThisKey de l'association.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">Obtient une collection des membres de clé individuels spécifiés dans la propriété <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" />.</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">Collection des membres de clé individuels spécifiés dans la propriété <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CompareAttribute">
      <summary vsli:raw="Provides an attribute that compares two properties.">Fournit un attribut qui compare deux propriétés.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CompareAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.CompareAttribute" />.</summary>
      <param name="otherProperty" vsli:raw="The property to compare with the current property.">Propriété à comparer à la propriété actuelle.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Applique la mise en forme à un message d'erreur en fonction du champ de données dans lequel l'erreur s'est produite.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Nom du champ ayant provoqué l'échec de validation.</param>
      <returns vsli:raw="The formatted error message.">Message d'erreur mis en forme.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether a specified object is valid.">Détermine si un objet spécifié est valide.</summary>
      <param name="value" vsli:raw="The object to validate.">Objet à valider.</param>
      <param name="validationContext" vsli:raw="An object that contains information about the validation request.">Objet qui contient des informations sur la demande de validation.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherProperty">
      <summary vsli:raw="Gets the property to compare with the current property.">Obtient la propriété à comparer à la propriété actuelle.</summary>
      <returns vsli:raw="The other property.">Autre propriété.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherPropertyDisplayName">
      <summary vsli:raw="Gets the display name of the other property.">Obtient le nom complet de l'autre propriété.</summary>
      <returns vsli:raw="The display name of the other property.">Nom complet de l'autre propriété.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">Obtient une valeur qui indique si l'attribut requiert un contexte de validation.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'attribut requiert un contexte de validation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute">
      <summary vsli:raw="Specifies that a property participates in optimistic concurrency checks.">Spécifie qu'une propriété participe aux contrôles d'accès concurrentiel optimiste.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CreditCardAttribute">
      <summary vsli:raw="Specifies that a data field value is a credit card number.">Spécifie qu'une valeur de champ de données est un numéro de carte bancaire.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CreditCardAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.CreditCardAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified credit card number is valid.">Détermine si le nombre de cartes de crédit spécifié est valide.</summary>
      <param name="value" vsli:raw="The value to validate.">Valeur à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the credit card number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le numéro de carte de crédit est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute">
      <summary vsli:raw="Specifies a custom validation method that is used to validate a property or class instance.">Spécifie une méthode de validation personnalisée qui est utilisée pour valider une instance de classe ou de propriété.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CustomValidationAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute" />.</summary>
      <param name="validatorType" vsli:raw="The type that contains the method that performs custom validation.">Type contenant la méthode qui exécute la validation personnalisée.</param>
      <param name="method" vsli:raw="The method that performs custom validation.">Méthode qui exécute la validation personnalisée.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats a validation error message.">Met en forme un message d'erreur de validation.</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">Nom à inclure dans le message mis en forme.</param>
      <returns vsli:raw="An instance of the formatted error message.">Instance du message d'erreur mis en forme.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method">
      <summary vsli:raw="Gets the validation method.">Obtient la méthode de validation.</summary>
      <returns vsli:raw="The name of the validation method.">Nom de la méthode de validation.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType">
      <summary vsli:raw="Gets the type that performs custom validation.">Obtient le type qui exécute la validation personnalisée.</summary>
      <returns vsli:raw="The type that performs custom validation.">Type qui exécute la validation personnalisée.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataType">
      <summary vsli:raw="Represents an enumeration of the data types associated with data fields and parameters.">Représente une énumération des types de données associés à des champs de données et des paramètres.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.CreditCard">
      <summary vsli:raw="Represents a credit card number.">Représente un numéro de carte de crédit.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Currency">
      <summary vsli:raw="Represents a currency value.">Représente une valeur monétaire.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Custom">
      <summary vsli:raw="Represents a custom data type.">Représente un type de données personnalisé.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Date">
      <summary vsli:raw="Represents a date value.">Représente une valeur de date.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.DateTime">
      <summary vsli:raw="Represents an instant in time, expressed as a date and time of day.">Représente un instant, exprimé sous la forme d'une date ou d'une heure.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Duration">
      <summary vsli:raw="Represents a continuous time during which an object exists.">Représente une durée continue pendant laquelle un objet existe.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.EmailAddress">
      <summary vsli:raw="Represents an email address.">Représente une adresse e-mail.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Html">
      <summary vsli:raw="Represents an HTML file.">Représente un fichier HTML.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.ImageUrl">
      <summary vsli:raw="Represents a URL to an image.">Représente une URL d'image.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.MultilineText">
      <summary vsli:raw="Represents multi-line text.">Représente un texte multiligne.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Password">
      <summary vsli:raw="Represent a password value.">Représente une valeur de mot de passe.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PhoneNumber">
      <summary vsli:raw="Represents a phone number value.">Représente une valeur de numéro de téléphone.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PostalCode">
      <summary vsli:raw="Represents a postal code.">Représente un code postal.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Text">
      <summary vsli:raw="Represents text that is displayed.">Représente du texte affiché.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Time">
      <summary vsli:raw="Represents a time value.">Représente une valeur de temps.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Upload">
      <summary vsli:raw="Represents file upload data type.">Représente le type de données de téléchargement de fichiers.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Url">
      <summary vsli:raw="Represents a URL value.">Représente une valeur d'URL.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataTypeAttribute">
      <summary vsli:raw="Specifies the name of an additional type to associate with a data field.">Spécifie le nom d'un type supplémentaire à associer à un champ de données.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified type name.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> en utilisant le nom de type spécifié.</summary>
      <param name="dataType" vsli:raw="The name of the type to associate with the data field.">Le nom du type à associer au champ de données.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified field template name.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> à l’aide du nom du modèle de champ spécifié.</summary>
      <param name="customDataType" vsli:raw="The name of the custom field template to associate with the data field.">Le nom du modèle de champ personnalisé à associer au champ de données.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;customDataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).">
        <paramref name="customDataType" /> ou <see langword="null" /> est une chaîne vide ("").</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType">
      <summary vsli:raw="Gets the name of custom field template that is associated with the data field.">Obtient le nom du modèle de champ personnalisé associé au champ de données.</summary>
      <returns vsli:raw="The name of the custom field template that is associated with the data field.">Nom du modèle de champ personnalisé associé au champ de données.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType">
      <summary vsli:raw="Gets the type that is associated with the data field.">Obtient le type associé au champ de données.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataType&quot; /&gt; values.">Une des valeurs de <see cref="T:System.ComponentModel.DataAnnotations.DataType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat">
      <summary vsli:raw="Gets a data-field display format.">Obtient un format d'affichage de champ de données.</summary>
      <returns vsli:raw="The data-field display format.">Format d'affichage de champ de données.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName">
      <summary vsli:raw="Returns the name of the type that is associated with the data field.">Retourne le nom du type associé au champ de données.</summary>
      <returns vsli:raw="The name of the type associated with the data field.">Nom du type associé au champ de données.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">Vérifie que la valeur du champ de données est valide.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Valeur de champ de données à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">Toujours <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayAttribute">
      <summary vsli:raw="Provides a general-purpose attribute that lets you specify localizable strings for types and members of entity partial classes.">Fournit un attribut à usage général qui vous permet de spécifier les chaînes localisables pour les types et membres de classes partielles d'entité.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField">
      <summary vsli:raw="Gets or sets a value that indicates whether UI should be generated automatically in order to display this field.">Obtient ou définit une valeur qui indique si l'interface utilisateur doit être générée automatiquement pour afficher ce champ.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'interface utilisateur doit être générée automatiquement pour afficher ce champ ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">Une tentative d'obtention de la valeur de la propriété avant sa définition a été effectuée.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering UI is automatically displayed for this field.">Obtient ou définit une valeur qui indique si l'interface utilisateur du filtrage s'affiche automatiquement pour ce champ.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display filtering for this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'interface utilisateur doit être générée automatiquement pour afficher le filtrage de ce champ ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">Une tentative d'obtention de la valeur de la propriété avant sa définition a été effectuée.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description">
      <summary vsli:raw="Gets or sets a value that is used to display a description in the UI.">Obtient ou définit une valeur utilisée pour afficher une description dans l'interface utilisateur.</summary>
      <returns vsli:raw="The value that is used to display a description in the UI.">Valeur utilisée pour afficher une description dans l'interface utilisateur.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; property.">Retourne la valeur de la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" />.</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valeur de <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" /> si la propriété a été initialisée ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter">
      <summary vsli:raw="Returns a value that indicates whether UI should be generated automatically in order to display filtering for this field.">Retourne une valeur qui indique si l'interface utilisateur doit être générée automatiquement pour afficher le filtrage de ce champ.</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valeur de <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter" /> si la propriété a été initialisée ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">Retourne la valeur de la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</summary>
      <returns vsli:raw="The localized description, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">Description localisée si <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> a été spécifié et que la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> représente une clé de ressource ; sinon, valeur non localisée de la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">La propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> et la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> sont initialisées, mais une propriété statique publique qui a un nom qui correspond à la valeur <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> n'a pas pu être trouvée pour la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property.">Retourne la valeur de la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />.</summary>
      <returns vsli:raw="A value that will be used for grouping fields in the UI, if &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;. If the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property represents a resource key, a localized string is returned; otherwise, a non-localized string is returned.">Valeur qui sera utilisée pour le regroupement de champs dans l'interface utilisateur, si <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> a été initialisé ; sinon, <see langword="null" />. Si la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> a été spécifiée et que la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> représente une clé de ressource, une chaîne localisée est retournée ; sinon, une chaîne non localisée est retournée.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">La propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> et les propriétés <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> ont été définies, mais une propriété statique publique dont le nom correspond à la valeur <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> est introuvable sur le <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName">
      <summary vsli:raw="Returns a value that is used for field display in the UI.">Retourne une valeur utilisée pour l'affichage des champs dans l'interface utilisateur.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property.">Chaîne localisée pour la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> lorsque la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> a été spécifiée et que la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> représente une clé de ressource ; sinon, valeur non localisée de la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">La propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> et la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> sont initialisées, mais une propriété statique publique qui a un nom qui correspond à la valeur <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> n'a pas pu être trouvée pour la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property.">Retourne la valeur de la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" />.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property, if it has been set; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valeur de la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> si elle a été définie ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">Retourne la valeur de la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">Chaîne localisée pour la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> si la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> a été spécifiée et si la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> représente une clé de ressource ; sinon, valeur non localisée de la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">La propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> et les propriétés <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> ont été définies, mais une propriété statique publique dont le nom correspond à la valeur <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> est introuvable sur le <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property.">Retourne la valeur de la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />.</summary>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value property.">Chaîne localisée pour la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> si la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> a été spécifiée et si la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> représente une clé de ressource ; sinon, valeur non localisée de la propriété de valeur <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; properties were set, &#xA;but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">La propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> et les propriétés <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> ont été définies, mais une propriété statique publique dont le nom correspond à la valeur <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> est introuvable sur le <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName">
      <summary vsli:raw="Gets or sets a value that is used to group fields in the UI.">Obtient ou définit une valeur utilisée regrouper des champs dans l'interface utilisateur.</summary>
      <returns vsli:raw="A value that is used to group fields in the UI.">Valeur utilisée pour regrouper des champs dans l'interface utilisateur.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name">
      <summary vsli:raw="Gets or sets a value that is used for display in the UI.">Obtient ou définit une valeur utilisée pour l'affichage dans l'interface utilisateur.</summary>
      <returns vsli:raw="A value that is used for display in the UI.">Valeur utilisée pour l'affichage dans l'interface utilisateur.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order">
      <summary vsli:raw="Gets or sets the order weight of the column.">Obtient ou définit la largeur de la colonne.</summary>
      <returns vsli:raw="The order weight of the column.">Largeur de la colonne.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The getter of this property has been invoked but its value has not been explicitly set using the setter.">La méthode getter de cette propriété a été appelée, mais sa valeur n’a pas été définie explicitement avec la méthode setter.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt">
      <summary vsli:raw="Gets or sets a value that will be used to set the watermark for prompts in the UI.">Obtient ou définit une valeur qui sera utilisée pour définir le filigrane pour les invites dans l'interface utilisateur.</summary>
      <returns vsli:raw="A value that will be used to display a watermark in the UI.">Valeur qui sera utilisée pour afficher un filigrane dans l'interface utilisateur.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType">
      <summary vsli:raw="Gets or sets the type that contains the resources for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">Obtient ou définit le type qui contient les ressources pour les propriétés <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> et <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</summary>
      <returns vsli:raw="The type of the resource that contains the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">Type de la ressource qui contient les propriétés <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> et <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName">
      <summary vsli:raw="Gets or sets a value that is used for the grid column label.">Obtient ou définit une valeur utilisée pour l'étiquette de colonne de la grille.</summary>
      <returns vsli:raw="A value that is for the grid column label.">Valeur utilisée pour l'étiquette de colonne de la grille.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute">
      <summary vsli:raw="Specifies the column that is displayed in the referred table as a foreign-key column.">Spécifie la colonne affichée dans la table à laquelle il est fait référence comme colonne clé étrangère.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified column.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> à l'aide de la colonne spécifiée.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">Nom de la colonne à utiliser comme colonne d'affichage.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display and sort columns.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> en utilisant les colonnes de tri et d'affichage spécifiées.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">Nom de la colonne à utiliser comme colonne d'affichage.</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">Nom de la colonne à utiliser pour le tri.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display column, and the specified sort column and sort order.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> en utilisant la colonne d'affichage spécifiée et la colonne et l'ordre de tri spécifiés.</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">Nom de la colonne à utiliser comme colonne d'affichage.</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">Nom de la colonne à utiliser pour le tri.</param>
      <param name="sortDescending" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to sort in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour trier par ordre décroissant ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn">
      <summary vsli:raw="Gets the name of the column to use as the display field.">Obtient le nom de la colonne à utiliser comme champ d'affichage.</summary>
      <returns vsli:raw="The name of the display column.">Nom de la colonne d'affichage.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn">
      <summary vsli:raw="Gets the name of the column to use for sorting.">Obtient le nom de la colonne à utiliser pour le tri.</summary>
      <returns vsli:raw="The name of the sort column.">Nom de la colonne de tri.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending">
      <summary vsli:raw="Gets a value that indicates whether to sort in descending or ascending order.">Obtient une valeur qui indique s'il faut trier par ordre croissant ou décroissant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column will be sorted in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colonne doit être triée par ordre décroissant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
      <summary vsli:raw="Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.">Spécifie la manière dont les champs de données sont affichés et mis en forme par Dynamic Data ASP.NET.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode">
      <summary vsli:raw="Gets or sets a value that indicates whether the formatting string that is specified by the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString&quot; /&gt; property is applied to the field value when the data field is in edit mode.">Obtient ou définit une valeur qui indique si la chaîne de mise en forme spécifiée par la propriété <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> est appliquée à la valeur de champ lorsque le champ de données est en mode Édition.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting string applies to the field value in edit mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la chaîne de mise en forme s'applique à la valeur de champ en mode Édition ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull">
      <summary vsli:raw="Gets or sets a value that indicates whether empty string values (&quot;&quot;) are automatically converted to &lt;see langword=&quot;null&quot; /&gt; when the data field is updated in the data source.">Obtient ou définit une valeur qui indique si les chaînes vides ("") sont converties automatiquement en valeurs <see langword="null" /> lorsque le champ de données est mis à jour dans la source de données.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if empty string values are automatically converted to &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les chaînes vides sont converties automatiquement en <see langword="null" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString">
      <summary vsli:raw="Gets or sets the display format for the field value.">Obtient ou définit le format d'affichage de la valeur de champ.</summary>
      <returns vsli:raw="A formatting string that specifies the display format for the value of the data field. The default is an empty string (&quot;&quot;), which indicates that no special formatting is applied to the field value.">Chaîne de mise en forme qui spécifie le format d'affichage de la valeur du champ de données. La valeur par défaut est une chaîne vide (""), ce qui signifie qu'aucune mise en forme spéciale n'est appliquée à la valeur de champ.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText">
      <summary vsli:raw="Returns the UI display string for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.">Retourne la chaîne d’affichage de l’interface utilisateur pour <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.</summary>
      <returns vsli:raw="&lt;para&gt;The UI display string.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has not been specified, the value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has been specified and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; represents a resource key within that resource type, the localized value is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; have not been set, returns &lt;see langword=&quot;null&quot; /&gt;.&lt;/para&gt;">Chaîne d’affichage de l’interface utilisateur.
          Si <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> n’a pas été spécifié, la valeur de <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> est retournée.
          Si <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> a été spécifié et que <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> représente une clé de ressource au sein de ce type de ressource, la valeur localisée est retournée.
          Si <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> et <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> n’ont pas été définis, retourne <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; properties are set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; value cannot be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt;.">Les deux propriétés <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> et <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> sont définies, mais une propriété statique publique dont le nom correspond à la valeur <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> est introuvable sur le <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode">
      <summary vsli:raw="Gets or sets a value that indicates whether the field should be HTML-encoded.">Obtient ou définit une valeur qui indique si le champ doit être encodé en HTML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field should be HTML-encoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le champ doit être encodé en HTML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText">
      <summary vsli:raw="Gets or sets the text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;.">Obtient ou définit le texte affiché pour un champ lorsque la valeur du champ est <see langword="null" />.</summary>
      <returns vsli:raw="The text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;. The default is an empty string (&quot;&quot;), which indicates that this property is not set.">Texte affiché pour un champ lorsque la valeur du champ est <see langword="null" />. La valeur par défaut est une chaîne vide (""), ce qui signifie que cette propriété n'est pas définie.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the resources for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.&#xA;        &#xA;Using &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; along with &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;, allows the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText&quot; /&gt; method to return localized values.">Obtient ou définit le <see cref="T:System.Type" /> qui contient les ressources pour <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.
L’utilisation de <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> avec <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />, permet à la méthode <see cref="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText" /> de retourner des valeurs localisées.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EditableAttribute">
      <summary vsli:raw="Indicates whether a data field is editable.">Indique si un champ de données est modifiable.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EditableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EditableAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute" />.</summary>
      <param name="allowEdit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier que le champ est modifiable ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit">
      <summary vsli:raw="Gets a value that indicates whether a field is editable.">Obtient une valeur qui indique si un champ est modifiable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le champ est modifiable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue">
      <summary vsli:raw="Gets or sets a value that indicates whether an initial value is enabled.">Obtient ou définit une valeur qui indique si une valeur initiale est activée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an initial value is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si une valeur initiale est activée; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute">
      <summary vsli:raw="Validates an email address.">Valide une adresse de messagerie.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EmailAddressAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value matches the pattern of a valid email address.">Détermine si la valeur spécifiée correspond au modèle d'une adresse de messagerie valide.</summary>
      <param name="value" vsli:raw="The value to validate.">Valeur à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur spécifiée est valide ou <see langword="null" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute">
      <summary vsli:raw="Enables a .NET enumeration to be mapped to a data column.">Permet le mappage d'une énumération .NET Framework à une colonne de données.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" />.</summary>
      <param name="enumType" vsli:raw="The type of the enumeration.">Type de l'énumération.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.EnumType">
      <summary vsli:raw="Gets or sets the enumeration type.">Obtient ou définit le type de l'énumération.</summary>
      <returns vsli:raw="The enumeration type.">Type d'énumération.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">Vérifie que la valeur du champ de données est valide.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Valeur de champ de données à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data field value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur du champ de données est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute">
      <summary vsli:raw="Validates file name extensions.">Valide les extensions de nom de fichier.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.Extensions">
      <summary vsli:raw="Gets or sets the file name extensions.">Obtient ou définit les extensions de nom de fichier.</summary>
      <returns vsli:raw="The file name extensions, or the default file extensions (&quot;.png&quot;, &quot;.jpg&quot;, &quot;.jpeg&quot;, and &quot;.gif&quot;) if the property is not set.">Extensions de nom de fichier, ou extensions de fichier par défaut (".png », « .jpg », « .jpeg » et « .gif ») si la propriété n'est pas définie.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Applique la mise en forme à un message d'erreur en fonction du champ de données dans lequel l'erreur s'est produite.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Nom du champ ayant provoqué l'échec de validation.</param>
      <returns vsli:raw="The formatted error message.">Message d'erreur mis en forme.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the specified file name extension or extensions is valid.">Vérifie que les extensions de nom de fichier spécifiées sont valides.</summary>
      <param name="value" vsli:raw="A comma delimited list of valid file extensions.">Liste d'extensions de fichiers valides, délimitée par des virgules.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the file name extension is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l' extension de nom de fichier est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute">
      <summary vsli:raw="Represents an attribute that is used to specify the filtering behavior for a column.">Représente un attribut utilisé pour spécifier le comportement de filtrage pour une colonne.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> à l'aide de l'indication de filtrage de l'interface utilisateur.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">Nom du contrôle à utiliser pour le filtrage.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint and presentation layer name.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> à l'aide de l'indication de filtrage de l'interface utilisateur et du nom de la couche de présentation.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">Nom du contrôle à utiliser pour le filtrage.</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">Nom de la couche présentation qui prend en charge ce contrôle.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint, presentation layer name, and control parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> à l'aide de l'indication de filtrage de l'interface utilisateur, du nom de la couche de présentation et des paramètres de contrôle.</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">Nom du contrôle à utiliser pour le filtrage.</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">Nom de la couche présentation qui prend en charge ce contrôle.</param>
      <param name="controlParameters" vsli:raw="The list of parameters for the control.">Liste des paramètres pour le contrôle.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets the name/value pairs that are used as parameters in the control's constructor.">Obtient les paires nom/valeur utilisées comme paramètres dans le constructeur du contrôle.</summary>
      <returns vsli:raw="The name/value pairs that are used as parameters in the control's constructor.">Paires nom/valeur utilisées comme paramètres dans le constructeur du contrôle.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this attribute instance is equal to a specified object.">Retourne une valeur qui indique si cette instance d'attribut est égale à un objet spécifié.</summary>
      <param name="obj" vsli:raw="The object to compare with this attribute instance.">Instance d'objet à comparer avec cette instance d'attribut.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed object is equal to this attribute instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet passé est égal à cette instance d'attribut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint">
      <summary vsli:raw="Gets the name of the control to use for filtering.">Obtient le nom du contrôle à utiliser pour le filtrage.</summary>
      <returns vsli:raw="The name of the control to use for filtering.">Nom du contrôle à utiliser pour le filtrage.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this attribute instance.">Retourne le code de hachage de cette instance d'attribut.</summary>
      <returns vsli:raw="This attribute instance hash code.">Code de hachage de cette instance de l’attribut.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets the name of the presentation layer that supports this control.">Obtient le nom de la couche de présentation qui prend en charge ce contrôle.</summary>
      <returns vsli:raw="The name of the presentation layer that supports this control.">Nom de la couche présentation qui prend en charge ce contrôle.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.IValidatableObject">
      <summary vsli:raw="Provides a way for an object to be validated.">Offre un moyen d'invalider un objet.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid.">Détermine si l'objet spécifié est valide.</summary>
      <param name="validationContext" vsli:raw="The validation context.">Contexte de validation.</param>
      <returns vsli:raw="A collection that holds failed-validation information.">Collection qui contient des informations de validations ayant échoué.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.KeyAttribute">
      <summary vsli:raw="Denotes one or more properties that uniquely identify an entity.">Dénote une ou plusieurs propriétés qui identifient une entité de manière unique.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.KeyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.KeyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute">
      <summary vsli:raw="Specifies the maximum length of array or string data allowed in a property.">Spécifie la longueur maximale du tableau ou des données de type chaîne autorisée dans une propriété.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class based on the &lt;paramref name=&quot;length&quot; /&gt; parameter.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" /> en fonction du paramètre <paramref name="length" />.</summary>
      <param name="length" vsli:raw="The maximum allowable length of array or string data.">Longueur maximale autorisée du tableau ou des données de type chaîne.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Applique une mise en forme à un message d'erreur spécifié.</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">Nom à inclure dans la chaîne mise en forme.</param>
      <returns vsli:raw="A localized string to describe the maximum acceptable length.">Chaîne localisée pour décrire la longueur acceptable maximale.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Détermine si un objet spécifié est valide.</summary>
      <param name="value" vsli:raw="The object to validate.">Objet à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is null, or if the value is less than or equal to the specified maximum length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur est null ou inférieure ou égale à la longueur maximale spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is zero or less than negative one.">La longueur est égale à zéro ou inférieure à 1 négatif.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MaxLengthAttribute.Length">
      <summary vsli:raw="Gets the maximum allowable length of the array or string data.">Obtient la longueur maximale autorisée du tableau ou des données de type chaîne.</summary>
      <returns vsli:raw="The maximum allowable length of the array or string data.">Longueur maximale autorisée du tableau ou des données de type chaîne.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute">
      <summary vsli:raw="Specifies the metadata class to associate with a data model class.">Spécifie la classe de métadonnées à associer à une classe de modèle de données.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute" />.</summary>
      <param name="metadataClassType" vsli:raw="The metadata class to reference.">Classe de métadonnées à référencer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;metadataClassType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="metadataClassType" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.MetadataClassType">
      <summary vsli:raw="Gets the metadata class that is associated with a data-model partial class.">Obtient la classe de métadonnées associée à une classe partielle de modèle de données.</summary>
      <returns vsli:raw="The type value that represents the metadata class.">Valeur de type qui représente la classe de métadonnées.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MinLengthAttribute">
      <summary vsli:raw="Specifies the minimum length of array or string data allowed in a property.">Spécifie la longueur minimale du tableau ou des données de type chaîne autorisée dans une propriété.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MinLengthAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.MinLengthAttribute" />.</summary>
      <param name="length" vsli:raw="The length of the array or string data.">Longueur du tableau ou des données de type chaîne.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Applique une mise en forme à un message d'erreur spécifié.</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">Nom à inclure dans la chaîne mise en forme.</param>
      <returns vsli:raw="A localized string to describe the minimum acceptable length.">Chaîne localisée pour décrire la longueur acceptable minimale.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Détermine si un objet spécifié est valide.</summary>
      <param name="value" vsli:raw="The object to validate.">Objet à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet spécifié est valide ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is less than zero.">La longueur est inférieure à zéro.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MinLengthAttribute.Length">
      <summary vsli:raw="Gets or sets the minimum allowable length of the array or string data.">Obtient ou définit la longueur minimale autorisée des données du tableau ou de type chaîne.</summary>
      <returns vsli:raw="The minimum allowable length of the array or string data.">Longueur minimale autorisée du tableau ou des données de type chaîne.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.PhoneAttribute">
      <summary vsli:raw="Specifies that a data field value is a well-formed phone number.">Spécifie qu'une valeur de champ de données est un numéro de téléphone bien formé.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.PhoneAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.PhoneAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified phone number is in a valid phone number format.">Détermine si le numéro de téléphone spécifié est dans un format de numéro de téléphone valide.</summary>
      <param name="value" vsli:raw="The value to validate.">Valeur à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the phone number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le numéro de téléphone est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RangeAttribute">
      <summary vsli:raw="Specifies the numeric range constraints for the value of a data field.">Spécifie les contraintes de plages numériques pour la valeur d'un champ de données.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> à l'aide des valeurs minimale et maximale spécifiées.</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Spécifie la valeur minimale autorisée pour la valeur du champ de données.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Spécifie la valeur maximale autorisée pour la valeur du champ de données.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> à l'aide des valeurs minimale et maximale spécifiées.</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Spécifie la valeur minimale autorisée pour la valeur du champ de données.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Spécifie la valeur maximale autorisée pour la valeur du champ de données.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values and the specific type.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> à l'aide des valeurs minimale et maximale spécifiées et du type spécifié.</summary>
      <param name="type" vsli:raw="Specifies the type of the object to test.">Spécifie le type de l'objet à tester.</param>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">Spécifie la valeur minimale autorisée pour la valeur du champ de données.</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">Spécifie la valeur maximale autorisée pour la valeur du champ de données.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ConvertValueInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether any conversions of the value being validated to &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType&quot; /&gt; as set by the &lt;c&gt;type&lt;/c&gt; parameter of the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)&quot; /&gt; constructor use the invariant culture or the current culture.">Obtient ou définit une valeur qui détermine si toutes les conversions de la valeur à valider vers <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType" /> comme défini par le paramètre <c>type</c> du constructeur <see cref="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)" /> utilisent la culture invariante ou la culture actuelle.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the invariant culture for any conversions; &lt;see langword=&quot;false&quot; /&gt; to use the culture that is current at the time of the validation.">
        <see langword="true" />pour utiliser la culture dite indifférente pour toutes les conversions; <see langword="false" /> pour utiliser la culture actuelle au moment de la validation.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message that is displayed when range validation fails.">Met en forme le message d'erreur affiché en cas d'échec de la validation de la plage.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Nom du champ ayant provoqué l'échec de validation.</param>
      <returns vsli:raw="The formatted error message.">Message d'erreur mis en forme.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is in the specified range.">Vérifie que la valeur du champ de données est dans la plage spécifiée.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Valeur de champ de données à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is in the range; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur spécifiée se situe dans la plage ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was outside the allowed range.">La valeur du champ de données était en dehors de la plage autorisée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum">
      <summary vsli:raw="Gets the maximum allowed field value.">Obtient la valeur maximale autorisée pour le champ.</summary>
      <returns vsli:raw="The maximum value that is allowed for the data field.">Valeur maximale autorisée pour le champ de données.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum">
      <summary vsli:raw="Gets the minimum allowed field value.">Obtient la valeur minimale autorisée pour le champ.</summary>
      <returns vsli:raw="The minimum value that is allowed for the data field.">Valeur minimale autorisée pour le champ de données.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType">
      <summary vsli:raw="Gets the type of the data field whose value must be validated.">Obtient le type du champ de données dont la valeur doit être validée.</summary>
      <returns vsli:raw="The type of the data field whose value must be validated.">Type du champ de données dont la valeur doit être validée.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ParseLimitsInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether string values for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum&quot; /&gt; are parsed using the invariant culture rather than the current culture.">Obtient ou définit une valeur qui détermine si les valeurs de chaîne pour <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum" /> et <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum" /> sont analysées avec la culture invariante au lieu de la culture actuelle.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
      <summary vsli:raw="Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.">Spécifie qu'une valeur de champ de données dans Dynamic Data ASP.NET doit correspondre à l'expression régulière spécifiée.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
      <param name="pattern" vsli:raw="The regular expression that is used to validate the data field value.">Expression régulière utilisée pour valider la valeur du champ de données.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message to display if the regular expression validation fails.">Met en forme le message d'erreur à afficher en cas d'échec de validation de l'expression régulière.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Nom du champ ayant provoqué l'échec de validation.</param>
      <returns vsli:raw="The formatted error message.">Message d'erreur mis en forme.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">L’attribut actuel n’est pas bien formé.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">Le <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> n’est pas une expression régulière valide.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks whether the value entered by the user matches the regular expression pattern.">Vérifie si la valeur entrée par l'utilisateur correspond au modèle d'expression régulière.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Valeur de champ de données à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la validation réussit ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value did not match the regular expression pattern.">La valeur du champ de données ne correspondait pas au modèle d'expression régulière.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">L’attribut actuel n’est pas bien formé.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> n’est pas une expression régulière valide.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
      <summary vsli:raw="Gets or sets the amount of time in milliseconds to execute a single matching operation before the operation times out.">Obtient ou définit la durée en millisecondes pour exécuter une seule opération de correspondance avant l’expiration de l’opération.</summary>
      <returns vsli:raw="The amount of time in milliseconds to execute a single matching operation.">Durée en millisecondes pour exécuter une seule opération de correspondance.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
      <summary vsli:raw="Gets the regular expression pattern.">Obtient le modèle d'expression régulière.</summary>
      <returns vsli:raw="The pattern to match.">Modèle pour lequel établir une correspondance.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RequiredAttribute">
      <summary vsli:raw="Specifies that a data field value is required.">Spécifie qu'une valeur de champ de données est requise.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RequiredAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />.</summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings">
      <summary vsli:raw="Gets or sets a value that indicates whether an empty string is allowed.">Obtient ou définit une valeur qui indique si une chaîne vide est autorisée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an empty string is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une chaîne vide est autorisée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the required data field is not empty.">Vérifie que la valeur du champ de données requis n'est pas vide.</summary>
      <param name="value" vsli:raw="The data field value to validate.">Valeur de champ de données à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la validation réussit ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was &lt;see langword=&quot;null&quot; /&gt;.">La valeur du champ de données était <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute">
      <summary vsli:raw="Specifies whether a class or data column uses scaffolding.">Spécifie si une classe ou une colonne de données utilise la structure.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute&quot; /&gt; using the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold&quot; /&gt; property.">Initialise une nouvelle instance de <see cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" /> à l'aide de la propriété <see cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />.</summary>
      <param name="scaffold" vsli:raw="The value that specifies whether scaffolding is enabled.">Valeur qui spécifie si la structure est activée.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold">
      <summary vsli:raw="Gets or sets the value that specifies whether scaffolding is enabled.">Obtient ou définit la valeur qui spécifie si la structure est activée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if scaffolding is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la génération de modèles automatique est activée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute">
      <summary vsli:raw="Represents the database column that a property is mapped to.">Représente la colonne de base de données à laquelle une propriété est mappée.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the column the property is mapped to.">Nom de la colonne à laquelle la propriété est mappée.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Name">
      <summary vsli:raw="Gets the name of the column the property is mapped to.">Obtient le nom de la colonne à laquelle la propriété est mappée.</summary>
      <returns vsli:raw="The name of the column the property is mapped to.">Nom de la colonne à laquelle la propriété est mappée.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Order">
      <summary vsli:raw="Gets or sets the zero-based order of the column the property is mapped to.">Obtient ou définit l'ordre de base zéro de la colonne à laquelle la propriété est mappée.</summary>
      <returns vsli:raw="The order of the column.">Ordre de la colonne.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.TypeName">
      <summary vsli:raw="Gets or sets the database provider specific data type of the column the property is mapped to.">Obtient ou définit le type de données spécifique du fournisseur de bases de données de la colonne à laquelle la propriété est mappée.</summary>
      <returns vsli:raw="The database provider specific data type of the column the property is mapped to.">Type de données spécifique du fournisseur de bases de données de la colonne à laquelle la propriété est mappée.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute">
      <summary vsli:raw="Denotes that the class is a complex type. Complex types are non-scalar properties of entity types that enable scalar properties to be organized within entities. Complex types do not have keys and cannot be managed by the Entity Framework apart from the parent object.">Dénote que la classe est un type complexe. Les types complexes sont les propriétés non scalaires des types d'entités qui permettent d'organiser les propriétés scalaires au sein des entités. Les types complexes n’ont pas de clés et ne peuvent pas être gérés par l’Entity Framework, mis à part l’objet parent.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute">
      <summary vsli:raw="Specifies how the database generates values for a property.">Indique comment la base de données génère les valeurs d'une propriété.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute" />.</summary>
      <param name="databaseGeneratedOption" vsli:raw="The database generated option.">Option générée par la base de données.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.DatabaseGeneratedOption">
      <summary vsli:raw="Gets or sets the pattern used to generate values for the property in the database.">Obtient ou définit le modèle utilisé pour générer des valeurs pour la propriété de la base de données.</summary>
      <returns vsli:raw="The database generated option.">Option générée par la base de données.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption">
      <summary vsli:raw="Represents the pattern used to generate values for a property in the database.">Représente le modèle utilisé pour générer des valeurs pour une propriété dans la base de données.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed">
      <summary vsli:raw="The database generates a value when a row is inserted or updated.">La base de données génère une valeur lorsqu'une ligne est insérée ou mise à jour.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity">
      <summary vsli:raw="The database generates a value when a row is inserted.">La base de données génère une valeur lorsqu'une ligne est insérée.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None">
      <summary vsli:raw="The database does not generate values.">La base de données ne génère pas de valeurs.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute">
      <summary vsli:raw="Denotes a property used as a foreign key in a relationship.">Dénote une propriété utilisée comme une clé étrangère dans une relation.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the associated navigation property, or the name of one or more associated foreign keys.">Nom de la propriété de navigation associée, ou nom d’une ou plusieurs clés étrangères associées.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.Name">
      <summary vsli:raw="Gets the name of the associated navigation property or of the associated foreign keys.">Obtient le nom de la propriété de navigation associée ou des clés étrangères associées.</summary>
      <returns vsli:raw="The name of the associated navigation property or of the associated foreign keys.">Nom de la propriété de navigation associée ou des clés étrangères associées.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute">
      <summary vsli:raw="Specifies the inverse of a navigation property that represents the other end of the same relationship.">Spécifie l'inverse d'une propriété de navigation qui représente l'autre terminaison de la même relation.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&quot; /&gt; class using the specified property.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" /> à l'aide de la propriété spécifiée.</summary>
      <param name="property" vsli:raw="The navigation property representing the other end of the same relationship.">Propriété de navigation représentant l'autre extrémité de la même relation.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.Property">
      <summary vsli:raw="Gets the navigation property representing the other end of the same relationship.">Obtient la propriété de navigation représentant l'autre extrémité de la même relation.</summary>
      <returns vsli:raw="The property of the attribute.">Propriété de l'attribut.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute">
      <summary vsli:raw="Denotes that a property or class should be excluded from database mapping.">Dénote qu'une propriété ou classe doit être exclue du mappage de base de données.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute">
      <summary vsli:raw="Specifies the database table that a class is mapped to.">Spécifie la table de base de données à laquelle une classe est mappée.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.TableAttribute&quot; /&gt; class using the specified name of the table.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute" /> à l'aide du nom de la table spécifié.</summary>
      <param name="name" vsli:raw="The name of the table the class is mapped to.">Nom de la table à laquelle la classe est mappée.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Name">
      <summary vsli:raw="Gets the name of the table the class is mapped to.">Obtient le nom de la table à laquelle la classe est mappée.</summary>
      <returns vsli:raw="The name of the table the class is mapped to.">Nom de la table à laquelle la classe est mappée.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Schema">
      <summary vsli:raw="Gets or sets the schema of the table the class is mapped to.">Obtient ou définit le schéma de la table auquel la classe est mappée.</summary>
      <returns vsli:raw="The schema of the table the class is mapped to.">Schéma de la table à laquelle la classe est mappée.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.StringLengthAttribute">
      <summary vsli:raw="Specifies the minimum and maximum length of characters that are allowed in a data field.">Spécifie la longueur minimale et maximale des caractères autorisés dans un champ de données.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.StringLengthAttribute&quot; /&gt; class by using a specified maximum length.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> en utilisant une longueur maximale spécifiée.</summary>
      <param name="maximumLength" vsli:raw="The maximum length of a string.">Longueur maximale d'une chaîne.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">Applique une mise en forme à un message d'erreur spécifié.</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">Nom du champ ayant provoqué l'échec de validation.</param>
      <returns vsli:raw="The formatted error message.">Message d'erreur mis en forme.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;paramref name=&quot;minimumLength&quot; /&gt;.">
        <paramref name="maximumLength" /> est négatif.  
ou 
 <paramref name="maximumLength" /> est inférieur à <paramref name="minimumLength" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">Détermine si un objet spécifié est valide.</summary>
      <param name="value" vsli:raw="The object to validate.">Objet à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet spécifié est valide ; sinon <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength&quot; /&gt;.">
        <paramref name="maximumLength" /> est un nombre négatif.  

ou - 
<paramref name="maximumLength" /> est inférieur à <see cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength">
      <summary vsli:raw="Gets or sets the maximum length of a string.">Obtient ou définit la longueur maximale d'une chaîne.</summary>
      <returns vsli:raw="The maximum length a string.">Longueur maximale d'une chaîne.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength">
      <summary vsli:raw="Gets or sets the minimum length of a string.">Obtient ou définit la longueur minimale d'une chaîne.</summary>
      <returns vsli:raw="The minimum length of a string.">Longueur minimale d'une chaîne.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.TimestampAttribute">
      <summary vsli:raw="Specifies the data type of the column as a row version.">Spécifie le type de données de la colonne en tant que version de colonne.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.TimestampAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.TimestampAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
      <summary vsli:raw="Specifies the template or user control that Dynamic Data uses to display a data field.">Spécifie le modèle ou le contrôle utilisateur utilisé par Dynamic Data pour afficher un champ de données.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using a specified user control.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> en utilisant un nom de contrôle spécifié par l'utilisateur.</summary>
      <param name="uiHint" vsli:raw="The user control to use to display the data field.">Contrôle utilisateur à utiliser pour afficher le champ de données.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class using the specified user control and specified presentation layer.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> en utilisant le contrôle utilisateur et la couche de présentation spécifiés.</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">Contrôle utilisateur (modèle de champ) à utiliser pour afficher le champ de données.</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">Couche de présentation qui utilise la classe. Peut avoir la valeur "HTML", "Silverlight", "WPF" ou "WinForms".</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using the specified user control, presentation layer, and control parameters.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> en utilisant le contrôle utilisateur, la couche de présentation et les paramètres de contrôle spécifiés.</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">Contrôle utilisateur (modèle de champ) à utiliser pour afficher le champ de données.</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">Couche de présentation qui utilise la classe. Peut avoir la valeur "HTML", "Silverlight", "WPF" ou "WinForms".</param>
      <param name="controlParameters" vsli:raw="The object to use to retrieve values from any data sources.">Objet à utiliser pour extraire des valeurs de toute source de données.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or it is a constraint key.  &#xA;  &#xA; -or-  &#xA;  &#xA; The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is not a string.">
        <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> est <see langword="null" /> ou est une clé de contrainte.  

ou - 
La valeur de <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> n'est pas une chaîne.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Web.DynamicData.DynamicControlParameter&quot; /&gt; object to use to retrieve values from any data source.">Obtient ou définit l'objet <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> à utiliser pour extraire des valeurs de toute source de données.</summary>
      <returns vsli:raw="A collection of key/value pairs.">Collection de paires clé-valeur.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether this instance is equal to the specified object.">Obtient une valeur qui indique si cette instance équivaut à l'objet spécifié.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance, or a &lt;see langword=&quot;null&quot; /&gt; reference.">Objet à comparer à cette instance ou référence <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet spécifié équivaut à cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current instance of the attribute.">Obtient le code de hachage de l'instance actuelle de l'attribut.</summary>
      <returns vsli:raw="The attribute instance hash code.">Code de hachage de l'instance de l'attribut.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets or sets the presentation layer that uses the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class.">Obtient ou définit la couche de présentation qui utilise la classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />.</summary>
      <returns vsli:raw="The presentation layer that is used by this class.">Couche de présentation utilisée par cette classe.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
      <summary vsli:raw="Gets or sets the name of the field template to use to display the data field.">Obtient ou définit le nom du modèle de champ à utiliser pour afficher le champ de données.</summary>
      <returns vsli:raw="The name of the field template that displays the data field.">Nom du modèle de champ qui affiche le champ de données.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UrlAttribute">
      <summary vsli:raw="Provides URL validation.">Fournit la validation de l'URL.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UrlAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.UrlAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.IsValid(System.Object)">
      <summary vsli:raw="Validates the format of the specified URL.">Valide le format de l'URL spécifiée.</summary>
      <param name="value" vsli:raw="The URL to validate.">URL à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the URL format is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le format d'URL est valide ou <see langword="null" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationAttribute">
      <summary vsli:raw="Serves as the base class for all validation attributes.">Sert de classe de base pour tous les attributs de validation.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the function that enables access to validation resources.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> à l’aide de la fonction permettant d’accéder aux ressources de validation.</summary>
      <param name="errorMessageAccessor" vsli:raw="The function that enables access to validation resources.">La fonction permettant d’accéder aux ressources de validation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;errorMessageAccessor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="errorMessageAccessor" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the error message to associate with a validation control.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> à l'aide du message d'erreur à associer à un contrôle de validation.</summary>
      <param name="errorMessage" vsli:raw="The error message to associate with a validation control.">Message d'erreur à associer à un contrôle de validation.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
      <summary vsli:raw="Gets or sets an error message to associate with a validation control if validation fails.">Obtient ou définit un message d'erreur à associer à un contrôle de validation si la validation échoue.</summary>
      <returns vsli:raw="The error message that is associated with the validation control.">Message d'erreur associé au contrôle de validation.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
      <summary vsli:raw="Gets or sets the error message resource name to use in order to look up the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType&quot; /&gt; property value if validation fails.">Obtient ou définit le nom de la ressource de message d'erreur à utiliser pour rechercher la valeur de la propriété <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType" /> si la validation échoue.</summary>
      <returns vsli:raw="The error message resource that is associated with a validation control.">Ressource de message d'erreur associée à un contrôle de validation.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
      <summary vsli:raw="Gets or sets the resource type to use for error-message lookup if validation fails.">Obtient ou définit le type de ressource à utiliser pour la recherche de message d'erreur si une validation échoue.</summary>
      <returns vsli:raw="The type of error message that is associated with a validation control.">Type de message d'erreur associé à un contrôle de validation.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString">
      <summary vsli:raw="Gets the localized validation error message.">Obtient le message d'erreur de validation localisé.</summary>
      <returns vsli:raw="The localized validation error message.">Message d'erreur de validation localisé.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">Applique la mise en forme à un message d'erreur en fonction du champ de données dans lequel l'erreur s'est produite.</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">Nom à inclure dans le message mis en forme.</param>
      <returns vsli:raw="An instance of the formatted error message.">Instance du message d'erreur mis en forme.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Checks whether the specified value is valid with respect to the current validation attribute.">Vérifie si la valeur spécifiée est valide en tenant compte de l'attribut de validation actuel.</summary>
      <param name="value" vsli:raw="The value to validate.">Valeur à valider.</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">Informations de contexte concernant l'opération de validation.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">Instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">L’attribut actuel n’est pas bien formé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationContext" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> n’a pas été implémenté par une classe dérivée.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value of the object is valid.">Détermine si la valeur spécifiée de l'objet est valide.</summary>
      <param name="value" vsli:raw="The value of the object to validate.">Valeur de l'objet à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur spécifiée est valide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">L’attribut actuel n’est pas bien formé.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="Neither overload of &lt;see langword=&quot;IsValid&quot; /&gt; has been implemented by a derived class.">Aucune des surcharges de <see langword="IsValid" /> n’a été implémentée par une classe dérivée.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified value with respect to the current validation attribute.">Valide la valeur spécifiée en tenant compte de l'attribut de validation actuel.</summary>
      <param name="value" vsli:raw="The value to validate.">Valeur à valider.</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">Informations de contexte concernant l'opération de validation.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">Instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">L’attribut actuel n’est pas bien formé.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> n’a pas été implémenté par une classe dérivée.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">Obtient une valeur qui indique si l'attribut requiert un contexte de validation.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'attribut requiert un contexte de validation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified object.">Valide l'objet spécifié.</summary>
      <param name="value" vsli:raw="The object to validate.">Objet à valider.</param>
      <param name="validationContext" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; object that describes the context where the validation checks are performed. This parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> qui décrit le contexte dans lequel les contrôles de validation sont effectués. Ce paramètre ne peut pas être <see langword="null" />.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="Validation failed.">Échec de la validation.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">L’attribut actuel n’est pas bien formé.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> n’a pas été implémenté par une classe dérivée.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)">
      <summary vsli:raw="Validates the specified object.">Valide l'objet spécifié.</summary>
      <param name="value" vsli:raw="The value of the object to validate.">Valeur de l'objet à valider.</param>
      <param name="name" vsli:raw="The name to include in the error message.">Nom à inclure dans le message d'erreur.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not valid.">
        <paramref name="value" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">L’attribut actuel n’est pas bien formé.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationContext">
      <summary vsli:raw="Describes the context in which a validation check is performed.">Décrit le contexte dans lequel un contrôle de validation est exécuté.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object instance.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> à l'aide de l'instance d'objet spécifiée</summary>
      <param name="instance" vsli:raw="The object instance to validate. It cannot be &lt;see langword=&quot;null&quot; /&gt;.">Instance de l'objet à valider. Ne peut pas être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object and an optional property bag.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> à l'aide de l'objet spécifié et d'un conteneur des propriétés facultatif.</summary>
      <param name="instance" vsli:raw="The object instance to validate.  It cannot be &lt;see langword=&quot;null&quot; /&gt;.">Instance de l'objet à valider.  Ne peut pas être <see langword="null" /></param>
      <param name="items" vsli:raw="An optional set of key/value pairs to make available to consumers.">Jeu facultatif de paires clé/valeur à mettre à disposition des consommateurs.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the service provider and dictionary of service consumers.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> à l'aide du fournisseur de services et du dictionnaire des consommateurs du service.</summary>
      <param name="instance" vsli:raw="The object to validate. This parameter is required.">Objet à valider. Ce paramètre est obligatoire.</param>
      <param name="serviceProvider" vsli:raw="The object that implements the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface. This parameter is optional.">Objet qui implémente l'interface <see cref="T:System.IServiceProvider" />. Ce paramètre est optionnel.</param>
      <param name="items" vsli:raw="A dictionary of key/value pairs to make available to the service consumers. This parameter is optional.">Dictionnaire de paires clé/valeur à mettre à disposition des consommateurs du service. Ce paramètre est optionnel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">Obtient ou définit le nom du membre à valider.</summary>
      <returns vsli:raw="The name of the member to validate.">Nom du membre à valider.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)">
      <summary vsli:raw="Returns the service that provides custom validation.">Retourne le service qui assure la validation personnalisée.</summary>
      <param name="serviceType" vsli:raw="The type of the service to use for validation.">Type de service à utiliser pour la validation.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service is not available.">Instance du service ou <see langword="null" /> si le service n'est pas disponible.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; using a service provider that can return service instances by type when &lt;see cref=&quot;M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)&quot; /&gt; is called.">Initialise le <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> à l’aide d’un fournisseur de services qui peut retourner des instances de service par type quand GetService est appelé.</summary>
      <param name="serviceProvider" vsli:raw="The service provider.">Fournisseur de services.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.Items">
      <summary vsli:raw="Gets the dictionary of key/value pairs that is associated with this context.">Obtient le dictionnaire de paires clé/valeur associé à ce contexte.</summary>
      <returns vsli:raw="The dictionary of the key/value pairs for this context.">Dictionnaire de paires clé/valeur pour ce contexte.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">Obtient ou définit le nom du membre à valider.</summary>
      <returns vsli:raw="The name of the member to validate.">Nom du membre à valider.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance">
      <summary vsli:raw="Gets the object to validate.">Obtient l'objet à valider.</summary>
      <returns vsli:raw="The object to validate.">Objet à valider.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType">
      <summary vsli:raw="Gets the type of the object to validate.">Obtient le type de l'objet à valider.</summary>
      <returns vsli:raw="The type of the object to validate.">Type de l'objet à valider.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationException">
      <summary vsli:raw="Represents the exception that occurs during validation of a data field when the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class is used.">Représente l'exception qui se produit pendant le validation d'un champ de données lorsque la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> est utilisée.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using an error message generated by the system.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> avec un message d'erreur généré par le système.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class by using a validation result, a validation attribute, and the value of the current exception.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> à l'aide d'un résultat de validation, d'un attribut de validation et de la valeur de l'exception en cours.</summary>
      <param name="validationResult" vsli:raw="The list of validation results.">Liste des résultats de validation.</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">Attribut qui a provoqué l'exception actuelle.</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger the validation error.">Valeur de l'objet qui a fait en sorte que l'attribut déclenche l'erreur de validation.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> à l'aide de données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">Objet qui contient les données sérialisées.</param>
      <param name="context" vsli:raw="Context information about the source or destination of the serialized object.">Informations de contexte sur la source ou la destination de l'objet sérialisé.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> avec un message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="A specified message that states the error.">Message spécifié qui indique l'erreur.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message, a validation attribute, and the value of the current exception.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> avec un message d'erreur spécifié, un attribut de validation et la valeur de l'exception actuelle.</summary>
      <param name="errorMessage" vsli:raw="The message that states the error.">Message qui indique l'erreur.</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">Attribut qui a provoqué l'exception actuelle.</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger validation error.">Valeur de l'objet qui a fait en sorte que l'attribut déclenche l'erreur de validation.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message and a collection of inner exception instances.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> avec un message d'erreur spécifié et une collection d'instances d'exceptions internes.</summary>
      <param name="message" vsli:raw="The error message.">Message d'erreur.</param>
      <param name="innerException" vsli:raw="The collection of validation exceptions.">Collection d'exceptions de validation.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute">
      <summary vsli:raw="Gets the instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class that triggered this exception.">Obtient l'instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> qui a déclenché cette exception.</summary>
      <returns vsli:raw="An instance of the validation attribute type that triggered this exception.">Instance du type d'attribut de validation qui a déclenché cette exception.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">Obtient l'instance <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> qui décrit l'erreur de validation.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">Instance <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> qui décrit l'erreur de validation.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.Value">
      <summary vsli:raw="Gets the value of the object that causes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger this exception.">Obtient la valeur de l'objet qui fait en sorte que la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> déclenche cette exception.</summary>
      <returns vsli:raw="The value of the object that caused the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger the validation error.">Valeur de l'objet qui a fait en sorte que la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> déclenche l'erreur de validation.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationResult">
      <summary vsli:raw="Represents a container for the results of a validation request.">Représente un conteneur pour les résultats d'une demande de validation.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using a &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> à l'aide d'un objet <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</summary>
      <param name="validationResult" vsli:raw="The validation result object.">Objet résultat de validation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationResult" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> en utilisant un message d'erreur spécifié.</summary>
      <param name="errorMessage" vsli:raw="The error message.">Message d'erreur.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message and a list of members that have validation errors.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> à l'aide d'un message d'erreur et d'une liste des membres présentant des erreurs de validation.</summary>
      <param name="errorMessage" vsli:raw="The error message.">Message d'erreur.</param>
      <param name="memberNames" vsli:raw="The list of member names that have validation errors.">Liste des noms de membre présentant des erreurs de validation.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage">
      <summary vsli:raw="Gets the error message for the validation.">Obtient le message d'erreur pour la validation.</summary>
      <returns vsli:raw="The error message for the validation.">Message d'erreur pour la validation.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames">
      <summary vsli:raw="Gets the collection of member names that indicate which fields have validation errors.">Obtient la collection des noms de membre qui indiquent quels champs présentent des erreurs de validation.</summary>
      <returns vsli:raw="The collection of member names that indicate which fields have validation errors.">Collection des noms de membre qui indiquent quels champs présentent des erreurs de validation.</returns>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.ValidationResult.Success">
      <summary vsli:raw="Represents the success of the validation (&lt;see langword=&quot;true&quot; /&gt; if validation was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;).">Représente la réussite de la validation (<see langword="true" /> si la validation a réussi ; sinon, <see langword="false" />).</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.ToString">
      <summary vsli:raw="Returns a string representation of the current validation result.">Retourne une chaîne représentant le résultat actuel de la validation.</summary>
      <returns vsli:raw="The current validation result.">Résultat actuel de la validation.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Validator">
      <summary vsli:raw="Defines a helper class that can be used to validate objects, properties, and methods when it is included in their associated &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; attributes.">Définit une classe d'assistance qui peut être utilisée pour valider des objets, des propriétés et des méthodes lorsqu'elle est incluse dans leurs attributs <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> associés.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context and validation results collection.">Détermine si l'objet spécifié est valide à l'aide du contexte de validation et de la collection des résultats de validation.</summary>
      <param name="instance" vsli:raw="The object to validate.">Objet à valider.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexte qui décrit l'objet à valider.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Collection destinée à contenir les validations ayant échoué.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est valide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> ne correspond pas à <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> sur <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, validation results collection, and a value that specifies whether to validate all properties.">Détermine si l'objet spécifié est valide à l'aide du contexte de validation, de la collection des résultats de validation et d'une valeur qui spécifie s'il faut valider toutes les propriétés.</summary>
      <param name="instance" vsli:raw="The object to validate.">Objet à valider.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexte qui décrit l'objet à valider.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Collection destinée à contenir les validations ayant échoué.</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; if &lt;see langword=&quot;false&quot; /&gt;, only required attributes are validated.">
        <see langword="true" /> pour valider toutes les propriétés ; si <see langword="false" />, seuls les attributs requis sont validés.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est valide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> ne correspond pas à <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> sur <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Validates the property.">Valide la propriété.</summary>
      <param name="value" vsli:raw="The value to validate.">Valeur à valider.</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">Contexte qui décrit la propriété à valider.</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">Collection destinée à contenir les validations ayant échoué.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété est valide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ne peut pas être assignée à la propriété.  
ou 
 <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName&quot; /&gt; property of &lt;paramref name=&quot;validationContext&quot; /&gt; is not a valid property.">La propriété <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName" /> de <paramref name="validationContext" /> n’est pas une propriété valide.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Returns a value that indicates whether the specified value is valid with the specified attributes.">Retourne une valeur qui indique si la valeur spécifiée est valide avec les attributs spécifiés.</summary>
      <param name="value" vsli:raw="The value to validate.">Valeur à valider.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexte qui décrit l'objet à valider.</param>
      <param name="validationResults" vsli:raw="A collection to hold failed validations.">Collection qui contient les validations ayant échoué.</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">Attributs de validation.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context.">Détermine si l'objet spécifié est valide à l'aide du contexte de validation.</summary>
      <param name="instance" vsli:raw="The object to validate.">Objet à valider.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexte qui décrit l'objet à valider.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The object is not valid.">L'objet n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> ne correspond pas à <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> sur <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, and a value that specifies whether to validate all properties.">Détermine si l'objet spécifié est valide à l'aide du contexte de validation et d'une valeur qui spécifie s'il faut valider toutes les propriétés.</summary>
      <param name="instance" vsli:raw="The object to validate.">Objet à valider.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexte qui décrit l'objet à valider.</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour valider toutes les propriétés ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is not valid.">
        <paramref name="instance" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> ne correspond pas à <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> sur <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the property.">Valide la propriété.</summary>
      <param name="value" vsli:raw="The value to validate.">Valeur à valider.</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">Contexte qui décrit la propriété à valider.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.">
        <paramref name="value" /> ne peut pas être assignée à la propriété.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is not valid.">Le paramètre <paramref name="value" /> n’est pas valide.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Validates the specified attributes.">Valide les attributs spécifiés.</summary>
      <param name="value" vsli:raw="The value to validate.">Valeur à valider.</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">Contexte qui décrit l'objet à valider.</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">Attributs de validation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;validationContext&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="validationContext" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter does not validate with the &lt;paramref name=&quot;validationAttributes&quot; /&gt; parameter.">Le paramètre <paramref name="value" /> ne valide pas avec le paramètre <paramref name="validationAttributes" />.</exception>
    </member>
  </members>
</doc>