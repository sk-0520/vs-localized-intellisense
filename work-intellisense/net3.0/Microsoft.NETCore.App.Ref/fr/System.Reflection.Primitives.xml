<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Reflection.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Emit.FlowControl">
      <summary>Décrit comment une instruction modifie le flux de contrôle.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Branch">
      <summary>Instruction de branchement.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Break">
      <summary>Instruction de rupture.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Call">
      <summary>Instruction d'appel.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Cond_Branch">
      <summary>Instruction de branchement conditionnel.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Meta">
      <summary>Fournit des informations sur une instruction ultérieure. Par exemple, l'instruction <see langword="Unaligned" /> de <see langword="Reflection.Emit.Opcodes" /> comporte <see langword="FlowControl.Meta" /> et spécifie que l'instruction de pointeur qui suit peut ne pas être alignée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Next">
      <summary>Flux de contrôle normal.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Phi">
      <summary>Cette valeur de l'énumérateur est réservée et ne doit pas être utilisée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Return">
      <summary>Instruction de retour.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Throw">
      <summary>Instruction de levée d'exception.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OpCode">
      <summary>Décrit une instruction en langage intermédiaire (IL, intermediate language).</summary>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.Equals(System.Object)">
      <summary>Vérifie si l'objet donné est égal à ce <see langword="Opcode" />.</summary>
      <param name="obj">Objet à comparer à cet objet.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est une instance de <see langword="Opcode" /> et s'il est égal à cet objet ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)">
      <summary>Détermine si l'instance actuelle est égale à l'objet <see cref="T:System.Reflection.Emit.OpCode" /> spécifié.</summary>
      <param name="obj">
        <see cref="T:System.Reflection.Emit.OpCode" /> à comparer à l'instance en cours.</param>
      <returns>
        <see langword="true" /> si la valeur de <paramref name="obj" /> est égale à la valeur de l'instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.FlowControl">
      <summary>Caractéristiques du contrôle de flux de l’instruction en langage intermédiaire (IL, intermediate language).</summary>
      <returns>Lecture seule. Type de contrôle de flux.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.GetHashCode">
      <summary>Retourne le code de hachage généré pour ce <see langword="Opcode" />.</summary>
      <returns>Code de hachage de cette instance.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Name">
      <summary>Nom de l’instruction en langage intermédiaire (IL, intermediate language).</summary>
      <returns>Lecture seule. Nom de l'instruction IL.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)">
      <summary>Indique si deux structures <see cref="T:System.Reflection.Emit.OpCode" /> sont égales.</summary>
      <param name="a">
        <see cref="T:System.Reflection.Emit.OpCode" /> à comparer à <paramref name="b" />.</param>
      <param name="b">
        <see cref="T:System.Reflection.Emit.OpCode" /> à comparer à <paramref name="a" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="a" /> est égal à <paramref name="b" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)">
      <summary>Indique si deux structures <see cref="T:System.Reflection.Emit.OpCode" /> ne sont pas égales.</summary>
      <param name="a">
        <see cref="T:System.Reflection.Emit.OpCode" /> à comparer à <paramref name="b" />.</param>
      <param name="b">
        <see cref="T:System.Reflection.Emit.OpCode" /> à comparer à <paramref name="a" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="a" /> n'est pas égal à <paramref name="b" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.OpCodeType">
      <summary>Type de l’instruction en langage intermédiaire (IL, intermediate language).</summary>
      <returns>Lecture seule. Type de l’instruction en langage intermédiaire (IL, intermediate language).</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.OperandType">
      <summary>Type d’opérande d’une instruction en langage intermédiaire (IL, intermediate language).</summary>
      <returns>Lecture seule. Type d’opérande d’une instruction IL.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Size">
      <summary>Taille de l’instruction en langage intermédiaire (IL, intermediate language).</summary>
      <returns>Lecture seule. Taille de l'instruction IL.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.StackBehaviourPop">
      <summary>Manière dont l’instruction en langage intermédiaire (IL, intermediate language) dépile la pile.</summary>
      <returns>Lecture seule. Manière dont l'instruction IL dépile la pile.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.StackBehaviourPush">
      <summary>Manière dont l’instruction en langage intermédiaire (IL, intermediate language) exécute un push de l’opérande dans la pile.</summary>
      <returns>Lecture seule. Manière dont l'instruction IL exécute un push de l'opérande dans la pile.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.ToString">
      <summary>Retourne ce <see langword="Opcode" /> en tant que <see cref="T:System.String" />.</summary>
      <returns>Chaîne contenant le nom de cet <see langword="Opcode" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Value">
      <summary>Obtient la valeur numérique de l’instruction en langage intermédiaire (IL).</summary>
      <returns>Lecture seule. Valeur numérique de l'instruction IL.</returns>
    </member>
    <member name="T:System.Reflection.Emit.OpCodes">
      <summary>Fournit les représentations des champs des instructions MSIL (Microsoft Intermediate Language) pour l'émission par les membres de classe <see cref="T:System.Reflection.Emit.ILGenerator" /> (par exemple, <see cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add">
      <summary>Ajoute deux valeurs et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add_Ovf">
      <summary>Ajoute deux entiers, effectue un contrôle de dépassement de capacité et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add_Ovf_Un">
      <summary>Ajoute deux valeurs entières non signées, effectue un contrôle de dépassement de capacité et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.And">
      <summary>Calcule l'opération de bits AND de deux valeurs et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Arglist">
      <summary>Retourne un pointeur non managé vers la liste d'arguments de la méthode actuelle.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Beq">
      <summary>Transfère le contrôle à une instruction cible si les deux valeurs sont égales.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Beq_S">
      <summary>Transfère le contrôle à une instruction cible (forme abrégée) si les deux valeurs sont égales.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge">
      <summary>Transfère le contrôle à une instruction cible si la première valeur est supérieure ou égale à la deuxième.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_S">
      <summary>Transfère le contrôle à une instruction cible (forme abrégée) si la première valeur est supérieure ou égale à la deuxième.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_Un">
      <summary>Transfère le contrôle à une instruction cible si la première valeur est supérieure à la deuxième lors de la comparaison des valeurs entières non signées ou des valeurs float non ordonnées.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_Un_S">
      <summary>Transfère le contrôle à une instruction cible (forme abrégée) si la première valeur est supérieure à la deuxième lors de la comparaison des valeurs entières non signées ou des valeurs float non ordonnées.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt">
      <summary>Transfère le contrôle à une instruction cible si la première valeur est supérieure à la deuxième.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_S">
      <summary>Transfère le contrôle à une instruction cible (forme abrégée) si la première valeur est supérieure à la deuxième.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_Un">
      <summary>Transfère le contrôle à une instruction cible si la première valeur est supérieure à la deuxième lors de la comparaison des valeurs entières non signées ou des valeurs float non ordonnées.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_Un_S">
      <summary>Transfère le contrôle à une instruction cible (forme abrégée) si la première valeur est supérieure à la deuxième lors de la comparaison des valeurs entières non signées ou des valeurs float non ordonnées.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble">
      <summary>Transfère le contrôle à une instruction cible si la première valeur est inférieure ou égale à la deuxième.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_S">
      <summary>Transfère le contrôle à une instruction cible (forme abrégée) si la première valeur est inférieure ou égale à la deuxième.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_Un">
      <summary>Transfère le contrôle à une instruction cible si la première valeur est inférieure ou égale à la deuxième lors de la comparaison des valeurs entières non signées ou des valeurs float non ordonnées.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_Un_S">
      <summary>Transfère le contrôle à une instruction cible (forme abrégée) si la première valeur est inférieure ou égale à la deuxième lors de la comparaison des valeurs entières non signées ou des valeurs float non ordonnées.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt">
      <summary>Transfère le contrôle à une instruction cible si la première valeur est inférieure à la deuxième.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_S">
      <summary>Transfère le contrôle à une instruction cible (forme abrégée) si la première valeur est inférieure à la deuxième.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_Un">
      <summary>Transfère le contrôle à une instruction cible si la première valeur est inférieure à la deuxième lors de la comparaison des valeurs entières non signées ou des valeurs float non ordonnées.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_Un_S">
      <summary>Transfère le contrôle à une instruction cible (forme abrégée) si la première valeur est inférieure à la deuxième lors de la comparaison des valeurs entières non signées ou des valeurs float non ordonnées.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bne_Un">
      <summary>Transfère le contrôle à une instruction cible lorsque deux valeurs entières non signées ou valeurs float non ordonnées ne sont pas égales.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bne_Un_S">
      <summary>Transfère le contrôle à une instruction cible lorsque deux valeurs entières non signées ou valeurs float non ordonnées ne sont pas égales.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Box">
      <summary>Convertit un type valeur en référence d'objet (type <see langword="O" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Br">
      <summary>Transfère le contrôle à une instruction cible de manière non conditionnelle.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Br_S">
      <summary>Transfère le contrôle à une instruction cible de manière non conditionnelle (forme abrégée).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Break">
      <summary>Active l'infrastructure CLI de façon à informer le débogueur qu'un point d'arrêt a été dépassé.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brfalse">
      <summary>Transfère le contrôle à une instruction cible si <paramref name="value" /> est <see langword="false" />, une référence null (<see langword="Nothing" /> en Visual Basic) ou zéro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brfalse_S">
      <summary>Transfère le contrôle à une instruction cible si <paramref name="value" /> est <see langword="false" />, une référence null ou zéro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brtrue">
      <summary>Transfère le contrôle à une instruction cible si <paramref name="value" /> est <see langword="true" />, non null ou différent de zéro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brtrue_S">
      <summary>Transfère le contrôle à une instruction cible (forme abrégée) si <paramref name="value" /> est <see langword="true" />, non null ou différent de zéro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Call">
      <summary>Appelle la méthode indiquée par le descripteur de méthode passé.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Calli">
      <summary>Appelle la méthode indiquée dans la pile d'évaluation (sous la forme d'un pointeur vers un point d'entrée) avec les arguments décrits par une convention d'appel.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Callvirt">
      <summary>Appelle une méthode à liaison tardive sur un objet, en exécutant un push de la valeur de retour dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Castclass">
      <summary>Tente d'effectuer un cast d'un objet passé par référence en classe spécifiée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ceq">
      <summary>Compare deux valeurs. Si elles sont égales, la valeur entière 1 (<see langword="(int32" />) fait l'objet d'un push dans la pile d'évaluation ; sinon, le push est exécuté sur la valeur 0 (<see langword="int32" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cgt">
      <summary>Compare deux valeurs. Si la première valeur est supérieure à la deuxième, la valeur entière 1 (<see langword="(int32" />) fait l'objet d'un push dans la pile d'évaluation ; sinon, le push est exécuté sur la valeur 0 (<see langword="int32" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cgt_Un">
      <summary>Compare deux valeurs non signées ou non ordonnées. Si la première valeur est supérieure à la deuxième, la valeur entière 1 (<see langword="(int32" />) fait l'objet d'un push dans la pile d'évaluation ; sinon, le push est exécuté sur la valeur 0 (<see langword="int32" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ckfinite">
      <summary>Lève <see cref="T:System.ArithmeticException" /> si la valeur n'est pas un nombre fini.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Clt">
      <summary>Compare deux valeurs. Si la première valeur est inférieure à la deuxième, la valeur entière 1 (<see langword="(int32" />) fait l'objet d'un push dans la pile d'évaluation ; sinon, le push est exécuté sur la valeur 0 (<see langword="int32" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Clt_Un">
      <summary>Compare les valeurs non signées ou non ordonnées <paramref name="value1" /> et <paramref name="value2" />. Si <paramref name="value1" /> est inférieur à <paramref name="value2" />, la valeur entière 1 (<see langword="(int32" />) fait alors l'objet d'un push dans la pile d'évaluation ; sinon, le push est exécuté sur la valeur 0 (<see langword="int32" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Constrained">
      <summary>Contraint le type sur lequel un appel à une méthode virtuelle est effectué.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I1">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="int8" /> et l'étend (remplit) à <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I2">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="int16" /> et l'étend (remplit) à <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I4">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I8">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I">
      <summary>Convertit la valeur signée située en haut de la pile d'évaluation en <see langword="native int" /> signé, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I_Un">
      <summary>Convertit la valeur non signée située en haut de la pile d'évaluation en <see langword="native int" /> signé, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1">
      <summary>Convertit la valeur signée située en haut de la pile d’évaluation en <see langword="int8" /> signé et l’étend à <see langword="int32" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1_Un">
      <summary>Convertit la valeur non signée située en haut de la pile d'évaluation en <see langword="int8" /> signé et l'étend à <see langword="int32" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2">
      <summary>Convertit la valeur signée située en haut de la pile d'évaluation en <see langword="int16" /> signé et l'étend à <see langword="int32" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2_Un">
      <summary>Convertit la valeur non signée située en haut de la pile d'évaluation en <see langword="int16" /> signé et l'étend à <see langword="int32" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4">
      <summary>Convertit la valeur signée située en haut de la pile d'évaluation en <see langword="int32" /> signé, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4_Un">
      <summary>Convertit la valeur non signée située en haut de la pile d'évaluation en <see langword="int32" /> signé, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8">
      <summary>Convertit la valeur signée située en haut de la pile d'évaluation en <see langword="int64" /> signé, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8_Un">
      <summary>Convertit la valeur non signée située en haut de la pile d'évaluation en <see langword="int64" /> signé, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U">
      <summary>Convertit la valeur signée située en haut de la pile d'évaluation en <see langword="unsigned native int" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U_Un">
      <summary>Convertit la valeur non signée située en haut de la pile d'évaluation en <see langword="unsigned native int" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1">
      <summary>Convertit la valeur signée située en haut de la pile d'évaluation en <see langword="unsigned int8" /> et l'étend à <see langword="int32" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1_Un">
      <summary>Convertit la valeur non signée située en haut de la pile d'évaluation en <see langword="unsigned int8" /> et l'étend à <see langword="int32" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2">
      <summary>Convertit la valeur signée située en haut de la pile d'évaluation en <see langword="unsigned int16" /> et l'étend à <see langword="int32" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2_Un">
      <summary>Convertit la valeur non signée située en haut de la pile d'évaluation en <see langword="unsigned int16" /> et l'étend à <see langword="int32" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4">
      <summary>Convertit la valeur signée située en haut de la pile d'évaluation en <see langword="unsigned int32" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4_Un">
      <summary>Convertit la valeur non signée située en haut de la pile d'évaluation en <see langword="unsigned int32" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8">
      <summary>Convertit la valeur signée située en haut de la pile d'évaluation en <see langword="unsigned int64" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8_Un">
      <summary>Convertit la valeur non signée située en haut de la pile d'évaluation en <see langword="unsigned int64" />, en levant <see cref="T:System.OverflowException" /> en cas de dépassement de capacité.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R_Un">
      <summary>Convertit la valeur entière non signée située en haut de la pile d'évaluation en <see langword="float32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R4">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="float32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R8">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="float64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="unsigned native int" /> et l'étend à <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U1">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="unsigned int8" /> et l'étend à <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U2">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="unsigned int16" /> et l'étend à <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U4">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="unsigned int32" /> et l'étend à <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U8">
      <summary>Convertit la valeur située en haut de la pile d'évaluation en <see langword="unsigned int64" /> et l'étend à <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cpblk">
      <summary>Copie un nombre d'octets spécifié d'une adresse source vers une adresse de destination.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cpobj">
      <summary>Copie le type valeur situé à l'adresse d'un objet (type <see langword="&amp;" />, <see langword="" /> ou <see langword="native int" />) à l'adresse de l'objet de destination (type <see langword="&amp;" />, <see langword="" /> ou <see langword="native int" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Div">
      <summary>Divise une valeur par une autre et exécute un push du résultat en tant que valeur à virgule flottante (type <see langword="F" />) ou quotient (type <see langword="int32" />) dans la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Div_Un">
      <summary>Divise une valeur entière non signée par une autre et exécute un push du résultat (<see langword="int32" />) dans la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Dup">
      <summary>Copie la valeur actuelle la plus haute dans la pile d'évaluation et exécute un push de la copie dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Endfilter">
      <summary>Transfère à nouveau le contrôle de la clause <see langword="filter" /> d'une exception au gestionnaire d'exceptions CLI.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Endfinally">
      <summary>Transfère à nouveau le contrôle de la clause <see langword="fault" /> ou <see langword="finally" /> d'un bloc d'exception au gestionnaire d'exceptions CLI.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Initblk">
      <summary>Initialise un bloc de mémoire spécifié situé à une adresse spécifique en utilisant une taille et une valeur initiale données.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Initobj">
      <summary>Initialise tous les champs du type valeur figurant à l'adresse spécifiée en utilisant la référence null ou la valeur 0 du type primitif qui convient.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Isinst">
      <summary>Vérifie si une référence d'objet (type <see langword="O" />) est une instance d'une classe particulière.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Jmp">
      <summary>Quitte la méthode actuelle et passe à la méthode spécifiée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg">
      <summary>Charge un argument (référencé par une valeur d'index spécifiée) dans la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_0">
      <summary>Charge l'argument à l'index 0 dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_1">
      <summary>Charge l’argument à l’index 1 dans la pile d’évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_2">
      <summary>Charge l’argument à l’index 2 dans la pile d’évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_3">
      <summary>Charge l’argument à l’index 3 dans la pile d’évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_S">
      <summary>Charge l'argument (référencé par un index sous la forme abrégée) dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarga">
      <summary>Charge une adresse d'argument dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarga_S">
      <summary>Charge une adresse d'argument, sous la forme abrégée, dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4">
      <summary>Exécute un push d'une valeur fournie de type <see langword="int32" /> dans la pile d'évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_0">
      <summary>Exécute un push de la valeur entière 0 dans la pile d'évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_1">
      <summary>Exécute un envoi (push) de la valeur entière 1 dans la pile d’évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_2">
      <summary>Exécute un envoi (push) de la valeur entière 2 dans la pile d’évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_3">
      <summary>Exécute un envoi (push) de la valeur entière 3 dans la pile d’évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_4">
      <summary>Exécute un envoi (push) de la valeur entière 4 dans la pile d’évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_5">
      <summary>Exécute un envoi (push) de la valeur entière 5 dans la pile d’évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_6">
      <summary>Exécute un envoi (push) de la valeur entière 6 dans la pile d’évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_7">
      <summary>Exécute un envoi (push) de la valeur entière 7 dans la pile d’évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_8">
      <summary>Exécute un envoi (push) de la valeur entière 8 dans la pile d’évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_M1">
      <summary>Exécute un envoi (push) de la valeur entière -1 dans la pile d’évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_S">
      <summary>Exécute un push de la valeur fournie <see langword="int8" /> dans la pile d'évaluation en tant que <see langword="int32" /> (forme abrégée).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I8">
      <summary>Exécute un push d'une valeur fournie de type <see langword="int64" /> dans la pile d'évaluation en tant que <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_R4">
      <summary>Exécute un push d'une valeur fournie de type <see langword="float32" /> dans la pile d'évaluation en tant que type <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_R8">
      <summary>Exécute un push d'une valeur fournie de type <see langword="float64" /> dans la pile d'évaluation en tant que type <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem">
      <summary>Charge l'élément à un index de tableau spécifié en haut de la pile d'évaluation en tant que type spécifié par l'instruction.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I">
      <summary>Charge l'élément avec le type <see langword="native int" /> à un index de tableau spécifié en haut de la pile d'évaluation en tant que <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I1">
      <summary>Charge l'élément avec le type <see langword="int8" /> à un index de tableau spécifié en haut de la pile d'évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I2">
      <summary>Charge l'élément avec le type <see langword="int16" /> à un index de tableau spécifié en haut de la pile d'évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I4">
      <summary>Charge l'élément avec le type <see langword="int32" /> à un index de tableau spécifié en haut de la pile d'évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I8">
      <summary>Charge l'élément avec le type <see langword="int64" /> à un index de tableau spécifié en haut de la pile d'évaluation en tant que <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_R4">
      <summary>Charge l'élément avec le type <see langword="float32" /> à un index de tableau spécifié en haut de la pile d'évaluation en tant que type <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_R8">
      <summary>Charge l'élément avec le type <see langword="float64" /> à un index de tableau spécifié en haut de la pile d'évaluation en tant que type <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_Ref">
      <summary>Charge l'élément contenant une référence d'objet à un index de tableau spécifié en haut de la pile d'évaluation en tant que type <see langword="O" /> (référence d'objet).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U1">
      <summary>Charge l'élément avec le type <see langword="unsigned int8" /> à un index de tableau spécifié en haut de la pile d'évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U2">
      <summary>Charge l'élément avec le type <see langword="unsigned int16" /> à un index de tableau spécifié en haut de la pile d'évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U4">
      <summary>Charge l'élément avec le type <see langword="unsigned int32" /> à un index de tableau spécifié en haut de la pile d'évaluation en tant que <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelema">
      <summary>Charge l'adresse de l'élément de tableau situé à un index de tableau spécifié en haut de la pile d'évaluation en tant que type <see langword="&amp;" /> (pointeur managé).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldfld">
      <summary>Recherche la valeur d'un champ dans l'objet dont la référence est actuellement située dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldflda">
      <summary>Recherche l'adresse d'un champ dans l'objet dont la référence est actuellement située dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldftn">
      <summary>Exécute un push d'un pointeur non managé (type <see langword="native int" />) sur le code natif implémentant une méthode spécifique dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I">
      <summary>Charge indirectement une valeur de type <see langword="native int" /> en tant que <see langword="native int" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I1">
      <summary>Charge indirectement une valeur de type <see langword="int8" /> en tant que <see langword="int32" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I2">
      <summary>Charge indirectement une valeur de type <see langword="int16" /> en tant que <see langword="int32" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I4">
      <summary>Charge indirectement une valeur de type <see langword="int32" /> en tant que <see langword="int32" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I8">
      <summary>Charge indirectement une valeur de type <see langword="int64" /> en tant que <see langword="int64" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_R4">
      <summary>Charge indirectement une valeur de type <see langword="float32" /> en tant que type <see langword="F" /> (float) dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_R8">
      <summary>Charge indirectement une valeur de type <see langword="float64" /> en tant que type <see langword="F" /> (float) dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_Ref">
      <summary>Charge indirectement une référence d'objet en tant que type <see langword="O" /> (référence d'objet) dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U1">
      <summary>Charge indirectement une valeur de type <see langword="unsigned int8" /> en tant que <see langword="int32" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U2">
      <summary>Charge indirectement une valeur de type <see langword="unsigned int16" /> en tant que <see langword="int32" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U4">
      <summary>Charge indirectement une valeur de type <see langword="unsigned int32" /> en tant que <see langword="int32" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldlen">
      <summary>Exécute un push du nombre d'éléments d'un tableau unidimensionnel de base zéro dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc">
      <summary>Charge la variable locale à un index spécifique dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_0">
      <summary>Charge la variable locale à l'index 0 dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_1">
      <summary>Charge la variable locale à l’index 1 dans la pile d’évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_2">
      <summary>Charge la variable locale à l’index 2 dans la pile d’évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_3">
      <summary>Charge la variable locale à l’index 3 dans la pile d’évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_S">
      <summary>Charge la variable locale à un index spécifique dans la pile d'évaluation (forme abrégée).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloca">
      <summary>Charge l'adresse de la variable locale à un index spécifique dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloca_S">
      <summary>Charge l'adresse de la variable locale à un index spécifique dans la pile d'évaluation (forme abrégée).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldnull">
      <summary>Exécute un push d'une référence null (type <see langword="O" />) dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldobj">
      <summary>Copie l'objet de type valeur sur lequel pointe une adresse en haut de la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldsfld">
      <summary>Exécute un push de la valeur d'un champ statique dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldsflda">
      <summary>Exécute un push de l'adresse d'un champ statique dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldstr">
      <summary>Exécute un push d'une nouvelle référence d'objet à un littéral de chaîne stocké dans les métadonnées.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldtoken">
      <summary>Convertit un jeton de métadonnées en sa représentation runtime et exécute un push de cette représentation dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldvirtftn">
      <summary>Exécute un push d'un pointeur non managé (type <see langword="native int" />) sur le code natif implémentant une méthode virtuelle spécifique associée à un objet spécifié dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Leave">
      <summary>Quitte une région de code protégée, en transférant le contrôle à une instruction cible spécifique de manière non conditionnelle.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Leave_S">
      <summary>Quitte une région de code protégée, en transférant le contrôle à une instruction cible (forme abrégée) de manière non conditionnelle.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Localloc">
      <summary>Alloue un certain nombre d'octets à partir du pool de mémoires dynamique local et exécute un push de l'adresse (pointeur transitoire, type <see langword="*" />) du premier octet alloué dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mkrefany">
      <summary>Exécute un push d'une référence typée à une instance d'un type spécifique dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul">
      <summary>Multiplie deux valeurs et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul_Ovf">
      <summary>Multiplie deux valeurs entières, effectue un contrôle de dépassement de capacité et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul_Ovf_Un">
      <summary>Multiplie deux valeurs entières non signées, effectue un contrôle de dépassement de capacité et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Neg">
      <summary>Met en négatif une valeur et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Newarr">
      <summary>Exécute un push dans la pile d'évaluation sur une référence d'objet à un nouveau tableau unidimensionnel de base zéro dont les éléments sont d'un type spécifique.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Newobj">
      <summary>Crée un nouvel objet ou une nouvelle instance d'un type valeur, en exécutant un push d'une référence d'objet (type <see langword="O" />) dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Nop">
      <summary>Remplit l'espace si les opcodes sont corrigés. Aucune opération significative n'est exécutée bien qu'un cycle de traitement puisse être utilisé.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Not">
      <summary>Calcule le complément de bits de la valeur entière située en haut de la pile et exécute un push du résultat dans la pile d'évaluation en tant que type identique.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Or">
      <summary>Calcule le complément de bits de deux valeurs entières situées en haut de la pile et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Pop">
      <summary>Supprime la valeur actuellement située en haut de la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix1">
      <summary>Cette instruction est rɳervée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix2">
      <summary>Cette instruction est rɳervée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix3">
      <summary>Cette instruction est rɳervée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix4">
      <summary>Cette instruction est rɳervée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix5">
      <summary>Cette instruction est rɳervée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix6">
      <summary>Cette instruction est rɳervée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix7">
      <summary>Cette instruction est rɳervée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefixref">
      <summary>Cette instruction est rɳervée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Readonly">
      <summary>Spécifie que l'opération d'adresse de tableau suivante n'exécute aucun contrôle de type au moment de l'exécution et qu'il retourne un pointeur managé dont la mutabilité est restreinte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Refanytype">
      <summary>Récupère le jeton de type incorporé dans une référence typée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Refanyval">
      <summary>Récupère l'adresse (type <see langword="&amp;" />) incorporée dans une référence typée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rem">
      <summary>Divise une valeur par une autre et exécute un push du reste dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rem_Un">
      <summary>Divise une valeur non signée par une autre et exécute un push du reste dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ret">
      <summary>Effectue un retour à partir de la méthode actuelle en exécutant un push d'une valeur de retour (si elle existe) à partir de la pile d'évaluation de l'appelé dans celle de l'appelant.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rethrow">
      <summary>Lève de nouveau l'exception en cours.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shl">
      <summary>Déplace une valeur entière vers la gauche (décalage des zéros) d'un nombre de bits spécifié, en exécutant un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shr">
      <summary>Déplace une valeur entière (dans le signe) vers la droite d'un nombre de bits spécifié, en exécutant un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shr_Un">
      <summary>Déplace une valeur entière non signée (décalage des zéros) vers la droite d'un nombre de bits spécifié, en exécutant un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sizeof">
      <summary>Exécute un push de la taille (en octets) d'un type valeur fourni dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Starg">
      <summary>Stocke la valeur en haut de la pile d'évaluation à l'emplacement d'argument situé à un index spécifié.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Starg_S">
      <summary>Stocke la valeur en haut de la pile d'évaluation à l'emplacement d'argument situé à un index spécifié (forme abrégée).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem">
      <summary>Remplace l'élément de tableau à un index donné par la valeur de la pile d'évaluation dont le type est spécifié dans l'instruction.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I">
      <summary>Remplace l'élément de tableau situé à un index donné par la valeur <see langword="native int" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I1">
      <summary>Remplace l'élément de tableau situé à un index donné par la valeur <see langword="int8" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I2">
      <summary>Remplace l'élément de tableau situé à un index donné par la valeur <see langword="int16" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I4">
      <summary>Remplace l'élément de tableau situé à un index donné par la valeur <see langword="int32" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I8">
      <summary>Remplace l'élément de tableau situé à un index donné par la valeur <see langword="int64" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_R4">
      <summary>Remplace l'élément de tableau situé à un index donné par la valeur <see langword="float32" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_R8">
      <summary>Remplace l'élément de tableau situé à un index donné par la valeur <see langword="float64" /> dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_Ref">
      <summary>Remplace l'élément de tableau situé à un index donné par la valeur de référence d'objet (type <see langword="O" />) dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stfld">
      <summary>Remplace la valeur stockée dans le champ d'une référence d'objet ou d'un pointeur par une nouvelle valeur.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I">
      <summary>Stocke une valeur de type <see langword="native int" /> à une adresse fournie.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I1">
      <summary>Stocke une valeur de type <see langword="int8" /> à une adresse fournie.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I2">
      <summary>Stocke une valeur de type <see langword="int16" /> à une adresse fournie.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I4">
      <summary>Stocke une valeur de type <see langword="int32" /> à une adresse fournie.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I8">
      <summary>Stocke une valeur de type <see langword="int64" /> à une adresse fournie.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_R4">
      <summary>Stocke une valeur de type <see langword="float32" /> à une adresse fournie.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_R8">
      <summary>Stocke une valeur de type <see langword="float64" /> à une adresse fournie.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_Ref">
      <summary>Stocke une valeur de référence d'objet à une adresse fournie.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc">
      <summary>Dépile la valeur actuelle du haut de la pile d'évaluation et la stocke dans la liste de variables locales à un index spécifié.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_0">
      <summary>Dépile la valeur actuelle du haut de la pile d'évaluation et la stocke dans la liste de variables locales à l'index 0.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_1">
      <summary>Dépile la valeur actuelle du haut de la pile d’évaluation et la stocke dans la liste de variables locales à l’index 1.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_2">
      <summary>Dépile la valeur actuelle du haut de la pile d’évaluation et la stocke dans la liste de variables locales à l’index 2.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_3">
      <summary>Dépile la valeur actuelle du haut de la pile d’évaluation et la stocke dans la liste de variables locales à l’index 3.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_S">
      <summary>Dépile la valeur actuelle du haut de la pile d'évaluation et la stocke dans la liste de variables locales à <paramref name="index" /> (forme abrégée).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stobj">
      <summary>Copie une valeur d'un type spécifié de la pile d'évaluation vers une adresse mémoire fournie.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stsfld">
      <summary>Remplace la valeur d'un champ statique par une valeur de la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub">
      <summary>Soustrait une valeur d'une autre et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub_Ovf">
      <summary>Soustrait une valeur entière d'une autre, effectue un contrôle de dépassement de capacité et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub_Ovf_Un">
      <summary>Soustrait une valeur entière non signée d'une autre, effectue un contrôle de dépassement de capacité et exécute un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Switch">
      <summary>Implémente un tableau de saut.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Tailcall">
      <summary>Exécute une instruction d'appel de méthode suffixée afin que le frame de pile de la méthode actuelle soit supprimé avant cette exécution.</summary>
    </member>
    <member name="M:System.Reflection.Emit.OpCodes.TakesSingleByteArgument(System.Reflection.Emit.OpCode)">
      <summary>Retourne true ou false si l'opcode fourni utilise un argument à octet unique.</summary>
      <param name="inst">Instance d'un objet Opcode.</param>
      <returns>
        <see langword="true" /> ou <see langword="false" />.</returns>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Throw">
      <summary>Lève l'objet exception actuellement situé dans la pile d'évaluation.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unaligned">
      <summary>Indique qu'une adresse actuellement située en haut de la pile d'évaluation peut ne pas être alignée avec la taille naturelle de l'instruction <see langword="ldind" />, <see langword="stind" />, <see langword="ldfld" />, <see langword="stfld" />, <see langword="ldobj" />, <see langword="stobj" />, <see langword="initblk" /> ou <see langword="cpblk" /> qui suit immédiatement.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unbox">
      <summary>Convertit la représentation boxed d'un type valeur en forme unboxed.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unbox_Any">
      <summary>Convertit la représentation boxed d'un type spécifié dans l'instruction en forme unboxed.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Volatile">
      <summary>Spécifie qu'une adresse actuellement située en haut de la pile d'évaluation peut être volatile et que les résultats de la lecture de cet emplacement ne peuvent pas être mis en cache ou que plusieurs magasins situés à cet emplacement ne peuvent pas être supprimés.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Xor">
      <summary>Calcule l'opération de bits XOR des deux premières valeurs de la pile d'évaluation en exécutant un push du résultat dans la pile d'évaluation.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OpCodeType">
      <summary>Décrit les types d'instructions MSIL (Microsoft Intermediate Language).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Annotation">
      <summary>Cette valeur de l'énumérateur est réservée et ne doit pas être utilisée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Macro">
      <summary>Il s'agit d'instructions MSIL (Microsoft Intermediate Language) utilisées pour représenter d'autres instructions MSIL. Par exemple, <see langword="ldarg.0" /> représente l'instruction <see langword="ldarg" /> avec un argument de 0.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Nternal">
      <summary>Décrit une instruction MSIL (Microsoft Intermediate Language) réservée.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Objmodel">
      <summary>Décrit une instruction MSIL qui s'applique aux objets.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Prefix">
      <summary>Décrit une instruction de préfixe qui modifie le comportement de l'instruction suivante.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Primitive">
      <summary>Décrit une instruction intégrée.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OperandType">
      <summary>Décrit le type d'opérande d'une instruction MSIL (Microsoft Intermediate Language).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineBrTarget">
      <summary>L'opérande est une cible de branchement entier 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineField">
      <summary>L'opérande est un jeton de métadonnées 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineI">
      <summary>L'opérande est un entier 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineI8">
      <summary>L’opérande est un entier 64 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineMethod">
      <summary>L'opérande est un jeton de métadonnées 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineNone">
      <summary>Aucun opérande.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlinePhi">
      <summary>L'opérande est réservé et ne doit pas être utilisé.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineR">
      <summary>L'opérande est un nombre à virgule flottante IEEE 64 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineSig">
      <summary>L'opérande est un jeton de signature de métadonnées 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineString">
      <summary>L'opérande est un jeton de chaîne de métadonnées 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineSwitch">
      <summary>L'opérande est l'argument entier 32 bits d'une instruction switch.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineTok">
      <summary>L'opérande est un jeton <see langword="FieldRef" />, <see langword="MethodRef" /> ou <see langword="TypeRef" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineType">
      <summary>L'opérande est un jeton de métadonnées 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineVar">
      <summary>L'opérande est un entier 16 bits contenant le nombre ordinal d'une variable locale ou d'un argument.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineBrTarget">
      <summary>L'opérande est une cible de branchement entier 8 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineI">
      <summary>L'opérande est un entier 8 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineR">
      <summary>L’opérande est un nombre à virgule flottante IEEE 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineVar">
      <summary>L'opérande est un entier 8 bits contenant le nombre ordinal d'une variable locale ou d'un argument.</summary>
    </member>
    <member name="T:System.Reflection.Emit.PackingSize">
      <summary>Spécifie un ou deux facteurs qui déterminent l'alignement de mémoire des champs lorsqu'un type est marshalé.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size1">
      <summary>La taille de compactage est égale à 1 octet.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size128">
      <summary>La taille de compactage est égale à 128 octets.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size16">
      <summary>La taille de compression est égale à 16 octets.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size2">
      <summary>La taille de compression est égale à 2 octets.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size32">
      <summary>La taille de compression est égale à 32 octets.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size4">
      <summary>La taille de compression est égale à 4 octets.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size64">
      <summary>La taille de compression est égale à 64 octets.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size8">
      <summary>La taille de compression est égale à 8 octets.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Unspecified">
      <summary>La taille de compactage n'est pas spécifiée.</summary>
    </member>
    <member name="T:System.Reflection.Emit.StackBehaviour">
      <summary>Décrit comment les valeurs font l'objet d'un push ou sont dépilées sur une pile ou à partir de cette dernière.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop0">
      <summary>Aucune valeur n'est dépilée de la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop1">
      <summary>Dépile une valeur de la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop1_pop1">
      <summary>Dépile une valeur de la pile pour les premier et deuxième opérandes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi">
      <summary>Dépile un entier 32 bits de la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_pop1">
      <summary>Dépile un entier 32 bits de la pile pour les premier et deuxième opérandes, respectivement.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi">
      <summary>Dépile un entier 32 bits de la pile pour les premier et deuxième opérandes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi_popi">
      <summary>Dépile un entier 32 bits de la pile pour le premier, le deuxième et le troisième opérande.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi8">
      <summary>Dépile un entier 32 bits de la pile pour le premier opérande et un entier 64 bits pour le deuxième opérande.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popr4">
      <summary>Dépile un entier 32 bits et un nombre à virgule flottante 32 bits de la pile pour les premier et deuxième opérandes, respectivement.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popr8">
      <summary>Dépile un entier 32 bits de la pile pour le premier opérande et un nombre à virgule flottante 64 bits pour le deuxième opérande.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref">
      <summary>Dépile une référence de la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_pop1">
      <summary>Dépile une référence et une valeur de la pile pour les premier et deuxième opérandes, respectivement.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi">
      <summary>Dépile une référence et un entier 32 bits de la pile pour les premier et deuxième opérandes, respectivement.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_pop1">
      <summary>Dépile une réference de la pile pour le premier opérande, une valeur pour le deuxième opérande et un entier 32 bits pour le troisième opérande.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi">
      <summary>Dépile une référence de la pile pour le premier opérande et une valeur pour les deuxième et troisième opérandes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi8">
      <summary>Dépile une référence de la pile pour le premier opérande, une valeur pour le deuxième opérande et un entier 64 bits pour le troisième opérande.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr4">
      <summary>Dépile une réference de la pile pour le premier opérande, une valeur pour le deuxième opérande et un entier 32 bits pour le troisième opérande.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr8">
      <summary>Dépile une référence de la pile pour le premier opérande, une valeur pour le deuxième opérande et un nombre à virgule flottante 64 bits pour le troisième opérande.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popref">
      <summary>Dépile une référence de la pile pour le premier opérande, une valeur pour le deuxième opérande et une référence pour le troisième opérande.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push0">
      <summary>Aucune valeur ne fait l'objet d'un push sur la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push1">
      <summary>Exécute un push sur une valeur sur la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push1_push1">
      <summary>Exécute un push sur une valeur sur la pile pour le premier et le deuxième opérande.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushi">
      <summary>Exécute un push sur un entier 32 bits sur la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushi8">
      <summary>Exécute un envoi (push) d’un entier 64 bits sur la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushr4">
      <summary>Exécute un push sur un nombre à virgule flottante 32 bits sur la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushr8">
      <summary>Exécute un envoi (push) d’un nombre à virgule flottante 64 bits sur la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushref">
      <summary>Exécute un push sur une référence sur la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Varpop">
      <summary>Dépile une référence de la pile.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Varpush">
      <summary>Exécute un push sur une référence sur la pile.</summary>
    </member>
  </members>
</doc>